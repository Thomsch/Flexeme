digraph  {
n0 [label="Entry HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4", cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)"];
n1 [label="Exit HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4", cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)"];
d41 [label="return stateMachine.ChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", span="110-110", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", color=green, community=0];
d34 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d40 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="109-109", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d42 [label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d44 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])"];
d35 [label="jobId == null", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d37 [label="state == null", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d45 [label="Hangfire.BackgroundJobClient", span=""];
d39 [label="var connection = _storage.GetConnection()", span="107-107", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d43 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)"];
d36 [label="throw new ArgumentNullException(''jobId'');", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d38 [label="throw new ArgumentNullException(''state'');", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)"];
d13 [label="_storage = storage", span="74-74", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d14 [label="_stateMachineFactory = stateMachineFactory", span="75-75", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d15 [label="_process = process", span="76-76", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d23 [label="var connection = _storage.GetConnection()", span="87-87", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d24 [label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d25 [label="_process.Run(context)", span="90-90", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d30 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()"];
d17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d6 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d11 [label="process == null", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d16 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d21 [label="state == null", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d18 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d31 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)"];
d26 [label="return context.JobId;", span="92-92", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d32 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)"];
d8 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d12 [label="throw new ArgumentNullException(''process'');", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d20 [label="throw new ArgumentNullException(''job'');", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d22 [label="throw new ArgumentNullException(''state'');", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d7 [label="storage == null", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d9 [label="stateMachineFactory == null", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)"];
d19 [label="job == null", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d29 [label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="97-97", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d27 [label=Exception, span="95-95", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)"];
d33 [label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)"];
m0_31 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="189-189", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs"];
m0_164 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="189-189", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs"];
m0_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobClientFacts.cs"];
m0_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobClientFacts.cs"];
m0_37 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientFacts.cs"];
m0_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="BackgroundJobClientFacts.cs"];
m0_60 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="BackgroundJobClientFacts.cs"];
m0_104 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="BackgroundJobClientFacts.cs"];
m0_32 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m0_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m0_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m0_35 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m0_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClientFacts.cs"];
m0_77 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m0_78 [label="var client = CreateClient()", span="86-86", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m0_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="88-89", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m0_80 [label="Assert.Equal(''job'', exception.ParamName)", span="91-91", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m0_81 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m0_56 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m0_57 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m0_58 [label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m0_59 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m0_95 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_96 [label="var client = CreateClient()", span="108-108", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_97 [label="client.Create(_job, _state.Object)", span="110-110", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_98 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="112-112", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_99 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="BackgroundJobClientFacts.cs"];
m0_127 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="BackgroundJobClientFacts.cs"];
m0_112 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobClientFacts.cs"];
m0_105 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="116-116", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_106 [label="var client = CreateClient()", span="118-118", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_107 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="119-120", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_108 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="122-123", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_109 [label="Assert.NotNull(exception.InnerException)", span="125-125", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_110 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="126-126", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_111 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="116-116", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m0_136 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientFacts.cs"];
m0_137 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m0_138 [label="var client = CreateClient()", span="154-154", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m0_139 [label="client.ChangeState(''job-id'', _state.Object, null)", span="156-156", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m0_140 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="158-161", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m0_141 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m0_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobClientFacts.cs"];
m0_64 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClientFacts.cs"];
m0_42 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m0_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m0_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m0_45 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m0_145 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="BackgroundJobClientFacts.cs"];
m0_161 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_20 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_21 [label="x.GetConnection()", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_22 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_25 [label="x.Create(_connection.Object)", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_29 [label="Method()", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_38 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_39 [label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_40 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_53 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_54 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_55 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_61 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_62 [label="new BackgroundJobClient()", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_63 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_69 [label="new BackgroundJobClient(_storage.Object)", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_74 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_76 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_84 [label="client.Create(null, _state.Object)", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_83 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_85 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_92 [label="client.Create(_job, null)", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_91 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_93 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_101 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_102 [label="x.Run(It.IsNotNull<CreateContext>())", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_103 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_117 [label="client.Create(_job, _state.Object)", span="123-123", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_113 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_116 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_114 [label="x.Run(It.IsAny<CreateContext>())", span="119-119", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_115 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_118 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_125 [label="client.ChangeState(null, _state.Object, null)", span="135-135", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_124 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_126 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_134 [label="client.ChangeState(''jobId'', null, null)", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_133 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_135 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_142 [label="Entry lambda expression", span="158-161", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_143 [label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="158-161", cluster="lambda expression", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m0_144 [label="Exit lambda expression", span="158-161", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_151 [label="Entry lambda expression", span="171-174", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_152 [label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="171-174", cluster="lambda expression", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m0_153 [label="Exit lambda expression", span="171-174", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_162 [label="x.TryToChangeState(''job-id'', _state.Object, null)", span="180-180", cluster="lambda expression", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m0_163 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m0_86 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_87 [label="var client = CreateClient()", span="97-97", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_88 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="99-100", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_89 [label="Assert.Equal(''state'', exception.ParamName)", span="102-102", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_90 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_82 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="193-193", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m0_165 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="195-195", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m0_166 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="193-193", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m0_100 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientFacts.cs"];
m0_65 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m0_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m0_67 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m0_119 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="130-130", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m0_120 [label="var client = CreateClient()", span="132-132", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m0_121 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="134-135", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m0_122 [label="Assert.Equal(''jobId'', exception.ParamName)", span="137-137", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m0_123 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="130-130", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m0_0 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_1 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_3 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_4 [label="_stateMachine = new Mock<IStateMachine>()", span="26-26", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_6 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_7 [label="_process = new Mock<IJobCreationProcess>()", span="31-31", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_8 [label="_state = new Mock<IState>()", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_9 [label="_job = Job.FromExpression(() => Method())", span="33-33", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_10 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m0_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="BackgroundJobClientFacts.cs"];
m0_49 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m0_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m0_51 [label="Assert.Equal(''process'', exception.ParamName)", span="60-60", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m0_52 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m0_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobClientFacts.cs"];
m0_146 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="165-165", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m0_147 [label="var client = CreateClient()", span="167-167", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m0_148 [label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="169-169", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m0_149 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="171-174", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m0_150 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="165-165", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m0_154 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m0_155 [label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="180-181", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m0_156 [label="var client = CreateClient()", span="182-182", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m0_157 [label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="184-184", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m0_158 [label="Assert.True(result)", span="186-186", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m0_159 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m0_160 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientFacts.cs"];
m0_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobClientFacts.cs"];
m0_41 [label="Entry BackgroundJobClient.cstr", span="", cluster="BackgroundJobClient.cstr", file="BackgroundJobClientFacts.cs"];
m0_128 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="141-141", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_129 [label="var client = CreateClient()", span="143-143", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_130 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="145-146", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_131 [label="Assert.Equal(''state'', exception.ParamName)", span="148-148", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_132 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="141-141", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m0_71 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_73 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m0_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobClientFacts.cs"];
m0_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="BackgroundJobClientFacts.cs"];
m0_19 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m0_167 [label="Hangfire.Core.Tests.BackgroundJobClientFacts", span="", file="BackgroundJobClientFacts.cs"];
m0_168 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m0_169 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m0_170 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m0_171 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m0_172 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m1_37 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="101-101", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_38 [label="_bootstrapSupervisor.Dispose()", span="103-103", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_39 [label="Logger.Info(''Hangfire Server stopped.'')", span="104-104", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_40 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="101-101", cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_57 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs"];
m1_4 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs"];
m1_5 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs"];
m1_19 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs"];
m1_0 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs"];
m1_1 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs"];
m1_58 [label="Entry Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_63 [label="var stateMachineFactory = new StateMachineFactory(_storage)", span="141-141", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_65 [label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="150-150", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_66 [label="yield return new ServerHeartbeat(_storage, _serverId);", span="151-151", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_67 [label="yield return new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval);", span="152-152", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_68 [label="yield return new ServerWatchdog(_storage, _options.ServerWatchdogOptions);", span="153-153", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_69 [label="yield return new RecurringJobScheduler(\r\n                _storage, \r\n                new BackgroundJobClient(_storage, stateMachineFactory),\r\n                new ScheduleInstantFactory(),\r\n                new EveryMinuteThrottler());", span="155-159", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_64 [label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="142-148", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", color=green, community=0, file="BackgroundJobServer.cs"];
m1_70 [label="Exit Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs"];
m1_21 [label="Entry Hangfire.BackgroundJobServer.Start()", span="85-85", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_22 [label="Logger.Info(''Starting Hangfire Server...'')", span="87-87", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_23 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="88-88", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_24 [label="_storage.WriteOptionsToLog(Logger)", span="90-90", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_25 [label="_options.WriteToLog(Logger)", span="91-91", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_26 [label="_bootstrapSupervisor.Start()", span="93-93", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_27 [label="Exit Hangfire.BackgroundJobServer.Start()", span="85-85", cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_75 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", span="28-28", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", file="BackgroundJobServer.cs"];
m1_71 [label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_81 [label="Entry Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", span="21-21", cluster="Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", file="BackgroundJobServer.cs"];
m1_49 [label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", span="41-41", cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", file="BackgroundJobServer.cs"];
m1_48 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs"];
m1_18 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs"];
m1_47 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs"];
m1_60 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="BackgroundJobServer.cs"];
m1_85 [label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", span="36-36", cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_86 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_50 [label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="BackgroundJobServer.cs"];
m1_30 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs"];
m1_62 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs"];
m1_46 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18", cluster="Hangfire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs"];
m1_79 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs"];
m1_20 [label="Entry Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_42 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="109-113", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_43 [label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerSupervisor>(GetSupervisors))", span="115-119", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_44 [label="return new ServerSupervisor(\r\n                bootstrapper, \r\n                new ServerSupervisorOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="121-126", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_45 [label="Exit Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs"];
m1_31 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs"];
m1_78 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs"];
m1_74 [label="Entry Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27", cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="BackgroundJobServer.cs"];
m1_77 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="BackgroundJobServer.cs"];
m1_80 [label="Entry Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", span="21-21", cluster="Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", file="BackgroundJobServer.cs"];
m1_29 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServer.cs"];
m1_82 [label="Entry Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_83 [label="return new ServerSupervisor(new AutomaticRetryServerComponentWrapper(component));", span="164-164", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_84 [label="Exit Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m1_33 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="96-96", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_34 [label="_bootstrapSupervisor.Stop()", span="98-98", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_35 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="96-96", cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_17 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs"];
m1_72 [label="Entry Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", span="23-23", cluster="Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs"];
m1_32 [label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22", cluster="Hangfire.Server.IServerSupervisor.Start()", file="BackgroundJobServer.cs"];
m1_59 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServer.cs"];
m1_28 [label="Entry Hangfire.Logging.ILog.Info(string)", span="201-201", cluster="Hangfire.Logging.ILog.Info(string)", file="BackgroundJobServer.cs"];
m1_51 [label="Entry Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_52 [label="var supervisors = new List<IServerSupervisor>()", span="131-131", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_53 [label="supervisors.AddRange(GetCommonComponents().Select(CreateSupervisor))", span="133-133", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_54 [label="supervisors.AddRange(_storage.GetComponents().Select(CreateSupervisor))", span="134-134", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_55 [label="return new ServerSupervisorCollection(supervisors);", span="136-136", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_56 [label="Exit Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs"];
m1_76 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="BackgroundJobServer.cs"];
m1_36 [label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23", cluster="Hangfire.Server.IServerSupervisor.Stop()", file="BackgroundJobServer.cs"];
m1_61 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()", file="BackgroundJobServer.cs"];
m1_73 [label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28", cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs"];
m1_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_7 [label="options == null", span="73-73", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_9 [label="storage == null", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_11 [label="_options = options", span="76-76", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_12 [label="_storage = storage", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_8 [label="throw new ArgumentNullException(''options'');", span="73-73", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_10 [label="throw new ArgumentNullException(''storage'');", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_13 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_14 [label="_bootstrapSupervisor = GetBootstrapSupervisor()", span="82-82", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_15 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_41 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m1_2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs"];
m1_87 [label="Hangfire.BackgroundJobServer", span="", file="BackgroundJobServer.cs"];
m4_0 [label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="ElectStateContext.cs"];
m4_3 [label="stateMachine == null", span="39-39", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=green, community=0, file="ElectStateContext.cs"];
m4_1 [label="Exit HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="ElectStateContext.cs"];
m4_4 [label="throw new ArgumentNullException(''stateMachine'');", span="39-39", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=green, community=0, file="ElectStateContext.cs"];
m4_5 [label="candidateState == null", span="40-40", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_9 [label="StateMachine = stateMachine", span="45-45", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=green, community=0, file="ElectStateContext.cs"];
m4_8 [label="Connection = connection", span="44-44", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_10 [label="CurrentState = currentState", span="46-46", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_7 [label="_candidateState = candidateState", span="42-42", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_2 [label="throw new ArgumentNullException(''connection'');", span="38-38", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_6 [label="throw new ArgumentNullException(''candidateState'');", span="40-40", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_11 [label="Exit Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m4_22 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ElectStateContext.cs"];
m4_21 [label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39", cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="ElectStateContext.cs"];
m4_18 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m4_19 [label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="87-88", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m4_20 [label="Exit Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m4_16 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContext.cs"];
m4_13 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs"];
m4_14 [label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="82-82", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs"];
m4_15 [label="Exit Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs"];
m4_17 [label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38", cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="ElectStateContext.cs"];
m4_23 [label="Hangfire.States.ElectStateContext", span="", file="ElectStateContext.cs"];
m5_61 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="105-105", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_62 [label="var context = CreateContext()", span="107-107", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_65 [label="Assert.Contains(_candidateState.Object, context.TraversedStates)", span="112-112", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_63 [label="var state = new Mock<IState>()", span="108-108", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_64 [label="context.CandidateState = state.Object", span="110-110", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_66 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="105-105", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m5_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ElectStateContextFacts.cs"];
m5_46 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ElectStateContextFacts.cs"];
m5_16 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ElectStateContextFacts.cs"];
m5_80 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="127-127", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_81 [label="var context = CreateContext()", span="129-129", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_83 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="133-134", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_82 [label="context.SetJobParameter(''Name'', (string)null)", span="131-131", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_84 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="127-127", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m5_73 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContextFacts.cs"];
m5_68 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="116-116", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_69 [label="var context = CreateContext()", span="118-118", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_71 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="122-123", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_70 [label="context.SetJobParameter(''Name'', ''Value'')", span="120-120", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_72 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="116-116", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m5_15 [label="Entry Unk.>", span="", cluster="Unk.>", file="ElectStateContextFacts.cs"];
m5_0 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_1 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_2 [label="_stateMachine = new Mock<IStateMachine>()", span="20-20", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", color=green, community=0];
m5_101 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="150-150", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_102 [label="var context = CreateContext()", span="152-152", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_103 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="153-154", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_105 [label="Assert.Equal(default(int), value)", span="158-158", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_104 [label="var value = context.GetJobParameter<int>(''Name'')", span="156-156", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_106 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="150-150", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m5_96 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContextFacts.cs"];
m5_48 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="86-86", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_49 [label="var context = CreateContext()", span="88-88", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_50 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="90-90", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_51 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="86-86", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m5_3 [label="HangFire.Storage.Monitoring.ProcessingJobDto", span="", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_4 [label="_stateContext.JobIdValue = JobId", span="23-23", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_5 [label="_candidateState = new Mock<IState>()", span="25-25", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_6 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m5_88 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="138-138", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_89 [label="var context = CreateContext()", span="140-140", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_90 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="141-142", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_92 [label="Assert.Equal(''Value'', value)", span="146-146", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_91 [label="var value = context.GetJobParameter<string>(''Name'')", span="144-144", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_93 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="138-138", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m5_21 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="43-43", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs"];
m5_22 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null))", span="45-51", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_23 [label="Assert.Equal(''stateMachine'', exception.ParamName)", span="53-53", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_24 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="43-43", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs"];
m5_11 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="29-29", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m5_12 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null))", span="31-37", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_13 [label="Assert.Equal(''connection'', exception.ParamName)", span="39-39", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m5_14 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="29-29", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m5_100 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ElectStateContextFacts.cs"];
m5_94 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ElectStateContextFacts.cs"];
m5_78 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs"];
m5_52 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_17 [label="Entry lambda expression", span="32-37", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_18 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null)", span="32-37", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_19 [label="Exit lambda expression", span="32-37", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_25 [label="Entry lambda expression", span="46-51", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_26 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null)", span="46-51", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_27 [label="Exit lambda expression", span="46-51", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_32 [label="Entry lambda expression", span="60-65", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_33 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null)", span="60-65", cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_34 [label="Exit lambda expression", span="60-65", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_53 [label="context.CandidateState = null", span="90-90", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_75 [label="Entry lambda expression", span="122-123", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_85 [label="Entry lambda expression", span="133-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_97 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_107 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_54 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_77 [label="Exit lambda expression", span="122-123", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_76 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="122-123", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_87 [label="Exit lambda expression", span="133-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_86 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="133-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_99 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_98 [label="x.GetJobParameter(''1'', ''Name'')", span="141-141", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_108 [label="x.GetJobParameter(''1'', ''Value'')", span="153-153", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_109 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m5_67 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ElectStateContextFacts.cs"];
m5_74 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ElectStateContextFacts.cs"];
m5_55 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="94-94", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_56 [label="var context = CreateContext()", span="96-96", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_59 [label="Assert.Same(newState.Object, context.CandidateState)", span="101-101", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_57 [label="var newState = new Mock<IState>()", span="97-97", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_58 [label="context.CandidateState = newState.Object", span="99-99", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_60 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="94-94", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m5_28 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="57-57", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_29 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null))", span="59-65", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_30 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="67-67", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_31 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="57-57", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m5_35 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="71-71", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_39 [label="Assert.Same(_connection.Object, context.Connection)", span="78-78", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_36 [label="var context = CreateContext()", span="73-73", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_38 [label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="76-76", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_40 [label="Assert.Same(_stateMachine.Object, context.StateMachine)", span="79-79", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_41 [label="Assert.Same(_candidateState.Object, context.CandidateState)", span="80-80", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_37 [label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="75-75", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_42 [label="Assert.Equal(''State'', context.CurrentState)", span="81-81", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_43 [label="Assert.Empty(context.TraversedStates)", span="82-82", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_44 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="71-71", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m5_8 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ElectStateContextFacts.cs"];
m5_9 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextFacts.cs"];
m5_47 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="ElectStateContextFacts.cs"];
m5_95 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ElectStateContextFacts.cs"];
m5_20 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs"];
m5_45 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="161-161", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_110 [label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _connection.Object,\r\n                _stateMachine.Object,\r\n                _candidateState.Object,\r\n                ''State'');", span="163-168", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", color=green, community=0, file="ElectStateContextFacts.cs"];
m5_111 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="161-161", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m5_7 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs"];
m5_79 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs"];
m5_112 [label="Hangfire.Core.Tests.States.ElectStateContextFacts", span="", file="ElectStateContextFacts.cs"];
m5_113 [label=context, span="", file="ElectStateContextFacts.cs"];
m6_11 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ElectStateContextMock.cs"];
m6_12 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ElectStateContextMock.cs"];
m6_10 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ElectStateContextMock.cs"];
m6_8 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextMock.cs"];
m6_16 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="ElectStateContextMock.cs"];
m6_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextMock.cs"];
m6_13 [label="Entry lambda expression", span="20-25", cluster="lambda expression", file="ElectStateContextMock.cs"];
m6_14 [label="new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    ConnectionValue.Object,\r\n                    StateMachineValue.Object,\r\n                    CandidateStateValue,\r\n                    CurrentStateValue)", span="20-25", cluster="lambda expression", color=green, community=0, file="ElectStateContextMock.cs"];
m6_15 [label="Exit lambda expression", span="20-25", cluster="lambda expression", file="ElectStateContextMock.cs"];
m6_0 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ElectStateContextMock.cs"];
m6_3 [label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", color=green, community=0, file="ElectStateContextMock.cs"];
m6_2 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ElectStateContextMock.cs"];
m6_4 [label="CandidateStateValue = new Mock<IState>().Object", span="16-16", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_6 [label="_context = new Lazy<ElectStateContext>(\r\n                () => new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    ConnectionValue.Object,\r\n                    StateMachineValue.Object,\r\n                    CandidateStateValue,\r\n                    CurrentStateValue))", span="19-25", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", color=green, community=0, file="ElectStateContextMock.cs"];
m6_5 [label="CurrentStateValue = ''OldState''", span="17-17", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_1 [label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ElectStateContextMock.cs"];
m6_7 [label="Exit Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs"];
m6_17 [label="Hangfire.Core.Tests.ElectStateContextMock", span="", file="ElectStateContextMock.cs"];
m7_1 [label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="IJobCreationProcess.cs"];
m8_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IStateChangeProcess.cs"];
m8_0 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="27-27", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs"];
m8_1 [label="exception == null", span="29-29", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs"];
m8_4 [label="Exception = exception", span="32-32", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs"];
m8_2 [label="throw new ArgumentNullException(''exception'');", span="29-29", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs"];
m8_3 [label="FailedAt = DateTime.UtcNow", span="31-31", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs"];
m8_5 [label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="27-27", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs"];
m8_7 [label="Entry HangFire.States.FailedState.Serialize()", span="40-40", cluster="HangFire.States.FailedState.Serialize()", file="IStateChangeProcess.cs"];
m8_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.ToStringTimestamp(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="42-48", cluster="HangFire.States.FailedState.Serialize()", file="IStateChangeProcess.cs"];
m8_9 [label="Exit HangFire.States.FailedState.Serialize()", span="40-40", cluster="HangFire.States.FailedState.Serialize()", file="IStateChangeProcess.cs"];
m8_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="IStateChangeProcess.cs"];
m8_11 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="IStateChangeProcess.cs"];
m8_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="IStateChangeProcess.cs"];
m8_14 [label="HangFire.States.FailedState", span="", file="IStateChangeProcess.cs"];
m9_0 [label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs"];
m9_1 [label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs"];
m9_2 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m9_3 [label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m10_1 [label="Exit Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs"];
m12_0 [label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="4-4", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="JobCreationProcessFacts.cs"];
m12_1 [label="Exit HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="4-4", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="JobCreationProcessFacts.cs"];
m13_10 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="JobPerformanceProcess.cs"];
m13_45 [label="Entry HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", span="62-62", cluster="HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", file="JobPerformanceProcess.cs"];
m13_34 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobPerformanceProcess.cs"];
m13_47 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_48 [label="_manager.Object.Execute(new CancellationToken(true))", span="72-72", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_49 [label="_workerSupervisors[0].Verify(x => x.Start())", span="74-74", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_50 [label="_workerSupervisors[1].Verify(x => x.Start())", span="75-75", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_51 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_70 [label="Entry Unk.Stop", span="", cluster="Unk.Stop", file="JobPerformanceProcess.cs"];
m13_74 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_75 [label="_manager.Object.Execute(new CancellationToken(true))", span="90-90", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_76 [label="_workerSupervisors[0].Verify(x => x.Dispose())", span="92-92", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_77 [label="_workerSupervisors[1].Verify(x => x.Dispose())", span="93-93", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_78 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_11 [label="Entry Mock<IServerSupervisor>.cstr", span="", cluster="Mock<IServerSupervisor>.cstr", file="JobPerformanceProcess.cs"];
m13_12 [label="Entry Mock<WorkerManager>.cstr", span="", cluster="Mock<WorkerManager>.cstr", file="JobPerformanceProcess.cs"];
m13_0 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs"];
m13_1 [label="_sharedContext = new SharedWorkerContext(\r\n                ''server'',\r\n                new[] { ''default'' },\r\n                new Mock<JobStorage>().Object,\r\n                new Mock<IJobPerformanceProcess>().Object,\r\n                new Mock<JobActivator>().Object,\r\n                new Mock<IStateMachineFactory>().Object)", span="20-26", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="JobPerformanceProcess.cs"];
m13_2 [label="_workerSupervisors = new[]\r\n            {\r\n                new Mock<IServerSupervisor>(), \r\n                new Mock<IServerSupervisor>()\r\n            }", span="28-32", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="JobPerformanceProcess.cs"];
m13_3 [label="_manager = new Mock<WorkerManager>(\r\n                _sharedContext, WorkerCount)", span="34-35", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs"];
m13_4 [label="_manager.Setup(x => x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerSupervisors[context.WorkerNumber - 1].Object)", span="37-38", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs"];
m13_5 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs"];
m13_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobPerformanceProcess.cs"];
m13_23 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="JobPerformanceProcess.cs"];
m13_24 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(null, WorkerCount))", span="44-45", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="JobPerformanceProcess.cs"];
m13_25 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="JobPerformanceProcess.cs"];
m13_30 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs"];
m13_31 [label="var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="51-53", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs"];
m13_32 [label="Assert.Equal(''workerCount'', exception.ParamName)", span="55-55", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs"];
m13_33 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs"];
m13_46 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="JobPerformanceProcess.cs"];
m13_44 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="JobPerformanceProcess.cs"];
m13_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobPerformanceProcess.cs"];
m13_82 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobPerformanceProcess.cs"];
m13_38 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs"];
m13_39 [label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs"];
m13_40 [label="var context = new WorkerContext(_sharedContext, 1)", span="62-62", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs"];
m13_41 [label="var worker = manager.CreateWorkerSupervisor(context)", span="64-64", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs"];
m13_42 [label="Assert.NotNull(worker)", span="66-66", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs"];
m13_43 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs"];
m13_19 [label="Entry Unk.CreateWorkerSupervisor", span="", cluster="Unk.CreateWorkerSupervisor", file="JobPerformanceProcess.cs"];
m13_83 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_15 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_20 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_16 [label="x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>())", span="37-37", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_17 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_21 [label="_workerSupervisors[context.WorkerNumber - 1].Object", span="38-38", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_22 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_26 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_27 [label="new WorkerManager(null, WorkerCount)", span="45-45", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_28 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_35 [label="Entry lambda expression", span="52-53", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_36 [label="new WorkerManager(\r\n                    _sharedContext, 0)", span="52-53", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_37 [label="Exit lambda expression", span="52-53", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_55 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_59 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_56 [label="x.Start()", span="74-74", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_57 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_60 [label="x.Start()", span="75-75", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_61 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_67 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_71 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_68 [label="x.Stop()", span="83-83", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_69 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_72 [label="x.Stop()", span="84-84", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_73 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_79 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_80 [label="x.Dispose()", span="92-92", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_81 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_84 [label="x.Dispose()", span="93-93", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_85 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="JobPerformanceProcess.cs"];
m13_52 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="JobPerformanceProcess.cs"];
m13_58 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="JobPerformanceProcess.cs"];
m13_9 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="JobPerformanceProcess.cs"];
m13_62 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_63 [label="_manager.Object.Execute(new CancellationToken(true))", span="81-81", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_64 [label="_workerSupervisors[0].Verify(x => x.Stop())", span="83-83", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_65 [label="_workerSupervisors[1].Verify(x => x.Stop())", span="84-84", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_66 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs"];
m13_53 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="JobPerformanceProcess.cs"];
m13_6 [label="Entry SharedWorkerContext.cstr", span="", cluster="SharedWorkerContext.cstr", file="JobPerformanceProcess.cs"];
m13_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobPerformanceProcess.cs"];
m13_29 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="JobPerformanceProcess.cs"];
m13_54 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobPerformanceProcess.cs"];
m13_7 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="JobPerformanceProcess.cs"];
m13_8 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="JobPerformanceProcess.cs"];
m13_86 [label="HangFire.Core.Tests.Server.WorkerManagerFacts", span="", file="JobPerformanceProcess.cs"];
m14_0 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="JobPerformanceProcessFacts.cs"];
m14_1 [label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="JobPerformanceProcessFacts.cs"];
m14_2 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="JobPerformanceProcessFacts.cs"];
m14_3 [label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="JobPerformanceProcessFacts.cs"];
m16_51 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="57-57", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m16_52 [label="var scheduler = CreateScheduler()", span="59-59", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m16_53 [label="scheduler.Execute(_cts.Token)", span="61-61", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m16_54 [label="_storage.Verify(x => x.GetConnection())", span="63-63", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m16_55 [label="_connection.Verify(x => x.Dispose())", span="64-64", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m16_56 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="57-57", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs"];
m16_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePollerFacts.cs"];
m16_39 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SchedulePollerFacts.cs"];
m16_35 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m16_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="39-41", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m16_37 [label="Assert.Equal(''storage'', exception.ParamName)", span="43-43", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m16_38 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m16_15 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="SchedulePollerFacts.cs"];
m16_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePollerFacts.cs"];
m16_76 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="81-81", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m16_77 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="83-84", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m16_78 [label="var scheduler = CreateScheduler()", span="85-85", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m16_79 [label="scheduler.Execute(_cts.Token)", span="87-87", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m16_80 [label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="89-91", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="SchedulePollerFacts.cs"];
m16_81 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="81-81", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m16_43 [label="Entry SchedulePoller.cstr", span="", cluster="SchedulePoller.cstr", file="SchedulePollerFacts.cs"];
m16_44 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m16_45 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan))", span="49-51", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m16_46 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="53-53", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m16_47 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m16_31 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs"];
m16_27 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="SchedulePollerFacts.cs"];
m16_67 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m16_68 [label="var scheduler = CreateScheduler()", span="70-70", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m16_69 [label="scheduler.Execute(_cts.Token)", span="72-72", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m16_70 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="74-77", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=1, file="SchedulePollerFacts.cs"];
m16_71 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m16_75 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="SchedulePollerFacts.cs"];
m16_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePollerFacts.cs"];
m16_66 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SchedulePollerFacts.cs"];
m16_14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="SchedulePollerFacts.cs"];
m16_0 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_1 [label="_storage = new Mock<JobStorage>()", span="21-21", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_2 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_3 [label="_stateMachine = new Mock<IStateMachine>()", span="23-23", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_4 [label="_cts = new CancellationTokenSource()", span="24-24", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_5 [label="_cts.Cancel()", span="25-25", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_6 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_7 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="28-29", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_8 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="31-31", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_9 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_10 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m16_85 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_19 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_24 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_28 [label="Entry lambda expression", span="32-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_20 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="28-28", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_21 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_25 [label="x.GetConnection()", span="31-31", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_26 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_29 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_30 [label="Exit lambda expression", span="32-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_32 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_33 [label="time > 0", span="33-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_34 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_40 [label="Entry lambda expression", span="40-41", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_41 [label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan)", span="40-41", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_42 [label="Exit lambda expression", span="40-41", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_48 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_49 [label="new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan)", span="50-51", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_50 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_60 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_63 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_61 [label="x.GetConnection()", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_62 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_64 [label="x.Dispose()", span="64-64", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_65 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_72 [label="Entry lambda expression", span="74-77", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_73 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="74-77", cluster="lambda expression", color=green, community=1, file="SchedulePollerFacts.cs"];
m16_74 [label="Exit lambda expression", span="74-77", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_82 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_88 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_83 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="83-84", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_84 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_86 [label="time > 0", span="84-84", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_87 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_89 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="90-90", cluster="lambda expression", color=green, community=0, file="SchedulePollerFacts.cs"];
m16_90 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m16_59 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SchedulePollerFacts.cs"];
m16_13 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs"];
m16_23 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="SchedulePollerFacts.cs"];
m16_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SchedulePollerFacts.cs"];
m16_12 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SchedulePollerFacts.cs"];
m16_11 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs"];
m16_58 [label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m16_57 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="94-94", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m16_91 [label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="96-96", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m16_92 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="94-94", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m16_93 [label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span="", file="SchedulePollerFacts.cs"];
m18_114 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="146-146", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_115 [label="var handler = CreateStateHandler(OldStateName)", span="149-149", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_116 [label="var process = CreateProcess()", span="150-150", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_118 [label="handler.Verify(\r\n                x => x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="156-158", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_117 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="153-153", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_119 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="146-146", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_262 [label="Entry Mock<T>.cstr", span="", cluster="Mock<T>.cstr", file="StateChangeProcessFacts.cs"];
m18_0 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="24-24", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_1 [label="_connection = new Mock<IStorageConnection>()", span="26-26", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="27-27", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_3 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="28-28", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_4 [label="_context = new StateContextMock { JobIdValue = JobId }", span="30-30", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_5 [label="_state = new Mock<IState>()", span="32-32", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_6 [label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_7 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="24-24", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs"];
m18_13 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="StateChangeProcessFacts.cs"];
m18_9 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="StateChangeProcessFacts.cs"];
m18_38 [label="Entry StateChangeProcess.cstr", span="", cluster="StateChangeProcess.cstr", file="StateChangeProcessFacts.cs"];
m18_110 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="StateChangeProcessFacts.cs"];
m18_39 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="55-55", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_40 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(_connection.Object, _handlers, null))", span="57-58", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_41 [label="Assert.Equal(''filters'', exception.ParamName)", span="60-60", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_42 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="55-55", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_26 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateChangeProcessFacts.cs"];
m18_95 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="122-122", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_96 [label="var handler1 = CreateStateHandler(StateName)", span="125-125", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_97 [label="var handler2 = CreateStateHandler(StateName)", span="126-126", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_99 [label="handler1.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="132-133", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_98 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="128-130", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_100 [label="handler2.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="134-135", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_101 [label="var process = CreateProcess()", span="137-137", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_102 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="140-140", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_103 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="122-122", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_203 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="246-246", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs"];
m18_204 [label="var newState = new Mock<IState>()", span="249-249", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_205 [label="var filter = CreateFilter<IElectStateFilter>()", span="250-250", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_206 [label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext x) => x.CandidateState = newState.Object)", span="252-253", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=1, file="StateChangeProcessFacts.cs"];
m18_207 [label="var process = CreateProcess()", span="255-255", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs"];
m18_208 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="258-258", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_209 [label="_transaction.Verify(x => x.AddJobState(JobId, _state.Object))", span="261-261", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs"];
m18_210 [label="_transaction.Verify(x => x.Commit())", span="262-262", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_211 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="246-246", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs"];
m18_31 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="46-46", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(_connection.Object, null, _filters))", span="48-49", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_33 [label="Assert.Equal(''handlers'', exception.ParamName)", span="51-51", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_34 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="46-46", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_74 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="293-293", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs"];
m18_248 [label="var handler = new Mock<IStateHandler>()", span="295-295", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs"];
m18_249 [label="handler.Setup(x => x.StateName).Returns(stateName)", span="296-296", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs"];
m18_250 [label="_handlers.AddHandler(handler.Object)", span="298-298", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs"];
m18_251 [label="return handler;", span="299-299", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs"];
m18_252 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="293-293", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs"];
m18_60 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="StateChangeProcessFacts.cs"];
m18_158 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="302-302", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs"];
m18_258 [label="var filter = new Mock<T>()", span="304-304", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs"];
m18_259 [label="_filters.Add(filter.Object)", span="305-305", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs"];
m18_260 [label="return filter;", span="307-307", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs"];
m18_261 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="302-302", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs"];
m18_135 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="StateChangeProcessFacts.cs"];
m18_162 [label="Entry Unk.OnStateUnapplied", span="", cluster="Unk.OnStateUnapplied", file="StateChangeProcessFacts.cs"];
m18_25 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateChangeProcessFacts.cs"];
m18_236 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateChangeProcessFacts.cs"];
m18_196 [label="Entry Unk.OnStateElection", span="", cluster="Unk.OnStateElection", file="StateChangeProcessFacts.cs"];
m18_54 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="288-288", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="StateChangeProcessFacts.cs"];
m18_246 [label="return new StateChangeProcess(_connection.Object, _handlers, _filters);", span="290-290", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_247 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="288-288", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="StateChangeProcessFacts.cs"];
m18_180 [label="Entry Unk.OnStateApplied", span="", cluster="Unk.OnStateApplied", file="StateChangeProcessFacts.cs"];
m18_21 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_22 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateChangeProcess(null, _handlers, _filters))", span="39-40", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=1, file="StateChangeProcessFacts.cs"];
m18_23 [label="Assert.Equal(''connection'', exception.ParamName)", span="42-42", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_24 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateChangeProcessFacts.cs"];
m18_55 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StateChangeProcessFacts.cs"];
m18_123 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="162-162", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs"];
m18_124 [label="_state.Setup(x => x.IsFinal).Returns(true)", span="164-164", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs"];
m18_125 [label="var process = CreateProcess()", span="165-165", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs"];
m18_126 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="167-167", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_127 [label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="169-169", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs"];
m18_128 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="162-162", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs"];
m18_234 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="StateChangeProcessFacts.cs"];
m18_221 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="StateChangeProcessFacts.cs"];
m18_53 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="StateChangeProcessFacts.cs"];
m18_263 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StateChangeProcessFacts.cs"];
m18_10 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateChangeProcessFacts.cs"];
m18_184 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="227-227", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateChangeProcessFacts.cs"];
m18_185 [label="var anotherState = new Mock<IState>()", span="230-230", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_186 [label="var filter = CreateFilter<IElectStateFilter>()", span="231-231", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_187 [label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext context) => context.CandidateState = anotherState.Object)", span="233-234", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=1, file="StateChangeProcessFacts.cs"];
m18_190 [label="_transaction.Verify(x => x.SetJobState(JobId, anotherState.Object))", span="242-242", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_188 [label="var process = CreateProcess()", span="236-236", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_189 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="239-239", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_191 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="227-227", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateChangeProcessFacts.cs"];
m18_235 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="StateChangeProcessFacts.cs"];
m18_78 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="StateChangeProcessFacts.cs"];
m18_254 [label="Entry Unk.AddHandler", span="", cluster="Unk.AddHandler", file="StateChangeProcessFacts.cs"];
m18_149 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="184-184", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_150 [label="var filter1 = CreateFilter<IApplyStateFilter>()", span="187-187", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_151 [label="var filter2 = CreateFilter<IApplyStateFilter>()", span="188-188", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_152 [label="filter1.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="190-191", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_153 [label="filter2.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="192-193", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_154 [label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="194-196", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_155 [label="var process = CreateProcess()", span="198-198", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_156 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="201-201", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_157 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="184-184", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_255 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_14 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_18 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_15 [label="x.CreateWriteTransaction()", span="28-28", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_16 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_19 [label="x.Name", span="33-33", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_20 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_27 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_28 [label="new StateChangeProcess(null, _handlers, _filters)", span="40-40", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_29 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_35 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_36 [label="new StateChangeProcess(_connection.Object, null, _filters)", span="49-49", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_37 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_43 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_44 [label="new StateChangeProcess(_connection.Object, _handlers, null)", span="58-58", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_45 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_57 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_61 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_58 [label="x.SetJobState(JobId, _state.Object)", span="67-67", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_59 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_62 [label="x.Commit()", span="68-68", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_63 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_75 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_79 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_82 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_76 [label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="87-87", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_77 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_80 [label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="91-91", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_81 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_83 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="94-94", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_84 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_92 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_93 [label="x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="117-117", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_94 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_104 [label="Entry lambda expression", span="129-129", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_107 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_111 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_105 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="129-129", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_106 [label="Exit lambda expression", span="129-129", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_108 [label="x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="132-132", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_109 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_112 [label="x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="134-134", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_113 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_120 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_121 [label="x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="157-157", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_122 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_129 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_132 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_130 [label="x.IsFinal", span="164-164", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_131 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_133 [label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="169-169", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_134 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_142 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_145 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_143 [label="x.IsFinal", span="175-175", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_144 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_146 [label="x.PersistJob(JobId)", span="180-180", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_147 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_159 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_163 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_166 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_160 [label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="190-190", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_161 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_164 [label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="192-192", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_165 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_167 [label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="195-195", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_168 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_177 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_181 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_178 [label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="213-213", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_179 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_182 [label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="215-215", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_183 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_198 [label="context.CandidateState = anotherState.Object", span="234-234", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_201 [label="x.SetJobState(JobId, anotherState.Object)", span="242-242", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_193 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_197 [label="Entry lambda expression", span="234-234", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_200 [label="Entry lambda expression", span="242-242", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_194 [label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="233-233", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_195 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_199 [label="Exit lambda expression", span="234-234", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_202 [label="Exit lambda expression", span="242-242", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_216 [label="x.CandidateState = newState.Object", span="253-253", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_212 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_215 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_218 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_222 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_213 [label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="252-252", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_214 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_217 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_219 [label="x.AddJobState(JobId, _state.Object)", span="261-261", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_220 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_223 [label="x.Commit()", span="262-262", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_224 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_241 [label="x.SetJobState(\r\n                JobId, \r\n                It.Is<FailedState>(s => s.Exception == exception))", span="281-283", cluster="lambda expression", color=red, community=1, file="StateChangeProcessFacts.cs"];
m18_244 [label="s.Exception == exception", span="283-283", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_237 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_240 [label="Entry lambda expression", span="281-283", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_238 [label="x.OnStateApplied(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="272-272", cluster="lambda expression", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_239 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_242 [label="Exit lambda expression", span="281-283", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_243 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_245 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_256 [label="x.StateName", span="296-296", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_257 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="StateChangeProcessFacts.cs"];
m18_225 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="266-266", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateChangeProcessFacts.cs"];
m18_226 [label="var exception = new NotSupportedException()", span="269-269", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_227 [label="var filter = CreateFilter<IApplyStateFilter>()", span="270-270", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_228 [label="filter.Setup(x => x.OnStateApplied(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()))\r\n                .Throws(exception)", span="272-273", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=1, file="StateChangeProcessFacts.cs"];
m18_231 [label="_transaction.Verify(x => x.SetJobState(\r\n                JobId, \r\n                It.Is<FailedState>(s => s.Exception == exception)))", span="281-283", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=1, file="StateChangeProcessFacts.cs"];
m18_229 [label="var process = CreateProcess()", span="275-275", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_230 [label="var result = process.ChangeState(_context.Object, _state.Object, OldStateName)", span="278-278", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_232 [label="Assert.False(result)", span="285-285", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_233 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="266-266", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateChangeProcessFacts.cs"];
m18_91 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateChangeProcessFacts.cs"];
m18_169 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="207-207", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_170 [label="var filter1 = CreateFilter<IApplyStateFilter>()", span="210-210", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_171 [label="var filter2 = CreateFilter<IApplyStateFilter>()", span="211-211", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_172 [label="filter1.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="213-214", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_173 [label="filter2.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="215-216", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_174 [label="var process = CreateProcess()", span="218-218", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_175 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="221-221", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_176 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="207-207", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_64 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateChangeProcessFacts.cs"];
m18_17 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StateChangeProcessFacts.cs"];
m18_56 [label="Entry Unk.True", span="", cluster="Unk.True", file="StateChangeProcessFacts.cs"];
m18_12 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateChangeProcessFacts.cs"];
m18_192 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="StateChangeProcessFacts.cs"];
m18_46 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="64-64", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateChangeProcessFacts.cs"];
m18_47 [label="_transaction.Setup(x => x.SetJobState(JobId, _state.Object)).InSequence()", span="67-67", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_48 [label="_transaction.Setup(x => x.Commit()).InSequence()", span="68-68", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_49 [label="var process = CreateProcess()", span="70-70", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateChangeProcessFacts.cs"];
m18_50 [label="var result = process.ChangeState(_context.Object, _state.Object, OldStateName)", span="73-73", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_51 [label="Assert.True(result)", span="76-76", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_52 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="64-64", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateChangeProcessFacts.cs"];
m18_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StateChangeProcessFacts.cs"];
m18_148 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="StateChangeProcessFacts.cs"];
m18_253 [label="Entry Mock<IStateHandler>.cstr", span="", cluster="Mock<IStateHandler>.cstr", file="StateChangeProcessFacts.cs"];
m18_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateChangeProcessFacts.cs"];
m18_65 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="80-80", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_66 [label="var handler1 = CreateStateHandler(OldStateName)", span="83-83", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_67 [label="var handler2 = CreateStateHandler(OldStateName)", span="84-84", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_68 [label="handler1\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="86-88", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_69 [label="handler2\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="90-92", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_70 [label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="94-95", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_71 [label="var process = CreateProcess()", span="97-97", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_72 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="100-100", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_73 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="80-80", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs"];
m18_30 [label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="StateChangeProcessFacts.cs"];
m18_136 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="173-173", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs"];
m18_137 [label="_state.Setup(x => x.IsFinal).Returns(false)", span="175-175", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs"];
m18_138 [label="var process = CreateProcess()", span="176-176", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs"];
m18_139 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="178-178", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_140 [label="_transaction.Verify(x => x.PersistJob(JobId))", span="180-180", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs"];
m18_141 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="173-173", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs"];
m18_85 [label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="106-106", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_86 [label="var handler = CreateStateHandler(StateName)", span="109-109", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_87 [label="var process = CreateProcess()", span="110-110", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_89 [label="handler.Verify(\r\n                x => x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="116-118", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_88 [label="process.ChangeState(_context.Object, _state.Object, OldStateName)", span="113-113", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", color=red, community=0, file="StateChangeProcessFacts.cs"];
m18_90 [label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="106-106", cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs"];
m18_264 [label="Hangfire.Core.Tests.States.StateChangeProcessFacts", span="", file="StateChangeProcessFacts.cs"];
m18_265 [label=anotherState, span="", file="StateChangeProcessFacts.cs"];
m18_266 [label=newState, span="", file="StateChangeProcessFacts.cs"];
m18_267 [label=exception, span="", file="StateChangeProcessFacts.cs"];
m20_0 [label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs"];
m20_1 [label="Canceled = canceled", span="12-12", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs"];
m20_2 [label="Exception = exception", span="13-13", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs"];
m20_3 [label="Exit HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs"];
m20_4 [label="HangFire.Filters.PerformedContext", span="", file="StateContextFacts.cs"];
m22_0 [label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs"];
m22_1 [label="Canceled = canceled", span="14-14", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs"];
m22_2 [label="Exception = exception", span="15-15", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs"];
m22_3 [label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs"];
m22_4 [label="HangFire.Filters.CreatedContext", span="", file="StateMachine.cs"];
m24_93 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="113-113", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_94 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="115-115", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_95 [label="_parameters.Add(''Name'', ''Value'')", span="116-116", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_97 [label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="120-120", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_98 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="122-126", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_96 [label="var stateMachine = CreateStateMachine()", span="118-118", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_99 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="113-113", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m24_100 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs"];
m24_16 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="StateMachineFacts.cs"];
m24_59 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="71-71", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m24_60 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="73-74", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m24_61 [label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="76-76", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m24_62 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="71-71", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m24_84 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="102-102", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m24_85 [label="var stateMachine = CreateStateMachine()", span="104-104", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m24_86 [label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="106-107", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m24_87 [label="Assert.Equal(''state'', exception.ParamName)", span="109-109", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m24_88 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="102-102", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m24_54 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateMachineFacts.cs"];
m24_258 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="StateMachineFacts.cs"];
m24_76 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="91-91", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m24_77 [label="var stateMachine = CreateStateMachine()", span="93-93", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m24_78 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="95-96", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m24_79 [label="Assert.Equal(''parameters'', exception.ParamName)", span="98-98", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m24_80 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="91-91", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m24_0 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="24-24", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_1 [label="_stateChangeProcess = new Mock<IStateChangeProcess>()", span="26-26", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=red, community=0, file="StateMachineFacts.cs"];
m24_2 [label="_job = Job.FromExpression(() => Console.WriteLine())", span="28-28", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_3 [label="_parameters = new Dictionary<string, string>()", span="29-29", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_4 [label="_state = new Mock<IState>()", span="30-30", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_5 [label="_state.Setup(x => x.Name).Returns(StateName)", span="31-31", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_6 [label="_connection = new Mock<IStorageConnection>()", span="33-33", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_7 [label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="35-39", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_8 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = _job\r\n                })", span="41-46", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_9 [label="_distributedLock = new Mock<IDisposable>()", span="48-48", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_10 [label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="49-51", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_11 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(\r\n                    It.Is<StateContext>(s => s.JobId == JobId && s.Job == _job), \r\n                    _state.Object, \r\n                    OldStateName))\r\n                .Returns(true)", span="53-58", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=red, community=1, file="StateMachineFacts.cs"];
m24_12 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="24-24", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m24_184 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="227-227", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m24_185 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="230-231", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m24_186 [label="var stateMachine = CreateStateMachine()", span="233-233", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m24_187 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="236-236", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=red, community=0, file="StateMachineFacts.cs"];
m24_188 [label="Assert.False(result)", span="239-239", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m24_189 [label="_connection.Verify(x => x.GetJobData(JobId))", span="240-240", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m24_190 [label="_stateChangeProcess.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="242-244", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=red, community=1, file="StateMachineFacts.cs"];
m24_191 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="227-227", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m24_153 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="183-183", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m24_154 [label="var stateMachine = CreateStateMachine()", span="185-185", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m24_155 [label="stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="187-187", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", color=red, community=0, file="StateMachineFacts.cs"];
m24_156 [label="_distributedLock.Verify(x => x.Dispose())", span="189-189", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m24_157 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="183-183", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m24_41 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachineFacts.cs"];
m24_136 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="161-161", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m24_137 [label="var stateMachine = CreateStateMachine()", span="163-163", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m24_138 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(JobId, null, FromOldState))", span="165-166", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m24_139 [label="Assert.Equal(''toState'', exception.ParamName)", span="168-168", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m24_140 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="161-161", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m24_144 [label="Entry Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachineFacts.cs"];
m24_233 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="StateMachineFacts.cs"];
m24_32 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachineFacts.cs"];
m24_224 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="286-286", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_225 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="289-295", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_226 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="297-299", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", color=red, community=1, file="StateMachineFacts.cs"];
m24_227 [label="var stateMachine = CreateStateMachine()", span="301-301", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_228 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="304-304", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", color=red, community=0, file="StateMachineFacts.cs"];
m24_229 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                OldStateName))", span="307-310", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", color=red, community=1, file="StateMachineFacts.cs"];
m24_230 [label="Assert.False(result)", span="312-312", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_231 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="286-286", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_33 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="StateMachineFacts.cs"];
m24_202 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="248-248", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m24_203 [label="var stateMachine = CreateStateMachine()", span="251-251", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m24_204 [label="var result = stateMachine.TryToChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="254-255", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=red, community=1, file="StateMachineFacts.cs"];
m24_205 [label="Assert.False(result)", span="258-258", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m24_206 [label="_stateChangeProcess.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="260-262", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=red, community=1, file="StateMachineFacts.cs"];
m24_207 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="248-248", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m24_58 [label="Entry StateMachine.cstr", span="", cluster="StateMachine.cstr", file="StateMachineFacts.cs"];
m24_192 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateMachineFacts.cs"];
m24_145 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="172-172", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m24_146 [label="var stateMachine = CreateStateMachine()", span="174-174", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m24_147 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.TryToChangeState(JobId, _state.Object, new string[0]))", span="176-177", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", color=red, community=0, file="StateMachineFacts.cs"];
m24_148 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="179-179", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m24_149 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="172-172", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m24_50 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="62-62", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m24_51 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _stateChangeProcess.Object))", span="64-65", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m24_52 [label="Assert.Equal(''connection'', exception.ParamName)", span="67-67", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m24_53 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="62-62", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m24_249 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="316-316", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_250 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="319-325", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_251 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="327-329", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", color=red, community=1, file="StateMachineFacts.cs"];
m24_252 [label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="331-331", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_253 [label="var stateMachine = CreateStateMachine()", span="333-333", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_254 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="336-336", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", color=red, community=0, file="StateMachineFacts.cs"];
m24_255 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.IsAny<StateContext>(),\r\n                _state.Object,\r\n                OldStateName))", span="339-342", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", color=red, community=1, file="StateMachineFacts.cs"];
m24_256 [label="Assert.True(result)", span="344-344", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_257 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="316-316", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m24_25 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="StateMachineFacts.cs"];
m24_13 [label="Entry Mock<IStateChangeProcess>.cstr", span="", cluster="Mock<IStateChangeProcess>.cstr", file="StateMachineFacts.cs"];
m24_46 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StateMachineFacts.cs"];
m24_71 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m24_271 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _stateChangeProcess.Object);", span="349-351", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", color=red, community=0, file="StateMachineFacts.cs"];
m24_272 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m24_15 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFacts.cs"];
m24_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateMachineFacts.cs"];
m24_92 [label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachineFacts.cs"];
m24_161 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateMachineFacts.cs"];
m24_66 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="80-80", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m24_67 [label="var stateMachine = CreateStateMachine()", span="82-82", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m24_68 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="84-85", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m24_69 [label="Assert.Equal(''job'', exception.ParamName)", span="87-87", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m24_70 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="80-80", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m24_123 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="143-143", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m24_124 [label="var stateMachine = CreateStateMachine()", span="145-145", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m24_125 [label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="146-146", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m24_126 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="143-143", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m24_42 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="StateMachineFacts.cs"];
m24_21 [label="Entry Mock<IDisposable>.cstr", span="", cluster="Mock<IDisposable>.cstr", file="StateMachineFacts.cs"];
m24_75 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="StateMachineFacts.cs"];
m24_135 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="StateMachineFacts.cs"];
m24_268 [label="Entry lambda expression", span="339-342", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_22 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_26 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_29 [label="Entry lambda expression", span="35-39", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_34 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_38 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_43 [label="Entry lambda expression", span="54-57", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_23 [label="Console.WriteLine()", span="28-28", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_24 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_27 [label="x.Name", span="31-31", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_28 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_30 [label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="35-39", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_31 [label="Exit lambda expression", span="35-39", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_35 [label="x.GetJobData(JobId)", span="41-41", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_36 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_39 [label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="50-50", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_44 [label="x.ChangeState(\r\n                    It.Is<StateContext>(s => s.JobId == JobId && s.Job == _job), \r\n                    _state.Object, \r\n                    OldStateName)", span="54-57", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m24_45 [label="Exit lambda expression", span="54-57", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_47 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_48 [label="s.JobId == JobId && s.Job == _job", span="55-55", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_49 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_55 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_56 [label="new StateMachine(null, _stateChangeProcess.Object)", span="65-65", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_57 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_63 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_64 [label="new StateMachine(_connection.Object, null)", span="74-74", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_65 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_73 [label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="85-85", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_72 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_74 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_82 [label="stateMachine.CreateInState(_job, null, _state.Object)", span="96-96", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_81 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_83 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_90 [label="stateMachine.CreateInState(_job, _parameters, null)", span="107-107", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_89 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_91 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_102 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_107 [label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="122-126", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_106 [label="Entry lambda expression", span="122-126", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_103 [label="Console.WriteLine(''SomeString'')", span="115-115", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_104 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_108 [label="Exit lambda expression", span="122-126", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_109 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_110 [label="d[''Name''] == ''Value''", span="124-124", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_111 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_117 [label="Entry lambda expression", span="136-139", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_118 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="136-139", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m24_119 [label="Exit lambda expression", span="136-139", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_120 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_121 [label="sc.JobId == JobId && sc.Job == _job", span="137-137", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_122 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_133 [label="stateMachine.TryToChangeState(null, _state.Object, FromOldState)", span="155-155", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_132 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_134 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_142 [label="stateMachine.TryToChangeState(JobId, null, FromOldState)", span="166-166", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_141 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_143 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_151 [label="stateMachine.TryToChangeState(JobId, _state.Object, new string[0])", span="177-177", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_150 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_152 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_158 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_159 [label="x.Dispose()", span="189-189", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_160 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_169 [label="Entry lambda expression", span="202-205", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_170 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                OldStateName)", span="202-205", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m24_171 [label="Exit lambda expression", span="202-205", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_172 [label="Entry lambda expression", span="203-203", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_173 [label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')", span="203-203", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_174 [label="Exit lambda expression", span="203-203", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_181 [label="Entry lambda expression", span="220-223", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_182 [label="x.ChangeState(\r\n                It.IsNotNull<StateContext>(),\r\n                _state.Object,\r\n                OldStateName)", span="220-223", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m24_183 [label="Exit lambda expression", span="220-223", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_193 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_196 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_199 [label="Entry lambda expression", span="243-243", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_194 [label="x.GetJobData(It.IsAny<string>())", span="230-230", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_195 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_197 [label="x.GetJobData(JobId)", span="240-240", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_198 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_200 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="243-243", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_201 [label="Exit lambda expression", span="243-243", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_208 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_209 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="261-261", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_210 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_218 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_221 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_219 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="270-270", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_220 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_222 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="280-280", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_223 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_234 [label="Entry lambda expression", span="289-289", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_237 [label="Entry lambda expression", span="298-298", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_240 [label="Entry lambda expression", span="307-310", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_235 [label="x.GetJobData(JobId)", span="289-289", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_236 [label="Exit lambda expression", span="289-289", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_238 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="298-298", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_239 [label="Exit lambda expression", span="298-298", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_241 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                OldStateName)", span="307-310", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m24_242 [label="Exit lambda expression", span="307-310", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_243 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_246 [label="Entry lambda expression", span="309-309", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_244 [label="sc.JobId == JobId && sc.Job == null", span="308-308", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_245 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_247 [label="s.Exception != null", span="309-309", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_248 [label="Exit lambda expression", span="309-309", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_259 [label="Entry lambda expression", span="319-319", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_262 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_265 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_260 [label="x.GetJobData(JobId)", span="319-319", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_261 [label="Exit lambda expression", span="319-319", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_263 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="328-328", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m24_264 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_266 [label="x.IgnoreJobLoadException", span="331-331", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_267 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_269 [label="x.ChangeState(\r\n                It.IsAny<StateContext>(),\r\n                _state.Object,\r\n                OldStateName)", span="339-342", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m24_270 [label="Exit lambda expression", span="339-342", cluster="lambda expression", file="StateMachineFacts.cs"];
m24_162 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="193-193", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m24_163 [label="var stateMachine = CreateStateMachine()", span="196-196", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m24_164 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="199-199", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", color=red, community=0, file="StateMachineFacts.cs"];
m24_165 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                OldStateName))", span="202-205", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", color=red, community=1, file="StateMachineFacts.cs"];
m24_166 [label="Assert.True(result)", span="207-207", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m24_167 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="193-193", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m24_20 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="StateMachineFacts.cs"];
m24_101 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateMachineFacts.cs"];
m24_127 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="150-150", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m24_128 [label="var stateMachine = CreateStateMachine()", span="152-152", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m24_129 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, FromOldState))", span="154-155", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m24_130 [label="Assert.Equal(''jobId'', exception.ParamName)", span="157-157", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m24_131 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="150-150", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m24_112 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="130-130", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m24_113 [label="var stateMachine = CreateStateMachine()", span="132-132", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m24_114 [label="stateMachine.CreateInState(_job, _parameters, _state.Object)", span="134-134", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m24_115 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="136-139", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=red, community=1, file="StateMachineFacts.cs"];
m24_116 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="130-130", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m24_211 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="266-266", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m24_212 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="269-271", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=red, community=1, file="StateMachineFacts.cs"];
m24_213 [label="var stateMachine = CreateStateMachine()", span="273-273", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m24_214 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="276-276", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=red, community=0, file="StateMachineFacts.cs"];
m24_215 [label="_stateChangeProcess.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="279-280", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=red, community=1, file="StateMachineFacts.cs"];
m24_216 [label="Assert.False(result)", span="282-282", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m24_217 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="266-266", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m24_232 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="StateMachineFacts.cs"];
m24_168 [label="Entry Unk.True", span="", cluster="Unk.True", file="StateMachineFacts.cs"];
m24_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StateMachineFacts.cs"];
m24_105 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="StateMachineFacts.cs"];
m24_176 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="211-211", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m24_177 [label="var stateMachine = CreateStateMachine()", span="214-214", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m24_178 [label="stateMachine.TryToChangeState(JobId, _state.Object, null)", span="217-217", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m24_179 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.IsNotNull<StateContext>(),\r\n                _state.Object,\r\n                OldStateName))", span="220-223", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", color=red, community=1, file="StateMachineFacts.cs"];
m24_180 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="211-211", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m24_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateMachineFacts.cs"];
m24_37 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="StateMachineFacts.cs"];
m24_175 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="StateMachineFacts.cs"];
m24_14 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFacts.cs"];
m24_273 [label="Hangfire.Core.Tests.States.StateMachineFacts", span="", file="StateMachineFacts.cs"];
m24_274 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m24_275 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m24_276 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m24_277 [label=job, span="", file="StateMachineFacts.cs"];
m24_278 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m24_279 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m24_280 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m25_0 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_1 [label="jobId == null", span="24-24", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_3 [label="queue == null", span="25-25", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_5 [label="JobId = jobId", span="27-27", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_6 [label="Queue = queue", span="28-28", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_2 [label="throw new ArgumentNullException(''jobId'');", span="24-24", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_4 [label="throw new ArgumentNullException(''queue'');", span="25-25", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_7 [label="Exit HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs"];
m25_9 [label="HangFire.Storage.ProcessingJob", span="", file="Worker.cs"];
m26_139 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="153-153", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m26_142 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="159-164", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", color=green, community=1, file="WorkerFacts.cs"];
m26_141 [label="worker.Execute(_token)", span="157-157", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m26_140 [label="var worker = CreateWorker()", span="155-155", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m26_143 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="153-153", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m26_68 [label="Entry Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="WorkerFacts.cs"];
m26_15 [label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerFacts.cs"];
m26_0 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_1 [label="_context = new WorkerContextMock()", span="27-27", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_56 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="WorkerFacts.cs"];
m26_263 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="WorkerFacts.cs"];
m26_220 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="250-250", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m26_225 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="264-267", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", color=green, community=1, file="WorkerFacts.cs"];
m26_221 [label="var exception = new InvalidOperationException()", span="253-253", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m26_224 [label="worker.Execute(_token)", span="261-261", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m26_222 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="254-256", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m26_223 [label="var worker = CreateWorker()", span="258-258", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m26_226 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="250-250", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m26_209 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="237-237", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m26_212 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="243-246", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", color=green, community=1, file="WorkerFacts.cs"];
m26_211 [label="worker.Execute(_token)", span="241-241", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m26_210 [label="var worker = CreateWorker()", span="239-239", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m26_213 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="237-237", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m26_23 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="WorkerFacts.cs"];
m26_16 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs"];
m26_150 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="168-168", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m26_151 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="171-176", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", color=green, community=0, file="WorkerFacts.cs"];
m26_152 [label="var worker = CreateWorker()", span="178-178", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m26_153 [label="worker.Execute(_token)", span="181-181", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m26_154 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="184-186", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m26_155 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="168-168", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m26_162 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="190-190", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m26_163 [label="var worker = CreateWorker()", span="192-192", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m26_164 [label="worker.Execute(_token)", span="194-194", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m26_165 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="196-198", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m26_166 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="190-190", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m26_196 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="WorkerFacts.cs"];
m26_109 [label="Entry Unk.Requeue", span="", cluster="Unk.Requeue", file="WorkerFacts.cs"];
m26_124 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="WorkerFacts.cs"];
m26_227 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs"];
m26_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerFacts.cs"];
m26_90 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="97-97", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m26_91 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()))\r\n                .Throws<InvalidOperationException>()", span="99-101", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", color=green, community=0, file="WorkerFacts.cs"];
m26_92 [label="var worker = CreateWorker()", span="103-103", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m26_93 [label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_token))", span="105-106", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m26_94 [label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="108-108", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m26_95 [label="_fetchedJob.Verify(x => x.Requeue())", span="109-109", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m26_96 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="97-97", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m26_189 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="221-221", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_190 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="224-225", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_191 [label="var worker = CreateWorker()", span="227-227", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_192 [label="Assert.DoesNotThrow(() => worker.Execute(_token))", span="230-230", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_193 [label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="232-232", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_194 [label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="233-233", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_195 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="221-221", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m26_67 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="310-310", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m26_270 [label="return new Worker(_context.Object);", span="312-312", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m26_271 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="310-310", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m26_52 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m26_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null))", span="65-66", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m26_54 [label="Assert.Equal(''context'', exception.ParamName)", span="68-68", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m26_55 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m26_239 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="271-271", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m26_244 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="285-288", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", color=green, community=1, file="WorkerFacts.cs"];
m26_240 [label="var exception = new InvalidOperationException()", span="274-274", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m26_243 [label="worker.Execute(_token)", span="282-282", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m26_241 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="275-277", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m26_242 [label="var worker = CreateWorker()", span="279-279", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m26_245 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="271-271", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m26_19 [label="Entry Mock<IFetchedJob>.cstr", span="", cluster="Mock<IFetchedJob>.cstr", file="WorkerFacts.cs"];
m26_27 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="WorkerFacts.cs"];
m26_51 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="WorkerFacts.cs"];
m26_12 [label="_stateMachine.Setup(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="54-57", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=1, file="WorkerFacts.cs"];
m26_11 [label="_context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="50-52", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_13 [label="_token = new CancellationToken()", span="59-59", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_2 [label="_storage = _context.SharedContext.Storage", span="28-28", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_3 [label="_process = _context.SharedContext.PerformanceProcess", span="29-29", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_4 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_5 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_6 [label="_fetchedJob = new Mock<IFetchedJob>()", span="35-35", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_7 [label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="36-36", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_8 [label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_fetchedJob.Object)", span="38-40", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_9 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="42-46", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_10 [label="_stateMachine = new Mock<IStateMachine>()", span="48-48", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_14 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m26_117 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="WorkerFacts.cs"];
m26_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerFacts.cs"];
m26_228 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="WorkerFacts.cs"];
m26_76 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="WorkerFacts.cs"];
m26_35 [label="Entry Unk.FetchNextJob", span="", cluster="Unk.FetchNextJob", file="WorkerFacts.cs"];
m26_256 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="292-292", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m26_260 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="304-307", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", color=green, community=1, file="WorkerFacts.cs"];
m26_259 [label="worker.Execute(_token)", span="301-301", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m26_257 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="295-296", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m26_258 [label="var worker = CreateWorker()", span="298-298", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m26_261 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="292-292", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m26_89 [label="Entry Unk.RemoveFromQueue", span="", cluster="Unk.RemoveFromQueue", file="WorkerFacts.cs"];
m26_57 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="WorkerFacts.cs"];
m26_48 [label="Entry lambda expression", span="54-57", cluster="lambda expression", file="WorkerFacts.cs"];
m26_49 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())", span="54-57", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_50 [label="Exit lambda expression", span="54-57", cluster="lambda expression", file="WorkerFacts.cs"];
m26_97 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="WorkerFacts.cs"];
m26_98 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="100-100", cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs"];
m26_99 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="WorkerFacts.cs"];
m26_118 [label="Entry lambda expression", span="117-118", cluster="lambda expression", file="WorkerFacts.cs"];
m26_125 [label="Entry lambda expression", span="126-127", cluster="lambda expression", file="WorkerFacts.cs"];
m26_119 [label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="117-118", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_120 [label="Exit lambda expression", span="117-118", cluster="lambda expression", file="WorkerFacts.cs"];
m26_126 [label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="126-127", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_127 [label="Exit lambda expression", span="126-127", cluster="lambda expression", file="WorkerFacts.cs"];
m26_133 [label="Entry lambda expression", span="146-149", cluster="lambda expression", file="WorkerFacts.cs"];
m26_134 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>())", span="146-149", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_135 [label="Exit lambda expression", span="146-149", cluster="lambda expression", file="WorkerFacts.cs"];
m26_136 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="WorkerFacts.cs"];
m26_144 [label="Entry lambda expression", span="159-164", cluster="lambda expression", file="WorkerFacts.cs"];
m26_145 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="159-164", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_146 [label="Exit lambda expression", span="159-164", cluster="lambda expression", file="WorkerFacts.cs"];
m26_147 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="WorkerFacts.cs"];
m26_156 [label="Entry lambda expression", span="172-175", cluster="lambda expression", file="WorkerFacts.cs"];
m26_157 [label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="172-175", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_158 [label="Exit lambda expression", span="172-175", cluster="lambda expression", file="WorkerFacts.cs"];
m26_183 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="WorkerFacts.cs"];
m26_184 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>())", span="215-215", cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs"];
m26_185 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="WorkerFacts.cs"];
m26_214 [label="Entry lambda expression", span="243-246", cluster="lambda expression", file="WorkerFacts.cs"];
m26_215 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="243-246", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_216 [label="Exit lambda expression", span="243-246", cluster="lambda expression", file="WorkerFacts.cs"];
m26_217 [label="Entry lambda expression", span="246-246", cluster="lambda expression", file="WorkerFacts.cs"];
m26_232 [label="Entry lambda expression", span="264-267", cluster="lambda expression", file="WorkerFacts.cs"];
m26_233 [label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="264-267", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_234 [label="Exit lambda expression", span="264-267", cluster="lambda expression", file="WorkerFacts.cs"];
m26_235 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="WorkerFacts.cs"];
m26_250 [label="Entry lambda expression", span="285-288", cluster="lambda expression", file="WorkerFacts.cs"];
m26_251 [label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="285-288", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_252 [label="Exit lambda expression", span="285-288", cluster="lambda expression", file="WorkerFacts.cs"];
m26_253 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="WorkerFacts.cs"];
m26_267 [label="Entry lambda expression", span="304-307", cluster="lambda expression", file="WorkerFacts.cs"];
m26_268 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="304-307", cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs"];
m26_269 [label="Exit lambda expression", span="304-307", cluster="lambda expression", file="WorkerFacts.cs"];
m26_32 [label="x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>())", span="39-39", cluster="lambda expression", file="WorkerFacts.cs"];
m26_45 [label="x.Create(_connection.Object)", span="51-51", cluster="lambda expression", file="WorkerFacts.cs"];
m26_84 [label="x.FetchNextJob(_context.SharedContext.Queues, _token)", span="90-90", cluster="lambda expression", file="WorkerFacts.cs"];
m26_101 [label="worker.Execute(_token)", span="106-106", cluster="lambda expression", file="WorkerFacts.cs"];
m26_137 [label="state.ServerId == _context.Object.ServerId", span="148-148", cluster="lambda expression", file="WorkerFacts.cs"];
m26_181 [label="worker.Execute(_token)", span="211-211", cluster="lambda expression", file="WorkerFacts.cs"];
m26_201 [label="worker.Execute(_token)", span="230-230", cluster="lambda expression", file="WorkerFacts.cs"];
m26_44 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="WorkerFacts.cs"];
m26_122 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="122-122", cluster="lambda expression", file="WorkerFacts.cs"];
m26_160 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="185-185", cluster="lambda expression", file="WorkerFacts.cs"];
m26_168 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="196-198", cluster="lambda expression", file="WorkerFacts.cs"];
m26_178 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="205-205", cluster="lambda expression", file="WorkerFacts.cs"];
m26_198 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="224-224", cluster="lambda expression", file="WorkerFacts.cs"];
m26_230 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="255-255", cluster="lambda expression", file="WorkerFacts.cs"];
m26_248 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="276-276", cluster="lambda expression", file="WorkerFacts.cs"];
m26_121 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="WorkerFacts.cs"];
m26_138 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="WorkerFacts.cs"];
m26_149 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="WorkerFacts.cs"];
m26_148 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="163-164", cluster="lambda expression", file="WorkerFacts.cs"];
m26_180 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="WorkerFacts.cs"];
m26_186 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="WorkerFacts.cs"];
m26_219 [label="Exit lambda expression", span="246-246", cluster="lambda expression", file="WorkerFacts.cs"];
m26_218 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="246-246", cluster="lambda expression", file="WorkerFacts.cs"];
m26_236 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="266-266", cluster="lambda expression", file="WorkerFacts.cs"];
m26_237 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="WorkerFacts.cs"];
m26_254 [label="state.Exception == exception && state.Reason == ''hello''", span="287-287", cluster="lambda expression", file="WorkerFacts.cs"];
m26_255 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="WorkerFacts.cs"];
m26_24 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="WorkerFacts.cs"];
m26_28 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="WorkerFacts.cs"];
m26_31 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="WorkerFacts.cs"];
m26_33 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="WorkerFacts.cs"];
m26_36 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m26_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="WorkerFacts.cs"];
m26_46 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="WorkerFacts.cs"];
m26_70 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="WorkerFacts.cs"];
m26_73 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="WorkerFacts.cs"];
m26_83 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="WorkerFacts.cs"];
m26_85 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="WorkerFacts.cs"];
m26_86 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="WorkerFacts.cs"];
m26_100 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="WorkerFacts.cs"];
m26_102 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="WorkerFacts.cs"];
m26_103 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="WorkerFacts.cs"];
m26_106 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="WorkerFacts.cs"];
m26_159 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="WorkerFacts.cs"];
m26_167 [label="Entry lambda expression", span="196-198", cluster="lambda expression", file="WorkerFacts.cs"];
m26_177 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="WorkerFacts.cs"];
m26_182 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="WorkerFacts.cs"];
m26_197 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="WorkerFacts.cs"];
m26_200 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="WorkerFacts.cs"];
m26_202 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="WorkerFacts.cs"];
m26_203 [label="Entry lambda expression", span="232-232", cluster="lambda expression", file="WorkerFacts.cs"];
m26_206 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="WorkerFacts.cs"];
m26_229 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="WorkerFacts.cs"];
m26_247 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="WorkerFacts.cs"];
m26_264 [label="Entry lambda expression", span="295-295", cluster="lambda expression", file="WorkerFacts.cs"];
m26_123 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="WorkerFacts.cs"];
m26_161 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="WorkerFacts.cs"];
m26_169 [label="Exit lambda expression", span="196-198", cluster="lambda expression", file="WorkerFacts.cs"];
m26_179 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="WorkerFacts.cs"];
m26_199 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="WorkerFacts.cs"];
m26_231 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="WorkerFacts.cs"];
m26_249 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="WorkerFacts.cs"];
m26_188 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="WorkerFacts.cs"];
m26_187 [label="x.Requeue()", span="217-217", cluster="lambda expression", file="WorkerFacts.cs"];
m26_26 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="WorkerFacts.cs"];
m26_25 [label="x.GetConnection()", span="33-33", cluster="lambda expression", file="WorkerFacts.cs"];
m26_30 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="WorkerFacts.cs"];
m26_29 [label="x.JobId", span="36-36", cluster="lambda expression", file="WorkerFacts.cs"];
m26_38 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m26_37 [label="x.GetJobData(JobId)", span="42-42", cluster="lambda expression", file="WorkerFacts.cs"];
m26_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="WorkerFacts.cs"];
m26_41 [label="Method()", span="45-45", cluster="lambda expression", file="WorkerFacts.cs"];
m26_72 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="WorkerFacts.cs"];
m26_71 [label="x.GetConnection()", span="78-78", cluster="lambda expression", file="WorkerFacts.cs"];
m26_75 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="WorkerFacts.cs"];
m26_74 [label="x.Dispose()", span="79-79", cluster="lambda expression", file="WorkerFacts.cs"];
m26_88 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="WorkerFacts.cs"];
m26_87 [label="x.RemoveFromQueue()", span="93-93", cluster="lambda expression", file="WorkerFacts.cs"];
m26_105 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="WorkerFacts.cs"];
m26_104 [label="x.RemoveFromQueue()", span="108-108", cluster="lambda expression", file="WorkerFacts.cs"];
m26_108 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="WorkerFacts.cs"];
m26_107 [label="x.Requeue()", span="109-109", cluster="lambda expression", file="WorkerFacts.cs"];
m26_205 [label="Exit lambda expression", span="232-232", cluster="lambda expression", file="WorkerFacts.cs"];
m26_204 [label="x.RemoveFromQueue()", span="232-232", cluster="lambda expression", file="WorkerFacts.cs"];
m26_208 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="WorkerFacts.cs"];
m26_207 [label="x.Requeue()", span="233-233", cluster="lambda expression", file="WorkerFacts.cs"];
m26_266 [label="Exit lambda expression", span="295-295", cluster="lambda expression", file="WorkerFacts.cs"];
m26_265 [label="x.GetJobData(JobId)", span="295-295", cluster="lambda expression", file="WorkerFacts.cs"];
m26_58 [label="new Worker(null)", span="66-66", cluster="lambda expression", file="WorkerFacts.cs"];
m26_59 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="WorkerFacts.cs"];
m26_128 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="140-140", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m26_131 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", span="146-149", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", color=green, community=1, file="WorkerFacts.cs"];
m26_130 [label="worker.Execute(_token)", span="144-144", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m26_129 [label="var worker = CreateWorker()", span="142-142", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m26_132 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="140-140", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m26_20 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="WorkerFacts.cs"];
m26_238 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="WorkerFacts.cs"];
m26_110 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="113-113", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m26_111 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="116-120", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=green, community=0, file="WorkerFacts.cs"];
m26_112 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="122-123", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m26_113 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="125-129", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=green, community=0, file="WorkerFacts.cs"];
m26_114 [label="var worker = CreateWorker()", span="131-131", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m26_115 [label="worker.Execute(_token)", span="134-134", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m26_116 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="113-113", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m26_21 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs"];
m26_77 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="83-83", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m26_78 [label="var worker = CreateWorker()", span="85-85", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m26_79 [label="worker.Execute(_token)", span="87-87", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m26_80 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_context.SharedContext.Queues, _token),\r\n                Times.Once)", span="89-91", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m26_81 [label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="93-93", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m26_82 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="83-83", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m26_262 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerFacts.cs"];
m26_246 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs"];
m26_22 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="WorkerFacts.cs"];
m26_170 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="202-202", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m26_174 [label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="214-216", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", color=green, community=0, file="WorkerFacts.cs"];
m26_173 [label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_token))", span="211-211", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m26_175 [label="_fetchedJob.Verify(x => x.Requeue())", span="217-217", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m26_171 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="205-206", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m26_172 [label="var worker = CreateWorker()", span="208-208", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m26_176 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="202-202", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m26_47 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="WorkerFacts.cs"];
m26_60 [label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="WorkerFacts.cs"];
m26_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WorkerFacts.cs"];
m26_43 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="315-315", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs"];
m26_272 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="315-315", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs"];
m26_69 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="WorkerFacts.cs"];
m26_39 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="WorkerFacts.cs"];
m26_61 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m26_62 [label="var worker = CreateWorker()", span="74-74", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m26_63 [label="worker.Execute(_token)", span="76-76", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m26_64 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="78-78", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m26_65 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="79-79", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m26_66 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m26_273 [label="Hangfire.Core.Tests.Server.WorkerFacts", span="", file="WorkerFacts.cs"];
m26_277 [label=exception, span="", file="WorkerFacts.cs"];
m26_278 [label=exception, span="", file="WorkerFacts.cs"];
m26_274 [label=worker, span="", file="WorkerFacts.cs"];
m26_275 [label=worker, span="", file="WorkerFacts.cs"];
m26_276 [label=worker, span="", file="WorkerFacts.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
d41 -> d42  [key=0, style=solid, color=green];
d41 -> d44  [key=2, style=dotted, color=green];
d34 -> d41  [key=1, style=dashed, color=green, label=string];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
d40 -> d41  [key=0, style=solid, color=green];
d40 -> d43  [key=2, style=dotted];
d42 -> d34  [key=0, style=bold, color=blue];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=0, style=solid];
d45 -> d40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d45 -> d39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
d39 -> d40  [key=0, style=solid];
d39 -> d30  [key=2, style=dotted];
d36 -> d42  [key=0, style=solid];
d36 -> d17  [key=2, style=dotted];
d38 -> d42  [key=0, style=solid];
d38 -> d17  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d23 -> d30  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d31  [key=2, style=dotted];
d24 -> d26  [key=1, style=dashed, color=darkseagreen4, label=context];
d25 -> d26  [key=0, style=solid];
d25 -> d32  [key=2, style=dotted];
d6 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
d6 -> d14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
d6 -> d15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
d6 -> d7  [key=0, style=solid];
d6 -> d9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
d6 -> d11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
d11 -> d13  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d16 -> d6  [key=0, style=bold, color=blue];
d21 -> d23  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d18 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
d18 -> d21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
d18 -> d19  [key=0, style=solid];
d26 -> d29  [key=0, style=solid];
d8 -> d17  [key=2, style=dotted];
d8 -> d16  [key=0, style=solid];
d10 -> d17  [key=2, style=dotted];
d10 -> d16  [key=0, style=solid];
d12 -> d17  [key=2, style=dotted];
d12 -> d16  [key=0, style=solid];
d20 -> d17  [key=2, style=dotted];
d20 -> d29  [key=0, style=solid];
d22 -> d17  [key=2, style=dotted];
d22 -> d29  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=0, style=solid];
d9 -> d11  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d19 -> d21  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d29 -> d18  [key=0, style=bold, color=blue];
d28 -> d29  [key=0, style=solid];
d28 -> d33  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
m0_31 -> m0_164  [key=0, style=solid];
m0_164 -> m0_31  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=2, style=dotted];
m0_35 -> m0_32  [key=0, style=bold, color=blue];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_82  [key=2, style=dotted];
m0_78 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_36  [key=2, style=dotted];
m0_79 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_37  [key=2, style=dotted];
m0_81 -> m0_77  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_12  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=2, style=dotted];
m0_58 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_59 -> m0_56  [key=0, style=bold, color=blue];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_82  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_27  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [key=2, style=dotted];
m0_98 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_99 -> m0_95  [key=0, style=bold, color=blue];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_82  [key=2, style=dotted];
m0_106 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_106 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_13  [key=2, style=dotted];
m0_107 -> m0_36  [key=2, style=dotted];
m0_107 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_36  [key=2, style=dotted];
m0_108 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_108 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_36  [key=2, style=dotted];
m0_111 -> m0_105  [key=0, style=bold, color=blue];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_82  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid, color=red];
m0_139 -> m0_127  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid, color=red];
m0_140 -> m0_100  [key=2, style=dotted, color=red];
m0_140 -> m0_142  [key=1, style=dashed, color=red, label="lambda expression"];
m0_141 -> m0_137  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_36  [key=2, style=dotted];
m0_43 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_37  [key=2, style=dotted];
m0_45 -> m0_42  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid, color=red];
m0_20 -> m0_21  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=2, style=dotted];
m0_40 -> m0_38  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_41  [key=2, style=dotted];
m0_48 -> m0_46  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_41  [key=2, style=dotted];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=2, style=dotted];
m0_63 -> m0_61  [key=0, style=bold, color=blue];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_41  [key=2, style=dotted];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_41  [key=2, style=dotted];
m0_76 -> m0_74  [key=0, style=bold, color=blue];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_27  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> d18  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_93 -> m0_91  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_36  [key=2, style=dotted];
m0_102 -> m0_104  [key=2, style=dotted];
m0_103 -> m0_101  [key=0, style=bold, color=blue];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_27  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_36  [key=2, style=dotted];
m0_114 -> m0_104  [key=2, style=dotted];
m0_115 -> m0_113  [key=0, style=bold, color=blue];
m0_118 -> m0_116  [key=0, style=bold, color=blue];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_126 -> m0_124  [key=0, style=bold, color=blue];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_136  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_135 -> m0_133  [key=0, style=bold, color=blue];
m0_142 -> m0_143  [key=0, style=solid, color=red];
m0_143 -> m0_144  [key=0, style=solid, color=red];
m0_143 -> m0_145  [key=2, style=dotted, color=red];
m0_144 -> m0_142  [key=0, style=bold, color=blue];
m0_151 -> m0_152  [key=0, style=solid, color=red];
m0_152 -> m0_153  [key=0, style=solid, color=red];
m0_152 -> m0_145  [key=2, style=dotted, color=red];
m0_153 -> m0_151  [key=0, style=bold, color=blue];
m0_162 -> m0_163  [key=0, style=solid, color=red];
m0_162 -> m0_145  [key=2, style=dotted, color=red];
m0_163 -> m0_161  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_82  [key=2, style=dotted];
m0_87 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_36  [key=2, style=dotted];
m0_88 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_37  [key=2, style=dotted];
m0_90 -> m0_86  [key=0, style=bold, color=blue];
m0_82 -> m0_165  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_41  [key=2, style=dotted];
m0_166 -> m0_82  [key=0, style=bold, color=blue];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_60  [key=2, style=dotted];
m0_66 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_67 -> m0_65  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_82  [key=2, style=dotted];
m0_120 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_36  [key=2, style=dotted];
m0_121 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_37  [key=2, style=dotted];
m0_123 -> m0_119  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_14  [key=2, style=dotted];
m0_3 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_18  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_19  [key=2, style=dotted];
m0_9 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_36  [key=2, style=dotted];
m0_50 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_37  [key=2, style=dotted];
m0_52 -> m0_49  [key=0, style=bold, color=blue];
m0_146 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_82  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid, color=red];
m0_148 -> m0_127  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid, color=red];
m0_149 -> m0_100  [key=2, style=dotted, color=red];
m0_149 -> m0_151  [key=1, style=dashed, color=red, label="lambda expression"];
m0_150 -> m0_146  [key=0, style=bold, color=blue];
m0_154 -> m0_155  [key=0, style=solid, color=red];
m0_155 -> m0_156  [key=0, style=solid, color=red];
m0_155 -> m0_13  [key=2, style=dotted, color=red];
m0_155 -> m0_14  [key=2, style=dotted, color=red];
m0_155 -> m0_161  [key=1, style=dashed, color=red, label="lambda expression"];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_82  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_127  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_160  [key=2, style=dotted];
m0_159 -> m0_154  [key=0, style=bold, color=blue];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_82  [key=2, style=dotted];
m0_129 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_36  [key=2, style=dotted];
m0_130 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_37  [key=2, style=dotted];
m0_132 -> m0_128  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_60  [key=2, style=dotted];
m0_72 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_73 -> m0_71  [key=0, style=bold, color=blue];
m0_167 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_140  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_143  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_149  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_152  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_155  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_162  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_167 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m0_168 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_169 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_170 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_171 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=client];
m0_172 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_28  [key=2, style=dotted];
m1_40 -> m1_37  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_58 -> m1_63  [key=0, style=solid];
m1_58 -> m1_65  [key=0, style=bold, color=crimson];
m1_58 -> m1_66  [key=0, style=bold, color=crimson];
m1_58 -> m1_67  [key=0, style=bold, color=crimson];
m1_58 -> m1_68  [key=0, style=bold, color=crimson];
m1_58 -> m1_69  [key=0, style=bold, color=crimson];
m1_63 -> m1_64  [key=0, style=solid, color=green];
m1_63 -> m1_71  [key=2, style=dotted];
m1_63 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m1_63 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_74  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_75  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_76  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_78  [key=2, style=dotted];
m1_69 -> m1_79  [key=2, style=dotted];
m1_69 -> m1_80  [key=2, style=dotted];
m1_69 -> m1_81  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid, color=green];
m1_64 -> m1_72  [key=2, style=dotted, color=green];
m1_64 -> m1_73  [key=2, style=dotted, color=green];
m1_70 -> m1_58  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_28  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_29  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_32  [key=2, style=dotted];
m1_27 -> m1_21  [key=0, style=bold, color=blue];
m1_47 -> m1_20  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.Server.IServerSupervisor _bootstrapSupervisor"];
m1_20 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_46  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_48  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_49  [key=2, style=dotted];
m1_44 -> m1_50  [key=2, style=dotted];
m1_45 -> m1_20  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=2, style=dotted];
m1_83 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=2, style=dotted];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_57  [key=2, style=dotted];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=supervisors];
m1_52 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=supervisors];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=2, style=dotted];
m1_53 -> m1_59  [key=2, style=dotted];
m1_53 -> m1_60  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_61  [key=2, style=dotted];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> m1_60  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_62  [key=2, style=dotted];
m1_56 -> m1_51  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_6 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m1_6 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_8 -> m1_15  [key=0, style=solid];
m1_8 -> d17  [key=2, style=dotted];
m1_10 -> m1_15  [key=0, style=solid];
m1_10 -> d17  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_19  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_6  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_87 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_64  [key=1, style=dashed, color=green, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m1_87 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m4_0 -> m4_3  [key=1, style=dashed, color=green, label="Hangfire.States.IStateMachine"];
m4_0 -> m4_9  [key=1, style=dashed, color=green, label="Hangfire.States.IStateMachine"];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m4_0 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m4_0 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m4_0 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_3 -> m4_5  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_11  [key=0, style=solid, color=green];
m4_4 -> d17  [key=2, style=dotted, color=green];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid, color=green];
m4_8 -> m4_9  [key=0, style=solid, color=green];
m4_10 -> m4_11  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_2 -> m4_11  [key=0, style=solid];
m4_2 -> d17  [key=2, style=dotted];
m4_6 -> m4_11  [key=0, style=solid];
m4_6 -> d17  [key=2, style=dotted];
m4_11 -> m4_0  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=2, style=dotted];
m4_19 -> m4_22  [key=2, style=dotted];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_14 -> m4_17  [key=2, style=dotted];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_23 -> m4_9  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m4_23 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_45  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_62 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_67  [key=2, style=dotted];
m5_63 -> m5_10  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_66 -> m5_61  [key=0, style=bold, color=blue];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_45  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_74  [key=2, style=dotted];
m5_83 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_73  [key=2, style=dotted];
m5_84 -> m5_80  [key=0, style=bold, color=blue];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_45  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_74  [key=2, style=dotted];
m5_71 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_73  [key=2, style=dotted];
m5_72 -> m5_68  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_8  [key=2, style=dotted, color=green];
m5_101 -> m5_102  [key=0, style=solid];
m5_102 -> m5_45  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_94  [key=2, style=dotted];
m5_103 -> m5_78  [key=2, style=dotted];
m5_103 -> m5_95  [key=2, style=dotted];
m5_103 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_105 -> m5_16  [key=2, style=dotted];
m5_105 -> m5_106  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_96  [key=2, style=dotted];
m5_106 -> m5_101  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_45  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_50 -> m5_15  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_51 -> m5_48  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.ProcessingJobDto"];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_45  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_94  [key=2, style=dotted];
m5_90 -> m5_78  [key=2, style=dotted];
m5_90 -> m5_95  [key=2, style=dotted];
m5_90 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_92 -> m5_16  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_96  [key=2, style=dotted];
m5_93 -> m5_88  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid, color=green];
m5_22 -> m5_23  [key=0, style=solid, color=green];
m5_22 -> m5_15  [key=2, style=dotted, color=green];
m5_22 -> m5_25  [key=1, style=dashed, color=green, label="lambda expression"];
m5_23 -> m5_24  [key=0, style=solid, color=green];
m5_23 -> m5_16  [key=2, style=dotted, color=green];
m5_24 -> m5_21  [key=0, style=bold, color=blue];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_15  [key=2, style=dotted, color=green];
m5_12 -> m5_17  [key=1, style=dashed, color=green, label="lambda expression"];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_16  [key=2, style=dotted];
m5_14 -> m5_11  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid, color=green];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_18 -> m5_20  [key=2, style=dotted, color=green];
m5_19 -> m5_17  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid, color=green];
m5_26 -> m5_27  [key=0, style=solid, color=green];
m5_26 -> m5_20  [key=2, style=dotted, color=green];
m5_27 -> m5_25  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid, color=green];
m5_33 -> m5_34  [key=0, style=solid, color=green];
m5_33 -> m5_20  [key=2, style=dotted, color=green];
m5_34 -> m5_32  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_54 -> m5_52  [key=0, style=bold, color=blue];
m5_77 -> m5_75  [key=0, style=bold, color=blue];
m5_76 -> m5_78  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_79  [key=2, style=dotted];
m5_87 -> m5_85  [key=0, style=bold, color=blue];
m5_86 -> m5_78  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_79  [key=2, style=dotted];
m5_99 -> m5_97  [key=0, style=bold, color=blue];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_100  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_100  [key=2, style=dotted];
m5_109 -> m5_107  [key=0, style=bold, color=blue];
m5_55 -> m5_56  [key=0, style=solid];
m5_56 -> m5_45  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_56 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_59 -> m5_46  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_57 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=newState];
m5_57 -> m5_10  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_60 -> m5_55  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid, color=green];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_29 -> m5_15  [key=2, style=dotted, color=green];
m5_29 -> m5_32  [key=1, style=dashed, color=green, label="lambda expression"];
m5_30 -> m5_16  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_28  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid, color=green];
m5_39 -> m5_46  [key=2, style=dotted, color=green];
m5_36 -> m5_39  [key=1, style=dashed, color=green, label=context];
m5_36 -> m5_40  [key=1, style=dashed, color=green, label=context];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_45  [key=2, style=dotted];
m5_36 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_36 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_36 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_36 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_38 -> m5_39  [key=0, style=solid, color=green];
m5_38 -> m5_16  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid, color=green];
m5_40 -> m5_46  [key=2, style=dotted, color=green];
m5_41 -> m5_46  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_37 -> m5_16  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_42 -> m5_16  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_47  [key=2, style=dotted];
m5_44 -> m5_35  [key=0, style=bold, color=blue];
m5_45 -> m5_110  [key=0, style=solid, color=green];
m5_110 -> m5_111  [key=0, style=solid, color=green];
m5_110 -> m5_20  [key=2, style=dotted, color=green];
m5_111 -> m5_45  [key=0, style=bold, color=blue];
m5_112 -> m5_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_12  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_18  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_22  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_26  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_29  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_33  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_39  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_40  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_110  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_112 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m5_113 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_13 -> m6_14  [key=0, style=solid, color=green];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_14 -> m6_16  [key=2, style=dotted, color=green];
m6_15 -> m6_13  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_10  [key=2, style=dotted, color=green];
m6_3 -> m6_2  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_6 -> m6_12  [key=2, style=dotted, color=green];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_8  [key=2, style=dotted];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m6_17 -> m6_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_17 -> m6_6  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_17 -> m6_14  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_17 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_17 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_17 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m6_17 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ElectStateContextMock"];
m7_1 -> d32  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_2 -> m8_5  [key=0, style=solid];
m8_2 -> d17  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_10  [key=2, style=dotted];
m8_8 -> m8_11  [key=2, style=dotted];
m8_8 -> m8_12  [key=2, style=dotted];
m8_8 -> m8_13  [key=2, style=dotted];
m8_9 -> m8_7  [key=0, style=bold, color=blue];
m8_14 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m8_14 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m8_14 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m10_1 -> d43  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m13_47 -> m13_48  [key=0, style=solid];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_52  [key=2, style=dotted];
m13_48 -> m13_53  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_54  [key=2, style=dotted];
m13_49 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_54  [key=2, style=dotted];
m13_50 -> m13_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_51 -> m13_47  [key=0, style=bold, color=blue];
m13_74 -> m13_75  [key=0, style=solid];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_52  [key=2, style=dotted];
m13_75 -> m13_53  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_54  [key=2, style=dotted];
m13_76 -> m13_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_54  [key=2, style=dotted];
m13_77 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_78 -> m13_74  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_6  [key=2, style=dotted, color=green];
m13_1 -> m13_7  [key=2, style=dotted, color=green];
m13_1 -> m13_8  [key=2, style=dotted, color=green];
m13_1 -> m13_9  [key=2, style=dotted, color=green];
m13_1 -> m13_10  [key=2, style=dotted, color=green];
m13_1 -> m13_4  [key=3, color=green, style=bold, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk"];
m13_2 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_11  [key=2, style=dotted, color=green];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_12  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_13  [key=2, style=dotted];
m13_4 -> m13_14  [key=2, style=dotted];
m13_4 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_4 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_4  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_18  [key=2, style=dotted];
m13_24 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_25 -> m13_23  [key=0, style=bold, color=blue];
m13_30 -> m13_31  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_18  [key=2, style=dotted];
m13_31 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_34  [key=2, style=dotted];
m13_33 -> m13_30  [key=0, style=bold, color=blue];
m13_38 -> m13_39  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_29  [key=2, style=dotted];
m13_39 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=manager];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_44  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_45  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_46  [key=2, style=dotted];
m13_43 -> m13_38  [key=0, style=bold, color=blue];
m13_83 -> m13_84  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_18  [key=2, style=dotted];
m13_16 -> m13_19  [key=2, style=dotted];
m13_17 -> m13_15  [key=0, style=bold, color=blue];
m13_21 -> m13_22  [key=0, style=solid];
m13_22 -> m13_20  [key=0, style=bold, color=blue];
m13_26 -> m13_27  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=2, style=dotted];
m13_28 -> m13_26  [key=0, style=bold, color=blue];
m13_35 -> m13_36  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_29  [key=2, style=dotted];
m13_37 -> m13_35  [key=0, style=bold, color=blue];
m13_55 -> m13_56  [key=0, style=solid];
m13_59 -> m13_60  [key=0, style=solid];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_58  [key=2, style=dotted];
m13_57 -> m13_55  [key=0, style=bold, color=blue];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_58  [key=2, style=dotted];
m13_61 -> m13_59  [key=0, style=bold, color=blue];
m13_67 -> m13_68  [key=0, style=solid];
m13_71 -> m13_72  [key=0, style=solid];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_70  [key=2, style=dotted];
m13_69 -> m13_67  [key=0, style=bold, color=blue];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_70  [key=2, style=dotted];
m13_73 -> m13_71  [key=0, style=bold, color=blue];
m13_79 -> m13_80  [key=0, style=solid];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_82  [key=2, style=dotted];
m13_81 -> m13_79  [key=0, style=bold, color=blue];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_82  [key=2, style=dotted];
m13_85 -> m13_83  [key=0, style=bold, color=blue];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_52  [key=2, style=dotted];
m13_63 -> m13_53  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_54  [key=2, style=dotted];
m13_64 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_64 -> m13_64  [key=3, color=green, style=bold, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation"];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_54  [key=2, style=dotted];
m13_65 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_66 -> m13_62  [key=0, style=bold, color=blue];
m13_86 -> m13_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m13_86 -> m13_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [key=0, style=bold, color=blue];
m16_51 -> m16_52  [key=0, style=solid];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_57  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_58  [key=2, style=dotted];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_59  [key=2, style=dotted];
m16_54 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_59  [key=2, style=dotted];
m16_55 -> m16_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_56 -> m16_51  [key=0, style=bold, color=blue];
m16_35 -> m16_36  [key=0, style=solid];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_22  [key=2, style=dotted];
m16_36 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_39  [key=2, style=dotted];
m16_38 -> m16_35  [key=0, style=bold, color=blue];
m16_76 -> m16_77  [key=0, style=solid];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_17  [key=2, style=dotted];
m16_77 -> m16_18  [key=2, style=dotted];
m16_77 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_57  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid, color=green];
m16_79 -> m16_58  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid, color=green];
m16_80 -> m16_59  [key=2, style=dotted, color=green];
m16_80 -> m16_88  [key=1, style=dashed, color=green, label="lambda expression"];
m16_81 -> m16_76  [key=0, style=bold, color=blue];
m16_44 -> m16_45  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_22  [key=2, style=dotted];
m16_45 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_39  [key=2, style=dotted];
m16_47 -> m16_44  [key=0, style=bold, color=blue];
m16_67 -> m16_68  [key=0, style=solid];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_57  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid, color=green];
m16_69 -> m16_58  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid, color=green];
m16_70 -> m16_59  [key=2, style=dotted, color=green];
m16_70 -> m16_72  [key=1, style=dashed, color=green, label="lambda expression"];
m16_71 -> m16_67  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_11  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_12  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_13  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_14  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_15  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_16  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_17  [key=2, style=dotted];
m16_7 -> m16_18  [key=2, style=dotted];
m16_7 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_17  [key=2, style=dotted];
m16_8 -> m16_18  [key=2, style=dotted];
m16_8 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_18  [key=2, style=dotted];
m16_9 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_10 -> m16_0  [key=0, style=bold, color=blue];
m16_85 -> m16_86  [key=0, style=solid];
m16_19 -> m16_20  [key=0, style=solid];
m16_24 -> m16_25  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_22  [key=2, style=dotted];
m16_20 -> m16_23  [key=2, style=dotted];
m16_21 -> m16_19  [key=0, style=bold, color=blue];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [key=2, style=dotted];
m16_26 -> m16_24  [key=0, style=bold, color=blue];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_22  [key=2, style=dotted];
m16_29 -> m16_31  [key=2, style=dotted];
m16_29 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_30 -> m16_28  [key=0, style=bold, color=blue];
m16_32 -> m16_33  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_32  [key=0, style=bold, color=blue];
m16_40 -> m16_41  [key=0, style=solid];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_43  [key=2, style=dotted];
m16_42 -> m16_40  [key=0, style=bold, color=blue];
m16_48 -> m16_49  [key=0, style=solid];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_43  [key=2, style=dotted];
m16_50 -> m16_48  [key=0, style=bold, color=blue];
m16_60 -> m16_61  [key=0, style=solid];
m16_63 -> m16_64  [key=0, style=solid];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_27  [key=2, style=dotted];
m16_62 -> m16_60  [key=0, style=bold, color=blue];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_66  [key=2, style=dotted];
m16_65 -> m16_63  [key=0, style=bold, color=blue];
m16_72 -> m16_73  [key=0, style=solid, color=green];
m16_73 -> m16_74  [key=0, style=solid, color=green];
m16_73 -> m16_22  [key=2, style=dotted, color=green];
m16_73 -> m16_75  [key=2, style=dotted, color=green];
m16_74 -> m16_72  [key=0, style=bold, color=blue];
m16_82 -> m16_83  [key=0, style=solid];
m16_88 -> m16_89  [key=0, style=solid, color=green];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_22  [key=2, style=dotted];
m16_83 -> m16_31  [key=2, style=dotted];
m16_83 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_84 -> m16_82  [key=0, style=bold, color=blue];
m16_86 -> m16_87  [key=0, style=solid];
m16_87 -> m16_85  [key=0, style=bold, color=blue];
m16_89 -> m16_90  [key=0, style=solid, color=green];
m16_89 -> m16_22  [key=2, style=dotted, color=green];
m16_89 -> m16_75  [key=2, style=dotted, color=green];
m16_90 -> m16_88  [key=0, style=bold, color=blue];
m16_57 -> m16_91  [key=0, style=solid];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_43  [key=2, style=dotted];
m16_92 -> m16_57  [key=0, style=bold, color=blue];
m16_93 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_70  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_80  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m16_93 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m18_114 -> m18_115  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_74  [key=2, style=dotted];
m18_115 -> m18_118  [key=1, style=dashed, color=darkseagreen4, label=handler];
m18_116 -> m18_117  [key=0, style=solid, color=red];
m18_116 -> m18_54  [key=2, style=dotted];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_91  [key=2, style=dotted];
m18_118 -> m18_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_117 -> m18_118  [key=0, style=solid, color=red];
m18_117 -> m18_55  [key=2, style=dotted, color=red];
m18_119 -> m18_114  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_8  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_9  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid, color=red];
m18_3 -> m18_10  [key=2, style=dotted];
m18_3 -> m18_11  [key=2, style=dotted];
m18_3 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_4 -> m18_5  [key=0, style=solid, color=red];
m18_4 -> m18_12  [key=2, style=dotted, color=red];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_13  [key=2, style=dotted];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_10  [key=2, style=dotted];
m18_6 -> m18_11  [key=2, style=dotted];
m18_6 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_7 -> m18_0  [key=0, style=bold, color=blue];
m18_39 -> m18_40  [key=0, style=solid, color=red];
m18_40 -> m18_41  [key=0, style=solid, color=red];
m18_40 -> m18_25  [key=2, style=dotted, color=red];
m18_40 -> m18_43  [key=1, style=dashed, color=red, label="lambda expression"];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_26  [key=2, style=dotted];
m18_42 -> m18_39  [key=0, style=bold, color=blue];
m18_95 -> m18_96  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_74  [key=2, style=dotted];
m18_96 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m18_97 -> m18_98  [key=0, style=solid];
m18_97 -> m18_74  [key=2, style=dotted];
m18_97 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_10  [key=2, style=dotted];
m18_99 -> m18_53  [key=2, style=dotted];
m18_99 -> m18_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_10  [key=2, style=dotted];
m18_98 -> m18_53  [key=2, style=dotted];
m18_98 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_10  [key=2, style=dotted];
m18_100 -> m18_53  [key=2, style=dotted];
m18_100 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_101 -> m18_102  [key=0, style=solid, color=red];
m18_101 -> m18_54  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid, color=red];
m18_102 -> m18_55  [key=2, style=dotted, color=red];
m18_103 -> m18_95  [key=0, style=bold, color=blue];
m18_203 -> m18_204  [key=0, style=solid, color=red];
m18_204 -> m18_205  [key=0, style=solid, color=red];
m18_204 -> m18_13  [key=2, style=dotted, color=red];
m18_204 -> m18_206  [key=1, style=dashed, color=red, label=newState];
m18_204 -> m18_216  [key=1, style=dashed, color=red, label=newState];
m18_205 -> m18_206  [key=0, style=solid, color=red];
m18_205 -> m18_158  [key=2, style=dotted, color=red];
m18_206 -> m18_207  [key=0, style=solid, color=red];
m18_206 -> m18_10  [key=2, style=dotted, color=red];
m18_206 -> m18_192  [key=2, style=dotted, color=red];
m18_206 -> m18_212  [key=1, style=dashed, color=red, label="lambda expression"];
m18_206 -> m18_215  [key=1, style=dashed, color=red, label="lambda expression"];
m18_207 -> m18_208  [key=0, style=solid, color=red];
m18_207 -> m18_54  [key=2, style=dotted];
m18_208 -> m18_209  [key=0, style=solid, color=red];
m18_208 -> m18_55  [key=2, style=dotted, color=red];
m18_209 -> m18_210  [key=0, style=solid, color=red];
m18_209 -> m18_91  [key=2, style=dotted];
m18_209 -> m18_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_210 -> m18_211  [key=0, style=solid, color=red];
m18_210 -> m18_91  [key=2, style=dotted, color=red];
m18_210 -> m18_222  [key=1, style=dashed, color=red, label="lambda expression"];
m18_211 -> m18_203  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid, color=red];
m18_32 -> m18_33  [key=0, style=solid, color=red];
m18_32 -> m18_25  [key=2, style=dotted, color=red];
m18_32 -> m18_35  [key=1, style=dashed, color=red, label="lambda expression"];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_26  [key=2, style=dotted];
m18_34 -> m18_31  [key=0, style=bold, color=blue];
m18_74 -> m18_248  [key=0, style=solid];
m18_74 -> m18_249  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_74 -> m18_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string stateName"];
m18_248 -> m18_249  [key=0, style=solid];
m18_248 -> m18_253  [key=2, style=dotted];
m18_248 -> m18_250  [key=1, style=dashed, color=darkseagreen4, label=handler];
m18_248 -> m18_251  [key=1, style=dashed, color=darkseagreen4, label=handler];
m18_249 -> m18_250  [key=0, style=solid];
m18_249 -> m18_10  [key=2, style=dotted];
m18_249 -> m18_11  [key=2, style=dotted];
m18_249 -> m18_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_250 -> m18_251  [key=0, style=solid];
m18_250 -> m18_254  [key=2, style=dotted];
m18_251 -> m18_252  [key=0, style=solid];
m18_252 -> m18_74  [key=0, style=bold, color=blue];
m18_158 -> m18_258  [key=0, style=solid];
m18_258 -> m18_259  [key=0, style=solid];
m18_258 -> m18_262  [key=2, style=dotted];
m18_258 -> m18_260  [key=1, style=dashed, color=darkseagreen4, label=filter];
m18_259 -> m18_260  [key=0, style=solid];
m18_259 -> m18_263  [key=2, style=dotted];
m18_260 -> m18_261  [key=0, style=solid];
m18_261 -> m18_158  [key=0, style=bold, color=blue];
m18_54 -> m18_246  [key=0, style=solid, color=red];
m18_246 -> m18_247  [key=0, style=solid, color=red];
m18_246 -> m18_38  [key=2, style=dotted, color=red];
m18_247 -> m18_54  [key=0, style=bold, color=blue];
m18_21 -> m18_22  [key=0, style=solid, color=red];
m18_22 -> m18_23  [key=0, style=solid, color=red];
m18_22 -> m18_25  [key=2, style=dotted, color=red];
m18_22 -> m18_27  [key=1, style=dashed, color=red, label="lambda expression"];
m18_23 -> m18_24  [key=0, style=solid, color=red];
m18_23 -> m18_26  [key=2, style=dotted, color=red];
m18_24 -> m18_21  [key=0, style=bold, color=blue];
m18_123 -> m18_124  [key=0, style=solid];
m18_124 -> m18_125  [key=0, style=solid];
m18_124 -> m18_10  [key=2, style=dotted];
m18_124 -> m18_11  [key=2, style=dotted];
m18_124 -> m18_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_125 -> m18_126  [key=0, style=solid, color=red];
m18_125 -> m18_54  [key=2, style=dotted];
m18_126 -> m18_127  [key=0, style=solid, color=red];
m18_126 -> m18_55  [key=2, style=dotted, color=red];
m18_127 -> m18_128  [key=0, style=solid];
m18_127 -> m18_91  [key=2, style=dotted];
m18_127 -> m18_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_128 -> m18_123  [key=0, style=bold, color=blue];
m18_184 -> m18_185  [key=0, style=solid, color=red];
m18_185 -> m18_186  [key=0, style=solid, color=red];
m18_185 -> m18_13  [key=2, style=dotted, color=red];
m18_185 -> m18_187  [key=1, style=dashed, color=red, label=anotherState];
m18_185 -> m18_198  [key=1, style=dashed, color=red, label=anotherState];
m18_185 -> m18_190  [key=1, style=dashed, color=red, label=anotherState];
m18_185 -> m18_201  [key=1, style=dashed, color=red, label=anotherState];
m18_186 -> m18_187  [key=0, style=solid, color=red];
m18_186 -> m18_158  [key=2, style=dotted, color=red];
m18_187 -> m18_188  [key=0, style=solid, color=red];
m18_187 -> m18_10  [key=2, style=dotted, color=red];
m18_187 -> m18_192  [key=2, style=dotted, color=red];
m18_187 -> m18_193  [key=1, style=dashed, color=red, label="lambda expression"];
m18_187 -> m18_197  [key=1, style=dashed, color=red, label="lambda expression"];
m18_190 -> m18_191  [key=0, style=solid, color=red];
m18_190 -> m18_91  [key=2, style=dotted, color=red];
m18_190 -> m18_200  [key=1, style=dashed, color=red, label="lambda expression"];
m18_188 -> m18_189  [key=0, style=solid, color=red];
m18_188 -> m18_54  [key=2, style=dotted, color=red];
m18_189 -> m18_190  [key=0, style=solid, color=red];
m18_189 -> m18_55  [key=2, style=dotted, color=red];
m18_191 -> m18_184  [key=0, style=bold, color=blue];
m18_149 -> m18_150  [key=0, style=solid];
m18_150 -> m18_151  [key=0, style=solid];
m18_150 -> m18_158  [key=2, style=dotted];
m18_150 -> m18_152  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m18_151 -> m18_152  [key=0, style=solid];
m18_151 -> m18_158  [key=2, style=dotted];
m18_151 -> m18_153  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m18_152 -> m18_153  [key=0, style=solid];
m18_152 -> m18_10  [key=2, style=dotted];
m18_152 -> m18_53  [key=2, style=dotted];
m18_152 -> m18_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_153 -> m18_154  [key=0, style=solid];
m18_153 -> m18_10  [key=2, style=dotted];
m18_153 -> m18_53  [key=2, style=dotted];
m18_153 -> m18_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_154 -> m18_155  [key=0, style=solid];
m18_154 -> m18_10  [key=2, style=dotted];
m18_154 -> m18_53  [key=2, style=dotted];
m18_154 -> m18_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_155 -> m18_156  [key=0, style=solid, color=red];
m18_155 -> m18_54  [key=2, style=dotted];
m18_156 -> m18_157  [key=0, style=solid, color=red];
m18_156 -> m18_55  [key=2, style=dotted, color=red];
m18_157 -> m18_149  [key=0, style=bold, color=blue];
m18_255 -> m18_256  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_18 -> m18_19  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [key=2, style=dotted];
m18_16 -> m18_14  [key=0, style=bold, color=blue];
m18_19 -> m18_20  [key=0, style=solid];
m18_20 -> m18_18  [key=0, style=bold, color=blue];
m18_27 -> m18_28  [key=0, style=solid, color=red];
m18_28 -> m18_29  [key=0, style=solid, color=red];
m18_28 -> m18_30  [key=2, style=dotted, color=red];
m18_29 -> m18_27  [key=0, style=bold, color=blue];
m18_35 -> m18_36  [key=0, style=solid, color=red];
m18_36 -> m18_37  [key=0, style=solid, color=red];
m18_36 -> m18_38  [key=2, style=dotted, color=red];
m18_37 -> m18_35  [key=0, style=bold, color=blue];
m18_43 -> m18_44  [key=0, style=solid, color=red];
m18_44 -> m18_45  [key=0, style=solid, color=red];
m18_44 -> m18_38  [key=2, style=dotted, color=red];
m18_45 -> m18_43  [key=0, style=bold, color=blue];
m18_57 -> m18_58  [key=0, style=solid, color=red];
m18_61 -> m18_62  [key=0, style=solid, color=red];
m18_58 -> m18_59  [key=0, style=solid, color=red];
m18_58 -> m18_60  [key=2, style=dotted, color=red];
m18_59 -> m18_57  [key=0, style=bold, color=blue];
m18_62 -> m18_63  [key=0, style=solid, color=red];
m18_62 -> m18_64  [key=2, style=dotted, color=red];
m18_63 -> m18_61  [key=0, style=bold, color=blue];
m18_75 -> m18_76  [key=0, style=solid];
m18_79 -> m18_80  [key=0, style=solid];
m18_82 -> m18_83  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_25  [key=2, style=dotted];
m18_76 -> m18_78  [key=2, style=dotted];
m18_77 -> m18_75  [key=0, style=bold, color=blue];
m18_80 -> m18_81  [key=0, style=solid];
m18_80 -> m18_25  [key=2, style=dotted];
m18_80 -> m18_78  [key=2, style=dotted];
m18_81 -> m18_79  [key=0, style=bold, color=blue];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_25  [key=2, style=dotted];
m18_83 -> m18_60  [key=2, style=dotted];
m18_84 -> m18_82  [key=0, style=bold, color=blue];
m18_92 -> m18_93  [key=0, style=solid];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_25  [key=2, style=dotted];
m18_93 -> m18_78  [key=2, style=dotted];
m18_94 -> m18_92  [key=0, style=bold, color=blue];
m18_104 -> m18_105  [key=0, style=solid];
m18_107 -> m18_108  [key=0, style=solid];
m18_111 -> m18_112  [key=0, style=solid];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_25  [key=2, style=dotted];
m18_105 -> m18_60  [key=2, style=dotted];
m18_106 -> m18_104  [key=0, style=bold, color=blue];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_25  [key=2, style=dotted];
m18_108 -> m18_110  [key=2, style=dotted];
m18_109 -> m18_107  [key=0, style=bold, color=blue];
m18_112 -> m18_113  [key=0, style=solid];
m18_112 -> m18_25  [key=2, style=dotted];
m18_112 -> m18_110  [key=2, style=dotted];
m18_113 -> m18_111  [key=0, style=bold, color=blue];
m18_120 -> m18_121  [key=0, style=solid];
m18_121 -> m18_122  [key=0, style=solid];
m18_121 -> m18_25  [key=2, style=dotted];
m18_121 -> m18_110  [key=2, style=dotted];
m18_122 -> m18_120  [key=0, style=bold, color=blue];
m18_129 -> m18_130  [key=0, style=solid];
m18_132 -> m18_133  [key=0, style=solid];
m18_130 -> m18_131  [key=0, style=solid];
m18_131 -> m18_129  [key=0, style=bold, color=blue];
m18_133 -> m18_134  [key=0, style=solid];
m18_133 -> m18_25  [key=2, style=dotted];
m18_133 -> m18_135  [key=2, style=dotted];
m18_134 -> m18_132  [key=0, style=bold, color=blue];
m18_142 -> m18_143  [key=0, style=solid];
m18_145 -> m18_146  [key=0, style=solid];
m18_143 -> m18_144  [key=0, style=solid];
m18_144 -> m18_142  [key=0, style=bold, color=blue];
m18_146 -> m18_147  [key=0, style=solid];
m18_146 -> m18_148  [key=2, style=dotted];
m18_147 -> m18_145  [key=0, style=bold, color=blue];
m18_159 -> m18_160  [key=0, style=solid];
m18_163 -> m18_164  [key=0, style=solid];
m18_166 -> m18_167  [key=0, style=solid];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_25  [key=2, style=dotted];
m18_160 -> m18_162  [key=2, style=dotted];
m18_161 -> m18_159  [key=0, style=bold, color=blue];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_25  [key=2, style=dotted];
m18_164 -> m18_162  [key=2, style=dotted];
m18_165 -> m18_163  [key=0, style=bold, color=blue];
m18_167 -> m18_168  [key=0, style=solid];
m18_167 -> m18_25  [key=2, style=dotted];
m18_167 -> m18_60  [key=2, style=dotted];
m18_168 -> m18_166  [key=0, style=bold, color=blue];
m18_177 -> m18_178  [key=0, style=solid];
m18_181 -> m18_182  [key=0, style=solid];
m18_178 -> m18_179  [key=0, style=solid];
m18_178 -> m18_25  [key=2, style=dotted];
m18_178 -> m18_180  [key=2, style=dotted];
m18_179 -> m18_177  [key=0, style=bold, color=blue];
m18_182 -> m18_183  [key=0, style=solid];
m18_182 -> m18_25  [key=2, style=dotted];
m18_182 -> m18_180  [key=2, style=dotted];
m18_183 -> m18_181  [key=0, style=bold, color=blue];
m18_198 -> m18_199  [key=0, style=solid, color=red];
m18_201 -> m18_202  [key=0, style=solid, color=red];
m18_201 -> m18_60  [key=2, style=dotted, color=red];
m18_193 -> m18_194  [key=0, style=solid, color=red];
m18_197 -> m18_198  [key=0, style=solid, color=red];
m18_200 -> m18_201  [key=0, style=solid, color=red];
m18_194 -> m18_195  [key=0, style=solid, color=red];
m18_194 -> m18_25  [key=2, style=dotted, color=red];
m18_194 -> m18_196  [key=2, style=dotted, color=red];
m18_195 -> m18_193  [key=0, style=bold, color=blue];
m18_199 -> m18_197  [key=0, style=bold, color=blue];
m18_202 -> m18_200  [key=0, style=bold, color=blue];
m18_216 -> m18_217  [key=0, style=solid, color=red];
m18_212 -> m18_213  [key=0, style=solid, color=red];
m18_215 -> m18_216  [key=0, style=solid, color=red];
m18_218 -> m18_219  [key=0, style=solid];
m18_222 -> m18_223  [key=0, style=solid, color=red];
m18_213 -> m18_214  [key=0, style=solid, color=red];
m18_213 -> m18_25  [key=2, style=dotted, color=red];
m18_213 -> m18_196  [key=2, style=dotted, color=red];
m18_214 -> m18_212  [key=0, style=bold, color=blue];
m18_217 -> m18_215  [key=0, style=bold, color=blue];
m18_219 -> m18_220  [key=0, style=solid];
m18_219 -> m18_221  [key=2, style=dotted];
m18_220 -> m18_218  [key=0, style=bold, color=blue];
m18_223 -> m18_224  [key=0, style=solid, color=red];
m18_223 -> m18_64  [key=2, style=dotted, color=red];
m18_224 -> m18_222  [key=0, style=bold, color=blue];
m18_241 -> m18_242  [key=0, style=solid, color=red];
m18_241 -> m18_25  [key=2, style=dotted, color=red];
m18_241 -> m18_60  [key=2, style=dotted, color=red];
m18_241 -> m18_243  [key=1, style=dashed, color=red, label="lambda expression"];
m18_244 -> m18_245  [key=0, style=solid, color=red];
m18_237 -> m18_238  [key=0, style=solid, color=red];
m18_240 -> m18_241  [key=0, style=solid, color=red];
m18_238 -> m18_239  [key=0, style=solid, color=red];
m18_238 -> m18_25  [key=2, style=dotted, color=red];
m18_238 -> m18_180  [key=2, style=dotted, color=red];
m18_239 -> m18_237  [key=0, style=bold, color=blue];
m18_242 -> m18_240  [key=0, style=bold, color=blue];
m18_243 -> m18_244  [key=0, style=solid, color=red];
m18_245 -> m18_243  [key=0, style=bold, color=blue];
m18_256 -> m18_257  [key=0, style=solid];
m18_257 -> m18_255  [key=0, style=bold, color=blue];
m18_225 -> m18_226  [key=0, style=solid, color=red];
m18_226 -> m18_227  [key=0, style=solid, color=red];
m18_226 -> m18_234  [key=2, style=dotted, color=red];
m18_226 -> m18_228  [key=1, style=dashed, color=red, label=exception];
m18_226 -> m18_231  [key=1, style=dashed, color=red, label=exception];
m18_226 -> m18_241  [key=1, style=dashed, color=red, label=exception];
m18_226 -> m18_244  [key=1, style=dashed, color=red, label=exception];
m18_227 -> m18_228  [key=0, style=solid, color=red];
m18_227 -> m18_158  [key=2, style=dotted, color=red];
m18_228 -> m18_229  [key=0, style=solid, color=red];
m18_228 -> m18_10  [key=2, style=dotted, color=red];
m18_228 -> m18_235  [key=2, style=dotted, color=red];
m18_228 -> m18_237  [key=1, style=dashed, color=red, label="lambda expression"];
m18_231 -> m18_232  [key=0, style=solid, color=red];
m18_231 -> m18_91  [key=2, style=dotted, color=red];
m18_231 -> m18_240  [key=1, style=dashed, color=red, label="lambda expression"];
m18_229 -> m18_230  [key=0, style=solid, color=red];
m18_229 -> m18_54  [key=2, style=dotted, color=red];
m18_230 -> m18_231  [key=0, style=solid, color=red];
m18_230 -> m18_55  [key=2, style=dotted, color=red];
m18_230 -> m18_232  [key=1, style=dashed, color=red, label=result];
m18_232 -> m18_233  [key=0, style=solid, color=red];
m18_232 -> m18_236  [key=2, style=dotted, color=red];
m18_233 -> m18_225  [key=0, style=bold, color=blue];
m18_169 -> m18_170  [key=0, style=solid];
m18_170 -> m18_171  [key=0, style=solid];
m18_170 -> m18_158  [key=2, style=dotted];
m18_170 -> m18_172  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m18_171 -> m18_172  [key=0, style=solid];
m18_171 -> m18_158  [key=2, style=dotted];
m18_171 -> m18_173  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m18_172 -> m18_173  [key=0, style=solid];
m18_172 -> m18_10  [key=2, style=dotted];
m18_172 -> m18_53  [key=2, style=dotted];
m18_172 -> m18_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_173 -> m18_174  [key=0, style=solid];
m18_173 -> m18_10  [key=2, style=dotted];
m18_173 -> m18_53  [key=2, style=dotted];
m18_173 -> m18_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_174 -> m18_175  [key=0, style=solid, color=red];
m18_174 -> m18_54  [key=2, style=dotted];
m18_175 -> m18_176  [key=0, style=solid, color=red];
m18_175 -> m18_55  [key=2, style=dotted, color=red];
m18_176 -> m18_169  [key=0, style=bold, color=blue];
m18_12 -> m18_12  [key=3, color=darkorchid, style=bold, label="Field variable string OldStateName"];
m18_46 -> m18_47  [key=0, style=solid, color=red];
m18_47 -> m18_48  [key=0, style=solid, color=red];
m18_47 -> m18_10  [key=2, style=dotted, color=red];
m18_47 -> m18_53  [key=2, style=dotted, color=red];
m18_47 -> m18_57  [key=1, style=dashed, color=red, label="lambda expression"];
m18_48 -> m18_49  [key=0, style=solid, color=red];
m18_48 -> m18_10  [key=2, style=dotted, color=red];
m18_48 -> m18_53  [key=2, style=dotted, color=red];
m18_48 -> m18_61  [key=1, style=dashed, color=red, label="lambda expression"];
m18_49 -> m18_50  [key=0, style=solid, color=red];
m18_49 -> m18_54  [key=2, style=dotted];
m18_50 -> m18_51  [key=0, style=solid, color=red];
m18_50 -> m18_55  [key=2, style=dotted, color=red];
m18_51 -> m18_52  [key=0, style=solid, color=red];
m18_51 -> m18_56  [key=2, style=dotted, color=red];
m18_52 -> m18_46  [key=0, style=bold, color=blue];
m18_65 -> m18_66  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_74  [key=2, style=dotted];
m18_66 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_74  [key=2, style=dotted];
m18_67 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_10  [key=2, style=dotted];
m18_68 -> m18_53  [key=2, style=dotted];
m18_68 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_10  [key=2, style=dotted];
m18_69 -> m18_53  [key=2, style=dotted];
m18_69 -> m18_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_10  [key=2, style=dotted];
m18_70 -> m18_53  [key=2, style=dotted];
m18_70 -> m18_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_71 -> m18_72  [key=0, style=solid, color=red];
m18_71 -> m18_54  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid, color=red];
m18_72 -> m18_55  [key=2, style=dotted, color=red];
m18_73 -> m18_65  [key=0, style=bold, color=blue];
m18_136 -> m18_137  [key=0, style=solid];
m18_137 -> m18_138  [key=0, style=solid];
m18_137 -> m18_10  [key=2, style=dotted];
m18_137 -> m18_11  [key=2, style=dotted];
m18_137 -> m18_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_138 -> m18_139  [key=0, style=solid, color=red];
m18_138 -> m18_54  [key=2, style=dotted];
m18_139 -> m18_140  [key=0, style=solid, color=red];
m18_139 -> m18_55  [key=2, style=dotted, color=red];
m18_140 -> m18_141  [key=0, style=solid];
m18_140 -> m18_91  [key=2, style=dotted];
m18_140 -> m18_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_141 -> m18_136  [key=0, style=bold, color=blue];
m18_85 -> m18_86  [key=0, style=solid];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_74  [key=2, style=dotted];
m18_86 -> m18_89  [key=1, style=dashed, color=darkseagreen4, label=handler];
m18_87 -> m18_88  [key=0, style=solid, color=red];
m18_87 -> m18_54  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_91  [key=2, style=dotted];
m18_89 -> m18_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_88 -> m18_89  [key=0, style=solid, color=red];
m18_88 -> m18_55  [key=2, style=dotted, color=red];
m18_90 -> m18_85  [key=0, style=bold, color=blue];
m18_264 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_22  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_28  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_32  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_36  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_40  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_44  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_47  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_58  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_48  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_50  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_72  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_88  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_102  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_117  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_126  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_139  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_140  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_151  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_156  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_182  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_175  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_186  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_188  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_189  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_190  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_205  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_208  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_219  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_210  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_227  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_229  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_230  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_231  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_246  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_264 -> m18_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateChangeProcessFacts"];
m18_265 -> m18_198  [key=1, style=dashed, color=red, label=anotherState];
m18_265 -> m18_201  [key=1, style=dashed, color=red, label=anotherState];
m18_266 -> m18_216  [key=1, style=dashed, color=red, label=newState];
m18_267 -> m18_241  [key=1, style=dashed, color=red, label=exception];
m18_267 -> m18_244  [key=1, style=dashed, color=red, label=exception];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [key=0, style=bold, color=blue];
m20_4 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m20_4 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m22_1 -> m22_2  [key=0, style=solid];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_0  [key=0, style=bold, color=blue];
m22_4 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m22_4 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m24_93 -> m24_94  [key=0, style=solid];
m24_94 -> m24_95  [key=0, style=solid];
m24_94 -> m24_14  [key=2, style=dotted];
m24_94 -> m24_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_94 -> m24_97  [key=1, style=dashed, color=darkseagreen4, label=job];
m24_94 -> m24_98  [key=1, style=dashed, color=darkseagreen4, label=job];
m24_94 -> m24_107  [key=1, style=dashed, color=darkseagreen4, label=job];
m24_95 -> m24_96  [key=0, style=solid];
m24_95 -> m24_100  [key=2, style=dotted];
m24_97 -> m24_98  [key=0, style=solid];
m24_97 -> m24_75  [key=2, style=dotted];
m24_98 -> m24_99  [key=0, style=solid];
m24_98 -> m24_101  [key=2, style=dotted];
m24_98 -> m24_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_96 -> m24_97  [key=0, style=solid];
m24_96 -> m24_71  [key=2, style=dotted];
m24_99 -> m24_93  [key=0, style=bold, color=blue];
m24_59 -> m24_60  [key=0, style=solid];
m24_60 -> m24_61  [key=0, style=solid];
m24_60 -> m24_32  [key=2, style=dotted];
m24_60 -> m24_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_61 -> m24_62  [key=0, style=solid];
m24_61 -> m24_54  [key=2, style=dotted];
m24_62 -> m24_59  [key=0, style=bold, color=blue];
m24_84 -> m24_85  [key=0, style=solid];
m24_85 -> m24_86  [key=0, style=solid];
m24_85 -> m24_71  [key=2, style=dotted];
m24_85 -> m24_90  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m24_86 -> m24_87  [key=0, style=solid];
m24_86 -> m24_32  [key=2, style=dotted];
m24_86 -> m24_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_87 -> m24_88  [key=0, style=solid];
m24_87 -> m24_54  [key=2, style=dotted];
m24_88 -> m24_84  [key=0, style=bold, color=blue];
m24_76 -> m24_77  [key=0, style=solid];
m24_77 -> m24_78  [key=0, style=solid];
m24_77 -> m24_71  [key=2, style=dotted];
m24_77 -> m24_82  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m24_78 -> m24_79  [key=0, style=solid];
m24_78 -> m24_32  [key=2, style=dotted];
m24_78 -> m24_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_79 -> m24_80  [key=0, style=solid];
m24_79 -> m24_54  [key=2, style=dotted];
m24_80 -> m24_76  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid, color=red];
m24_1 -> m24_2  [key=0, style=solid, color=red];
m24_1 -> m24_13  [key=2, style=dotted, color=red];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_14  [key=2, style=dotted];
m24_2 -> m24_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_15  [key=2, style=dotted];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_16  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_17  [key=2, style=dotted];
m24_5 -> m24_18  [key=2, style=dotted];
m24_5 -> m24_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_19  [key=2, style=dotted];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_17  [key=2, style=dotted];
m24_7 -> m24_18  [key=2, style=dotted];
m24_7 -> m24_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_17  [key=2, style=dotted];
m24_8 -> m24_20  [key=2, style=dotted];
m24_8 -> m24_18  [key=2, style=dotted];
m24_8 -> m24_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_21  [key=2, style=dotted];
m24_10 -> m24_11  [key=0, style=solid, color=red];
m24_10 -> m24_17  [key=2, style=dotted];
m24_10 -> m24_18  [key=2, style=dotted];
m24_10 -> m24_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_11 -> m24_12  [key=0, style=solid, color=red];
m24_11 -> m24_17  [key=2, style=dotted, color=red];
m24_11 -> m24_18  [key=2, style=dotted, color=red];
m24_11 -> m24_43  [key=1, style=dashed, color=red, label="lambda expression"];
m24_12 -> m24_0  [key=0, style=bold, color=blue];
m24_184 -> m24_185  [key=0, style=solid];
m24_185 -> m24_186  [key=0, style=solid];
m24_185 -> m24_17  [key=2, style=dotted];
m24_185 -> m24_18  [key=2, style=dotted];
m24_185 -> m24_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_186 -> m24_187  [key=0, style=solid, color=red];
m24_186 -> m24_71  [key=2, style=dotted];
m24_187 -> m24_188  [key=0, style=solid, color=red];
m24_187 -> m24_135  [key=2, style=dotted, color=red];
m24_188 -> m24_189  [key=0, style=solid];
m24_188 -> m24_192  [key=2, style=dotted];
m24_189 -> m24_190  [key=0, style=solid, color=red];
m24_189 -> m24_101  [key=2, style=dotted];
m24_189 -> m24_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_190 -> m24_191  [key=0, style=solid, color=red];
m24_190 -> m24_101  [key=2, style=dotted, color=red];
m24_190 -> m24_199  [key=1, style=dashed, color=red, label="lambda expression"];
m24_191 -> m24_184  [key=0, style=bold, color=blue];
m24_153 -> m24_154  [key=0, style=solid];
m24_154 -> m24_155  [key=0, style=solid, color=red];
m24_154 -> m24_71  [key=2, style=dotted];
m24_155 -> m24_156  [key=0, style=solid, color=red];
m24_155 -> m24_135  [key=2, style=dotted, color=red];
m24_156 -> m24_157  [key=0, style=solid];
m24_156 -> m24_101  [key=2, style=dotted];
m24_156 -> m24_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_157 -> m24_153  [key=0, style=bold, color=blue];
m24_136 -> m24_137  [key=0, style=solid];
m24_137 -> m24_138  [key=0, style=solid, color=red];
m24_137 -> m24_71  [key=2, style=dotted];
m24_137 -> m24_142  [key=1, style=dashed, color=red, label=stateMachine];
m24_138 -> m24_139  [key=0, style=solid, color=red];
m24_138 -> m24_32  [key=2, style=dotted, color=red];
m24_138 -> m24_141  [key=1, style=dashed, color=red, label="lambda expression"];
m24_139 -> m24_140  [key=0, style=solid];
m24_139 -> m24_54  [key=2, style=dotted];
m24_140 -> m24_136  [key=0, style=bold, color=blue];
m24_224 -> m24_225  [key=0, style=solid];
m24_225 -> m24_226  [key=0, style=solid, color=red];
m24_225 -> m24_17  [key=2, style=dotted];
m24_225 -> m24_20  [key=2, style=dotted];
m24_225 -> m24_232  [key=2, style=dotted];
m24_225 -> m24_233  [key=2, style=dotted];
m24_225 -> m24_18  [key=2, style=dotted];
m24_225 -> m24_234  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_226 -> m24_227  [key=0, style=solid, color=red];
m24_226 -> m24_17  [key=2, style=dotted, color=red];
m24_226 -> m24_18  [key=2, style=dotted, color=red];
m24_226 -> m24_237  [key=1, style=dashed, color=red, label="lambda expression"];
m24_227 -> m24_228  [key=0, style=solid, color=red];
m24_227 -> m24_71  [key=2, style=dotted];
m24_228 -> m24_229  [key=0, style=solid, color=red];
m24_228 -> m24_135  [key=2, style=dotted, color=red];
m24_228 -> m24_230  [key=1, style=dashed, color=red, label=result];
m24_229 -> m24_230  [key=0, style=solid, color=red];
m24_229 -> m24_101  [key=2, style=dotted, color=red];
m24_229 -> m24_240  [key=1, style=dashed, color=red, label="lambda expression"];
m24_230 -> m24_231  [key=0, style=solid];
m24_230 -> m24_192  [key=2, style=dotted];
m24_231 -> m24_224  [key=0, style=bold, color=blue];
m24_202 -> m24_203  [key=0, style=solid];
m24_203 -> m24_204  [key=0, style=solid, color=red];
m24_203 -> m24_71  [key=2, style=dotted];
m24_204 -> m24_205  [key=0, style=solid, color=red];
m24_204 -> m24_135  [key=2, style=dotted, color=red];
m24_205 -> m24_206  [key=0, style=solid, color=red];
m24_205 -> m24_192  [key=2, style=dotted];
m24_206 -> m24_207  [key=0, style=solid, color=red];
m24_206 -> m24_101  [key=2, style=dotted, color=red];
m24_206 -> m24_208  [key=1, style=dashed, color=red, label="lambda expression"];
m24_207 -> m24_202  [key=0, style=bold, color=blue];
m24_145 -> m24_146  [key=0, style=solid];
m24_146 -> m24_147  [key=0, style=solid, color=red];
m24_146 -> m24_71  [key=2, style=dotted];
m24_146 -> m24_151  [key=1, style=dashed, color=red, label=stateMachine];
m24_147 -> m24_148  [key=0, style=solid, color=red];
m24_147 -> m24_32  [key=2, style=dotted, color=red];
m24_147 -> m24_150  [key=1, style=dashed, color=red, label="lambda expression"];
m24_148 -> m24_149  [key=0, style=solid];
m24_148 -> m24_54  [key=2, style=dotted];
m24_149 -> m24_145  [key=0, style=bold, color=blue];
m24_50 -> m24_51  [key=0, style=solid, color=red];
m24_51 -> m24_52  [key=0, style=solid, color=red];
m24_51 -> m24_32  [key=2, style=dotted, color=red];
m24_51 -> m24_55  [key=1, style=dashed, color=red, label="lambda expression"];
m24_52 -> m24_53  [key=0, style=solid];
m24_52 -> m24_54  [key=2, style=dotted];
m24_53 -> m24_50  [key=0, style=bold, color=blue];
m24_249 -> m24_250  [key=0, style=solid];
m24_250 -> m24_251  [key=0, style=solid, color=red];
m24_250 -> m24_17  [key=2, style=dotted];
m24_250 -> m24_20  [key=2, style=dotted];
m24_250 -> m24_232  [key=2, style=dotted];
m24_250 -> m24_258  [key=2, style=dotted];
m24_250 -> m24_18  [key=2, style=dotted];
m24_250 -> m24_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_251 -> m24_252  [key=0, style=solid, color=red];
m24_251 -> m24_17  [key=2, style=dotted, color=red];
m24_251 -> m24_18  [key=2, style=dotted, color=red];
m24_251 -> m24_262  [key=1, style=dashed, color=red, label="lambda expression"];
m24_252 -> m24_253  [key=0, style=solid];
m24_252 -> m24_17  [key=2, style=dotted];
m24_252 -> m24_18  [key=2, style=dotted];
m24_252 -> m24_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_253 -> m24_254  [key=0, style=solid, color=red];
m24_253 -> m24_71  [key=2, style=dotted];
m24_254 -> m24_255  [key=0, style=solid, color=red];
m24_254 -> m24_135  [key=2, style=dotted, color=red];
m24_254 -> m24_256  [key=1, style=dashed, color=red, label=result];
m24_255 -> m24_256  [key=0, style=solid, color=red];
m24_255 -> m24_101  [key=2, style=dotted, color=red];
m24_255 -> m24_268  [key=1, style=dashed, color=red, label="lambda expression"];
m24_256 -> m24_257  [key=0, style=solid];
m24_256 -> m24_168  [key=2, style=dotted];
m24_257 -> m24_249  [key=0, style=bold, color=blue];
m24_71 -> m24_271  [key=0, style=solid, color=red];
m24_271 -> m24_272  [key=0, style=solid, color=red];
m24_271 -> m24_58  [key=2, style=dotted, color=red];
m24_272 -> m24_71  [key=0, style=bold, color=blue];
m24_66 -> m24_67  [key=0, style=solid];
m24_67 -> m24_68  [key=0, style=solid];
m24_67 -> m24_71  [key=2, style=dotted];
m24_67 -> m24_73  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m24_68 -> m24_69  [key=0, style=solid];
m24_68 -> m24_32  [key=2, style=dotted];
m24_68 -> m24_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_69 -> m24_70  [key=0, style=solid];
m24_69 -> m24_54  [key=2, style=dotted];
m24_70 -> m24_66  [key=0, style=bold, color=blue];
m24_123 -> m24_124  [key=0, style=solid];
m24_124 -> m24_125  [key=0, style=solid];
m24_124 -> m24_71  [key=2, style=dotted];
m24_125 -> m24_126  [key=0, style=solid];
m24_125 -> m24_75  [key=2, style=dotted];
m24_125 -> m24_54  [key=2, style=dotted];
m24_126 -> m24_123  [key=0, style=bold, color=blue];
m24_268 -> m24_269  [key=0, style=solid, color=red];
m24_22 -> m24_23  [key=0, style=solid];
m24_26 -> m24_27  [key=0, style=solid];
m24_29 -> m24_30  [key=0, style=solid];
m24_34 -> m24_35  [key=0, style=solid];
m24_38 -> m24_39  [key=0, style=solid];
m24_43 -> m24_44  [key=0, style=solid, color=red];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_25  [key=2, style=dotted];
m24_24 -> m24_22  [key=0, style=bold, color=blue];
m24_27 -> m24_28  [key=0, style=solid];
m24_28 -> m24_26  [key=0, style=bold, color=blue];
m24_30 -> m24_31  [key=0, style=solid];
m24_30 -> m24_32  [key=2, style=dotted];
m24_30 -> m24_33  [key=2, style=dotted];
m24_31 -> m24_29  [key=0, style=bold, color=blue];
m24_35 -> m24_36  [key=0, style=solid];
m24_35 -> m24_37  [key=2, style=dotted];
m24_36 -> m24_34  [key=0, style=bold, color=blue];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_41  [key=2, style=dotted];
m24_39 -> m24_32  [key=2, style=dotted];
m24_39 -> m24_42  [key=2, style=dotted];
m24_40 -> m24_38  [key=0, style=bold, color=blue];
m24_44 -> m24_45  [key=0, style=solid, color=red];
m24_44 -> m24_32  [key=2, style=dotted, color=red];
m24_44 -> m24_46  [key=2, style=dotted, color=red];
m24_44 -> m24_47  [key=1, style=dashed, color=red, label="lambda expression"];
m24_45 -> m24_43  [key=0, style=bold, color=blue];
m24_47 -> m24_48  [key=0, style=solid, color=red];
m24_48 -> m24_49  [key=0, style=solid, color=red];
m24_49 -> m24_47  [key=0, style=bold, color=blue];
m24_55 -> m24_56  [key=0, style=solid, color=red];
m24_56 -> m24_57  [key=0, style=solid, color=red];
m24_56 -> m24_58  [key=2, style=dotted, color=red];
m24_57 -> m24_55  [key=0, style=bold, color=blue];
m24_63 -> m24_64  [key=0, style=solid];
m24_64 -> m24_65  [key=0, style=solid];
m24_64 -> m24_58  [key=2, style=dotted];
m24_65 -> m24_63  [key=0, style=bold, color=blue];
m24_73 -> m24_74  [key=0, style=solid];
m24_73 -> m24_75  [key=2, style=dotted];
m24_72 -> m24_73  [key=0, style=solid];
m24_74 -> m24_72  [key=0, style=bold, color=blue];
m24_82 -> m24_83  [key=0, style=solid];
m24_82 -> m24_75  [key=2, style=dotted];
m24_81 -> m24_82  [key=0, style=solid];
m24_83 -> m24_81  [key=0, style=bold, color=blue];
m24_90 -> m24_91  [key=0, style=solid];
m24_90 -> m24_92  [key=2, style=dotted];
m24_89 -> m24_90  [key=0, style=solid];
m24_91 -> m24_89  [key=0, style=bold, color=blue];
m24_102 -> m24_103  [key=0, style=solid];
m24_107 -> m24_108  [key=0, style=solid];
m24_107 -> m24_32  [key=2, style=dotted];
m24_107 -> m24_33  [key=2, style=dotted];
m24_107 -> m24_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_106 -> m24_107  [key=0, style=solid];
m24_103 -> m24_104  [key=0, style=solid];
m24_103 -> m24_105  [key=2, style=dotted];
m24_104 -> m24_102  [key=0, style=bold, color=blue];
m24_108 -> m24_106  [key=0, style=bold, color=blue];
m24_109 -> m24_110  [key=0, style=solid];
m24_110 -> m24_111  [key=0, style=solid];
m24_111 -> m24_109  [key=0, style=bold, color=blue];
m24_117 -> m24_118  [key=0, style=solid, color=red];
m24_118 -> m24_119  [key=0, style=solid, color=red];
m24_118 -> m24_32  [key=2, style=dotted, color=red];
m24_118 -> m24_46  [key=2, style=dotted, color=red];
m24_118 -> m24_120  [key=1, style=dashed, color=red, label="lambda expression"];
m24_119 -> m24_117  [key=0, style=bold, color=blue];
m24_120 -> m24_121  [key=0, style=solid, color=red];
m24_121 -> m24_122  [key=0, style=solid, color=red];
m24_122 -> m24_120  [key=0, style=bold, color=blue];
m24_133 -> m24_134  [key=0, style=solid, color=red];
m24_133 -> m24_135  [key=2, style=dotted, color=red];
m24_132 -> m24_133  [key=0, style=solid, color=red];
m24_134 -> m24_132  [key=0, style=bold, color=blue];
m24_142 -> m24_143  [key=0, style=solid, color=red];
m24_142 -> m24_144  [key=2, style=dotted, color=red];
m24_141 -> m24_142  [key=0, style=solid, color=red];
m24_143 -> m24_141  [key=0, style=bold, color=blue];
m24_151 -> m24_152  [key=0, style=solid, color=red];
m24_151 -> m24_135  [key=2, style=dotted, color=red];
m24_150 -> m24_151  [key=0, style=solid, color=red];
m24_152 -> m24_150  [key=0, style=bold, color=blue];
m24_158 -> m24_159  [key=0, style=solid];
m24_159 -> m24_160  [key=0, style=solid];
m24_159 -> m24_161  [key=2, style=dotted];
m24_160 -> m24_158  [key=0, style=bold, color=blue];
m24_169 -> m24_170  [key=0, style=solid, color=red];
m24_170 -> m24_171  [key=0, style=solid, color=red];
m24_170 -> m24_32  [key=2, style=dotted, color=red];
m24_170 -> m24_46  [key=2, style=dotted, color=red];
m24_170 -> m24_172  [key=1, style=dashed, color=red, label="lambda expression"];
m24_171 -> m24_169  [key=0, style=bold, color=blue];
m24_172 -> m24_173  [key=0, style=solid, color=red];
m24_173 -> m24_174  [key=0, style=solid, color=red];
m24_173 -> m24_175  [key=2, style=dotted, color=red];
m24_174 -> m24_172  [key=0, style=bold, color=blue];
m24_181 -> m24_182  [key=0, style=solid, color=red];
m24_182 -> m24_183  [key=0, style=solid, color=red];
m24_182 -> m24_32  [key=2, style=dotted, color=red];
m24_182 -> m24_46  [key=2, style=dotted, color=red];
m24_183 -> m24_181  [key=0, style=bold, color=blue];
m24_193 -> m24_194  [key=0, style=solid];
m24_196 -> m24_197  [key=0, style=solid];
m24_199 -> m24_200  [key=0, style=solid, color=red];
m24_194 -> m24_195  [key=0, style=solid];
m24_194 -> m24_32  [key=2, style=dotted];
m24_194 -> m24_37  [key=2, style=dotted];
m24_195 -> m24_193  [key=0, style=bold, color=blue];
m24_197 -> m24_198  [key=0, style=solid];
m24_197 -> m24_37  [key=2, style=dotted];
m24_198 -> m24_196  [key=0, style=bold, color=blue];
m24_200 -> m24_201  [key=0, style=solid, color=red];
m24_200 -> m24_32  [key=2, style=dotted, color=red];
m24_200 -> m24_46  [key=2, style=dotted, color=red];
m24_201 -> m24_199  [key=0, style=bold, color=blue];
m24_208 -> m24_209  [key=0, style=solid, color=red];
m24_209 -> m24_210  [key=0, style=solid, color=red];
m24_209 -> m24_32  [key=2, style=dotted, color=red];
m24_209 -> m24_46  [key=2, style=dotted, color=red];
m24_210 -> m24_208  [key=0, style=bold, color=blue];
m24_218 -> m24_219  [key=0, style=solid, color=red];
m24_221 -> m24_222  [key=0, style=solid, color=red];
m24_219 -> m24_220  [key=0, style=solid, color=red];
m24_219 -> m24_32  [key=2, style=dotted, color=red];
m24_219 -> m24_46  [key=2, style=dotted, color=red];
m24_220 -> m24_218  [key=0, style=bold, color=blue];
m24_222 -> m24_223  [key=0, style=solid, color=red];
m24_222 -> m24_32  [key=2, style=dotted, color=red];
m24_222 -> m24_46  [key=2, style=dotted, color=red];
m24_223 -> m24_221  [key=0, style=bold, color=blue];
m24_234 -> m24_235  [key=0, style=solid];
m24_237 -> m24_238  [key=0, style=solid, color=red];
m24_240 -> m24_241  [key=0, style=solid, color=red];
m24_235 -> m24_236  [key=0, style=solid];
m24_235 -> m24_37  [key=2, style=dotted];
m24_236 -> m24_234  [key=0, style=bold, color=blue];
m24_238 -> m24_239  [key=0, style=solid, color=red];
m24_238 -> m24_32  [key=2, style=dotted, color=red];
m24_238 -> m24_46  [key=2, style=dotted, color=red];
m24_239 -> m24_237  [key=0, style=bold, color=blue];
m24_241 -> m24_242  [key=0, style=solid, color=red];
m24_241 -> m24_32  [key=2, style=dotted, color=red];
m24_241 -> m24_46  [key=2, style=dotted, color=red];
m24_241 -> m24_243  [key=1, style=dashed, color=red, label="lambda expression"];
m24_241 -> m24_246  [key=1, style=dashed, color=red, label="lambda expression"];
m24_242 -> m24_240  [key=0, style=bold, color=blue];
m24_243 -> m24_244  [key=0, style=solid, color=red];
m24_246 -> m24_247  [key=0, style=solid, color=red];
m24_244 -> m24_245  [key=0, style=solid, color=red];
m24_245 -> m24_243  [key=0, style=bold, color=blue];
m24_247 -> m24_248  [key=0, style=solid, color=red];
m24_248 -> m24_246  [key=0, style=bold, color=blue];
m24_259 -> m24_260  [key=0, style=solid];
m24_262 -> m24_263  [key=0, style=solid, color=red];
m24_265 -> m24_266  [key=0, style=solid];
m24_260 -> m24_261  [key=0, style=solid];
m24_260 -> m24_37  [key=2, style=dotted];
m24_261 -> m24_259  [key=0, style=bold, color=blue];
m24_263 -> m24_264  [key=0, style=solid, color=red];
m24_263 -> m24_32  [key=2, style=dotted, color=red];
m24_263 -> m24_46  [key=2, style=dotted, color=red];
m24_264 -> m24_262  [key=0, style=bold, color=blue];
m24_266 -> m24_267  [key=0, style=solid];
m24_267 -> m24_265  [key=0, style=bold, color=blue];
m24_269 -> m24_270  [key=0, style=solid, color=red];
m24_269 -> m24_32  [key=2, style=dotted, color=red];
m24_269 -> m24_46  [key=2, style=dotted, color=red];
m24_270 -> m24_268  [key=0, style=bold, color=blue];
m24_162 -> m24_163  [key=0, style=solid];
m24_163 -> m24_164  [key=0, style=solid, color=red];
m24_163 -> m24_71  [key=2, style=dotted];
m24_164 -> m24_165  [key=0, style=solid, color=red];
m24_164 -> m24_135  [key=2, style=dotted, color=red];
m24_164 -> m24_166  [key=1, style=dashed, color=red, label=result];
m24_165 -> m24_166  [key=0, style=solid, color=red];
m24_165 -> m24_101  [key=2, style=dotted, color=red];
m24_165 -> m24_169  [key=1, style=dashed, color=red, label="lambda expression"];
m24_166 -> m24_167  [key=0, style=solid];
m24_166 -> m24_168  [key=2, style=dotted];
m24_167 -> m24_162  [key=0, style=bold, color=blue];
m24_127 -> m24_128  [key=0, style=solid];
m24_128 -> m24_129  [key=0, style=solid, color=red];
m24_128 -> m24_71  [key=2, style=dotted];
m24_128 -> m24_133  [key=1, style=dashed, color=red, label=stateMachine];
m24_129 -> m24_130  [key=0, style=solid, color=red];
m24_129 -> m24_32  [key=2, style=dotted, color=red];
m24_129 -> m24_132  [key=1, style=dashed, color=red, label="lambda expression"];
m24_130 -> m24_131  [key=0, style=solid];
m24_130 -> m24_54  [key=2, style=dotted];
m24_131 -> m24_127  [key=0, style=bold, color=blue];
m24_112 -> m24_113  [key=0, style=solid];
m24_113 -> m24_114  [key=0, style=solid];
m24_113 -> m24_71  [key=2, style=dotted];
m24_114 -> m24_115  [key=0, style=solid, color=red];
m24_114 -> m24_75  [key=2, style=dotted];
m24_115 -> m24_116  [key=0, style=solid, color=red];
m24_115 -> m24_101  [key=2, style=dotted, color=red];
m24_115 -> m24_117  [key=1, style=dashed, color=red, label="lambda expression"];
m24_116 -> m24_112  [key=0, style=bold, color=blue];
m24_211 -> m24_212  [key=0, style=solid, color=red];
m24_212 -> m24_213  [key=0, style=solid, color=red];
m24_212 -> m24_17  [key=2, style=dotted, color=red];
m24_212 -> m24_18  [key=2, style=dotted, color=red];
m24_212 -> m24_218  [key=1, style=dashed, color=red, label="lambda expression"];
m24_213 -> m24_214  [key=0, style=solid, color=red];
m24_213 -> m24_71  [key=2, style=dotted];
m24_214 -> m24_215  [key=0, style=solid, color=red];
m24_214 -> m24_135  [key=2, style=dotted, color=red];
m24_214 -> m24_216  [key=1, style=dashed, color=red, label=result];
m24_215 -> m24_216  [key=0, style=solid, color=red];
m24_215 -> m24_101  [key=2, style=dotted, color=red];
m24_215 -> m24_221  [key=1, style=dashed, color=red, label="lambda expression"];
m24_216 -> m24_217  [key=0, style=solid];
m24_216 -> m24_192  [key=2, style=dotted];
m24_217 -> m24_211  [key=0, style=bold, color=blue];
m24_176 -> m24_177  [key=0, style=solid];
m24_177 -> m24_178  [key=0, style=solid, color=red];
m24_177 -> m24_71  [key=2, style=dotted];
m24_178 -> m24_179  [key=0, style=solid, color=red];
m24_178 -> m24_135  [key=2, style=dotted, color=red];
m24_179 -> m24_180  [key=0, style=solid, color=red];
m24_179 -> m24_101  [key=2, style=dotted, color=red];
m24_179 -> m24_181  [key=1, style=dashed, color=red, label="lambda expression"];
m24_180 -> m24_176  [key=0, style=bold, color=blue];
m24_273 -> m24_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_11  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_44  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_48  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_51  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_56  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_115  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_118  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_121  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_129  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_133  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_146  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_147  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_151  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_155  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_164  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_165  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_170  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_178  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_179  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_182  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_187  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_190  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_204  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_206  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_212  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_214  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_215  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_226  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_227  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_228  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_229  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_251  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_253  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_254  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_255  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_269  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_273 -> m24_271  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m24_274 -> m24_73  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m24_275 -> m24_82  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m24_276 -> m24_90  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m24_277 -> m24_107  [key=1, style=dashed, color=darkseagreen4, label=job];
m24_278 -> m24_133  [key=1, style=dashed, color=red, label=stateMachine];
m24_279 -> m24_142  [key=1, style=dashed, color=red, label=stateMachine];
m24_280 -> m24_151  [key=1, style=dashed, color=red, label=stateMachine];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_0 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_0 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_6 -> m25_7  [key=0, style=solid];
m25_2 -> m25_7  [key=0, style=solid];
m25_2 -> d17  [key=2, style=dotted];
m25_4 -> m25_7  [key=0, style=solid];
m25_4 -> d17  [key=2, style=dotted];
m25_7 -> m25_0  [key=0, style=bold, color=blue];
m25_9 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m25_9 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m26_139 -> m26_140  [key=0, style=solid];
m26_142 -> m26_143  [key=0, style=solid, color=green];
m26_142 -> m26_69  [key=2, style=dotted, color=green];
m26_142 -> m26_144  [key=1, style=dashed, color=green, label="lambda expression"];
m26_141 -> m26_142  [key=0, style=solid, color=green];
m26_141 -> m26_68  [key=2, style=dotted];
m26_140 -> m26_141  [key=0, style=solid];
m26_140 -> m26_67  [key=2, style=dotted];
m26_143 -> m26_139  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_15  [key=2, style=dotted];
m26_220 -> m26_221  [key=0, style=solid];
m26_225 -> m26_226  [key=0, style=solid, color=green];
m26_225 -> m26_69  [key=2, style=dotted, color=green];
m26_225 -> m26_232  [key=1, style=dashed, color=green, label="lambda expression"];
m26_221 -> m26_225  [key=1, style=dashed, color=green, label=exception];
m26_221 -> m26_233  [key=1, style=dashed, color=green, label=exception];
m26_221 -> m26_222  [key=0, style=solid];
m26_221 -> m26_227  [key=2, style=dotted];
m26_221 -> m26_236  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_224 -> m26_225  [key=0, style=solid, color=green];
m26_224 -> m26_68  [key=2, style=dotted];
m26_222 -> m26_17  [key=2, style=dotted];
m26_222 -> m26_223  [key=0, style=solid];
m26_222 -> m26_228  [key=2, style=dotted];
m26_222 -> m26_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_223 -> m26_224  [key=0, style=solid];
m26_223 -> m26_67  [key=2, style=dotted];
m26_226 -> m26_220  [key=0, style=bold, color=blue];
m26_209 -> m26_210  [key=0, style=solid];
m26_212 -> m26_213  [key=0, style=solid, color=green];
m26_212 -> m26_69  [key=2, style=dotted, color=green];
m26_212 -> m26_214  [key=1, style=dashed, color=green, label="lambda expression"];
m26_211 -> m26_212  [key=0, style=solid, color=green];
m26_211 -> m26_68  [key=2, style=dotted];
m26_210 -> m26_211  [key=0, style=solid];
m26_210 -> m26_67  [key=2, style=dotted];
m26_213 -> m26_209  [key=0, style=bold, color=blue];
m26_150 -> m26_151  [key=0, style=solid, color=green];
m26_151 -> m26_152  [key=0, style=solid, color=green];
m26_151 -> m26_17  [key=2, style=dotted, color=green];
m26_151 -> m26_18  [key=2, style=dotted, color=green];
m26_151 -> m26_156  [key=1, style=dashed, color=green, label="lambda expression"];
m26_152 -> m26_153  [key=0, style=solid];
m26_152 -> m26_67  [key=2, style=dotted];
m26_153 -> m26_154  [key=0, style=solid];
m26_153 -> m26_68  [key=2, style=dotted];
m26_154 -> m26_69  [key=2, style=dotted];
m26_154 -> m26_155  [key=0, style=solid];
m26_154 -> m26_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_155 -> m26_150  [key=0, style=bold, color=blue];
m26_162 -> m26_163  [key=0, style=solid];
m26_163 -> m26_164  [key=0, style=solid];
m26_163 -> m26_67  [key=2, style=dotted];
m26_164 -> m26_165  [key=0, style=solid];
m26_164 -> m26_68  [key=2, style=dotted];
m26_165 -> m26_69  [key=2, style=dotted];
m26_165 -> m26_166  [key=0, style=solid];
m26_165 -> m26_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_166 -> m26_162  [key=0, style=bold, color=blue];
m26_90 -> m26_91  [key=0, style=solid, color=green];
m26_91 -> m26_92  [key=0, style=solid, color=green];
m26_91 -> m26_17  [key=2, style=dotted, color=green];
m26_91 -> m26_34  [key=2, style=dotted, color=green];
m26_91 -> m26_97  [key=1, style=dashed, color=green, label="lambda expression"];
m26_92 -> m26_93  [key=0, style=solid];
m26_92 -> m26_67  [key=2, style=dotted];
m26_92 -> m26_101  [key=1, style=dashed, color=darkseagreen4, label=worker];
m26_93 -> m26_34  [key=2, style=dotted];
m26_93 -> m26_94  [key=0, style=solid];
m26_93 -> m26_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_94 -> m26_69  [key=2, style=dotted];
m26_94 -> m26_95  [key=0, style=solid];
m26_94 -> m26_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_95 -> m26_69  [key=2, style=dotted];
m26_95 -> m26_96  [key=0, style=solid];
m26_95 -> m26_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_96 -> m26_90  [key=0, style=bold, color=blue];
m26_189 -> m26_190  [key=0, style=solid];
m26_190 -> m26_17  [key=2, style=dotted];
m26_190 -> m26_34  [key=2, style=dotted];
m26_190 -> m26_191  [key=0, style=solid];
m26_190 -> m26_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_191 -> m26_192  [key=0, style=solid];
m26_191 -> m26_67  [key=2, style=dotted];
m26_191 -> m26_201  [key=1, style=dashed, color=darkseagreen4, label=worker];
m26_192 -> m26_193  [key=0, style=solid];
m26_192 -> m26_196  [key=2, style=dotted];
m26_192 -> m26_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_193 -> m26_69  [key=2, style=dotted];
m26_193 -> m26_194  [key=0, style=solid];
m26_193 -> m26_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_194 -> m26_69  [key=2, style=dotted];
m26_194 -> m26_195  [key=0, style=solid];
m26_194 -> m26_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_195 -> m26_189  [key=0, style=bold, color=blue];
m26_67 -> m26_270  [key=0, style=solid];
m26_270 -> m26_271  [key=0, style=solid];
m26_270 -> m26_60  [key=2, style=dotted];
m26_271 -> m26_67  [key=0, style=bold, color=blue];
m26_52 -> m26_53  [key=0, style=solid];
m26_53 -> m26_34  [key=2, style=dotted];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_54 -> m26_55  [key=0, style=solid];
m26_54 -> m26_56  [key=2, style=dotted];
m26_55 -> m26_52  [key=0, style=bold, color=blue];
m26_239 -> m26_240  [key=0, style=solid];
m26_244 -> m26_245  [key=0, style=solid, color=green];
m26_244 -> m26_69  [key=2, style=dotted, color=green];
m26_244 -> m26_250  [key=1, style=dashed, color=green, label="lambda expression"];
m26_240 -> m26_244  [key=1, style=dashed, color=green, label=exception];
m26_240 -> m26_251  [key=1, style=dashed, color=green, label=exception];
m26_240 -> m26_241  [key=0, style=solid];
m26_240 -> m26_227  [key=2, style=dotted];
m26_240 -> m26_254  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_243 -> m26_244  [key=0, style=solid, color=green];
m26_243 -> m26_68  [key=2, style=dotted];
m26_241 -> m26_17  [key=2, style=dotted];
m26_241 -> m26_242  [key=0, style=solid];
m26_241 -> m26_246  [key=2, style=dotted];
m26_241 -> m26_228  [key=2, style=dotted];
m26_241 -> m26_247  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_242 -> m26_243  [key=0, style=solid];
m26_242 -> m26_67  [key=2, style=dotted];
m26_245 -> m26_239  [key=0, style=bold, color=blue];
m26_12 -> m26_13  [key=0, style=solid, color=green];
m26_12 -> m26_17  [key=2, style=dotted, color=green];
m26_12 -> m26_18  [key=2, style=dotted, color=green];
m26_12 -> m26_48  [key=1, style=dashed, color=green, label="lambda expression"];
m26_11 -> m26_12  [key=0, style=solid, color=green];
m26_11 -> m26_17  [key=2, style=dotted];
m26_11 -> m26_18  [key=2, style=dotted];
m26_11 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_23  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_16  [key=2, style=dotted];
m26_5 -> m26_17  [key=2, style=dotted];
m26_5 -> m26_18  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_19  [key=2, style=dotted];
m26_7 -> m26_17  [key=2, style=dotted];
m26_7 -> m26_18  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_8 -> m26_17  [key=2, style=dotted];
m26_8 -> m26_18  [key=2, style=dotted];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_9 -> m26_17  [key=2, style=dotted];
m26_9 -> m26_18  [key=2, style=dotted];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_20  [key=2, style=dotted];
m26_9 -> m26_21  [key=2, style=dotted];
m26_9 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_9 -> m26_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_22  [key=2, style=dotted];
m26_14 -> m26_0  [key=0, style=bold, color=blue];
m26_256 -> m26_257  [key=0, style=solid];
m26_260 -> m26_261  [key=0, style=solid, color=green];
m26_260 -> m26_69  [key=2, style=dotted, color=green];
m26_260 -> m26_267  [key=1, style=dashed, color=green, label="lambda expression"];
m26_259 -> m26_260  [key=0, style=solid, color=green];
m26_259 -> m26_68  [key=2, style=dotted];
m26_257 -> m26_17  [key=2, style=dotted];
m26_257 -> m26_18  [key=2, style=dotted];
m26_257 -> m26_258  [key=0, style=solid];
m26_257 -> m26_20  [key=2, style=dotted];
m26_257 -> m26_262  [key=2, style=dotted];
m26_257 -> m26_263  [key=2, style=dotted];
m26_257 -> m26_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_258 -> m26_259  [key=0, style=solid];
m26_258 -> m26_67  [key=2, style=dotted];
m26_261 -> m26_256  [key=0, style=bold, color=blue];
m26_57 -> m26_58  [key=0, style=solid];
m26_48 -> m26_49  [key=0, style=solid, color=green];
m26_49 -> m26_50  [key=0, style=solid, color=green];
m26_49 -> m26_34  [key=2, style=dotted, color=green];
m26_49 -> m26_51  [key=2, style=dotted, color=green];
m26_50 -> m26_48  [key=0, style=bold, color=blue];
m26_97 -> m26_98  [key=0, style=solid, color=green];
m26_98 -> m26_99  [key=0, style=solid, color=green];
m26_98 -> m26_34  [key=2, style=dotted, color=green];
m26_98 -> m26_51  [key=2, style=dotted, color=green];
m26_99 -> m26_97  [key=0, style=bold, color=blue];
m26_118 -> m26_119  [key=0, style=solid, color=green];
m26_125 -> m26_126  [key=0, style=solid, color=green];
m26_119 -> m26_120  [key=0, style=solid, color=green];
m26_119 -> m26_34  [key=2, style=dotted, color=green];
m26_119 -> m26_51  [key=2, style=dotted, color=green];
m26_120 -> m26_118  [key=0, style=bold, color=blue];
m26_126 -> m26_127  [key=0, style=solid, color=green];
m26_126 -> m26_34  [key=2, style=dotted, color=green];
m26_126 -> m26_51  [key=2, style=dotted, color=green];
m26_127 -> m26_125  [key=0, style=bold, color=blue];
m26_133 -> m26_134  [key=0, style=solid, color=green];
m26_134 -> m26_135  [key=0, style=solid, color=green];
m26_134 -> m26_34  [key=2, style=dotted, color=green];
m26_134 -> m26_51  [key=2, style=dotted, color=green];
m26_134 -> m26_136  [key=1, style=dashed, color=green, label="lambda expression"];
m26_135 -> m26_133  [key=0, style=bold, color=blue];
m26_136 -> m26_137  [key=0, style=solid];
m26_144 -> m26_145  [key=0, style=solid, color=green];
m26_145 -> m26_146  [key=0, style=solid, color=green];
m26_145 -> m26_34  [key=2, style=dotted, color=green];
m26_145 -> m26_51  [key=2, style=dotted, color=green];
m26_145 -> m26_147  [key=1, style=dashed, color=green, label="lambda expression"];
m26_146 -> m26_144  [key=0, style=bold, color=blue];
m26_147 -> m26_148  [key=0, style=solid];
m26_156 -> m26_157  [key=0, style=solid, color=green];
m26_157 -> m26_158  [key=0, style=solid, color=green];
m26_157 -> m26_34  [key=2, style=dotted, color=green];
m26_157 -> m26_51  [key=2, style=dotted, color=green];
m26_158 -> m26_156  [key=0, style=bold, color=blue];
m26_183 -> m26_184  [key=0, style=solid, color=green];
m26_184 -> m26_185  [key=0, style=solid, color=green];
m26_184 -> m26_34  [key=2, style=dotted, color=green];
m26_184 -> m26_51  [key=2, style=dotted, color=green];
m26_185 -> m26_183  [key=0, style=bold, color=blue];
m26_214 -> m26_215  [key=0, style=solid, color=green];
m26_215 -> m26_216  [key=0, style=solid, color=green];
m26_215 -> m26_34  [key=2, style=dotted, color=green];
m26_215 -> m26_51  [key=2, style=dotted, color=green];
m26_215 -> m26_217  [key=1, style=dashed, color=green, label="lambda expression"];
m26_216 -> m26_214  [key=0, style=bold, color=blue];
m26_217 -> m26_218  [key=0, style=solid];
m26_232 -> m26_233  [key=0, style=solid, color=green];
m26_233 -> m26_234  [key=0, style=solid, color=green];
m26_233 -> m26_34  [key=2, style=dotted, color=green];
m26_233 -> m26_51  [key=2, style=dotted, color=green];
m26_233 -> m26_235  [key=1, style=dashed, color=green, label="lambda expression"];
m26_234 -> m26_232  [key=0, style=bold, color=blue];
m26_235 -> m26_236  [key=0, style=solid];
m26_250 -> m26_251  [key=0, style=solid, color=green];
m26_251 -> m26_252  [key=0, style=solid, color=green];
m26_251 -> m26_34  [key=2, style=dotted, color=green];
m26_251 -> m26_51  [key=2, style=dotted, color=green];
m26_251 -> m26_253  [key=1, style=dashed, color=green, label="lambda expression"];
m26_252 -> m26_250  [key=0, style=bold, color=blue];
m26_253 -> m26_254  [key=0, style=solid];
m26_267 -> m26_268  [key=0, style=solid, color=green];
m26_268 -> m26_269  [key=0, style=solid, color=green];
m26_268 -> m26_34  [key=2, style=dotted, color=green];
m26_268 -> m26_51  [key=2, style=dotted, color=green];
m26_269 -> m26_267  [key=0, style=bold, color=blue];
m26_32 -> m26_34  [key=2, style=dotted];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_35  [key=2, style=dotted];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_47  [key=2, style=dotted];
m26_84 -> m26_85  [key=0, style=solid];
m26_84 -> m26_35  [key=2, style=dotted];
m26_101 -> m26_102  [key=0, style=solid];
m26_101 -> m26_68  [key=2, style=dotted];
m26_137 -> m26_138  [key=0, style=solid];
m26_181 -> m26_182  [key=0, style=solid];
m26_181 -> m26_68  [key=2, style=dotted];
m26_201 -> m26_202  [key=0, style=solid];
m26_201 -> m26_68  [key=2, style=dotted];
m26_44 -> m26_45  [key=0, style=solid];
m26_122 -> m26_34  [key=2, style=dotted];
m26_122 -> m26_123  [key=0, style=solid];
m26_122 -> m26_124  [key=2, style=dotted];
m26_160 -> m26_34  [key=2, style=dotted];
m26_160 -> m26_161  [key=0, style=solid];
m26_160 -> m26_124  [key=2, style=dotted];
m26_168 -> m26_34  [key=2, style=dotted];
m26_168 -> m26_169  [key=0, style=solid];
m26_168 -> m26_124  [key=2, style=dotted];
m26_178 -> m26_34  [key=2, style=dotted];
m26_178 -> m26_179  [key=0, style=solid];
m26_178 -> m26_124  [key=2, style=dotted];
m26_198 -> m26_34  [key=2, style=dotted];
m26_198 -> m26_199  [key=0, style=solid];
m26_198 -> m26_124  [key=2, style=dotted];
m26_230 -> m26_34  [key=2, style=dotted];
m26_230 -> m26_231  [key=0, style=solid];
m26_230 -> m26_124  [key=2, style=dotted];
m26_248 -> m26_34  [key=2, style=dotted];
m26_248 -> m26_249  [key=0, style=solid];
m26_248 -> m26_124  [key=2, style=dotted];
m26_121 -> m26_122  [key=0, style=solid];
m26_138 -> m26_136  [key=0, style=bold, color=blue];
m26_149 -> m26_147  [key=0, style=bold, color=blue];
m26_148 -> m26_149  [key=0, style=solid];
m26_180 -> m26_181  [key=0, style=solid];
m26_186 -> m26_187  [key=0, style=solid];
m26_219 -> m26_217  [key=0, style=bold, color=blue];
m26_218 -> m26_219  [key=0, style=solid];
m26_236 -> m26_237  [key=0, style=solid];
m26_236 -> m26_238  [key=2, style=dotted];
m26_237 -> m26_235  [key=0, style=bold, color=blue];
m26_254 -> m26_255  [key=0, style=solid];
m26_255 -> m26_253  [key=0, style=bold, color=blue];
m26_24 -> m26_25  [key=0, style=solid];
m26_28 -> m26_29  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_33 -> m26_31  [key=0, style=bold, color=blue];
m26_36 -> m26_37  [key=0, style=solid];
m26_40 -> m26_41  [key=0, style=solid];
m26_46 -> m26_44  [key=0, style=bold, color=blue];
m26_70 -> m26_71  [key=0, style=solid];
m26_73 -> m26_74  [key=0, style=solid];
m26_83 -> m26_84  [key=0, style=solid];
m26_85 -> m26_83  [key=0, style=bold, color=blue];
m26_86 -> m26_87  [key=0, style=solid];
m26_100 -> m26_101  [key=0, style=solid];
m26_102 -> m26_100  [key=0, style=bold, color=blue];
m26_103 -> m26_104  [key=0, style=solid];
m26_106 -> m26_107  [key=0, style=solid];
m26_159 -> m26_160  [key=0, style=solid];
m26_167 -> m26_168  [key=0, style=solid];
m26_177 -> m26_178  [key=0, style=solid];
m26_182 -> m26_180  [key=0, style=bold, color=blue];
m26_197 -> m26_198  [key=0, style=solid];
m26_200 -> m26_201  [key=0, style=solid];
m26_202 -> m26_200  [key=0, style=bold, color=blue];
m26_203 -> m26_204  [key=0, style=solid];
m26_206 -> m26_207  [key=0, style=solid];
m26_229 -> m26_230  [key=0, style=solid];
m26_247 -> m26_248  [key=0, style=solid];
m26_264 -> m26_265  [key=0, style=solid];
m26_123 -> m26_121  [key=0, style=bold, color=blue];
m26_161 -> m26_159  [key=0, style=bold, color=blue];
m26_169 -> m26_167  [key=0, style=bold, color=blue];
m26_179 -> m26_177  [key=0, style=bold, color=blue];
m26_199 -> m26_197  [key=0, style=bold, color=blue];
m26_231 -> m26_229  [key=0, style=bold, color=blue];
m26_249 -> m26_247  [key=0, style=bold, color=blue];
m26_188 -> m26_186  [key=0, style=bold, color=blue];
m26_187 -> m26_188  [key=0, style=solid];
m26_187 -> m26_109  [key=2, style=dotted];
m26_26 -> m26_24  [key=0, style=bold, color=blue];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_27  [key=2, style=dotted];
m26_30 -> m26_28  [key=0, style=bold, color=blue];
m26_29 -> m26_30  [key=0, style=solid];
m26_38 -> m26_36  [key=0, style=bold, color=blue];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_39  [key=2, style=dotted];
m26_42 -> m26_40  [key=0, style=bold, color=blue];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_43  [key=2, style=dotted];
m26_72 -> m26_70  [key=0, style=bold, color=blue];
m26_71 -> m26_72  [key=0, style=solid];
m26_71 -> m26_27  [key=2, style=dotted];
m26_75 -> m26_73  [key=0, style=bold, color=blue];
m26_74 -> m26_75  [key=0, style=solid];
m26_74 -> m26_76  [key=2, style=dotted];
m26_88 -> m26_86  [key=0, style=bold, color=blue];
m26_87 -> m26_88  [key=0, style=solid];
m26_87 -> m26_89  [key=2, style=dotted];
m26_105 -> m26_103  [key=0, style=bold, color=blue];
m26_104 -> m26_105  [key=0, style=solid];
m26_104 -> m26_89  [key=2, style=dotted];
m26_108 -> m26_106  [key=0, style=bold, color=blue];
m26_107 -> m26_108  [key=0, style=solid];
m26_107 -> m26_109  [key=2, style=dotted];
m26_205 -> m26_203  [key=0, style=bold, color=blue];
m26_204 -> m26_205  [key=0, style=solid];
m26_204 -> m26_89  [key=2, style=dotted];
m26_208 -> m26_206  [key=0, style=bold, color=blue];
m26_207 -> m26_208  [key=0, style=solid];
m26_207 -> m26_109  [key=2, style=dotted];
m26_266 -> m26_264  [key=0, style=bold, color=blue];
m26_265 -> m26_266  [key=0, style=solid];
m26_265 -> m26_39  [key=2, style=dotted];
m26_58 -> m26_60  [key=2, style=dotted];
m26_58 -> m26_59  [key=0, style=solid];
m26_59 -> m26_57  [key=0, style=bold, color=blue];
m26_128 -> m26_129  [key=0, style=solid];
m26_131 -> m26_132  [key=0, style=solid, color=green];
m26_131 -> m26_69  [key=2, style=dotted, color=green];
m26_131 -> m26_133  [key=1, style=dashed, color=green, label="lambda expression"];
m26_130 -> m26_131  [key=0, style=solid, color=green];
m26_130 -> m26_68  [key=2, style=dotted];
m26_129 -> m26_130  [key=0, style=solid];
m26_129 -> m26_67  [key=2, style=dotted];
m26_132 -> m26_128  [key=0, style=bold, color=blue];
m26_110 -> m26_111  [key=0, style=solid, color=green];
m26_111 -> m26_112  [key=0, style=solid, color=green];
m26_111 -> m26_17  [key=2, style=dotted, color=green];
m26_111 -> m26_117  [key=2, style=dotted, color=green];
m26_111 -> m26_18  [key=2, style=dotted, color=green];
m26_111 -> m26_118  [key=1, style=dashed, color=green, label="lambda expression"];
m26_112 -> m26_113  [key=0, style=solid, color=green];
m26_112 -> m26_17  [key=2, style=dotted];
m26_112 -> m26_117  [key=2, style=dotted];
m26_112 -> m26_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_113 -> m26_114  [key=0, style=solid, color=green];
m26_113 -> m26_17  [key=2, style=dotted, color=green];
m26_113 -> m26_117  [key=2, style=dotted, color=green];
m26_113 -> m26_18  [key=2, style=dotted, color=green];
m26_113 -> m26_125  [key=1, style=dashed, color=green, label="lambda expression"];
m26_114 -> m26_115  [key=0, style=solid];
m26_114 -> m26_67  [key=2, style=dotted];
m26_115 -> m26_116  [key=0, style=solid];
m26_115 -> m26_68  [key=2, style=dotted];
m26_116 -> m26_110  [key=0, style=bold, color=blue];
m26_77 -> m26_78  [key=0, style=solid];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_67  [key=2, style=dotted];
m26_79 -> m26_80  [key=0, style=solid];
m26_79 -> m26_68  [key=2, style=dotted];
m26_80 -> m26_69  [key=2, style=dotted];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_81 -> m26_69  [key=2, style=dotted];
m26_81 -> m26_82  [key=0, style=solid];
m26_81 -> m26_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_82 -> m26_77  [key=0, style=bold, color=blue];
m26_170 -> m26_171  [key=0, style=solid];
m26_174 -> m26_175  [key=0, style=solid, color=green];
m26_174 -> m26_69  [key=2, style=dotted, color=green];
m26_174 -> m26_183  [key=1, style=dashed, color=green, label="lambda expression"];
m26_173 -> m26_174  [key=0, style=solid, color=green];
m26_173 -> m26_34  [key=2, style=dotted];
m26_173 -> m26_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_175 -> m26_69  [key=2, style=dotted];
m26_175 -> m26_176  [key=0, style=solid];
m26_175 -> m26_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_171 -> m26_17  [key=2, style=dotted];
m26_171 -> m26_34  [key=2, style=dotted];
m26_171 -> m26_172  [key=0, style=solid];
m26_171 -> m26_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_172 -> m26_173  [key=0, style=solid];
m26_172 -> m26_67  [key=2, style=dotted];
m26_172 -> m26_181  [key=1, style=dashed, color=darkseagreen4, label=worker];
m26_176 -> m26_170  [key=0, style=bold, color=blue];
m26_43 -> m26_272  [key=0, style=solid];
m26_272 -> m26_43  [key=0, style=bold, color=blue];
m26_61 -> m26_62  [key=0, style=solid];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_67  [key=2, style=dotted];
m26_63 -> m26_64  [key=0, style=solid];
m26_63 -> m26_68  [key=2, style=dotted];
m26_64 -> m26_69  [key=2, style=dotted];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_65 -> m26_69  [key=2, style=dotted];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_66 -> m26_61  [key=0, style=bold, color=blue];
m26_273 -> m26_12  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_91  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_111  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_113  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_131  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_134  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_142  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_151  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_174  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_212  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_225  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_244  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_260  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_140  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_181  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_241  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_242  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_273 -> m26_270  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m26_277 -> m26_233  [key=1, style=dashed, color=green, label=exception];
m26_277 -> m26_236  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_278 -> m26_251  [key=1, style=dashed, color=green, label=exception];
m26_278 -> m26_254  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_274 -> m26_101  [key=1, style=dashed, color=darkseagreen4, label=worker];
m26_275 -> m26_181  [key=1, style=dashed, color=darkseagreen4, label=worker];
m26_276 -> m26_201  [key=1, style=dashed, color=darkseagreen4, label=worker];
}
