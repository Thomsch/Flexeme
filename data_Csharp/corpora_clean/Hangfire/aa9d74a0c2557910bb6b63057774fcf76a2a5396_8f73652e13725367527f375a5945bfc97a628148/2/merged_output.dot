digraph  {
n71 [label="HangFire.Redis.FetchedJobsWatcher", span=""];
n0 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
n1 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", label="Exit HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
n2 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", span="36-36"];
n3 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="storage == null", span="40-40"];
n5 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="options == null", span="41-41"];
n7 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="_storage = storage", span="43-43"];
n8 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="_options = options", span="44-44"];
n4 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="throw new ArgumentNullException(''storage'');", span="40-40"];
n6 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="throw new ArgumentNullException(''options'');", span="41-41"];
n9 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", label="Exit HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.Redis.FetchedJobsWatcherOptions)", span="36-36"];
n10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n11 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="47-47"];
n12 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label="var connection = (RedisConnection)_storage.GetConnection()", span="49-49"];
n16 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label="cancellationToken.WaitHandle.WaitOne(_options.SleepTimeout)", span="60-60"];
n13 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label="var queues = connection.Redis.GetAllItemsFromSet(\r\n                    RedisStorage.Prefix + ''queues'')", span="51-52"];
n18 [cluster="HangFire.JobStorage.GetConnection()", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
n15 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label="ProcessQueue(queue, connection)", span="56-56"];
n14 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label=queues, span="54-54"];
n19 [cluster="Unk.GetAllItemsFromSet", label="Entry Unk.GetAllItemsFromSet", span=""];
n20 [cluster="Unk.ProcessQueue", label="Entry Unk.ProcessQueue", span=""];
n17 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", label="Exit HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="47-47"];
n21 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
n22 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="Entry HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", span="63-63"];
n23 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="Logger.DebugFormat(\r\n                ''Acquiring the lock for the fetched list of the '{0}' queue...'', queue)", span="68-69"];
n24 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="connection.Redis.AcquireLock(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued:lock'', queue),\r\n                _options.FetchedLockTimeout)", span="71-73"];
n25 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="Logger.DebugFormat(\r\n                    ''Looking for timed out jobs in the '{0}' queue...'', queue)", span="75-76"];
n26 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="var jobIds = connection.Redis.GetAllItemsFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue))", span="78-79"];
n29 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="RequeueJobIfTimedOut(connection, jobId, queue)", span="85-85"];
n32 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="Logger.DebugFormat(''No timed out jobs were found in the '{0}' queue'', queue)", span="93-93"];
n33 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="Logger.InfoFormat(\r\n                        ''{0} timed out jobs were found in the '{1}' queue and re-queued.'',\r\n                        requeued,\r\n                        queue)", span="97-100"];
n35 [cluster="Unk.DebugFormat", label="Entry Unk.DebugFormat", span=""];
n36 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n37 [cluster="Unk.AcquireLock", label="Entry Unk.AcquireLock", span=""];
n27 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="var requeued = 0", span="81-81"];
n38 [cluster="Unk.GetAllItemsFromList", label="Entry Unk.GetAllItemsFromList", span=""];
n28 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label=jobIds, span="83-83"];
n30 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="requeued++", span="87-87"];
n31 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="requeued == 0", span="91-91"];
n39 [cluster="Unk.RequeueJobIfTimedOut", label="Entry Unk.RequeueJobIfTimedOut", span=""];
n34 [cluster="HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", label="Exit HangFire.Redis.FetchedJobsWatcher.ProcessQueue(string, HangFire.Redis.RedisConnection)", span="63-63"];
n40 [cluster="Unk.InfoFormat", label="Entry Unk.InfoFormat", span=""];
n41 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="Entry HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", span="105-105"];
n42 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="var flags = connection.Redis.GetValuesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                ''Checked'')", span="107-110"];
n46 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="connection.Redis.SetEntryInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="135-138"];
n48 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="var fetchedJob = new RedisFetchedJob(connection.Redis, jobId, queue)", span="147-147"];
n43 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="var fetched = flags[0]", span="112-112"];
n53 [cluster="Unk.GetValuesFromHash", label="Entry Unk.GetValuesFromHash", span=""];
n44 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="var @checked = flags[1]", span="113-113"];
n45 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="String.IsNullOrEmpty(fetched) && String.IsNullOrEmpty(@checked)", span="115-115"];
n47 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="TimedOutByFetchedTime(fetched) || TimedOutByCheckedTime(fetched, @checked)", span="145-145"];
n54 [cluster="Unk.IsNullOrEmpty", label="Entry Unk.IsNullOrEmpty", span=""];
n51 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="return false;", span="154-154"];
n57 [cluster="Unk.TimedOutByFetchedTime", label="Entry Unk.TimedOutByFetchedTime", span=""];
n58 [cluster="Unk.TimedOutByCheckedTime", label="Entry Unk.TimedOutByCheckedTime", span=""];
n49 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="fetchedJob.Dispose()", span="148-148"];
n59 [cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30"];
n50 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="return true;", span="150-150"];
n60 [cluster="HangFire.Redis.RedisFetchedJob.Dispose()", label="Entry HangFire.Redis.RedisFetchedJob.Dispose()", span="73-73"];
n55 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
n56 [cluster="Unk.SetEntryInHash", label="Entry Unk.SetEntryInHash", span=""];
n52 [cluster="HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", label="Exit HangFire.Redis.FetchedJobsWatcher.RequeueJobIfTimedOut(HangFire.Redis.RedisConnection, string, string)", span="105-105"];
n61 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByFetchedTime(string)", label="Entry HangFire.Redis.FetchedJobsWatcher.TimedOutByFetchedTime(string)", span="157-157"];
n62 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByFetchedTime(string)", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > _options.JobTimeout);", span="159-160"];
n63 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByFetchedTime(string)", label="Exit HangFire.Redis.FetchedJobsWatcher.TimedOutByFetchedTime(string)", span="157-157"];
n64 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n65 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
n66 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", label="Entry HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", span="163-163"];
n67 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="168-168"];
n69 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > _options.CheckedTimeout);", span="173-174"];
n68 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", label="return false;", span="170-170"];
n70 [cluster="HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", label="Exit HangFire.Redis.FetchedJobsWatcher.TimedOutByCheckedTime(string, string)", span="163-163"];
m0_62 [cluster="HangFire.Web.RazorPage.Write(object)", file="FailedStateHandler.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m0_0 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m0_1 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=1, file="FailedStateHandler.cs", label="1: WriteLiteral(''\n'')", span="57-57"];
m0_2 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69"];
m0_59 [cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m0_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m0_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m0_5 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m0_7 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m0_6 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="FailedStateHandler.cs", label="0: context.Transaction.RemoveFromSet(''failed'', context.JobId)", span="20-20"];
m0_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m0_10 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="pager.TotalPageCount == 0", span="93-93"];
m0_15 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="130-130"];
m0_52 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(RenderPartial(new Paginator(pager)))", span="376-376"];
m0_9 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\n'')", span="88-88"];
m0_17 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label=jobs, span="154-154"];
m0_11 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        No deleted jobs found.\n    </div>\n'')", span="99-99"];
m0_12 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="111-113"];
m0_13 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(Request.LinkTo(''/deleted/requeue''))", span="118-118"];
m0_14 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\''\n                    data-loading-text=\''Enqueueing...\''>\n                <span cl'' +\r\n''ass=\''glyphicon glyphicon-repeat\''></span>\n                Requeue jobs\n          '' +\r\n''  </button>\n            '')", span="123-125"];
m0_16 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(@''\n        </div>\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Deleted</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="135-149"];
m0_18 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="160-160"];
m0_51 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="365-365"];
m0_19 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="165-165"];
m0_20 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral('' '')", span="170-170"];
m0_21 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="175-175"];
m0_22 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\''>\n                        <td>\n'')", span="180-180"];
m0_23 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="job.Value != null && job.Value.InDeletedState", span="185-185"];
m0_24 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="191-192"];
m0_27 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="212-213"];
m0_25 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(job.Key)", span="197-197"];
m0_28 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="218-218"];
m0_26 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\'' />\n'')", span="202-202"];
m0_29 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\''>\n                                '')", span="223-223"];
m0_30 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(HtmlHelper.JobId(job.Key))", span="228-228"];
m0_31 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\n                            </a>\n'')", span="233-233"];
m0_32 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="job.Value != null && !job.Value.InDeletedState", span="238-238"];
m0_33 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="244-245"];
m0_34 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                        </td>\n\n'')", span="255-255"];
m0_35 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="job.Value == null", span="260-260"];
m0_36 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                            <td colspan=\''2\''>\n                                <em>'' +\r\n''Job was expired.</em>\n                            </td>\n'')", span="266-267"];
m0_37 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                            <td>\n                                <a class=\''job-me'' +\r\n''thod\'' href=\'''')", span="279-280"];
m0_38 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="285-285"];
m0_39 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\''>\n                                    '')", span="290-290"];
m0_40 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="295-295"];
m0_41 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\n                                </a>\n                            </td>\n'')", span="300-300"];
m0_43 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="job.Value.DeletedAt.HasValue", span="309-309"];
m0_42 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                            <td class=\''align-right\''>\n'')", span="304-304"];
m0_44 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                                    <span data-moment=\'''')", span="315-315"];
m0_49 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                            </td>\n'')", span="345-345"];
m0_45 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", span="320-320"];
m0_46 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\''>\n                                        '')", span="325-325"];
m0_47 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Write(job.Value.DeletedAt)", span="330-330"];
m0_48 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''\n                                    </span>\n'')", span="335-335"];
m0_50 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="WriteLiteral(''                    </tr>\n'')", span="355-355"];
m0_53 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="FailedStateHandler.cs", label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m0_58 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FailedStateHandler.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m0_56 [cluster="Unk.TryParse", file="FailedStateHandler.cs", label="Entry Unk.TryParse", span=""];
m0_54 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FailedStateHandler.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m0_64 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FailedStateHandler.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m0_61 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m0_63 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FailedStateHandler.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m0_65 [cluster="Unk.Write", file="FailedStateHandler.cs", label="Entry Unk.Write", span=""];
m0_66 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FailedStateHandler.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m0_57 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="FailedStateHandler.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m0_55 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FailedStateHandler.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m0_60 [cluster="HttpRequestBase.LinkTo(string)", file="FailedStateHandler.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m0_67 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FailedStateHandler.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m0_69 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FailedStateHandler.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m0_70 [file="FailedStateHandler.cs", label="HangFire.Web.Pages.DeletedJobsPage", span=""];
m1_4 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="IWriteOnlyPersistentCounter.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m1_5 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="IWriteOnlyPersistentCounter.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m1_6 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", file="IWriteOnlyPersistentCounter.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", span="10-10"];
m1_7 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", file="IWriteOnlyPersistentCounter.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", span="10-10"];
m1_2 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", file="IWriteOnlyPersistentCounter.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", span="7-7"];
m1_3 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", file="IWriteOnlyPersistentCounter.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", span="7-7"];
m1_0 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="IWriteOnlyPersistentCounter.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6"];
m1_1 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="IWriteOnlyPersistentCounter.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6"];
m2_0 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m2_1 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m2_2 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m2_3 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m2_6 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m2_7 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m2_4 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m2_5 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m3_0 [cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4"];
m3_1 [cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4"];
m3_2 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m3_3 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m3_4 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m3_5 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m4_0 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="IWriteOnlyPersistentQueue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m4_1 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="IWriteOnlyPersistentQueue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m5_2 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m5_3 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m5_0 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m5_1 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m5_4 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m5_5 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m6_4 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9"];
m6_5 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9"];
m6_2 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7"];
m6_3 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7"];
m6_0 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6"];
m6_1 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6"];
m7_17 [cluster="Hangfire.Dashboard.Pager.RecordsPerPageUrl(int)", file="IWriteOnlyTransaction.cs", label="Entry Hangfire.Dashboard.Pager.RecordsPerPageUrl(int)", span="58-58"];
m7_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m7_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="0: Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m7_2 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral(''\r\n    <div class=\''btn-group pull-right paginator\''>\r\n'')", span="37-37"];
m7_4 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral(''            <a class=\''btn btn-sm btn-default '')", span="48-48"];
m7_5 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="53-53"];
m7_6 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral(''\'' \r\n                   href=\'''')", span="58-58"];
m7_7 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="Write(_pager.RecordsPerPageUrl(count))", span="63-63"];
m7_8 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral(''\''>'')", span="68-68"];
m7_9 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="Write(count)", span="73-73"];
m7_10 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral(''</a>    \r\n'')", span="78-78"];
m7_11 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral(''    </div>\r\n    <div class=\''btn-toolbar-spacer pull-right\''></div>\r\n    <div class'' +\r\n''=\''btn-toolbar-label btn-toolbar-label-sm pull-right\''>\r\n        '')", span="88-89"];
m7_12 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="Write(Strings.PerPageSelector_ItemsPerPage)", span="94-94"];
m7_13 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="WriteLiteral('':\r\n    </div>\r\n'')", span="99-99"];
m7_3 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="new[] { 10, 20, 50, 100, 500 }", span="42-42"];
m7_14 [cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="IWriteOnlyTransaction.cs", label="Exit Hangfire.Dashboard.Pages.PerPageSelector.Execute()", span="29-29"];
m7_15 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="IWriteOnlyTransaction.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m7_16 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="IWriteOnlyTransaction.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m7_18 [file="IWriteOnlyTransaction.cs", label="Hangfire.Dashboard.Pages.PerPageSelector", span=""];
m8_13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer()", file="JobMethod.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer()", span="26-26"];
m8_11 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="JobMethod.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="34-34"];
m8_12 [cluster="Hangfire.IBootstrapperConfiguration.UseSqlServerStorage(string)", file="JobMethod.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseSqlServerStorage(string)", span="27-27"];
m8_6 [cluster="lambda expression", file="JobMethod.cs", label="Entry lambda expression", span="15-20"];
m8_7 [cluster="lambda expression", file="JobMethod.cs", label="config.UseAuthorizationFilters()", span="17-17"];
m8_8 [cluster="lambda expression", file="JobMethod.cs", label="config.UseSqlServerStorage(''HighlighterDb'')", span="18-18"];
m8_9 [cluster="lambda expression", file="JobMethod.cs", label="config.UseServer()", span="19-19"];
m8_10 [cluster="lambda expression", file="JobMethod.cs", label="Exit lambda expression", span="15-20"];
m8_0 [cluster="Hangfire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="JobMethod.cs", label="Entry Hangfire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", span="11-11"];
m8_1 [cluster="Hangfire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="JobMethod.cs", label="app.MapSignalR()", span="13-13"];
m8_2 [cluster="Hangfire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="JobMethod.cs", label="app.UseHangfire(config =>\r\n            {\r\n                config.UseAuthorizationFilters();\r\n                config.UseSqlServerStorage(''HighlighterDb'');\r\n                config.UseServer();\r\n            })", span="15-20"];
m8_3 [cluster="Hangfire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", file="JobMethod.cs", label="Exit Hangfire.Sample.Highlighter.Startup.Configuration(IAppBuilder)", span="11-11"];
m8_5 [cluster="IAppBuilder.UseHangfire(System.Action<Hangfire.IBootstrapperConfiguration>)", file="JobMethod.cs", label="Entry IAppBuilder.UseHangfire(System.Action<Hangfire.IBootstrapperConfiguration>)", span="33-33"];
m8_4 [cluster="Unk.MapSignalR", file="JobMethod.cs", label="Entry Unk.MapSignalR", span=""];
m9_65 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobMethodTests.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m9_60 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobMethodTests.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m9_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m9_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m9_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74"];
m9_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76"];
m9_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78"];
m9_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="queues = monitor.Queues()", span="80-80"];
m9_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n'')", span="87-87"];
m9_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="queues.Count == 0", span="92-92"];
m9_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label=queues, span="126-126"];
m9_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        No queued jobs found. Try to enque'' +\r\n''ue a job.\r\n    </div>\r\n'')", span="98-99"];
m9_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="JobMethodTests.cs", label="1: WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Fetched</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121"];
m9_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133"];
m9_58 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="445-445"];
m9_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138"];
m9_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(queue.Name)", span="148-148"];
m9_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(queue.Length)", span="159-159"];
m9_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="queue.Fetched.HasValue", span="169-169"];
m9_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/queues/fetched/'' + queue.Name))", span="180-180"];
m9_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(queue.Fetched)", span="190-190"];
m9_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="queue.FirstJobs.Count == 0", span="222-222"];
m9_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="queue.FirstJobs", span="255-255"];
m9_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\r\n                            '')", span="143-143"];
m9_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154"];
m9_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="164-164"];
m9_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                            <a href=\'''')", span="175-175"];
m9_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="207-207"];
m9_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\r\n                                '')", span="185-185"];
m9_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="195-195"];
m9_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="217-217"];
m9_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                            <em>No jobs queued.</em>\r\n'')", span="228-228"];
m9_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(@''                            <table class=''''table table-condensed table-bordered table-inner''''>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=''''min-width''''>Id</th>\r\n                                        <th class=''''min-width''''>State</th>\r\n                                        <th>Job</th>\r\n                                        <th class=''''align-right min-width''''>Enqueued</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n'')", span="240-250"];
m9_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                        <tr class=\'''')", span="261-261"];
m9_56 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                </tbody>\r\n                            </table>\r\n'')", span="425-425"];
m9_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="266-266"];
m9_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\r\n                                            <td class=\''min-width\''>\r\n         '' +\r\n''                                       <a href=\'''')", span="271-272"];
m9_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="277-277"];
m9_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>'')", span="282-282"];
m9_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(HtmlHelper.JobId(job.Key))", span="287-287"];
m9_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''</a>\r\n'')", span="292-292"];
m9_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="!job.Value.InEnqueuedState", span="297-297"];
m9_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                                    <span title=\''Job\'s state has '' +\r\n''been changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></s'' +\r\n''pan>\r\n'')", span="303-305"];
m9_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''              <td class=\''min-width\''>\r\n                                          '' +\r\n''      <span class=\''label label-default\'' style=\'''')", span="315-317"];
m9_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="322-322"];
m9_41 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="327-327"];
m9_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(job.Value.State)", span="332-332"];
m9_43 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n                                                </span>\r\n                      '' +\r\n''                      </td>\r\n                                            <td>\r\n '' +\r\n''                                               <a class=\''job-method\'' href=\'''')", span="337-339"];
m9_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="344-344"];
m9_45 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="349-349"];
m9_46 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="354-354"];
m9_47 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n                                                </a>\r\n                         '' +\r\n''                   </td>\r\n                                            <td class='' +\r\n''\''align-right min-width\''>\r\n'')", span="359-361"];
m9_48 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="job.Value.EnqueuedAt.HasValue", span="366-366"];
m9_49 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                                    <span data-moment=\'''')", span="372-372"];
m9_54 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                                    <em>n/a</em>\r\n'')", span="404-404"];
m9_50 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="377-377"];
m9_51 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\''>\r\n                                                        '')", span="382-382"];
m9_52 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Write(job.Value.EnqueuedAt)", span="387-387"];
m9_53 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''\r\n                                                    </span>\r\n'')", span="392-392"];
m9_55 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''          </tr>\r\n'')", span="414-415"];
m9_57 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="WriteLiteral(''                </td>\r\n            </tr>\r\n'')", span="435-435"];
m9_59 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodTests.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m9_62 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobMethodTests.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m9_61 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobMethodTests.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m9_63 [cluster="HangFire.Storage.IMonitoringApi.Queues()", file="JobMethodTests.cs", label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24"];
m9_64 [cluster="HttpRequestBase.LinkTo(string)", file="JobMethodTests.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m9_70 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobMethodTests.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m9_68 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobMethodTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_71 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobMethodTests.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m9_67 [cluster="Unk.Write", file="JobMethodTests.cs", label="Entry Unk.Write", span=""];
m9_66 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobMethodTests.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m9_72 [file="JobMethodTests.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m13_54 [cluster="HangFire.Web.RazorPage.Write(object)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m13_51 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m13_55 [cluster="Unk.GetDescription", file="RedisWriteOnlyList.cs", label="Entry Unk.GetDescription", span=""];
m13_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74"];
m13_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\r\n'')", span="78-78"];
m13_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Layout = new LayoutPage { Title = ''Recurring jobs'' }", span="94-94"];
m13_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\r\n'')", span="100-100"];
m13_4 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="RecurringJobs.Count == 0", span="105-105"];
m13_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No recurring jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="111-112"];
m13_6 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="124-126"];
m13_7 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(Request.LinkTo(''/recurring/trigger''))", span="131-131"];
m13_8 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Triggering...''''>\r\n                <span class=''''glyphicon glyphicon-play-circle''''></span>\r\n                Trigger now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="136-143"];
m13_9 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(Request.LinkTo(''/recurring/remove''))", span="148-148"];
m13_10 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Removing...''''\r\n                    data-confirm=''''Do you really want to REMOVE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Remove\r\n            </button>\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>Cron</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right min-width''''>Next execution</th>\r\n                    <th class=''''align-right min-width''''>Last execution</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="153-175"];
m13_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label=RecurringJobs, span="180-180"];
m13_12 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", span="186-188"];
m13_48 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="414-414"];
m13_13 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(job.Id)", span="193-193"];
m13_15 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(job.Id)", span="204-204"];
m13_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(CronExpressionDescriptor.ExpressionDescriptor.GetDescription(job.Cron))", span="214-214"];
m13_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="job.Job != null", span="224-224"];
m13_22 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(HtmlHelper.DisplayMethod(job.Job))", span="237-237"];
m13_25 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(job.LoadException.InnerException.Message)", span="259-259"];
m13_28 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="job.NextExecution != null", span="280-280"];
m13_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(JobHelper.ToStringTimestamp(job.NextExecution.Value))", span="291-291"];
m13_32 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(job.NextExecution.Value)", span="301-301"];
m13_36 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="job.LastExecution != null", span="334-334"];
m13_38 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(Request.LinkTo(''/job/'' + job.LastJobId))", span="345-345"];
m13_40 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(JobHelper.ToStringTimestamp(job.LastExecution.Value))", span="356-356"];
m13_42 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.LastJobState) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.LastJobState]) : null)", span="366-366"];
m13_44 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Write(job.LastExecution.Value)", span="376-376"];
m13_14 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>'')", span="198-199"];
m13_16 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''</td>\r\n                        <td class=\''min-width\''>'')", span="209-209"];
m13_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''</td>\r\n                        <td>\r\n'')", span="219-219"];
m13_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                                '')", span="230-230"];
m13_24 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                                <em>'')", span="254-254"];
m13_21 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral('' '')", span="232-232"];
m13_23 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\r\n'')", span="242-242"];
m13_26 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''</em>\r\n'')", span="264-264"];
m13_27 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="274-275"];
m13_29 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="286-286"];
m13_34 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="318-318"];
m13_31 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="296-296"];
m13_33 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="306-306"];
m13_35 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="328-329"];
m13_37 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                                <a href=\'''')", span="340-340"];
m13_46 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="394-394"];
m13_39 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\''>\r\n                                    <span class=\''label label-default label-ho'' +\r\n''ver\'' data-moment=\'''')", span="350-351"];
m13_41 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\'' style=\'''')", span="361-361"];
m13_43 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\''>\r\n                                        '')", span="371-371"];
m13_45 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''\r\n                                    </span>\r\n                                </'' +\r\n''a>\r\n'')", span="381-382"];
m13_47 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="404-404"];
m13_49 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="WriteLiteral(''    '')", span="424-424"];
m13_50 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisWriteOnlyList.cs", label="Exit HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74"];
m13_52 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="RedisWriteOnlyList.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m13_53 [cluster="HttpRequestBase.LinkTo(string)", file="RedisWriteOnlyList.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m13_57 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m13_59 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisWriteOnlyList.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m13_58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m13_56 [cluster="Unk.Write", file="RedisWriteOnlyList.cs", label="Entry Unk.Write", span=""];
m13_61 [file="RedisWriteOnlyList.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
m14_82 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m14_83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyQueue.cs", label="AddToSet(key, value, 0.0)", span="155-155"];
m14_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m14_98 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m14_99 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="181-183"];
m14_100 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m14_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m14_86 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyQueue.cs", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165"];
m14_87 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="167-169"];
m14_88 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m14_64 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m14_65 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136"];
m14_66 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m14_44 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96"];
m14_45 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="98-100"];
m14_46 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="102-111"];
m14_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96"];
m14_119 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m14_35 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76"];
m14_36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="78-81"];
m14_37 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="83-93"];
m14_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76"];
m14_110 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193"];
m14_111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyQueue.cs", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="195-198"];
m14_112 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="200-202"];
m14_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193"];
m14_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205"];
m14_117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RedisWriteOnlyQueue.cs", label="_commandQueue.Enqueue(action)", span="207-207"];
m14_118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205"];
m14_17 [cluster="Unk.EnlistTransaction", file="RedisWriteOnlyQueue.cs", label="Entry Unk.EnlistTransaction", span=""];
m14_18 [cluster="System.Action<T>.Invoke(T)", file="RedisWriteOnlyQueue.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m14_15 [cluster="TransactionScope.cstr", file="RedisWriteOnlyQueue.cs", label="Entry TransactionScope.cstr", span=""];
m14_76 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m14_77 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150"];
m14_78 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m14_70 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m14_71 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143"];
m14_72 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m14_19 [cluster="Unk.Complete", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Complete", span=""];
m14_27 [cluster="System.DateTime.Add(System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m14_92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m14_93 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="174-176"];
m14_94 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m14_20 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m14_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="64-66"];
m14_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m14_104 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186"];
m14_105 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="188-190"];
m14_106 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186"];
m14_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m14_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="47-49"];
m14_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="51-51"];
m14_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label="transaction.Complete()", span="58-58"];
m14_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label=_commandQueue, span="53-53"];
m14_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label="command(_connection)", span="55-55"];
m14_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m14_16 [cluster="TransactionOptions.cstr", file="RedisWriteOnlyQueue.cs", label="Entry TransactionOptions.cstr", span=""];
m14_42 [cluster="HangFire.States.State.SerializeData()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.States.State.SerializeData()", span="27-27"];
m14_114 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="200-202"];
m14_25 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="64-66"];
m14_24 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="64-66"];
m14_26 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="64-66"];
m14_33 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="71-73"];
m14_32 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="71-73"];
m14_34 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="71-73"];
m14_40 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="83-93"];
m14_39 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="83-93"];
m14_41 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="83-93"];
m14_49 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="102-111"];
m14_48 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="102-111"];
m14_50 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="102-111"];
m14_56 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="120-122"];
m14_55 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="120-122"];
m14_57 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="120-122"];
m14_62 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129"];
m14_61 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="127-129"];
m14_63 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="127-129"];
m14_68 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136"];
m14_67 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="134-136"];
m14_69 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="134-136"];
m14_74 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143"];
m14_73 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="141-143"];
m14_75 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="141-143"];
m14_80 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150"];
m14_79 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="148-150"];
m14_81 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="148-150"];
m14_90 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="167-169"];
m14_89 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="167-169"];
m14_91 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="167-169"];
m14_96 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="174-176"];
m14_95 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="174-176"];
m14_97 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="174-176"];
m14_102 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="181-183"];
m14_101 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="181-183"];
m14_103 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="181-183"];
m14_108 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="188-190"];
m14_107 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Entry lambda expression", span="188-190"];
m14_109 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="188-190"];
m14_115 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="200-202"];
m14_116 [cluster="lambda expression", file="RedisWriteOnlyQueue.cs", label="Exit lambda expression", span="200-202"];
m14_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m14_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="RedisWriteOnlyQueue.cs", label="connection == null", span="36-36"];
m14_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="RedisWriteOnlyQueue.cs", label="_connection = connection", span="38-38"];
m14_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m14_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m14_43 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m14_28 [cluster="Unk.Execute", file="RedisWriteOnlyQueue.cs", label="Entry Unk.Execute", span=""];
m14_51 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m14_52 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyQueue.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="116-118"];
m14_53 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="120-122"];
m14_54 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m14_58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m14_59 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129"];
m14_60 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m14_29 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69"];
m14_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyQueue.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="71-73"];
m14_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69"];
m14_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41"];
m14_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41"];
m14_120 [file="RedisWriteOnlyQueue.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m14_121 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_122 [file="RedisWriteOnlyQueue.cs", label="System.TimeSpan", span=""];
m14_123 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_124 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_125 [file="RedisWriteOnlyQueue.cs", label="HangFire.States.State", span=""];
m14_126 [file="RedisWriteOnlyQueue.cs", label=addAndSetStateSql, span=""];
m14_127 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_128 [file="RedisWriteOnlyQueue.cs", label="HangFire.States.State", span=""];
m14_129 [file="RedisWriteOnlyQueue.cs", label=addStateSql, span=""];
m14_130 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_131 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_132 [file="RedisWriteOnlyQueue.cs", label=enqueueJobSql, span=""];
m14_133 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_134 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_135 [file="RedisWriteOnlyQueue.cs", label="System.TimeSpan", span=""];
m14_136 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_137 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_138 [file="RedisWriteOnlyQueue.cs", label="System.TimeSpan", span=""];
m14_139 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_140 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_141 [file="RedisWriteOnlyQueue.cs", label=double, span=""];
m14_142 [file="RedisWriteOnlyQueue.cs", label=addSql, span=""];
m14_143 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_144 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_145 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_146 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_147 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_148 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_149 [file="RedisWriteOnlyQueue.cs", label=string, span=""];
m14_150 [file="RedisWriteOnlyQueue.cs", label=int, span=""];
m14_151 [file="RedisWriteOnlyQueue.cs", label=int, span=""];
m14_152 [file="RedisWriteOnlyQueue.cs", label=trimSql, span=""];
m15_20 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m15_23 [cluster="IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="RedisWriteOnlySet.cs", label="Entry IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="89-89"];
m15_18 [cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="RedisWriteOnlySet.cs", label="Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24"];
m15_0 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="35-35"];
m15_1 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="app == null", span="39-39"];
m15_3 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="configurationAction == null", span="40-40"];
m15_6 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="configurationAction(configuration)", span="43-43"];
m15_14 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="app.RunHangfireServer(server())", span="62-62"];
m15_15 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="app.MapHangfireDashboard(configuration.DashboardPath, configuration.AppPath, configuration.AuthorizationFilters)", span="65-65"];
m15_2 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="throw new ArgumentNullException(''app'');", span="39-39"];
m15_4 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="throw new ArgumentNullException(''configurationAction'');", span="40-40"];
m15_5 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="var configuration = new BootstrapperConfiguration()", span="42-42"];
m15_7 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="configuration.Activator != null", span="45-45"];
m15_8 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="JobActivator.Current = configuration.Activator", span="47-47"];
m15_9 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="configuration.Storage != null", span="50-50"];
m15_10 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="JobStorage.Current = configuration.Storage", span="52-52"];
m15_11 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="configuration.Filters", span="55-55"];
m15_13 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="configuration.Servers", span="60-60"];
m15_12 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="GlobalJobFilters.Filters.Add(filter)", span="57-57"];
m15_16 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="35-35"];
m15_22 [cluster="IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", file="RedisWriteOnlySet.cs", label="Entry IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", span="39-39"];
m15_19 [cluster="System.Action<T>.Invoke(T)", file="RedisWriteOnlySet.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m15_21 [cluster="System.Func<TResult>.Invoke()", file="RedisWriteOnlySet.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m16_51 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="55-55"];
m16_52 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.GetAllItemsFromSet(''recurring-jobs'')", span="55-55"];
m16_53 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="55-55"];
m16_54 [cluster="Unk.GetAllItemsFromSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m16_55 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="58-58"];
m16_56 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="58-58"];
m16_72 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="74-78"];
m16_16 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="28-28"];
m16_64 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.Dispose()", span="64-64"];
m16_65 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Exit lambda expression", span="64-64"];
m16_66 [cluster="Unk.Dispose", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Entry Unk.Dispose", span=""];
m16_67 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m16_116 [cluster="Unk.SetRangeInHash", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.SetRangeInHash", span=""];
m16_18 [cluster="Unk.Returns", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Returns", span=""];
m16_20 [cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="0: x.Create(It.IsNotNull<IStorageConnection>())", span="28-28"];
m16_153 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164"];
m16_155 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="167-167"];
m16_156 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="168-168"];
m16_157 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="scheduler.Execute(_token)", span="170-170"];
m16_158 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="172-172"];
m16_154 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="var time = DateTime.UtcNow", span="166-166"];
m16_159 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164"];
m16_59 [cluster="Unk.Verify", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Verify", span=""];
m16_39 [cluster="Unk.GetInstant", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetInstant", span=""];
m16_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="176-176"];
m16_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RedisWriteOnlyTransaction.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="178-179"];
m16_166 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="180-180"];
m16_167 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RedisWriteOnlyTransaction.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="182-182"];
m16_168 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="176-176"];
m16_35 [cluster="Unk.GetNextInstants", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetNextInstants", span=""];
m16_36 [cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Entry lambda expression", span="42-42"];
m16_37 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: x.GetInstant(It.IsNotNull<CrontabSchedule>(), It.IsNotNull<TimeZoneInfo>())", span="42-42"];
m16_38 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="42-42"];
m16_15 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _client.Setup(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>())).Returns(''job-id'')", span="61-61"];
m16_19 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="28-28"];
m16_105 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="115-115"];
m16_106 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: var scheduler = CreateScheduler()", span="118-118"];
m16_107 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: scheduler.Execute(_token)", span="121-121"];
m16_108 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: var jobKey = String.Format(''recurring-job:{0}'', RecurringJobId)", span="124-124"];
m16_109 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id'')))", span="126-129"];
m16_110 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="131-135"];
m16_111 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="137-141"];
m16_112 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="115-115"];
m16_134 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145"];
m16_135 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="147-147"];
m16_136 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: var scheduler = CreateScheduler()", span="148-148"];
m16_137 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: scheduler.Execute(_token)", span="150-150"];
m16_138 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="152-154"];
m16_139 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="156-160"];
m16_140 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145"];
m16_80 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="RedisWriteOnlyTransaction.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="90-92"];
m16_81 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82"];
m16_82 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Entry lambda expression", span="84-85"];
m16_83 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="84-85"];
m16_99 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238"];
m16_216 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RedisWriteOnlyTransaction.cs", label="return new RecurringJobScheduler(\r\n                _storage.Object, \r\n                _client.Object, \r\n                _instantFactory.Object,\r\n                _throttler.Object);", span="240-244"];
m16_217 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238"];
m16_169 [cluster="Unk.DoesNotThrow", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.DoesNotThrow", span=""];
m16_197 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217"];
m16_198 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransaction.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="219-219"];
m16_199 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="220-220"];
m16_200 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransaction.cs", label="scheduler.Execute(_token)", span="222-222"];
m16_201 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransaction.cs", label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc))", span="224-224"];
m16_202 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217"];
m16_34 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="33-33"];
m16_22 [cluster="Mock<IScheduleInstant>.cstr", file="RedisWriteOnlyTransaction.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m16_193 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m16_76 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75"];
m16_77 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="79-79"];
m16_78 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object)", span="79-79"];
m16_79 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="79-79"];
m16_73 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>())", span="74-78"];
m16_74 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Exit lambda expression", span="74-78"];
m16_75 [cluster="Unk.ChangeState", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Entry Unk.ChangeState", span=""];
m16_43 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="48-48"];
m16_44 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Console.WriteLine()", span="48-48"];
m16_45 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="48-48"];
m16_46 [cluster="System.Console.WriteLine()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m16_47 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="53-53"];
m16_27 [cluster="Unk.GetConnection", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetConnection", span=""];
m16_31 [cluster="Unk.GetFirstByLowestScoreFromSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m16_0 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m16_2 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _connection = new Mock<IStorageConnection>()", span="22-22"];
m16_1 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _storage = new Mock<JobStorage>()", span="21-21"];
m16_3 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _stateMachine = new Mock<IStateMachine>()", span="23-23"];
m16_4 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _cts = new CancellationTokenSource()", span="24-24"];
m16_5 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _cts.Cancel()", span="25-25"];
m16_6 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27"];
m16_7 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=red, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="28-29"];
m16_8 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="31-31"];
m16_9 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33"];
m16_10 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m16_11 [cluster="Mock<JobStorage>.cstr", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Entry Mock<JobStorage>.cstr", span=""];
m16_12 [cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Entry Mock<IStorageConnection>.cstr", span=""];
m16_13 [cluster="Mock<IStateMachine>.cstr", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Entry Mock<IStateMachine>.cstr", span=""];
m16_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m16_68 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="70-70"];
m16_69 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="69-69"];
m16_70 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object)", span="69-69"];
m16_71 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="69-69"];
m16_192 [cluster="System.Type.GetType(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m16_127 [cluster="Unk.SerializeDateTime", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.SerializeDateTime", span=""];
m16_25 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetConnection()", span="31-31"];
m16_160 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m16_23 [cluster="Unk.Create", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Create", span=""];
m16_17 [cluster="Unk.Setup", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Setup", span=""];
m16_207 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228"];
m16_208 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RedisWriteOnlyTransaction.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="230-230"];
m16_209 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="231-231"];
m16_210 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RedisWriteOnlyTransaction.cs", label="scheduler.Execute(_token)", span="233-233"];
m16_211 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RedisWriteOnlyTransaction.cs", label="_client.Verify(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>()), Times.Never)", span="235-235"];
m16_212 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228"];
m16_94 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="105-105"];
m16_95 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: var scheduler = CreateScheduler()", span="107-107"];
m16_96 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: scheduler.Execute(_token)", span="109-109"];
m16_97 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="111-111"];
m16_98 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="105-105"];
m16_28 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="32-33"];
m16_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199"];
m16_187 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="205-205"];
m16_188 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="207-207"];
m16_189 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="scheduler.Execute(_token)", span="210-210"];
m16_190 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone))", span="213-213"];
m16_186 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(\r\n                Type.GetType(''Mono.Runtime'') != null ? ''Pacific/Honolulu'' : ''Hawaiian Standard Time'')", span="202-203"];
m16_191 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199"];
m16_213 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="235-235"];
m16_24 [cluster="Unk.Returns", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Returns", span=""];
m16_21 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="28-28"];
m16_26 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m16_29 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33"];
m16_30 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m16_32 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: x.GetNextInstants(It.IsAny<DateTime?>())", span="38-38"];
m16_33 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="time > 0", span="33-33"];
m16_40 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="40-41"];
m16_41 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: _instant.Object", span="43-43"];
m16_42 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="40-41"];
m16_48 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: x.GetConnection()", span="53-53"];
m16_49 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="53-53"];
m16_50 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="50-51"];
m16_60 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="63-63"];
m16_63 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="64-64"];
m16_61 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="61-61"];
m16_62 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="63-63"];
m16_88 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null))", span="97-99"];
m16_84 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="89-89"];
m16_85 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object)", span="89-89"];
m16_86 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="time > 0", span="85-85"];
m16_87 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95"];
m16_89 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Assert.Equal(''throttler'', exception.ParamName)", span="101-101"];
m16_90 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95"];
m16_57 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95"];
m16_91 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="RedisWriteOnlyTransaction.cs", label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="97-97"];
m16_92 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95"];
m16_93 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span=""];
m16_102 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="111-111"];
m16_103 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="111-111"];
m16_104 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="111-111"];
m16_114 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="126-129"];
m16_122 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="131-135"];
m16_129 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="137-141"];
m16_113 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="126-129"];
m16_115 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="126-129"];
m16_117 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="128-129"];
m16_121 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="131-135"];
m16_123 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="131-135"];
m16_124 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="133-135"];
m16_128 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="137-141"];
m16_130 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="137-141"];
m16_131 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="139-141"];
m16_118 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="129-129"];
m16_119 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="128-129"];
m16_125 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="134-135"];
m16_126 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="133-135"];
m16_132 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="140-141"];
m16_133 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="139-141"];
m16_141 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="147-147"];
m16_144 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="153-153"];
m16_147 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="156-160"];
m16_142 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: x.GetNextInstants(It.IsAny<DateTime?>())", span="147-147"];
m16_143 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="147-147"];
m16_145 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>())", span="153-153"];
m16_146 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="153-153"];
m16_148 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)))", span="156-160"];
m16_149 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="156-160"];
m16_150 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="158-160"];
m16_151 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)", span="159-160"];
m16_152 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="158-160"];
m16_174 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="scheduler.Execute(_token)", span="182-182"];
m16_183 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="scheduler.Execute(_token)", span="195-195"];
m16_171 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="178-178"];
m16_195 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone)", span="213-213"];
m16_205 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc)", span="224-224"];
m16_214 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="235-235"];
m16_162 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.GetNextInstants(time)", span="172-172"];
m16_161 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="172-172"];
m16_170 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="178-178"];
m16_173 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="182-182"];
m16_175 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="182-182"];
m16_182 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="195-195"];
m16_184 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="195-195"];
m16_194 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="213-213"];
m16_204 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="224-224"];
m16_172 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="178-178"];
m16_196 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="213-213"];
m16_206 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="224-224"];
m16_215 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="235-235"];
m16_163 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="172-172"];
m16_101 [cluster="Unk.Verify", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Verify", span=""];
m16_100 [cluster="Unk.Execute", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m16_58 [cluster="Unk.Execute", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m16_181 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m16_176 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransaction.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186"];
m16_177 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransaction.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="189-190"];
m16_178 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransaction.cs", label="var scheduler = CreateScheduler()", span="192-192"];
m16_179 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransaction.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="195-195"];
m16_180 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransaction.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186"];
m16_203 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m16_120 [cluster="Unk.ContainsKey", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.ContainsKey", span=""];
m16_218 [file="RedisWriteOnlyTransaction.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m16_219 [file="RedisWriteOnlyTransaction.cs", label=jobKey, span=""];
m16_221 [file="RedisWriteOnlyTransaction.cs", label=scheduler, span=""];
m16_222 [file="RedisWriteOnlyTransaction.cs", label=scheduler, span=""];
m16_223 [file="RedisWriteOnlyTransaction.cs", label=timeZone, span=""];
m16_220 [file="RedisWriteOnlyTransaction.cs", label=time, span=""];
m18_14 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52"];
m18_15 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ScheduledState.cs", label="0: context.Transaction.RemoveFromSet(''schedule'', context.JobId)", span="54-54"];
m18_16 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52"];
m18_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m18_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m18_0 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m18_1 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="EnqueueAt = enqueueAt", span="29-29"];
m18_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m18_12 [cluster="long.Parse(string)", file="ScheduledState.cs", label="Entry long.Parse(string)", span="0-0"];
m18_3 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m18_4 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="37-41"];
m18_5 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m18_13 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m18_8 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m18_9 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="var timestamp = long.Parse(stateData[''EnqueueAt''])", span="48-48"];
m18_10 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="ScheduledState.cs", label="0: context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="49-49"];
m18_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m18_18 [file="ScheduledState.cs", label="HangFire.States.ScheduledState", span=""];
m19_26 [cluster="Unk.GetTestJob", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.GetTestJob", span=""];
m19_78 [cluster="Mock<IState>.cstr", file="SqlServerWriteOnlyCounter.cs", label="Entry Mock<IState>.cstr", span=""];
m19_12 [cluster="Unk.UseConnection", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.UseConnection", span=""];
m19_82 [cluster="Unk.Equal", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Equal", span=""];
m19_34 [cluster="Unk.ExpireJob", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.ExpireJob", span=""];
m19_3 [cluster="Unk.>", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.>", span=""];
m19_22 [cluster="Unk.Query", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Query", span=""];
m19_33 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerWriteOnlyCounter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m19_27 [cluster="System.DateTime.AddDays(double)", file="SqlServerWriteOnlyCounter.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m19_0 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m19_1 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="1: Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18"];
m19_2 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m19_24 [cluster="Unk.ToString", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.ToString", span=""];
m19_48 [cluster="Unk.NotNull", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.NotNull", span=""];
m19_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyCounter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_25 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578"];
m19_79 [cluster="Unk.Setup", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Setup", span=""];
m19_29 [cluster="Unk.Null", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Null", span=""];
m19_35 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m19_36 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyCounter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m19_37 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyCounter.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m19_38 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m19_93 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="86-86"];
m19_4 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="18-18"];
m19_5 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="1: new SqlServerWriteOnlyTransaction(null)", span="18-18"];
m19_6 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="18-18"];
m19_14 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="1: var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31"];
m19_15 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32"];
m19_13 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="29-41"];
m19_16 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34"];
m19_17 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="1: var job = GetTestJob(sql, jobId)", span="36-36"];
m19_19 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39"];
m19_31 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34"];
m19_30 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="34-34"];
m19_18 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37"];
m19_20 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: Assert.Null(anotherJob.ExpireAt)", span="40-40"];
m19_21 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="29-41"];
m19_32 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="34-34"];
m19_40 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m19_41 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m19_39 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="52-64"];
m19_42 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="57-57"];
m19_43 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m19_45 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m19_50 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="x.PersistJob(jobId)", span="57-57"];
m19_49 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="57-57"];
m19_44 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Null(job.ExpireAt)", span="60-60"];
m19_46 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63"];
m19_47 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="52-64"];
m19_51 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="57-57"];
m19_58 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m19_59 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m19_57 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="75-102"];
m19_64 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86"];
m19_65 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var job = GetTestJob(sql, jobId)", span="88-88"];
m19_68 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92"];
m19_71 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96"];
m19_94 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="x.SetJobState(jobId, state.Object)", span="86-86"];
m19_72 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97"];
m19_60 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="var state = new Mock<IState>()", span="80-80"];
m19_61 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="81-81"];
m19_62 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82"];
m19_63 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84"];
m19_83 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="81-81"];
m19_86 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="82-82"];
m19_89 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="83-83"];
m19_66 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Equal(''State'', job.StateName)", span="89-89"];
m19_67 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.NotNull(job.StateId)", span="90-90"];
m19_69 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Null(anotherJob.StateName)", span="93-93"];
m19_70 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Null(anotherJob.StateId)", span="94-94"];
m19_73 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Equal(''State'', jobState.Name)", span="98-98"];
m19_74 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99"];
m19_75 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.NotNull(jobState.CreatedAt)", span="100-100"];
m19_76 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101"];
m19_77 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="75-102"];
m19_84 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="x.Name", span="81-81"];
m19_85 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="81-81"];
m19_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m19_23 [cluster="Unk.Single", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Single", span=""];
m19_8 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m19_9 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27"];
m19_10 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", color=red, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41"];
m19_11 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m19_53 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m19_54 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyCounter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m19_55 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyCounter.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102"];
m19_56 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m19_28 [cluster="Unk.True", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.True", span=""];
m19_80 [cluster="Unk.Returns", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Returns", span=""];
m19_52 [cluster="Unk.PersistJob", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.PersistJob", span=""];
m19_479 [file="SqlServerWriteOnlyCounter.cs", label="HangFire.SqlServer.Tests.WriteTransactionFacts", span=""];
m19_480 [file="SqlServerWriteOnlyCounter.cs", label=arrangeSql, span=""];
m19_481 [file="SqlServerWriteOnlyCounter.cs", label=jobId, span=""];
m19_482 [file="SqlServerWriteOnlyCounter.cs", label=arrangeSql, span=""];
m19_483 [file="SqlServerWriteOnlyCounter.cs", label=jobId, span=""];
m19_484 [file="SqlServerWriteOnlyCounter.cs", label=arrangeSql, span=""];
m19_485 [file="SqlServerWriteOnlyCounter.cs", label=jobId, span=""];
m19_486 [file="SqlServerWriteOnlyCounter.cs", label=state, span=""];
m19_487 [file="SqlServerWriteOnlyCounter.cs", label=arrangeSql, span=""];
m19_488 [file="SqlServerWriteOnlyCounter.cs", label=jobId, span=""];
m19_489 [file="SqlServerWriteOnlyCounter.cs", label=state, span=""];
m20_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyJob.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m20_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="1: exception == null", span="28-28"];
m20_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="1: Exception = exception", span="31-31"];
m20_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="0: throw new ArgumentNullException(''exception'');", span="28-28"];
m20_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="0: FailedAt = DateTime.UtcNow", span="30-30"];
m20_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m20_13 [cluster="System.Exception.ToString()", file="SqlServerWriteOnlyJob.cs", label="Entry System.Exception.ToString()", span="0-0"];
m20_7 [cluster="HangFire.States.FailedState.SerializeData()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m20_8 [cluster="HangFire.States.FailedState.SerializeData()", color=red, community=0, file="SqlServerWriteOnlyJob.cs", label="0: return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50"];
m20_9 [cluster="HangFire.States.FailedState.SerializeData()", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m20_12 [cluster="System.Exception.GetType()", file="SqlServerWriteOnlyJob.cs", label="Entry System.Exception.GetType()", span="0-0"];
m20_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m20_14 [file="SqlServerWriteOnlyJob.cs", label="HangFire.States.FailedState", span=""];
m21_14 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24"];
m21_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="26-28"];
m21_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24"];
m21_13 [cluster="Unk.Execute", file="SqlServerWriteOnlyList.cs", label="Entry Unk.Execute", span=""];
m21_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m21_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs", label="0: transaction == null", span="12-12"];
m21_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs", label="1: _transaction = transaction", span="14-14"];
m21_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs", label="1: throw new ArgumentNullException(''transaction'');", span="12-12"];
m21_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m21_20 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31"];
m21_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="33-36"];
m21_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="38-40"];
m21_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31"];
m21_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m21_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m21_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="19-21"];
m21_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m21_24 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="38-40"];
m21_11 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="1: x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="19-21"];
m21_10 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="19-21"];
m21_12 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="19-21"];
m21_18 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="26-28"];
m21_17 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="26-28"];
m21_19 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="26-28"];
m21_25 [cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs", label="0: x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="38-40"];
m21_26 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="38-40"];
m21_27 [file="SqlServerWriteOnlyList.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", span=""];
m21_28 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m21_29 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m21_30 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m21_31 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m21_32 [file="SqlServerWriteOnlyList.cs", label=int, span=""];
m21_33 [file="SqlServerWriteOnlyList.cs", label=int, span=""];
m21_34 [file="SqlServerWriteOnlyList.cs", label=trimSql, span=""];
m22_17 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SqlServerWriteOnlyQueue.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m22_19 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m22_20 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="Assert.IsNotNull(filterContext)", span="48-48"];
m22_21 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="50-51"];
m22_23 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="filterContext.ExceptionHandled = true", span="55-55"];
m22_22 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label=_handlesException, span="53-53"];
m22_24 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m22_16 [cluster="string.Format(string, object, object)", file="SqlServerWriteOnlyQueue.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m22_7 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m22_8 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m22_11 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="filterContext.Canceled = true", span="37-37"];
m22_9 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="33-33"];
m22_10 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label=_cancelsTheCreation, span="35-35"];
m22_12 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label=_throwException, span="40-40"];
m22_13 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="throw new Exception();", span="42-42"];
m22_14 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m22_18 [cluster="System.Exception.Exception()", file="SqlServerWriteOnlyQueue.cs", label="Entry System.Exception.Exception()", span="0-0"];
m22_0 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m22_1 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="1: _name = name", span="22-22"];
m22_2 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _results = results", span="23-23"];
m22_3 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="1: _throwException = throwException", span="24-24"];
m22_4 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _cancelsTheCreation = cancelsTheCreation", span="25-25"];
m22_5 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs", label="1: _handlesException = handlesException", span="26-26"];
m22_6 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m22_15 [cluster="Unk.IsNotNull", file="SqlServerWriteOnlyQueue.cs", label="Entry Unk.IsNotNull", span=""];
m22_25 [file="SqlServerWriteOnlyQueue.cs", label="HangFire.Tests.TestClientFilter", span=""];
m23_15 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m23_16 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlySet.cs", label="return InnerProcess.ToString();", span="48-48"];
m23_17 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m23_0 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m23_1 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", color=red, community=0, file="SqlServerWriteOnlySet.cs", label="1: innerProcess == null", span="26-26"];
m23_3 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", color=red, community=0, file="SqlServerWriteOnlySet.cs", label="0: InnerProcess = innerProcess", span="27-27"];
m23_2 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", color=red, community=0, file="SqlServerWriteOnlySet.cs", label="0: throw new ArgumentNullException(''innerProcess'');", span="26-26"];
m23_4 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m23_6 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32"];
m23_7 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32"];
m23_8 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m23_9 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerWriteOnlySet.cs", label="1: true", span="39-39"];
m23_10 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerWriteOnlySet.cs", label="1: context.CancellationToken.ThrowIfCancellationRequested()", span="41-41"];
m23_11 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerWriteOnlySet.cs", label="0: InnerProcess.Execute(context)", span="42-42"];
m23_12 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlySet.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m23_14 [cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlySet.cs", label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m23_18 [cluster="object.ToString()", file="SqlServerWriteOnlySet.cs", label="Entry object.ToString()", span="0-0"];
m23_13 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerWriteOnlySet.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m23_19 [file="SqlServerWriteOnlySet.cs", label="Hangfire.Server.InfiniteLoopProcess", span=""];
m24_38 [cluster="HangFire.States.DeletedState.DeletedState()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.DeletedState.DeletedState()", span="27-27"];
m24_10 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", span="66-66"];
m24_27 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="return true;", span="60-60"];
m24_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Jobs = new SqlServerWriteOnlyJob(this)", span="22-22"];
m24_20 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(result)", span="43-43"];
m24_17 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m24_18 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _commandQueue.Enqueue(action)", span="41-41"];
m24_19 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m24_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m24_14 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(result)", span="33-33"];
m24_13 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="SqlServerWriteOnlyTransaction.cs", label="var result = state.IsFinal", span="31-31"];
m24_32 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Assert.True(JobHelper.DeserializeDateTime(data[''DeletedAt'']) != default(DateTime))", span="63-63"];
m24_29 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var state = CreateState()", span="58-58"];
m24_11 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", span="27-27"];
m24_31 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Assert.Equal(1, data.Count)", span="62-62"];
m24_12 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m24_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="28-28"];
m24_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="16-16"];
m24_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Lists = new SqlServerWriteOnlyList(this)", span="20-20"];
m24_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _connection = connection", span="18-18"];
m24_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Queues = new SqlServerWriteOnlyQueue(this)", span="21-21"];
m24_33 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", span="56-56"];
m24_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="46-48"];
m24_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: _connection.EnlistTransaction(Transaction.Current)", span="50-50"];
m24_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: _commandQueue", span="52-52"];
m24_25 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: command(_connection)", span="54-54"];
m24_26 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="transaction.Complete()", span="57-57"];
m24_9 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m24_28 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", span="56-56"];
m24_34 [cluster="HangFire.States.DeletedState.SerializeData()", file="SqlServerWriteOnlyTransaction.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m24_30 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var data = state.SerializeData()", span="60-60"];
m24_36 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: return new DeletedState();", span="68-68"];
m24_37 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", span="66-66"];
m24_5 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Entry HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m24_6 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var state = CreateState()", span="19-19"];
m24_7 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var result = state.Name", span="21-21"];
m24_8 [cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(DeletedState.StateName, result)", span="23-23"];
m24_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="28-28"];
m24_35 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m25_8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
m25_9 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
m25_0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
m25_1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
m25_10 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
m25_11 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
m25_4 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50"];
m25_5 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="50-50"];
m25_2 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42"];
m25_3 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="42-42"];
m25_12 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m25_13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m25_6 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
m25_7 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
m26_92 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m26_104 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="var transaction = _connection.CreateWriteTransaction()", span="198-198"];
m26_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204"];
m26_107 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="return transaction.Commit();", span="206-206"];
m26_105 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202"];
m26_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m26_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m26_145 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m26_161 [cluster="System.Collections.Generic.List<T>.List()", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m26_93 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m26_50 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m26_94 [cluster="string.Format(string, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m26_89 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m26_87 [cluster="string.IsNullOrWhiteSpace(string)", file="StateMachine.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m26_128 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m26_59 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37"];
m26_49 [cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m26_127 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26"];
m26_91 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="StateMachine.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m26_17 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m26_157 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="!_handlers.ContainsKey(handler.StateName)", span="292-292"];
m26_158 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="294-294"];
m26_159 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="_handlers[handler.StateName].Add(handler)", span="297-297"];
m26_155 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="String.IsNullOrEmpty(handler.StateName)", span="290-290"];
m26_153 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="handler == null", span="289-289"];
m26_156 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateName'');", span="290-290"];
m26_154 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="throw new ArgumentNullException(''handler'');", span="289-289"];
m26_160 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="287-287"];
m26_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m26_152 [cluster="System.Func<T, TResult>.Invoke(T)", file="StateMachine.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m26_125 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m26_55 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m26_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m26_42 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=green, community=0, file="StateMachine.cs", label="0: transaction.PersistJob(jobId)", span="104-104"];
m26_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m26_41 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    changingContext.CandidateState,\r\n                    filterInfo.StateChangedFilters)", span="98-102"];
m26_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var transaction = _connection.CreateWriteTransaction()", span="92-92"];
m26_43 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="transaction.Commit()", span="107-107"];
m26_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78"];
m26_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m26_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m26_44 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="return jobId;", span="110-110"];
m26_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88"];
m26_40 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="94-96"];
m26_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m26_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="method == null", span="69-69"];
m26_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="parameters == null", span="70-70"];
m26_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="state == null", span="71-71"];
m26_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''method'');", span="69-69"];
m26_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''parameters'');", span="70-70"];
m26_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="71-71"];
m26_45 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m26_25 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="StateMachine.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m26_15 [cluster="HangFire.JobStorage.GetStateHandlers()", file="StateMachine.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m26_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachine.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m26_151 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="StateMachine.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m26_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m26_123 [cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m26_56 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m26_88 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m26_129 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m26_139 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=green, community=0, file="StateMachine.cs", label="0: transaction.SetJobState(context.JobId, state.StateName, properties)", span="273-273"];
m26_135 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="265-266"];
m26_138 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label=appendToJob, span="271-271"];
m26_140 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''Reason'', state.Reason)", span="276-276"];
m26_142 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=green, community=0, file="StateMachine.cs", label="0: transaction.AppendJobHistory(context.JobId, properties)", span="279-279"];
m26_141 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="277-277"];
m26_137 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''State'', state.StateName)", span="269-269"];
m26_136 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="var now = DateTime.UtcNow", span="267-267"];
m26_143 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="259-259"];
m26_124 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_48 [cluster="Unk.ToJson", file="StateMachine.cs", label="Entry Unk.ToJson", span=""];
m26_22 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="59-59"];
m26_60 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="77-77"];
m26_19 [cluster="lambda expression", file="StateMachine.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m26_62 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="77-77"];
m26_61 [cluster="lambda expression", file="StateMachine.cs", label="x.ParameterType", span="77-77"];
m26_18 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="59-59"];
m26_20 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="59-59"];
m26_23 [cluster="lambda expression", file="StateMachine.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m26_24 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="59-59"];
m26_147 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachine.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m26_148 [cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11"];
m26_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m26_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="AppendHistory(context.Transaction, context, chosenState, true)", span="241-241"];
m26_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers.ContainsKey(oldState)", span="218-218"];
m26_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers[oldState]", span="220-220"];
m26_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers.ContainsKey(chosenState.StateName)", span="232-232"];
m26_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="_handlers[chosenState.StateName]", span="235-235"];
m26_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="!String.IsNullOrEmpty(oldState)", span="216-216"];
m26_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="handler.Unapply(context)", span="222-222"];
m26_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label=stateChangedFilters, span="226-226"];
m26_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="filter.OnStateUnapplied(context)", span="228-228"];
m26_116 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="var stateData = chosenState.GetProperties(context.JobMethod)", span="234-234"];
m26_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="handler.Apply(context, stateData)", span="237-237"];
m26_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label=stateChangedFilters, span="243-243"];
m26_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="filter.OnStateApplied(context)", span="245-245"];
m26_122 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m26_54 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m26_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="AppendHistory(context, oldState, false)", span="189-189"];
m26_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="var oldState = context.CandidateState", span="184-184"];
m26_99 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="oldState != context.CandidateState", span="187-187"];
m26_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label=filters, span="182-182"];
m26_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="filter.OnStateChanging(context)", span="185-185"];
m26_101 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m26_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m26_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m26_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123"];
m26_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var filterInfo = GetFilters(jobMethod)", span="140-140"];
m26_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143"];
m26_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m26_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m26_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165"];
m26_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169"];
m26_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="state == null", span="117-117"];
m26_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="jobData == null", span="125-125"];
m26_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var currentState = jobData.State", span="131-131"];
m26_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139"];
m26_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="var context = new StateContext(jobId, jobMethod)", span="142-142"];
m26_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label=JobLoadException, span="149-149"];
m26_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m26_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132"];
m26_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return false;", span="128-128"];
m26_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="117-117"];
m26_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''jobId'');", span="116-116"];
m26_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="return false;", span="134-134"];
m26_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw;", span="174-174"];
m26_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label=Exception, span="172-172"];
m26_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m26_21 [cluster="Unk.Select", file="StateMachine.cs", label="Entry Unk.Select", span=""];
m26_102 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m26_130 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m26_58 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="9-9"];
m26_163 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m26_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m26_149 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284"];
m26_150 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m26_126 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m26_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m26_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="StateMachine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m26_162 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m26_146 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m26_103 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m26_132 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="AppendHistory(transaction, context, state, appendToJob)", span="254-254"];
m26_131 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="var transaction = _connection.CreateWriteTransaction()", span="252-252"];
m26_133 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="transaction.Commit()", span="255-255"];
m26_134 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m26_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="StateMachine.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m26_52 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m26_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m26_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_connection = connection", span="49-49"];
m26_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="RegisterHandler(handler)", span="54-54"];
m26_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m26_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="stateHandlers == null", span="47-47"];
m26_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m26_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label=handlers, span="52-52"];
m26_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="filters != null", span="57-57"];
m26_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="connection == null", span="46-46"];
m26_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m26_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m26_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m26_164 [file="StateMachine.cs", label="HangFire.States.StateMachine", span=""];
m26_165 [file="StateMachine.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m27_8 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="context.CandidateState.StateName == FailedState.Name", span="48-48"];
m27_9 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="1: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54"];
m27_10 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="1: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60"];
m27_11 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="transaction.Commit()", span="63-63"];
m27_16 [cluster="System.DateTime.AddMonths(int)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m27_14 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer(options)", span="51-51"];
m27_7 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="1: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46"];
m27_19 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="71-71"];
m27_3 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m27_6 [cluster="lambda expression", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="1: Exit lambda expression", span="31-31"];
m27_4 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="31-31"];
m27_5 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer()", span="31-31"];
m27_12 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m27_13 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="51-51"];
m27_37 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="121-121"];
m27_38 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="StatisticsHistoryFilterAttribute.cs", label="configuration.UseServer(() => new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage))", span="125-127"];
m27_39 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="121-121"];
m27_18 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = queues\r\n            }", span="66-69"];
m27_31 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="106-106"];
m27_32 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="StatisticsHistoryFilterAttribute.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="110-110"];
m27_33 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="106-106"];
m27_17 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="62-62"];
m27_20 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="62-62"];
m27_47 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="145-145"];
m27_15 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="51-51"];
m27_22 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer(options)", span="71-71"];
m27_21 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="71-71"];
m27_23 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="71-71"];
m27_29 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer(options)", span="95-95"];
m27_28 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="95-95"];
m27_30 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="95-95"];
m27_35 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer(options)", span="110-110"];
m27_34 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="110-110"];
m27_36 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="110-110"];
m27_41 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage)", span="125-127"];
m27_40 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="125-127"];
m27_42 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="125-127"];
m27_48 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="new BackgroundJobServer(options, storage)", span="145-145"];
m27_49 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="145-145"];
m27_0 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="29-29"];
m27_1 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="StatisticsHistoryFilterAttribute.cs", label="configuration.UseServer(() => new BackgroundJobServer())", span="31-31"];
m27_2 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="29-29"];
m27_44 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="140-140"];
m27_45 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="StatisticsHistoryFilterAttribute.cs", label="configuration.UseServer(() => new BackgroundJobServer(options, storage))", span="145-145"];
m27_46 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="140-140"];
m27_43 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79"];
m27_24 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="84-84"];
m27_25 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues\r\n            }", span="89-93"];
m27_26 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="95-95"];
m27_27 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="84-84"];
m27_50 [file="StatisticsHistoryFilterAttribute.cs", label=options, span=""];
m27_51 [file="StatisticsHistoryFilterAttribute.cs", label=options, span=""];
m27_52 [file="StatisticsHistoryFilterAttribute.cs", label=options, span=""];
m27_53 [file="StatisticsHistoryFilterAttribute.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m27_54 [file="StatisticsHistoryFilterAttribute.cs", label="Hangfire.JobStorage", span=""];
m27_55 [file="StatisticsHistoryFilterAttribute.cs", label="Hangfire.JobStorage", span=""];
m27_56 [file="StatisticsHistoryFilterAttribute.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m28_0 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m28_1 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="32-35"];
m28_2 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m28_15 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m28_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m28_9 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m28_5 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m28_6 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededState.cs", label="0: context.Transaction.ExpireJob(context.JobId, JobExpirationTimeout)", span="43-43"];
m28_7 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededState.cs", label="1: context.Transaction.IncrementCounter(''stats:succeeded'')", span="44-44"];
m28_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m28_16 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m28_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="17-17"];
m28_11 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m28_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededState.cs", label="1: context.Transaction.DecrementCounter(''stats:succeeded'')", span="49-49"];
m28_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededState.cs", label="0: context.Transaction.PersistJob(context.JobId)", span="50-50"];
m28_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m29_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29"];
m29_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28"];
m29_5 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m29_6 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m29_7 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededStateHandler.cs", label="0: context.Transaction.RemoveFromList(''succeeded'', context.JobId)", span="16-16"];
m29_8 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m29_0 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m29_1 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededStateHandler.cs", label="0: context.Transaction.InsertToList(''succeeded'', context.JobId)", span="10-10"];
m29_2 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="SucceededStateHandler.cs", label="1: context.Transaction.TrimList(''succeeded'', 0, 99)", span="11-11"];
m29_3 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m30_72 [cluster="RecurringJobScheduler.cstr", file="SucceededStateHandlerFacts.cs", label="Entry RecurringJobScheduler.cstr", span=""];
m30_64 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="65-65"];
m30_65 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object))", span="67-69"];
m30_66 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="71-71"];
m30_67 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="65-65"];
m30_116 [cluster="Unk.SetRangeInHash", file="SucceededStateHandlerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m30_18 [cluster="Mock<IBackgroundJobClient>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m30_20 [cluster="Mock<IThrottler>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IThrottler>.cstr", span=""];
m30_153 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164"];
m30_155 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="167-167"];
m30_156 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="168-168"];
m30_157 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="170-170"];
m30_158 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="172-172"];
m30_154 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="var time = DateTime.UtcNow", span="166-166"];
m30_159 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164"];
m30_59 [cluster="Unk.GetAllEntriesFromHash", file="SucceededStateHandlerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m30_68 [cluster="Unk.Equal", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Equal", span=""];
m30_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="176-176"];
m30_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="SucceededStateHandlerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="178-179"];
m30_166 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="180-180"];
m30_167 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="SucceededStateHandlerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="182-182"];
m30_168 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="176-176"];
m30_105 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="115-115"];
m30_106 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="118-118"];
m30_107 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="121-121"];
m30_109 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id'')))", span="126-129"];
m30_110 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="131-135"];
m30_111 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="137-141"];
m30_108 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="var jobKey = String.Format(''recurring-job:{0}'', RecurringJobId)", span="124-124"];
m30_112 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="115-115"];
m30_134 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145"];
m30_135 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="147-147"];
m30_136 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="148-148"];
m30_137 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="150-150"];
m30_138 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="152-154"];
m30_139 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="156-160"];
m30_140 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145"];
m30_19 [cluster="Mock<IScheduleInstantFactory>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IScheduleInstantFactory>.cstr", span=""];
m30_169 [cluster="Unk.DoesNotThrow", file="SucceededStateHandlerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m30_80 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="85-85"];
m30_81 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="SucceededStateHandlerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object))", span="87-89"];
m30_82 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(''instantFactory'', exception.ParamName)", span="91-91"];
m30_83 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="85-85"];
m30_99 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238"];
m30_216 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="SucceededStateHandlerFacts.cs", label="return new RecurringJobScheduler(\r\n                _storage.Object, \r\n                _client.Object, \r\n                _instantFactory.Object,\r\n                _throttler.Object);", span="240-244"];
m30_217 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238"];
m30_197 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217"];
m30_198 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="SucceededStateHandlerFacts.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="219-219"];
m30_199 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="220-220"];
m30_200 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="222-222"];
m30_201 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="SucceededStateHandlerFacts.cs", label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc))", span="224-224"];
m30_202 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217"];
m30_34 [cluster="Unk.>", file="SucceededStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m30_193 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="SucceededStateHandlerFacts.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m30_73 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75"];
m30_74 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="SucceededStateHandlerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object))", span="77-79"];
m30_75 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="81-81"];
m30_76 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75"];
m30_27 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m30_0 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="28-28"];
m30_1 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _storage = new Mock<JobStorage>()", span="30-30"];
m30_2 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _client = new Mock<IBackgroundJobClient>()", span="31-31"];
m30_3 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _instantFactory = new Mock<IScheduleInstantFactory>()", span="32-32"];
m30_4 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _throttler = new Mock<IThrottler>()", span="33-33"];
m30_5 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _token = new CancellationTokenSource().Token", span="34-34"];
m30_6 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _instant = new Mock<IScheduleInstant>()", span="37-37"];
m30_7 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(new[] { _instant.Object.NowInstant })", span="38-38"];
m30_8 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _timeZone = TimeZoneInfo.Local", span="40-40"];
m30_9 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _instantFactory.Setup(x => x.GetInstant(It.IsNotNull<CrontabSchedule>(), It.IsNotNull<TimeZoneInfo>()))\r\n                .Returns(() => _instant.Object)", span="42-43"];
m30_10 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', _timeZone.Id }\r\n            }", span="45-50"];
m30_11 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _connection = new Mock<IStorageConnection>()", span="52-52"];
m30_12 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="53-53"];
m30_13 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="55-56"];
m30_14 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="58-59"];
m30_15 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _client.Setup(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>())).Returns(''job-id'')", span="61-61"];
m30_16 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="28-28"];
m30_22 [cluster="Mock<IScheduleInstant>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m30_50 [cluster="Unk.GetConnection", file="SucceededStateHandlerFacts.cs", label="Entry Unk.GetConnection", span=""];
m30_192 [cluster="System.Type.GetType(string)", file="SucceededStateHandlerFacts.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m30_17 [cluster="Mock<JobStorage>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m30_127 [cluster="Unk.SerializeDateTime", file="SucceededStateHandlerFacts.cs", label="Entry Unk.SerializeDateTime", span=""];
m30_25 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededStateHandlerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m30_160 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m30_23 [cluster="Unk.Setup", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Setup", span=""];
m30_207 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228"];
m30_208 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="SucceededStateHandlerFacts.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="230-230"];
m30_209 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="231-231"];
m30_210 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="233-233"];
m30_211 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="SucceededStateHandlerFacts.cs", label="_client.Verify(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>()), Times.Never)", span="235-235"];
m30_212 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228"];
m30_94 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="105-105"];
m30_95 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="107-107"];
m30_96 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="109-109"];
m30_97 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="111-111"];
m30_98 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="105-105"];
m30_21 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="SucceededStateHandlerFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m30_28 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m30_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199"];
m30_187 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="205-205"];
m30_188 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="207-207"];
m30_189 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="210-210"];
m30_190 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone))", span="213-213"];
m30_186 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(\r\n                Type.GetType(''Mono.Runtime'') != null ? ''Pacific/Honolulu'' : ''Hawaiian Standard Time'')", span="202-203"];
m30_191 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199"];
m30_39 [cluster="Unk.GetInstant", file="SucceededStateHandlerFacts.cs", label="Entry Unk.GetInstant", span=""];
m30_117 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="128-129"];
m30_31 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="38-38"];
m30_36 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="42-42"];
m30_40 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="43-43"];
m30_43 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="48-48"];
m30_47 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="53-53"];
m30_51 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="55-55"];
m30_55 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="58-58"];
m30_60 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="61-61"];
m30_32 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: x.GetNextInstants(It.IsAny<DateTime?>())", span="38-38"];
m30_33 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="38-38"];
m30_37 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: x.GetInstant(It.IsNotNull<CrontabSchedule>(), It.IsNotNull<TimeZoneInfo>())", span="42-42"];
m30_38 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="42-42"];
m30_41 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: _instant.Object", span="43-43"];
m30_42 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="43-43"];
m30_44 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: Console.WriteLine()", span="48-48"];
m30_45 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="48-48"];
m30_48 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: x.GetConnection()", span="53-53"];
m30_49 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="53-53"];
m30_52 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: x.GetAllItemsFromSet(''recurring-jobs'')", span="55-55"];
m30_53 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="55-55"];
m30_56 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="58-58"];
m30_57 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="58-58"];
m30_61 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="61-61"];
m30_62 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="61-61"];
m30_69 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="69-69"];
m30_70 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="0: new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object)", span="69-69"];
m30_71 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="69-69"];
m30_78 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object)", span="79-79"];
m30_85 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object)", span="89-89"];
m30_92 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null)", span="99-99"];
m30_122 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="131-135"];
m30_125 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="134-135"];
m30_129 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="137-141"];
m30_132 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="140-141"];
m30_148 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)))", span="156-160"];
m30_151 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)", span="159-160"];
m30_174 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="182-182"];
m30_183 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="scheduler.Execute(_token)", span="195-195"];
m30_103 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="111-111"];
m30_114 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="126-129"];
m30_142 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="147-147"];
m30_145 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>())", span="153-153"];
m30_171 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="178-178"];
m30_195 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone)", span="213-213"];
m30_205 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc)", span="224-224"];
m30_214 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="235-235"];
m30_162 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.GetNextInstants(time)", span="172-172"];
m30_77 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="79-79"];
m30_79 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="79-79"];
m30_84 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="89-89"];
m30_86 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="89-89"];
m30_91 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="99-99"];
m30_93 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="99-99"];
m30_102 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="111-111"];
m30_113 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="126-129"];
m30_121 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="131-135"];
m30_123 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="131-135"];
m30_124 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="133-135"];
m30_126 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="133-135"];
m30_128 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="137-141"];
m30_130 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="137-141"];
m30_131 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="139-141"];
m30_133 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="139-141"];
m30_141 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="147-147"];
m30_144 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="153-153"];
m30_147 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="156-160"];
m30_149 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="156-160"];
m30_150 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="158-160"];
m30_152 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="158-160"];
m30_161 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="172-172"];
m30_170 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="178-178"];
m30_173 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="182-182"];
m30_175 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="182-182"];
m30_182 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="195-195"];
m30_184 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="195-195"];
m30_194 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="213-213"];
m30_204 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="224-224"];
m30_213 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="235-235"];
m30_104 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="111-111"];
m30_115 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="126-129"];
m30_143 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="147-147"];
m30_146 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="153-153"];
m30_172 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="178-178"];
m30_196 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="213-213"];
m30_206 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="224-224"];
m30_215 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="235-235"];
m30_163 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="172-172"];
m30_118 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="129-129"];
m30_119 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="128-129"];
m30_35 [cluster="Unk.GetNextInstants", file="SucceededStateHandlerFacts.cs", label="Entry Unk.GetNextInstants", span=""];
m30_101 [cluster="Unk.Verify", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Verify", span=""];
m30_54 [cluster="Unk.GetAllItemsFromSet", file="SucceededStateHandlerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m30_100 [cluster="Unk.Execute", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Execute", span=""];
m30_63 [cluster="Unk.Create", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Create", span=""];
m30_181 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m30_24 [cluster="Unk.Returns", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Returns", span=""];
m30_87 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95"];
m30_88 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="SucceededStateHandlerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null))", span="97-99"];
m30_89 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(''throttler'', exception.ParamName)", span="101-101"];
m30_90 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95"];
m30_176 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186"];
m30_177 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="SucceededStateHandlerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="189-190"];
m30_178 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="SucceededStateHandlerFacts.cs", label="var scheduler = CreateScheduler()", span="192-192"];
m30_179 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="SucceededStateHandlerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="195-195"];
m30_180 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="SucceededStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186"];
m30_203 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SucceededStateHandlerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m30_29 [cluster="Mock<IStorageConnection>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m30_46 [cluster="System.Console.WriteLine()", file="SucceededStateHandlerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m30_26 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededStateHandlerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m30_120 [cluster="Unk.ContainsKey", file="SucceededStateHandlerFacts.cs", label="Entry Unk.ContainsKey", span=""];
m30_30 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SucceededStateHandlerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m30_218 [file="SucceededStateHandlerFacts.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m30_219 [file="SucceededStateHandlerFacts.cs", label=jobKey, span=""];
m30_221 [file="SucceededStateHandlerFacts.cs", label=scheduler, span=""];
m30_222 [file="SucceededStateHandlerFacts.cs", label=scheduler, span=""];
m30_223 [file="SucceededStateHandlerFacts.cs", label=timeZone, span=""];
m30_220 [file="SucceededStateHandlerFacts.cs", label=time, span=""];
n71 -> n7  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n8  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n12  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n15  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n16  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n24  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n29  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n47  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n62  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n71 -> n69  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcher", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcherOptions", style=dashed];
n2 -> n7  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
n2 -> n8  [color=darkseagreen4, key=1, label="HangFire.Redis.FetchedJobsWatcherOptions", style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n4 -> n9  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n6 -> n9  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n9 -> n2  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n18  [key=2, style=dotted];
n12 -> n15  [color=darkseagreen4, key=1, label=connection, style=dashed];
n16 -> n17  [key=0, style=solid];
n16 -> n21  [key=2, style=dotted];
n16 -> n16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n15 -> n14  [key=0, style=solid];
n15 -> n20  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n17 -> n11  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [color=darkseagreen4, key=1, label=string, style=dashed];
n22 -> n25  [color=darkseagreen4, key=1, label=string, style=dashed];
n22 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n22 -> n29  [color=darkseagreen4, key=1, label=string, style=dashed];
n22 -> n32  [color=darkseagreen4, key=1, label=string, style=dashed];
n22 -> n33  [color=darkseagreen4, key=1, label=string, style=dashed];
n23 -> n24  [key=0, style=solid];
n23 -> n35  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n36  [key=2, style=dotted];
n24 -> n37  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n35  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n36  [key=2, style=dotted];
n26 -> n38  [key=2, style=dotted];
n26 -> n28  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n28  [key=0, style=solid];
n29 -> n39  [key=2, style=dotted];
n32 -> n34  [key=0, style=solid];
n32 -> n35  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n40  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [color=darkseagreen4, key=1, label=requeued, style=dashed];
n27 -> n31  [color=darkseagreen4, key=1, label=requeued, style=dashed];
n27 -> n33  [color=darkseagreen4, key=1, label=requeued, style=dashed];
n27 -> n27  [color=darkorchid, key=3, label="Local variable int requeued", style=bold];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [key=0, style=solid];
n30 -> n28  [key=0, style=solid];
n30 -> n30  [color=darkseagreen4, key=1, label=requeued, style=dashed];
n30 -> n31  [color=darkseagreen4, key=1, label=requeued, style=dashed];
n30 -> n33  [color=darkseagreen4, key=1, label=requeued, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n34 -> n22  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n41 -> n46  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
n41 -> n48  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
n41 -> n50  [color=darkorchid, key=3, label="method methodReturn bool RequeueJobIfTimedOut", style=bold];
n41 -> n51  [color=darkorchid, key=3, label="method methodReturn bool RequeueJobIfTimedOut", style=bold];
n42 -> n43  [key=0, style=solid];
n42 -> n36  [key=2, style=dotted];
n42 -> n53  [key=2, style=dotted];
n42 -> n44  [color=darkseagreen4, key=1, label=flags, style=dashed];
n46 -> n51  [key=0, style=solid];
n46 -> n36  [key=2, style=dotted];
n46 -> n55  [key=2, style=dotted];
n46 -> n56  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n59  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [color=darkseagreen4, key=1, label=fetched, style=dashed];
n43 -> n47  [color=darkseagreen4, key=1, label=fetched, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [color=darkseagreen4, key=1, label="@checked", style=dashed];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=0, style=solid];
n45 -> n54  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n51  [key=0, style=solid];
n47 -> n57  [key=2, style=dotted];
n47 -> n58  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n60  [key=2, style=dotted];
n50 -> n52  [key=0, style=solid];
n52 -> n41  [color=blue, key=0, style=bold];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=2, style=dotted];
n62 -> n65  [key=2, style=dotted];
n63 -> n61  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n66 -> n69  [color=darkseagreen4, key=1, label=string, style=dashed];
n66 -> n51  [color=darkorchid, key=3, label="method methodReturn bool TimedOutByCheckedTime", style=bold];
n67 -> n68  [key=0, style=solid];
n67 -> n69  [key=0, style=solid];
n67 -> n64  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n64  [key=2, style=dotted];
n69 -> n65  [key=2, style=dotted];
n68 -> n70  [key=0, style=solid];
n70 -> n66  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_1 -> m0_54  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_55  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_56  [key=2, style=dotted];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_56  [key=2, style=dotted];
m0_5 -> m0_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_58  [key=2, style=dotted];
m0_7 -> m0_59  [key=2, style=dotted];
m0_7 -> m0_60  [key=2, style=dotted];
m0_7 -> m0_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m0_7 -> m0_15  [color=darkseagreen4, key=1, label=pager, style=dashed];
m0_7 -> m0_52  [color=darkseagreen4, key=1, label=pager, style=dashed];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_57  [key=2, style=dotted];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_61  [key=2, style=dotted];
m0_8 -> m0_17  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_63  [key=2, style=dotted];
m0_15 -> m0_64  [key=2, style=dotted];
m0_15 -> m0_65  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_69  [key=2, style=dotted];
m0_52 -> m0_64  [key=2, style=dotted];
m0_52 -> m0_65  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_54  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_51  [key=0, style=solid];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_11 -> m0_53  [key=0, style=solid];
m0_11 -> m0_54  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_54  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_60  [key=2, style=dotted];
m0_13 -> m0_62  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_54  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_54  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_54  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_54  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_62  [key=2, style=dotted];
m0_19 -> m0_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_54  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_62  [key=2, style=dotted];
m0_21 -> m0_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_54  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_27  [key=0, style=solid];
m0_23 -> m0_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_23 -> m0_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_54  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_54  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_62  [key=2, style=dotted];
m0_25 -> m0_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_60  [key=2, style=dotted];
m0_28 -> m0_62  [key=2, style=dotted];
m0_28 -> m0_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_54  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_54  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_66  [key=2, style=dotted];
m0_30 -> m0_65  [key=2, style=dotted];
m0_30 -> m0_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_54  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=0, style=solid];
m0_32 -> m0_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_54  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_54  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=0, style=solid];
m0_35 -> m0_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_35 -> m0_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_36 -> m0_50  [key=0, style=solid];
m0_36 -> m0_54  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_54  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_60  [key=2, style=dotted];
m0_38 -> m0_62  [key=2, style=dotted];
m0_38 -> m0_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_54  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_67  [key=2, style=dotted];
m0_40 -> m0_65  [key=2, style=dotted];
m0_40 -> m0_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_40 -> m0_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_54  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_49  [key=0, style=solid];
m0_43 -> m0_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_54  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_54  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_54  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> n55  [key=2, style=dotted];
m0_45 -> m0_62  [key=2, style=dotted];
m0_45 -> m0_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_54  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_62  [key=2, style=dotted];
m0_47 -> m0_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_54  [key=2, style=dotted];
m0_50 -> m0_17  [key=0, style=solid];
m0_50 -> m0_54  [key=2, style=dotted];
m0_53 -> m0_0  [color=blue, key=0, style=bold];
m0_70 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m0_70 -> m0_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_6  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_15  [color=green, key=2, style=dotted];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_15  [key=2, style=dotted];
m7_4 -> m7_15  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_16  [key=2, style=dotted];
m7_6 -> m7_15  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_17  [key=2, style=dotted];
m7_7 -> m7_16  [key=2, style=dotted];
m7_8 -> m7_15  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_16  [key=2, style=dotted];
m7_10 -> m7_15  [key=2, style=dotted];
m7_10 -> m7_3  [key=0, style=solid];
m7_11 -> m7_15  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_16  [key=2, style=dotted];
m7_13 -> m7_15  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_3 -> m7_9  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_3 -> m7_11  [key=0, style=solid];
m7_14 -> m7_0  [color=blue, key=0, style=bold];
m7_18 -> m7_1  [color=green, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m7_18 -> m7_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.PerPageSelector", style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m8_6 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_11  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_12  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_13  [key=2, style=dotted];
m8_10 -> m8_6  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_5  [key=2, style=dotted];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_3 -> m8_0  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_60  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_61  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_62  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_63  [key=2, style=dotted];
m9_5 -> m9_7  [color=darkseagreen4, key=1, label=queues, style=dashed];
m9_5 -> m9_10  [color=darkseagreen4, key=1, label=queues, style=dashed];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_60  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_9  [color=red, key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_58  [key=0, style=solid];
m9_10 -> m9_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_20  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_22  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_26  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_10 -> m9_29  [color=darkseagreen4, key=1, label=queue, style=dashed];
m9_8 -> m9_59  [key=0, style=solid];
m9_8 -> m9_60  [key=2, style=dotted];
m9_9 -> m9_10  [color=red, key=0, style=solid];
m9_9 -> m9_60  [color=red, key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_60  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_60  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_64  [key=2, style=dotted];
m9_12 -> m9_65  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_65  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_65  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_24  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_64  [key=2, style=dotted];
m9_20 -> m9_65  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_65  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_56  [key=0, style=solid];
m9_29 -> m9_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_60  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_60  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_60  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_60  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_60  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_60  [key=2, style=dotted];
m9_23 -> m9_25  [key=0, style=solid];
m9_23 -> m9_60  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_60  [key=2, style=dotted];
m9_27 -> m9_57  [key=0, style=solid];
m9_27 -> m9_60  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_60  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_60  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_60  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_65  [key=2, style=dotted];
m9_31 -> m9_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_31 -> m9_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_60  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_64  [key=2, style=dotted];
m9_33 -> m9_65  [key=2, style=dotted];
m9_33 -> m9_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_33 -> m9_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_60  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_66  [key=2, style=dotted];
m9_35 -> m9_67  [key=2, style=dotted];
m9_35 -> m9_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_60  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_39  [key=0, style=solid];
m9_37 -> m9_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_37 -> m9_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_60  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_60  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_68  [key=2, style=dotted];
m9_40 -> n36  [key=2, style=dotted];
m9_40 -> m9_65  [key=2, style=dotted];
m9_40 -> m9_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_60  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_65  [key=2, style=dotted];
m9_42 -> m9_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_42 -> m9_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_60  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_64  [key=2, style=dotted];
m9_44 -> m9_65  [key=2, style=dotted];
m9_44 -> m9_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_44 -> m9_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_60  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_70  [key=2, style=dotted];
m9_46 -> m9_67  [key=2, style=dotted];
m9_46 -> m9_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_46 -> m9_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_60  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_54  [key=0, style=solid];
m9_48 -> m9_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_48 -> m9_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_60  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_60  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_71  [key=2, style=dotted];
m9_50 -> m9_65  [key=2, style=dotted];
m9_50 -> m9_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_50 -> m9_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_60  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_65  [key=2, style=dotted];
m9_52 -> m9_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_53 -> m9_55  [key=0, style=solid];
m9_53 -> m9_60  [key=2, style=dotted];
m9_55 -> m9_29  [key=0, style=solid];
m9_55 -> m9_60  [key=2, style=dotted];
m9_57 -> m9_10  [key=0, style=solid];
m9_57 -> m9_60  [key=2, style=dotted];
m9_59 -> m9_0  [color=blue, key=0, style=bold];
m9_72 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_9  [color=red, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m9_72 -> m9_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_51  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_52  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_51  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=0, style=solid];
m13_5 -> m13_49  [key=0, style=solid];
m13_5 -> m13_51  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_51  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_53  [key=2, style=dotted];
m13_7 -> m13_54  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_51  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_53  [key=2, style=dotted];
m13_9 -> m13_54  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_51  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_48  [key=0, style=solid];
m13_11 -> m13_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_11 -> m13_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_51  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_51  [key=2, style=dotted];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_54  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_54  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_55  [key=2, style=dotted];
m13_17 -> m13_56  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_24  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_57  [key=2, style=dotted];
m13_22 -> m13_56  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_54  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_34  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_58  [key=2, style=dotted];
m13_30 -> m13_54  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_54  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_46  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_53  [key=2, style=dotted];
m13_38 -> m13_54  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_58  [key=2, style=dotted];
m13_40 -> m13_54  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_59  [key=2, style=dotted];
m13_42 -> n36  [key=2, style=dotted];
m13_42 -> m13_54  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_54  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_51  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_51  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_51  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_51  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_51  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_51  [key=2, style=dotted];
m13_23 -> m13_27  [key=0, style=solid];
m13_23 -> m13_51  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_51  [key=2, style=dotted];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_51  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_51  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_51  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_51  [key=2, style=dotted];
m13_33 -> m13_35  [key=0, style=solid];
m13_33 -> m13_51  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_51  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_51  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_51  [key=2, style=dotted];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_51  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_51  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_51  [key=2, style=dotted];
m13_45 -> m13_47  [key=0, style=solid];
m13_45 -> m13_51  [key=2, style=dotted];
m13_47 -> m13_11  [key=0, style=solid];
m13_47 -> m13_51  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_51  [key=2, style=dotted];
m13_50 -> m13_0  [color=blue, key=0, style=bold];
m13_61 -> m13_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m13_61 -> m13_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m14_82 -> m14_83  [key=0, style=solid];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_85  [key=2, style=dotted];
m14_84 -> m14_82  [color=blue, key=0, style=bold];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_23  [key=2, style=dotted];
m14_99 -> m14_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_100 -> m14_98  [color=blue, key=0, style=bold];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_85 -> m14_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_85 -> m14_82  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m14_85 -> m14_83  [color=darkorchid, key=3, label="Parameter variable double score", style=bold];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_90  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m14_86 -> m14_86  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_23  [key=2, style=dotted];
m14_87 -> m14_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_88 -> m14_85  [color=blue, key=0, style=bold];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_23  [key=2, style=dotted];
m14_65 -> m14_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_66 -> m14_64  [color=blue, key=0, style=bold];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_44 -> m14_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_49  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m14_45 -> m14_45  [color=darkorchid, key=3, label="Local variable string addStateSql", style=bold];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_23  [key=2, style=dotted];
m14_46 -> m14_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_47 -> m14_44  [color=blue, key=0, style=bold];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_35 -> m14_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_40  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m14_36 -> m14_36  [color=darkorchid, key=3, label="Local variable string addAndSetStateSql", style=bold];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_23  [key=2, style=dotted];
m14_37 -> m14_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_38 -> m14_35  [color=blue, key=0, style=bold];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_110 -> m14_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_115  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m14_111 -> m14_111  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_23  [key=2, style=dotted];
m14_112 -> m14_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_113 -> m14_110  [color=blue, key=0, style=bold];
m14_23 -> m14_117  [key=0, style=solid];
m14_23 -> m14_21  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_30  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_37  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_46  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_53  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_59  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_65  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_71  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_77  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_87  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_93  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_99  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_105  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_23 -> m14_112  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_119  [key=2, style=dotted];
m14_118 -> m14_23  [color=blue, key=0, style=bold];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_23  [key=2, style=dotted];
m14_77 -> m14_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_78 -> m14_76  [color=blue, key=0, style=bold];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_23  [key=2, style=dotted];
m14_71 -> m14_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_72 -> m14_70  [color=blue, key=0, style=bold];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_23  [key=2, style=dotted];
m14_93 -> m14_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_94 -> m14_92  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=2, style=dotted];
m14_21 -> m14_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_22 -> m14_20  [color=blue, key=0, style=bold];
m14_104 -> m14_105  [key=0, style=solid];
m14_104 -> m14_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_23  [key=2, style=dotted];
m14_105 -> m14_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_106 -> m14_104  [color=blue, key=0, style=bold];
m14_8 -> m14_9  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_15  [key=2, style=dotted];
m14_9 -> m14_16  [key=2, style=dotted];
m14_9 -> m14_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_17  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_19  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_13  [key=0, style=solid];
m14_12 -> m14_11  [key=0, style=solid];
m14_12 -> m14_18  [key=2, style=dotted];
m14_14 -> m14_8  [color=blue, key=0, style=bold];
m14_114 -> m14_115  [key=0, style=solid];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_27  [key=2, style=dotted];
m14_25 -> m14_28  [key=2, style=dotted];
m14_24 -> m14_25  [key=0, style=solid];
m14_26 -> m14_24  [color=blue, key=0, style=bold];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_28  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_34 -> m14_32  [color=blue, key=0, style=bold];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_42  [key=2, style=dotted];
m14_40 -> m14_43  [key=2, style=dotted];
m14_40 -> m14_28  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_41 -> m14_39  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_42  [key=2, style=dotted];
m14_49 -> m14_43  [key=2, style=dotted];
m14_49 -> m14_28  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_50 -> m14_48  [color=blue, key=0, style=bold];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_28  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_57 -> m14_55  [color=blue, key=0, style=bold];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_28  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_63 -> m14_61  [color=blue, key=0, style=bold];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_27  [key=2, style=dotted];
m14_68 -> m14_28  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_69 -> m14_67  [color=blue, key=0, style=bold];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_28  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_75 -> m14_73  [color=blue, key=0, style=bold];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_27  [key=2, style=dotted];
m14_80 -> m14_28  [key=2, style=dotted];
m14_79 -> m14_80  [key=0, style=solid];
m14_81 -> m14_79  [color=blue, key=0, style=bold];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_28  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_91 -> m14_89  [color=blue, key=0, style=bold];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_28  [key=2, style=dotted];
m14_95 -> m14_96  [key=0, style=solid];
m14_97 -> m14_95  [color=blue, key=0, style=bold];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_28  [key=2, style=dotted];
m14_101 -> m14_102  [key=0, style=solid];
m14_103 -> m14_101  [color=blue, key=0, style=bold];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_28  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_109 -> m14_107  [color=blue, key=0, style=bold];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_28  [key=2, style=dotted];
m14_116 -> m14_114  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_2 -> m14_4  [key=0, style=solid];
m14_2 -> n10  [key=2, style=dotted];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_51 -> m14_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_56  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m14_52 -> m14_52  [color=darkorchid, key=3, label="Local variable string enqueueJobSql", style=bold];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_23  [key=2, style=dotted];
m14_53 -> m14_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_54 -> m14_51  [color=blue, key=0, style=bold];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_23  [key=2, style=dotted];
m14_59 -> m14_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_60 -> m14_58  [color=blue, key=0, style=bold];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_23  [key=2, style=dotted];
m14_30 -> m14_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_31 -> m14_29  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_6  [color=blue, key=0, style=bold];
m14_120 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_59  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_65  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_71  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_77  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_83  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_87  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_93  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_99  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_105  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_112  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_120 -> m14_117  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_121 -> m14_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_122 -> m14_25  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m14_123 -> m14_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_124 -> m14_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_125 -> m14_40  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m14_126 -> m14_40  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m14_127 -> m14_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_128 -> m14_49  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m14_129 -> m14_49  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m14_130 -> m14_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_131 -> m14_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_132 -> m14_56  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m14_133 -> m14_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_134 -> m14_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_135 -> m14_68  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m14_136 -> m14_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_137 -> m14_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_138 -> m14_80  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m14_139 -> m14_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_140 -> m14_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_141 -> m14_90  [color=darkseagreen4, key=1, label=double, style=dashed];
m14_142 -> m14_90  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m14_143 -> m14_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_144 -> m14_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_145 -> m14_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_146 -> m14_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_147 -> m14_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_148 -> m14_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_149 -> m14_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_150 -> m14_115  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_151 -> m14_115  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_152 -> m14_115  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m15_0 -> m15_6  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m15_0 -> m15_14  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m15_0 -> m15_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_19  [key=2, style=dotted];
m15_14 -> m15_13  [key=0, style=solid];
m15_14 -> m15_21  [key=2, style=dotted];
m15_14 -> m15_22  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_23  [key=2, style=dotted];
m15_2 -> m15_16  [key=0, style=solid];
m15_2 -> n10  [key=2, style=dotted];
m15_4 -> m15_16  [key=0, style=solid];
m15_4 -> n10  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_18  [key=2, style=dotted];
m15_5 -> m15_7  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_5 -> m15_8  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_5 -> m15_9  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_5 -> m15_10  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_5 -> m15_11  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_5 -> m15_13  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_5 -> m15_15  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_9  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_15  [key=0, style=solid];
m15_12 -> m15_11  [key=0, style=solid];
m15_12 -> m15_20  [key=2, style=dotted];
m15_16 -> m15_0  [color=blue, key=0, style=bold];
m16_51 -> m16_52  [color=green, key=0, style=solid];
m16_52 -> m16_53  [color=green, key=0, style=solid];
m16_52 -> m16_57  [key=2, style=dotted];
m16_52 -> m16_54  [color=green, key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_58  [key=2, style=dotted];
m16_53 -> m16_51  [color=blue, key=0, style=bold];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_59  [key=2, style=dotted];
m16_54 -> m16_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_55 -> m16_56  [color=green, key=0, style=solid];
m16_55 -> m16_59  [key=2, style=dotted];
m16_55 -> m16_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_56 -> m16_51  [color=blue, key=0, style=bold];
m16_56 -> m16_57  [color=green, key=0, style=solid];
m16_56 -> n36  [color=green, key=2, style=dotted];
m16_56 -> m16_59  [color=green, key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_16 -> m16_0  [color=blue, key=0, style=bold];
m16_64 -> m16_65  [color=green, key=0, style=solid];
m16_64 -> m16_66  [key=2, style=dotted];
m16_65 -> m16_66  [color=green, key=0, style=solid];
m16_65 -> m16_34  [color=green, key=2, style=dotted];
m16_65 -> m16_69  [color=green, key=1, label="lambda expression", style=dashed];
m16_65 -> m16_63  [color=blue, key=0, style=bold];
m16_66 -> m16_67  [color=green, key=0, style=solid];
m16_66 -> m16_39  [color=green, key=2, style=dotted];
m16_67 -> m16_64  [color=blue, key=0, style=bold];
m16_67 -> m16_68  [key=0, style=solid];
m16_20 -> m16_21  [color=red, key=0, style=solid];
m16_20 -> m16_22  [color=red, key=2, style=dotted];
m16_20 -> m16_23  [color=red, key=2, style=dotted];
m16_153 -> m16_154  [key=0, style=solid];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_160  [key=2, style=dotted];
m16_156 -> m16_99  [key=2, style=dotted];
m16_156 -> m16_157  [key=0, style=solid];
m16_157 -> m16_100  [key=2, style=dotted];
m16_157 -> m16_158  [key=0, style=solid];
m16_158 -> m16_101  [key=2, style=dotted];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_154 -> m16_162  [color=darkseagreen4, key=1, label=time, style=dashed];
m16_159 -> m16_153  [color=blue, key=0, style=bold];
m16_164 -> m16_165  [key=0, style=solid];
m16_165 -> m16_23  [key=2, style=dotted];
m16_165 -> m16_24  [key=2, style=dotted];
m16_165 -> m16_30  [key=2, style=dotted];
m16_165 -> m16_166  [key=0, style=solid];
m16_165 -> m16_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_166 -> m16_99  [key=2, style=dotted];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_174  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_169  [key=2, style=dotted];
m16_167 -> m16_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_168 -> m16_164  [color=blue, key=0, style=bold];
m16_35 -> m16_36  [color=red, key=0, style=solid];
m16_36 -> m16_37  [color=green, key=0, style=solid];
m16_36 -> m16_22  [color=red, key=2, style=dotted];
m16_36 -> m16_40  [color=red, key=1, label="lambda expression", style=dashed];
m16_37 -> m16_38  [color=green, key=0, style=solid];
m16_37 -> m16_39  [color=green, key=2, style=dotted];
m16_37 -> m16_34  [color=green, key=2, style=dotted];
m16_38 -> m16_35  [color=blue, key=0, style=bold];
m16_38 -> m16_36  [color=blue, key=0, style=bold];
m16_15 -> m16_16  [color=green, key=0, style=solid];
m16_15 -> m16_23  [color=green, key=2, style=dotted];
m16_15 -> m16_24  [color=green, key=2, style=dotted];
m16_15 -> m16_40  [color=green, key=1, label="lambda expression", style=dashed];
m16_19 -> m16_20  [color=red, key=0, style=solid];
m16_19 -> m16_32  [color=green, key=0, style=solid];
m16_105 -> m16_106  [color=green, key=0, style=solid];
m16_106 -> m16_107  [color=green, key=0, style=solid];
m16_106 -> m16_99  [color=green, key=2, style=dotted];
m16_107 -> m16_108  [color=green, key=0, style=solid];
m16_107 -> m16_100  [color=green, key=2, style=dotted];
m16_108 -> m16_109  [color=green, key=0, style=solid];
m16_108 -> n36  [color=green, key=2, style=dotted];
m16_108 -> m16_114  [color=green, key=1, label=jobKey, style=dashed];
m16_108 -> m16_110  [color=green, key=1, label=jobKey, style=dashed];
m16_108 -> m16_122  [color=green, key=1, label=jobKey, style=dashed];
m16_108 -> m16_111  [color=green, key=1, label=jobKey, style=dashed];
m16_108 -> m16_129  [color=green, key=1, label=jobKey, style=dashed];
m16_109 -> m16_110  [color=green, key=0, style=solid];
m16_109 -> m16_101  [color=green, key=2, style=dotted];
m16_109 -> m16_113  [color=green, key=1, label="lambda expression", style=dashed];
m16_110 -> m16_111  [color=green, key=0, style=solid];
m16_110 -> m16_101  [color=green, key=2, style=dotted];
m16_110 -> m16_121  [color=green, key=1, label="lambda expression", style=dashed];
m16_111 -> m16_112  [color=green, key=0, style=solid];
m16_111 -> m16_101  [color=green, key=2, style=dotted];
m16_111 -> m16_128  [color=green, key=1, label="lambda expression", style=dashed];
m16_112 -> m16_105  [color=blue, key=0, style=bold];
m16_134 -> m16_135  [color=green, key=0, style=solid];
m16_135 -> m16_136  [color=green, key=0, style=solid];
m16_135 -> m16_23  [color=green, key=2, style=dotted];
m16_135 -> m16_24  [color=green, key=2, style=dotted];
m16_135 -> m16_141  [color=green, key=1, label="lambda expression", style=dashed];
m16_136 -> m16_137  [color=green, key=0, style=solid];
m16_136 -> m16_99  [color=green, key=2, style=dotted];
m16_137 -> m16_138  [color=green, key=0, style=solid];
m16_137 -> m16_100  [color=green, key=2, style=dotted];
m16_138 -> m16_139  [color=green, key=0, style=solid];
m16_138 -> m16_101  [color=green, key=2, style=dotted];
m16_138 -> m16_144  [color=green, key=1, label="lambda expression", style=dashed];
m16_139 -> m16_140  [color=green, key=0, style=solid];
m16_139 -> m16_101  [color=green, key=2, style=dotted];
m16_139 -> m16_147  [color=green, key=1, label="lambda expression", style=dashed];
m16_140 -> m16_134  [color=blue, key=0, style=bold];
m16_80 -> m16_81  [color=green, key=0, style=solid];
m16_80 -> m16_59  [key=2, style=dotted];
m16_80 -> m16_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_81 -> m16_82  [color=green, key=0, style=solid];
m16_81 -> m16_34  [color=green, key=2, style=dotted];
m16_81 -> m16_84  [color=green, key=1, label="lambda expression", style=dashed];
m16_81 -> m16_76  [color=blue, key=0, style=bold];
m16_82 -> m16_83  [color=green, key=0, style=solid];
m16_82 -> m16_39  [color=green, key=2, style=dotted];
m16_83 -> m16_80  [color=blue, key=0, style=bold];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_22  [key=2, style=dotted];
m16_83 -> m16_31  [key=2, style=dotted];
m16_83 -> m16_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_99 -> m16_216  [key=0, style=solid];
m16_216 -> m16_72  [key=2, style=dotted];
m16_216 -> m16_217  [key=0, style=solid];
m16_217 -> m16_99  [color=blue, key=0, style=bold];
m16_197 -> m16_198  [key=0, style=solid];
m16_198 -> m16_199  [key=0, style=solid];
m16_198 -> m16_203  [key=2, style=dotted];
m16_199 -> m16_99  [key=2, style=dotted];
m16_199 -> m16_200  [key=0, style=solid];
m16_200 -> m16_100  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_201 -> m16_101  [key=2, style=dotted];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_202 -> m16_197  [color=blue, key=0, style=bold];
m16_34 -> m16_32  [color=blue, key=0, style=bold];
m16_34 -> m16_84  [color=blue, key=0, style=bold];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_73  [color=blue, key=0, style=bold];
m16_77 -> m16_78  [color=green, key=0, style=solid];
m16_77 -> m16_17  [key=2, style=dotted];
m16_77 -> m16_18  [key=2, style=dotted];
m16_77 -> m16_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_78 -> m16_79  [color=green, key=0, style=solid];
m16_78 -> m16_57  [key=2, style=dotted];
m16_78 -> m16_72  [color=green, key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_58  [key=2, style=dotted];
m16_79 -> m16_77  [color=blue, key=0, style=bold];
m16_73 -> m16_74  [color=green, key=0, style=solid];
m16_73 -> m16_22  [key=2, style=dotted];
m16_73 -> m16_75  [key=2, style=dotted];
m16_74 -> m16_75  [color=green, key=0, style=solid];
m16_74 -> m16_34  [color=green, key=2, style=dotted];
m16_74 -> m16_77  [color=green, key=1, label="lambda expression", style=dashed];
m16_74 -> m16_72  [color=blue, key=0, style=bold];
m16_75 -> m16_76  [color=green, key=0, style=solid];
m16_75 -> m16_39  [color=green, key=2, style=dotted];
m16_43 -> m16_44  [color=green, key=0, style=solid];
m16_44 -> m16_45  [color=green, key=0, style=solid];
m16_44 -> m16_46  [color=green, key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_22  [key=2, style=dotted];
m16_45 -> m16_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_45 -> m16_43  [color=blue, key=0, style=bold];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_39  [key=2, style=dotted];
m16_47 -> m16_44  [color=blue, key=0, style=bold];
m16_47 -> m16_48  [color=green, key=0, style=solid];
m16_0 -> m16_1  [color=red, key=0, style=solid];
m16_2 -> m16_3  [color=red, key=0, style=solid];
m16_2 -> m16_18  [color=green, key=2, style=dotted];
m16_2 -> m16_12  [color=red, key=2, style=dotted];
m16_1 -> m16_2  [color=red, key=0, style=solid];
m16_1 -> m16_11  [color=red, key=2, style=dotted];
m16_3 -> m16_4  [color=green, key=0, style=solid];
m16_3 -> m16_19  [color=green, key=2, style=dotted];
m16_3 -> m16_13  [key=2, style=dotted];
m16_4 -> m16_5  [color=red, key=0, style=solid];
m16_4 -> m16_20  [color=green, key=2, style=dotted];
m16_4 -> m16_14  [key=2, style=dotted];
m16_5 -> m16_6  [color=red, key=0, style=solid];
m16_5 -> m16_14  [color=green, key=2, style=dotted];
m16_5 -> m16_15  [color=red, key=2, style=dotted];
m16_6 -> m16_7  [color=red, key=0, style=solid];
m16_6 -> m16_22  [color=green, key=2, style=dotted];
m16_6 -> m16_16  [color=red, key=2, style=dotted];
m16_7 -> m16_8  [color=red, key=0, style=solid];
m16_7 -> m16_23  [color=green, key=2, style=dotted];
m16_7 -> m16_24  [color=green, key=2, style=dotted];
m16_7 -> m16_19  [color=red, key=1, label="lambda expression", style=dashed];
m16_7 -> m16_17  [color=red, key=2, style=dotted];
m16_7 -> m16_18  [color=red, key=2, style=dotted];
m16_8 -> m16_9  [color=green, key=0, style=solid];
m16_8 -> m16_17  [key=2, style=dotted];
m16_8 -> m16_18  [key=2, style=dotted];
m16_8 -> m16_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_9 -> m16_10  [color=green, key=0, style=solid];
m16_9 -> m16_23  [color=green, key=2, style=dotted];
m16_9 -> m16_24  [color=green, key=2, style=dotted];
m16_9 -> m16_36  [color=green, key=1, label="lambda expression", style=dashed];
m16_9 -> m16_32  [color=green, key=1, label="lambda expression", style=dashed];
m16_9 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_18  [key=2, style=dotted];
m16_9 -> m16_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_10 -> m16_11  [color=green, key=0, style=solid];
m16_10 -> m16_25  [color=green, key=2, style=dotted];
m16_10 -> m16_26  [color=green, key=2, style=dotted];
m16_10 -> m16_27  [color=green, key=2, style=dotted];
m16_10 -> m16_28  [color=green, key=2, style=dotted];
m16_10 -> m16_43  [color=green, key=1, label="lambda expression", style=dashed];
m16_10 -> m16_0  [color=blue, key=0, style=bold];
m16_11 -> m16_12  [color=green, key=0, style=solid];
m16_12 -> m16_13  [color=green, key=0, style=solid];
m16_12 -> m16_23  [color=green, key=2, style=dotted];
m16_12 -> m16_24  [color=green, key=2, style=dotted];
m16_12 -> m16_47  [color=green, key=1, label="lambda expression", style=dashed];
m16_13 -> m16_14  [color=green, key=0, style=solid];
m16_13 -> m16_23  [color=green, key=2, style=dotted];
m16_13 -> m16_30  [color=green, key=2, style=dotted];
m16_13 -> m16_24  [color=green, key=2, style=dotted];
m16_13 -> m16_51  [color=green, key=1, label="lambda expression", style=dashed];
m16_14 -> m16_15  [color=green, key=0, style=solid];
m16_14 -> m16_23  [color=green, key=2, style=dotted];
m16_14 -> m16_24  [color=green, key=2, style=dotted];
m16_14 -> m16_55  [color=green, key=1, label="lambda expression", style=dashed];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_57  [key=2, style=dotted];
m16_69 -> m16_70  [color=green, key=0, style=solid];
m16_69 -> m16_58  [key=2, style=dotted];
m16_70 -> m16_71  [color=green, key=0, style=solid];
m16_70 -> m16_59  [key=2, style=dotted];
m16_70 -> m16_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_71 -> m16_67  [color=blue, key=0, style=bold];
m16_71 -> m16_69  [color=blue, key=0, style=bold];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [key=2, style=dotted];
m16_207 -> m16_208  [key=0, style=solid];
m16_208 -> m16_209  [key=0, style=solid];
m16_209 -> m16_99  [key=2, style=dotted];
m16_209 -> m16_210  [key=0, style=solid];
m16_210 -> m16_100  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_211 -> m16_101  [key=2, style=dotted];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_212 -> m16_207  [color=blue, key=0, style=bold];
m16_94 -> m16_95  [color=green, key=0, style=solid];
m16_95 -> m16_96  [color=green, key=0, style=solid];
m16_95 -> m16_99  [color=green, key=2, style=dotted];
m16_96 -> m16_97  [color=green, key=0, style=solid];
m16_96 -> m16_100  [color=green, key=2, style=dotted];
m16_97 -> m16_98  [color=green, key=0, style=solid];
m16_97 -> m16_101  [color=green, key=2, style=dotted];
m16_97 -> m16_102  [color=green, key=1, label="lambda expression", style=dashed];
m16_98 -> m16_94  [color=blue, key=0, style=bold];
m16_28 -> m16_29  [key=0, style=solid];
m16_185 -> m16_186  [key=0, style=solid];
m16_187 -> m16_188  [key=0, style=solid];
m16_188 -> m16_99  [key=2, style=dotted];
m16_188 -> m16_189  [key=0, style=solid];
m16_189 -> m16_100  [key=2, style=dotted];
m16_189 -> m16_190  [key=0, style=solid];
m16_190 -> m16_101  [key=2, style=dotted];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_186 -> m16_187  [key=0, style=solid];
m16_186 -> m16_190  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m16_186 -> m16_195  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m16_186 -> m16_192  [key=2, style=dotted];
m16_186 -> m16_193  [key=2, style=dotted];
m16_191 -> m16_185  [color=blue, key=0, style=bold];
m16_213 -> m16_214  [key=0, style=solid];
m16_24 -> m16_25  [key=0, style=solid];
m16_21 -> m16_19  [color=blue, key=0, style=bold];
m16_26 -> m16_24  [color=blue, key=0, style=bold];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_22  [key=2, style=dotted];
m16_29 -> m16_31  [key=2, style=dotted];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_30 -> m16_28  [color=blue, key=0, style=bold];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_41  [color=green, key=0, style=solid];
m16_32 -> m16_21  [color=green, key=0, style=solid];
m16_32 -> m16_34  [color=green, key=2, style=dotted];
m16_32 -> m16_35  [color=green, key=2, style=dotted];
m16_33 -> m16_34  [key=0, style=solid];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_61  [color=green, key=0, style=solid];
m16_41 -> m16_42  [color=green, key=0, style=solid];
m16_41 -> m16_43  [key=2, style=dotted];
m16_42 -> m16_40  [color=blue, key=0, style=bold];
m16_42 -> m16_32  [color=green, key=0, style=bold];
m16_48 -> m16_49  [color=green, key=0, style=solid];
m16_48 -> m16_27  [color=green, key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_43  [key=2, style=dotted];
m16_49 -> m16_47  [color=blue, key=0, style=bold];
m16_50 -> m16_48  [color=blue, key=0, style=bold];
m16_60 -> m16_61  [key=0, style=solid];
m16_63 -> m16_64  [key=0, style=solid];
m16_61 -> m16_62  [color=green, key=0, style=solid];
m16_61 -> m16_27  [key=2, style=dotted];
m16_61 -> m16_34  [color=green, key=2, style=dotted];
m16_61 -> m16_23  [color=green, key=2, style=dotted];
m16_62 -> m16_60  [color=blue, key=0, style=bold];
m16_62 -> m16_40  [color=green, key=0, style=bold];
m16_88 -> m16_89  [color=green, key=0, style=solid];
m16_88 -> m16_34  [color=green, key=2, style=dotted];
m16_88 -> m16_91  [color=green, key=1, label="lambda expression", style=dashed];
m16_84 -> m16_82  [color=blue, key=0, style=bold];
m16_84 -> m16_85  [color=green, key=0, style=solid];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_34  [color=green, key=0, style=solid];
m16_85 -> m16_72  [color=green, key=2, style=dotted];
m16_86 -> m16_87  [key=0, style=solid];
m16_87 -> m16_85  [color=blue, key=0, style=bold];
m16_87 -> m16_88  [color=green, key=0, style=solid];
m16_89 -> m16_90  [color=green, key=0, style=solid];
m16_89 -> m16_22  [key=2, style=dotted];
m16_89 -> m16_75  [key=2, style=dotted];
m16_89 -> m16_39  [color=green, key=2, style=dotted];
m16_90 -> m16_88  [color=blue, key=0, style=bold];
m16_90 -> m16_87  [color=blue, key=0, style=bold];
m16_57 -> m16_55  [color=blue, key=0, style=bold];
m16_57 -> m16_91  [key=0, style=solid];
m16_91 -> m16_92  [color=green, key=0, style=solid];
m16_91 -> m16_43  [key=2, style=dotted];
m16_92 -> m16_93  [color=green, key=0, style=solid];
m16_92 -> m16_72  [color=green, key=2, style=dotted];
m16_92 -> m16_57  [color=blue, key=0, style=bold];
m16_93 -> m16_91  [color=blue, key=0, style=bold];
m16_93 -> m16_1  [color=red, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_2  [color=red, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_5  [color=red, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_6  [color=red, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_7  [color=red, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_36  [color=red, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_102 -> m16_103  [color=green, key=0, style=solid];
m16_103 -> m16_104  [color=green, key=0, style=solid];
m16_103 -> m16_34  [color=green, key=2, style=dotted];
m16_103 -> m16_23  [color=green, key=2, style=dotted];
m16_104 -> m16_102  [color=blue, key=0, style=bold];
m16_114 -> m16_115  [color=green, key=0, style=solid];
m16_114 -> m16_34  [color=green, key=2, style=dotted];
m16_114 -> m16_116  [color=green, key=2, style=dotted];
m16_114 -> m16_117  [color=green, key=1, label="lambda expression", style=dashed];
m16_122 -> m16_123  [color=green, key=0, style=solid];
m16_122 -> m16_34  [color=green, key=2, style=dotted];
m16_122 -> m16_116  [color=green, key=2, style=dotted];
m16_122 -> m16_124  [color=green, key=1, label="lambda expression", style=dashed];
m16_129 -> m16_130  [color=green, key=0, style=solid];
m16_129 -> m16_34  [color=green, key=2, style=dotted];
m16_129 -> m16_116  [color=green, key=2, style=dotted];
m16_129 -> m16_131  [color=green, key=1, label="lambda expression", style=dashed];
m16_113 -> m16_114  [color=green, key=0, style=solid];
m16_115 -> m16_113  [color=blue, key=0, style=bold];
m16_117 -> m16_118  [color=green, key=0, style=solid];
m16_121 -> m16_122  [color=green, key=0, style=solid];
m16_123 -> m16_121  [color=blue, key=0, style=bold];
m16_124 -> m16_125  [color=green, key=0, style=solid];
m16_128 -> m16_129  [color=green, key=0, style=solid];
m16_130 -> m16_128  [color=blue, key=0, style=bold];
m16_131 -> m16_132  [color=green, key=0, style=solid];
m16_118 -> m16_119  [color=green, key=0, style=solid];
m16_118 -> m16_120  [color=green, key=2, style=dotted];
m16_119 -> m16_117  [color=blue, key=0, style=bold];
m16_125 -> m16_126  [color=green, key=0, style=solid];
m16_125 -> m16_120  [color=green, key=2, style=dotted];
m16_125 -> m16_127  [color=green, key=2, style=dotted];
m16_126 -> m16_124  [color=blue, key=0, style=bold];
m16_132 -> m16_133  [color=green, key=0, style=solid];
m16_132 -> m16_120  [color=green, key=2, style=dotted];
m16_132 -> m16_127  [color=green, key=2, style=dotted];
m16_133 -> m16_131  [color=blue, key=0, style=bold];
m16_141 -> m16_142  [color=green, key=0, style=solid];
m16_144 -> m16_145  [color=green, key=0, style=solid];
m16_147 -> m16_148  [color=green, key=0, style=solid];
m16_142 -> m16_143  [color=green, key=0, style=solid];
m16_142 -> m16_34  [color=green, key=2, style=dotted];
m16_142 -> m16_35  [color=green, key=2, style=dotted];
m16_143 -> m16_141  [color=blue, key=0, style=bold];
m16_145 -> m16_146  [color=green, key=0, style=solid];
m16_145 -> m16_34  [color=green, key=2, style=dotted];
m16_145 -> m16_23  [color=green, key=2, style=dotted];
m16_146 -> m16_144  [color=blue, key=0, style=bold];
m16_148 -> m16_149  [color=green, key=0, style=solid];
m16_148 -> n36  [color=green, key=2, style=dotted];
m16_148 -> m16_34  [color=green, key=2, style=dotted];
m16_148 -> m16_116  [color=green, key=2, style=dotted];
m16_148 -> m16_150  [color=green, key=1, label="lambda expression", style=dashed];
m16_149 -> m16_147  [color=blue, key=0, style=bold];
m16_150 -> m16_151  [color=green, key=0, style=solid];
m16_151 -> m16_152  [color=green, key=0, style=solid];
m16_151 -> m16_120  [color=green, key=2, style=dotted];
m16_151 -> m16_127  [color=green, key=2, style=dotted];
m16_152 -> m16_150  [color=blue, key=0, style=bold];
m16_174 -> m16_100  [key=2, style=dotted];
m16_174 -> m16_175  [key=0, style=solid];
m16_183 -> m16_100  [key=2, style=dotted];
m16_183 -> m16_184  [key=0, style=solid];
m16_171 -> m16_34  [key=2, style=dotted];
m16_171 -> m16_54  [key=2, style=dotted];
m16_171 -> m16_172  [key=0, style=solid];
m16_195 -> m16_34  [key=2, style=dotted];
m16_195 -> m16_39  [key=2, style=dotted];
m16_195 -> m16_196  [key=0, style=solid];
m16_205 -> m16_34  [key=2, style=dotted];
m16_205 -> m16_39  [key=2, style=dotted];
m16_205 -> m16_206  [key=0, style=solid];
m16_214 -> m16_34  [key=2, style=dotted];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_23  [key=2, style=dotted];
m16_162 -> m16_35  [key=2, style=dotted];
m16_162 -> m16_163  [key=0, style=solid];
m16_161 -> m16_162  [key=0, style=solid];
m16_170 -> m16_171  [key=0, style=solid];
m16_173 -> m16_174  [key=0, style=solid];
m16_175 -> m16_173  [color=blue, key=0, style=bold];
m16_182 -> m16_183  [key=0, style=solid];
m16_184 -> m16_182  [color=blue, key=0, style=bold];
m16_194 -> m16_195  [key=0, style=solid];
m16_204 -> m16_205  [key=0, style=solid];
m16_172 -> m16_170  [color=blue, key=0, style=bold];
m16_196 -> m16_194  [color=blue, key=0, style=bold];
m16_206 -> m16_204  [color=blue, key=0, style=bold];
m16_215 -> m16_213  [color=blue, key=0, style=bold];
m16_163 -> m16_161  [color=blue, key=0, style=bold];
m16_176 -> m16_177  [key=0, style=solid];
m16_177 -> m16_28  [key=2, style=dotted];
m16_177 -> m16_178  [key=0, style=solid];
m16_177 -> m16_181  [key=2, style=dotted];
m16_178 -> m16_99  [key=2, style=dotted];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_183  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_179 -> m16_180  [key=0, style=solid];
m16_179 -> m16_169  [key=2, style=dotted];
m16_179 -> m16_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_180 -> m16_176  [color=blue, key=0, style=bold];
m16_218 -> m16_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_3  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_4  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_5  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_6  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_7  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_8  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_9  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_10  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_11  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_12  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_13  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_14  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_15  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_41  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_65  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_70  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_74  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_81  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_85  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_88  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_92  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_95  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_96  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_97  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_106  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_107  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_109  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_110  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_122  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_111  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_129  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_125  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_132  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_135  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_136  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_137  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_138  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_139  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_148  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_151  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_167  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_183  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_187  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_208  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_218 -> m16_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m16_219 -> m16_114  [color=green, key=1, label=jobKey, style=dashed];
m16_219 -> m16_122  [color=green, key=1, label=jobKey, style=dashed];
m16_219 -> m16_129  [color=green, key=1, label=jobKey, style=dashed];
m16_221 -> m16_174  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_222 -> m16_183  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m16_223 -> m16_195  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m16_220 -> m16_162  [color=darkseagreen4, key=1, label=time, style=dashed];
m18_14 -> m18_15  [color=green, key=0, style=solid];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_15 -> m18_17  [color=green, key=2, style=dotted];
m18_16 -> m18_14  [color=blue, key=0, style=bold];
m18_17 -> m18_17  [color=darkorchid, key=3, label="Field variable string Name", style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_3 -> m18_4  [key=0, style=solid];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [key=2, style=dotted];
m18_4 -> n55  [key=2, style=dotted];
m18_5 -> m18_3  [color=blue, key=0, style=bold];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_9 -> m18_10  [color=green, key=0, style=solid];
m18_9 -> m18_12  [key=2, style=dotted];
m18_10 -> m18_11  [color=green, key=0, style=solid];
m18_10 -> m18_13  [color=green, key=2, style=dotted];
m18_11 -> m18_8  [color=blue, key=0, style=bold];
m18_18 -> m18_1  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m18_18 -> m18_4  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m19_36 -> m19_37  [color=darkorchid, key=3, label="Local variable HangFire.States.ProcessingState state", style=bold];
m19_37 -> m19_37  [color=darkorchid, key=3, label="Local variable HangFire.States.ProcessingState state", style=bold];
m19_10 -> m19_37  [color=red, key=3, label="Local variable HangFire.States.ProcessingState state", style=bold];
m20_0 -> m20_1  [color=red, key=0, style=solid];
m20_0 -> m20_4  [color=red, key=1, label="System.Exception", style=dashed];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_1 -> m20_3  [color=red, key=0, style=solid];
m20_4 -> m20_5  [color=red, key=0, style=solid];
m20_2 -> m20_5  [color=red, key=0, style=solid];
m20_2 -> n10  [color=red, key=2, style=dotted];
m20_3 -> m20_4  [color=red, key=0, style=solid];
m20_5 -> m20_0  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [color=red, key=0, style=solid];
m20_8 -> m20_9  [color=red, key=0, style=solid];
m20_8 -> m20_10  [color=red, key=2, style=dotted];
m20_8 -> m20_11  [color=red, key=2, style=dotted];
m20_8 -> m20_12  [color=red, key=2, style=dotted];
m20_8 -> m20_13  [color=red, key=2, style=dotted];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_14 -> m20_3  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m20_14 -> m20_4  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m20_14 -> m20_8  [color=red, key=1, label="HangFire.States.FailedState", style=dashed];
m21_14 -> m21_15  [color=red, key=0, style=solid];
m21_14 -> m21_18  [color=red, key=1, label=string, style=dashed];
m21_15 -> m21_16  [color=red, key=0, style=solid];
m21_15 -> m21_9  [color=red, key=2, style=dotted];
m21_15 -> m21_17  [color=red, key=1, label="lambda expression", style=dashed];
m21_16 -> m21_14  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=red, key=0, style=solid];
m21_0 -> m21_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m21_1 -> m21_2  [color=red, key=0, style=solid];
m21_1 -> m21_3  [color=red, key=0, style=solid];
m21_3 -> m21_4  [color=red, key=0, style=solid];
m21_2 -> m21_4  [color=red, key=0, style=solid];
m21_2 -> n10  [color=red, key=2, style=dotted];
m21_4 -> m21_0  [color=blue, key=0, style=bold];
m21_20 -> m21_21  [color=red, key=0, style=solid];
m21_20 -> m21_22  [color=red, key=1, label=int, style=dashed];
m21_20 -> m21_25  [color=red, key=1, label=int, style=dashed];
m21_21 -> m21_22  [color=red, key=0, style=solid];
m21_21 -> m21_25  [color=red, key=1, label=trimSql, style=dashed];
m21_21 -> m21_21  [color=red, key=3, label="Local variable string trimSql", style=bold];
m21_22 -> m21_23  [color=red, key=0, style=solid];
m21_22 -> m21_9  [color=red, key=2, style=dotted];
m21_22 -> m21_24  [color=red, key=1, label="lambda expression", style=dashed];
m21_23 -> m21_20  [color=blue, key=0, style=bold];
m21_6 -> m21_7  [color=red, key=0, style=solid];
m21_6 -> m21_11  [color=red, key=1, label=string, style=dashed];
m21_7 -> m21_8  [color=red, key=0, style=solid];
m21_7 -> m21_9  [color=red, key=2, style=dotted];
m21_7 -> m21_10  [color=red, key=1, label="lambda expression", style=dashed];
m21_8 -> m21_6  [color=blue, key=0, style=bold];
m21_24 -> m21_25  [color=red, key=0, style=solid];
m21_11 -> m21_12  [color=red, key=0, style=solid];
m21_11 -> m21_13  [color=red, key=2, style=dotted];
m21_10 -> m21_11  [color=red, key=0, style=solid];
m21_12 -> m21_10  [color=blue, key=0, style=bold];
m21_18 -> m21_19  [color=red, key=0, style=solid];
m21_18 -> m21_13  [color=red, key=2, style=dotted];
m21_17 -> m21_18  [color=red, key=0, style=solid];
m21_19 -> m21_17  [color=blue, key=0, style=bold];
m21_25 -> m21_26  [color=red, key=0, style=solid];
m21_25 -> m21_13  [color=red, key=2, style=dotted];
m21_26 -> m21_24  [color=blue, key=0, style=bold];
m21_27 -> m21_3  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m21_27 -> m21_7  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m21_27 -> m21_15  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m21_27 -> m21_22  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", style=dashed];
m21_28 -> m21_11  [color=red, key=1, label=string, style=dashed];
m21_29 -> m21_11  [color=red, key=1, label=string, style=dashed];
m21_30 -> m21_18  [color=red, key=1, label=string, style=dashed];
m21_31 -> m21_18  [color=red, key=1, label=string, style=dashed];
m21_32 -> m21_25  [color=red, key=1, label=int, style=dashed];
m21_33 -> m21_25  [color=red, key=1, label=int, style=dashed];
m21_34 -> m21_25  [color=red, key=1, label=trimSql, style=dashed];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_21  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m22_19 -> m22_23  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_15  [key=2, style=dotted];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_16  [key=2, style=dotted];
m22_21 -> m22_17  [key=2, style=dotted];
m22_23 -> m22_24  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_24  [key=0, style=solid];
m22_24 -> m22_19  [color=blue, key=0, style=bold];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_11  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_15  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_16  [key=2, style=dotted];
m22_9 -> m22_17  [key=2, style=dotted];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_12  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=0, style=solid];
m22_13 -> m22_14  [key=0, style=solid];
m22_13 -> m22_18  [key=2, style=dotted];
m22_14 -> m22_7  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [color=red, key=0, style=solid];
m22_0 -> m22_2  [color=red, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m22_0 -> m22_3  [color=red, key=1, label=bool, style=dashed];
m22_0 -> m22_4  [color=red, key=1, label=bool, style=dashed];
m22_0 -> m22_5  [color=red, key=1, label=bool, style=dashed];
m22_1 -> m22_2  [color=red, key=0, style=solid];
m22_2 -> m22_3  [color=red, key=0, style=solid];
m22_3 -> m22_4  [color=red, key=0, style=solid];
m22_4 -> m22_5  [color=red, key=0, style=solid];
m22_5 -> m22_6  [color=red, key=0, style=solid];
m22_6 -> m22_0  [color=blue, key=0, style=bold];
m22_25 -> m22_1  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_2  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_3  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_4  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_5  [color=red, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_10  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_21  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m22_25 -> m22_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m23_15 -> m23_16  [key=0, style=solid];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_18  [key=2, style=dotted];
m23_17 -> m23_15  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_0 -> m23_3  [color=red, key=1, label="Hangfire.Server.ILongRunningProcess", style=dashed];
m23_0 -> m23_0  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_1 -> m23_3  [color=red, key=0, style=solid];
m23_3 -> m23_4  [color=red, key=0, style=solid];
m23_2 -> m23_4  [color=red, key=0, style=solid];
m23_2 -> n10  [color=red, key=2, style=dotted];
m23_4 -> m23_0  [color=blue, key=0, style=bold];
m23_6 -> m23_7  [key=0, style=solid];
m23_7 -> m23_6  [color=blue, key=0, style=bold];
m23_8 -> m23_9  [color=red, key=0, style=solid];
m23_8 -> m23_10  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m23_8 -> m23_11  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m23_9 -> m23_10  [color=red, key=0, style=solid];
m23_9 -> m23_12  [color=red, key=0, style=solid];
m23_10 -> m23_11  [color=red, key=0, style=solid];
m23_10 -> m23_13  [color=red, key=2, style=dotted];
m23_11 -> m23_9  [color=red, key=0, style=solid];
m23_11 -> m23_14  [color=red, key=2, style=dotted];
m23_12 -> m23_8  [color=blue, key=0, style=bold];
m23_19 -> m23_3  [color=red, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m23_19 -> m23_11  [color=red, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m23_19 -> m23_16  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m24_10 -> m24_36  [color=green, key=0, style=solid];
m24_27 -> m24_28  [key=0, style=solid];
m24_4 -> m24_5  [color=red, key=0, style=solid];
m24_4 -> m24_11  [color=red, key=2, style=dotted];
m24_20 -> m24_16  [key=2, style=dotted];
m24_20 -> m24_21  [key=0, style=solid];
m24_17 -> m24_18  [color=red, key=0, style=solid];
m24_18 -> m24_10  [key=2, style=dotted];
m24_18 -> m24_19  [color=red, key=0, style=solid];
m24_18 -> m24_20  [color=red, key=2, style=dotted];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_17  [color=blue, key=0, style=bold];
m24_21 -> m24_17  [color=blue, key=0, style=bold];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_27  [color=darkorchid, key=3, label="method methodReturn bool Commit", style=bold];
m24_14 -> m24_16  [key=2, style=dotted];
m24_14 -> m24_15  [key=0, style=solid];
m24_13 -> m24_14  [key=0, style=solid];
m24_32 -> m24_33  [color=green, key=0, style=solid];
m24_32 -> m24_35  [color=green, key=2, style=dotted];
m24_32 -> m24_16  [color=green, key=2, style=dotted];
m24_29 -> m24_30  [color=green, key=0, style=solid];
m24_29 -> m24_10  [color=green, key=2, style=dotted];
m24_11 -> m24_12  [key=0, style=solid];
m24_31 -> m24_32  [color=green, key=0, style=solid];
m24_31 -> m24_4  [color=green, key=2, style=dotted];
m24_12 -> m24_10  [key=2, style=dotted];
m24_12 -> m24_13  [key=0, style=solid];
m24_15 -> m24_11  [color=blue, key=0, style=bold];
m24_15 -> m24_16  [key=0, style=solid];
m24_0 -> m24_1  [color=red, key=0, style=solid];
m24_2 -> m24_4  [key=2, style=dotted];
m24_2 -> m24_3  [color=red, key=0, style=solid];
m24_2 -> m24_9  [color=red, key=2, style=dotted];
m24_1 -> m24_2  [color=red, key=0, style=solid];
m24_3 -> m24_0  [color=blue, key=0, style=bold];
m24_3 -> m24_4  [color=red, key=0, style=solid];
m24_3 -> m24_10  [color=red, key=2, style=dotted];
m24_33 -> m24_28  [color=blue, key=0, style=bold];
m24_22 -> m24_23  [color=green, key=0, style=solid];
m24_22 -> m24_29  [key=2, style=dotted];
m24_22 -> m24_30  [key=2, style=dotted];
m24_22 -> m24_26  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_23 -> m24_24  [color=green, key=0, style=solid];
m24_23 -> m24_10  [color=green, key=2, style=dotted];
m24_23 -> m24_25  [color=green, key=1, label=state, style=dashed];
m24_23 -> m24_31  [key=2, style=dotted];
m24_24 -> m24_25  [color=green, key=0, style=solid];
m24_24 -> m24_27  [color=green, key=2, style=dotted];
m24_24 -> m24_16  [color=green, key=2, style=dotted];
m24_24 -> m24_26  [key=0, style=solid];
m24_25 -> m24_26  [color=green, key=0, style=solid];
m24_25 -> m24_27  [color=green, key=2, style=dotted];
m24_25 -> m24_16  [color=green, key=2, style=dotted];
m24_25 -> m24_24  [key=0, style=solid];
m24_25 -> m24_32  [key=2, style=dotted];
m24_26 -> m24_22  [color=blue, key=0, style=bold];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_33  [key=2, style=dotted];
m24_9 -> m24_5  [color=blue, key=0, style=bold];
m24_28 -> m24_21  [color=blue, key=0, style=bold];
m24_28 -> m24_29  [color=green, key=0, style=solid];
m24_34 -> m24_1  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_2  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_4  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_5  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_6  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_7  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_18  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_24  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_34 -> m24_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m24_30 -> m24_31  [color=green, key=0, style=solid];
m24_30 -> m24_34  [color=green, key=2, style=dotted];
m24_30 -> m24_32  [color=green, key=1, label=data, style=dashed];
m24_36 -> m24_37  [color=green, key=0, style=solid];
m24_36 -> m24_38  [color=green, key=2, style=dotted];
m24_37 -> m24_10  [color=blue, key=0, style=bold];
m24_5 -> m24_6  [color=green, key=0, style=solid];
m24_5 -> m24_12  [color=red, key=2, style=dotted];
m24_6 -> m24_7  [color=green, key=0, style=solid];
m24_6 -> m24_13  [color=red, key=2, style=dotted];
m24_6 -> m24_10  [color=green, key=2, style=dotted];
m24_7 -> m24_8  [color=green, key=0, style=solid];
m24_7 -> m24_14  [color=red, key=2, style=dotted];
m24_8 -> m24_0  [color=blue, key=0, style=bold];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_4  [key=2, style=dotted];
m24_16 -> m24_15  [color=blue, key=0, style=bold];
m25_8 -> m25_9  [key=0, style=solid];
m25_9 -> m25_8  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [color=blue, key=0, style=bold];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_10  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_4  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_2  [color=blue, key=0, style=bold];
m25_12 -> m25_13  [key=0, style=solid];
m25_13 -> m25_12  [color=blue, key=0, style=bold];
m25_6 -> m25_7  [key=0, style=solid];
m25_7 -> m25_6  [color=blue, key=0, style=bold];
m26_92 -> m26_104  [key=0, style=solid];
m26_92 -> m26_106  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m26_92 -> m26_105  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m26_104 -> m26_55  [key=2, style=dotted];
m26_104 -> m26_105  [key=0, style=solid];
m26_104 -> m26_107  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m26_106 -> m26_57  [key=2, style=dotted];
m26_106 -> m26_107  [key=0, style=solid];
m26_107 -> m26_59  [key=2, style=dotted];
m26_107 -> m26_108  [key=0, style=solid];
m26_105 -> m26_106  [key=0, style=solid];
m26_105 -> m26_56  [key=2, style=dotted];
m26_108 -> m26_92  [color=blue, key=0, style=bold];
m26_17 -> m26_157  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m26_17 -> m26_158  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m26_17 -> m26_159  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m26_17 -> m26_9  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobStateHandler handler", style=bold];
m26_17 -> m26_153  [key=0, style=solid];
m26_17 -> m26_155  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m26_157 -> m26_158  [key=0, style=solid];
m26_157 -> m26_159  [key=0, style=solid];
m26_157 -> m26_124  [key=2, style=dotted];
m26_158 -> m26_159  [key=0, style=solid];
m26_158 -> m26_161  [key=2, style=dotted];
m26_158 -> m26_162  [key=2, style=dotted];
m26_159 -> m26_160  [key=0, style=solid];
m26_159 -> m26_163  [key=2, style=dotted];
m26_155 -> m26_157  [key=0, style=solid];
m26_155 -> m26_156  [key=0, style=solid];
m26_155 -> m26_123  [key=2, style=dotted];
m26_153 -> m26_155  [key=0, style=solid];
m26_153 -> m26_154  [key=0, style=solid];
m26_156 -> m26_160  [key=0, style=solid];
m26_156 -> n10  [key=2, style=dotted];
m26_154 -> m26_160  [key=0, style=solid];
m26_154 -> n10  [key=2, style=dotted];
m26_160 -> m26_17  [color=blue, key=0, style=bold];
m26_26 -> m26_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_26 -> m26_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_26 -> m26_33  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m26_26 -> m26_35  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m26_26 -> m26_36  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m26_26 -> m26_37  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_42 -> m26_43  [color=green, key=0, style=solid];
m26_42 -> m26_58  [color=green, key=2, style=dotted];
m26_34 -> m26_42  [color=green, key=1, label=jobId, style=dashed];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_49  [key=2, style=dotted];
m26_34 -> m26_50  [key=2, style=dotted];
m26_34 -> m26_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_34 -> m26_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m26_41 -> m26_42  [color=green, key=0, style=solid];
m26_41 -> m26_57  [key=2, style=dotted];
m26_39 -> m26_42  [color=green, key=1, label=transaction, style=dashed];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_55  [key=2, style=dotted];
m26_39 -> m26_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_59  [key=2, style=dotted];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_46  [key=2, style=dotted];
m26_33 -> m26_47  [key=2, style=dotted];
m26_33 -> m26_21  [key=2, style=dotted];
m26_33 -> m26_48  [key=2, style=dotted];
m26_33 -> m26_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_35 -> m26_41  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_51  [key=2, style=dotted];
m26_35 -> m26_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_52  [key=2, style=dotted];
m26_36 -> m26_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m26_44 -> m26_45  [key=0, style=solid];
m26_37 -> m26_41  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_53  [key=2, style=dotted];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_56  [key=2, style=dotted];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_54  [key=2, style=dotted];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_29  [key=0, style=solid];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_31  [key=0, style=solid];
m26_31 -> m26_33  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_28 -> m26_45  [key=0, style=solid];
m26_28 -> n10  [key=2, style=dotted];
m26_30 -> m26_45  [key=0, style=solid];
m26_30 -> n10  [key=2, style=dotted];
m26_32 -> m26_45  [key=0, style=solid];
m26_32 -> n10  [key=2, style=dotted];
m26_45 -> m26_26  [color=blue, key=0, style=bold];
m26_129 -> m26_139  [color=green, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m26_129 -> m26_142  [color=green, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m26_129 -> m26_135  [key=0, style=solid];
m26_129 -> m26_137  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_129 -> m26_138  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_129 -> m26_140  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_139 -> m26_140  [color=green, key=0, style=solid];
m26_139 -> m26_146  [color=green, key=2, style=dotted];
m26_135 -> m26_139  [color=green, key=1, label=properties, style=dashed];
m26_135 -> m26_142  [color=green, key=1, label=properties, style=dashed];
m26_135 -> m26_136  [key=0, style=solid];
m26_135 -> m26_144  [key=2, style=dotted];
m26_135 -> m26_127  [key=2, style=dotted];
m26_135 -> m26_137  [color=darkseagreen4, key=1, label=properties, style=dashed];
m26_135 -> m26_140  [color=darkseagreen4, key=1, label=properties, style=dashed];
m26_135 -> m26_141  [color=darkseagreen4, key=1, label=properties, style=dashed];
m26_138 -> m26_139  [color=green, key=0, style=solid];
m26_138 -> m26_140  [key=0, style=solid];
m26_140 -> m26_141  [key=0, style=solid];
m26_140 -> m26_145  [key=2, style=dotted];
m26_142 -> m26_143  [color=green, key=0, style=solid];
m26_142 -> m26_148  [color=green, key=2, style=dotted];
m26_141 -> m26_142  [color=green, key=0, style=solid];
m26_141 -> m26_147  [key=2, style=dotted];
m26_141 -> m26_145  [key=2, style=dotted];
m26_137 -> m26_138  [key=0, style=solid];
m26_137 -> m26_145  [key=2, style=dotted];
m26_136 -> m26_141  [color=darkseagreen4, key=1, label=now, style=dashed];
m26_136 -> m26_137  [key=0, style=solid];
m26_143 -> m26_129  [color=blue, key=0, style=bold];
m26_22 -> m26_23  [key=0, style=solid];
m26_60 -> m26_61  [key=0, style=solid];
m26_19 -> m26_21  [key=2, style=dotted];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_62 -> m26_60  [color=blue, key=0, style=bold];
m26_61 -> m26_62  [key=0, style=solid];
m26_18 -> m26_19  [key=0, style=solid];
m26_20 -> m26_18  [color=blue, key=0, style=bold];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_25  [key=2, style=dotted];
m26_24 -> m26_22  [color=blue, key=0, style=bold];
m26_57 -> m26_109  [key=0, style=solid];
m26_57 -> m26_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_57 -> m26_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_57 -> m26_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_57 -> m26_113  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m26_57 -> m26_114  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_57 -> m26_115  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_57 -> m26_116  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_57 -> m26_117  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_57 -> m26_118  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_57 -> m26_119  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_57 -> m26_120  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m26_57 -> m26_121  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m26_119 -> m26_129  [key=2, style=dotted];
m26_119 -> m26_120  [key=0, style=solid];
m26_110 -> m26_111  [key=0, style=solid];
m26_110 -> m26_113  [key=0, style=solid];
m26_110 -> m26_124  [key=2, style=dotted];
m26_111 -> m26_112  [key=0, style=solid];
m26_111 -> m26_113  [key=0, style=solid];
m26_115 -> m26_119  [key=0, style=solid];
m26_115 -> m26_116  [key=0, style=solid];
m26_115 -> m26_124  [key=2, style=dotted];
m26_117 -> m26_119  [key=0, style=solid];
m26_117 -> m26_118  [key=0, style=solid];
m26_109 -> m26_110  [key=0, style=solid];
m26_109 -> m26_115  [key=0, style=solid];
m26_109 -> m26_123  [key=2, style=dotted];
m26_112 -> m26_111  [key=0, style=solid];
m26_112 -> m26_125  [key=2, style=dotted];
m26_113 -> m26_115  [key=0, style=solid];
m26_113 -> m26_114  [key=0, style=solid];
m26_114 -> m26_113  [key=0, style=solid];
m26_114 -> m26_126  [key=2, style=dotted];
m26_116 -> m26_127  [key=2, style=dotted];
m26_116 -> m26_117  [key=0, style=solid];
m26_116 -> m26_118  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m26_118 -> m26_117  [key=0, style=solid];
m26_118 -> m26_128  [key=2, style=dotted];
m26_120 -> m26_122  [key=0, style=solid];
m26_120 -> m26_121  [key=0, style=solid];
m26_121 -> m26_120  [key=0, style=solid];
m26_121 -> m26_130  [key=2, style=dotted];
m26_122 -> m26_57  [color=blue, key=0, style=bold];
m26_54 -> m26_100  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m26_54 -> m26_96  [key=0, style=solid];
m26_54 -> m26_97  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m26_54 -> m26_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m26_54 -> m26_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m26_100 -> m26_96  [key=0, style=solid];
m26_100 -> m26_103  [key=2, style=dotted];
m26_97 -> m26_100  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m26_97 -> m26_98  [key=0, style=solid];
m26_97 -> m26_99  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m26_99 -> m26_100  [key=0, style=solid];
m26_99 -> m26_96  [key=0, style=solid];
m26_96 -> m26_97  [key=0, style=solid];
m26_96 -> m26_101  [key=0, style=solid];
m26_96 -> m26_98  [color=darkseagreen4, key=1, label=filter, style=dashed];
m26_98 -> m26_99  [key=0, style=solid];
m26_98 -> m26_102  [key=2, style=dotted];
m26_101 -> m26_54  [color=blue, key=0, style=bold];
m26_63 -> m26_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_78  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_63 -> m26_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_64  [key=0, style=solid];
m26_63 -> m26_66  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m26_63 -> m26_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m26_63 -> m26_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_63 -> m26_71  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m26_63 -> m26_92  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_88  [key=2, style=dotted];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_89  [key=2, style=dotted];
m26_69 -> m26_72  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m26_69 -> m26_75  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m26_76 -> m26_77  [key=0, style=solid];
m26_76 -> m26_51  [key=2, style=dotted];
m26_76 -> m26_79  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m26_76 -> m26_80  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_53  [key=2, style=dotted];
m26_78 -> m26_80  [color=darkseagreen4, key=1, label=changingContext, style=dashed];
m26_79 -> m26_80  [key=0, style=solid];
m26_79 -> m26_54  [key=2, style=dotted];
m26_80 -> m26_86  [key=0, style=solid];
m26_80 -> m26_92  [key=2, style=dotted];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_53  [key=2, style=dotted];
m26_82 -> m26_52  [key=2, style=dotted];
m26_82 -> m26_93  [key=2, style=dotted];
m26_82 -> m26_94  [key=2, style=dotted];
m26_83 -> m26_86  [key=0, style=solid];
m26_83 -> m26_95  [key=2, style=dotted];
m26_83 -> m26_92  [key=2, style=dotted];
m26_66 -> m26_68  [key=0, style=solid];
m26_66 -> m26_67  [key=0, style=solid];
m26_70 -> m26_71  [key=0, style=solid];
m26_70 -> m26_72  [key=0, style=solid];
m26_72 -> m26_78  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m26_72 -> m26_82  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m26_72 -> m26_73  [key=0, style=solid];
m26_75 -> m26_76  [key=0, style=solid];
m26_75 -> m26_91  [key=2, style=dotted];
m26_75 -> m26_77  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m26_77 -> m26_78  [key=0, style=solid];
m26_77 -> m26_52  [key=2, style=dotted];
m26_81 -> m26_82  [key=0, style=solid];
m26_64 -> m26_66  [key=0, style=solid];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_87  [key=2, style=dotted];
m26_73 -> m26_75  [key=0, style=solid];
m26_73 -> m26_74  [key=0, style=solid];
m26_73 -> m26_90  [key=2, style=dotted];
m26_71 -> m26_86  [key=0, style=solid];
m26_67 -> m26_86  [key=0, style=solid];
m26_67 -> n10  [key=2, style=dotted];
m26_65 -> m26_86  [key=0, style=solid];
m26_65 -> n10  [key=2, style=dotted];
m26_74 -> m26_86  [key=0, style=solid];
m26_85 -> m26_86  [key=0, style=solid];
m26_84 -> m26_85  [key=0, style=solid];
m26_86 -> m26_63  [color=blue, key=0, style=bold];
m26_51 -> m26_149  [key=0, style=solid];
m26_51 -> m26_75  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
m26_149 -> m26_150  [key=0, style=solid];
m26_149 -> m26_151  [key=2, style=dotted];
m26_149 -> m26_152  [key=2, style=dotted];
m26_150 -> m26_51  [color=blue, key=0, style=bold];
m26_126 -> m26_12  [color=darkorchid, key=3, label="Field variable System.Func<HangFire.Common.JobMethod, System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>> _getFiltersThunk", style=bold];
m26_103 -> m26_132  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m26_103 -> m26_131  [key=0, style=solid];
m26_132 -> m26_129  [key=2, style=dotted];
m26_132 -> m26_133  [key=0, style=solid];
m26_131 -> m26_55  [key=2, style=dotted];
m26_131 -> m26_132  [key=0, style=solid];
m26_131 -> m26_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m26_133 -> m26_59  [key=2, style=dotted];
m26_133 -> m26_134  [key=0, style=solid];
m26_134 -> m26_103  [color=blue, key=0, style=bold];
m26_2 -> m26_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m26_2 -> m26_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m26_2 -> m26_8  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m26_2 -> m26_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m26_2 -> m26_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m26_7 -> m26_8  [key=0, style=solid];
m26_10 -> m26_9  [key=0, style=solid];
m26_10 -> m26_17  [key=2, style=dotted];
m26_12 -> m26_13  [key=0, style=solid];
m26_5 -> m26_7  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_15  [key=2, style=dotted];
m26_8 -> m26_16  [key=2, style=dotted];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=0, style=solid];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_13  [key=0, style=solid];
m26_3 -> m26_5  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_6 -> m26_13  [key=0, style=solid];
m26_6 -> n10  [key=2, style=dotted];
m26_4 -> m26_13  [key=0, style=solid];
m26_4 -> n10  [key=2, style=dotted];
m26_13 -> m26_2  [color=blue, key=0, style=bold];
m26_164 -> m26_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_41  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_39  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_7  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_12  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_37  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_69  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_76  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_78  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_80  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_100  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_104  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_106  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_110  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_117  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_119  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_131  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_132  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_149  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_157  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_158  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_164 -> m26_159  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m26_165 -> m26_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m27_8 -> m27_9  [color=green, key=0, style=solid];
m27_8 -> m27_10  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m27_8 -> m27_11  [key=0, style=solid];
m27_9 -> m27_10  [color=green, key=0, style=solid];
m27_9 -> m27_12  [key=2, style=dotted];
m27_9 -> m27_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m27_9 -> n36  [color=green, key=2, style=dotted];
m27_9 -> m27_16  [color=green, key=2, style=dotted];
m27_9 -> m27_17  [color=green, key=2, style=dotted];
m27_10 -> m27_11  [color=green, key=0, style=solid];
m27_10 -> m27_3  [key=2, style=dotted];
m27_10 -> m27_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_10 -> m27_14  [color=green, key=2, style=dotted];
m27_10 -> n36  [color=green, key=2, style=dotted];
m27_10 -> m27_18  [color=green, key=2, style=dotted];
m27_10 -> m27_17  [color=green, key=2, style=dotted];
m27_11 -> m27_8  [color=blue, key=0, style=bold];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_19  [key=2, style=dotted];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_16  [key=2, style=dotted];
m27_7 -> m27_11  [color=green, key=0, style=solid];
m27_7 -> m27_14  [color=green, key=2, style=dotted];
m27_7 -> n36  [color=green, key=2, style=dotted];
m27_7 -> m27_18  [color=green, key=2, style=dotted];
m27_7 -> m27_17  [color=green, key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_3  [key=2, style=dotted];
m27_19 -> m27_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m27_3 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m27_6 -> m27_7  [color=green, key=0, style=solid];
m27_6 -> m27_14  [color=green, key=2, style=dotted];
m27_6 -> n36  [color=green, key=2, style=dotted];
m27_6 -> m27_16  [color=green, key=2, style=dotted];
m27_6 -> m27_17  [color=green, key=2, style=dotted];
m27_6 -> m27_4  [color=blue, key=0, style=bold];
m27_4 -> m27_6  [color=green, key=1, label=transaction, style=dashed];
m27_4 -> m27_7  [color=green, key=1, label=transaction, style=dashed];
m27_4 -> m27_9  [color=green, key=1, label=transaction, style=dashed];
m27_4 -> m27_10  [color=green, key=1, label=transaction, style=dashed];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_13  [key=2, style=dotted];
m27_4 -> m27_11  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m27_5 -> m27_6  [color=green, key=0, style=solid];
m27_5 -> m27_8  [key=0, style=solid];
m27_5 -> m27_7  [key=2, style=dotted];
m27_12 -> m27_3  [color=blue, key=0, style=bold];
m27_13 -> m27_14  [key=0, style=solid];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_41  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_3  [key=2, style=dotted];
m27_38 -> m27_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_39 -> m27_37  [color=blue, key=0, style=bold];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_12  [key=2, style=dotted];
m27_18 -> m27_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_35  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_3  [key=2, style=dotted];
m27_32 -> m27_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_33 -> m27_31  [color=blue, key=0, style=bold];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_19  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m27_20 -> m27_17  [color=blue, key=0, style=bold];
m27_47 -> m27_48  [key=0, style=solid];
m27_15 -> m27_13  [color=blue, key=0, style=bold];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_16  [key=2, style=dotted];
m27_21 -> m27_22  [key=0, style=solid];
m27_23 -> m27_21  [color=blue, key=0, style=bold];
m27_29 -> m27_30  [key=0, style=solid];
m27_29 -> m27_16  [key=2, style=dotted];
m27_28 -> m27_29  [key=0, style=solid];
m27_30 -> m27_28  [color=blue, key=0, style=bold];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_16  [key=2, style=dotted];
m27_34 -> m27_35  [key=0, style=solid];
m27_36 -> m27_34  [color=blue, key=0, style=bold];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_43  [key=2, style=dotted];
m27_41 -> m27_12  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_42 -> m27_40  [color=blue, key=0, style=bold];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_43  [key=2, style=dotted];
m27_49 -> m27_47  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=2, style=dotted];
m27_1 -> m27_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_2 -> m27_0  [color=blue, key=0, style=bold];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_48  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_3  [key=2, style=dotted];
m27_45 -> m27_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_46 -> m27_44  [color=blue, key=0, style=bold];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_26  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_12  [key=2, style=dotted];
m27_25 -> m27_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_3  [key=2, style=dotted];
m27_26 -> m27_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_27 -> m27_24  [color=blue, key=0, style=bold];
m27_50 -> m27_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m27_51 -> m27_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m27_52 -> m27_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m27_53 -> m27_35  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m27_54 -> m27_41  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m27_55 -> m27_48  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m27_56 -> m27_48  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=2, style=dotted];
m28_1 -> n55  [key=2, style=dotted];
m28_2 -> m28_0  [color=blue, key=0, style=bold];
m28_5 -> m28_6  [color=green, key=0, style=solid];
m28_5 -> m28_7  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m28_6 -> m28_7  [color=green, key=0, style=solid];
m28_6 -> m28_9  [color=green, key=2, style=dotted];
m28_7 -> m28_8  [color=green, key=0, style=solid];
m28_7 -> m28_10  [color=green, key=2, style=dotted];
m28_8 -> m28_5  [color=blue, key=0, style=bold];
m28_11 -> m28_12  [color=green, key=0, style=solid];
m28_11 -> m28_13  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m28_12 -> m28_13  [color=green, key=0, style=solid];
m28_12 -> m28_15  [color=green, key=2, style=dotted];
m28_13 -> m28_14  [color=green, key=0, style=solid];
m28_13 -> m28_16  [color=green, key=2, style=dotted];
m28_14 -> m28_11  [color=blue, key=0, style=bold];
m29_6 -> m29_7  [color=green, key=0, style=solid];
m29_7 -> m29_8  [color=green, key=0, style=solid];
m29_7 -> m29_9  [color=green, key=2, style=dotted];
m29_8 -> m29_6  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [color=green, key=0, style=solid];
m29_0 -> m29_2  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m29_1 -> m29_2  [color=green, key=0, style=solid];
m29_1 -> m29_4  [color=green, key=2, style=dotted];
m29_2 -> m29_3  [color=green, key=0, style=solid];
m29_2 -> m29_5  [color=green, key=2, style=dotted];
m29_3 -> m29_0  [color=blue, key=0, style=bold];
m30_64 -> m30_65  [color=green, key=0, style=solid];
m30_65 -> m30_66  [color=green, key=0, style=solid];
m30_65 -> m30_34  [color=green, key=2, style=dotted];
m30_65 -> m30_69  [color=green, key=1, label="lambda expression", style=dashed];
m30_66 -> m30_67  [color=green, key=0, style=solid];
m30_66 -> m30_68  [color=green, key=2, style=dotted];
m30_67 -> m30_64  [color=blue, key=0, style=bold];
m30_153 -> m30_154  [key=0, style=solid];
m30_155 -> m30_156  [key=0, style=solid];
m30_155 -> m30_160  [key=2, style=dotted];
m30_156 -> m30_157  [key=0, style=solid];
m30_156 -> m30_99  [key=2, style=dotted];
m30_157 -> m30_158  [key=0, style=solid];
m30_157 -> m30_100  [key=2, style=dotted];
m30_158 -> m30_159  [key=0, style=solid];
m30_158 -> m30_101  [key=2, style=dotted];
m30_158 -> m30_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_154 -> m30_155  [key=0, style=solid];
m30_154 -> m30_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m30_154 -> m30_162  [color=darkseagreen4, key=1, label=time, style=dashed];
m30_159 -> m30_153  [color=blue, key=0, style=bold];
m30_164 -> m30_165  [key=0, style=solid];
m30_165 -> m30_23  [key=2, style=dotted];
m30_165 -> m30_24  [key=2, style=dotted];
m30_165 -> m30_30  [key=2, style=dotted];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_166 -> m30_167  [key=0, style=solid];
m30_166 -> m30_99  [key=2, style=dotted];
m30_166 -> m30_174  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m30_167 -> m30_168  [key=0, style=solid];
m30_167 -> m30_169  [key=2, style=dotted];
m30_167 -> m30_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_168 -> m30_164  [color=blue, key=0, style=bold];
m30_105 -> m30_106  [key=0, style=solid];
m30_106 -> m30_107  [key=0, style=solid];
m30_106 -> m30_99  [key=2, style=dotted];
m30_107 -> m30_108  [key=0, style=solid];
m30_107 -> m30_100  [key=2, style=dotted];
m30_109 -> m30_110  [key=0, style=solid];
m30_109 -> m30_101  [key=2, style=dotted];
m30_109 -> m30_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_110 -> m30_111  [key=0, style=solid];
m30_110 -> m30_101  [key=2, style=dotted];
m30_110 -> m30_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_111 -> m30_112  [key=0, style=solid];
m30_111 -> m30_101  [key=2, style=dotted];
m30_111 -> m30_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_108 -> n36  [key=2, style=dotted];
m30_108 -> m30_109  [key=0, style=solid];
m30_108 -> m30_110  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_108 -> m30_122  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_108 -> m30_111  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_108 -> m30_129  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_108 -> m30_114  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_112 -> m30_105  [color=blue, key=0, style=bold];
m30_134 -> m30_135  [key=0, style=solid];
m30_135 -> m30_23  [key=2, style=dotted];
m30_135 -> m30_24  [key=2, style=dotted];
m30_135 -> m30_136  [key=0, style=solid];
m30_135 -> m30_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_136 -> m30_137  [key=0, style=solid];
m30_136 -> m30_99  [key=2, style=dotted];
m30_137 -> m30_138  [key=0, style=solid];
m30_137 -> m30_100  [key=2, style=dotted];
m30_138 -> m30_139  [key=0, style=solid];
m30_138 -> m30_101  [key=2, style=dotted];
m30_138 -> m30_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_139 -> m30_140  [key=0, style=solid];
m30_139 -> m30_101  [key=2, style=dotted];
m30_139 -> m30_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_140 -> m30_134  [color=blue, key=0, style=bold];
m30_80 -> m30_81  [key=0, style=solid];
m30_81 -> m30_34  [key=2, style=dotted];
m30_81 -> m30_82  [key=0, style=solid];
m30_81 -> m30_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_82 -> m30_68  [key=2, style=dotted];
m30_82 -> m30_83  [key=0, style=solid];
m30_83 -> m30_80  [color=blue, key=0, style=bold];
m30_99 -> m30_216  [key=0, style=solid];
m30_216 -> m30_72  [key=2, style=dotted];
m30_216 -> m30_217  [key=0, style=solid];
m30_217 -> m30_99  [color=blue, key=0, style=bold];
m30_197 -> m30_198  [key=0, style=solid];
m30_198 -> m30_199  [key=0, style=solid];
m30_198 -> m30_203  [key=2, style=dotted];
m30_199 -> m30_200  [key=0, style=solid];
m30_199 -> m30_99  [key=2, style=dotted];
m30_200 -> m30_201  [key=0, style=solid];
m30_200 -> m30_100  [key=2, style=dotted];
m30_201 -> m30_202  [key=0, style=solid];
m30_201 -> m30_101  [key=2, style=dotted];
m30_201 -> m30_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_202 -> m30_197  [color=blue, key=0, style=bold];
m30_73 -> m30_74  [key=0, style=solid];
m30_74 -> m30_34  [key=2, style=dotted];
m30_74 -> m30_75  [key=0, style=solid];
m30_74 -> m30_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_75 -> m30_68  [key=2, style=dotted];
m30_75 -> m30_76  [key=0, style=solid];
m30_76 -> m30_73  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [color=green, key=0, style=solid];
m30_1 -> m30_2  [color=green, key=0, style=solid];
m30_1 -> m30_17  [color=green, key=2, style=dotted];
m30_2 -> m30_3  [color=green, key=0, style=solid];
m30_2 -> m30_18  [color=green, key=2, style=dotted];
m30_3 -> m30_4  [color=green, key=0, style=solid];
m30_3 -> m30_19  [color=green, key=2, style=dotted];
m30_4 -> m30_5  [color=green, key=0, style=solid];
m30_4 -> m30_20  [color=green, key=2, style=dotted];
m30_5 -> m30_6  [color=green, key=0, style=solid];
m30_5 -> m30_21  [color=green, key=2, style=dotted];
m30_6 -> m30_7  [color=green, key=0, style=solid];
m30_6 -> m30_22  [color=green, key=2, style=dotted];
m30_7 -> m30_8  [color=green, key=0, style=solid];
m30_7 -> m30_23  [color=green, key=2, style=dotted];
m30_7 -> m30_24  [color=green, key=2, style=dotted];
m30_7 -> m30_31  [color=green, key=1, label="lambda expression", style=dashed];
m30_8 -> m30_9  [color=green, key=0, style=solid];
m30_9 -> m30_10  [color=green, key=0, style=solid];
m30_9 -> m30_23  [color=green, key=2, style=dotted];
m30_9 -> m30_24  [color=green, key=2, style=dotted];
m30_9 -> m30_36  [color=green, key=1, label="lambda expression", style=dashed];
m30_9 -> m30_40  [color=green, key=1, label="lambda expression", style=dashed];
m30_10 -> m30_11  [color=green, key=0, style=solid];
m30_10 -> m30_25  [color=green, key=2, style=dotted];
m30_10 -> m30_26  [color=green, key=2, style=dotted];
m30_10 -> m30_27  [color=green, key=2, style=dotted];
m30_10 -> m30_28  [color=green, key=2, style=dotted];
m30_10 -> m30_43  [color=green, key=1, label="lambda expression", style=dashed];
m30_11 -> m30_12  [color=green, key=0, style=solid];
m30_11 -> m30_29  [color=green, key=2, style=dotted];
m30_12 -> m30_13  [color=green, key=0, style=solid];
m30_12 -> m30_23  [color=green, key=2, style=dotted];
m30_12 -> m30_24  [color=green, key=2, style=dotted];
m30_12 -> m30_47  [color=green, key=1, label="lambda expression", style=dashed];
m30_13 -> m30_14  [color=green, key=0, style=solid];
m30_13 -> m30_23  [color=green, key=2, style=dotted];
m30_13 -> m30_30  [color=green, key=2, style=dotted];
m30_13 -> m30_24  [color=green, key=2, style=dotted];
m30_13 -> m30_51  [color=green, key=1, label="lambda expression", style=dashed];
m30_14 -> m30_15  [color=green, key=0, style=solid];
m30_14 -> m30_23  [color=green, key=2, style=dotted];
m30_14 -> m30_24  [color=green, key=2, style=dotted];
m30_14 -> m30_55  [color=green, key=1, label="lambda expression", style=dashed];
m30_15 -> m30_16  [color=green, key=0, style=solid];
m30_15 -> m30_23  [color=green, key=2, style=dotted];
m30_15 -> m30_24  [color=green, key=2, style=dotted];
m30_15 -> m30_60  [color=green, key=1, label="lambda expression", style=dashed];
m30_16 -> m30_0  [color=blue, key=0, style=bold];
m30_207 -> m30_208  [key=0, style=solid];
m30_208 -> m30_209  [key=0, style=solid];
m30_209 -> m30_210  [key=0, style=solid];
m30_209 -> m30_99  [key=2, style=dotted];
m30_210 -> m30_211  [key=0, style=solid];
m30_210 -> m30_100  [key=2, style=dotted];
m30_211 -> m30_212  [key=0, style=solid];
m30_211 -> m30_101  [key=2, style=dotted];
m30_211 -> m30_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_212 -> m30_207  [color=blue, key=0, style=bold];
m30_94 -> m30_95  [key=0, style=solid];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_99  [key=2, style=dotted];
m30_96 -> m30_97  [key=0, style=solid];
m30_96 -> m30_100  [key=2, style=dotted];
m30_97 -> m30_98  [key=0, style=solid];
m30_97 -> m30_101  [key=2, style=dotted];
m30_97 -> m30_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_98 -> m30_94  [color=blue, key=0, style=bold];
m30_185 -> m30_186  [key=0, style=solid];
m30_187 -> m30_188  [key=0, style=solid];
m30_188 -> m30_189  [key=0, style=solid];
m30_188 -> m30_99  [key=2, style=dotted];
m30_189 -> m30_190  [key=0, style=solid];
m30_189 -> m30_100  [key=2, style=dotted];
m30_190 -> m30_191  [key=0, style=solid];
m30_190 -> m30_101  [key=2, style=dotted];
m30_190 -> m30_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_186 -> m30_187  [key=0, style=solid];
m30_186 -> m30_190  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m30_186 -> m30_195  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m30_186 -> m30_192  [key=2, style=dotted];
m30_186 -> m30_193  [key=2, style=dotted];
m30_191 -> m30_185  [color=blue, key=0, style=bold];
m30_117 -> m30_118  [key=0, style=solid];
m30_31 -> m30_32  [color=green, key=0, style=solid];
m30_36 -> m30_37  [color=green, key=0, style=solid];
m30_40 -> m30_41  [color=green, key=0, style=solid];
m30_43 -> m30_44  [color=green, key=0, style=solid];
m30_47 -> m30_48  [color=green, key=0, style=solid];
m30_51 -> m30_52  [color=green, key=0, style=solid];
m30_55 -> m30_56  [color=green, key=0, style=solid];
m30_60 -> m30_61  [color=green, key=0, style=solid];
m30_32 -> m30_33  [color=green, key=0, style=solid];
m30_32 -> m30_34  [color=green, key=2, style=dotted];
m30_32 -> m30_35  [color=green, key=2, style=dotted];
m30_33 -> m30_31  [color=blue, key=0, style=bold];
m30_37 -> m30_38  [color=green, key=0, style=solid];
m30_37 -> m30_34  [color=green, key=2, style=dotted];
m30_37 -> m30_39  [color=green, key=2, style=dotted];
m30_38 -> m30_36  [color=blue, key=0, style=bold];
m30_41 -> m30_42  [color=green, key=0, style=solid];
m30_42 -> m30_40  [color=blue, key=0, style=bold];
m30_44 -> m30_45  [color=green, key=0, style=solid];
m30_44 -> m30_46  [color=green, key=2, style=dotted];
m30_45 -> m30_43  [color=blue, key=0, style=bold];
m30_48 -> m30_49  [color=green, key=0, style=solid];
m30_48 -> m30_50  [color=green, key=2, style=dotted];
m30_49 -> m30_47  [color=blue, key=0, style=bold];
m30_52 -> m30_53  [color=green, key=0, style=solid];
m30_52 -> m30_54  [color=green, key=2, style=dotted];
m30_53 -> m30_51  [color=blue, key=0, style=bold];
m30_56 -> m30_57  [color=green, key=0, style=solid];
m30_56 -> n36  [color=green, key=2, style=dotted];
m30_56 -> m30_59  [color=green, key=2, style=dotted];
m30_57 -> m30_55  [color=blue, key=0, style=bold];
m30_61 -> m30_62  [color=green, key=0, style=solid];
m30_61 -> m30_34  [color=green, key=2, style=dotted];
m30_61 -> m30_63  [color=green, key=2, style=dotted];
m30_62 -> m30_60  [color=blue, key=0, style=bold];
m30_69 -> m30_70  [color=green, key=0, style=solid];
m30_70 -> m30_71  [color=green, key=0, style=solid];
m30_70 -> m30_72  [color=green, key=2, style=dotted];
m30_71 -> m30_69  [color=blue, key=0, style=bold];
m30_78 -> m30_72  [key=2, style=dotted];
m30_78 -> m30_79  [key=0, style=solid];
m30_85 -> m30_72  [key=2, style=dotted];
m30_85 -> m30_86  [key=0, style=solid];
m30_92 -> m30_72  [key=2, style=dotted];
m30_92 -> m30_93  [key=0, style=solid];
m30_122 -> m30_34  [key=2, style=dotted];
m30_122 -> m30_123  [key=0, style=solid];
m30_122 -> m30_116  [key=2, style=dotted];
m30_122 -> m30_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_125 -> m30_126  [key=0, style=solid];
m30_125 -> m30_120  [key=2, style=dotted];
m30_125 -> m30_127  [key=2, style=dotted];
m30_129 -> m30_34  [key=2, style=dotted];
m30_129 -> m30_130  [key=0, style=solid];
m30_129 -> m30_116  [key=2, style=dotted];
m30_129 -> m30_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_132 -> m30_133  [key=0, style=solid];
m30_132 -> m30_120  [key=2, style=dotted];
m30_132 -> m30_127  [key=2, style=dotted];
m30_148 -> m30_34  [key=2, style=dotted];
m30_148 -> n36  [key=2, style=dotted];
m30_148 -> m30_149  [key=0, style=solid];
m30_148 -> m30_116  [key=2, style=dotted];
m30_148 -> m30_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_151 -> m30_152  [key=0, style=solid];
m30_151 -> m30_120  [key=2, style=dotted];
m30_151 -> m30_127  [key=2, style=dotted];
m30_174 -> m30_175  [key=0, style=solid];
m30_174 -> m30_100  [key=2, style=dotted];
m30_183 -> m30_184  [key=0, style=solid];
m30_183 -> m30_100  [key=2, style=dotted];
m30_103 -> m30_34  [key=2, style=dotted];
m30_103 -> m30_63  [key=2, style=dotted];
m30_103 -> m30_104  [key=0, style=solid];
m30_114 -> m30_34  [key=2, style=dotted];
m30_114 -> m30_115  [key=0, style=solid];
m30_114 -> m30_116  [key=2, style=dotted];
m30_114 -> m30_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_142 -> m30_34  [key=2, style=dotted];
m30_142 -> m30_35  [key=2, style=dotted];
m30_142 -> m30_143  [key=0, style=solid];
m30_145 -> m30_34  [key=2, style=dotted];
m30_145 -> m30_63  [key=2, style=dotted];
m30_145 -> m30_146  [key=0, style=solid];
m30_171 -> m30_34  [key=2, style=dotted];
m30_171 -> m30_54  [key=2, style=dotted];
m30_171 -> m30_172  [key=0, style=solid];
m30_195 -> m30_34  [key=2, style=dotted];
m30_195 -> m30_39  [key=2, style=dotted];
m30_195 -> m30_196  [key=0, style=solid];
m30_205 -> m30_34  [key=2, style=dotted];
m30_205 -> m30_39  [key=2, style=dotted];
m30_205 -> m30_206  [key=0, style=solid];
m30_214 -> m30_34  [key=2, style=dotted];
m30_214 -> m30_63  [key=2, style=dotted];
m30_214 -> m30_215  [key=0, style=solid];
m30_162 -> m30_35  [key=2, style=dotted];
m30_162 -> m30_163  [key=0, style=solid];
m30_77 -> m30_78  [key=0, style=solid];
m30_79 -> m30_77  [color=blue, key=0, style=bold];
m30_84 -> m30_85  [key=0, style=solid];
m30_86 -> m30_84  [color=blue, key=0, style=bold];
m30_91 -> m30_92  [key=0, style=solid];
m30_93 -> m30_91  [color=blue, key=0, style=bold];
m30_102 -> m30_103  [key=0, style=solid];
m30_113 -> m30_114  [key=0, style=solid];
m30_121 -> m30_122  [key=0, style=solid];
m30_123 -> m30_121  [color=blue, key=0, style=bold];
m30_124 -> m30_125  [key=0, style=solid];
m30_126 -> m30_124  [color=blue, key=0, style=bold];
m30_128 -> m30_129  [key=0, style=solid];
m30_130 -> m30_128  [color=blue, key=0, style=bold];
m30_131 -> m30_132  [key=0, style=solid];
m30_133 -> m30_131  [color=blue, key=0, style=bold];
m30_141 -> m30_142  [key=0, style=solid];
m30_144 -> m30_145  [key=0, style=solid];
m30_147 -> m30_148  [key=0, style=solid];
m30_149 -> m30_147  [color=blue, key=0, style=bold];
m30_150 -> m30_151  [key=0, style=solid];
m30_152 -> m30_150  [color=blue, key=0, style=bold];
m30_161 -> m30_162  [key=0, style=solid];
m30_170 -> m30_171  [key=0, style=solid];
m30_173 -> m30_174  [key=0, style=solid];
m30_175 -> m30_173  [color=blue, key=0, style=bold];
m30_182 -> m30_183  [key=0, style=solid];
m30_184 -> m30_182  [color=blue, key=0, style=bold];
m30_194 -> m30_195  [key=0, style=solid];
m30_204 -> m30_205  [key=0, style=solid];
m30_213 -> m30_214  [key=0, style=solid];
m30_104 -> m30_102  [color=blue, key=0, style=bold];
m30_115 -> m30_113  [color=blue, key=0, style=bold];
m30_143 -> m30_141  [color=blue, key=0, style=bold];
m30_146 -> m30_144  [color=blue, key=0, style=bold];
m30_172 -> m30_170  [color=blue, key=0, style=bold];
m30_196 -> m30_194  [color=blue, key=0, style=bold];
m30_206 -> m30_204  [color=blue, key=0, style=bold];
m30_215 -> m30_213  [color=blue, key=0, style=bold];
m30_163 -> m30_161  [color=blue, key=0, style=bold];
m30_118 -> m30_120  [key=2, style=dotted];
m30_118 -> m30_119  [key=0, style=solid];
m30_119 -> m30_117  [color=blue, key=0, style=bold];
m30_87 -> m30_88  [key=0, style=solid];
m30_88 -> m30_34  [key=2, style=dotted];
m30_88 -> m30_89  [key=0, style=solid];
m30_88 -> m30_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_89 -> m30_68  [key=2, style=dotted];
m30_89 -> m30_90  [key=0, style=solid];
m30_90 -> m30_87  [color=blue, key=0, style=bold];
m30_176 -> m30_177  [key=0, style=solid];
m30_177 -> m30_28  [key=2, style=dotted];
m30_177 -> m30_178  [key=0, style=solid];
m30_177 -> m30_181  [key=2, style=dotted];
m30_178 -> m30_179  [key=0, style=solid];
m30_178 -> m30_99  [key=2, style=dotted];
m30_178 -> m30_183  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m30_179 -> m30_180  [key=0, style=solid];
m30_179 -> m30_169  [key=2, style=dotted];
m30_179 -> m30_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_180 -> m30_176  [color=blue, key=0, style=bold];
m30_218 -> m30_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_3  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_4  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_5  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_6  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_7  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_8  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_9  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_10  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_11  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_12  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_13  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_14  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_15  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_41  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_65  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_70  [color=green, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_109  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_122  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_111  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_148  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_151  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_167  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_183  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_187  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_208  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_218 -> m30_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m30_219 -> m30_122  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_219 -> m30_129  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_219 -> m30_114  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m30_221 -> m30_174  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m30_222 -> m30_183  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m30_223 -> m30_195  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m30_220 -> m30_162  [color=darkseagreen4, key=1, label=time, style=dashed];
}
