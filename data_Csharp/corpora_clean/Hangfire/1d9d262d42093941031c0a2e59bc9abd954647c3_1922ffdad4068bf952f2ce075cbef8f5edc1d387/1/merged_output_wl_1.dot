digraph  {
n55 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span=""];
n56 [label=sqlQuery, span=""];
n57 [label=string, span=""];
n58 [label=int, span=""];
n59 [label=int, span=""];
n60 [label=sqlQuery, span=""];
n61 [label=string, span=""];
n62 [label=sqlQuery, span=""];
n0 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
n1 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="storage == null", span="38-38"];
n3 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="_storage = storage", span="39-39"];
n2 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="throw new ArgumentNullException(''storage'');", span="38-38"];
n4 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
n5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n6 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
n7 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="string sqlQuery = @''select distinct(Queue) from HangFire.JobQueue''", span="44-44"];
n8 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label=_cacheLock, span="46-46"];
n10 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="var result = UseTransaction(connection =>\r\n                    {\r\n                        return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();\r\n                    })", span="50-53"];
n19 [cluster="lambda expression", label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52"];
n9 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="_queuesCache.Count == 0 || _cacheUpdated.Add(QueuesCacheTimeout) < DateTime.UtcNow", span="48-48"];
n13 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="return _queuesCache.ToList();", span="59-59"];
n15 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
n11 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="_queuesCache = result", span="55-55"];
n16 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="105-105"];
n18 [cluster="lambda expression", label="Entry lambda expression", span="50-53"];
n12 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="_cacheUpdated = DateTime.UtcNow", span="56-56"];
n14 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
n17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n20 [cluster="lambda expression", label="Exit lambda expression", span="50-53"];
n21 [cluster="Unk.Query", label="Entry Unk.Query", span=""];
n22 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n23 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n24 [cluster="lambda expression", label="Entry lambda expression", span="52-52"];
n25 [cluster="lambda expression", label="(string) x.Queue", span="52-52"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="52-52"];
n27 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
n28 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="string sqlQuery = @''\r\nselect r.Id from (\r\n  select jq.Id, row_number() over (order by jq.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  where jq.Queue = @queue\r\n) as r\r\nwhere r.row_num between @start and @end''", span="65-71"];
n29 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="73-81"];
n32 [cluster="lambda expression", label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80"];
n30 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
n31 [cluster="lambda expression", label="Entry lambda expression", span="73-81"];
n33 [cluster="lambda expression", label="Exit lambda expression", span="73-81"];
n34 [cluster="Unk.>", label="Entry Unk.>", span=""];
n35 [cluster="lambda expression", label="Entry lambda expression", span="79-79"];
n36 [cluster="lambda expression", label="x.Id", span="79-79"];
n37 [cluster="lambda expression", label="Exit lambda expression", span="79-79"];
n38 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84"];
n39 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="return Enumerable.Empty<int>();", span="86-86"];
n40 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84"];
n41 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n42 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="89-89"];
n43 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.JobQueue where [Queue] = @queue''", span="91-92"];
n44 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query<int>(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result,\r\n                };\r\n            });", span="94-102"];
n47 [cluster="lambda expression", label="var result = connection.Query<int>(sqlQuery, new { queue = queue }).Single()", span="96-96"];
n45 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="89-89"];
n46 [cluster="lambda expression", label="Entry lambda expression", span="94-102"];
n48 [cluster="lambda expression", label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result,\r\n                };", span="98-101"];
n50 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
n49 [cluster="lambda expression", label="Exit lambda expression", span="94-102"];
n51 [cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18"];
n52 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="107-107"];
n53 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="105-105"];
n54 [cluster="Unk.UseTransaction", label="Entry Unk.UseTransaction", span=""];
d2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, label="0: ServerName = Environment.GetEnvironmentVariable(''COMPUTERNAME'')", span="36-36"];
d25 [label="Hangfire.BackgroundJobServerOptions", span=""];
d1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="35-35"];
d3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="37-37"];
d9 [cluster="System.Environment.GetEnvironmentVariable(string)", label="Entry System.Environment.GetEnvironmentVariable(string)", span="0-0"];
d4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="38-38"];
d5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="39-39"];
d6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="ServerWatchdogOptions = new ServerWatchdogOptions()", span="41-41"];
d14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="85-85"];
d15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="86-86"];
d16 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="87-87"];
d17 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="88-88"];
d0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
d8 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
d10 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
d11 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
d12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82"];
d13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="84-84"];
d19 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
d20 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d21 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
d22 [cluster="lambda expression", label="Entry lambda expression", span="86-86"];
d18 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82"];
d24 [cluster="lambda expression", label="Exit lambda expression", span="86-86"];
d23 [cluster="lambda expression", label="''''' + x + '''''", span="86-86"];
m0_23 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="30-30"];
m0_64 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m0_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m0_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m0_44 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="57-57"];
m0_45 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="62-62"];
m0_46 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="options.Queues = new string[0]", span="62-62"];
m0_47 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="62-62"];
m0_50 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="BackgroundJobServerOptionsFacts.cs", label="Assert.NotNull(options.ServerWatchdogOptions)", span="70-70"];
m0_53 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", span="74-74"];
m0_54 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: var options = CreateOptions()", span="76-76"];
m0_58 [cluster="Unk.NotEmpty", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.NotEmpty", span=""];
m0_48 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="66-66"];
m0_49 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="BackgroundJobServerOptionsFacts.cs", label="var options = CreateOptions()", span="68-68"];
m0_51 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="66-66"];
m0_57 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", span="74-74"];
m0_52 [cluster="Unk.NotNull", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.NotNull", span=""];
m0_55 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.NotEmpty(options.ServerName)", span="78-78"];
m0_59 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="BackgroundJobServerOptionsFacts.cs", label="return new BackgroundJobServerOptions();", span="84-84"];
m0_56 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_EqualsToMachineName_ByDefault()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Equal(Environment.MachineName, options.ServerName)", span="79-79"];
m0_60 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="82-82"];
m0_67 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m0_30 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="39-39"];
m0_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="_clientExceptionFilters = clientExceptionFilters", span="30-30"];
m0_12 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="21-21"];
m0_13 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m0_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="BackgroundJobServerOptionsFacts.cs", label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="37-37"];
m0_15 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="BackgroundJobServerOptionsFacts.cs", label=Exception, span="39-39"];
m0_29 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundJobServerOptionsFacts.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="43-44"];
m0_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="27-27"];
m0_63 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m0_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="BackgroundJobServerOptionsFacts.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="41-41"];
m0_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="_clientFilters = clientFilters", span="29-29"];
m0_32 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="options.WorkerCount = -1", span="44-44"];
m0_38 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="53-53"];
m0_34 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="jobDescriptor.Enqueue()", span="59-59"];
m0_35 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="return new CreatedContext(createContext, false, null);", span="60-60"];
m0_36 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="57-61"];
m0_37 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="28-28"];
m0_31 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="44-44"];
m0_21 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="BackgroundJobServerOptionsFacts.cs", label="var options = CreateOptions()", span="32-32"];
m0_24 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="35-35"];
m0_25 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="options.WorkerCount = 0", span="35-35"];
m0_26 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="35-35"];
m0_27 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="39-39"];
m0_28 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundJobServerOptionsFacts.cs", label="var options = CreateOptions()", span="41-41"];
m0_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m0_22 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m0_17 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="26-26"];
m0_18 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="options.ServerName = null", span="26-26"];
m0_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="BackgroundJobServerOptionsFacts.cs", label="throw;", span="46-46"];
m0_61 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m0_4 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundJobServerOptionsFacts.cs", label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="15-15"];
m0_42 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundJobServerOptionsFacts.cs", label="var options = CreateOptions()", span="59-59"];
m0_39 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="options.Queues = null", span="53-53"];
m0_33 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="44-44"];
m0_40 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="53-53"];
m0_41 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="57-57"];
m0_43 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundJobServerOptionsFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="61-62"];
m0_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m0_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m0_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="BackgroundJobServerOptionsFacts.cs", label="Current = new JobCreator(\r\n                GlobalJobFilters.Filters.OfType<IClientFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IClientExceptionFilter>())", span="14-16"];
m0_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m0_3 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m0_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="clientFilters == null", span="26-26"];
m0_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="throw new ArgumentNullException(''clientFilters'');", span="26-26"];
m0_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="BackgroundJobServerOptionsFacts.cs", label="clientExceptionFilters == null", span="27-27"];
m0_62 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m0_68 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.Client.JobCreator", span=""];
m0_69 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m0_70 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.Client.CreateContext", span=""];
m0_71 [file="BackgroundJobServerOptionsFacts.cs", label=preContext, span=""];
m0_72 [file="BackgroundJobServerOptionsFacts.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m0_73 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.Filters.IClientFilter", span=""];
m1_101 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="203-203"];
m1_98 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="CaptureCultureAttribute.cs", label="name == null", span="206-206"];
m1_117 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="234-234"];
m1_123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="248-254"];
m1_122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="239-244"];
m1_118 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="serverId == null", span="236-236"];
m1_120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="context == null", span="237-237"];
m1_119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''serverId'');", span="236-236"];
m1_121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''context'');", span="237-237"];
m1_124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="234-234"];
m1_95 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="CaptureCultureAttribute.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="631-631"];
m1_100 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="CaptureCultureAttribute.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m1_96 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="CaptureCultureAttribute.cs", label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="51-51"];
m1_99 [cluster="HttpRequestBase.LinkTo(string)", file="CaptureCultureAttribute.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m1_97 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m1_125 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m1_103 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="CaptureCultureAttribute.cs", label="id == null", span="216-216"];
m1_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35"];
m1_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="CaptureCultureAttribute.cs", label="connection == null", span="37-37"];
m1_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m1_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", color=red, community=0, file="CaptureCultureAttribute.cs", label="0: _connection = connection", span="39-39"];
m1_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35"];
m1_5 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="CaptureCultureAttribute.cs", label="Write(Request.LinkTo(''/css/styles.css''))", span="79-79"];
m1_6 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="42-42"];
m1_7 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="CaptureCultureAttribute.cs", label="_connection.Dispose()", span="44-44"];
m1_8 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="42-42"];
m1_9 [cluster="Unk.Dispose", file="CaptureCultureAttribute.cs", label="Entry Unk.Dispose", span=""];
m1_10 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47"];
m1_11 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", color=green, community=0, file="CaptureCultureAttribute.cs", label="0: return new SqlServerWriteOnlyTransaction(_connection);", span="49-49"];
m1_12 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47"];
m1_21 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''queues'');", span="61-61"];
m1_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="var currentQueryIndex = 0", span="76-76"];
m1_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="82-85"];
m1_35 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="idAndQueue == null", span="97-97"];
m1_41 [cluster="Unk.Query", file="CaptureCultureAttribute.cs", label="Entry Unk.Query", span=""];
m1_47 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="104-104"];
m1_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="var invocationData = InvocationData.Serialize(job)", span="117-117"];
m1_59 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="135-140"];
m1_13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m1_14 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="52-52"];
m1_15 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", color=green, community=0, file="CaptureCultureAttribute.cs", label="0: return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="54-56"];
m1_16 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="52-52"];
m1_17 [cluster="SqlServerDistributedLock.cstr", file="CaptureCultureAttribute.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m1_18 [cluster="string.Format(string, object)", file="CaptureCultureAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_19 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="59-59"];
m1_20 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="queues == null", span="61-61"];
m1_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="queues.Length == 0", span="62-62"];
m1_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="62-62"];
m1_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="dynamic idAndQueue", span="64-64"];
m1_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="CaptureCultureAttribute.cs", label="0: string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="66-71"];
m1_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="75-75"];
m1_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="80-80"];
m1_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="idAndQueue == null", span="87-87"];
m1_31 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="currentQueryIndex == fetchConditions.Length - 1", span="89-89"];
m1_32 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="91-91"];
m1_33 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="92-92"];
m1_34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="96-96"];
m1_36 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="99-101"];
m1_37 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="59-59"];
m1_38 [cluster="System.ArgumentException.ArgumentException(string, string)", file="CaptureCultureAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_39 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CaptureCultureAttribute.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m1_40 [cluster="System.TimeSpan.Negate()", file="CaptureCultureAttribute.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m1_42 [cluster="Unk.SingleOrDefault", file="CaptureCultureAttribute.cs", label="Entry Unk.SingleOrDefault", span=""];
m1_43 [cluster="System.TimeSpan.FromSeconds(double)", file="CaptureCultureAttribute.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_44 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m1_45 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m1_46 [cluster="Unk.ToString", file="CaptureCultureAttribute.cs", label="Entry Unk.ToString", span=""];
m1_48 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="job == null", span="109-109"];
m1_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''job'');", span="109-109"];
m1_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="parameters == null", span="110-110"];
m1_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''parameters'');", span="110-110"];
m1_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="112-115"];
m1_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="119-127"];
m1_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="parameters.Count > 0", span="129-129"];
m1_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="var parameterArray = new object[parameters.Count]", span="131-131"];
m1_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="int parameterIndex = 0", span="132-132"];
m1_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label=parameters, span="133-133"];
m1_60 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="143-145"];
m1_61 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="147-147"];
m1_62 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="return jobId;", span="150-150"];
m1_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="160-161"];
m1_63 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="104-104"];
m1_64 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="CaptureCultureAttribute.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m1_65 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="CaptureCultureAttribute.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m1_66 [cluster="System.DateTime.Add(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m1_71 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="id == null", span="155-155"];
m1_67 [cluster="Unk.>", file="CaptureCultureAttribute.cs", label="Entry Unk.>", span=""];
m1_68 [cluster="Unk.Single", file="CaptureCultureAttribute.cs", label="Entry Unk.Single", span=""];
m1_69 [cluster="Unk.Execute", file="CaptureCultureAttribute.cs", label="Entry Unk.Execute", span=""];
m1_70 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="153-153"];
m1_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''id'');", span="155-155"];
m1_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="157-158"];
m1_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="jobData == null", span="163-163"];
m1_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="return null;", span="163-163"];
m1_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="166-166"];
m1_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="invocationData.Arguments = jobData.Arguments", span="167-167"];
m1_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="job = invocationData.Deserialize()", span="174-174"];
m1_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="Job job = null", span="169-169"];
m1_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="JobLoadException loadException = null", span="170-170"];
m1_82 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label=JobLoadException, span="176-176"];
m1_83 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="loadException = ex", span="178-178"];
m1_84 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="181-186"];
m1_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="153-153"];
m1_86 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="CaptureCultureAttribute.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m1_87 [cluster="HangFire.Storage.JobData.JobData()", file="CaptureCultureAttribute.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m1_88 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="189-189"];
m1_89 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="id == null", span="191-191"];
m1_90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''id'');", span="191-191"];
m1_91 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="name == null", span="192-192"];
m1_92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''name'');", span="192-192"];
m1_93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="194-200"];
m1_94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="189-189"];
m1_107 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="CaptureCultureAttribute.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="219-220"];
m1_106 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''queue'');", span="217-217"];
m1_116 [cluster="System.ArgumentException.ArgumentException(string)", file="CaptureCultureAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_105 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="CaptureCultureAttribute.cs", label="queue == null", span="217-217"];
m1_136 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m1_139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284"];
m1_137 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="timeOut.Duration() != timeOut", span="277-277"];
m1_138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279"];
m1_140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m1_104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''id'');", span="216-216"];
m1_141 [cluster="System.TimeSpan.Duration()", file="CaptureCultureAttribute.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m1_102 [cluster="Unk.Equals", file="CaptureCultureAttribute.cs", label="Entry Unk.Equals", span=""];
m1_108 [cluster="Unk.Write", file="CaptureCultureAttribute.cs", label="Entry Unk.Write", span=""];
m1_109 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="HangFire.Web.Pages.LayoutPage", span=""];
m1_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="228-231"];
m1_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="toScore < fromScore", span="226-226"];
m1_110 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="key == null", span="225-225"];
m1_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="226-226"];
m1_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''key'');", span="225-225"];
m1_115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="223-223"];
m1_126 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m1_129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="CaptureCultureAttribute.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263"];
m1_127 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="CaptureCultureAttribute.cs", label="serverId == null", span="259-259"];
m1_128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''serverId'');", span="259-259"];
m1_130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m1_131 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="CaptureCultureAttribute.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m1_134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="CaptureCultureAttribute.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272"];
m1_132 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="CaptureCultureAttribute.cs", label="serverId == null", span="268-268"];
m1_133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="CaptureCultureAttribute.cs", label="throw new ArgumentNullException(''serverId'');", span="268-268"];
m1_135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="CaptureCultureAttribute.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m1_142 [file="CaptureCultureAttribute.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m2_0 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="CreateJobFailedException.cs", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m2_1 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="CreateJobFailedException.cs", label="Exit Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m3_40 [cluster="Unk.EnqueueItemOnList", file="DashboardRoutes.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m3_5 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="DashboardRoutes.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m3_6 [cluster="Unk.NotEqual", file="DashboardRoutes.cs", label="Entry Unk.NotEqual", span=""];
m3_7 [cluster="Unk.True", file="DashboardRoutes.cs", label="Entry Unk.True", span=""];
m3_0 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="DashboardRoutes.cs", label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8"];
m3_1 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="DashboardRoutes.cs", label="var options = new SqlServerStorageOptions()", span="10-10"];
m3_2 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="DashboardRoutes.cs", label="Assert.NotEqual(0, options.QueuePollInterval.TotalSeconds)", span="11-11"];
m3_17 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="DashboardRoutes.cs", label="var options = new SqlServerStorageOptions()", span="26-26"];
m3_18 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="DashboardRoutes.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.FromSeconds(-1))", span="27-28"];
m3_19 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="DashboardRoutes.cs", label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", span="24-24"];
m3_29 [cluster="Unk.Equal", file="DashboardRoutes.cs", label="Entry Unk.Equal", span=""];
m3_8 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="DashboardRoutes.cs", label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16"];
m3_27 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="DashboardRoutes.cs", label="Assert.Equal(TimeSpan.FromSeconds(1), options.QueuePollInterval)", span="36-36"];
m3_45 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="DashboardRoutes.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92"];
m3_46 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="DashboardRoutes.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="94-97"];
m3_47 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="DashboardRoutes.cs", label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92"];
m3_25 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="DashboardRoutes.cs", label="var options = new SqlServerStorageOptions()", span="34-34"];
m3_3 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="DashboardRoutes.cs", label="Assert.True(options.PrepareSchemaIfNecessary)", span="12-12"];
m3_12 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="DashboardRoutes.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36"];
m3_13 [cluster="lambda expression", file="DashboardRoutes.cs", label="Entry lambda expression", span="20-20"];
m3_14 [cluster="lambda expression", file="DashboardRoutes.cs", label="options.QueuePollInterval = TimeSpan.Zero", span="20-20"];
m3_9 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="DashboardRoutes.cs", label="var options = new SqlServerStorageOptions()", span="18-18"];
m3_10 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="DashboardRoutes.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.Zero)", span="19-20"];
m3_11 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="DashboardRoutes.cs", label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16"];
m3_15 [cluster="lambda expression", file="DashboardRoutes.cs", label="Exit lambda expression", span="20-20"];
m3_23 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="DashboardRoutes.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48"];
m3_53 [cluster="Unk.AreEqual", file="DashboardRoutes.cs", label="Entry Unk.AreEqual", span=""];
m3_16 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="DashboardRoutes.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48"];
m3_24 [cluster="Unk.AddItemToList", file="DashboardRoutes.cs", label="Entry Unk.AddItemToList", span=""];
m3_26 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DashboardRoutes.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_28 [cluster="Unk.ToJson", file="DashboardRoutes.cs", label="Entry Unk.ToJson", span=""];
m3_41 [cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="DashboardRoutes.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79"];
m3_42 [cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="DashboardRoutes.cs", label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', typeof(TestJob).AssemblyQualifiedName },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', String.Empty }\r\n                    })", span="81-88"];
m3_43 [cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="DashboardRoutes.cs", label="Exit HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79"];
m3_33 [cluster="lambda expression", file="DashboardRoutes.cs", label="Entry lambda expression", span="64-64"];
m3_21 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="DashboardRoutes.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="54-57"];
m3_20 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", color=green, community=0, file="DashboardRoutes.cs", label="0: Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="50-52"];
m3_22 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", color=green, community=0, file="DashboardRoutes.cs", label="0: Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(args.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="59-66"];
m3_30 [cluster="lambda expression", file="DashboardRoutes.cs", label=options, span=""];
m3_32 [cluster="lambda expression", file="DashboardRoutes.cs", label="Exit lambda expression", span="64-64"];
m3_31 [cluster="lambda expression", file="DashboardRoutes.cs", label=options, span=""];
m3_34 [cluster="lambda expression", file="DashboardRoutes.cs", label="x[''Value'']", span="64-64"];
m3_35 [cluster="lambda expression", file="DashboardRoutes.cs", label="Exit lambda expression", span="64-64"];
m3_4 [cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="DashboardRoutes.cs", label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8"];
m3_44 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="DashboardRoutes.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m3_52 [cluster="Unk.GetValueFromHash", file="DashboardRoutes.cs", label="Entry Unk.GetValueFromHash", span=""];
m3_36 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="DashboardRoutes.cs", label="Entry HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70"];
m3_38 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", color=green, community=0, file="DashboardRoutes.cs", label="0: Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', QueueSteps.DefaultQueue),\r\n                DefaultJobId)", span="73-75"];
m3_37 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="DashboardRoutes.cs", label="GivenAJobOfTheTypeWithTheFollowingArguments(typeof(CustomJob).AssemblyQualifiedName, table)", span="72-72"];
m3_39 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="DashboardRoutes.cs", label="Exit HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70"];
m3_48 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="DashboardRoutes.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104"];
m3_49 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="DashboardRoutes.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="106-108"];
m3_50 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="DashboardRoutes.cs", label="Assert.AreEqual(state, jobState)", span="110-110"];
m3_51 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="DashboardRoutes.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104"];
m3_54 [file="DashboardRoutes.cs", label="HangFire.Tests.JobSteps", span=""];
m5_0 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m5_1 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m5_2 [cluster="Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JobLoadException.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="41-41"];
m5_3 [cluster="Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JobLoadException.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="41-41"];
m6_21 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="JobLoadExceptionFacts.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0"];
m6_9 [cluster="Unk.Same", file="JobLoadExceptionFacts.cs", label="Entry Unk.Same", span=""];
m6_7 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadExceptionFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m6_23 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", file="JobLoadExceptionFacts.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", span="0-0"];
m6_0 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", file="JobLoadExceptionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", span="15-15"];
m6_1 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", file="JobLoadExceptionFacts.cs", label="var innerException = new Exception()", span="17-17"];
m6_2 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", file="JobLoadExceptionFacts.cs", label="var exception = new JobLoadException(''1'', innerException)", span="18-18"];
m6_4 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", file="JobLoadExceptionFacts.cs", label="Assert.Same(innerException, exception.InnerException)", span="21-21"];
m6_3 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", file="JobLoadExceptionFacts.cs", label="Assert.Equal(''1'', exception.Message)", span="20-20"];
m6_5 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", file="JobLoadExceptionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Ctor_CreatesException_WithGivenMessageAnInnerException()", span="15-15"];
m6_8 [cluster="Unk.Equal", file="JobLoadExceptionFacts.cs", label="Entry Unk.Equal", span=""];
m6_6 [cluster="System.Exception.Exception()", file="JobLoadExceptionFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m6_22 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", file="JobLoadExceptionFacts.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", span="0-0"];
m6_10 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", file="JobLoadExceptionFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", span="25-25"];
m6_11 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: var exception = new JobLoadException(''1'', new Exception())", span="27-27"];
m6_12 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: JobLoadException deserializedException", span="28-28"];
m6_15 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: formatter.Serialize(stream, exception)", span="33-33"];
m6_13 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: var stream = new MemoryStream()", span="30-30"];
m6_14 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: var formatter = new BinaryFormatter()", span="32-32"];
m6_16 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: stream.Position = 0", span="35-35"];
m6_17 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: deserializedException = (JobLoadException) formatter.Deserialize(stream)", span="37-37"];
m6_18 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", color=red, community=0, file="JobLoadExceptionFacts.cs", label="0: Assert.Equal(''1'', deserializedException.Message)", span="40-40"];
m6_19 [cluster="Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", file="JobLoadExceptionFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobLoadExceptionFacts.Instance_CanBeSerializedAndDeserialized()", span="25-25"];
m6_20 [cluster="System.IO.MemoryStream.MemoryStream()", file="JobLoadExceptionFacts.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m7_24 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="JobMethodCallRenderer.cs", label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72"];
m7_31 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="JobMethodCallRenderer.cs", label="return @''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [HangFire].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [HangFire].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="74-100"];
m7_32 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="JobMethodCallRenderer.cs", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72"];
m7_12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobMethodCallRenderer.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59"];
m7_0 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="16-16"];
m7_1 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobMethodCallRenderer.cs", label="_name = name", span="19-19"];
m7_3 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", color=green, community=0, file="JobMethodCallRenderer.cs", label="0: _handlesException = handlesException", span="21-21"];
m7_4 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobMethodCallRenderer.cs", label="Exit HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="16-16"];
m7_2 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobMethodCallRenderer.cs", label="_results = results", span="20-20"];
m7_5 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="24-24"];
m7_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobMethodCallRenderer.cs", label="HangFire.Tests.TestExceptionFilter", span=""];
m7_30 [cluster="System.Type.ToString()", file="JobMethodCallRenderer.cs", label="Entry System.Type.ToString()", span="0-0"];
m7_25 [cluster="Unk.Execute", file="JobMethodCallRenderer.cs", label="Entry Unk.Execute", span=""];
m7_7 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobMethodCallRenderer.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m7_8 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobMethodCallRenderer.cs", label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44"];
m7_6 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="JobMethodCallRenderer.cs", label="Assert.IsNotNull(filterContext)", span="26-26"];
m7_9 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobMethodCallRenderer.cs", label="int removedCount = 0", span="46-46"];
m7_10 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="JobMethodCallRenderer.cs", label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55"];
m7_15 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="JobMethodCallRenderer.cs", label="_results.Add(_name)", span="40-40"];
m7_11 [cluster="Unk.IsNotNull", file="JobMethodCallRenderer.cs", label="Entry Unk.IsNotNull", span=""];
m7_14 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="JobMethodCallRenderer.cs", label="Assert.IsNotNull(filterContext)", span="38-38"];
m7_13 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", span="36-36"];
m7_16 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="JobMethodCallRenderer.cs", label=_handlesException, span="42-42"];
m7_17 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="JobMethodCallRenderer.cs", label="filterContext.ExceptionHandled = true", span="44-44"];
m7_26 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="JobMethodCallRenderer.cs", label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m7_27 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="JobMethodCallRenderer.cs", label="return GetType().ToString();", span="69-69"];
m7_28 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="JobMethodCallRenderer.cs", label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m7_18 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="JobMethodCallRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m7_29 [cluster="object.GetType()", file="JobMethodCallRenderer.cs", label="Entry object.GetType()", span="0-0"];
m7_21 [cluster="lambda expression", file="JobMethodCallRenderer.cs", label="Entry lambda expression", span="50-55"];
m7_22 [cluster="lambda expression", file="JobMethodCallRenderer.cs", label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54"];
m7_23 [cluster="lambda expression", file="JobMethodCallRenderer.cs", label="Exit lambda expression", span="50-55"];
m7_20 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobMethodCallRenderer.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m7_33 [file="JobMethodCallRenderer.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m8_29 [cluster="Unk.IncrementValue", file="LibLog.cs", label="Entry Unk.IncrementValue", span=""];
m8_25 [cluster="Unk.Commit", file="LibLog.cs", label="Entry Unk.Commit", span=""];
m8_23 [cluster="System.DateTime.ToString(string)", file="LibLog.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_24 [cluster="string.Format(string, object)", file="LibLog.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_22 [cluster="Unk.QueueCommand", file="LibLog.cs", label="Entry Unk.QueueCommand", span=""];
m8_37 [cluster="Unk.ExpireEntryIn", file="LibLog.cs", label="Entry Unk.ExpireEntryIn", span=""];
m8_16 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1)))", span="38-38"];
m8_0 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="Entry HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m8_1 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="redis == null", span="10-10"];
m8_3 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="state == null", span="11-11"];
m8_5 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="var transaction = redis.CreateTransaction()", span="13-13"];
m8_6 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="state.StateName == SucceededState.Name", span="15-15"];
m8_11 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="state.StateName == FailedState.Name", span="26-26"];
m8_18 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="return state;", span="44-44"];
m8_2 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="throw new ArgumentNullException(''redis'');", span="10-10"];
m8_4 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="throw new ArgumentNullException(''state'');", span="11-11"];
m8_7 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="17-18"];
m8_9 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.IncrementValue(hourlySucceededKey))", span="23-23"];
m8_10 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1)))", span="24-24"];
m8_12 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="28-29"];
m8_13 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm''))))", span="31-32"];
m8_15 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.QueueCommand(x => x.IncrementValue(hourlyFailedKey))", span="37-37"];
m8_17 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="transaction.Commit()", span="41-41"];
m8_8 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="var hourlySucceededKey = String.Format(\r\n                        ''hangfire:stats:succeeded:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="20-22"];
m8_14 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="var hourlyFailedKey = String.Format(\r\n                        ''hangfire:stats:failed:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="34-36"];
m8_19 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="LibLog.cs", label="Exit HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m8_36 [cluster="System.TimeSpan.FromDays(double)", file="LibLog.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m8_47 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="38-38"];
m8_26 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="17-18"];
m8_31 [cluster="lambda expression", file="LibLog.cs", label="x.IncrementValue(hourlySucceededKey)", span="23-23"];
m8_34 [cluster="lambda expression", file="LibLog.cs", label="x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1))", span="24-24"];
m8_30 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="23-23"];
m8_38 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="28-29"];
m8_41 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="31-32"];
m8_45 [cluster="lambda expression", file="LibLog.cs", label="x.IncrementValue(hourlyFailedKey)", span="37-37"];
m8_48 [cluster="lambda expression", file="LibLog.cs", label="x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1))", span="38-38"];
m8_44 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="37-37"];
m8_33 [cluster="lambda expression", file="LibLog.cs", label="Entry lambda expression", span="24-24"];
m8_27 [cluster="lambda expression", file="LibLog.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="17-18"];
m8_28 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="17-18"];
m8_32 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="23-23"];
m8_35 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="24-24"];
m8_39 [cluster="lambda expression", file="LibLog.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="28-29"];
m8_40 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="28-29"];
m8_42 [cluster="lambda expression", file="LibLog.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm'')))", span="31-32"];
m8_43 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="31-32"];
m8_46 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="37-37"];
m8_49 [cluster="lambda expression", file="LibLog.cs", label="Exit lambda expression", span="38-38"];
m8_21 [cluster="Unk.CreateTransaction", file="LibLog.cs", label="Entry Unk.CreateTransaction", span=""];
m8_50 [file="LibLog.cs", label=hourlySucceededKey, span=""];
m8_51 [file="LibLog.cs", label=hourlyFailedKey, span=""];
m9_35 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m9_37 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="ScheduleInstant.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50"];
m9_36 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="ScheduleInstant.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m9_38 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m9_12 [cluster="Unk.Returns", file="ScheduleInstant.cs", label="Entry Unk.Returns", span=""];
m9_22 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="ScheduleInstant.cs", label="Exit Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="49-49"];
m9_83 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="136-136"];
m9_127 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="ScheduleInstant.cs", label="return new BackgroundJobServer(_options, _storage.Object);", span="138-138"];
m9_128 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="136-136"];
m9_65 [cluster="Unk.Stop", file="ScheduleInstant.cs", label="Entry Unk.Stop", span=""];
m9_15 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="25-25"];
m9_61 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m9_62 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="ScheduleInstant.cs", label="_serverMock.Object.Stop()", span="71-71"];
m9_63 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="ScheduleInstant.cs", label="_runner.Verify(x => x.Stop())", span="73-73"];
m9_64 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m9_103 [cluster="object.GetType()", file="ScheduleInstant.cs", label="Entry object.GetType()", span="0-0"];
m9_39 [cluster="Unk.DoesNotThrow", file="ScheduleInstant.cs", label="Entry Unk.DoesNotThrow", span=""];
m9_14 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.GetServerRunner()", span="25-25"];
m9_0 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m9_1 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m9_3 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="_runner = new Mock<IServerComponentRunner>()", span="20-20"];
m9_5 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="_serverMock.Setup(x => x.GetServerRunner()).Returns(_runner.Object)", span="25-25"];
m9_6 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m9_7 [cluster="Mock<JobStorage>.cstr", file="ScheduleInstant.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m9_2 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="_options = new BackgroundJobServerOptions()", span="18-18"];
m9_4 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="ScheduleInstant.cs", label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24"];
m9_8 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=red, community=0, file="ScheduleInstant.cs", label="1: Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m9_9 [cluster="Mock<IServerComponentRunner>.cstr", file="ScheduleInstant.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m9_69 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m9_70 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="ScheduleInstant.cs", label="_serverMock.Object.Dispose()", span="79-79"];
m9_71 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="ScheduleInstant.cs", label="_runner.Verify(x => x.Dispose())", span="81-81"];
m9_72 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m9_13 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="25-25"];
m9_16 [cluster="Unk.GetServerRunner", file="ScheduleInstant.cs", label="Entry Unk.GetServerRunner", span=""];
m9_17 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m9_19 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduleInstant.cs", label="Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m9_18 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduleInstant.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m9_20 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m9_21 [cluster="Unk.>", file="ScheduleInstant.cs", label="Entry Unk.>", span=""];
m9_111 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="117-117"];
m9_113 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="_storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="121-121"];
m9_114 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="var server = CreateServer()", span="123-123"];
m9_112 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="var storageComponent = new Mock<IServerComponent>()", span="120-120"];
m9_115 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="var runners = server.GetServerComponentsRunner()", span="126-126"];
m9_117 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="Assert.Contains(storageComponent.Object, components)", span="133-133"];
m9_116 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="var components = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .ToArray()", span="129-131"];
m9_118 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="117-117"];
m9_123 [cluster="Unk.GetComponents", file="ScheduleInstant.cs", label="Entry Unk.GetComponents", span=""];
m9_44 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m9_45 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="ScheduleInstant.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56"];
m9_46 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="ScheduleInstant.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57"];
m9_47 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m9_77 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m9_78 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="ScheduleInstant.cs", label="var server = CreateServer()", span="87-87"];
m9_81 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="ScheduleInstant.cs", label="Assert.IsType<ServerCore>(((ServerComponentRunner) runner).Component)", span="92-92"];
m9_79 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="ScheduleInstant.cs", label="var runner = server.GetServerRunner()", span="89-89"];
m9_80 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="ScheduleInstant.cs", label="Assert.NotNull(runner)", span="91-91"];
m9_82 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m9_99 [cluster="Unk.ToArray", file="ScheduleInstant.cs", label="Entry Unk.ToArray", span=""];
m9_85 [cluster="Unk.NotNull", file="ScheduleInstant.cs", label="Entry Unk.NotNull", span=""];
m9_23 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="32-32"];
m9_43 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="ScheduleInstant.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m9_11 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ScheduleInstant.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m9_51 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="ScheduleInstant.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m9_73 [cluster="Unk.Dispose", file="ScheduleInstant.cs", label="Entry Unk.Dispose", span=""];
m9_34 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="ScheduleInstant.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m9_10 [cluster="Mock<BackgroundJobServer>.cstr", file="ScheduleInstant.cs", label="Entry Mock<BackgroundJobServer>.cstr", span=""];
m9_119 [cluster="Mock<IServerComponent>.cstr", file="ScheduleInstant.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m9_52 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m9_53 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="ScheduleInstant.cs", label="_serverMock.Object.Start()", span="63-63"];
m9_54 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="ScheduleInstant.cs", label="_runner.Verify(x => x.Start())", span="65-65"];
m9_55 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m9_94 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduleInstant.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m9_98 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ScheduleInstant.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m9_124 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="130-130"];
m9_26 [cluster="BackgroundJobServer.cstr", file="ScheduleInstant.cs", label="Entry BackgroundJobServer.cstr", span=""];
m9_27 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m9_28 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="ScheduleInstant.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m9_31 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="41-41"];
m9_32 [cluster="lambda expression", color=green, community=0, file="ScheduleInstant.cs", label="0: new BackgroundJobServer(_options, null)", span="41-41"];
m9_33 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="41-41"];
m9_24 [cluster="Unk.Select", file="ScheduleInstant.cs", label="Entry Unk.Select", span=""];
m9_41 [cluster="lambda expression", file="ScheduleInstant.cs", label="new BackgroundJobServer(_options)", span="50-50"];
m9_25 [cluster="Unk.ToList", file="ScheduleInstant.cs", label="Entry Unk.ToList", span=""];
m9_40 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="50-50"];
m9_42 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="50-50"];
m9_58 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="65-65"];
m9_66 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="73-73"];
m9_74 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="81-81"];
m9_120 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="121-121"];
m9_59 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.Start()", span="65-65"];
m9_60 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="65-65"];
m9_67 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.Stop()", span="73-73"];
m9_68 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="73-73"];
m9_75 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.Dispose()", span="81-81"];
m9_76 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="81-81"];
m9_122 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="121-121"];
m9_121 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.GetComponents()", span="121-121"];
m9_48 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="57-57"];
m9_100 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="105-105"];
m9_104 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="108-108"];
m9_107 [cluster="lambda expression", file="ScheduleInstant.cs", label="Entry lambda expression", span="109-109"];
m9_50 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="57-57"];
m9_49 [cluster="lambda expression", file="ScheduleInstant.cs", label="new BackgroundJobServer()", span="57-57"];
m9_102 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="105-105"];
m9_101 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.GetType()", span="105-105"];
m9_106 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="108-108"];
m9_105 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.Component", span="108-108"];
m9_109 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="109-109"];
m9_108 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.GetType()", span="109-109"];
m9_125 [cluster="lambda expression", file="ScheduleInstant.cs", label="x.Component", span="130-130"];
m9_126 [cluster="lambda expression", file="ScheduleInstant.cs", label="Exit lambda expression", span="130-130"];
m9_96 [cluster="Unk.Contains", file="ScheduleInstant.cs", label="Entry Unk.Contains", span=""];
m9_56 [cluster="Unk.Start", file="ScheduleInstant.cs", label="Entry Unk.Start", span=""];
m9_95 [cluster="Unk.Select", file="ScheduleInstant.cs", label="Entry Unk.Select", span=""];
m9_110 [cluster="Unk.GetType", file="ScheduleInstant.cs", label="Entry Unk.GetType", span=""];
m9_29 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="ScheduleInstant.cs", label="0: Hangfire.Server.ScheduleInstant", span=""];
m9_30 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m9_84 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="ScheduleInstant.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m9_97 [cluster="Unk.True", file="ScheduleInstant.cs", label="Entry Unk.True", span=""];
m9_57 [cluster="Unk.Verify", file="ScheduleInstant.cs", label="Entry Unk.Verify", span=""];
m9_86 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m9_87 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="var server = CreateServer()", span="99-99"];
m9_88 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="var runners = server.GetServerComponentsRunner()", span="102-102"];
m9_89 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105"];
m9_90 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110"];
m9_92 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="113-113"];
m9_91 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112"];
m9_93 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="ScheduleInstant.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m9_129 [file="ScheduleInstant.cs", label="HangFire.Core.Tests.BackgroundJobServerFacts", span=""];
m10_0 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLockException.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="23-23"];
m10_1 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLockException.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="23-23"];
m11_55 [cluster="System.Threading.Thread.Join()", file="TypeExtensions.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m11_33 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="TypeExtensions.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m11_18 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="TypeExtensions.cs", label="Entry HangFire.Server.SchedulePoller.Dispose()", span="44-44"];
m11_19 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="TypeExtensions.cs", label="_redis.Dispose()", span="46-46"];
m11_20 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="TypeExtensions.cs", label="Exit HangFire.Server.SchedulePoller.Dispose()", span="44-44"];
m11_38 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71"];
m11_39 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label=true, span="75-75"];
m11_40 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label="var wasEnqueued = EnqueueNextScheduledJob()", span="77-77"];
m11_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label=Exception, span="88-88"];
m11_41 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="79-79"];
m11_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label="_stopped.WaitOne(_pollInterval)", span="82-82"];
m11_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="90-93"];
m11_45 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="TypeExtensions.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71"];
m11_17 [cluster="Unk.EnqueueScheduledJob", file="TypeExtensions.cs", label="Entry Unk.EnqueueScheduledJob", span=""];
m11_29 [cluster="string.Format(string, object)", file="TypeExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_22 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49"];
m11_23 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="51-51"];
m11_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="56-58"];
m11_27 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="62-66"];
m11_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="52-52"];
m11_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="!String.IsNullOrEmpty(queue)", span="54-54"];
m11_28 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="TypeExtensions.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49"];
m11_53 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="TypeExtensions.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m11_0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="8-8"];
m11_1 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=green, community=0, file="TypeExtensions.cs", label="1: !t.GetTypeInfo().IsGenericType", span="10-10"];
m11_2 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="return t.Name;", span="12-12"];
m11_3 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="var genericTypeName = t.GetGenericTypeDefinition().Name", span="15-15"];
m11_13 [cluster="Unk.Select", file="TypeExtensions.cs", label="Entry Unk.Select", span=""];
m11_31 [cluster="Unk.TryToGetQueue", file="TypeExtensions.cs", label="Entry Unk.TryToGetQueue", span=""];
m11_54 [cluster="System.Threading.EventWaitHandle.Set()", file="TypeExtensions.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m11_35 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="TypeExtensions.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m11_14 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="TypeExtensions.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m11_11 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="return true;", span="41-41"];
m11_36 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TypeExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m11_4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="genericTypeName = genericTypeName.Substring(0, genericTypeName.IndexOf('`'))", span="16-16"];
m11_5 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26"];
m11_6 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="28-28"];
m11_7 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="30-33"];
m11_32 [cluster="string.IsNullOrEmpty(string)", file="TypeExtensions.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_21 [cluster="Unk.Dispose", file="TypeExtensions.cs", label="Entry Unk.Dispose", span=""];
m11_48 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="TypeExtensions.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97"];
m11_49 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="TypeExtensions.cs", label="_cts.Cancel()", span="99-99"];
m11_51 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="TypeExtensions.cs", label="thread.Join()", span="101-101"];
m11_50 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="TypeExtensions.cs", label="_stopped.Set()", span="100-100"];
m11_52 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="TypeExtensions.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97"];
m11_47 [cluster="Unk.Fatal", file="TypeExtensions.cs", label="Entry Unk.Fatal", span=""];
m11_12 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26"];
m11_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="String.IsNullOrEmpty(jobId)", span="35-35"];
m11_15 [cluster="Unk.FirstOrDefault", file="TypeExtensions.cs", label="Entry Unk.FirstOrDefault", span=""];
m11_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="TypeExtensions.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m11_30 [cluster="Unk.GetValueFromHash", file="TypeExtensions.cs", label="Entry Unk.GetValueFromHash", span=""];
m11_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="TypeExtensions.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m11_16 [cluster="Unk.IsNullOrEmpty", file="TypeExtensions.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m11_37 [cluster="Unk.Format", file="TypeExtensions.cs", label="Entry Unk.Format", span=""];
m11_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="return false;", span="37-37"];
m11_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="TypeExtensions.cs", label="EnqueueScheduledJob(jobId)", span="40-40"];
m11_56 [file="TypeExtensions.cs", label="HangFire.Server.SchedulePoller", span=""];
n55 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n55 -> n52  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n56 -> n19  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n57 -> n32  [color=darkseagreen4, key=1, label=string, style=dashed];
n58 -> n32  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n32  [color=darkseagreen4, key=1, label=int, style=dashed];
n60 -> n32  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n61 -> n47  [color=darkseagreen4, key=1, label=string, style=dashed];
n62 -> n47  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n4 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n7 -> n19  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n8 -> n9  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n10 -> n18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n19 -> n22  [key=2, style=dotted];
n19 -> n23  [key=2, style=dotted];
n19 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=0, style=solid];
n9 -> n15  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n16 -> n52  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n14 -> n6  [color=blue, key=0, style=bold];
n20 -> n18  [color=blue, key=0, style=bold];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n24  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [color=darkseagreen4, key=1, label=string, style=dashed];
n27 -> n32  [color=darkseagreen4, key=1, label=string, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n32  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n16  [key=2, style=dotted];
n29 -> n31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n32 -> n23  [key=2, style=dotted];
n32 -> n22  [key=2, style=dotted];
n32 -> n35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n30 -> n27  [color=blue, key=0, style=bold];
n31 -> n32  [key=0, style=solid];
n33 -> n31  [color=blue, key=0, style=bold];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n37 -> n35  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n40 -> n38  [color=blue, key=0, style=bold];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [color=darkseagreen4, key=1, label=string, style=dashed];
n42 -> n47  [color=darkseagreen4, key=1, label=string, style=dashed];
n43 -> n44  [key=0, style=solid];
n43 -> n47  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n16  [key=2, style=dotted];
n44 -> n46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n47 -> n48  [key=0, style=solid];
n47 -> n34  [key=2, style=dotted];
n47 -> n50  [key=2, style=dotted];
n45 -> n42  [color=blue, key=0, style=bold];
n46 -> n47  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [key=2, style=dotted];
n49 -> n46  [color=blue, key=0, style=bold];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=2, style=dotted];
n53 -> n16  [color=blue, key=0, style=bold];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d9  [color=green, key=2, style=dotted];
d25 -> d2  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d1  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d16  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d25 -> d17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d8  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d4 -> d10  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d10  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d11  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d19  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d15 -> d20  [key=2, style=dotted];
d15 -> d21  [key=2, style=dotted];
d15 -> d19  [key=2, style=dotted];
d15 -> d22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d16 -> d17  [key=0, style=solid];
d16 -> d19  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d7 -> d0  [color=blue, key=0, style=bold];
d12 -> d14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
d12 -> d15  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
d12 -> d16  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
d12 -> d17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
d12 -> d13  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d19  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d18 -> d12  [color=blue, key=0, style=bold];
d24 -> d22  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
m0_23 -> m0_64  [key=0, style=solid];
m0_23 -> m0_65  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m0_23 -> m0_20  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=0, style=solid];
m0_64 -> m0_30  [key=2, style=dotted];
m0_64 -> m0_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_65 -> m0_64  [key=0, style=solid];
m0_65 -> m0_67  [key=2, style=dotted];
m0_65 -> m0_39  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_66 -> m0_23  [color=blue, key=0, style=bold];
m0_66 -> m0_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m0_44 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m0_44 -> m0_50  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_44 -> m0_53  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m0_44 -> m0_54  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m0_44 -> m0_58  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m0_44 -> m0_41  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_61  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=0, style=solid];
m0_47 -> m0_60  [key=0, style=solid];
m0_47 -> m0_38  [key=2, style=dotted];
m0_47 -> m0_45  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_57  [key=0, style=solid];
m0_50 -> m0_62  [key=2, style=dotted];
m0_50 -> m0_52  [key=2, style=dotted];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_53 -> m0_38  [key=2, style=dotted];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m0_53 -> m0_58  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m0_54 -> m0_55  [color=green, key=0, style=solid];
m0_54 -> m0_63  [key=2, style=dotted];
m0_54 -> m0_8  [color=green, key=2, style=dotted];
m0_54 -> m0_56  [color=green, key=1, label=options, style=dashed];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_8  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_48  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [key=0, style=solid];
m0_57 -> m0_53  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_57  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m0_55 -> m0_56  [color=green, key=0, style=solid];
m0_55 -> m0_57  [key=0, style=solid];
m0_55 -> m0_58  [color=green, key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=2, style=dotted];
m0_56 -> m0_60  [key=0, style=solid];
m0_56 -> m0_57  [color=green, key=0, style=solid];
m0_56 -> m0_10  [color=green, key=2, style=dotted];
m0_60 -> m0_44  [color=blue, key=0, style=bold];
m0_60 -> m0_8  [color=blue, key=0, style=bold];
m0_30 -> m0_27  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_8  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_13 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_20  [key=0, style=solid];
m0_14 -> m0_21  [key=2, style=dotted];
m0_15 -> m0_12  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_16  [key=2, style=dotted];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_59  [key=0, style=solid];
m0_8 -> m0_11  [key=0, style=solid];
m0_8 -> n5  [key=2, style=dotted];
m0_63 -> m0_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_22  [key=2, style=dotted];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m0_9 -> m0_10  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=2, style=dotted];
m0_35 -> m0_8  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_39  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_35 -> m0_38  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_16  [key=2, style=dotted];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_33  [color=blue, key=0, style=bold];
m0_37 -> m0_34  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_21 -> m0_24  [key=0, style=solid];
m0_21 -> m0_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_34  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_21 -> m0_35  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_21 -> m0_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m0_21 -> m0_8  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_29  [key=2, style=dotted];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m0_24 -> m0_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_31  [key=2, style=dotted];
m0_26 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_32  [key=2, style=dotted];
m0_28 -> m0_21  [color=blue, key=0, style=bold];
m0_28 -> m0_8  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_13  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_16  [key=2, style=dotted];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_23  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=0, style=solid];
m0_18 -> m0_40  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=2, style=dotted];
m0_42 -> m0_8  [key=2, style=dotted];
m0_42 -> m0_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_26  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_40 -> m0_39  [color=blue, key=0, style=bold];
m0_40 -> m0_17  [color=blue, key=0, style=bold];
m0_40 -> m0_38  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_43 -> m0_41  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_16  [key=2, style=dotted];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_11 -> m0_3  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_1 -> m0_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_1 -> m0_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_2 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_9  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m0_3 -> m0_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_7  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_11  [key=2, style=dotted];
m0_6 -> n5  [key=2, style=dotted];
m0_7 -> m0_0  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_62 -> m0_18  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_68 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_68 -> m0_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_68 -> m0_14  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_68 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_69 -> m0_34  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_70 -> m0_35  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_71 -> m0_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m0_72 -> m0_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_73 -> m0_42  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m1_101 -> m1_95  [color=blue, key=0, style=bold];
m1_98 -> m1_100  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_117 -> m1_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_120  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m1_117 -> m1_122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_65  [key=2, style=dotted];
m1_123 -> m1_69  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_125  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [key=0, style=solid];
m1_120 -> m1_122  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_119 -> m1_124  [key=0, style=solid];
m1_119 -> n5  [key=2, style=dotted];
m1_121 -> m1_124  [key=0, style=solid];
m1_121 -> n5  [key=2, style=dotted];
m1_124 -> m1_117  [color=blue, key=0, style=bold];
m1_95 -> m1_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_95 -> m1_97  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_67  [key=2, style=dotted];
m1_100 -> m1_42  [key=2, style=dotted];
m1_96 -> m1_98  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_0  [color=blue, key=0, style=bold];
m1_99 -> m1_101  [key=0, style=solid];
m1_99 -> n5  [key=2, style=dotted];
m1_97 -> m1_101  [key=0, style=solid];
m1_97 -> n5  [key=2, style=dotted];
m1_103 -> m1_105  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_97  [key=2, style=dotted];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_97  [key=2, style=dotted];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> n5  [key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_98  [color=red, key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_97  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_99  [key=2, style=dotted];
m1_5 -> m1_98  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_97  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_99  [key=2, style=dotted];
m1_7 -> m1_98  [key=2, style=dotted];
m1_7 -> m1_9  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_97  [key=2, style=dotted];
m1_8 -> m1_6  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_100  [key=2, style=dotted];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_11 -> m1_101  [key=2, style=dotted];
m1_11 -> m1_21  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_27  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_29  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_35  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_41  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_47  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_53  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_59  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_11 -> m1_13  [color=green, key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_97  [key=2, style=dotted];
m1_12 -> m1_10  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_98  [key=2, style=dotted];
m1_21 -> m1_37  [key=0, style=solid];
m1_21 -> n5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_98  [key=2, style=dotted];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m1_27 -> m1_27  [color=darkorchid, key=3, label="Local variable int currentQueryIndex", style=bold];
m1_27 -> m1_31  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m1_27 -> m1_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_98  [key=2, style=dotted];
m1_29 -> m1_18  [key=2, style=dotted];
m1_29 -> m1_40  [key=2, style=dotted];
m1_29 -> m1_41  [key=2, style=dotted];
m1_29 -> m1_42  [key=2, style=dotted];
m1_29 -> m1_35  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m1_29 -> m1_36  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_98  [key=2, style=dotted];
m1_35 -> m1_27  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_98  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_98  [key=2, style=dotted];
m1_47 -> m1_54  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_47 -> m1_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_47 -> m1_53  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m1_47 -> m1_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_47 -> m1_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_47 -> m1_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_98  [key=2, style=dotted];
m1_53 -> m1_64  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_98  [key=2, style=dotted];
m1_59 -> m1_59  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m1_59 -> m1_58  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_102  [key=2, style=dotted];
m1_13 -> m1_98  [key=2, style=dotted];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_14 -> m1_97  [key=2, style=dotted];
m1_15 -> m1_16  [color=green, key=0, style=solid];
m1_15 -> m1_99  [key=2, style=dotted];
m1_15 -> m1_98  [key=2, style=dotted];
m1_15 -> m1_17  [color=green, key=2, style=dotted];
m1_15 -> m1_18  [color=green, key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_97  [key=2, style=dotted];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_102  [key=2, style=dotted];
m1_17 -> m1_98  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_97  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_99  [key=2, style=dotted];
m1_19 -> m1_98  [key=2, style=dotted];
m1_19 -> m1_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_19 -> m1_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_97  [key=2, style=dotted];
m1_20 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_97  [key=2, style=dotted];
m1_22 -> m1_24  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_103  [key=2, style=dotted];
m1_23 -> m1_98  [key=2, style=dotted];
m1_23 -> m1_37  [key=0, style=solid];
m1_23 -> m1_38  [key=2, style=dotted];
m1_24 -> m1_25  [color=green, key=0, style=solid];
m1_24 -> m1_97  [key=2, style=dotted];
m1_25 -> m1_26  [color=green, key=0, style=solid];
m1_25 -> m1_99  [key=2, style=dotted];
m1_25 -> m1_98  [key=2, style=dotted];
m1_25 -> m1_25  [color=green, key=3, label="Local variable string fetchJobSqlTemplate", style=bold];
m1_25 -> m1_29  [color=green, key=1, label=fetchJobSqlTemplate, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_97  [key=2, style=dotted];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m1_26 -> m1_34  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_97  [key=2, style=dotted];
m1_28 -> m1_28  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_28 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_32  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_97  [key=2, style=dotted];
m1_30 -> m1_34  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_102  [key=2, style=dotted];
m1_31 -> m1_98  [key=2, style=dotted];
m1_31 -> m1_34  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_97  [key=2, style=dotted];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_32 -> m1_43  [key=2, style=dotted];
m1_32 -> m1_44  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_99  [key=2, style=dotted];
m1_33 -> m1_98  [key=2, style=dotted];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_33 -> m1_39  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_97  [key=2, style=dotted];
m1_34 -> m1_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_97  [key=2, style=dotted];
m1_36 -> m1_45  [key=2, style=dotted];
m1_36 -> m1_46  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_102  [key=2, style=dotted];
m1_37 -> m1_98  [key=2, style=dotted];
m1_37 -> m1_19  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_97  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_99  [key=2, style=dotted];
m1_39 -> m1_98  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_97  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_97  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_102  [key=2, style=dotted];
m1_43 -> m1_98  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_97  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_99  [key=2, style=dotted];
m1_45 -> m1_98  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_97  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_97  [key=2, style=dotted];
m1_48 -> m1_50  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_102  [key=2, style=dotted];
m1_49 -> m1_98  [key=2, style=dotted];
m1_49 -> m1_63  [key=0, style=solid];
m1_49 -> n5  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_97  [key=2, style=dotted];
m1_50 -> m1_52  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_99  [key=2, style=dotted];
m1_51 -> m1_98  [key=2, style=dotted];
m1_51 -> m1_63  [key=0, style=solid];
m1_51 -> n5  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_97  [key=2, style=dotted];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m1_52 -> m1_52  [color=darkorchid, key=3, label="Local variable string createJobSql", style=bold];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_97  [key=2, style=dotted];
m1_54 -> m1_65  [key=2, style=dotted];
m1_54 -> m1_66  [key=2, style=dotted];
m1_54 -> m1_67  [key=2, style=dotted];
m1_54 -> m1_68  [key=2, style=dotted];
m1_54 -> m1_46  [key=2, style=dotted];
m1_54 -> m1_59  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_54 -> m1_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_102  [key=2, style=dotted];
m1_55 -> m1_98  [key=2, style=dotted];
m1_55 -> m1_62  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_97  [key=2, style=dotted];
m1_56 -> m1_61  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m1_56 -> m1_59  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_99  [key=2, style=dotted];
m1_57 -> m1_98  [key=2, style=dotted];
m1_57 -> m1_27  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m1_57 -> m1_59  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_97  [key=2, style=dotted];
m1_58 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_97  [key=2, style=dotted];
m1_60 -> m1_60  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_74  [key=0, style=solid];
m1_61 -> m1_69  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_97  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_97  [key=2, style=dotted];
m1_74 -> m1_67  [key=2, style=dotted];
m1_74 -> m1_42  [key=2, style=dotted];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m1_74 -> m1_78  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m1_74 -> m1_84  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_99  [key=2, style=dotted];
m1_63 -> m1_98  [key=2, style=dotted];
m1_63 -> m1_47  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_97  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_71  [key=0, style=solid];
m1_65 -> m1_67  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_97  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_97  [key=2, style=dotted];
m1_71 -> m1_73  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_98  [key=2, style=dotted];
m1_67 -> m1_67  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_97  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_98  [key=2, style=dotted];
m1_69 -> m1_69  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m1_70 -> m1_65  [key=0, style=solid];
m1_70 -> m1_97  [key=2, style=dotted];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_75  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.JobData GetJobData", style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_98  [key=2, style=dotted];
m1_72 -> m1_85  [key=0, style=solid];
m1_72 -> n5  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_97  [key=2, style=dotted];
m1_73 -> m1_73  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_98  [key=2, style=dotted];
m1_75 -> m1_77  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_97  [key=2, style=dotted];
m1_76 -> m1_85  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_81  [key=0, style=solid];
m1_77 -> m1_104  [key=2, style=dotted];
m1_77 -> m1_67  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_97  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_97  [key=2, style=dotted];
m1_81 -> m1_84  [key=0, style=solid];
m1_81 -> m1_86  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_98  [key=2, style=dotted];
m1_79 -> m1_75  [color=darkorchid, key=3, label="Local variable HangFire.Common.Job job", style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_97  [key=2, style=dotted];
m1_80 -> m1_75  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m1_80 -> m1_82  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_105  [key=2, style=dotted];
m1_82 -> m1_98  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_97  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_106  [key=2, style=dotted];
m1_84 -> m1_107  [key=2, style=dotted];
m1_84 -> m1_98  [key=2, style=dotted];
m1_84 -> m1_87  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_97  [key=2, style=dotted];
m1_85 -> m1_70  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_98  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_97  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_98  [key=2, style=dotted];
m1_88 -> m1_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_88 -> m1_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_97  [key=2, style=dotted];
m1_89 -> m1_91  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_108  [key=2, style=dotted];
m1_90 -> m1_94  [key=0, style=solid];
m1_90 -> n5  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_97  [key=2, style=dotted];
m1_91 -> m1_93  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_99  [key=2, style=dotted];
m1_92 -> m1_98  [key=2, style=dotted];
m1_92 -> m1_94  [key=0, style=solid];
m1_92 -> n5  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_97  [key=2, style=dotted];
m1_93 -> m1_69  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_99  [key=2, style=dotted];
m1_94 -> m1_98  [key=2, style=dotted];
m1_94 -> m1_88  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_69  [key=2, style=dotted];
m1_106 -> m1_108  [key=0, style=solid];
m1_106 -> n5  [key=2, style=dotted];
m1_105 -> m1_107  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_139 -> m1_139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_40  [key=2, style=dotted];
m1_139 -> m1_66  [key=2, style=dotted];
m1_139 -> m1_69  [key=2, style=dotted];
m1_137 -> m1_139  [key=0, style=solid];
m1_137 -> m1_137  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_141  [key=2, style=dotted];
m1_138 -> m1_140  [key=0, style=solid];
m1_138 -> m1_38  [key=2, style=dotted];
m1_140 -> m1_136  [color=blue, key=0, style=bold];
m1_104 -> m1_108  [key=0, style=solid];
m1_104 -> n5  [key=2, style=dotted];
m1_102 -> m1_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_108 -> m1_102  [color=blue, key=0, style=bold];
m1_109 -> m1_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_112  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_109 -> m1_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_3  [color=red, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_77  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_83  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_84  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_85  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_86  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_87  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_88  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_89  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_90  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_91  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_92  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_93  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_94  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_109 -> m1_95  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_67  [key=2, style=dotted];
m1_114 -> m1_42  [key=2, style=dotted];
m1_112 -> m1_114  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_113 -> m1_115  [key=0, style=solid];
m1_113 -> m1_116  [key=2, style=dotted];
m1_111 -> m1_115  [key=0, style=solid];
m1_111 -> n5  [key=2, style=dotted];
m1_115 -> m1_109  [color=blue, key=0, style=bold];
m1_126 -> m1_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_126 -> m1_127  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_69  [key=2, style=dotted];
m1_127 -> m1_129  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_128 -> m1_130  [key=0, style=solid];
m1_128 -> n5  [key=2, style=dotted];
m1_130 -> m1_126  [color=blue, key=0, style=bold];
m1_131 -> m1_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_131 -> m1_132  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_69  [key=2, style=dotted];
m1_132 -> m1_134  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_133 -> m1_135  [key=0, style=solid];
m1_133 -> n5  [key=2, style=dotted];
m1_135 -> m1_131  [color=blue, key=0, style=bold];
m1_142 -> m1_11  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_15  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_29  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_54  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_61  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_74  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_93  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_100  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_114  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_123  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_129  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_134  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m1_142 -> m1_139  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_4  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [key=2, style=dotted];
m3_7 -> m3_5  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_6  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_5  [key=2, style=dotted];
m3_17 -> m3_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_18 -> m3_16  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> n34  [key=2, style=dotted];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_19 -> m3_17  [color=blue, key=0, style=bold];
m3_19 -> m3_16  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_23  [key=2, style=dotted];
m3_27 -> m3_29  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_3  [key=2, style=dotted];
m3_46 -> m3_25  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_45  [color=blue, key=0, style=bold];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_5  [key=2, style=dotted];
m3_25 -> m3_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_16  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_5  [key=2, style=dotted];
m3_9 -> m3_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_10 -> m3_4  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_8  [key=2, style=dotted];
m3_10 -> n34  [key=2, style=dotted];
m3_10 -> m3_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_11 -> m3_9  [color=blue, key=0, style=bold];
m3_11 -> m3_8  [color=blue, key=0, style=bold];
m3_15 -> m3_13  [color=blue, key=0, style=bold];
m3_23 -> m3_16  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_20  [color=green, key=0, style=solid];
m3_16 -> m3_22  [color=green, key=1, label=string, style=dashed];
m3_16 -> m3_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_23  [key=2, style=dotted];
m3_28 -> m3_24  [color=blue, key=0, style=bold];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_3  [key=2, style=dotted];
m3_42 -> m3_26  [key=2, style=dotted];
m3_42 -> m3_29  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_44  [key=2, style=dotted];
m3_43 -> m3_41  [color=blue, key=0, style=bold];
m3_33 -> m3_34  [key=0, style=solid];
m3_21 -> m3_22  [color=green, key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_3  [key=2, style=dotted];
m3_21 -> m3_25  [key=2, style=dotted];
m3_20 -> m3_21  [color=green, key=0, style=solid];
m3_20 -> m3_3  [color=green, key=2, style=dotted];
m3_20 -> m3_24  [color=green, key=2, style=dotted];
m3_22 -> m3_20  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [color=green, key=0, style=solid];
m3_22 -> m3_3  [color=green, key=2, style=dotted];
m3_22 -> m3_26  [color=green, key=2, style=dotted];
m3_22 -> m3_27  [color=green, key=2, style=dotted];
m3_22 -> m3_28  [color=green, key=2, style=dotted];
m3_22 -> m3_29  [color=green, key=2, style=dotted];
m3_22 -> m3_30  [color=green, key=1, label="lambda expression", style=dashed];
m3_22 -> m3_33  [color=green, key=1, label="lambda expression", style=dashed];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_32 -> m3_30  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_21  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_33  [color=blue, key=0, style=bold];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_38 -> m3_39  [color=green, key=0, style=solid];
m3_38 -> m3_3  [color=green, key=2, style=dotted];
m3_38 -> m3_40  [color=green, key=2, style=dotted];
m3_37 -> m3_38  [color=green, key=0, style=solid];
m3_37 -> m3_17  [key=2, style=dotted];
m3_39 -> m3_36  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_49 -> m3_3  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_52  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_53  [key=2, style=dotted];
m3_51 -> m3_48  [color=blue, key=0, style=bold];
m3_54 -> m3_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobSteps", style=dashed];
m3_54 -> m3_13  [color=darkseagreen4, key=1, label="HangFire.Tests.JobSteps", style=dashed];
m3_54 -> m3_18  [color=darkseagreen4, key=1, label="HangFire.Tests.JobSteps", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_6  [key=2, style=dotted];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label=innerException, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_9  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_8  [key=2, style=dotted];
m6_5 -> m6_0  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [color=red, key=0, style=solid];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_11 -> m6_7  [color=red, key=2, style=dotted];
m6_11 -> m6_6  [color=red, key=2, style=dotted];
m6_11 -> m6_15  [color=red, key=1, label=exception, style=dashed];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_15 -> m6_16  [color=red, key=0, style=solid];
m6_15 -> m6_22  [color=red, key=2, style=dotted];
m6_13 -> m6_14  [color=red, key=0, style=solid];
m6_13 -> m6_20  [color=red, key=2, style=dotted];
m6_13 -> m6_15  [color=red, key=1, label=stream, style=dashed];
m6_13 -> m6_16  [color=red, key=1, label=stream, style=dashed];
m6_13 -> m6_17  [color=red, key=1, label=stream, style=dashed];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_14 -> m6_21  [color=red, key=2, style=dotted];
m6_14 -> m6_17  [color=red, key=1, label=formatter, style=dashed];
m6_16 -> m6_17  [color=red, key=0, style=solid];
m6_17 -> m6_18  [color=red, key=0, style=solid];
m6_17 -> m6_23  [color=red, key=2, style=dotted];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_18 -> m6_8  [color=red, key=2, style=dotted];
m6_19 -> m6_10  [color=blue, key=0, style=bold];
m7_24 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_31  [color=darkorchid, key=3, label="Local variable object argumentValue", style=bold];
m7_32 -> m7_24  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_19  [key=2, style=dotted];
m7_12 -> m7_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [color=green, key=1, label=bool, style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_5  [key=0, style=solid];
m7_2 -> n5  [key=2, style=dotted];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_9  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.ClientExceptionContext", style=dashed];
m7_19 -> m7_3  [color=green, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_19 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_19 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_19 -> m7_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_19 -> m7_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_19 -> m7_15  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_19 -> m7_16  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_12  [key=2, style=dotted];
m7_7 -> m7_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_8 -> m7_17  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_11  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_5  [color=blue, key=0, style=bold];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_18  [key=2, style=dotted];
m7_10 -> m7_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_10 -> m7_14  [color=darkseagreen4, key=1, label=removedCount, style=dashed];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_19  [key=2, style=dotted];
m7_15 -> m7_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_15 -> m7_12  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_14  [key=0, style=solid];
m7_14 -> m7_9  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_11  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_20  [key=2, style=dotted];
m7_13 -> m7_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_13 -> m7_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_13 -> m7_17  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.ServerExceptionContext", style=dashed];
m7_16 -> m7_7  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_29  [key=2, style=dotted];
m7_27 -> m7_30  [key=2, style=dotted];
m7_28 -> m7_26  [color=blue, key=0, style=bold];
m7_18 -> m7_13  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=2, style=dotted];
m7_22 -> m7_25  [key=2, style=dotted];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m7_33 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m7_33 -> m7_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m7_33 -> m7_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m7_33 -> m7_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m7_33 -> m7_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_0  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_21  [key=2, style=dotted];
m8_5 -> m8_7  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_9  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_12  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_15  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_16  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_17  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_17  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_2 -> m8_19  [key=0, style=solid];
m8_2 -> n5  [key=2, style=dotted];
m8_4 -> m8_19  [key=0, style=solid];
m8_4 -> n5  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_22  [key=2, style=dotted];
m8_7 -> m8_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_22  [key=2, style=dotted];
m8_9 -> m8_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_10 -> m8_17  [key=0, style=solid];
m8_10 -> m8_22  [key=2, style=dotted];
m8_10 -> m8_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_22  [key=2, style=dotted];
m8_12 -> m8_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_22  [key=2, style=dotted];
m8_13 -> m8_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_22  [key=2, style=dotted];
m8_15 -> m8_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_25  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_23  [key=2, style=dotted];
m8_8 -> m8_24  [key=2, style=dotted];
m8_8 -> m8_31  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_8 -> m8_10  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_8 -> m8_34  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_23  [key=2, style=dotted];
m8_14 -> m8_24  [key=2, style=dotted];
m8_14 -> m8_45  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_14 -> m8_48  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_19 -> m8_0  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_29  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=2, style=dotted];
m8_34 -> m8_37  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_29  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_36  [key=2, style=dotted];
m8_48 -> m8_37  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_23  [key=2, style=dotted];
m8_27 -> m8_24  [key=2, style=dotted];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_32 -> m8_30  [color=blue, key=0, style=bold];
m8_35 -> m8_33  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_23  [key=2, style=dotted];
m8_39 -> m8_24  [key=2, style=dotted];
m8_39 -> m8_29  [key=2, style=dotted];
m8_40 -> m8_38  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_23  [key=2, style=dotted];
m8_42 -> m8_24  [key=2, style=dotted];
m8_42 -> m8_29  [key=2, style=dotted];
m8_43 -> m8_41  [color=blue, key=0, style=bold];
m8_46 -> m8_44  [color=blue, key=0, style=bold];
m8_49 -> m8_47  [color=blue, key=0, style=bold];
m8_50 -> m8_31  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_50 -> m8_34  [color=darkseagreen4, key=1, label=hourlySucceededKey, style=dashed];
m8_51 -> m8_45  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m8_51 -> m8_48  [color=darkseagreen4, key=1, label=hourlyFailedKey, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_39  [key=2, style=dotted];
m9_37 -> m9_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_7  [key=2, style=dotted];
m9_38 -> m9_35  [color=blue, key=0, style=bold];
m9_22 -> m9_16  [color=blue, key=0, style=bold];
m9_83 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_26  [key=2, style=dotted];
m9_128 -> m9_83  [color=blue, key=0, style=bold];
m9_15 -> m9_13  [color=blue, key=0, style=bold];
m9_61 -> m9_62  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_65  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_57  [key=2, style=dotted];
m9_63 -> m9_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_64 -> m9_61  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=2, style=dotted];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m9_0 -> m9_6  [color=darkseagreen4, key=1, label=CrontabSchedule, style=dashed];
m9_0 -> m9_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_1 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_3 -> m9_9  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_12  [key=2, style=dotted];
m9_5 -> m9_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [color=red, key=0, style=solid];
m9_7 -> m9_12  [key=2, style=dotted];
m9_2 -> m9_9  [key=0, style=solid];
m9_2 -> n5  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_8  [key=2, style=dotted];
m9_4 -> m9_9  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_10  [key=2, style=dotted];
m9_8 -> m9_9  [color=red, key=0, style=solid];
m9_8 -> m9_13  [color=red, key=2, style=dotted];
m9_8 -> m9_14  [color=red, key=2, style=dotted];
m9_8 -> m9_15  [color=red, key=2, style=dotted];
m9_9 -> m9_0  [color=blue, key=0, style=bold];
m9_69 -> m9_70  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_73  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_57  [key=2, style=dotted];
m9_71 -> m9_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_72 -> m9_69  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_12  [key=2, style=dotted];
m9_19 -> m9_21  [color=darkseagreen4, key=1, label=baseTime, style=dashed];
m9_19 -> m9_22  [key=2, style=dotted];
m9_18 -> m9_22  [key=0, style=solid];
m9_18 -> m9_11  [key=2, style=dotted];
m9_18 -> m9_21  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_12  [key=2, style=dotted];
m9_20 -> m9_17  [color=blue, key=0, style=bold];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_13  [key=2, style=dotted];
m9_21 -> m9_23  [key=2, style=dotted];
m9_21 -> m9_24  [key=2, style=dotted];
m9_21 -> m9_25  [key=2, style=dotted];
m9_21 -> m9_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_111 -> m9_112  [key=0, style=solid];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_11  [key=2, style=dotted];
m9_113 -> m9_12  [key=2, style=dotted];
m9_113 -> m9_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_83  [key=2, style=dotted];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_119  [key=2, style=dotted];
m9_112 -> m9_117  [color=darkseagreen4, key=1, label=storageComponent, style=dashed];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_94  [key=2, style=dotted];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_96  [key=2, style=dotted];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_98  [key=2, style=dotted];
m9_116 -> m9_95  [key=2, style=dotted];
m9_116 -> m9_99  [key=2, style=dotted];
m9_116 -> m9_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_118 -> m9_111  [color=blue, key=0, style=bold];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_7  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_39  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_47 -> m9_44  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_83  [key=2, style=dotted];
m9_81 -> m9_21  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_79 -> m9_81  [color=darkseagreen4, key=1, label=runner, style=dashed];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_84  [key=2, style=dotted];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_85  [key=2, style=dotted];
m9_82 -> m9_77  [color=blue, key=0, style=bold];
m9_23 -> m9_24  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_56  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_57  [key=2, style=dotted];
m9_54 -> m9_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_55 -> m9_52  [color=blue, key=0, style=bold];
m9_124 -> m9_125  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_28  [color=green, key=0, style=solid];
m9_27 -> m9_15  [key=2, style=dotted];
m9_28 -> m9_26  [color=blue, key=0, style=bold];
m9_28 -> m9_29  [color=green, key=0, style=solid];
m9_28 -> m9_21  [color=green, key=2, style=dotted];
m9_28 -> m9_31  [color=green, key=1, label="lambda expression", style=dashed];
m9_31 -> m9_32  [color=green, key=0, style=solid];
m9_32 -> m9_33  [color=green, key=0, style=solid];
m9_32 -> m9_34  [color=green, key=2, style=dotted];
m9_33 -> m9_31  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_43  [key=2, style=dotted];
m9_25 -> m9_23  [color=blue, key=0, style=bold];
m9_40 -> m9_41  [key=0, style=solid];
m9_42 -> m9_40  [color=blue, key=0, style=bold];
m9_58 -> m9_59  [key=0, style=solid];
m9_66 -> m9_67  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_120 -> m9_121  [key=0, style=solid];
m9_59 -> m9_56  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_60 -> m9_58  [color=blue, key=0, style=bold];
m9_67 -> m9_65  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_68 -> m9_66  [color=blue, key=0, style=bold];
m9_75 -> m9_73  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_74  [color=blue, key=0, style=bold];
m9_122 -> m9_120  [color=blue, key=0, style=bold];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_123  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_100 -> m9_101  [key=0, style=solid];
m9_104 -> m9_105  [key=0, style=solid];
m9_107 -> m9_108  [key=0, style=solid];
m9_50 -> m9_48  [color=blue, key=0, style=bold];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_51  [key=2, style=dotted];
m9_102 -> m9_100  [color=blue, key=0, style=bold];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_103  [key=2, style=dotted];
m9_106 -> m9_104  [color=blue, key=0, style=bold];
m9_105 -> m9_106  [key=0, style=solid];
m9_109 -> m9_107  [color=blue, key=0, style=bold];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_110  [key=2, style=dotted];
m9_125 -> m9_126  [key=0, style=solid];
m9_126 -> m9_124  [color=blue, key=0, style=bold];
m9_29 -> m9_30  [color=green, key=0, style=solid];
m9_29 -> m9_22  [color=green, key=2, style=dotted];
m9_29 -> m9_5  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_8  [color=red, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_19  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_20  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_21  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_29 -> m9_27  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m9_30 -> m9_27  [color=blue, key=0, style=bold];
m9_86 -> m9_87  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_83  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_94  [key=2, style=dotted];
m9_88 -> m9_90  [color=darkseagreen4, key=1, label=runners, style=dashed];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_95  [key=2, style=dotted];
m9_89 -> m9_96  [key=2, style=dotted];
m9_89 -> m9_97  [key=2, style=dotted];
m9_89 -> m9_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_98  [key=2, style=dotted];
m9_90 -> m9_95  [key=2, style=dotted];
m9_90 -> m9_99  [key=2, style=dotted];
m9_90 -> m9_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_90 -> m9_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_90 -> m9_92  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_96  [key=2, style=dotted];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_96  [key=2, style=dotted];
m9_93 -> m9_86  [color=blue, key=0, style=bold];
m9_129 -> m9_28  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_32  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_71  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m9_129 -> m9_127  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [key=2, style=dotted];
m11_20 -> m11_18  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [key=0, style=solid];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_43  [key=0, style=solid];
m11_39 -> m11_45  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_5  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_39  [key=0, style=solid];
m11_42 -> m11_39  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_45  [key=0, style=solid];
m11_42 -> m11_46  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_47  [key=2, style=dotted];
m11_45 -> m11_38  [color=blue, key=0, style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_22 -> m11_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_29  [key=2, style=dotted];
m11_23 -> m11_30  [key=2, style=dotted];
m11_23 -> m11_27  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m11_26 -> m11_28  [key=0, style=solid];
m11_26 -> m11_33  [key=2, style=dotted];
m11_26 -> m11_34  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_35  [key=2, style=dotted];
m11_27 -> m11_36  [key=2, style=dotted];
m11_27 -> m11_37  [key=2, style=dotted];
m11_27 -> m11_34  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_31  [key=2, style=dotted];
m11_24 -> m11_26  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_27  [key=0, style=solid];
m11_25 -> m11_32  [key=2, style=dotted];
m11_28 -> m11_22  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_0 -> m11_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_1 -> m11_3  [color=green, key=0, style=solid];
m11_1 -> m11_8  [color=green, key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=0, style=solid];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_9  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_4  [color=darkseagreen4, key=1, label=genericTypeName, style=dashed];
m11_4 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_11  [key=2, style=dotted];
m11_4 -> m11_6  [color=darkseagreen4, key=1, label=genericTypeName, style=dashed];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_12  [key=2, style=dotted];
m11_5 -> m11_13  [key=2, style=dotted];
m11_5 -> m11_14  [key=2, style=dotted];
m11_5 -> d21  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_13  [key=2, style=dotted];
m11_7 -> m11_0  [color=blue, key=0, style=bold];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_14  [key=2, style=dotted];
m11_7 -> m11_15  [key=2, style=dotted];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_51  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_53  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_55  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_54  [key=2, style=dotted];
m11_52 -> m11_48  [color=blue, key=0, style=bold];
m11_12 -> m11_5  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_8 -> m11_16  [key=2, style=dotted];
m11_9 -> m11_12  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_17  [key=2, style=dotted];
m11_56 -> m11_1  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_2  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_7  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_10  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_19  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_23  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_26  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_27  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_40  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_41  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_42  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_44  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_49  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m11_56 -> m11_50  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
}
