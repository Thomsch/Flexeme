digraph  {
n64 [label="HangFire.Server.RecurringJobScheduler", span=""];
n0 [label="Entry HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n1 [label="storage == null", span="42-42", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n3 [label="client == null", span="43-43", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n5 [label="dateTimeProvider == null", span="44-44", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n7 [label="_storage = storage", span="46-46", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", color=red, community=0];
n8 [label="_client = client", span="47-47", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n9 [label="_dateTimeProvider = dateTimeProvider", span="48-48", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n2 [label="throw new ArgumentNullException(''storage'');", span="42-42", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n4 [label="throw new ArgumentNullException(''client'');", span="43-43", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n6 [label="throw new ArgumentNullException(''dateTimeProvider'');", span="44-44", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n10 [label="Exit HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)"];
n11 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n12 [label="Entry HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n13 [label="_dateTimeProvider.CurrentDateTime.Second != 0", span="53-53", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n14 [label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(1))", span="55-55", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n16 [label="var connection = _storage.GetConnection()", span="59-59", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n15 [label="cancellationToken.ThrowIfCancellationRequested()", span="56-56", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n26 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n27 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)"];
n28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()"];
n17 [label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="60-60", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n29 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()"];
n18 [label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="62-62", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n20 [label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="66-67", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n22 [label="TryScheduleJob(connection, recurringJobId, recurringJob)", span="76-76", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n30 [label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)"];
n19 [label=recurringJobIds, span="64-64", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n31 [label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)"];
n25 [label="Exit HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n24 [label="Logger.WarnFormat(''Recurring job '{0}' can not be scheduled due to job load exception.'', ex, recurringJobId)", span="80-80", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n21 [label="recurringJob == null", span="69-69", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n33 [label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)"];
n23 [label=JobLoadException, span="78-78", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)"];
n34 [label="Entry HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n35 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat"];
n36 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="89-89", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n38 [label="var cron = recurringJob[''Cron'']", span="91-91", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n41 [label="recurringJob.ContainsKey(''NextExecution'')", span="96-96", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n42 [label="var nextExecution = JobHelper.DeserializeDateTime(recurringJob[''NextExecution''])", span="98-98", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n46 [label="connection.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        new Dictionary<string, string>\r\n                        {\r\n                            { ''LastExecution'', JobHelper.SerializeDateTime(currentTime) },\r\n                            { ''LastJobId'', jobId },\r\n                            { ''NextExecution'', JobHelper.SerializeDateTime(_dateTimeProvider.GetNextOccurrence(cronSchedule)) }\r\n                        })", span="105-112", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n48 [label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''NextExecution'', JobHelper.SerializeDateTime(nextExecution) }\r\n                    })", span="119-124", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n37 [label="var job = serializedJob.Deserialize()", span="90-90", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n50 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)"];
n51 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()"];
n45 [label="var jobId = _client.Create(job, state)", span="103-103", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n39 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="92-92", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n40 [label="var currentTime = _dateTimeProvider.CurrentDateTime", span="94-94", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n52 [label="Entry Unk.Parse", span="", cluster="Unk.Parse"];
n47 [label="var nextExecution = _dateTimeProvider.GetNextOccurrence(cronSchedule)", span="117-117", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n43 [label="nextExecution <= currentTime", span="100-100", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n53 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n54 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)"];
n44 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="102-102", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n49 [label="Exit HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)"];
n55 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()"];
n56 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)"];
n59 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence"];
n57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n58 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)"];
n60 [label="Entry HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n61 [label="Entry HangFire.Server.RecurringJobScheduler.ToString()", span="128-128", cluster="HangFire.Server.RecurringJobScheduler.ToString()"];
n62 [label="return ''Recurring Job Scheduler'';", span="130-130", cluster="HangFire.Server.RecurringJobScheduler.ToString()"];
n63 [label="Exit HangFire.Server.RecurringJobScheduler.ToString()", span="128-128", cluster="HangFire.Server.RecurringJobScheduler.ToString()"];
d9 [label="_connection.Dispose()", span="27-27", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0];
d59 [label="HangFire.SqlServer.SqlServerConnection", span=""];
d8 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="25-25", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()"];
d10 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="25-25", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()"];
d11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose"];
d1 [label="_connection = connection", span="19-19", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)"];
d2 [label="Jobs = new SqlServerJob(_connection)", span="20-20", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)"];
d3 [label="Sets = new SqlServerSet(_connection)", span="21-21", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)"];
d4 [label="Storage = storage", span="22-22", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)"];
d13 [label="return new SqlServerWriteOnlyTransaction(_connection);", span="32-32", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
d17 [label="return new SqlServerFetcher(_connection, queueNames);", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)"];
d21 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="42-44", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)"];
d27 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="62-71", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d34 [label="_connection.Execute(insertParameterSql, parameterArray)", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d45 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="106-112", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)"];
d50 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="117-119", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d53 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="124-126", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d56 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="131-133", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)"];
d6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerJob.SqlServerJob(SqlConnection)", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerJob.SqlServerJob(SqlConnection)"];
d7 [label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)"];
d5 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)"];
d12 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="30-30", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
d14 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="30-30", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
d15 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)"];
d16 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)"];
d18 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)"];
d19 [label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21", cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)"];
d20 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)"];
d22 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)"];
d23 [label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="28-28", cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)"];
d24 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d25 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d26 [label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="57-60", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d28 [label="parameters.Count > 0", span="73-73", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d37 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)"];
d38 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
d39 [label="Entry Unk.>", span="", cluster="Unk.>"];
d40 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
d41 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
d32 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="79-84", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d35 [label="return jobId;", span="94-94", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d29 [label="var parameterArray = new object[parameters.Count]", span="75-75", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d33 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="87-89", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d42 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
d43 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="97-97", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)"];
d44 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="99-104", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)"];
d46 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="97-97", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)"];
d49 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d51 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)"];
d52 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d54 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)"];
d55 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d57 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
d58 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()"];
d36 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d31 [label=parameters, span="77-77", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d30 [label="int parameterIndex = 0", span="76-76", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
d47 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()"];
d48 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
m0_86 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_87 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<OperationCanceledException>()", span="92-92", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_88 [label="var wrapper = CreateWrapper()", span="93-93", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_89 [label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="95-95", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_90 [label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="97-97", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_91 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_25 [label="wrapper.Execute(_cts.Token)", span="45-45", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", color=green, community=0];
m0_17 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_18 [label="var wrapper = CreateWrapper()", span="35-35", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", color=red, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_19 [label="Assert.Same(_component.Object, wrapper.InnerProcess)", span="37-37", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs", color=green, community=0];
m0_22 [label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_26 [label="_component.Verify(x => x.Execute(It.Is<CancellationToken>(y => y == _cts.Token)))", span="47-47", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", color=green, community=0];
m0_7 [label="throw new ArgumentNullException(''jobId'');", span="43-43", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_9 [label="throw new ArgumentNullException(''jobMethod'');", span="44-44", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_8 [label="jobMethod == null", span="44-44", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_10 [label="Connection = connection", span="46-46", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_12 [label="JobMethod = jobMethod", span="48-48", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_0 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_1 [label="_component = new Mock<IServerComponent>()", span="17-17", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", color=green, community=0];
m0_2 [label="_maxRetryAttempts = 3", span="18-18", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_21 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_23 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_24 [label="var wrapper = CreateWrapper()", span="43-43", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_76 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_11 [label="JobId = jobId", span="47-47", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs", color=red, community=0];
m0_3 [label="_cts = new CancellationTokenSource()", span="19-19", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", color=green, community=0];
m0_4 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_6 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_5 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_13 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_14 [label="new AutomaticRetryProcess(null)", span="27-27", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_27 [label="HangFire.Server.Performing.PerformContext", span="", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_103 [label="Entry AutomaticRetryProcess.cstr", span="", cluster="AutomaticRetryProcess.cstr", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_53 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_55 [label="_maxRetryAttempts = 0", span="67-67", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_54 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="66-66", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_56 [label="var wrapper = CreateWrapper()", span="68-68", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_57 [label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="70-70", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_58 [label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="72-74", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_59 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_42 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_83 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_30 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_31 [label="x.Execute(It.Is<CancellationToken>(y => y == _cts.Token))", span="47-47", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_32 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_33 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_34 [label="y == _cts.Token", span="47-47", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_35 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_44 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_48 [label="wrapper.Execute(_cts.Token)", span="56-56", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_47 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_49 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_50 [label="Entry lambda expression", span="58-59", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_45 [label="x.Execute(It.IsAny<CancellationToken>())", span="53-53", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_46 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_51 [label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="58-59", cluster="lambda expression", color=green, community=1, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_52 [label="Exit lambda expression", span="58-59", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_63 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_64 [label="wrapper.Execute(_cts.Token)", span="70-70", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_65 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_77 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_80 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_81 [label="wrapper.Execute(_cts.Token)", span="84-84", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_82 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_78 [label="x.Execute(It.IsAny<CancellationToken>())", span="81-81", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_79 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_92 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_96 [label="wrapper.Execute(_cts.Token)", span="95-95", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_95 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_97 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_98 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_93 [label="x.Execute(It.IsAny<CancellationToken>())", span="92-92", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_94 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_99 [label="x.Execute(It.IsAny<CancellationToken>())", span="97-97", cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_100 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_61 [label="x.Execute(It.IsAny<CancellationToken>())", span="66-66", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_67 [label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="72-73", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_84 [label="x.Execute(It.IsAny<CancellationToken>())", span="86-86", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_60 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_66 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_15 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_62 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_68 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_85 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_43 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_36 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_37 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="53-53", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_38 [label="var wrapper = CreateWrapper()", span="54-54", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_39 [label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="56-56", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_40 [label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="58-60", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_41 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_69 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_71 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="81-81", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_70 [label="var wrapper = CreateWrapper()", span="80-80", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_72 [label="_cts.Cancel()", span="82-82", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_73 [label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="84-84", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_74 [label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="86-86", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_75 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_20 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_101 [label="return new AutomaticRetryProcess(_component.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="102-106", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_102 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_113 [label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", span="", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_114 [label=wrapper, span="", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_115 [label=wrapper, span="", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_116 [label=wrapper, span="", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m0_117 [label=wrapper, span="", file="AutomaticRetryServerComponentWrapperFacts.cs"];
m1_33 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="BackgroundJobServer.cs"];
m1_51 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="BackgroundJobServer.cs"];
m1_81 [label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="BackgroundJobServer.cs"];
m1_84 [label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="BackgroundJobServer.cs"];
m1_52 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="BackgroundJobServer.cs"];
m1_14 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="BackgroundJobServer.cs"];
m1_78 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="BackgroundJobServer.cs"];
m1_34 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="BackgroundJobServer.cs"];
m1_13 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BackgroundJobServer.cs"];
m1_25 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="BackgroundJobServer.cs"];
m1_48 [label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServer.cs"];
m1_19 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundJobServer.cs"];
m1_10 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="BackgroundJobServer.cs"];
m1_0 [label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_1 [label="_redis = redisManager.GetClient()", span="37-37", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_3 [label="_manager = manager", span="40-40", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_4 [label="_context = context", span="41-41", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_2 [label="_stateMachine = new StateMachine(_redis)", span="38-38", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_5 [label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="43-43", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_6 [label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="45-49", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_7 [label="_thread.Start()", span="50-50", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_8 [label="Exit HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs"];
m1_12 [label="Entry Unk.GetLogger", span="", cluster="Unk.GetLogger", file="BackgroundJobServer.cs"];
m1_49 [label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m1_36 [label="Entry HangFire.Server.Worker.DoWork()", span="101-101", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_37 [label=true, span="105-105", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_38 [label="_manager.NotifyReady(this)", span="107-107", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_43 [label=OperationCanceledException, span="117-117", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_44 [label=Exception, span="120-120", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_39 [label="_jobIsReady.Wait(_cts.Token)", span="108-108", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_40 [label=_jobLock, span="110-110", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_41 [label="PerformJob(_jobPayload)", span="112-112", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_42 [label="_jobIsReady.Reset()", span="113-113", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_45 [label="Crashed = true", span="122-122", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_46 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="123-126", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_47 [label="Exit HangFire.Server.Worker.DoWork()", span="101-101", cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs"];
m1_79 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_85 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="BackgroundJobServer.cs"];
m1_9 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="BackgroundJobServer.cs"];
m1_76 [label="Entry Unk.Warn", span="", cluster="Unk.Warn", file="BackgroundJobServer.cs"];
m1_77 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="BackgroundJobServer.cs"];
m1_75 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJobServer.cs"];
m1_80 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="BackgroundJobServer.cs"];
m1_53 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="BackgroundJobServer.cs"];
m1_83 [label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string)", file="BackgroundJobServer.cs"];
m1_15 [label="Entry HangFire.Server.Worker.SendStop()", span="53-53", cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs"];
m1_16 [label="_stopSent = true", span="55-55", cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs"];
m1_17 [label="_cts.Cancel()", span="56-56", cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs"];
m1_18 [label="Exit HangFire.Server.Worker.SendStop()", span="53-53", cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs"];
m1_50 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="131-131", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_54 [label="String.IsNullOrEmpty(payload.Type)", span="133-133", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_55 [label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="135-137", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_58 [label="!_stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name)", span="143-143", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_62 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="158-159", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_67 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="170-172", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_72 [label="_stateMachine.ChangeState(payload.Id, state, ProcessingState.Name)", span="192-192", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_73 [label="JobFetcher.RemoveFromFetchedQueue(\r\n                _redis, payload.Id, payload.Queue)", span="199-200", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_57 [label="var processingState = new ProcessingState(''Worker has started processing.'', _context.ServerName)", span="142-142", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_56 [label="return;", span="139-139", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_59 [label="return;", span="145-145", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_60 [label="Exception exception = null", span="153-153", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_61 [label="ServerJobDescriptor jobDescriptor = null", span="155-155", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_63 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="161-162", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_64 [label="_context.Performer.PerformJob(performContext)", span="164-164", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_65 [label=Exception, span="166-166", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_68 [label="JobState state", span="182-182", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_66 [label="exception = ex", span="168-168", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_69 [label="exception == null", span="183-183", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_71 [label="state = new FailedState(''The job has been failed.'', exception)", span="189-189", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_70 [label="state = new SucceededState(''The job has been completed successfully.'')", span="185-185", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_74 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="131-131", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_26 [label="Entry HangFire.Server.Worker.Dispose()", span="87-87", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs"];
m1_27 [label="!_stopSent", span="89-89", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs"];
m1_28 [label="SendStop()", span="91-91", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs"];
m1_29 [label="_thread.Join()", span="94-94", cluster="HangFire.Server.Worker.Dispose()", color=red, community=0, file="BackgroundJobServer.cs"];
m1_30 [label="_cts.Dispose()", span="96-96", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs"];
m1_31 [label="_jobIsReady.Dispose()", span="97-97", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs"];
m1_32 [label="Exit HangFire.Server.Worker.Dispose()", span="87-87", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs"];
m1_82 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="BackgroundJobServer.cs"];
m1_35 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="BackgroundJobServer.cs"];
m1_20 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_21 [label=_jobLock, span="79-79", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_22 [label="_jobPayload = payload", span="81-81", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_23 [label="_jobIsReady.Set()", span="84-84", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_24 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs"];
m1_86 [label="HangFire.Server.Worker", span="", file="BackgroundJobServer.cs"];
m3_42 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="BackgroundJobServerOptions.cs"];
m3_65 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="BackgroundJobServerOptions.cs"];
m3_22 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m3_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServerOptions.cs"];
m3_62 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="BackgroundJobServerOptions.cs"];
m3_21 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BackgroundJobServerOptions.cs"];
m3_45 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_46 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_29 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundJobServerOptions.cs"];
m3_47 [label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServerOptions.cs"];
m3_48 [label="_freeWorkers.Add(worker)", span="87-87", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServerOptions.cs"];
m3_49 [label="Exit HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServerOptions.cs"];
m3_16 [label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="87-87", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_17 [label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="88-88", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_8 [label="_logger.Info(''Workers were started.'')", span="39-39", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_10 [label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", span="44-48", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_51 [label="Entry HangFire.Server.JobManager.Work()", span="90-90", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_54 [label="worker = _freeWorkers.Take(_cts.Token)", span="99-99", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_56 [label="var jobId = _fetcher.DequeueJob(_cts.Token)", span="103-103", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_60 [label="_logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs  will not be processed by this server.''),\r\n                    ex)", span="113-116", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_53 [label="Worker worker", span="96-96", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_55 [label="worker.Crashed", span="101-101", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_57 [label="worker.Process(jobId)", span="104-104", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_59 [label=Exception, span="111-111", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_52 [label=true, span="94-94", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_58 [label=OperationCanceledException, span="107-107", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_61 [label="Exit HangFire.Server.JobManager.Work()", span="90-90", cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs"];
m3_63 [label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="7-7", cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobServerOptions.cs"];
m3_9 [label="_fetcher = new PrioritizedJobFetcher(\r\n                redisManager, queues, workerCount)", span="41-42", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", color=green, community=0];
m3_12 [label="Exit HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_13 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="BackgroundJobServerOptions.cs"];
m3_14 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="BackgroundJobServerOptions.cs"];
m3_15 [label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="86-86", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs"];
m3_18 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="9-9", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="BackgroundJobServerOptions.cs"];
m3_50 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="BackgroundJobServerOptions.cs"];
m3_19 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobServerOptions.cs"];
m3_66 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="BackgroundJobServerOptions.cs"];
m3_0 [label="Entry HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_1 [label="_workers = new List<Worker>(workerCount)", span="28-28", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_2 [label="_freeWorkers = new BlockingCollection<Worker>()", span="29-29", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="BackgroundJobServerOptions.cs"];
m3_3 [label="_logger.Info(String.Format(''Starting {0} workers...'', workerCount))", span="31-31", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_4 [label="var i = 0", span="33-33", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_5 [label="i < workerCount", span="33-33", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_6 [label="_workers.Add(\r\n                    new Worker(redisManager, this, new WorkerContext(context, i)))", span="35-36", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_7 [label="i++", span="33-33", cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs"];
m3_23 [label="Entry HangFire.Server.JobManager.SendStop()", span="52-52", cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_24 [label="_stopSent = true", span="54-54", cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_30 [label="Entry HangFire.Server.Worker.SendStop()", span="53-53", cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_25 [label="Hangfire.BackgroundJobServerOptions", span="", cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_26 [label=_workers, span="58-58", cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_27 [label="worker.SendStop()", span="60-60", cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_28 [label="Exit HangFire.Server.JobManager.SendStop()", span="52-52", cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs"];
m3_11 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="BackgroundJobServerOptions.cs"];
m3_31 [label="Entry HangFire.Server.JobManager.Dispose()", span="64-64", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_32 [label="!_stopSent", span="66-66", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_33 [label="SendStop()", span="68-68", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_34 [label="_managerThread.Join()", span="71-71", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_35 [label=_workers, span="73-73", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_37 [label="_logger.Info(''Workers were stopped.'')", span="77-77", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_38 [label="_fetcher.Dispose()", span="79-79", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_39 [label="_freeWorkers.Dispose()", span="81-81", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_40 [label="_cts.Dispose()", span="82-82", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_36 [label="worker.Dispose()", span="75-75", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_41 [label="Exit HangFire.Server.JobManager.Dispose()", span="64-64", cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_44 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_43 [label="Entry HangFire.Server.Worker.Dispose()", span="87-87", cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServerOptions.cs"];
m3_64 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServerOptions.cs"];
m3_67 [label="HangFire.Server.JobManager", span="", file="BackgroundJobServerOptions.cs"];
m5_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="BackgroundProcessContext.cs"];
m5_0 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_1 [label="serverId == null", span="30-30", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_3 [label="storage == null", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_6 [label="ServerId = serverId", span="35-35", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_7 [label="Storage = storage", span="36-36", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_8 [label="CancellationToken = cancellationToken", span="37-37", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_2 [label="throw new ArgumentNullException(''serverId'');", span="30-30", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_4 [label="throw new ArgumentNullException(''storage'');", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_5 [label="Properties = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", color=green, community=0, file="BackgroundProcessContext.cs"];
m5_9 [label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs"];
m5_12 [label="Hangfire.Server.BackgroundProcessContext", span="", file="BackgroundProcessContext.cs"];
m6_16 [label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="BackgroundProcessContextFacts.cs"];
m6_17 [label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="BackgroundProcessContextFacts.cs"];
m6_18 [label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="BackgroundProcessContextFacts.cs"];
m6_58 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundProcessContextFacts.cs"];
m6_190 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_191 [label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="290-293", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_192 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (method, job, state) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="295-305", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_193 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_413 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="BackgroundProcessContextFacts.cs"];
m6_208 [label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="372-372", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_243 [label="var endDate = DateTime.UtcNow", span="375-375", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_250 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="383-383", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_251 [label="var valuesMap = redis.GetValuesMap(keys)", span="384-384", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_252 [label="var result = new Dictionary<DateTime, long>()", span="386-386", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_245 [label="var i = 0", span="377-377", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_254 [label="i < dates.Count", span="387-387", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_247 [label="dates.Add(endDate)", span="379-379", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_260 [label="return result;", span="398-398", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_244 [label="var dates = new List<DateTime>()", span="376-376", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_248 [label="endDate = endDate.AddHours(-1)", span="380-380", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_246 [label="i < 24", span="377-377", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_256 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="390-390", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_253 [label="var i = 0", span="387-387", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_258 [label="result.Add(dates[i], value)", span="395-395", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_249 [label="i++", span="377-377", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_259 [label="i++", span="387-387", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_255 [label="long value", span="389-389", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_257 [label="value = 0", span="392-392", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_261 [label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="372-372", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_204 [label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="BackgroundProcessContextFacts.cs"];
m6_92 [label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="401-401", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_272 [label="var endDate = DateTime.UtcNow.Date", span="404-404", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_279 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="415-415", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_280 [label="var valuesMap = redis.GetValuesMap(keys)", span="417-417", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_281 [label="var result = new Dictionary<DateTime, long>()", span="419-419", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_278 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="414-414", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_289 [label="return result;", span="430-430", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_273 [label="var startDate = endDate.AddDays(-7)", span="405-405", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_275 [label="startDate <= endDate", span="408-408", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_276 [label="dates.Add(endDate)", span="410-410", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_277 [label="endDate = endDate.AddDays(-1)", span="411-411", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_285 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="423-423", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_282 [label="var i = 0", span="420-420", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_287 [label="result.Add(dates[i], value)", span="427-427", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_283 [label="i < stringDates.Count", span="420-420", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_274 [label="var dates = new List<DateTime>()", span="406-406", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_284 [label="long value", span="422-422", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_286 [label="value = 0", span="425-425", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_288 [label="i++", span="420-420", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_290 [label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="401-401", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs"];
m6_129 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="BackgroundProcessContextFacts.cs"];
m6_265 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="BackgroundProcessContextFacts.cs"];
m6_37 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="BackgroundProcessContextFacts.cs"];
m6_85 [label="Entry KeyValuePair<string, ScheduleDto>.cstr", span="", cluster="KeyValuePair<string, ScheduleDto>.cstr", file="BackgroundProcessContextFacts.cs"];
m6_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BackgroundProcessContextFacts.cs"];
m6_38 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="BackgroundProcessContextFacts.cs"];
m6_128 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="BackgroundProcessContextFacts.cs"];
m6_209 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="BackgroundProcessContextFacts.cs"];
m6_210 [label="return GetHourlyTimelineStats(_redis, ''failed'');", span="336-336", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="BackgroundProcessContextFacts.cs"];
m6_211 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="BackgroundProcessContextFacts.cs"];
m6_346 [label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="494-494", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_348 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="498-498", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_349 [label="var pipeline = _redis.CreatePipeline()", span="500-500", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_347 [label="var stats = new StatisticsDto()", span="496-496", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_356 [label=queues, span="526-526", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_350 [label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="502-504", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_351 [label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="506-508", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_352 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="510-512", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_353 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="514-516", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_354 [label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="518-520", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_355 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="522-524", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_358 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="529-531", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_359 [label="pipeline.Flush()", span="534-534", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_357 [label="var queueName = queue", span="528-528", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_360 [label="return stats;", span="537-537", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_361 [label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="494-494", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs"];
m6_31 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="BackgroundProcessContextFacts.cs"];
m6_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BackgroundProcessContextFacts.cs"];
m6_337 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="BackgroundProcessContextFacts.cs"];
m6_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="BackgroundProcessContextFacts.cs"];
m6_78 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="BackgroundProcessContextFacts.cs"];
m6_212 [label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_213 [label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="341-341", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_217 [label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="347-348", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_223 [label="return new JobDetailsDto\r\n            {\r\n                Method = TryToGetMethod(job[''Type''], job[''Method''], job[''ParameterTypes'']),\r\n                Arguments = job.ContainsKey(''Arguments'') ? JobHelper.FromJson<string[]>(job[''Arguments'']) : null,\r\n                OldFormatArguments =\r\n                    job.ContainsKey(''Args'') ? JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']) : null,\r\n                State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = history\r\n            };", span="358-369", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_214 [label="job.Count == 0", span="342-342", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_219 [label="!job.ContainsKey(''Method'')", span="355-355", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_220 [label="job.Add(''Method'', null)", span="355-355", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_221 [label="!job.ContainsKey(''ParameterTypes'')", span="356-356", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_222 [label="job.Add(''ParameterTypes'', null)", span="356-356", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_216 [label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''Args'', ''State'', ''CreatedAt'' }", span="344-345", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_218 [label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="350-352", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_215 [label="return null;", span="342-342", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_224 [label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs"];
m6_226 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundProcessContextFacts.cs"];
m6_339 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="BackgroundProcessContextFacts.cs"];
m6_343 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="489-489", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="BackgroundProcessContextFacts.cs"];
m6_344 [label="return _redis.GetListCount(''hangfire:succeeded'');", span="491-491", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="BackgroundProcessContextFacts.cs"];
m6_345 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="489-489", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="BackgroundProcessContextFacts.cs"];
m6_323 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundProcessContextFacts.cs"];
m6_362 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="BackgroundProcessContextFacts.cs"];
m6_57 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="BackgroundProcessContextFacts.cs"];
m6_127 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="BackgroundProcessContextFacts.cs"];
m6_231 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="BackgroundProcessContextFacts.cs"];
m6_291 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BackgroundProcessContextFacts.cs"];
m6_338 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="BackgroundProcessContextFacts.cs"];
m6_88 [label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="540-540", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs"];
m6_408 [label="return JobMethod.Deserialize(new InvocationData\r\n                {\r\n                    Type = type,\r\n                    Method = method,\r\n                    ParameterTypes = parameterTypes\r\n                });", span="545-550", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs"];
m6_410 [label="return null;", span="554-554", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs"];
m6_409 [label=Exception, span="552-552", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs"];
m6_411 [label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="540-540", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs"];
m6_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BackgroundProcessContextFacts.cs"];
m6_227 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="BackgroundProcessContextFacts.cs"];
m6_292 [label="Entry lambda expression", span="414-414", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_377 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="511-511", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_383 [label="x.GetSortedSetCount(''hangfire:processing'')", span="515-515", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_397 [label="x.GetSortedSetCount(''hangfire:failed'')", span="523-523", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_325 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="462-462", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_315 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray())", span="454-456", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_175 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="253-253", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_181 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="257-257", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_403 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="530-530", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_34 [label="Entry lambda expression", span="78-85", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_40 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_135 [label="Entry lambda expression", span="203-211", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_144 [label="Entry lambda expression", span="226-231", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_186 [label="Entry lambda expression", span="268-273", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_194 [label="Entry lambda expression", span="300-305", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_201 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_233 [label="Entry lambda expression", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_237 [label="Entry lambda expression", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_240 [label="Entry lambda expression", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_376 [label="Entry lambda expression", span="511-511", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_378 [label="Exit lambda expression", span="511-511", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_382 [label="Entry lambda expression", span="515-515", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_384 [label="Exit lambda expression", span="515-515", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_396 [label="Entry lambda expression", span="523-523", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_398 [label="Exit lambda expression", span="523-523", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_324 [label="Entry lambda expression", span="462-462", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_326 [label="Exit lambda expression", span="462-462", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_314 [label="Entry lambda expression", span="454-456", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_316 [label="Exit lambda expression", span="454-456", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_174 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_176 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_180 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_182 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_402 [label="Entry lambda expression", span="530-530", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_404 [label="Exit lambda expression", span="530-530", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_36 [label="Exit lambda expression", span="78-85", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_35 [label="new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }", span="78-85", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_42 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_41 [label="x.Value.StartedAt", span="85-85", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_82 [label="Entry lambda expression", span="126-134", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_80 [label="states.Add(job.Key, x)", span="119-119", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_83 [label="new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="126-134", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_66 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_71 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_75 [label="Entry lambda expression", span="116-118", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_79 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_296 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="415-415", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_124 [label="Entry lambda expression", span="181-188", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_122 [label="queues.Add(name, x)", span="175-175", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_125 [label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="181-188", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_111 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_114 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_117 [label="Entry lambda expression", span="173-174", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_121 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_137 [label="Exit lambda expression", span="203-211", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_136 [label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="203-211", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_169 [label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="248-249", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_146 [label="Exit lambda expression", span="226-231", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_145 [label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="226-231", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_168 [label="Entry lambda expression", span="248-249", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_171 [label="Entry lambda expression", span="250-250", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_177 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_183 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_335 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="481-485", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_188 [label="Exit lambda expression", span="268-273", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_187 [label="new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="268-273", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_196 [label="Exit lambda expression", span="300-305", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_195 [label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="300-305", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_203 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_202 [label="new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                }", span="320-326", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_268 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="383-383", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_234 [label="!hiddenProperties.Contains(x.Key)", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_118 [label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="173-174", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_235 [label="Exit lambda expression", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_239 [label="Exit lambda expression", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_238 [label="x.Key", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_242 [label="Exit lambda expression", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_241 [label="x.Value", span="367-367", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_368 [label="stats.Servers = x", span="504-504", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_374 [label="stats.Queues = x", span="508-508", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_380 [label="stats.Scheduled = x", span="512-512", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_386 [label="stats.Processing = x", span="516-516", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_393 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="520-520", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_400 [label="stats.Failed = x", span="524-524", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_406 [label="stats.Enqueued += x", span="531-531", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_363 [label="Entry lambda expression", span="503-503", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_367 [label="Entry lambda expression", span="504-504", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_370 [label="Entry lambda expression", span="507-507", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_373 [label="Entry lambda expression", span="508-508", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_379 [label="Entry lambda expression", span="512-512", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_385 [label="Entry lambda expression", span="516-516", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_388 [label="Entry lambda expression", span="519-519", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_392 [label="Entry lambda expression", span="520-520", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_399 [label="Entry lambda expression", span="524-524", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_405 [label="Entry lambda expression", span="531-531", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_320 [label="!jobs.ContainsKey(id)", span="457-457", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_321 [label="jobs.Add(id, x)", span="457-457", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_328 [label="!states.ContainsKey(id)", span="463-463", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_329 [label="states.Add(id, x)", span="463-463", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_67 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' })", span="110-112", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_112 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="167-169", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_332 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="471-480", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_76 [label="x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State'')", span="116-118", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_72 [label="jobs.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_84 [label="Exit lambda expression", span="126-134", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_81 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_68 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_73 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_77 [label="Exit lambda expression", span="116-118", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_295 [label="Entry lambda expression", span="415-415", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_297 [label="Exit lambda expression", span="415-415", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_115 [label="servers.Add(name, x)", span="170-170", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_126 [label="Exit lambda expression", span="181-188", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_123 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_113 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_116 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_119 [label="Exit lambda expression", span="173-174", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_170 [label="Exit lambda expression", span="248-249", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_173 [label="Exit lambda expression", span="250-250", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_172 [label="firstJobIds = x", span="250-250", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_179 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_178 [label="length = x", span="254-254", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_185 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_184 [label="dequeued = x", span="258-258", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_327 [label="Entry lambda expression", span="463-463", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_331 [label="Entry lambda expression", span="471-480", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_334 [label="Entry lambda expression", span="481-485", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_336 [label="Exit lambda expression", span="481-485", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_340 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_267 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_269 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_369 [label="Exit lambda expression", span="504-504", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_375 [label="Exit lambda expression", span="508-508", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_381 [label="Exit lambda expression", span="512-512", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_387 [label="Exit lambda expression", span="516-516", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_394 [label="Exit lambda expression", span="520-520", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_401 [label="Exit lambda expression", span="524-524", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_407 [label="Exit lambda expression", span="531-531", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_365 [label="Exit lambda expression", span="503-503", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_364 [label="x.GetSetCount(''hangfire:servers'')", span="503-503", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_372 [label="Exit lambda expression", span="507-507", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_371 [label="x.GetSetCount(''hangfire:queues'')", span="507-507", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_390 [label="Exit lambda expression", span="519-519", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_389 [label="x.GetValue(''hangfire:stats:succeeded'')", span="519-519", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_319 [label="Entry lambda expression", span="457-457", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_322 [label="Exit lambda expression", span="457-457", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_330 [label="Exit lambda expression", span="463-463", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_333 [label="Exit lambda expression", span="471-480", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_342 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_341 [label="y == null", span="483-483", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_293 [label="x.ToString(''yyyy-MM-dd'')", span="414-414", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_294 [label="Exit lambda expression", span="414-414", cluster="lambda expression", file="BackgroundProcessContextFacts.cs"];
m6_29 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="BackgroundProcessContextFacts.cs"];
m6_166 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="BackgroundProcessContextFacts.cs"];
m6_167 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundProcessContextFacts.cs"];
m6_65 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BackgroundProcessContextFacts.cs"];
m6_69 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="BackgroundProcessContextFacts.cs"];
m6_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="BackgroundProcessContextFacts.cs"];
m6_0 [label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="BackgroundProcessContextFacts.cs"];
m6_1 [label="_redis = redis", span="33-33", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", color=green, community=0, file="BackgroundProcessContextFacts.cs"];
m6_2 [label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="BackgroundProcessContextFacts.cs"];
m6_130 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_131 [label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="193-196", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_132 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                (method, job, state) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="198-211", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_133 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_270 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="BackgroundProcessContextFacts.cs"];
m6_164 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="BackgroundProcessContextFacts.cs"];
m6_86 [label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="BackgroundProcessContextFacts.cs"];
m6_264 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="BackgroundProcessContextFacts.cs"];
m6_96 [label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_97 [label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="150-150", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_102 [label="var pipeline = _redis.CreatePipeline()", span="160-160", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_98 [label="serverNames.Count == 0", span="152-152", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_103 [label=serverNames, span="162-162", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_108 [label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="181-188", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_101 [label="var queues = new Dictionary<string, List<string>>()", span="158-158", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_105 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="166-170", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_106 [label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="172-175", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_107 [label="pipeline.Flush()", span="178-178", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_99 [label="return new List<ServerDto>();", span="154-154", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_100 [label="var servers = new Dictionary<string, List<string>>()", span="157-157", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_104 [label="var name = serverName", span="164-164", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_109 [label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs"];
m6_143 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="BackgroundProcessContextFacts.cs"];
m6_139 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_140 [label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="216-219", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_141 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''State'' },\r\n                (method, job, state) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="221-231", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_142 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_89 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="BackgroundProcessContextFacts.cs"];
m6_90 [label="return GetTimelineStats(_redis, ''succeeded'');", span="140-140", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="BackgroundProcessContextFacts.cs"];
m6_91 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="BackgroundProcessContextFacts.cs"];
m6_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="BackgroundProcessContextFacts.cs"];
m6_395 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="BackgroundProcessContextFacts.cs"];
m6_74 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BackgroundProcessContextFacts.cs"];
m6_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="BackgroundProcessContextFacts.cs"];
m6_19 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="BackgroundProcessContextFacts.cs"];
m6_20 [label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="BackgroundProcessContextFacts.cs"];
m6_21 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="BackgroundProcessContextFacts.cs"];
m6_262 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="BackgroundProcessContextFacts.cs"];
m6_25 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_26 [label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="69-72", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_27 [label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                (method, job, state) => new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="74-85", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_28 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_10 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="BackgroundProcessContextFacts.cs"];
m6_147 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="BackgroundProcessContextFacts.cs"];
m6_22 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="BackgroundProcessContextFacts.cs"];
m6_23 [label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="BackgroundProcessContextFacts.cs"];
m6_24 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="BackgroundProcessContextFacts.cs"];
m6_317 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="BackgroundProcessContextFacts.cs"];
m6_228 [label="Entry Unk.TryToGetMethod", span="", cluster="Unk.TryToGetMethod", file="BackgroundProcessContextFacts.cs"];
m6_313 [label="Entry JobList<T>.cstr", span="", cluster="JobList<T>.cstr", file="BackgroundProcessContextFacts.cs"];
m6_266 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundProcessContextFacts.cs"];
m6_205 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="BackgroundProcessContextFacts.cs"];
m6_206 [label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="331-331", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="BackgroundProcessContextFacts.cs"];
m6_207 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="BackgroundProcessContextFacts.cs"];
m6_165 [label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="433-433", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_305 [label="var id = jobId", span="451-451", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_302 [label="properties = properties ?? new string[0]", span="445-445", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_299 [label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="440-440", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_303 [label="var pipeline = redis.CreatePipeline()", span="447-447", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_298 [label="jobIds.Count == 0", span="440-440", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_300 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="442-442", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_301 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="443-443", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_304 [label=jobIds, span="449-449", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_307 [label="stateProperties != null", span="459-459", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_308 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="461-463", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_310 [label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="470-486", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_306 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="453-457", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_309 [label="pipeline.Flush()", span="467-467", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_311 [label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="433-433", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs"];
m6_271 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundProcessContextFacts.cs"];
m6_225 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="BackgroundProcessContextFacts.cs"];
m6_232 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="BackgroundProcessContextFacts.cs"];
m6_230 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="BackgroundProcessContextFacts.cs"];
m6_312 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="BackgroundProcessContextFacts.cs"];
m6_366 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="BackgroundProcessContextFacts.cs"];
m6_87 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="BackgroundProcessContextFacts.cs"];
m6_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundProcessContextFacts.cs"];
m6_93 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="BackgroundProcessContextFacts.cs"];
m6_94 [label="return GetTimelineStats(_redis, ''failed'');", span="145-145", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="BackgroundProcessContextFacts.cs"];
m6_95 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="BackgroundProcessContextFacts.cs"];
m6_189 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="BackgroundProcessContextFacts.cs"];
m6_138 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="BackgroundProcessContextFacts.cs"];
m6_229 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundProcessContextFacts.cs"];
m6_148 [label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_149 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="236-236", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_155 [label="var pipeline = _redis.CreatePipeline()", span="245-245", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_160 [label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    null,\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (method, job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="263-273", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_150 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="237-237", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_151 [label=queues, span="239-239", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_154 [label="long dequeued = 0", span="243-243", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_156 [label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="247-250", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_157 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="252-254", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_158 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => dequeued = x)", span="256-258", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_159 [label="pipeline.Flush()", span="260-260", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_161 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Dequeued = dequeued\r\n                })", span="275-281", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_162 [label="return result;", span="284-284", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_152 [label="IList<string> firstJobIds = null", span="241-241", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_153 [label="long length = 0", span="242-242", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_163 [label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs"];
m6_15 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="BackgroundProcessContextFacts.cs"];
m6_63 [label="Entry JobList<ScheduleDto>.cstr", span="", cluster="JobList<ScheduleDto>.cstr", file="BackgroundProcessContextFacts.cs"];
m6_43 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_44 [label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="90-93", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_49 [label="var pipeline = _redis.CreatePipeline()", span="103-103", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_45 [label="scheduledJobs.Count == 0", span="95-95", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_50 [label=scheduledJobs, span="105-105", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_55 [label="return new JobList<ScheduleDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="125-135", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_48 [label="var states = new Dictionary<string, string>()", span="101-101", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_52 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' }),\r\n                        x => jobs.Add(job.Key, x))", span="109-113", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_53 [label="pipeline.QueueCommand(\r\n                        x => x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State''),\r\n                        x => states.Add(job.Key, x))", span="115-119", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_54 [label="pipeline.Flush()", span="122-122", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_46 [label="return new JobList<ScheduleDto>(new List<KeyValuePair<string, ScheduleDto>>());", span="97-97", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_47 [label="var jobs = new Dictionary<string, List<string>>()", span="100-100", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_51 [label="var job = scheduledJob", span="107-107", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_56 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs"];
m6_197 [label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_198 [label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="311-313", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_199 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''CreatedAt'', ''Fetched'' },\r\n                null,\r\n                (method, job, state) => new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                });", span="315-326", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_200 [label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs"];
m6_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundProcessContextFacts.cs"];
m6_30 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="BackgroundProcessContextFacts.cs"];
m6_11 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="BackgroundProcessContextFacts.cs"];
m6_12 [label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="48-48", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", color=green, community=0, file="BackgroundProcessContextFacts.cs"];
m6_13 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="BackgroundProcessContextFacts.cs"];
m6_263 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="BackgroundProcessContextFacts.cs"];
m6_7 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="BackgroundProcessContextFacts.cs"];
m6_8 [label="return _redis.GetSortedSetCount(''hangfire:schedule'');", span="43-43", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", color=green, community=0, file="BackgroundProcessContextFacts.cs"];
m6_9 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="BackgroundProcessContextFacts.cs"];
m6_120 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="BackgroundProcessContextFacts.cs"];
m6_236 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundProcessContextFacts.cs"];
m6_64 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundProcessContextFacts.cs"];
m6_3 [label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="BackgroundProcessContextFacts.cs"];
m6_4 [label="_redis.Dispose()", span="38-38", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", color=green, community=0, file="BackgroundProcessContextFacts.cs"];
m6_5 [label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="BackgroundProcessContextFacts.cs"];
m6_110 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="BackgroundProcessContextFacts.cs"];
m6_134 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="BackgroundProcessContextFacts.cs"];
m6_391 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="BackgroundProcessContextFacts.cs"];
m6_70 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="BackgroundProcessContextFacts.cs"];
m6_412 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="BackgroundProcessContextFacts.cs"];
m6_414 [label="HangFire.Redis.RedisMonitoringApi", span="", file="BackgroundProcessContextFacts.cs"];
m6_426 [label=id, span="", file="BackgroundProcessContextFacts.cs"];
m6_428 [label="string[]", span="", file="BackgroundProcessContextFacts.cs"];
m6_425 [label="string[]", span="", file="BackgroundProcessContextFacts.cs"];
m6_421 [label=queue, span="", file="BackgroundProcessContextFacts.cs"];
m6_432 [label=queueName, span="", file="BackgroundProcessContextFacts.cs"];
m6_415 [label=job, span="", file="BackgroundProcessContextFacts.cs"];
m6_417 [label=states, span="", file="BackgroundProcessContextFacts.cs"];
m6_416 [label=jobs, span="", file="BackgroundProcessContextFacts.cs"];
m6_424 [label=string, span="", file="BackgroundProcessContextFacts.cs"];
m6_418 [label=name, span="", file="BackgroundProcessContextFacts.cs"];
m6_420 [label=queues, span="", file="BackgroundProcessContextFacts.cs"];
m6_419 [label=servers, span="", file="BackgroundProcessContextFacts.cs"];
m6_430 [label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="BackgroundProcessContextFacts.cs"];
m6_423 [label=string, span="", file="BackgroundProcessContextFacts.cs"];
m6_422 [label=hiddenProperties, span="", file="BackgroundProcessContextFacts.cs"];
m6_431 [label=stats, span="", file="BackgroundProcessContextFacts.cs"];
m6_427 [label=jobs, span="", file="BackgroundProcessContextFacts.cs"];
m6_429 [label=states, span="", file="BackgroundProcessContextFacts.cs"];
m8_35 [label="ThenTheServerShouldBeRemoved(ServerSteps.DefaultServerName)", span="72-72", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="BackgroundProcessExtensions.cs"];
m8_31 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="BackgroundProcessExtensions.cs"];
m8_4 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="BackgroundProcessExtensions.cs"];
m8_5 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", span="19-19", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", file="BackgroundProcessExtensions.cs"];
m8_6 [label="var factory = CreateFactory()", span="21-21", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", file="BackgroundProcessExtensions.cs"];
m8_0 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", span="12-12", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="BackgroundProcessExtensions.cs"];
m8_1 [label="_crontabSchedule = CrontabSchedule.Parse(''* * * * *'')", span="14-14", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="BackgroundProcessExtensions.cs"];
m8_2 [label="_timeZone = TimeZoneInfo.Utc", span="15-15", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="BackgroundProcessExtensions.cs"];
m8_32 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundProcessExtensions.cs"];
m8_18 [label="var factory = CreateFactory()", span="32-32", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs"];
m8_19 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => factory.GetInstant(_crontabSchedule, null))", span="34-35", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs"];
m8_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundProcessExtensions.cs"];
m8_8 [label="Redis.Client.AddItemToSet(''hangfire:servers'', name)", span="28-28", cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=green, community=0, file="BackgroundProcessExtensions.cs"];
m8_7 [label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26", cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="BackgroundProcessExtensions.cs"];
m8_9 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', name),\r\n                ''StartedAt'',\r\n                JobHelper.ToStringTimestamp(startedAt))", span="29-32", cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="BackgroundProcessExtensions.cs"];
m8_14 [label="factory.GetInstant(null, _timeZone)", span="24-24", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m8_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundProcessExtensions.cs"];
m8_13 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m8_3 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="BackgroundProcessExtensions.cs"];
m8_37 [label=factory, span="", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs"];
m8_38 [label=factory, span="", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs"];
m8_39 [label="Assert.IsFalse(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="79-80", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs"];
m8_40 [label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="76-76", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs"];
m8_41 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="BackgroundProcessExtensions.cs"];
m8_10 [label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26", cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="BackgroundProcessExtensions.cs"];
m8_33 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundProcessExtensions.cs"];
m8_34 [label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="70-70", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="BackgroundProcessExtensions.cs"];
m8_23 [label="factory.GetInstant(_crontabSchedule, null)", span="35-35", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m8_20 [label="Assert.Equal(''timeZone'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs"];
m8_21 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs"];
m8_22 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m8_16 [label="Entry Unk.GetInstant", span="", cluster="Unk.GetInstant", file="BackgroundProcessExtensions.cs"];
m8_15 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m8_17 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs"];
m8_36 [label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", span="", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="BackgroundProcessExtensions.cs"];
m8_27 [label="var instant = factory.GetInstant(_crontabSchedule, _timeZone)", span="45-45", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs"];
m8_28 [label="Assert.True(DateTime.UtcNow.AddMinutes(-2) < instant.NowInstant)", span="47-47", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs"];
m8_29 [label="Assert.True(instant.NowInstant < DateTime.UtcNow.AddMinutes(2))", span="48-48", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs", color=green, community=0];
m8_30 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", span="41-41", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs"];
m8_24 [label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="BackgroundProcessExtensions.cs"];
m8_25 [label="ThenTheServerShouldNotBeRemoved(ServerSteps.DefaultServerName)", span="58-58", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="BackgroundProcessExtensions.cs"];
m8_26 [label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56", cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="BackgroundProcessExtensions.cs"];
m8_42 [label="HangFire.Tests.ServerWatchdogSteps", span="", file="BackgroundProcessExtensions.cs"];
m9_31 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs"];
m9_32 [label="var state = new FailedState(new Exception())", span="47-47", cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_33 [label="Assert.False(state.IgnoreJobLoadException)", span="48-48", cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_34 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs"];
m9_7 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="BackgroundProcessExtensionsFacts.cs"];
m9_30 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundProcessExtensionsFacts.cs"];
m9_25 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="BackgroundProcessExtensionsFacts.cs"];
m9_23 [label="Entry HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", file="BackgroundProcessExtensionsFacts.cs"];
m9_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundProcessExtensionsFacts.cs"];
m9_12 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="BackgroundProcessExtensionsFacts.cs"];
m9_8 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundProcessExtensionsFacts.cs"];
m9_9 [label="var state = new FailedState(new Exception())", span="19-19", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_10 [label="Assert.Equal(FailedState.StateName, state.Name)", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_11 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundProcessExtensionsFacts.cs"];
m9_14 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundProcessExtensionsFacts.cs"];
m9_15 [label="var state = new FailedState(new Exception(''Message''))", span="26-26", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_16 [label="var serializedData = state.SerializeData()", span="28-28", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_17 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.FailedAt), serializedData[''FailedAt''])", span="30-30", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_20 [label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="33-33", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_18 [label="Assert.Equal(''System.Exception'', serializedData[''ExceptionType''])", span="31-31", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_19 [label="Assert.Equal(''Message'', serializedData[''ExceptionMessage''])", span="32-32", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_21 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundProcessExtensionsFacts.cs"];
m9_26 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs"];
m9_27 [label="var state = new FailedState(new Exception())", span="39-39", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_28 [label="Assert.False(state.IsFinal)", span="41-41", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_29 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs"];
m9_0 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundProcessExtensionsFacts.cs"];
m9_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_2 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundProcessExtensionsFacts.cs"];
m9_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="BackgroundProcessExtensionsFacts.cs"];
m9_5 [label="new FailedState(null)", span="13-13", cluster="lambda expression", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs"];
m9_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="BackgroundProcessExtensionsFacts.cs"];
m9_22 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BackgroundProcessExtensionsFacts.cs"];
m9_24 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundProcessExtensionsFacts.cs"];
m10_0 [label="Entry HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m10_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m11_0 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs"];
m11_1 [label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs"];
m11_2 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs"];
m11_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="DashboardOwinExtensions.cs"];
m11_7 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs"];
m11_10 [label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs"];
m11_11 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs"];
m11_20 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="DashboardOwinExtensions.cs"];
m11_12 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m11_13 [label="app == null", span="115-115", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m11_15 [label="SignatureConversions.AddConversions(app)", span="117-117", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m11_16 [label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m11_14 [label="throw new ArgumentNullException(''app'');", span="115-115", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m11_17 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m11_4 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs"];
m11_5 [label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs"];
m11_6 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs"];
m11_3 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs"];
m11_8 [label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs"];
m11_9 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs"];
m11_19 [label="Entry Unk.AddConversions", span="", cluster="Unk.AddConversions", file="DashboardOwinExtensions.cs"];
m11_21 [label="Entry lambda expression", span="119-123", cluster="lambda expression", file="DashboardOwinExtensions.cs"];
m11_22 [label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123", cluster="lambda expression", file="DashboardOwinExtensions.cs"];
m11_23 [label="Exit lambda expression", span="119-123", cluster="lambda expression", file="DashboardOwinExtensions.cs"];
m11_25 [label=string, span="", file="DashboardOwinExtensions.cs"];
m11_26 [label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span="", file="DashboardOwinExtensions.cs"];
m11_27 [label="Hangfire.JobStorage", span="", file="DashboardOwinExtensions.cs"];
m12_0 [label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs"];
m12_1 [label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs"];
m13_8 [label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65", cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="IBootstrapperConfiguration.cs"];
m13_9 [label="Entry HangFire.BackgroundJobServer.Start()", span="52-52", cluster="HangFire.BackgroundJobServer.Start()", file="IBootstrapperConfiguration.cs"];
m13_10 [label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73", cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="IBootstrapperConfiguration.cs"];
m13_12 [label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81", cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="IBootstrapperConfiguration.cs"];
m13_13 [label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81", cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="IBootstrapperConfiguration.cs"];
m13_11 [label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73", cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="IBootstrapperConfiguration.cs"];
m13_14 [label="Exit HangFire.BackgroundJobServer.Start()", span="52-52", cluster="HangFire.BackgroundJobServer.Start()", file="IBootstrapperConfiguration.cs"];
m13_15 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IBootstrapperConfiguration.cs"];
m13_0 [label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35", cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="IBootstrapperConfiguration.cs"];
m13_1 [label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35", cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="IBootstrapperConfiguration.cs"];
m13_16 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="IBootstrapperConfiguration.cs"];
m13_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="IBootstrapperConfiguration.cs"];
m13_27 [label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="IBootstrapperConfiguration.cs"];
m13_28 [label="Stop()", span="84-84", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="IBootstrapperConfiguration.cs"];
m13_29 [label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="IBootstrapperConfiguration.cs"];
m13_26 [label="Entry HangFire.Server.JobServer.Dispose()", span="70-70", cluster="HangFire.Server.JobServer.Dispose()", file="IBootstrapperConfiguration.cs"];
m13_4 [label="PollInterval = TimeSpan.FromSeconds(15)", span="23-23", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs"];
m13_5 [label="WorkerCount = workerCount", span="25-25", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs", color=green, community=0];
m13_2 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs"];
m13_3 [label="MachineName = Environment.MachineName", span="22-22", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs"];
m13_6 [label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57", cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="IBootstrapperConfiguration.cs"];
m13_7 [label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57", cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="IBootstrapperConfiguration.cs"];
m13_19 [label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_20 [label="_server != null", span="72-72", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_21 [label="_server.Dispose()", span="74-74", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_22 [label="_server = null", span="75-75", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_24 [label="return false;", span="79-79", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_23 [label="return true;", span="77-77", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_25 [label="Exit HangFire.BackgroundJobServer.Stop()", span="70-70", cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs"];
m13_18 [label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="IBootstrapperConfiguration.cs"];
m13_30 [label="HangFire.BackgroundJobServer", span="", file="IBootstrapperConfiguration.cs"];
m14_19 [label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="28-28", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="InfiniteLoopComponentFacts.cs", color=green, community=0];
m14_73 [label="return new InfiniteLoopProcess(_inner.Object);", span="80-80", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_74 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="InfiniteLoopComponentFacts.cs"];
m14_40 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_20 [label="timeAgo.Equals(''day'')", span="29-29", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="InfiniteLoopComponentFacts.cs"];
m14_30 [label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="InfiniteLoopComponentFacts.cs"];
m14_14 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="InfiniteLoopComponentFacts.cs"];
m14_15 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_16 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="25-25", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_17 [label="DateTime time", span="27-27", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_18 [label="timeAgo.Equals(''millisecond'')", span="28-28", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="InfiniteLoopComponentFacts.cs", color=green, community=0];
m14_72 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InfiniteLoopComponentFacts.cs"];
m14_41 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="InfiniteLoopComponentFacts.cs"];
m14_29 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="InfiniteLoopComponentFacts.cs"];
m14_39 [label="Thread.Sleep(5)", span="38-38", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_23 [label="var component = CreateComponent()", span="40-40", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_22 [label="_inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=1, file="InfiniteLoopComponentFacts.cs"];
m14_21 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m14_24 [label="_cts.CancelAfter(TimeSpan.FromMilliseconds(100))", span="41-41", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_55 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="InfiniteLoopComponentFacts.cs"];
m14_9 [label="Entry Unk.>", span="", cluster="Unk.>", file="InfiniteLoopComponentFacts.cs"];
m14_6 [label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="16-16", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="InfiniteLoopComponentFacts.cs", color=green, community=0];
m14_7 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="18-21", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="InfiniteLoopComponentFacts.cs", color=green, community=0];
m14_8 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="11-11", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="InfiniteLoopComponentFacts.cs"];
m14_25 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_26 [label="var watcher = new DequeuedJobsWatcher(RedisFactory.BasicManager)", span="41-41", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_27 [label="watcher.FindAndRequeueTimedOutJobs()", span="43-43", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="InfiniteLoopComponentFacts.cs", color=green, community=0];
m14_70 [label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopComponentFacts.cs"];
m14_13 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopComponentFacts.cs"];
m14_45 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs"];
m14_0 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m14_4 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="InfiniteLoopComponentFacts.cs"];
m14_1 [label="_inner = new Mock<IServerComponent>()", span="15-15", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_3 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m14_5 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="InfiniteLoopComponentFacts.cs"];
m14_2 [label="_cts = new CancellationTokenSource()", span="16-16", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_10 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_50 [label="var component = CreateComponent()", span="54-54", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_71 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="InfiniteLoopComponentFacts.cs"];
m14_12 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_28 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="InfiniteLoopComponentFacts.cs"];
m14_11 [label="new InfiniteLoopProcess(null)", span="22-22", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_51 [label="_cts.Cancel()", span="55-55", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_53 [label="_inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_52 [label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_54 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m14_56 [label="Entry lambda expression", span="58-58", cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_57 [label="component.Execute(_cts.Token)", span="58-58", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", color=red, community=0];
m14_58 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_59 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_34 [label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="55-55", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs"];
m14_38 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="InfiniteLoopComponentFacts.cs"];
m14_43 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="63-65", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", color=green, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_42 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs"];
m14_46 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs"];
m14_35 [label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="57-57", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", color=green, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_36 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs"];
m14_44 [label="Assert.IsNotNull(checkedTimestamp)", span="67-67", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs"];
m14_47 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="73-75", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", color=green, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_48 [label="Assert.IsNull(checkedTimestamp)", span="77-77", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs", color=green, community=0];
m14_60 [label="x.Execute(It.IsAny<CancellationToken>())", span="61-61", cluster="lambda expression", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_61 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m14_65 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m14_66 [label="var component = CreateComponent()", span="73-73", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_67 [label="var result = component.ToString()", span="74-74", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_68 [label="Assert.Equal(_inner.Object.ToString(), result)", span="75-75", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_69 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m14_49 [label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs"];
m14_31 [label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs"];
m14_32 [label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="50-52", cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs"];
m14_62 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m14_63 [label="_cts.Cancel()", span="67-67", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m14_64 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m14_75 [label="Entry InfiniteLoopProcess.cstr", span="", cluster="InfiniteLoopProcess.cstr", file="InfiniteLoopComponentFacts.cs"];
m14_37 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="InfiniteLoopComponentFacts.cs"];
m14_33 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="InfiniteLoopComponentFacts.cs"];
m14_76 [label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span="", file="InfiniteLoopComponentFacts.cs"];
m14_77 [label=component, span="", file="InfiniteLoopComponentFacts.cs"];
m14_78 [label=component, span="", file="InfiniteLoopComponentFacts.cs"];
m15_15 [label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs"];
m15_16 [label="return InnerProcess.ToString();", span="48-48", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs"];
m15_17 [label="Exit Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs"];
m15_0 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs"];
m15_1 [label="innerProcess == null", span="26-26", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs"];
m15_3 [label="InnerProcess = innerProcess", span="27-27", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs"];
m15_2 [label="throw new ArgumentNullException(''innerProcess'');", span="26-26", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs"];
m15_4 [label="Exit Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs"];
m15_6 [label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m15_7 [label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m15_8 [label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs"];
m15_9 [label=true, span="39-39", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs"];
m15_10 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="41-41", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs"];
m15_11 [label="InnerProcess.Execute(context)", span="42-42", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs"];
m15_12 [label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs"];
m15_14 [label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26", cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs"];
m15_18 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="InfiniteLoopProcess.cs"];
m15_13 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="InfiniteLoopProcess.cs"];
m15_19 [label="Hangfire.Server.InfiniteLoopProcess", span="", file="InfiniteLoopProcess.cs"];
m16_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs"];
m16_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs"];
m17_20 [label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56", cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="OwinBootstrapper.cs"];
m17_23 [label="Entry IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="OwinBootstrapper.cs"];
m17_18 [label="Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="OwinBootstrapper.cs"];
m17_0 [label="Entry Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="34-34", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_1 [label="app == null", span="38-38", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_3 [label="configurationAction == null", span="39-39", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_6 [label="configurationAction(configuration)", span="42-42", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_14 [label="app.RunHangfireServer(server())", span="61-61", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_15 [label="app.MapHangfireDashboard(configuration.DashboardPath, configuration.AppPath, configuration.AuthorizationFilters)", span="64-64", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_2 [label="throw new ArgumentNullException(''app'');", span="38-38", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_4 [label="throw new ArgumentNullException(''configurationAction'');", span="39-39", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_5 [label="var configuration = new BootstrapperConfiguration()", span="41-41", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_7 [label="configuration.Activator != null", span="44-44", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_8 [label="JobActivator.Current = configuration.Activator", span="46-46", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_9 [label="configuration.Storage != null", span="49-49", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_10 [label="JobStorage.Current = configuration.Storage", span="51-51", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_11 [label="configuration.Filters", span="54-54", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_13 [label="configuration.Servers", span="59-59", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_12 [label="GlobalJobFilters.Filters.Add(filter)", span="56-56", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_16 [label="Exit Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="34-34", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs"];
m17_22 [label="Entry IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", span="38-38", cluster="IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", file="OwinBootstrapper.cs"];
m17_19 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="OwinBootstrapper.cs"];
m17_21 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="OwinBootstrapper.cs"];
m18_72 [label="var currentState = jobData.State", span="131-131", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_161 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_50 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs"];
m18_18 [label="Entry Mock<IBackgroundJobClient>.cstr", span="", cluster="Mock<IBackgroundJobClient>.cstr", file="RecurringJobSchedulerFacts.cs"];
m18_91 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_17 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="RecurringJobSchedulerFacts.cs"];
m18_154 [label="var time = DateTime.UtcNow", span="166-166", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs"];
m18_156 [label="var scheduler = CreateScheduler()", span="168-168", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs"];
m18_157 [label="scheduler.Execute(_token)", span="170-170", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_158 [label="_instant.Verify(x => x.GetNextInstants(time))", span="172-172", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs"];
m18_159 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs"];
m18_153 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs"];
m18_155 [label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="167-167", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs"];
m18_160 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs"];
m18_105 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_106 [label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_107 [label="return transaction.Commit();", span="206-206", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_108 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_109 [label="!String.IsNullOrEmpty(oldState)", span="216-216", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_110 [label="_handlers.ContainsKey(oldState)", span="218-218", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_111 [label="_handlers[oldState]", span="220-220", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_112 [label="handler.Unapply(context)", span="222-222", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_15 [label="_client.Setup(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>())).Returns(''job-id'')", span="61-61", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_207 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m18_208 [label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="230-230", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m18_209 [label="var scheduler = CreateScheduler()", span="231-231", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m18_210 [label="scheduler.Execute(_token)", span="233-233", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_211 [label="_client.Verify(x => x.Create(It.IsAny<Job>(), It.IsAny<IState>()), Times.Never)", span="235-235", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_212 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m18_94 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RecurringJobSchedulerFacts.cs"];
m18_95 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="RecurringJobSchedulerFacts.cs"];
m18_96 [label=filters, span="182-182", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_97 [label="var oldState = context.CandidateState", span="184-184", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_98 [label="filter.OnStateChanging(context)", span="185-185", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_129 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="137-141", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_135 [label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="147-147", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs"];
m18_136 [label="var scheduler = CreateScheduler()", span="148-148", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs"];
m18_137 [label="scheduler.Execute(_token)", span="150-150", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_139 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="156-160", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs"];
m18_140 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs"];
m18_141 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_142 [label="x.GetNextInstants(It.IsAny<DateTime?>())", span="147-147", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_138 [label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="152-154", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", color=red, community=1];
m18_143 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RecurringJobSchedulerFacts.cs"];
m18_54 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs"];
m18_100 [label="AppendHistory(context, oldState, false)", span="189-189", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_99 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs"];
m18_101 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs"];
m18_58 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs"];
m18_181 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs"];
m18_52 [label="x.GetAllItemsFromSet(''recurring-jobs'')", span="55-55", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_120 [label=stateChangedFilters, span="243-243", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_92 [label="new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null)", span="99-99", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_104 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_14 [label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="58-59", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs"];
m18_90 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs"];
m18_20 [label="Entry Mock<IThrottler>.cstr", span="", cluster="Mock<IThrottler>.cstr", file="RecurringJobSchedulerFacts.cs"];
m18_164 [label="HangFire.States.StateMachine", span="", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs"];
m18_165 [label="System.Collections.Generic.IEnumerable<object>", span="", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs"];
m18_166 [label="var scheduler = CreateScheduler()", span="180-180", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs"];
m18_167 [label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="182-182", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_168 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="176-176", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs"];
m18_127 [label="Entry Unk.SerializeDateTime", span="", cluster="Unk.SerializeDateTime", file="RecurringJobSchedulerFacts.cs"];
m18_152 [label="Exit lambda expression", span="158-160", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_193 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobSchedulerFacts.cs"];
m18_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_0 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="28-28", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs"];
m18_1 [label="_storage = new Mock<JobStorage>()", span="30-30", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs"];
m18_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs"];
m18_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs"];
m18_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs"];
m18_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RecurringJobSchedulerFacts.cs"];
m18_26 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs"];
m18_28 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_29 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs"];
m18_33 [label="Exit lambda expression", span="38-38", cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_31 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_34 [label="Entry Unk.>", span="", cluster="Unk.>", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_36 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_42 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_44 [label="Console.WriteLine()", span="48-48", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_30 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs"];
m18_32 [label="x.GetNextInstants(It.IsAny<DateTime?>())", span="38-38", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_37 [label="x.GetInstant(It.IsNotNull<CrontabSchedule>(), It.IsNotNull<TimeZoneInfo>())", span="42-42", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_38 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_39 [label="Entry Unk.GetInstant", span="", cluster="Unk.GetInstant", file="RecurringJobSchedulerFacts.cs"];
m18_41 [label="_instant.Object", span="43-43", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_40 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_43 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_45 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_22 [label="Entry Mock<IScheduleInstant>.cstr", span="", cluster="Mock<IScheduleInstant>.cstr", file="RecurringJobSchedulerFacts.cs"];
m18_185 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs"];
m18_186 [label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(\r\n                Type.GetType(''Mono.Runtime'') != null ? ''Pacific/Honolulu'' : ''Hawaiian Standard Time'')", span="202-203", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", color=red, community=1, file="RecurringJobSchedulerFacts.cs"];
m18_187 [label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="205-205", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs"];
m18_190 [label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone))", span="213-213", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_188 [label="var scheduler = CreateScheduler()", span="207-207", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs"];
m18_189 [label="scheduler.Execute(_token)", span="210-210", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_191 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs"];
m18_213 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_47 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="RecurringJobSchedulerFacts.cs"];
m18_51 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RecurringJobSchedulerFacts.cs"];
m18_55 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobSchedulerFacts.cs"];
m18_60 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_48 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_49 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="RecurringJobSchedulerFacts.cs"];
m18_53 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs"];
m18_56 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RecurringJobSchedulerFacts.cs"];
m18_57 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_61 [label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="61-61", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_62 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_69 [label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_70 [label="jobData == null", span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_71 [label="return false;", span="128-128", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_77 [label="var context = new StateContext(jobId, jobMethod)", span="142-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_78 [label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_79 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_84 [label=Exception, span="172-172", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_85 [label="throw;", span="174-174", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_86 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_93 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RecurringJobSchedulerFacts.cs"];
m18_102 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringJobSchedulerFacts.cs"];
m18_103 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_114 [label="filter.OnStateUnapplied(context)", span="228-228", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_122 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_113 [label=stateChangedFilters, span="226-226", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_121 [label="filter.OnStateApplied(context)", span="245-245", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_128 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobSchedulerFacts.cs"];
m18_115 [label="_handlers.ContainsKey(chosenState.StateName)", span="232-232", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_117 [label="_handlers[chosenState.StateName]", span="235-235", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_118 [label="handler.Apply(context, stateData)", span="237-237", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_119 [label="AppendHistory(context.Transaction, context, chosenState, true)", span="241-241", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_123 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RecurringJobSchedulerFacts.cs"];
m18_124 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobSchedulerFacts.cs"];
m18_125 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="RecurringJobSchedulerFacts.cs"];
m18_126 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="RecurringJobSchedulerFacts.cs"];
m18_130 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="RecurringJobSchedulerFacts.cs"];
m18_131 [label="var transaction = _connection.CreateWriteTransaction()", span="252-252", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_132 [label="AppendHistory(transaction, context, state, appendToJob)", span="254-254", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs"];
m18_133 [label="transaction.Commit()", span="255-255", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs"];
m18_144 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RecurringJobSchedulerFacts.cs"];
m18_147 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobSchedulerFacts.cs"];
m18_145 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_146 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobSchedulerFacts.cs"];
m18_148 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobSchedulerFacts.cs"];
m18_149 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RecurringJobSchedulerFacts.cs"];
m18_150 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RecurringJobSchedulerFacts.cs"];
m18_151 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="RecurringJobSchedulerFacts.cs"];
m18_162 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobSchedulerFacts.cs"];
m18_163 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobSchedulerFacts.cs"];
m18_170 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_174 [label="scheduler.Execute(_token)", span="182-182", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_173 [label="Entry lambda expression", span="182-182", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_171 [label="x.GetAllItemsFromSet(It.IsAny<string>())", span="178-178", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_172 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_175 [label="Exit lambda expression", span="182-182", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_183 [label="scheduler.Execute(_token)", span="195-195", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_182 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_184 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_195 [label="x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone)", span="213-213", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_194 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_196 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_204 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_205 [label="x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc)", span="224-224", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_206 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_214 [label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="235-235", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_19 [label="Entry Mock<IScheduleInstantFactory>.cstr", span="", cluster="Mock<IScheduleInstantFactory>.cstr", file="RecurringJobSchedulerFacts.cs"];
m18_215 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m18_116 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_24 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs"];
m18_87 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobSchedulerFacts.cs"];
m18_88 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_89 [label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6", cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="RecurringJobSchedulerFacts.cs"];
m18_176 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs"];
m18_177 [label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="189-190", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs"];
m18_178 [label="var scheduler = CreateScheduler()", span="192-192", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs"];
m18_179 [label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="195-195", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_180 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs"];
m18_64 [label="String.IsNullOrWhiteSpace(jobId)", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_65 [label="throw new ArgumentNullException(''jobId'');", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_66 [label="state == null", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_67 [label="throw new ArgumentNullException(''state'');", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_68 [label="_connection.AcquireJobLock(jobId)", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_134 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs"];
m18_197 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs"];
m18_198 [label="_recurringJob.Remove(''TimeZoneId'')", span="219-219", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs"];
m18_199 [label="var scheduler = CreateScheduler()", span="220-220", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs"];
m18_200 [label="scheduler.Execute(_token)", span="222-222", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_201 [label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc))", span="224-224", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_202 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs"];
m18_23 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs"];
m18_203 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobSchedulerFacts.cs"];
m18_59 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobSchedulerFacts.cs"];
m18_169 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="RecurringJobSchedulerFacts.cs"];
m18_80 [label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_81 [label=JobLoadException, span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_82 [label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m18_83 [label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs"];
m18_216 [label="return new RecurringJobScheduler(\r\n                _storage.Object, \r\n                _client.Object, \r\n                _instantFactory.Object,\r\n                _throttler.Object);", span="240-244", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m18_217 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs"];
m18_192 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="RecurringJobSchedulerFacts.cs"];
m18_25 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs"];
m18_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RecurringJobSchedulerFacts.cs"];
m18_63 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="RecurringJobSchedulerFacts.cs"];
m18_76 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs"];
m18_73 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs"];
m18_75 [label="Assert.Equal(''client'', exception.ParamName)", span="81-81", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_74 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object))", span="77-79", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m18_46 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="RecurringJobSchedulerFacts.cs"];
m18_218 [label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span="", file="RecurringJobSchedulerFacts.cs"];
m18_219 [label=jobKey, span="", file="RecurringJobSchedulerFacts.cs"];
m18_220 [label=time, span="", file="RecurringJobSchedulerFacts.cs"];
m18_221 [label=scheduler, span="", file="RecurringJobSchedulerFacts.cs"];
m18_222 [label=scheduler, span="", file="RecurringJobSchedulerFacts.cs"];
m18_223 [label=timeZone, span="", file="RecurringJobSchedulerFacts.cs"];
m21_3 [label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m21_4 [label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m21_5 [label="context.CandidateState.StateName == SucceededState.Name", span="34-34", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m21_8 [label="context.CandidateState.StateName == FailedState.Name", span="48-48", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m21_6 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="36-40", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="SchedulePollerFacts.cs"];
m21_7 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=red, community=0, file="SchedulePollerFacts.cs"];
m21_9 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="SchedulePollerFacts.cs"];
m21_10 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="SchedulePollerFacts.cs"];
m21_11 [label="transaction.Commit()", span="63-63", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=red, community=0, file="SchedulePollerFacts.cs"];
m21_12 [label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs"];
m21_14 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SchedulePollerFacts.cs"];
m21_13 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="SchedulePollerFacts.cs"];
m21_0 [label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="SchedulePollerFacts.cs"];
m21_1 [label="Order = 30", span="27-27", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="SchedulePollerFacts.cs", color=green, community=0];
m21_2 [label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="SchedulePollerFacts.cs"];
m21_19 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="SchedulePollerFacts.cs"];
m21_18 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SchedulePollerFacts.cs"];
m21_17 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m21_16 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="SchedulePollerFacts.cs"];
m21_20 [label="HangFire.Filters.StatisticsHistoryFilterAttribute", span="", file="SchedulePollerFacts.cs"];
m23_8 [label="Assert.IsNotNull(filterContext)", span="31-31", cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerBootstrapperFacts.cs"];
m23_9 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="33-33", cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerBootstrapperFacts.cs"];
m23_10 [label=_cancelsTheCreation, span="35-35", cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerBootstrapperFacts.cs"];
m23_17 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerBootstrapperFacts.cs"];
m23_19 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs"];
m23_21 [label="var data = state.SerializeData()", span="35-35", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m23_22 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.StartedAt), data[''StartedAt''])", span="37-37", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m23_20 [label="var state = new ProcessingState(''Server1'')", span="33-33", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m23_23 [label="Assert.Equal(''Server1'', state.ServerName)", span="38-38", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m23_24 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs"];
m23_31 [label="Entry Unk.False", span="", cluster="Unk.False", file="ServerBootstrapperFacts.cs"];
m23_7 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ServerBootstrapperFacts.cs"];
m23_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m23_12 [label="new ProcessingState(String.Empty)", span="20-20", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m23_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m23_14 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerBootstrapperFacts.cs"];
m23_15 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m23_16 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m23_27 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerBootstrapperFacts.cs"];
m23_28 [label="var state = new ProcessingState(''server'')", span="44-44", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m23_29 [label="Assert.False(state.IsFinal)", span="46-46", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m23_30 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerBootstrapperFacts.cs"];
m23_25 [label="HangFire.Tests.TestClientFilter", span="", cluster="HangFire.States.ProcessingState.SerializeData()", file="ServerBootstrapperFacts.cs"];
m23_18 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="ServerBootstrapperFacts.cs"];
m23_0 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerBootstrapperFacts.cs"];
m23_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", span="12-13", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m23_2 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m23_3 [label="_throwException = throwException", span="24-24", cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="ServerBootstrapperFacts.cs"];
m23_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m23_5 [label="new ProcessingState(null)", span="13-13", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=red, community=0];
m23_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m23_26 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerBootstrapperFacts.cs"];
m24_0 [label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4", cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerComponentExtensionsFacts.cs"];
m24_1 [label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4", cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerComponentExtensionsFacts.cs"];
m25_64 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ServerHeartbeatFacts.cs"];
m25_59 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerHeartbeatFacts.cs"];
m25_0 [label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_1 [label="WriteLiteral(''\n'')", span="61-61", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_2 [label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_4 [label="IList<QueueWithTopEnqueuedJobsDto> queues = monitor.Queues()", span="77-77", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_5 [label="WriteLiteral(''\n'')", span="83-83", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_6 [label="queues.Count == 0", span="88-88", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_9 [label=queues, span="115-115", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_7 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        No queued jobs found. Try to enqueu'' +\r\n''e a job.\n    </div>\n'')", span="94-95", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_8 [label="WriteLiteral(''    <table class=\''table table-striped\''>\n        <thead>\n            <tr>\n        '' +\r\n''        <th>Queue</th>\n                <th>Length</th>\n                <th>Fetch'' +\r\n''ed</th>\n                <th>Next jobs</th>\n            </tr>\n        </thead>\n  '' +\r\n''      <tbody>\n'')", span="107-110", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_10 [label="WriteLiteral(''                <tr>\n                    <td>\n                        <a class=\''l'' +\r\n''abel-queue\'' href=\'''')", span="121-122", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_57 [label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="433-433", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_11 [label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="127-127", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_13 [label="Write(queue.Name)", span="137-137", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_15 [label="Write(queue.Length)", span="147-147", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_17 [label="queue.Fetched.HasValue", span="157-157", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_19 [label="Write(Request.LinkTo(''/queues/fetched/'' + queue.Name))", span="168-168", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_21 [label="Write(queue.Fetched)", span="178-178", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_25 [label="queue.FirstJobs.Count == 0", span="210-210", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_28 [label="queue.FirstJobs", span="243-243", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_12 [label="WriteLiteral(''\''>\n                            '')", span="132-132", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_14 [label="WriteLiteral(''\n                        </a>\n                    </td>\n                    <td>'')", span="142-142", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_16 [label="WriteLiteral(''</td>\n                    <td>\n'')", span="152-152", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_18 [label="WriteLiteral(''                            <a href=\'''')", span="163-163", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_23 [label="WriteLiteral(''                            <em>N/A</em>\n'')", span="195-195", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_20 [label="WriteLiteral(''\''>\n                                '')", span="173-173", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_22 [label="WriteLiteral(''\n                            </a>\n'')", span="183-183", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_24 [label="WriteLiteral(''                    </td>\n                    <td>\n'')", span="205-205", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_26 [label="WriteLiteral(''                            <em>No jobs queued.</em>\n'')", span="216-216", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_27 [label="WriteLiteral(@''                            <table class=''''table table-condensed table-bordered table-inner''''>\n                                <thead>\n                                    <tr>\n                                        <th class=''''min-width''''>Id</th>\n                                        <th class=''''min-width''''>State</th>\n                                        <th>Job</th>\n                                        <th class=''''align-right min-width''''>Enqueued</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n'')", span="228-238", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_29 [label="WriteLiteral(''                                        <tr class=\'''')", span="249-249", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_55 [label="WriteLiteral(''                                </tbody>\n                            </table>\n'')", span="413-413", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_30 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="254-254", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_31 [label="WriteLiteral(''\''>\n                                            <td class=\''min-width\''>\n           '' +\r\n''                                     <a href=\'''')", span="259-260", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_32 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="265-265", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_33 [label="WriteLiteral(''\''>'')", span="270-270", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_34 [label="Write(HtmlHelper.JobId(job.Key))", span="275-275", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_35 [label="WriteLiteral(''</a>\n'')", span="280-280", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_36 [label="!job.Value.InEnqueuedState", span="285-285", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_37 [label="WriteLiteral(''                                                    <span title=\''Job\'s state has '' +\r\n''been changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></s'' +\r\n''pan>\n'')", span="291-293", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_38 [label="WriteLiteral(''                                            </td>\n                               '' +\r\n''             <td class=\''min-width\''>\n                                            '' +\r\n''    <span class=\''label label-default\'' style=\'''')", span="303-305", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_39 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="310-310", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_40 [label="WriteLiteral(''\''>\n                                                    '')", span="315-315", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_41 [label="Write(job.Value.State)", span="320-320", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_42 [label="WriteLiteral(''\n                                                </span>\n                        '' +\r\n''                    </td>\n                                            <td>\n     '' +\r\n''                                           <a class=\''job-method\'' href=\'''')", span="325-327", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_43 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="332-332", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_44 [label="WriteLiteral(''\''>\n                                                    '')", span="337-337", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_45 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="342-342", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_46 [label="WriteLiteral(''\n                                                </a>\n                           '' +\r\n''                 </td>\n                                            <td class=\''al'' +\r\n''ign-right min-width\''>\n'')", span="347-349", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_47 [label="job.Value.EnqueuedAt.HasValue", span="354-354", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_48 [label="WriteLiteral(''                                                    <span data-moment=\'''')", span="360-360", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_53 [label="WriteLiteral(''                                                    <em>n/a</em>\n'')", span="392-392", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_49 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="365-365", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_50 [label="WriteLiteral(''\''>\n                                                        '')", span="370-370", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_51 [label="Write(job.Value.EnqueuedAt)", span="375-375", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_52 [label="WriteLiteral(''\n                                                    </span>\n'')", span="380-380", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_54 [label="WriteLiteral(''                                            </td>\n                               '' +\r\n''         </tr>\n'')", span="402-403", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_56 [label="WriteLiteral(''                </td>\n            </tr>\n'')", span="423-423", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_58 [label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs"];
m25_61 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerHeartbeatFacts.cs"];
m25_60 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerHeartbeatFacts.cs"];
m25_62 [label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24", cluster="HangFire.Storage.IMonitoringApi.Queues()", file="ServerHeartbeatFacts.cs"];
m25_63 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ServerHeartbeatFacts.cs"];
m25_69 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerHeartbeatFacts.cs"];
m25_67 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerHeartbeatFacts.cs"];
m25_70 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerHeartbeatFacts.cs"];
m25_66 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ServerHeartbeatFacts.cs"];
m25_65 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerHeartbeatFacts.cs"];
m25_71 [label="HangFire.Web.Pages.QueuesPage", span="", file="ServerHeartbeatFacts.cs"];
m26_61 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ServerJobCancellationToken.cs"];
m26_55 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ServerJobCancellationToken.cs"];
m26_53 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerJobCancellationToken.cs"];
m26_0 [label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_1 [label="WriteLiteral(''\n'')", span="51-51", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_2 [label="Layout = new LayoutPage { Title = ''Processing Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_7 [label="Pager pager = new Pager(from, perPage, monitor.ProcessingCount())\n    {\n        BasePageUrl = Request.LinkTo(''/processing'')\n    }", span="70-73", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_8 [label="JobList<ProcessingJobDto> processingJobs = monitor\n        .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-76", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_10 [label="pager.TotalPageCount == 0", span="87-87", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_17 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="147-147", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_51 [label="Write(RenderPartial(new Paginator(pager)))", span="369-369", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_9 [label="WriteLiteral(''\n'')", span="82-82", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_19 [label=processingJobs, span="173-173", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        No jobs are being processed right now.'' +\r\n''\n    </div>\n'')", span="93-94", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="106-108", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_13 [label="Write(Request.LinkTo(''/processing/requeue''))", span="113-113", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_14 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="118-125", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_15 [label="Write(Request.LinkTo(''/processing/delete''))", span="130-130", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="135-142", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_18 [label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>Server</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Started</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="152-168", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_20 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="179-179", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_50 [label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="358-358", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_21 [label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="184-184", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_22 [label="WriteLiteral('' '')", span="189-189", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_23 [label="Write(job.Value.InProcessingState ? ''hover'' : null)", span="194-194", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_24 [label="WriteLiteral(''\''>\n                        <td>\n'')", span="199-199", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_25 [label="job.Value.InProcessingState", span="204-204", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_26 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="210-211", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_29 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="231-232", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_27 [label="Write(job.Key)", span="216-216", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_30 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="237-237", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_28 [label="WriteLiteral(''\'' />\n'')", span="221-221", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_31 [label="WriteLiteral(''\''>\n                                '')", span="242-242", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_32 [label="Write(HtmlHelper.JobId(job.Key))", span="247-247", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_33 [label="WriteLiteral(''\n                            </a>\n'')", span="252-252", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_34 [label="!job.Value.InProcessingState", span="257-257", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_35 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="263-264", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_36 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        '')", span="274-275", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_37 [label="Write(job.Value.ServerId.ToUpperInvariant())", span="280-280", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_38 [label="WriteLiteral(''\n                        </td>\n                        <td>\n                     '' +\r\n''       <a class=\''job-method\'' href=\'''')", span="285-286", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_39 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="291-291", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_40 [label="WriteLiteral(''\''>\n                                '')", span="296-296", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_41 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="301-301", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_42 [label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="306-307", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_43 [label="job.Value.StartedAt.HasValue", span="312-312", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_44 [label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_49 [label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="348-348", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_45 [label="Write(JobHelper.ToTimestamp(job.Value.StartedAt.Value))", span="323-323", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_46 [label="WriteLiteral(''\''>\n                                    '')", span="328-328", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_47 [label="Write(job.Value.StartedAt)", span="333-333", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_48 [label="WriteLiteral(''\n                                </span>\n'')", span="338-338", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_52 [label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs"];
m26_56 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerJobCancellationToken.cs"];
m26_68 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ServerJobCancellationToken.cs"];
m26_66 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="ServerJobCancellationToken.cs"];
m26_54 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerJobCancellationToken.cs"];
m26_62 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ServerJobCancellationToken.cs"];
m26_64 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ServerJobCancellationToken.cs"];
m26_60 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="ServerJobCancellationToken.cs"];
m26_59 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ServerJobCancellationToken.cs"];
m26_58 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="ServerJobCancellationToken.cs"];
m26_67 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerJobCancellationToken.cs"];
m26_69 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ServerJobCancellationToken.cs"];
m26_63 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ServerJobCancellationToken.cs"];
m26_57 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ServerJobCancellationToken.cs"];
m26_65 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerJobCancellationToken.cs"];
m26_70 [label="HangFire.Web.Pages.ProcessingJobsPage", span="", file="ServerJobCancellationToken.cs"];
m27_13 [label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerJobCancellationTokenFacts.cs"];
m27_74 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs"];
m27_75 [label="_stateData.Name = ''NotProcessing''", span="107-107", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs"];
m27_76 [label="var token = CreateToken()", span="108-108", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs"];
m27_77 [label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="110-111", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs"];
m27_78 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs"];
m27_18 [label="Entry Unk.GetStateData", span="", cluster="Unk.GetStateData", file="ServerJobCancellationTokenFacts.cs"];
m27_37 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_38 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken()))", span="63-65", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_39 [label="Assert.Equal(''workerContext'', exception.ParamName)", span="67-67", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_40 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_24 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerJobCancellationTokenFacts.cs"];
m27_29 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="ServerJobCancellationTokenFacts.cs"];
m27_8 [label="Entry Hangfire.Storage.StateData.StateData()", span="21-21", cluster="Hangfire.Storage.StateData.StateData()", file="ServerJobCancellationTokenFacts.cs"];
m27_53 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerJobCancellationTokenFacts.cs"];
m27_82 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs"];
m27_83 [label="_stateData.Data[''ServerId''] = ''AnotherServer''", span="117-117", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs"];
m27_84 [label="var token = CreateToken()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs"];
m27_85 [label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="120-121", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs"];
m27_86 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs"];
m27_54 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m27_55 [label="_shutdownToken = new CancellationToken(true)", span="88-88", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m27_56 [label="var token = CreateToken()", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m27_57 [label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="91-92", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m27_58 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m27_30 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_31 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken()))", span="53-55", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_32 [label="Assert.Equal(''connection'', exception.ParamName)", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_33 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_19 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken()))", span="43-45", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_21 [label="Assert.Equal(''jobId'', exception.ParamName)", span="47-47", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_22 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m27_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerJobCancellationTokenFacts.cs"];
m27_63 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m27_64 [label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", span="98-98", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_65 [label="var token = CreateToken()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m27_66 [label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="101-101", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m27_67 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m27_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerJobCancellationTokenFacts.cs"];
m27_0 [label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4", cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerJobCancellationTokenFacts.cs"];
m27_4 [label="_workerContextMock = new WorkerContextMock { WorkerNumber = 1 }", span="34-34", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_3 [label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="32-32", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m27_5 [label="_workerContextMock.ServerId = ''Server''", span="35-35", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_6 [label="_shutdownToken = new CancellationToken(false)", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_1 [label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4", cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerJobCancellationTokenFacts.cs"];
m27_2 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m27_7 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m27_95 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_25 [label="Entry lambda expression", span="44-45", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_26 [label="new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken())", span="44-45", cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_27 [label="Exit lambda expression", span="44-45", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_34 [label="Entry lambda expression", span="54-55", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_35 [label="new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken())", span="54-55", cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_36 [label="Exit lambda expression", span="54-55", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_41 [label="Entry lambda expression", span="64-65", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_42 [label="new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken())", span="64-65", cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_43 [label="Exit lambda expression", span="64-65", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_68 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_69 [label="x.GetStateData(It.IsAny<string>())", span="98-98", cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_70 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_15 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_72 [label="token.ThrowIfCancellationRequested()", span="101-101", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_16 [label="x.GetStateData(JobId)", span="32-32", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_60 [label="token.ThrowIfCancellationRequested()", span="92-92", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_80 [label="token.ThrowIfCancellationRequested()", span="111-111", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_88 [label="token.ThrowIfCancellationRequested()", span="121-121", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_96 [label="token.ThrowIfCancellationRequested()", span="131-131", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_17 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_59 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_71 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_79 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_87 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_73 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_61 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_81 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_89 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_97 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m27_90 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m27_91 [label="_stateData.Data[''WorkerNumber''] = ''999''", span="127-127", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m27_92 [label="var token = CreateToken()", span="128-128", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m27_93 [label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="130-131", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m27_94 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m27_28 [label="Entry ServerJobCancellationToken.cstr", span="", cluster="ServerJobCancellationToken.cstr", file="ServerJobCancellationTokenFacts.cs"];
m27_44 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs"];
m27_45 [label="var token = CreateToken()", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_46 [label="Assert.Equal(_shutdownToken, token.ShutdownToken)", span="74-74", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m27_47 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs"];
m27_14 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerJobCancellationTokenFacts.cs"];
m27_62 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationTokenFacts.cs"];
m27_48 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs"];
m27_98 [label="return new ServerJobCancellationToken(\r\n                JobId, _connection.Object, _workerContextMock.Object, _shutdownToken);", span="136-137", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs"];
m27_99 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs"];
m27_49 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m27_50 [label="var token = CreateToken()", span="80-80", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m27_51 [label="Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="82-82", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m27_52 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m27_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerJobCancellationTokenFacts.cs"];
m27_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerJobCancellationTokenFacts.cs"];
m27_100 [label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span="", file="ServerJobCancellationTokenFacts.cs"];
m27_102 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m27_101 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m27_103 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m27_104 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m27_105 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m28_0 [label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_1 [label="Servers.Add(server)", span="42-42", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_2 [label="server.Start()", span="44-44", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_3 [label="var context = new OwinContext(app.Properties)", span="46-46", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_6 [label="token.Register(server.Dispose)", span="51-51", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_4 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="47-47", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_5 [label="token != CancellationToken.None", span="49-49", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_7 [label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m28_12 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="ServerOwinExtensions.cs"];
m28_9 [label="Entry Hangfire.BackgroundJobServer.Start()", span="123-123", cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs"];
m28_8 [label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs"];
m28_10 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="ServerOwinExtensions.cs"];
m29_0 [label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m29_1 [label="_storage = new Mock<JobStorage>()", span="18-18", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_3 [label="_options = new ServerWatchdogOptions\r\n            {\r\n                CheckInterval = Timeout.InfiniteTimeSpan // To check that it exits by cancellation token\r\n            }", span="20-23", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m29_4 [label="_cts = new CancellationTokenSource()", span="24-24", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_5 [label="_cts.Cancel()", span="25-25", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_6 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_7 [label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m29_59 [label="Entry Unk.RemoveTimedOutServers", span="", cluster="Unk.RemoveTimedOutServers", file="ServerWatchdogFacts.cs"];
m29_12 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="ServerWatchdogFacts.cs"];
m29_33 [label="Entry ServerWatchdog.cstr", span="", cluster="ServerWatchdog.cstr", file="ServerWatchdogFacts.cs"];
m29_18 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerWatchdogFacts.cs"];
m29_50 [label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m29_51 [label="_connection.Setup(x => x.RemoveTimedOutServers(It.IsAny<TimeSpan>())).Returns(1)", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m29_52 [label="var watchdog = CreateWatchdog()", span="58-58", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_53 [label="watchdog.Execute(_cts.Token)", span="60-60", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_54 [label="_connection.Verify(x => x.RemoveTimedOutServers(_options.ServerTimeout))", span="62-62", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m29_55 [label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m29_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerWatchdogFacts.cs"];
m29_49 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerWatchdogFacts.cs"];
m29_19 [label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="31-31", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m29_20 [label="Assert.Throws<ArgumentNullException>(() => new ServerWatchdog(null))", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_21 [label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="31-31", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m29_11 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerWatchdogFacts.cs"];
m29_40 [label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="65-65", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m29_63 [label="return new ServerWatchdog(_storage.Object, _options);", span="67-67", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_64 [label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="65-65", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m29_60 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_15 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_16 [label="x.GetConnection()", span="27-27", cluster="lambda expression", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_17 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_23 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_24 [label="new ServerWatchdog(null)", span="33-33", cluster="lambda expression", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_25 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_30 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_31 [label="new ServerWatchdog(_storage.Object, null)", span="40-40", cluster="lambda expression", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_32 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_43 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_46 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_44 [label="x.GetConnection()", span="50-50", cluster="lambda expression", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_45 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_47 [label="x.Dispose()", span="51-51", cluster="lambda expression", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_48 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_56 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_57 [label="x.RemoveTimedOutServers(It.IsAny<TimeSpan>())", span="57-57", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_58 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_61 [label="x.RemoveTimedOutServers(_options.ServerTimeout)", span="62-62", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_62 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m29_42 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerWatchdogFacts.cs"];
m29_27 [label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m29_28 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ServerWatchdog(_storage.Object, null))", span="39-40", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_29 [label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m29_41 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerWatchdogFacts.cs"];
m29_26 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdogFacts.cs"];
m29_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerWatchdogFacts.cs"];
m29_34 [label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m29_35 [label="var watchdog = CreateWatchdog()", span="46-46", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_36 [label="watchdog.Execute(_cts.Token)", span="48-48", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_37 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_38 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", color=red, community=0, file="ServerWatchdogFacts.cs"];
m29_39 [label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m29_10 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogFacts.cs"];
m29_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerWatchdogFacts.cs"];
m29_8 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ServerWatchdogFacts.cs"];
m29_65 [label="Hangfire.Core.Tests.Server.ServerWatchdogFacts", span="", file="ServerWatchdogFacts.cs"];
m30_239 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="449-449", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_240 [label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="451-452", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_243 [label="i < table.RowCount", span="455-455", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_244 [label="Assert.Equal(table.Rows[i][''State''], history[i][''State''])", span="457-457", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_241 [label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="453-453", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_242 [label="var i = 0", span="455-455", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_245 [label="i++", span="455-455", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_246 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="449-449", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs"];
m30_153 [label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="308-308", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs"];
m30_154 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="310-310", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs"];
m30_155 [label="var timestamp = JobHelper.FromTimestamp((long)score)", span="311-311", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs"];
m30_156 [label="Assert.True(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="313-313", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs"];
m30_157 [label="Assert.True(timestamp < DateTime.UtcNow.AddSeconds(1))", span="314-314", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs"];
m30_158 [label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="308-308", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs"];
m30_137 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="283-283", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs"];
m30_138 [label="Assert.Equal(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="285-285", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs"];
m30_139 [label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="286-286", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs"];
m30_140 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="283-283", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs"];
m30_90 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="199-199", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs"];
m30_91 [label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="202-203", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs"];
m30_92 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="204-204", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs"];
m30_93 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="199-199", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs"];
m30_152 [label="Entry Unk.False", span="", cluster="Unk.False", file="StartupConfiguration.cs"];
m30_19 [label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="77-77", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StartupConfiguration.cs"];
m30_20 [label="_state = new EnqueuedState\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="79-82", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StartupConfiguration.cs"];
m30_21 [label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="77-77", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StartupConfiguration.cs"];
m30_162 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="318-318", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_163 [label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="320-320", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_164 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="321-321", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_165 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="322-322", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_166 [label="Assert.True(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="324-324", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_167 [label="Assert.True(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="325-325", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_168 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="318-318", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs"];
m30_64 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="123-123", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs"];
m30_65 [label="Given(String.Format(''a '{0}' state'', state))", span="125-125", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs"];
m30_66 [label="_filters.Add(\r\n                new TestStateChangingFilter(name, _stateChangingResults, _stateMocks[state].Object))", span="127-128", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs"];
m30_67 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="123-123", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs"];
m30_89 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StartupConfiguration.cs"];
m30_202 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="StartupConfiguration.cs"];
m30_102 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="StartupConfiguration.cs"];
m30_48 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="StartupConfiguration.cs"];
m30_169 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="329-329", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StartupConfiguration.cs"];
m30_170 [label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="331-331", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StartupConfiguration.cs"];
m30_171 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="329-329", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StartupConfiguration.cs"];
m30_136 [label="Entry HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="StartupConfiguration.cs"];
m30_228 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="StartupConfiguration.cs"];
m30_212 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="402-402", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_213 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="404-405", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_214 [label="Assert.NotNull(entry)", span="406-406", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_215 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="408-408", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_216 [label="Assert.NotNull(history)", span="409-409", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_218 [label="Assert.True(history.ContainsKey(property.Key))", span="413-413", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_219 [label="Assert.Equal(property.Value, history[property.Key])", span="414-414", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_217 [label=_stateProperties, span="411-411", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_220 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="402-402", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs"];
m30_121 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="250-250", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs"];
m30_122 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="252-257", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs"];
m30_123 [label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl));\r\n            })", span="259-265", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs"];
m30_124 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="250-250", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs"];
m30_120 [label="Entry Unk.PopItemFromList", span="", cluster="Unk.PopItemFromList", file="StartupConfiguration.cs"];
m30_135 [label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26", cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="StartupConfiguration.cs"];
m30_68 [label="Entry TestStateChangingFilter.cstr", span="", cluster="TestStateChangingFilter.cstr", file="StartupConfiguration.cs"];
m30_13 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StartupConfiguration.cs"];
m30_29 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="StartupConfiguration.cs"];
m30_22 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="25-25", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="StartupConfiguration.cs"];
m30_94 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="208-208", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StartupConfiguration.cs"];
m30_95 [label="Assert.Equal(name, _state.StateName)", span="210-210", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StartupConfiguration.cs"];
m30_96 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="208-208", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StartupConfiguration.cs"];
m30_59 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="117-117", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StartupConfiguration.cs"];
m30_60 [label="_filters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="119-119", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StartupConfiguration.cs"];
m30_61 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="117-117", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StartupConfiguration.cs"];
m30_10 [label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="59-59", cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StartupConfiguration.cs"];
m30_11 [label="_state = new ProcessingState(''TestServer'')\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="61-64", cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StartupConfiguration.cs"];
m30_12 [label="Exit HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="59-59", cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StartupConfiguration.cs"];
m30_18 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="StartupConfiguration.cs"];
m30_41 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="StartupConfiguration.cs"];
m30_195 [label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="387-387", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StartupConfiguration.cs"];
m30_196 [label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId)))", span="389-390", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StartupConfiguration.cs"];
m30_197 [label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="387-387", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StartupConfiguration.cs"];
m30_227 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="419-419", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs"];
m30_222 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="419-419", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs"];
m30_223 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="421-422", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs"];
m30_224 [label=_stateProperties, span="424-424", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs"];
m30_225 [label="Assert.True(stateEntry.ContainsKey(property.Key))", span="426-426", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs"];
m30_226 [label="Assert.Equal(property.Value, stateEntry[property.Key])", span="427-427", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs"];
m30_229 [label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="432-432", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_230 [label="Assert.Equal(table.RowCount, _stateChangingResults.Count)", span="434-434", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_232 [label="i < table.RowCount", span="436-436", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_233 [label="Assert.Equal(table.Rows[i][''Filter''], _stateChangingResults[i])", span="438-438", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_231 [label="var i = 0", span="436-436", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_234 [label="i++", span="436-436", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_235 [label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="432-432", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_209 [label="Entry lambda expression", span="397-397", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_34 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_37 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_35 [label="x.StateName", span="89-89", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_36 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_38 [label="x.GetProperties(It.IsAny<JobMethod>())", span="90-90", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_39 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_50 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_53 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_56 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_51 [label="x[''Name'']", span="101-101", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_52 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_54 [label="x[''Value'']", span="101-101", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_55 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_57 [label="x.GetProperties(It.IsAny<JobMethod>())", span="102-102", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_58 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_103 [label="Entry lambda expression", span="223-230", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_104 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="225-225", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_105 [label="Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl))", span="226-229", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_106 [label="Exit lambda expression", span="223-230", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_125 [label="Entry lambda expression", span="259-265", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_126 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="261-261", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_127 [label="Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl))", span="262-264", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_128 [label="Exit lambda expression", span="259-265", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_199 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_200 [label="x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId))", span="390-390", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_201 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_203 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_204 [label="y.JobId == JobSteps.DefaultJobId", span="390-390", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_205 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_210 [label="x.Unapply(It.IsAny<StateApplyingContext>())", span="397-397", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_211 [label="Exit lambda expression", span="397-397", cluster="lambda expression", file="StartupConfiguration.cs"];
m30_175 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="StartupConfiguration.cs"];
m30_62 [label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="StartupConfiguration.cs"];
m30_249 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="StartupConfiguration.cs"];
m30_108 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="StartupConfiguration.cs"];
m30_149 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="302-302", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StartupConfiguration.cs"];
m30_150 [label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="304-304", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StartupConfiguration.cs"];
m30_151 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="302-302", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StartupConfiguration.cs"];
m30_31 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StartupConfiguration.cs"];
m30_78 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="StartupConfiguration.cs"];
m30_33 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StartupConfiguration.cs"];
m30_77 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StartupConfiguration.cs"];
m30_80 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="182-182", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StartupConfiguration.cs"];
m30_81 [label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="184-187", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StartupConfiguration.cs"];
m30_82 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="182-182", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StartupConfiguration.cs"];
m30_107 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="StartupConfiguration.cs"];
m30_63 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StartupConfiguration.cs"];
m30_69 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="132-132", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StartupConfiguration.cs"];
m30_70 [label="_filters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="134-134", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StartupConfiguration.cs"];
m30_71 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="132-132", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StartupConfiguration.cs"];
m30_42 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="97-97", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs"];
m30_43 [label="Given(String.Format(''a '{0}' state'', state))", span="99-99", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs"];
m30_44 [label="_stateProperties = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="101-101", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs"];
m30_45 [label="_stateMocks[state].Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(_stateProperties)", span="102-103", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs"];
m30_46 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="97-97", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs"];
m30_97 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StartupConfiguration.cs"];
m30_206 [label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="394-394", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StartupConfiguration.cs"];
m30_207 [label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<StateApplyingContext>()),\r\n                Times.Never)", span="396-398", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StartupConfiguration.cs"];
m30_208 [label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="394-394", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StartupConfiguration.cs"];
m30_193 [label="Entry Unk.RemoveStartFromList", span="", cluster="Unk.RemoveStartFromList", file="StartupConfiguration.cs"];
m30_176 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="341-341", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs"];
m30_177 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="343-343", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs"];
m30_178 [label="Assert.Equal(state, job[''State''])", span="344-344", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs"];
m30_179 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="341-341", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs"];
m30_110 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="234-234", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StartupConfiguration.cs"];
m30_111 [label="Assert.Equal(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="236-238", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StartupConfiguration.cs"];
m30_112 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="234-234", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StartupConfiguration.cs"];
m30_72 [label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StartupConfiguration.cs"];
m30_236 [label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="443-443", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StartupConfiguration.cs"];
m30_237 [label="Assert.Equal(0, _stateChangingResults.Count)", span="445-445", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StartupConfiguration.cs"];
m30_238 [label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="443-443", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StartupConfiguration.cs"];
m30_8 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StartupConfiguration.cs"];
m30_23 [label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="86-86", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs"];
m30_24 [label="var mock = new Mock<JobState>()", span="88-88", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs"];
m30_25 [label="mock.Setup(x => x.StateName).Returns(state)", span="89-89", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs"];
m30_27 [label="_stateMocks.Add(state, mock)", span="93-93", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs"];
m30_26 [label="mock.Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(new Dictionary<string, string>())", span="90-91", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs"];
m30_28 [label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="86-86", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs"];
m30_194 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="StartupConfiguration.cs"];
m30_30 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StartupConfiguration.cs"];
m30_14 [label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="68-68", cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StartupConfiguration.cs"];
m30_15 [label="_state = new ScheduledState(DateTime.UtcNow.AddDays(1))\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="70-73", cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StartupConfiguration.cs"];
m30_16 [label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="68-68", cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StartupConfiguration.cs"];
m30_172 [label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="335-335", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StartupConfiguration.cs"];
m30_173 [label="Assert.True(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="337-337", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StartupConfiguration.cs"];
m30_174 [label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="335-335", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StartupConfiguration.cs"];
m30_17 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="StartupConfiguration.cs"];
m30_146 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="296-296", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StartupConfiguration.cs"];
m30_147 [label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="298-298", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StartupConfiguration.cs"];
m30_148 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="296-296", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StartupConfiguration.cs"];
m30_141 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="StartupConfiguration.cs"];
m30_198 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StartupConfiguration.cs"];
m30_115 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="242-242", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs"];
m30_116 [label="Assert.Equal(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="244-244", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs"];
m30_117 [label="Assert.Equal(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="245-246", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs"];
m30_118 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="242-242", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs"];
m30_143 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="290-290", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StartupConfiguration.cs"];
m30_144 [label="Assert.Equal(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="292-292", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StartupConfiguration.cs"];
m30_145 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="290-290", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StartupConfiguration.cs"];
m30_184 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="348-348", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_181 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="348-348", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_182 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="350-351", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_183 [label="TableAssert.ContainsFollowingItems(table, stateEntry)", span="352-352", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_9 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StartupConfiguration.cs"];
m30_142 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="StartupConfiguration.cs"];
m30_83 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StartupConfiguration.cs"];
m30_161 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="StartupConfiguration.cs"];
m30_113 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="StartupConfiguration.cs"];
m30_98 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="214-214", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs"];
m30_99 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="216-221", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs"];
m30_100 [label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl));\r\n                })", span="223-230", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs"];
m30_101 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="214-214", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs"];
m30_49 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="StartupConfiguration.cs"];
m30_180 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="StartupConfiguration.cs"];
m30_4 [label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="49-49", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs"];
m30_5 [label="_failedException = new InvalidOperationException(''Hello'')", span="51-51", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs"];
m30_6 [label="_state = new FailedState(_failedException)\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="52-55", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs"];
m30_7 [label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="49-49", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs"];
m30_160 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="StartupConfiguration.cs"];
m30_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StartupConfiguration.cs"];
m30_192 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="356-356", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_186 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="356-356", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_187 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="358-359", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_191 [label="TableAssert.ContainsFollowingItems(table, history)", span="365-365", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_188 [label="Assert.NotNull(entry)", span="360-360", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_189 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="362-362", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_190 [label="Assert.NotNull(history)", span="363-363", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_40 [label="Entry Unk.>", span="", cluster="Unk.>", file="StartupConfiguration.cs"];
m30_159 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="StartupConfiguration.cs"];
m30_119 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="StartupConfiguration.cs"];
m30_3 [label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23", cluster="HangFire.States.SucceededState.SucceededState()", file="StartupConfiguration.cs"];
m30_0 [label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="43-43", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StartupConfiguration.cs"];
m30_1 [label="_state = new SucceededState { Reason = ''SomeReason'' }", span="45-45", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StartupConfiguration.cs"];
m30_2 [label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="43-43", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StartupConfiguration.cs"];
m30_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StartupConfiguration.cs"];
m30_84 [label="Entry Unk.When", span="", cluster="Unk.When", file="StartupConfiguration.cs"];
m30_129 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="269-269", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StartupConfiguration.cs"];
m30_130 [label="Assert.Equal(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="271-271", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StartupConfiguration.cs"];
m30_131 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="269-269", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StartupConfiguration.cs"];
m30_132 [label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="275-275", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_133 [label="TableAssert.ContainsFollowingItems(\r\n                table,\r\n                _state.GetProperties(_defaultData))", span="277-279", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_134 [label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="275-275", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StartupConfiguration.cs"];
m30_247 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="StartupConfiguration.cs"];
m30_85 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="191-191", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs"];
m30_86 [label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="193-194", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs"];
m30_87 [label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="195-195", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs"];
m30_88 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="191-191", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs"];
m30_248 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StartupConfiguration.cs"];
m30_79 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StartupConfiguration.cs"];
m30_73 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="174-174", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs"];
m30_74 [label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="176-177", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs"];
m30_75 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="178-178", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs"];
m30_76 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="174-174", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs"];
m30_114 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="StartupConfiguration.cs"];
m30_109 [label="Entry Unk.True", span="", cluster="Unk.True", file="StartupConfiguration.cs"];
m30_185 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="StartupConfiguration.cs"];
m30_250 [label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="462-462", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_251 [label="Assert.Equal(table.RowCount, _stateAppliedResults.Count)", span="464-464", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_253 [label="i < table.RowCount", span="466-466", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_254 [label="Assert.Equal(table.Rows[i][''Method''], _stateAppliedResults[i])", span="468-468", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_252 [label="var i = 0", span="466-466", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_255 [label="i++", span="466-466", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_256 [label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="462-462", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs"];
m30_257 [label="HangFire.Tests.States.StateSteps", span="", file="StartupConfiguration.cs"];
m31_138 [label="Entry HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", span="49-49", cluster="HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", file="WorkerContextFacts.cs"];
m31_31 [label="Entry Unk.RegisterPathHandlerFactory", span="", cluster="Unk.RegisterPathHandlerFactory", file="WorkerContextFacts.cs"];
m31_196 [label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="WorkerContextFacts.cs"];
m31_223 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="WorkerContextFacts.cs"];
m31_51 [label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="WorkerContextFacts.cs"];
m31_47 [label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="53-53", cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="WorkerContextFacts.cs"];
m31_0 [label="Entry HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_1 [label="RazorPage.ExceptionHandler = ex => new ErrorPage(ex)", span="37-37", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_2 [label="RegisterDefaultPathHandlerFactory(() => new DashboardPage())", span="39-39", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_3 [label="RegisterPathHandlerFactory(\r\n                ''/job/(?<JobId>.+)'',\r\n                x => new JobDetailsPage(x.Groups[''JobId''].Value))", span="41-43", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_4 [label="RegisterPathHandlerFactory(''/queues'', x => new QueuesPage())", span="45-45", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_5 [label="RegisterPathHandlerFactory(\r\n                ''/queues/fetched/(?<Queue>.+)'',\r\n                x => new FetchedJobsPage(x.Groups[''Queue''].Value))", span="46-48", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_6 [label="RegisterPathHandlerFactory(\r\n                ''/queues/(?<Queue>.+)'',\r\n                x => new EnqueuedJobsPage(x.Groups[''Queue''].Value))", span="49-51", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_7 [label="RegisterPathHandlerFactory(''/enqueued/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId)))", span="53-54", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="WorkerContextFacts.cs"];
m31_8 [label="RegisterPathHandlerFactory(''/enqueued/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId)))", span="56-57", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_9 [label="RegisterPathHandlerFactory(''/processing'', x => new ProcessingJobsPage())", span="59-59", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_10 [label="RegisterPathHandlerFactory(''/processing/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName)))", span="60-61", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", color=red, community=0, file="WorkerContextFacts.cs"];
m31_11 [label="RegisterPathHandlerFactory(''/processing/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName)))", span="63-64", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_12 [label="RegisterPathHandlerFactory(''/scheduled'', x => new ScheduledJobsPage())", span="66-66", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_13 [label="RegisterPathHandlerFactory(''/scheduled/enqueue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName)))", span="68-69", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_14 [label="RegisterPathHandlerFactory(''/scheduled/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName)))", span="71-72", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_15 [label="RegisterPathHandlerFactory(''/servers'', x => new ServersPage())", span="74-74", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_16 [label="RegisterPathHandlerFactory(''/succeeded'', x => new SucceededJobs())", span="75-75", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_17 [label="RegisterPathHandlerFactory(''/succeeded/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName)))", span="76-77", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_18 [label="RegisterPathHandlerFactory(''/failed'', x => new FailedJobsPage())", span="79-79", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_19 [label="RegisterPathHandlerFactory(''/failed/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName)))", span="81-82", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_20 [label="RegisterPathHandlerFactory(''/failed/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName)))", span="84-85", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_21 [label="RegisterPathHandlerFactory(''/deleted'', x => new DeletedJobsPage())", span="87-87", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_22 [label="RegisterPathHandlerFactory(''/deleted/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName)))", span="89-90", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_23 [label="RegisterPathHandlerFactory(\r\n                ''/actions/requeue/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value)))", span="92-94", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_24 [label="RegisterPathHandlerFactory(\r\n                ''/actions/delete/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value)))", span="96-98", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_25 [label="RegisterPathHandlerFactory(''/js/scripts.js'',  x => new JavaScriptHandler())", span="100-100", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_26 [label="RegisterPathHandlerFactory(''/css/styles.css'', x => new StyleSheetHandler())", span="101-101", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_27 [label="RegisterPathHandlerFactory(\r\n                ''/fonts/(?<File>.+)'',\r\n                x => new FontsHandler(x.Groups[''File''].Value))", span="103-105", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_28 [label="RegisterPathHandlerFactory(\r\n                ''/stats'',\r\n                x => new JsonStats())", span="107-109", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_29 [label="Exit HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35", cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs"];
m31_43 [label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="WorkerContextFacts.cs"];
m31_112 [label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="54-54", cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="WorkerContextFacts.cs"];
m31_165 [label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="WorkerContextFacts.cs"];
m31_217 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", file="WorkerContextFacts.cs"];
m31_74 [label="Entry HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="43-43", cluster="HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="WorkerContextFacts.cs"];
m31_179 [label="Entry HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119", cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="WorkerContextFacts.cs"];
m31_180 [label="_defaultHandlerFactory = handlerFactory", span="121-121", cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="WorkerContextFacts.cs"];
m31_181 [label="Exit HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119", cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="WorkerContextFacts.cs"];
m31_219 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="WorkerContextFacts.cs"];
m31_220 [label="Entry HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179", cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="WorkerContextFacts.cs"];
m31_221 [label="return String.Format(''{0}.Content.{1}'', typeof (HangFirePageFactory).Namespace, contentFolder);", span="181-181", cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="WorkerContextFacts.cs"];
m31_222 [label="Exit HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179", cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="WorkerContextFacts.cs"];
m31_200 [label="Entry HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_201 [label="resource.Length == 0 || resource.Equals(''/'', StringComparison.OrdinalIgnoreCase)", span="151-151", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_209 [label="var match = Regex.Match(\r\n                    resource,\r\n                    pattern, \r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="165-168", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_202 [label="return _defaultHandlerFactory();", span="153-153", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_203 [label=PathHandlerFactories, span="156-156", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_204 [label="var pattern = pathHandlerFactory.Item1", span="158-158", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_212 [label="return null;", span="176-176", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_211 [label="return pathHandlerFactory.Item2(match);", span="172-172", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_205 [label="!pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="160-160", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_206 [label="pattern = ''^'' + pattern", span="161-161", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_207 [label="!pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="162-162", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_208 [label="pattern += ''$''", span="163-163", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_210 [label="match.Success", span="170-170", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_213 [label="Exit HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149", cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs"];
m31_92 [label="Entry HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="43-43", cluster="HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="WorkerContextFacts.cs"];
m31_63 [label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164", cluster="HangFire.BackgroundJob.Delete(string)", file="WorkerContextFacts.cs"];
m31_169 [label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="WorkerContextFacts.cs"];
m31_39 [label="Entry HangFire.Web.Pages.DashboardPage.DashboardPage()", span="47-47", cluster="HangFire.Web.Pages.DashboardPage.DashboardPage()", file="WorkerContextFacts.cs"];
m31_197 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="WorkerContextFacts.cs"];
m31_148 [label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="WorkerContextFacts.cs"];
m31_216 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="WorkerContextFacts.cs"];
m31_215 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="WorkerContextFacts.cs"];
m31_177 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="WorkerContextFacts.cs"];
m31_59 [label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="WorkerContextFacts.cs"];
m31_70 [label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197", cluster="HangFire.BackgroundJob.Requeue(string)", file="WorkerContextFacts.cs"];
m31_173 [label="Entry HangFire.Web.JsonStats.JsonStats()", span="22-22", cluster="HangFire.Web.JsonStats.JsonStats()", file="WorkerContextFacts.cs"];
m31_218 [label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="WorkerContextFacts.cs"];
m31_122 [label="Entry HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", span="48-48", cluster="HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", file="WorkerContextFacts.cs"];
m31_155 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_33 [label="new ErrorPage(ex)", span="37-37", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_36 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_40 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_44 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_48 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_52 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_56 [label="Entry lambda expression", span="53-54", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_64 [label="Entry lambda expression", span="56-57", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_71 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_75 [label="Entry lambda expression", span="60-61", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_82 [label="Entry lambda expression", span="63-64", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_89 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_93 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_99 [label="Entry lambda expression", span="71-72", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_105 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_109 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_113 [label="Entry lambda expression", span="76-77", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_119 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_123 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_129 [label="Entry lambda expression", span="84-85", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_135 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_139 [label="Entry lambda expression", span="89-90", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_145 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_152 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_158 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_162 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_166 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_170 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_37 [label="new DashboardPage()", span="39-39", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_38 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_41 [label="new JobDetailsPage(x.Groups[''JobId''].Value)", span="43-43", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_42 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_45 [label="new QueuesPage()", span="45-45", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_46 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_49 [label="new FetchedJobsPage(x.Groups[''Queue''].Value)", span="48-48", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_50 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_53 [label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", span="51-51", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_54 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_57 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId))", span="53-54", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m31_58 [label="Exit lambda expression", span="53-54", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_61 [label="BackgroundJob.Delete(jobId)", span="54-54", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m31_60 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_62 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_65 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId))", span="56-57", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_66 [label="Exit lambda expression", span="56-57", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_68 [label="BackgroundJob.Requeue(jobId)", span="57-57", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_67 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_69 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_72 [label="new ProcessingJobsPage()", span="59-59", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_73 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_76 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName))", span="60-61", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m31_77 [label="Exit lambda expression", span="60-61", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_79 [label="BackgroundJob.Delete(jobId, ProcessingState.StateName)", span="61-61", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m31_78 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_80 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_83 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName))", span="63-64", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_84 [label="Exit lambda expression", span="63-64", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_86 [label="BackgroundJob.Requeue(jobId, ProcessingState.StateName)", span="64-64", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_85 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_87 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_90 [label="new ScheduledJobsPage()", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_91 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_94 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName))", span="68-69", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_95 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_97 [label="BackgroundJob.Requeue(jobId, ScheduledState.StateName)", span="69-69", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_96 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_98 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_100 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName))", span="71-72", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_101 [label="Exit lambda expression", span="71-72", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_103 [label="BackgroundJob.Delete(jobId, ScheduledState.StateName)", span="72-72", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_102 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_104 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_106 [label="new ServersPage()", span="74-74", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_107 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_110 [label="new SucceededJobs()", span="75-75", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_111 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_114 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName))", span="76-77", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_115 [label="Exit lambda expression", span="76-77", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_117 [label="BackgroundJob.Requeue(jobId, SucceededState.StateName)", span="77-77", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_116 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_118 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_120 [label="new FailedJobsPage()", span="79-79", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_121 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_124 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName))", span="81-82", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_125 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_127 [label="BackgroundJob.Requeue(jobId, FailedState.StateName)", span="82-82", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_126 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_128 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_130 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName))", span="84-85", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_131 [label="Exit lambda expression", span="84-85", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_133 [label="BackgroundJob.Delete(jobId, FailedState.StateName)", span="85-85", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_132 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_134 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_136 [label="new DeletedJobsPage()", span="87-87", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_137 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_140 [label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName))", span="89-90", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_141 [label="Exit lambda expression", span="89-90", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_143 [label="BackgroundJob.Requeue(jobId, DeletedState.StateName)", span="90-90", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_142 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_144 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_146 [label="new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value))", span="94-94", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_150 [label="BackgroundJob.Requeue(x.Groups[''JobId''].Value)", span="94-94", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_147 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_149 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_151 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_153 [label="new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value))", span="98-98", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_156 [label="BackgroundJob.Delete(x.Groups[''JobId''].Value)", span="98-98", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_154 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_157 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_159 [label="new JavaScriptHandler()", span="100-100", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_160 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_163 [label="new StyleSheetHandler()", span="101-101", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_164 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_167 [label="new FontsHandler(x.Groups[''File''].Value)", span="105-105", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_168 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_171 [label="new JsonStats()", span="109-109", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_172 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="WorkerContextFacts.cs"];
m31_161 [label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="WorkerContextFacts.cs"];
m31_214 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="WorkerContextFacts.cs"];
m31_55 [label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="WorkerContextFacts.cs"];
m31_182 [label="Entry HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_183 [label="context == null", span="126-126", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_185 [label="!HangFireConfiguration.EnableRemoteMonitorAccess && !context.Request.IsLocal", span="128-128", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_186 [label="return HttpStatusHandler.Process(context, HttpStatusCode.Unauthorized);", span="130-130", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_187 [label="context.Items.Add(''GenerationStartedAt'', DateTime.UtcNow)", span="133-133", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_188 [label="var request = context.Request", span="135-135", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_192 [label="return HttpStatusHandler.Process(context, HttpStatusCode.NotFound);", span="143-143", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_184 [label="throw new ArgumentNullException(''context'');", span="126-126", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_189 [label="var resource = request.PathInfo.Length == 0\r\n                ? String.Empty\r\n                : request.PathInfo.ToLowerInvariant()", span="136-138", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_190 [label="var handler = FindHandler(resource)", span="140-140", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_191 [label="handler == null", span="141-141", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_193 [label="return handler;", span="146-146", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_194 [label="Exit HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124", cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs"];
m31_108 [label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="53-53", cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="WorkerContextFacts.cs"];
m31_178 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerContextFacts.cs"];
m31_198 [label="Entry Unk.ToLowerInvariant", span="", cluster="Unk.ToLowerInvariant", file="WorkerContextFacts.cs"];
m31_35 [label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="WorkerContextFacts.cs"];
m31_81 [label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182", cluster="HangFire.BackgroundJob.Delete(string, string)", file="WorkerContextFacts.cs"];
m31_224 [label="Entry HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184", cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="WorkerContextFacts.cs"];
m31_225 [label="return String.Format(''{0}.{1}'', GetContentFolderNamespace(contentFolder), resourceName);", span="186-186", cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="WorkerContextFacts.cs"];
m31_226 [label="Exit HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184", cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="WorkerContextFacts.cs"];
m31_199 [label="Entry Unk.FindHandler", span="", cluster="Unk.FindHandler", file="WorkerContextFacts.cs"];
m31_174 [label="Entry HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112", cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="WorkerContextFacts.cs"];
m31_175 [label="PathHandlerFactories.Add(new Tuple<string, Func<Match, IHttpHandler>>(\r\n                pathPattern, handlerFactory))", span="115-116", cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="WorkerContextFacts.cs"];
m31_176 [label="Exit HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112", cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="WorkerContextFacts.cs"];
m31_30 [label="Entry Unk.RegisterDefaultPathHandlerFactory", span="", cluster="Unk.RegisterDefaultPathHandlerFactory", file="WorkerContextFacts.cs"];
m31_227 [label="Entry HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189", cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="WorkerContextFacts.cs"];
m31_228 [label="Exit HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189", cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="WorkerContextFacts.cs"];
m31_88 [label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215", cluster="HangFire.BackgroundJob.Requeue(string, string)", file="WorkerContextFacts.cs"];
m31_229 [label="System.Text.RegularExpressions.Match", span="", file="WorkerContextFacts.cs"];
m31_230 [label="System.Text.RegularExpressions.Match", span="", file="WorkerContextFacts.cs"];
m31_231 [label="HangFire.Web.HangFirePageFactory", span="", file="WorkerContextFacts.cs"];
m32_0 [label="Entry HangFire.Tests.TestJob.Perform()", span="4-4", cluster="HangFire.Tests.TestJob.Perform()", file="WorkerContextMock.cs"];
m32_1 [label="Exit HangFire.Tests.TestJob.Perform()", span="4-4", cluster="HangFire.Tests.TestJob.Perform()", file="WorkerContextMock.cs"];
m33_82 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", span="93-93", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="WorkerFacts.cs"];
m33_164 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="184-184", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m33_165 [label="var worker = CreateWorker()", span="186-186", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m33_166 [label="worker.Execute(_token)", span="188-188", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", color=red, community=0, file="WorkerFacts.cs"];
m33_167 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="190-196", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m33_168 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="184-184", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m33_90 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="109-109", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m33_19 [label="var index = 0", span="178-178", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs", color=green, community=0];
m33_79 [label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="WorkerFacts.cs"];
m33_80 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", color=red, community=0, file="WorkerFacts.cs"];
m33_81 [label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35", cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="WorkerFacts.cs"];
m33_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="141-148", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs"];
m33_60 [label="Write(index++ == 0 ? ''display: block;'' : null)", span="420-420", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs"];
m33_288 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="WorkerFacts.cs"];
m33_245 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="284-284", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m33_246 [label="var exception = new InvalidOperationException()", span="287-287", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m33_247 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="288-290", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m33_250 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="298-302", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m33_248 [label="var worker = CreateWorker()", span="292-292", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m33_249 [label="worker.Execute(_token)", span="295-295", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", color=red, community=0, file="WorkerFacts.cs"];
m33_251 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="284-284", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m33_234 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="270-270", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m33_235 [label="var worker = CreateWorker()", span="272-272", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m33_236 [label="worker.Execute(_token)", span="274-274", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", color=red, community=0, file="WorkerFacts.cs"];
m33_237 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="276-280", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m33_238 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="270-270", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m33_27 [label="WriteLiteral(''\''>\n'')", span="222-222", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs"];
m33_0 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="26-26", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_2 [label="_storage = new Mock<JobStorage>()", span="29-29", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs"];
m33_1 [label="_context = new WorkerContextMock()", span="28-28", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", color=red, community=0];
m33_3 [label="_process = new Mock<IJobPerformanceProcess>()", span="30-30", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_7 [label="_fetchedJob = new Mock<IFetchedJob>()", span="37-37", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="WorkerFacts.cs"];
m33_4 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="31-31", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_5 [label="_connection = new Mock<IStorageConnection>()", span="33-33", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_6 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="35-35", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", color=red, community=0];
m33_8 [label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="38-38", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_10 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="44-48", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_17 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="WorkerFacts.cs"];
m33_72 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="84-84", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m33_14 [label="_token = new CancellationToken()", span="62-62", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs"];
m33_13 [label="_stateMachine.Setup(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())).Returns(true)", span="56-60", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_15 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="26-26", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_18 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", color=green, community=0, file="WorkerFacts.cs"];
m33_20 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs"];
m33_26 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", color=green, community=0, file="WorkerFacts.cs"];
m33_24 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="WorkerFacts.cs"];
m33_25 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs"];
m33_28 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="WorkerFacts.cs"];
m33_29 [label="x.GetConnection()", span="35-35", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_30 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="WorkerFacts.cs"];
m33_38 [label="WriteLiteral(''\n                            </a>\n'')", span="285-285", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="WorkerFacts.cs"];
m33_37 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="WorkerFacts.cs"];
m33_39 [label="Entry Unk.FetchNextJob", span="", cluster="Unk.FetchNextJob", file="WorkerFacts.cs"];
m33_41 [label="x.GetJobData(JobId)", span="44-44", cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs"];
m33_40 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="WorkerFacts.cs"];
m33_42 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="WorkerFacts.cs"];
m33_9 [label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_fetchedJob.Object)", span="40-42", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", color=red, community=0];
m33_11 [label="_stateMachine = new Mock<IStateMachine>()", span="50-50", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_12 [label="_stateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="52-54", cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m33_21 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerFacts.cs"];
m33_22 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WorkerFacts.cs"];
m33_23 [label="Entry Mock<IFetchedJob>.cstr", span="", cluster="Mock<IFetchedJob>.cstr", file="WorkerFacts.cs"];
m33_31 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="WorkerFacts.cs"];
m33_32 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="WorkerFacts.cs"];
m33_33 [label="x.JobId", span="38-38", cluster="lambda expression", file="WorkerFacts.cs"];
m33_34 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="WorkerFacts.cs"];
m33_35 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="WorkerFacts.cs"];
m33_36 [label="x.FetchNextJob(_context.Queues, It.IsNotNull<CancellationToken>())", span="41-41", cluster="lambda expression", file="WorkerFacts.cs", color=red, community=0];
m33_43 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="WorkerFacts.cs"];
m33_44 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="WorkerFacts.cs"];
m33_45 [label="Method()", span="47-47", cluster="lambda expression", file="WorkerFacts.cs"];
m33_46 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="WorkerFacts.cs"];
m33_47 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="352-352", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs"];
m33_48 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="WorkerFacts.cs"];
m33_49 [label="x.Create(_connection.Object)", span="53-53", cluster="lambda expression", file="WorkerFacts.cs"];
m33_50 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="WorkerFacts.cs"];
m33_51 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="WorkerFacts.cs"];
m33_52 [label="Entry lambda expression", span="56-60", cluster="lambda expression", file="WorkerFacts.cs"];
m33_54 [label="Exit lambda expression", span="56-60", cluster="lambda expression", file="WorkerFacts.cs"];
m33_55 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="WorkerFacts.cs"];
m33_56 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="66-66", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m33_57 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object))", span="68-69", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", color=red, community=0];
m33_59 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="66-66", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m33_61 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="WorkerFacts.cs"];
m33_62 [label="new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="69-69", cluster="lambda expression", file="WorkerFacts.cs", color=red, community=0];
m33_63 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="WorkerFacts.cs"];
m33_64 [label="Entry Worker.cstr", span="", cluster="Worker.cstr", file="WorkerFacts.cs"];
m33_65 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="75-75", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs"];
m33_67 [label="Assert.Equal(''storage'', exception.ParamName)", span="80-80", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs", color=red, community=0];
m33_68 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="75-75", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs"];
m33_69 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="WorkerFacts.cs"];
m33_70 [label="new Worker(_context.Object, null, _process.Object, _stateMachineFactory.Object)", span="78-78", cluster="lambda expression", file="WorkerFacts.cs", color=red, community=0];
m33_71 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="WorkerFacts.cs"];
m33_58 [label="Assert.Equal(''context'', exception.ParamName)", span="71-71", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m33_53 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="56-60", cluster="lambda expression", file="WorkerFacts.cs"];
m33_66 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context.Object, null, _process.Object, _stateMachineFactory.Object))", span="77-78", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs", color=red, community=1];
m33_73 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context.Object, _storage.Object, null, _stateMachineFactory.Object))", span="86-87", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", color=red, community=0];
m33_134 [label="Entry Unk.Requeue", span="", cluster="Unk.Requeue", file="WorkerFacts.cs"];
m33_175 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="200-200", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m33_176 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>()))\r\n                .Returns(false)", span="203-209", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m33_177 [label="var worker = CreateWorker()", span="211-211", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m33_178 [label="worker.Execute(_token)", span="214-214", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", color=red, community=0, file="WorkerFacts.cs"];
m33_179 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="217-219", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m33_180 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="200-200", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m33_187 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="223-223", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m33_188 [label="var worker = CreateWorker()", span="225-225", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m33_189 [label="worker.Execute(_token)", span="227-227", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", color=red, community=0, file="WorkerFacts.cs"];
m33_190 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="229-231", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m33_191 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="223-223", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m33_221 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="WorkerFacts.cs"];
m33_149 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="WorkerFacts.cs"];
m33_78 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="WorkerFacts.cs"];
m33_252 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs"];
m33_76 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="WorkerFacts.cs"];
m33_74 [label="Assert.Equal(''process'', exception.ParamName)", span="89-89", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m33_115 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="127-127", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m33_116 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="129-131", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m33_117 [label="var worker = CreateWorker()", span="133-133", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m33_118 [label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_token))", span="135-136", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", color=red, community=0, file="WorkerFacts.cs"];
m33_119 [label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="138-138", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m33_120 [label="_fetchedJob.Verify(x => x.Requeue())", span="139-139", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m33_121 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="127-127", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs"];
m33_214 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="254-254", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m33_215 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="257-258", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m33_216 [label="var worker = CreateWorker()", span="260-260", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m33_217 [label="Assert.DoesNotThrow(() => worker.Execute(_token))", span="263-263", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", color=red, community=0, file="WorkerFacts.cs"];
m33_218 [label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="265-265", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m33_219 [label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="266-266", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m33_220 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="254-254", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs"];
m33_92 [label="HangFire.Web.Pages.FailedJobsPage", span="", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m33_295 [label="return new Worker(_context.Object, _storage.Object, _process.Object, _stateMachineFactory.Object);", span="349-349", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", color=red, community=0, file="WorkerFacts.cs"];
m33_296 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="347-347", cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m33_264 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="306-306", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m33_265 [label="var exception = new InvalidOperationException()", span="309-309", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m33_266 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="310-312", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m33_269 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="320-324", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m33_267 [label="var worker = CreateWorker()", span="314-314", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m33_268 [label="worker.Execute(_token)", span="317-317", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", color=red, community=0, file="WorkerFacts.cs"];
m33_270 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="306-306", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m33_84 [label="new Worker(_context.Object, _storage.Object, _process.Object, null)", span="96-96", cluster="lambda expression", file="WorkerFacts.cs", color=red, community=0];
m33_142 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="WorkerFacts.cs"];
m33_89 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="108-108", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", color=red, community=0];
m33_101 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="WorkerFacts.cs"];
m33_253 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="WorkerFacts.cs"];
m33_86 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="WorkerFacts.cs"];
m33_87 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="WorkerFacts.cs"];
m33_88 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", color=red, community=0, file="WorkerFacts.cs"];
m33_91 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="WorkerFacts.cs"];
m33_281 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="328-328", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m33_282 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="331-332", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m33_283 [label="var worker = CreateWorker()", span="334-334", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m33_284 [label="worker.Execute(_token)", span="337-337", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", color=red, community=0, file="WorkerFacts.cs"];
m33_285 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="340-344", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m33_286 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="328-328", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m33_83 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="WorkerFacts.cs"];
m33_114 [label="Entry Unk.RemoveFromQueue", span="", cluster="Unk.RemoveFromQueue", file="WorkerFacts.cs"];
m33_292 [label="Entry lambda expression", span="340-344", cluster="lambda expression", file="WorkerFacts.cs"];
m33_77 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", color=red, community=0, file="WorkerFacts.cs"];
m33_85 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="WorkerFacts.cs"];
m33_95 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="WorkerFacts.cs"];
m33_98 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="WorkerFacts.cs"];
m33_96 [label="x.GetConnection()", span="108-108", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_97 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="WorkerFacts.cs"];
m33_99 [label="x.Dispose()", span="109-109", cluster="lambda expression", file="WorkerFacts.cs"];
m33_100 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="WorkerFacts.cs"];
m33_108 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="WorkerFacts.cs"];
m33_111 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="WorkerFacts.cs"];
m33_109 [label="x.FetchNextJob(_context.Queues, _token)", span="120-120", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_110 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="WorkerFacts.cs"];
m33_112 [label="x.RemoveFromQueue()", span="123-123", cluster="lambda expression", file="WorkerFacts.cs"];
m33_113 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="WorkerFacts.cs"];
m33_122 [label="Entry lambda expression", span="130-130", cluster="lambda expression", file="WorkerFacts.cs"];
m33_126 [label="worker.Execute(_token)", span="136-136", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_125 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="WorkerFacts.cs"];
m33_128 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="WorkerFacts.cs"];
m33_131 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="WorkerFacts.cs"];
m33_123 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="130-130", cluster="lambda expression", file="WorkerFacts.cs"];
m33_124 [label="Exit lambda expression", span="130-130", cluster="lambda expression", file="WorkerFacts.cs"];
m33_127 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="WorkerFacts.cs"];
m33_129 [label="x.RemoveFromQueue()", span="138-138", cluster="lambda expression", file="WorkerFacts.cs"];
m33_130 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="WorkerFacts.cs"];
m33_132 [label="x.Requeue()", span="139-139", cluster="lambda expression", file="WorkerFacts.cs"];
m33_133 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="WorkerFacts.cs"];
m33_143 [label="Entry lambda expression", span="147-148", cluster="lambda expression", file="WorkerFacts.cs"];
m33_146 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="WorkerFacts.cs"];
m33_150 [label="Entry lambda expression", span="156-157", cluster="lambda expression", file="WorkerFacts.cs"];
m33_144 [label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="147-148", cluster="lambda expression", file="WorkerFacts.cs"];
m33_145 [label="Exit lambda expression", span="147-148", cluster="lambda expression", file="WorkerFacts.cs"];
m33_147 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="152-152", cluster="lambda expression", file="WorkerFacts.cs"];
m33_148 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="WorkerFacts.cs"];
m33_151 [label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="156-157", cluster="lambda expression", file="WorkerFacts.cs"];
m33_152 [label="Exit lambda expression", span="156-157", cluster="lambda expression", file="WorkerFacts.cs"];
m33_158 [label="Entry lambda expression", span="176-180", cluster="lambda expression", file="WorkerFacts.cs"];
m33_159 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="176-180", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_160 [label="Exit lambda expression", span="176-180", cluster="lambda expression", file="WorkerFacts.cs"];
m33_161 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="WorkerFacts.cs"];
m33_162 [label="state.ServerId == _context.Object.ServerId", span="178-178", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_163 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="WorkerFacts.cs"];
m33_169 [label="Entry lambda expression", span="190-196", cluster="lambda expression", file="WorkerFacts.cs"];
m33_170 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="190-196", cluster="lambda expression", file="WorkerFacts.cs"];
m33_171 [label="Exit lambda expression", span="190-196", cluster="lambda expression", file="WorkerFacts.cs"];
m33_172 [label="Entry lambda expression", span="194-195", cluster="lambda expression", file="WorkerFacts.cs"];
m33_173 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="194-195", cluster="lambda expression", file="WorkerFacts.cs"];
m33_174 [label="Exit lambda expression", span="194-195", cluster="lambda expression", file="WorkerFacts.cs"];
m33_181 [label="Entry lambda expression", span="204-208", cluster="lambda expression", file="WorkerFacts.cs"];
m33_184 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="WorkerFacts.cs"];
m33_182 [label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>())", span="204-208", cluster="lambda expression", file="WorkerFacts.cs"];
m33_183 [label="Exit lambda expression", span="204-208", cluster="lambda expression", file="WorkerFacts.cs"];
m33_185 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="218-218", cluster="lambda expression", file="WorkerFacts.cs"];
m33_186 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="WorkerFacts.cs"];
m33_192 [label="Entry lambda expression", span="229-231", cluster="lambda expression", file="WorkerFacts.cs"];
m33_193 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="229-231", cluster="lambda expression", file="WorkerFacts.cs"];
m33_194 [label="Exit lambda expression", span="229-231", cluster="lambda expression", file="WorkerFacts.cs"];
m33_202 [label="Entry lambda expression", span="238-238", cluster="lambda expression", file="WorkerFacts.cs"];
m33_206 [label="worker.Execute(_token)", span="244-244", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_205 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="WorkerFacts.cs"];
m33_208 [label="Entry lambda expression", span="248-248", cluster="lambda expression", file="WorkerFacts.cs"];
m33_211 [label="Entry lambda expression", span="250-250", cluster="lambda expression", file="WorkerFacts.cs"];
m33_203 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="238-238", cluster="lambda expression", file="WorkerFacts.cs"];
m33_204 [label="Exit lambda expression", span="238-238", cluster="lambda expression", file="WorkerFacts.cs"];
m33_207 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="WorkerFacts.cs"];
m33_209 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="248-248", cluster="lambda expression", file="WorkerFacts.cs"];
m33_210 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="WorkerFacts.cs"];
m33_212 [label="x.Requeue()", span="250-250", cluster="lambda expression", file="WorkerFacts.cs"];
m33_213 [label="Exit lambda expression", span="250-250", cluster="lambda expression", file="WorkerFacts.cs"];
m33_222 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="WorkerFacts.cs"];
m33_226 [label="worker.Execute(_token)", span="263-263", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m33_225 [label="Entry lambda expression", span="263-263", cluster="lambda expression", file="WorkerFacts.cs"];
m33_228 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="WorkerFacts.cs"];
m33_231 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="WorkerFacts.cs"];
m33_223 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="257-257", cluster="lambda expression", file="WorkerFacts.cs"];
m33_224 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="WorkerFacts.cs"];
m33_227 [label="Exit lambda expression", span="263-263", cluster="lambda expression", file="WorkerFacts.cs"];
m33_229 [label="x.RemoveFromQueue()", span="265-265", cluster="lambda expression", file="WorkerFacts.cs"];
m33_230 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="WorkerFacts.cs"];
m33_232 [label="x.Requeue()", span="266-266", cluster="lambda expression", file="WorkerFacts.cs"];
m33_233 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="WorkerFacts.cs"];
m33_239 [label="Entry lambda expression", span="276-280", cluster="lambda expression", file="WorkerFacts.cs"];
m33_240 [label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="276-280", cluster="lambda expression", file="WorkerFacts.cs"];
m33_241 [label="Exit lambda expression", span="276-280", cluster="lambda expression", file="WorkerFacts.cs"];
m33_242 [label="Entry lambda expression", span="279-279", cluster="lambda expression", file="WorkerFacts.cs"];
m33_243 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="279-279", cluster="lambda expression", file="WorkerFacts.cs"];
m33_244 [label="Exit lambda expression", span="279-279", cluster="lambda expression", file="WorkerFacts.cs"];
m33_258 [label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="298-302", cluster="lambda expression", file="WorkerFacts.cs"];
m33_261 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="300-300", cluster="lambda expression", file="WorkerFacts.cs"];
m33_254 [label="Entry lambda expression", span="289-289", cluster="lambda expression", file="WorkerFacts.cs"];
m33_257 [label="Entry lambda expression", span="298-302", cluster="lambda expression", file="WorkerFacts.cs"];
m33_255 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="289-289", cluster="lambda expression", file="WorkerFacts.cs"];
m33_256 [label="Exit lambda expression", span="289-289", cluster="lambda expression", file="WorkerFacts.cs"];
m33_259 [label="Exit lambda expression", span="298-302", cluster="lambda expression", file="WorkerFacts.cs"];
m33_260 [label="Entry lambda expression", span="300-300", cluster="lambda expression", file="WorkerFacts.cs"];
m33_262 [label="Exit lambda expression", span="300-300", cluster="lambda expression", file="WorkerFacts.cs"];
m33_276 [label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="320-324", cluster="lambda expression", file="WorkerFacts.cs"];
m33_279 [label="state.Exception == exception && state.Reason == ''hello''", span="322-322", cluster="lambda expression", file="WorkerFacts.cs"];
m33_272 [label="Entry lambda expression", span="311-311", cluster="lambda expression", file="WorkerFacts.cs"];
m33_275 [label="Entry lambda expression", span="320-324", cluster="lambda expression", file="WorkerFacts.cs"];
m33_273 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="311-311", cluster="lambda expression", file="WorkerFacts.cs"];
m33_274 [label="Exit lambda expression", span="311-311", cluster="lambda expression", file="WorkerFacts.cs"];
m33_277 [label="Exit lambda expression", span="320-324", cluster="lambda expression", file="WorkerFacts.cs"];
m33_278 [label="Entry lambda expression", span="322-322", cluster="lambda expression", file="WorkerFacts.cs"];
m33_280 [label="Exit lambda expression", span="322-322", cluster="lambda expression", file="WorkerFacts.cs"];
m33_289 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="WorkerFacts.cs"];
m33_290 [label="x.GetJobData(JobId)", span="331-331", cluster="lambda expression", file="WorkerFacts.cs"];
m33_291 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="WorkerFacts.cs"];
m33_293 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="340-344", cluster="lambda expression", file="WorkerFacts.cs"];
m33_294 [label="Exit lambda expression", span="340-344", cluster="lambda expression", file="WorkerFacts.cs"];
m33_153 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="170-170", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m33_154 [label="var worker = CreateWorker()", span="172-172", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m33_155 [label="worker.Execute(_token)", span="174-174", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", color=red, community=0, file="WorkerFacts.cs"];
m33_156 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="176-180", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", color=red, community=0, file="WorkerFacts.cs"];
m33_157 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="170-170", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m33_263 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="WorkerFacts.cs"];
m33_94 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="WorkerFacts.cs"];
m33_135 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="143-143", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m33_136 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="146-150", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m33_137 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="152-153", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m33_138 [label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="155-159", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m33_139 [label="var worker = CreateWorker()", span="161-161", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m33_140 [label="worker.Execute(_token)", span="164-164", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=red, community=0, file="WorkerFacts.cs"];
m33_141 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="143-143", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m33_102 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="113-113", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m33_103 [label="var worker = CreateWorker()", span="115-115", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m33_104 [label="worker.Execute(_token)", span="117-117", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", color=red, community=0, file="WorkerFacts.cs"];
m33_105 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_context.Queues, _token),\r\n                Times.Once)", span="119-121", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", color=red, community=0, file="WorkerFacts.cs"];
m33_106 [label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="123-123", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m33_107 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="113-113", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs"];
m33_287 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerFacts.cs"];
m33_271 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs"];
m33_93 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="WorkerFacts.cs"];
m33_195 [label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="235-235", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m33_196 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="238-239", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m33_197 [label="var worker = CreateWorker()", span="241-241", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m33_198 [label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_token))", span="244-244", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", color=red, community=0, file="WorkerFacts.cs"];
m33_199 [label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="247-249", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m33_200 [label="_fetchedJob.Verify(x => x.Requeue())", span="250-250", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m33_201 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="235-235", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs"];
m33_75 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="84-84", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m33_297 [label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="352-352", cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs"];
m33_298 [label="Hangfire.Core.Tests.Server.WorkerFacts", span="", file="WorkerFacts.cs"];
m33_299 [label=worker, span="", file="WorkerFacts.cs"];
m33_300 [label=worker, span="", file="WorkerFacts.cs"];
m33_301 [label=worker, span="", file="WorkerFacts.cs"];
m33_302 [label=exception, span="", file="WorkerFacts.cs"];
m33_303 [label=exception, span="", file="WorkerFacts.cs"];
n64 -> n7  [key=1, style=dashed, color=red, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n64 -> n47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IDateTimeProvider"];
n0 -> n7  [key=1, style=dashed, color=red, label="HangFire.JobStorage"];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
n0 -> n9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IDateTimeProvider"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid, color=red];
n7 -> n8  [key=0, style=solid, color=red];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n2 -> n10  [key=0, style=solid];
n2 -> n11  [key=2, style=dotted];
n4 -> n10  [key=0, style=solid];
n4 -> n11  [key=2, style=dotted];
n6 -> n10  [key=0, style=solid];
n6 -> n11  [key=2, style=dotted];
n10 -> n0  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n26  [key=2, style=dotted];
n14 -> n27  [key=2, style=dotted];
n14 -> n14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n16 -> n17  [key=0, style=solid];
n16 -> n29  [key=2, style=dotted];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label=connection];
n16 -> n20  [key=1, style=dashed, color=darkseagreen4, label=connection];
n16 -> n22  [key=1, style=dashed, color=darkseagreen4, label=connection];
n15 -> n13  [key=0, style=solid];
n15 -> n28  [key=2, style=dotted];
n15 -> n15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n17 -> n18  [key=0, style=solid];
n17 -> n30  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n31  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n32  [key=2, style=dotted];
n20 -> n33  [key=2, style=dotted];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
n22 -> n23  [key=0, style=solid];
n22 -> n19  [key=0, style=solid];
n22 -> n34  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n25  [key=0, style=solid];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
n19 -> n24  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
n25 -> n12  [key=0, style=bold, color=blue];
n24 -> n19  [key=0, style=solid];
n24 -> n35  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n19  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n34 -> n38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
n34 -> n41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
n34 -> n42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
n34 -> n46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
n34 -> n48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
n36 -> n37  [key=0, style=solid];
n36 -> n50  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n47  [key=0, style=solid];
n41 -> n53  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n54  [key=2, style=dotted];
n46 -> n49  [key=0, style=solid];
n46 -> n32  [key=2, style=dotted];
n46 -> n57  [key=2, style=dotted];
n46 -> n58  [key=2, style=dotted];
n46 -> n59  [key=2, style=dotted];
n46 -> n60  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n32  [key=2, style=dotted];
n48 -> n57  [key=2, style=dotted];
n48 -> n58  [key=2, style=dotted];
n48 -> n60  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n51  [key=2, style=dotted];
n37 -> n45  [key=1, style=dashed, color=darkseagreen4, label=job];
n45 -> n46  [key=0, style=solid];
n45 -> n56  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n52  [key=2, style=dotted];
n39 -> n46  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
n39 -> n47  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
n40 -> n41  [key=0, style=solid];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
n40 -> n46  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
n47 -> n48  [key=0, style=solid];
n47 -> n59  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n49  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n55  [key=2, style=dotted];
n49 -> n34  [key=0, style=bold, color=blue];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n63 -> n61  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d11  [key=2, style=dotted, color=green];
d59 -> d9  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d59 -> d56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
d8 -> d9  [key=0, style=solid, color=green];
d10 -> d8  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d2 -> d6  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d7  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d23  [key=2, style=dotted];
d21 -> d24  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d27 -> d37  [key=2, style=dotted];
d27 -> d38  [key=2, style=dotted];
d27 -> d39  [key=2, style=dotted];
d27 -> d40  [key=2, style=dotted];
d27 -> d41  [key=2, style=dotted];
d27 -> d32  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d27 -> d35  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d34 -> d35  [key=0, style=solid];
d34 -> d42  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d37  [key=2, style=dotted];
d45 -> d42  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d50 -> d42  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d53 -> d42  [key=2, style=dotted];
d56 -> d56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d56 -> d57  [key=0, style=solid];
d56 -> d58  [key=2, style=dotted];
d56 -> d38  [key=2, style=dotted];
d56 -> d42  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorage"];
d5 -> d0  [key=0, style=bold, color=blue];
d12 -> d13  [key=0, style=solid];
d14 -> d12  [key=0, style=bold, color=blue];
d16 -> d17  [key=0, style=solid];
d18 -> d16  [key=0, style=bold, color=blue];
d20 -> d21  [key=0, style=solid];
d22 -> d20  [key=0, style=bold, color=blue];
d25 -> d27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
d25 -> d26  [key=0, style=solid];
d25 -> d28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d25 -> d29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d25 -> d31  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d26 -> d27  [key=0, style=solid];
d26 -> d26  [key=3, color=darkorchid, style=bold, label="Local variable string createJobSql"];
d28 -> d29  [key=0, style=solid];
d28 -> d35  [key=0, style=solid];
d32 -> d32  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
d32 -> d31  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d29 -> d34  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
d29 -> d32  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
d29 -> d30  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d33 -> d33  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
d43 -> d45  [key=1, style=dashed, color=darkseagreen4, label=string];
d43 -> d44  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d44 -> d47  [key=2, style=dotted];
d44 -> d48  [key=2, style=dotted];
d46 -> d43  [key=0, style=bold, color=blue];
d49 -> d50  [key=0, style=solid];
d51 -> d49  [key=0, style=bold, color=blue];
d52 -> d53  [key=0, style=solid];
d54 -> d52  [key=0, style=bold, color=blue];
d55 -> d56  [key=0, style=solid];
d57 -> d55  [key=0, style=bold, color=blue];
d36 -> d25  [key=0, style=bold, color=blue];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d30 -> d32  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
d30 -> d31  [key=0, style=solid];
d30 -> d30  [key=3, color=darkorchid, style=bold, label="Local variable int parameterIndex"];
m0_86 -> m0_87  [key=0, style=solid, color=green];
m0_87 -> m0_88  [key=0, style=solid, color=green];
m0_87 -> m0_42  [key=2, style=dotted, color=green];
m0_87 -> m0_11  [key=2, style=dotted, color=green];
m0_87 -> m0_92  [key=1, style=dashed, color=green, label="lambda expression"];
m0_88 -> m0_89  [key=0, style=solid, color=green];
m0_88 -> m0_21  [key=2, style=dotted, color=green];
m0_88 -> m0_96  [key=1, style=dashed, color=green, label=wrapper];
m0_89 -> m0_90  [key=0, style=solid, color=green];
m0_89 -> m0_11  [key=2, style=dotted, color=green];
m0_89 -> m0_95  [key=1, style=dashed, color=green, label="lambda expression"];
m0_90 -> m0_91  [key=0, style=solid, color=green];
m0_90 -> m0_29  [key=2, style=dotted, color=green];
m0_90 -> m0_98  [key=1, style=dashed, color=green, label="lambda expression"];
m0_91 -> m0_86  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_28  [key=2, style=dotted, color=green];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_20  [key=2, style=dotted, color=red];
m0_18 -> m0_21  [key=2, style=dotted, color=red];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_22  [key=2, style=dotted, color=green];
m0_22 -> m0_23  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_26 -> m0_29  [key=2, style=dotted, color=green];
m0_26 -> m0_30  [key=1, style=dashed, color=green, label="lambda expression"];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_14  [key=0, style=solid];
m0_7 -> n11  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_12  [key=2, style=dotted, color=green];
m0_9 -> m0_14  [key=0, style=solid];
m0_9 -> n11  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_10  [key=0, style=solid];
m0_10 -> m0_7  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_12 -> m0_13  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_5  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_21 -> m0_101  [key=0, style=solid, color=green];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=2, style=dotted];
m0_23 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_21  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_3 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m0_3 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m0_3 -> m0_11  [key=1, style=dashed, color=red, label=string];
m0_3 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=0, style=solid];
m0_5 -> m0_14  [key=0, style=solid];
m0_5 -> n11  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_3  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_27 -> m0_23  [key=0, style=bold, color=blue];
m0_27 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m0_27 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m0_27 -> m0_11  [key=1, style=dashed, color=red, label="HangFire.Server.Performing.PerformContext"];
m0_27 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m0_27 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m0_27 -> m0_18  [key=1, style=dashed, color=red, label="HangFire.Server.Performing.PerformContext"];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_54 -> m0_11  [key=2, style=dotted];
m0_54 -> m0_42  [key=2, style=dotted];
m0_54 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_64  [key=1, style=dashed, color=green, label=wrapper];
m0_56 -> m0_21  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid, color=green];
m0_57 -> m0_11  [key=2, style=dotted, color=green];
m0_57 -> m0_63  [key=1, style=dashed, color=green, label="lambda expression"];
m0_58 -> m0_29  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_59 -> m0_53  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_11  [key=2, style=dotted, color=green];
m0_31 -> m0_28  [key=2, style=dotted, color=green];
m0_31 -> m0_33  [key=1, style=dashed, color=green, label="lambda expression"];
m0_32 -> m0_30  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_35 -> m0_33  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid, color=green];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_28  [key=2, style=dotted, color=green];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_49 -> m0_47  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_45 -> m0_46  [key=0, style=solid, color=green];
m0_45 -> m0_11  [key=2, style=dotted, color=green];
m0_45 -> m0_28  [key=2, style=dotted, color=green];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_11  [key=2, style=dotted, color=green];
m0_51 -> m0_28  [key=2, style=dotted, color=green];
m0_52 -> m0_50  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid, color=green];
m0_64 -> m0_65  [key=0, style=solid, color=green];
m0_64 -> m0_28  [key=2, style=dotted, color=green];
m0_65 -> m0_63  [key=0, style=bold, color=blue];
m0_77 -> m0_78  [key=0, style=solid, color=green];
m0_80 -> m0_81  [key=0, style=solid, color=green];
m0_81 -> m0_82  [key=0, style=solid, color=green];
m0_81 -> m0_28  [key=2, style=dotted, color=green];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid, color=green];
m0_78 -> m0_11  [key=2, style=dotted, color=green];
m0_78 -> m0_28  [key=2, style=dotted, color=green];
m0_79 -> m0_77  [key=0, style=bold, color=blue];
m0_92 -> m0_93  [key=0, style=solid, color=green];
m0_96 -> m0_97  [key=0, style=solid, color=green];
m0_96 -> m0_28  [key=2, style=dotted, color=green];
m0_95 -> m0_96  [key=0, style=solid, color=green];
m0_97 -> m0_95  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid, color=green];
m0_93 -> m0_94  [key=0, style=solid, color=green];
m0_93 -> m0_11  [key=2, style=dotted, color=green];
m0_93 -> m0_28  [key=2, style=dotted, color=green];
m0_94 -> m0_92  [key=0, style=bold, color=blue];
m0_99 -> m0_100  [key=0, style=solid, color=green];
m0_99 -> m0_11  [key=2, style=dotted, color=green];
m0_99 -> m0_28  [key=2, style=dotted, color=green];
m0_100 -> m0_98  [key=0, style=bold, color=blue];
m0_61 -> m0_28  [key=2, style=dotted];
m0_61 -> m0_11  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_67 -> m0_28  [key=2, style=dotted];
m0_67 -> m0_11  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_84 -> m0_28  [key=2, style=dotted];
m0_84 -> m0_11  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_62 -> m0_60  [key=0, style=bold, color=blue];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_37 -> m0_38  [key=0, style=solid, color=green];
m0_37 -> m0_42  [key=2, style=dotted, color=green];
m0_37 -> m0_11  [key=2, style=dotted, color=green];
m0_37 -> m0_44  [key=1, style=dashed, color=green, label="lambda expression"];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_21  [key=2, style=dotted, color=green];
m0_38 -> m0_48  [key=1, style=dashed, color=green, label=wrapper];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_11  [key=2, style=dotted, color=green];
m0_39 -> m0_47  [key=1, style=dashed, color=green, label="lambda expression"];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_43  [key=2, style=dotted, color=green];
m0_40 -> m0_29  [key=2, style=dotted, color=green];
m0_40 -> m0_50  [key=1, style=dashed, color=green, label="lambda expression"];
m0_41 -> m0_36  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid, color=green];
m0_71 -> m0_42  [key=2, style=dotted, color=green];
m0_71 -> m0_11  [key=2, style=dotted, color=green];
m0_71 -> m0_77  [key=1, style=dashed, color=green, label="lambda expression"];
m0_70 -> m0_71  [key=0, style=solid, color=green];
m0_70 -> m0_73  [key=1, style=dashed, color=green, label=wrapper];
m0_70 -> m0_81  [key=1, style=dashed, color=green, label=wrapper];
m0_70 -> m0_21  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid, color=green];
m0_72 -> m0_76  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid, color=green];
m0_73 -> m0_11  [key=2, style=dotted, color=green];
m0_73 -> m0_80  [key=1, style=dashed, color=green, label="lambda expression"];
m0_74 -> m0_29  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_75 -> m0_69  [key=0, style=bold, color=blue];
m0_20 -> m0_17  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid, color=green];
m0_101 -> m0_103  [key=2, style=dotted, color=green];
m0_102 -> m0_21  [key=0, style=bold, color=blue];
m0_113 -> m0_1  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_19  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_25  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_26  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_31  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_34  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_37  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_38  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_39  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_48  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_40  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_55  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_57  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_64  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_71  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_73  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_81  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_87  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_88  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_89  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_96  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_90  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_101  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_113 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m0_114 -> m0_48  [key=1, style=dashed, color=green, label=wrapper];
m0_115 -> m0_64  [key=1, style=dashed, color=green, label=wrapper];
m0_116 -> m0_81  [key=1, style=dashed, color=green, label=wrapper];
m0_117 -> m0_96  [key=1, style=dashed, color=green, label=wrapper];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_10  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> d24  [key=2, style=dotted];
m1_5 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_6 -> d24  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_14  [key=2, style=dotted];
m1_8 -> m1_0  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_43  [key=0, style=solid];
m1_37 -> m1_44  [key=0, style=solid];
m1_37 -> m1_47  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_48  [key=2, style=dotted];
m1_43 -> m1_47  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_49  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_50  [key=2, style=dotted];
m1_42 -> m1_37  [key=0, style=solid];
m1_42 -> m1_51  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_52  [key=2, style=dotted];
m1_46 -> m1_53  [key=2, style=dotted];
m1_47 -> m1_36  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_18 -> m1_15  [key=0, style=bold, color=blue];
m1_50 -> m1_54  [key=0, style=solid];
m1_50 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_50 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_50 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_50 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_50 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_50 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_57  [key=0, style=solid];
m1_54 -> m1_75  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> d24  [key=2, style=dotted];
m1_55 -> m1_76  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=0, style=solid];
m1_58 -> m1_78  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_79  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> d24  [key=2, style=dotted];
m1_67 -> m1_82  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_78  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_85  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_77  [key=2, style=dotted];
m1_56 -> m1_74  [key=0, style=solid];
m1_59 -> m1_74  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_80  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_68  [key=0, style=solid];
m1_64 -> m1_81  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=exception];
m1_66 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=exception];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_84  [key=2, style=dotted];
m1_70 -> m1_72  [key=0, style=solid];
m1_70 -> m1_83  [key=2, style=dotted];
m1_74 -> m1_50  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid, color=red];
m1_28 -> m1_29  [key=0, style=solid, color=red];
m1_28 -> m1_15  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid, color=red];
m1_29 -> m1_33  [key=2, style=dotted, color=red];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_34  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_35  [key=2, style=dotted];
m1_32 -> m1_26  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_24 -> m1_20  [key=0, style=bold, color=blue];
m1_86 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_29  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m1_86 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m1_86 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m3_22 -> m3_23  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=2, style=dotted];
m3_49 -> m3_47  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_19  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid, color=green];
m3_8 -> m3_16  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_21  [key=2, style=dotted];
m3_10 -> m3_2  [key=3, color=darkorchid, style=bold, label="Property variable string ServerName"];
m3_51 -> m3_52  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_62  [key=2, style=dotted];
m3_54 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=worker];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_63  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_65  [key=2, style=dotted];
m3_60 -> m3_66  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_53  [key=0, style=solid];
m3_57 -> m3_52  [key=0, style=solid];
m3_57 -> m3_64  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_59  [key=0, style=solid];
m3_52 -> m3_61  [key=0, style=solid];
m3_52 -> m3_58  [key=0, style=solid];
m3_58 -> m3_61  [key=0, style=solid];
m3_61 -> m3_51  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid, color=green];
m3_9 -> m3_20  [key=2, style=dotted, color=green];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m3_12 -> m3_0  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_19  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_19  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_15 -> m3_21  [key=2, style=dotted];
m3_15 -> m3_19  [key=2, style=dotted];
m3_15 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_18 -> m3_12  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_9  [key=1, style=dashed, color=green, label=IRedisClientsManager];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m3_1 -> m3_2  [key=0, style=solid, color=red];
m3_1 -> m3_8  [key=2, style=dotted];
m3_1 -> m3_13  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid, color=red];
m3_2 -> m3_9  [key=2, style=dotted, color=red];
m3_2 -> m3_14  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> d24  [key=2, style=dotted];
m3_3 -> m3_16  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_10  [key=2, style=dotted];
m3_4 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_4 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_10  [key=2, style=dotted];
m3_5 -> m3_8  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_17  [key=2, style=dotted];
m3_6 -> m3_18  [key=2, style=dotted];
m3_6 -> m3_19  [key=2, style=dotted];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_7 -> m3_5  [key=0, style=solid];
m3_7 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_22  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=2, style=dotted];
m3_25 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_2  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_25 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_27 -> m3_26  [key=0, style=solid];
m3_27 -> m3_30  [key=2, style=dotted];
m3_28 -> m3_23  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_22  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_3  [key=3, color=darkorchid, style=bold, label="Property variable string[] Queues"];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_23  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_42  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_16  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_44  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_45  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_46  [key=2, style=dotted];
m3_36 -> m3_35  [key=0, style=solid];
m3_36 -> m3_43  [key=2, style=dotted];
m3_41 -> m3_31  [key=0, style=bold, color=blue];
m3_67 -> m3_9  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m3_67 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m3_67 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid, color=green];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_2 -> m5_9  [key=0, style=solid];
m5_2 -> n11  [key=2, style=dotted];
m5_4 -> m5_9  [key=0, style=solid];
m5_4 -> n11  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_5 -> m5_11  [key=2, style=dotted, color=green];
m5_9 -> m5_0  [key=0, style=bold, color=blue];
m5_12 -> m5_5  [key=1, style=dashed, color=green, label="Hangfire.Server.BackgroundProcessContext"];
m5_12 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_12 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m5_12 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_14  [key=2, style=dotted];
m6_17 -> m6_15  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_16  [key=0, style=bold, color=blue];
m6_190 -> m6_191  [key=0, style=solid];
m6_191 -> m6_14  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_143  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_31  [key=2, style=dotted];
m6_192 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_193 -> m6_190  [key=0, style=bold, color=blue];
m6_208 -> m6_243  [key=0, style=solid];
m6_208 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_208 -> m6_268  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_208 -> m6_251  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_208 -> m6_252  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats"];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_243 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_250 -> m6_64  [key=2, style=dotted];
m6_250 -> m6_65  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_267  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_263  [key=2, style=dotted];
m6_251 -> m6_256  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m6_252 -> m6_59  [key=2, style=dotted];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_252 -> m6_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_245 -> m6_153  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_254 -> m6_153  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_260  [key=0, style=solid];
m6_247 -> m6_167  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_260 -> m6_261  [key=0, style=solid];
m6_244 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_244 -> m6_58  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_254  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_244 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_244 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_248 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_262  [key=2, style=dotted];
m6_246 -> m6_250  [key=0, style=solid];
m6_246 -> m6_247  [key=0, style=solid];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_258  [key=0, style=solid];
m6_256 -> m6_264  [key=2, style=dotted];
m6_256 -> m6_265  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_256  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_253 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_253 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_266  [key=2, style=dotted];
m6_249 -> m6_246  [key=0, style=solid];
m6_249 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_259 -> m6_254  [key=0, style=solid];
m6_259 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_255 -> m6_256  [key=0, style=solid];
m6_257 -> m6_258  [key=0, style=solid];
m6_261 -> m6_208  [key=0, style=bold, color=blue];
m6_92 -> m6_272  [key=0, style=solid];
m6_92 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_92 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_92 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_92 -> m6_281  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_272 -> m6_276  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_272 -> m6_277  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_279 -> m6_64  [key=2, style=dotted];
m6_279 -> m6_65  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_263  [key=2, style=dotted];
m6_280 -> m6_285  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m6_281 -> m6_59  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_281 -> m6_289  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_278 -> m6_64  [key=2, style=dotted];
m6_278 -> m6_65  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_278 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m6_289 -> m6_290  [key=0, style=solid];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_291  [key=2, style=dotted];
m6_273 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m6_275 -> m6_278  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_276 -> m6_167  [key=2, style=dotted];
m6_276 -> m6_277  [key=0, style=solid];
m6_277 -> m6_275  [key=0, style=solid];
m6_277 -> m6_277  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_277 -> m6_291  [key=2, style=dotted];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_287  [key=0, style=solid];
m6_285 -> m6_264  [key=2, style=dotted];
m6_285 -> m6_265  [key=2, style=dotted];
m6_282 -> m6_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_282 -> m6_283  [key=0, style=solid];
m6_282 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_282 -> m6_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_266  [key=2, style=dotted];
m6_283 -> m6_153  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_283 -> m6_289  [key=0, style=solid];
m6_283 -> m6_284  [key=0, style=solid];
m6_274 -> m6_58  [key=2, style=dotted];
m6_274 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_276  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_274 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_284 -> m6_285  [key=0, style=solid];
m6_286 -> m6_287  [key=0, style=solid];
m6_288 -> m6_283  [key=0, style=solid];
m6_288 -> m6_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_290 -> m6_92  [key=0, style=bold, color=blue];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_208  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_208  [key=2, style=dotted];
m6_211 -> m6_209  [key=0, style=bold, color=blue];
m6_346 -> m6_347  [key=0, style=solid];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_110  [key=2, style=dotted];
m6_348 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_60  [key=2, style=dotted];
m6_349 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_349 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_349 -> m6_353  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_349 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_349 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_349 -> m6_358  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_349 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_362  [key=2, style=dotted];
m6_347 -> m6_350  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_368  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_380  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_353  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_386  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_393  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_400  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_358  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_406  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_347 -> m6_360  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_359  [key=0, style=solid];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_61  [key=2, style=dotted];
m6_350 -> m6_363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_350 -> m6_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_61  [key=2, style=dotted];
m6_351 -> m6_370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_351 -> m6_373  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_61  [key=2, style=dotted];
m6_352 -> m6_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_352 -> m6_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_61  [key=2, style=dotted];
m6_353 -> m6_382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_353 -> m6_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_61  [key=2, style=dotted];
m6_354 -> m6_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_354 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_61  [key=2, style=dotted];
m6_355 -> m6_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_355 -> m6_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_358 -> m6_356  [key=0, style=solid];
m6_358 -> m6_61  [key=2, style=dotted];
m6_358 -> m6_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_358 -> m6_405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_62  [key=2, style=dotted];
m6_357 -> m6_403  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m6_357 -> m6_356  [key=3, color=darkorchid, style=bold, label="Local variable var queueName"];
m6_357 -> m6_358  [key=0, style=solid];
m6_360 -> m6_361  [key=0, style=solid];
m6_361 -> m6_346  [key=0, style=bold, color=blue];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_212 -> m6_152  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.Monitoring.JobDetailsDto JobDetails"];
m6_213 -> m6_14  [key=2, style=dotted];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_225  [key=2, style=dotted];
m6_213 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_213 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_213 -> m6_221  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_213 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_213 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_217 -> m6_14  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_120  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_227  [key=2, style=dotted];
m6_223 -> m6_228  [key=2, style=dotted];
m6_223 -> m6_226  [key=2, style=dotted];
m6_223 -> m6_229  [key=2, style=dotted];
m6_223 -> m6_230  [key=2, style=dotted];
m6_223 -> m6_231  [key=2, style=dotted];
m6_223 -> m6_232  [key=2, style=dotted];
m6_223 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_223 -> m6_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_223 -> m6_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_216  [key=0, style=solid];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_221  [key=0, style=solid];
m6_219 -> m6_226  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_74  [key=2, style=dotted];
m6_221 -> m6_223  [key=0, style=solid];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_226  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_74  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m6_216 -> m6_234  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m6_218 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=history];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_64  [key=2, style=dotted];
m6_218 -> m6_65  [key=2, style=dotted];
m6_215 -> m6_224  [key=0, style=solid];
m6_224 -> m6_212  [key=0, style=bold, color=blue];
m6_343 -> m6_344  [key=0, style=solid];
m6_344 -> m6_15  [key=2, style=dotted];
m6_344 -> m6_345  [key=0, style=solid];
m6_345 -> m6_343  [key=0, style=bold, color=blue];
m6_88 -> m6_152  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Common.JobMethod TryToGetMethod"];
m6_88 -> m6_408  [key=0, style=solid];
m6_408 -> m6_411  [key=0, style=solid];
m6_408 -> m6_412  [key=2, style=dotted];
m6_408 -> m6_413  [key=2, style=dotted];
m6_410 -> m6_411  [key=0, style=solid];
m6_409 -> m6_410  [key=0, style=solid];
m6_411 -> m6_88  [key=0, style=bold, color=blue];
m6_292 -> m6_293  [key=0, style=solid];
m6_377 -> m6_10  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_383 -> m6_10  [key=2, style=dotted];
m6_383 -> m6_384  [key=0, style=solid];
m6_397 -> m6_10  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_325 -> m6_14  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_70  [key=2, style=dotted];
m6_315 -> m6_14  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_317  [key=2, style=dotted];
m6_315 -> d48  [key=2, style=dotted];
m6_315 -> m6_70  [key=2, style=dotted];
m6_175 -> m6_15  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_69  [key=2, style=dotted];
m6_181 -> m6_15  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_69  [key=2, style=dotted];
m6_403 -> m6_15  [key=2, style=dotted];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_69  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_135 -> m6_136  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_186 -> m6_187  [key=0, style=solid];
m6_194 -> m6_195  [key=0, style=solid];
m6_201 -> m6_202  [key=0, style=solid];
m6_233 -> m6_234  [key=0, style=solid];
m6_237 -> m6_238  [key=0, style=solid];
m6_240 -> m6_241  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_378 -> m6_376  [key=0, style=bold, color=blue];
m6_382 -> m6_383  [key=0, style=solid];
m6_384 -> m6_382  [key=0, style=bold, color=blue];
m6_396 -> m6_397  [key=0, style=solid];
m6_398 -> m6_396  [key=0, style=bold, color=blue];
m6_324 -> m6_325  [key=0, style=solid];
m6_326 -> m6_324  [key=0, style=bold, color=blue];
m6_314 -> m6_315  [key=0, style=solid];
m6_316 -> m6_314  [key=0, style=bold, color=blue];
m6_174 -> m6_175  [key=0, style=solid];
m6_176 -> m6_174  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_182 -> m6_180  [key=0, style=bold, color=blue];
m6_402 -> m6_403  [key=0, style=solid];
m6_404 -> m6_402  [key=0, style=bold, color=blue];
m6_36 -> m6_34  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=2, style=dotted];
m6_35 -> m6_38  [key=2, style=dotted];
m6_35 -> m6_39  [key=2, style=dotted];
m6_42 -> m6_40  [key=0, style=bold, color=blue];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>"];
m6_82 -> m6_83  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_74  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_85  [key=2, style=dotted];
m6_83 -> m6_86  [key=2, style=dotted];
m6_83 -> m6_87  [key=2, style=dotted];
m6_83 -> m6_88  [key=2, style=dotted];
m6_83 -> m6_39  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_71 -> m6_72  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_296 -> m6_69  [key=2, style=dotted];
m6_296 -> m6_297  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_74  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_127  [key=2, style=dotted];
m6_125 -> m6_128  [key=2, style=dotted];
m6_125 -> m6_129  [key=2, style=dotted];
m6_125 -> m6_38  [key=2, style=dotted];
m6_111 -> m6_112  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_137 -> m6_135  [key=0, style=bold, color=blue];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_138  [key=2, style=dotted];
m6_136 -> m6_38  [key=2, style=dotted];
m6_136 -> m6_39  [key=2, style=dotted];
m6_169 -> m6_143  [key=2, style=dotted];
m6_169 -> m6_69  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_146 -> m6_144  [key=0, style=bold, color=blue];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_147  [key=2, style=dotted];
m6_145 -> m6_38  [key=2, style=dotted];
m6_145 -> m6_39  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_177 -> m6_178  [key=0, style=solid];
m6_183 -> m6_184  [key=0, style=solid];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_337  [key=2, style=dotted];
m6_335 -> m6_338  [key=2, style=dotted];
m6_335 -> m6_339  [key=2, style=dotted];
m6_335 -> m6_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_188 -> m6_186  [key=0, style=bold, color=blue];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_189  [key=2, style=dotted];
m6_187 -> m6_38  [key=2, style=dotted];
m6_187 -> m6_39  [key=2, style=dotted];
m6_196 -> m6_194  [key=0, style=bold, color=blue];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_189  [key=2, style=dotted];
m6_195 -> m6_38  [key=2, style=dotted];
m6_195 -> m6_39  [key=2, style=dotted];
m6_203 -> m6_201  [key=0, style=bold, color=blue];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_204  [key=2, style=dotted];
m6_202 -> m6_38  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_270  [key=2, style=dotted];
m6_268 -> m6_271  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_236  [key=2, style=dotted];
m6_118 -> m6_120  [key=2, style=dotted];
m6_118 -> m6_69  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_235 -> m6_233  [key=0, style=bold, color=blue];
m6_239 -> m6_237  [key=0, style=bold, color=blue];
m6_238 -> m6_239  [key=0, style=solid];
m6_242 -> m6_240  [key=0, style=bold, color=blue];
m6_241 -> m6_242  [key=0, style=solid];
m6_368 -> m6_369  [key=0, style=solid];
m6_374 -> m6_375  [key=0, style=solid];
m6_380 -> m6_381  [key=0, style=solid];
m6_386 -> m6_387  [key=0, style=solid];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_395  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_406 -> m6_407  [key=0, style=solid];
m6_363 -> m6_364  [key=0, style=solid];
m6_367 -> m6_368  [key=0, style=solid];
m6_370 -> m6_371  [key=0, style=solid];
m6_373 -> m6_374  [key=0, style=solid];
m6_379 -> m6_380  [key=0, style=solid];
m6_385 -> m6_386  [key=0, style=solid];
m6_388 -> m6_389  [key=0, style=solid];
m6_392 -> m6_393  [key=0, style=solid];
m6_399 -> m6_400  [key=0, style=solid];
m6_405 -> m6_406  [key=0, style=solid];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_322  [key=0, style=solid];
m6_320 -> m6_323  [key=2, style=dotted];
m6_321 -> m6_74  [key=2, style=dotted];
m6_321 -> m6_322  [key=0, style=solid];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_330  [key=0, style=solid];
m6_328 -> m6_323  [key=2, style=dotted];
m6_329 -> m6_74  [key=2, style=dotted];
m6_329 -> m6_330  [key=0, style=solid];
m6_67 -> m6_70  [key=2, style=dotted];
m6_67 -> m6_69  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_112 -> m6_70  [key=2, style=dotted];
m6_112 -> m6_69  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_88  [key=2, style=dotted];
m6_332 -> m6_323  [key=2, style=dotted];
m6_76 -> m6_69  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_78  [key=2, style=dotted];
m6_72 -> m6_74  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_84 -> m6_82  [key=0, style=bold, color=blue];
m6_81 -> m6_79  [key=0, style=bold, color=blue];
m6_68 -> m6_66  [key=0, style=bold, color=blue];
m6_73 -> m6_71  [key=0, style=bold, color=blue];
m6_77 -> m6_75  [key=0, style=bold, color=blue];
m6_295 -> m6_296  [key=0, style=solid];
m6_297 -> m6_295  [key=0, style=bold, color=blue];
m6_115 -> m6_74  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_126 -> m6_124  [key=0, style=bold, color=blue];
m6_123 -> m6_121  [key=0, style=bold, color=blue];
m6_113 -> m6_111  [key=0, style=bold, color=blue];
m6_116 -> m6_114  [key=0, style=bold, color=blue];
m6_119 -> m6_117  [key=0, style=bold, color=blue];
m6_170 -> m6_168  [key=0, style=bold, color=blue];
m6_173 -> m6_171  [key=0, style=bold, color=blue];
m6_172 -> m6_173  [key=0, style=solid];
m6_179 -> m6_177  [key=0, style=bold, color=blue];
m6_178 -> m6_179  [key=0, style=solid];
m6_185 -> m6_183  [key=0, style=bold, color=blue];
m6_184 -> m6_185  [key=0, style=solid];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label="?"];
m6_331 -> m6_332  [key=0, style=solid];
m6_334 -> m6_335  [key=0, style=solid];
m6_336 -> m6_334  [key=0, style=bold, color=blue];
m6_340 -> m6_341  [key=0, style=solid];
m6_267 -> m6_268  [key=0, style=solid];
m6_269 -> m6_267  [key=0, style=bold, color=blue];
m6_369 -> m6_367  [key=0, style=bold, color=blue];
m6_375 -> m6_373  [key=0, style=bold, color=blue];
m6_381 -> m6_379  [key=0, style=bold, color=blue];
m6_387 -> m6_385  [key=0, style=bold, color=blue];
m6_394 -> m6_392  [key=0, style=bold, color=blue];
m6_401 -> m6_399  [key=0, style=bold, color=blue];
m6_407 -> m6_405  [key=0, style=bold, color=blue];
m6_365 -> m6_363  [key=0, style=bold, color=blue];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_366  [key=2, style=dotted];
m6_372 -> m6_370  [key=0, style=bold, color=blue];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_366  [key=2, style=dotted];
m6_390 -> m6_388  [key=0, style=bold, color=blue];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_391  [key=2, style=dotted];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label="?"];
m6_322 -> m6_319  [key=0, style=bold, color=blue];
m6_330 -> m6_327  [key=0, style=bold, color=blue];
m6_333 -> m6_331  [key=0, style=bold, color=blue];
m6_342 -> m6_340  [key=0, style=bold, color=blue];
m6_341 -> m6_342  [key=0, style=solid];
m6_293 -> m6_270  [key=2, style=dotted];
m6_293 -> m6_294  [key=0, style=solid];
m6_294 -> m6_292  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_134  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_31  [key=2, style=dotted];
m6_132 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_133 -> m6_130  [key=0, style=bold, color=blue];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_110  [key=2, style=dotted];
m6_97 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m6_97 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_60  [key=2, style=dotted];
m6_102 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_102 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_102 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_100  [key=0, style=solid];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_107  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_64  [key=2, style=dotted];
m6_108 -> m6_65  [key=2, style=dotted];
m6_108 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_101 -> m6_59  [key=2, style=dotted];
m6_101 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_101 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_101 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_61  [key=2, style=dotted];
m6_105 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_105 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_106 -> m6_103  [key=0, style=solid];
m6_106 -> m6_61  [key=2, style=dotted];
m6_106 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_106 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_62  [key=2, style=dotted];
m6_99 -> m6_109  [key=0, style=solid];
m6_99 -> m6_58  [key=2, style=dotted];
m6_100 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_100 -> m6_59  [key=2, style=dotted];
m6_100 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_100 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_104 -> m6_103  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_104 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_104 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_104 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_104 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_109 -> m6_96  [key=0, style=bold, color=blue];
m6_139 -> m6_140  [key=0, style=solid];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_143  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_31  [key=2, style=dotted];
m6_141 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_142 -> m6_139  [key=0, style=bold, color=blue];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_92  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_92  [key=2, style=dotted];
m6_91 -> m6_89  [key=0, style=bold, color=blue];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_10  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_19  [key=0, style=bold, color=blue];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=2, style=dotted];
m6_27 -> m6_31  [key=2, style=dotted];
m6_27 -> m6_32  [key=2, style=dotted];
m6_27 -> m6_33  [key=2, style=dotted];
m6_27 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_27 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_28 -> m6_25  [key=0, style=bold, color=blue];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_10  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_22  [key=0, style=bold, color=blue];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_208  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_208  [key=2, style=dotted];
m6_207 -> m6_205  [key=0, style=bold, color=blue];
m6_165 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_165 -> m6_298  [key=0, style=solid];
m6_165 -> m6_300  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_165 -> m6_301  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_165 -> m6_302  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_165 -> m6_303  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_165 -> m6_304  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_165 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_165 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_165 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_165 -> m6_335  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m6_305 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_305 -> m6_304  [key=3, color=darkorchid, style=bold, label="Local variable string id"];
m6_302 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_302 -> m6_302  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_302 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_302 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_299 -> m6_30  [key=2, style=dotted];
m6_299 -> m6_311  [key=0, style=solid];
m6_299 -> m6_58  [key=2, style=dotted];
m6_303 -> m6_60  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_303 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_303 -> m6_309  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_300  [key=0, style=solid];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_312  [key=2, style=dotted];
m6_300 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_300 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_300 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_300 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_300 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_312  [key=2, style=dotted];
m6_301 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_301 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_301 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_301 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_301 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_309  [key=0, style=solid];
m6_307 -> m6_304  [key=0, style=solid];
m6_307 -> m6_308  [key=0, style=solid];
m6_308 -> m6_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_308 -> m6_61  [key=2, style=dotted];
m6_308 -> m6_304  [key=0, style=solid];
m6_308 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_310 -> m6_64  [key=2, style=dotted];
m6_310 -> m6_65  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_313  [key=2, style=dotted];
m6_310 -> m6_331  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_310 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_306 -> m6_314  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_306 -> m6_61  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_309 -> m6_62  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_311 -> m6_165  [key=0, style=bold, color=blue];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_92  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_92  [key=2, style=dotted];
m6_95 -> m6_93  [key=0, style=bold, color=blue];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_150  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues"];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_110  [key=2, style=dotted];
m6_149 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_60  [key=2, style=dotted];
m6_155 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_155 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_155 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_165  [key=2, style=dotted];
m6_160 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_164  [key=2, style=dotted];
m6_150 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_150 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_151 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_151 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_162  [key=0, style=solid];
m6_151 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_151 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_151 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_151 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_151 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_153  [key=3, color=darkorchid, style=bold, label="Local variable long dequeued"];
m6_154 -> m6_158  [key=3, color=darkorchid, style=bold, label="Local variable long dequeued"];
m6_156 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_61  [key=2, style=dotted];
m6_156 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_156 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_61  [key=2, style=dotted];
m6_157 -> m6_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_157 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_157 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=length];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_61  [key=2, style=dotted];
m6_158 -> m6_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_158 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_158 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_62  [key=2, style=dotted];
m6_161 -> m6_151  [key=0, style=solid];
m6_161 -> m6_166  [key=2, style=dotted];
m6_161 -> m6_167  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_152 -> m6_156  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IList<string> firstJobIds"];
m6_152 -> m6_152  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IList<string> firstJobIds"];
m6_152 -> m6_153  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_157  [key=3, color=darkorchid, style=bold, label="Local variable long length"];
m6_153 -> m6_153  [key=3, color=darkorchid, style=bold, label="Local variable long length"];
m6_163 -> m6_148  [key=0, style=bold, color=blue];
m6_43 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_57  [key=2, style=dotted];
m6_44 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m6_44 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_60  [key=2, style=dotted];
m6_49 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_49 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_49 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_47  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_54  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_63  [key=2, style=dotted];
m6_55 -> m6_64  [key=2, style=dotted];
m6_55 -> m6_65  [key=2, style=dotted];
m6_55 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_48 -> m6_59  [key=2, style=dotted];
m6_48 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_48 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_48 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_61  [key=2, style=dotted];
m6_52 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_52 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_53 -> m6_50  [key=0, style=solid];
m6_53 -> m6_61  [key=2, style=dotted];
m6_53 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_53 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_62  [key=2, style=dotted];
m6_46 -> m6_30  [key=2, style=dotted];
m6_46 -> m6_56  [key=0, style=solid];
m6_46 -> m6_58  [key=2, style=dotted];
m6_47 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_47 -> m6_59  [key=2, style=dotted];
m6_47 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_47 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_51 -> m6_50  [key=3, color=darkorchid, style=bold, label="Local variable var job"];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_51 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_51 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_51 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_51 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_56 -> m6_43  [key=0, style=bold, color=blue];
m6_197 -> m6_198  [key=0, style=solid];
m6_198 -> m6_14  [key=2, style=dotted];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_143  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_31  [key=2, style=dotted];
m6_199 -> m6_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_200 -> m6_197  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid, color=green];
m6_12 -> m6_13  [key=0, style=solid, color=green];
m6_12 -> m6_14  [key=2, style=dotted, color=green];
m6_12 -> m6_15  [key=2, style=dotted, color=green];
m6_13 -> m6_11  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_10  [key=2, style=dotted, color=green];
m6_9 -> m6_7  [key=0, style=bold, color=blue];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_6  [key=2, style=dotted, color=green];
m6_5 -> m6_3  [key=0, style=bold, color=blue];
m6_414 -> m6_1  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_4  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_8  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_12  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_199  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_414 -> m6_349  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m6_426 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_426 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_426 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_426 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_426 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_426 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_428 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_425 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_425 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_421 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_421 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_421 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_432 -> m6_403  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m6_415 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_415 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_415 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_415 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_417 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_417 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_416 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_416 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_424 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_418 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_418 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_418 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_418 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_420 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_420 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_419 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_419 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_430 -> m6_335  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m6_423 -> m6_268  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_422 -> m6_234  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m6_431 -> m6_368  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_431 -> m6_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_431 -> m6_380  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_431 -> m6_386  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_431 -> m6_393  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_431 -> m6_400  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_431 -> m6_406  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_427 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_427 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_427 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_429 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_429 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_429 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_37  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=2, style=dotted];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_10  [key=2, style=dotted];
m8_6 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=factory];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=factory];
m8_18 -> m8_10  [key=2, style=dotted];
m8_19 -> m8_18  [key=0, style=bold, color=blue];
m8_19 -> m8_11  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_8 -> m8_8  [key=3, color=green, style=bold, label="Field variable string JobId"];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_8 -> m8_12  [key=2, style=dotted, color=green];
m8_8 -> m8_11  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid, color=green];
m8_7 -> m8_7  [key=3, color=darkorchid, style=bold, label="Field variable string OldStateName"];
m8_7 -> m8_11  [key=2, style=dotted];
m8_7 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_7 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_9 -> m8_5  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> d24  [key=2, style=dotted];
m8_9 -> m8_13  [key=2, style=dotted];
m8_9 -> m8_14  [key=2, style=dotted];
m8_14 -> m8_16  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_37 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=factory];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_31  [key=2, style=dotted];
m8_38 -> m8_41  [key=2, style=dotted];
m8_38 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=factory];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> d24  [key=2, style=dotted];
m8_39 -> m8_33  [key=2, style=dotted];
m8_39 -> m8_41  [key=2, style=dotted];
m8_40 -> m8_37  [key=0, style=bold, color=blue];
m8_10 -> m8_33  [key=0, style=solid];
m8_10 -> m8_7  [key=0, style=bold, color=blue];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [key=2, style=dotted];
m8_34 -> m8_10  [key=0, style=bold, color=blue];
m8_34 -> m8_35  [key=0, style=solid];
m8_23 -> m8_16  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_12  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=2, style=dotted];
m8_21 -> m8_17  [key=0, style=bold, color=blue];
m8_22 -> m8_20  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> d24  [key=2, style=dotted];
m8_16 -> m8_13  [key=2, style=dotted];
m8_16 -> m8_14  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_13  [key=0, style=bold, color=blue];
m8_17 -> m8_15  [key=0, style=bold, color=blue];
m8_17 -> m8_18  [key=0, style=solid];
m8_36 -> m8_34  [key=0, style=bold, color=blue];
m8_36 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_36 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_36 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_36 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_36 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_36 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_36 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts"];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=1, style=dashed, color=green, label=instant];
m8_27 -> m8_16  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid, color=green];
m8_28 -> m8_31  [key=2, style=dotted];
m8_28 -> m8_32  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid, color=green];
m8_29 -> d24  [key=2, style=dotted];
m8_29 -> m8_33  [key=2, style=dotted];
m8_29 -> m8_32  [key=2, style=dotted, color=green];
m8_29 -> m8_31  [key=2, style=dotted, color=green];
m8_30 -> m8_27  [key=0, style=bold, color=blue];
m8_30 -> m8_25  [key=0, style=bold, color=blue];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_10  [key=2, style=dotted];
m8_26 -> m8_24  [key=0, style=bold, color=blue];
m8_42 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerWatchdogSteps"];
m8_42 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerWatchdogSteps"];
m8_42 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerWatchdogSteps"];
m8_42 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerWatchdogSteps"];
m8_42 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerWatchdogSteps"];
m9_31 -> m9_32  [key=0, style=solid, color=green];
m9_32 -> m9_33  [key=0, style=solid, color=green];
m9_32 -> m9_7  [key=2, style=dotted, color=green];
m9_32 -> m9_12  [key=2, style=dotted, color=green];
m9_33 -> m9_34  [key=0, style=solid, color=green];
m9_33 -> m9_30  [key=2, style=dotted, color=green];
m9_34 -> m9_31  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid, color=green];
m9_9 -> m9_10  [key=0, style=solid, color=green];
m9_9 -> m9_7  [key=2, style=dotted, color=green];
m9_9 -> m9_12  [key=2, style=dotted, color=green];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_10 -> m9_13  [key=2, style=dotted, color=green];
m9_11 -> m9_8  [key=0, style=bold, color=blue];
m9_14 -> m9_15  [key=0, style=solid, color=green];
m9_15 -> m9_16  [key=0, style=solid, color=green];
m9_15 -> m9_7  [key=2, style=dotted, color=green];
m9_15 -> m9_22  [key=2, style=dotted, color=green];
m9_15 -> m9_17  [key=1, style=dashed, color=green, label=state];
m9_15 -> m9_20  [key=1, style=dashed, color=green, label=state];
m9_16 -> m9_17  [key=0, style=solid, color=green];
m9_16 -> m9_23  [key=2, style=dotted, color=green];
m9_16 -> m9_18  [key=1, style=dashed, color=green, label=serializedData];
m9_16 -> m9_19  [key=1, style=dashed, color=green, label=serializedData];
m9_16 -> m9_20  [key=1, style=dashed, color=green, label=serializedData];
m9_17 -> m9_18  [key=0, style=solid, color=green];
m9_17 -> m9_24  [key=2, style=dotted, color=green];
m9_17 -> m9_13  [key=2, style=dotted, color=green];
m9_20 -> m9_21  [key=0, style=solid, color=green];
m9_20 -> m9_25  [key=2, style=dotted, color=green];
m9_20 -> m9_13  [key=2, style=dotted, color=green];
m9_18 -> m9_19  [key=0, style=solid, color=green];
m9_18 -> m9_13  [key=2, style=dotted, color=green];
m9_19 -> m9_20  [key=0, style=solid, color=green];
m9_19 -> m9_13  [key=2, style=dotted, color=green];
m9_21 -> m9_14  [key=0, style=bold, color=blue];
m9_26 -> m9_27  [key=0, style=solid, color=green];
m9_27 -> m9_28  [key=0, style=solid, color=green];
m9_27 -> m9_7  [key=2, style=dotted, color=green];
m9_27 -> m9_12  [key=2, style=dotted, color=green];
m9_28 -> m9_29  [key=0, style=solid, color=green];
m9_28 -> m9_30  [key=2, style=dotted, color=green];
m9_29 -> m9_26  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> d39  [key=2, style=dotted, color=green];
m9_1 -> m9_4  [key=1, style=dashed, color=green, label="lambda expression"];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid, color=green];
m9_5 -> m9_6  [key=0, style=solid, color=green];
m9_5 -> m9_7  [key=2, style=dotted, color=green];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_7 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_12  [key=2, style=dotted];
m11_11 -> m11_7  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m11_12 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m11_12 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_15  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_19  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_20  [key=2, style=dotted];
m11_16 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_14 -> m11_17  [key=0, style=solid];
m11_14 -> n11  [key=2, style=dotted];
m11_17 -> m11_12  [key=0, style=bold, color=blue];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=2, style=dotted];
m11_6 -> m11_4  [key=0, style=bold, color=blue];
m11_3 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_7  [key=2, style=dotted];
m11_9 -> m11_3  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=2, style=dotted];
m11_23 -> m11_21  [key=0, style=bold, color=blue];
m11_25 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_26 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>"];
m11_27 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_8  [key=0, style=bold, color=blue];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_16  [key=2, style=dotted];
m13_12 -> m13_17  [key=2, style=dotted];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_18  [key=2, style=dotted];
m13_13 -> n26  [key=2, style=dotted];
m13_13 -> m13_12  [key=0, style=bold, color=blue];
m13_11 -> m13_14  [key=0, style=solid];
m13_11 -> m13_15  [key=2, style=dotted];
m13_11 -> m13_10  [key=0, style=bold, color=blue];
m13_14 -> m13_9  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_19  [key=2, style=dotted];
m13_29 -> m13_27  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid, color=green];
m13_4 -> n26  [key=2, style=dotted];
m13_5 -> m13_4  [key=0, style=bold, color=blue];
m13_5 -> m13_6  [key=0, style=solid, color=green];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_5  [key=1, style=dashed, color=green, label=int];
m13_2 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m13_3 -> m13_4  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_2  [key=0, style=bold, color=blue];
m13_7 -> m13_6  [key=0, style=bold, color=blue];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
m13_19 -> m13_24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_24  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_26  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_23 -> m13_25  [key=0, style=solid];
m13_25 -> m13_19  [key=0, style=bold, color=blue];
m13_30 -> m13_5  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_30 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m14_19 -> m14_73  [key=0, style=solid, color=red];
m14_19 -> m14_23  [key=0, style=solid, color=green];
m14_19 -> m14_10  [key=2, style=dotted, color=green];
m14_73 -> m14_74  [key=0, style=solid, color=red];
m14_73 -> m14_75  [key=2, style=dotted, color=red];
m14_74 -> m14_19  [key=0, style=bold, color=blue];
m14_40 -> m14_38  [key=0, style=bold, color=blue];
m14_20 -> m14_22  [key=0, style=solid, color=green];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_9  [key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid, color=red];
m14_15 -> m14_16  [key=0, style=solid, color=red];
m14_15 -> m14_19  [key=2, style=dotted, color=red];
m14_16 -> m14_17  [key=0, style=solid, color=red];
m14_16 -> m14_18  [key=1, style=dashed, color=green, label=string];
m14_16 -> m14_22  [key=1, style=dashed, color=green, label=string];
m14_16 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_17 -> m14_18  [key=0, style=solid, color=green];
m14_17 -> m14_20  [key=2, style=dotted, color=red];
m14_17 -> m14_23  [key=1, style=dashed, color=green, label=time];
m14_18 -> m14_14  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid, color=green];
m14_18 -> m14_20  [key=0, style=solid, color=green];
m14_18 -> m14_9  [key=2, style=dotted, color=green];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid, color=red];
m14_23 -> d24  [key=2, style=dotted, color=green];
m14_23 -> m14_14  [key=2, style=dotted, color=green];
m14_23 -> m14_15  [key=2, style=dotted, color=green];
m14_23 -> m14_19  [key=2, style=dotted, color=red];
m14_23 -> m14_25  [key=1, style=dashed, color=red, label=component];
m14_23 -> m14_43  [key=1, style=dashed, color=red, label=component];
m14_22 -> m14_24  [key=0, style=solid, color=green];
m14_22 -> m14_12  [key=2, style=dotted, color=green];
m14_22 -> d24  [key=2, style=dotted, color=green];
m14_22 -> m14_23  [key=0, style=solid, color=red];
m14_22 -> m14_28  [key=2, style=dotted, color=red];
m14_22 -> m14_29  [key=2, style=dotted, color=red];
m14_22 -> m14_34  [key=1, style=dashed, color=red, label="lambda expression"];
m14_22 -> m14_38  [key=1, style=dashed, color=red, label="lambda expression"];
m14_21 -> m14_23  [key=0, style=solid, color=green];
m14_21 -> m14_11  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid, color=red];
m14_24 -> m14_16  [key=0, style=bold, color=blue];
m14_24 -> m14_25  [key=0, style=solid, color=red];
m14_24 -> m14_30  [key=2, style=dotted, color=red];
m14_24 -> m14_31  [key=2, style=dotted, color=red];
m14_55 -> m14_56  [key=0, style=solid, color=green];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_8  [key=0, style=solid, color=green];
m14_6 -> m14_12  [key=2, style=dotted, color=green];
m14_6 -> d24  [key=2, style=dotted, color=green];
m14_7 -> m14_8  [key=0, style=solid, color=green];
m14_7 -> m14_9  [key=2, style=dotted];
m14_7 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_7 -> d24  [key=2, style=dotted, color=green];
m14_7 -> m14_14  [key=2, style=dotted, color=green];
m14_7 -> m14_15  [key=2, style=dotted, color=green];
m14_8 -> m14_6  [key=0, style=bold, color=blue];
m14_8 -> m14_0  [key=0, style=bold, color=blue];
m14_25 -> m14_26  [key=0, style=solid, color=red];
m14_25 -> m14_9  [key=2, style=dotted, color=red];
m14_25 -> m14_42  [key=1, style=dashed, color=red, label="lambda expression"];
m14_26 -> m14_27  [key=0, style=solid, color=green];
m14_26 -> m14_32  [key=2, style=dotted, color=red];
m14_26 -> m14_33  [key=2, style=dotted, color=red];
m14_26 -> m14_46  [key=1, style=dashed, color=red, label="lambda expression"];
m14_26 -> m14_29  [key=2, style=dotted];
m14_27 -> m14_21  [key=0, style=bold, color=blue];
m14_27 -> m14_28  [key=0, style=solid, color=green];
m14_27 -> m14_30  [key=2, style=dotted, color=green];
m14_45 -> m14_42  [key=0, style=bold, color=blue];
m14_0 -> m14_6  [key=1, style=dashed, color=green, label=string];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_0 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_0 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_4 -> m14_6  [key=0, style=solid, color=green];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_9  [key=2, style=dotted];
m14_1 -> m14_7  [key=1, style=dashed, color=green, label=time];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_1 -> m14_4  [key=2, style=dotted, color=red];
m14_3 -> m14_7  [key=0, style=solid, color=green];
m14_3 -> m14_10  [key=2, style=dotted];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_7  [key=0, style=solid, color=green];
m14_5 -> m14_11  [key=2, style=dotted];
m14_2 -> m14_4  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid, color=red];
m14_2 -> m14_9  [key=2, style=dotted];
m14_2 -> m14_5  [key=2, style=dotted, color=red];
m14_10 -> m14_11  [key=0, style=solid];
m14_50 -> m14_51  [key=0, style=solid, color=red];
m14_50 -> m14_19  [key=2, style=dotted, color=red];
m14_50 -> m14_52  [key=1, style=dashed, color=red, label=component];
m14_50 -> m14_57  [key=1, style=dashed, color=red, label=component];
m14_12 -> m14_10  [key=0, style=bold, color=blue];
m14_28 -> m14_25  [key=0, style=bold, color=blue];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_13  [key=2, style=dotted];
m14_51 -> m14_52  [key=0, style=solid, color=red];
m14_51 -> m14_55  [key=2, style=dotted, color=red];
m14_53 -> m14_54  [key=0, style=solid, color=red];
m14_53 -> m14_38  [key=2, style=dotted, color=green];
m14_53 -> m14_33  [key=2, style=dotted, color=red];
m14_53 -> m14_59  [key=1, style=dashed, color=red, label="lambda expression"];
m14_52 -> m14_53  [key=0, style=solid, color=red];
m14_52 -> d24  [key=2, style=dotted];
m14_52 -> m14_37  [key=2, style=dotted];
m14_52 -> m14_9  [key=2, style=dotted, color=red];
m14_52 -> m14_56  [key=1, style=dashed, color=red, label="lambda expression"];
m14_54 -> m14_51  [key=0, style=bold, color=blue];
m14_54 -> m14_49  [key=0, style=bold, color=blue];
m14_56 -> m14_57  [key=0, style=solid, color=red];
m14_56 -> d24  [key=2, style=dotted, color=green];
m14_56 -> m14_37  [key=2, style=dotted, color=green];
m14_57 -> m14_50  [key=2, style=dotted];
m14_57 -> m14_58  [key=0, style=solid, color=red];
m14_57 -> m14_45  [key=2, style=dotted, color=red];
m14_58 -> m14_55  [key=0, style=bold, color=blue];
m14_58 -> m14_56  [key=0, style=bold, color=blue];
m14_59 -> m14_60  [key=0, style=solid, color=red];
m14_34 -> m14_35  [key=0, style=solid, color=green];
m14_34 -> m14_39  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid, color=green];
m14_43 -> m14_45  [key=2, style=dotted, color=red];
m14_43 -> d24  [key=2, style=dotted, color=green];
m14_43 -> m14_37  [key=2, style=dotted, color=green];
m14_42 -> m14_43  [key=0, style=solid, color=green];
m14_46 -> m14_47  [key=0, style=solid, color=green];
m14_35 -> m14_36  [key=0, style=solid, color=green];
m14_35 -> m14_9  [key=2, style=dotted, color=red];
m14_35 -> m14_37  [key=2, style=dotted, color=red];
m14_35 -> m14_40  [key=2, style=dotted, color=green];
m14_35 -> m14_41  [key=2, style=dotted, color=green];
m14_36 -> m14_34  [key=0, style=bold, color=blue];
m14_36 -> m14_31  [key=0, style=bold, color=blue];
m14_44 -> m14_42  [key=0, style=bold, color=blue];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_38  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid, color=green];
m14_47 -> m14_37  [key=2, style=dotted, color=green];
m14_47 -> d24  [key=2, style=dotted, color=green];
m14_48 -> m14_46  [key=0, style=bold, color=blue];
m14_48 -> m14_49  [key=0, style=solid, color=green];
m14_48 -> m14_50  [key=2, style=dotted, color=green];
m14_60 -> m14_61  [key=0, style=solid, color=red];
m14_60 -> m14_9  [key=2, style=dotted, color=red];
m14_60 -> m14_37  [key=2, style=dotted, color=red];
m14_61 -> m14_59  [key=0, style=bold, color=blue];
m14_65 -> m14_66  [key=0, style=solid, color=red];
m14_66 -> m14_67  [key=0, style=solid, color=red];
m14_66 -> m14_19  [key=2, style=dotted, color=red];
m14_67 -> m14_68  [key=0, style=solid, color=red];
m14_67 -> m14_70  [key=2, style=dotted, color=red];
m14_68 -> m14_69  [key=0, style=solid, color=red];
m14_68 -> m14_71  [key=2, style=dotted, color=red];
m14_68 -> m14_72  [key=2, style=dotted, color=red];
m14_69 -> m14_65  [key=0, style=bold, color=blue];
m14_49 -> m14_50  [key=0, style=solid, color=red];
m14_49 -> m14_46  [key=0, style=bold, color=blue];
m14_31 -> m14_32  [key=0, style=solid];
m14_32 -> d24  [key=2, style=dotted];
m14_32 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label=checkedTimestamp];
m14_32 -> m14_37  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid, color=red];
m14_63 -> m14_64  [key=0, style=solid, color=red];
m14_63 -> m14_55  [key=2, style=dotted, color=red];
m14_64 -> m14_62  [key=0, style=bold, color=blue];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_38  [key=2, style=dotted];
m14_76 -> m14_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_15  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_17  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_22  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_23  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_24  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_25  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_43  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_26  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_47  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_50  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_51  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_57  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_63  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_66  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_68  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_76 -> m14_73  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m14_77 -> m14_43  [key=1, style=dashed, color=red, label=component];
m14_78 -> m14_57  [key=1, style=dashed, color=red, label=component];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_18  [key=2, style=dotted];
m15_17 -> m15_15  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ILongRunningProcess"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_2 -> m15_4  [key=0, style=solid];
m15_2 -> n11  [key=2, style=dotted];
m15_4 -> m15_0  [key=0, style=bold, color=blue];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_6  [key=0, style=bold, color=blue];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_8 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_12  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_13  [key=2, style=dotted];
m15_11 -> m15_9  [key=0, style=solid];
m15_11 -> m15_14  [key=2, style=dotted];
m15_12 -> m15_8  [key=0, style=bold, color=blue];
m15_19 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.InfiniteLoopProcess"];
m15_19 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.InfiniteLoopProcess"];
m15_19 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.InfiniteLoopProcess"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.IBootstrapperConfiguration>"];
m17_0 -> m17_6  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.IBootstrapperConfiguration>"];
m17_0 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m17_0 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_5  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_19  [key=2, style=dotted];
m17_14 -> m17_13  [key=0, style=solid];
m17_14 -> m17_21  [key=2, style=dotted];
m17_14 -> m17_22  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_23  [key=2, style=dotted];
m17_2 -> m17_16  [key=0, style=solid];
m17_2 -> n11  [key=2, style=dotted];
m17_4 -> m17_16  [key=0, style=solid];
m17_4 -> n11  [key=2, style=dotted];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_18  [key=2, style=dotted];
m17_5 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_5 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_5 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_5 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_5 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_5 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_5 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label=configuration];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_9  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_13  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [key=0, style=solid];
m17_12 -> m17_11  [key=0, style=solid];
m17_12 -> m17_20  [key=2, style=dotted];
m17_16 -> m17_0  [key=0, style=bold, color=blue];
m18_72 -> m18_82  [key=1, style=dashed, color=green, label=currentState];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_78  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m18_161 -> m18_162  [key=0, style=solid];
m18_91 -> m18_92  [key=0, style=solid, color=red];
m18_17 -> m18_153  [key=0, style=solid];
m18_17 -> m18_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m18_17 -> m18_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m18_17 -> m18_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m18_17 -> m18_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m18_154 -> m18_14  [key=2, style=dotted];
m18_154 -> m18_160  [key=0, style=solid];
m18_154 -> m18_155  [key=0, style=solid];
m18_154 -> m18_158  [key=1, style=dashed, color=darkseagreen4, label=time];
m18_154 -> m18_162  [key=1, style=dashed, color=darkseagreen4, label=time];
m18_156 -> m18_14  [key=2, style=dotted];
m18_156 -> m18_160  [key=0, style=solid];
m18_156 -> m18_157  [key=0, style=solid, color=red];
m18_156 -> m18_99  [key=2, style=dotted];
m18_157 -> m18_124  [key=2, style=dotted];
m18_157 -> m18_158  [key=0, style=solid, color=red];
m18_157 -> m18_159  [key=0, style=solid];
m18_157 -> d42  [key=2, style=dotted, color=red];
m18_158 -> m18_159  [key=0, style=solid];
m18_158 -> m18_161  [key=2, style=dotted];
m18_158 -> m18_162  [key=2, style=dotted];
m18_158 -> m18_101  [key=2, style=dotted];
m18_159 -> m18_160  [key=0, style=solid];
m18_159 -> m18_163  [key=2, style=dotted];
m18_159 -> m18_153  [key=0, style=bold, color=blue];
m18_153 -> m18_154  [key=0, style=solid];
m18_153 -> m18_155  [key=0, style=solid];
m18_155 -> m18_156  [key=0, style=solid];
m18_155 -> m18_157  [key=0, style=solid];
m18_155 -> m18_123  [key=2, style=dotted];
m18_155 -> m18_160  [key=2, style=dotted];
m18_160 -> m18_17  [key=0, style=bold, color=blue];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_56  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid, color=red];
m18_106 -> m18_99  [key=2, style=dotted];
m18_106 -> m18_57  [key=2, style=dotted];
m18_107 -> m18_108  [key=0, style=solid, color=red];
m18_107 -> d42  [key=2, style=dotted, color=red];
m18_107 -> m18_59  [key=2, style=dotted];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_58  [key=2, style=dotted];
m18_108 -> m18_114  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_108 -> m18_110  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_108 -> m18_122  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_108 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_108 -> m18_129  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_108 -> m18_92  [key=0, style=bold, color=blue];
m18_109 -> m18_110  [key=0, style=solid, color=green];
m18_109 -> m18_101  [key=2, style=dotted];
m18_109 -> m18_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_109 -> m18_115  [key=0, style=solid];
m18_109 -> m18_123  [key=2, style=dotted];
m18_110 -> m18_111  [key=0, style=solid, color=green];
m18_110 -> m18_101  [key=2, style=dotted];
m18_110 -> m18_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_110 -> m18_113  [key=0, style=solid, color=green];
m18_110 -> m18_124  [key=2, style=dotted, color=green];
m18_111 -> m18_112  [key=0, style=solid];
m18_111 -> m18_101  [key=2, style=dotted];
m18_111 -> m18_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_111 -> m18_113  [key=0, style=solid, color=green];
m18_112 -> m18_105  [key=0, style=bold, color=blue];
m18_112 -> m18_111  [key=0, style=solid];
m18_112 -> m18_125  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid, color=red];
m18_15 -> m18_23  [key=2, style=dotted, color=red];
m18_15 -> m18_24  [key=2, style=dotted, color=red];
m18_15 -> m18_60  [key=1, style=dashed, color=red, label="lambda expression"];
m18_207 -> m18_208  [key=0, style=solid];
m18_208 -> m18_209  [key=0, style=solid];
m18_209 -> m18_210  [key=0, style=solid, color=red];
m18_209 -> m18_99  [key=2, style=dotted];
m18_210 -> m18_211  [key=0, style=solid, color=red];
m18_210 -> d42  [key=2, style=dotted, color=red];
m18_211 -> m18_212  [key=0, style=solid, color=red];
m18_211 -> m18_101  [key=2, style=dotted, color=red];
m18_211 -> m18_213  [key=1, style=dashed, color=red, label="lambda expression"];
m18_212 -> m18_207  [key=0, style=bold, color=blue];
m18_94 -> m18_95  [key=0, style=solid];
m18_95 -> m18_96  [key=0, style=solid, color=red];
m18_95 -> m18_99  [key=2, style=dotted];
m18_96 -> m18_97  [key=0, style=solid, color=red];
m18_96 -> d42  [key=2, style=dotted, color=red];
m18_96 -> m18_101  [key=0, style=solid];
m18_96 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label=filter];
m18_97 -> m18_98  [key=0, style=solid, color=red];
m18_97 -> m18_101  [key=2, style=dotted, color=red];
m18_97 -> m18_102  [key=1, style=dashed, color=red, label="lambda expression"];
m18_97 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m18_97 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m18_98 -> m18_94  [key=0, style=bold, color=blue];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_102  [key=2, style=dotted];
m18_129 -> m18_135  [key=0, style=solid];
m18_129 -> m18_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_129 -> m18_138  [key=1, style=dashed, color=darkseagreen4, label=bool];
m18_129 -> m18_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m18_129 -> m18_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_129 -> m18_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m18_129 -> m18_130  [key=0, style=solid];
m18_129 -> m18_34  [key=2, style=dotted];
m18_129 -> m18_116  [key=2, style=dotted];
m18_129 -> m18_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_135 -> m18_127  [key=2, style=dotted];
m18_135 -> m18_136  [key=0, style=solid];
m18_135 -> m18_144  [key=2, style=dotted];
m18_135 -> m18_137  [key=1, style=dashed, color=darkseagreen4, label=properties];
m18_135 -> m18_139  [key=1, style=dashed, color=darkseagreen4, label=properties];
m18_135 -> m18_140  [key=1, style=dashed, color=darkseagreen4, label=properties];
m18_135 -> m18_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_135 -> m18_142  [key=1, style=dashed, color=darkseagreen4, label=properties];
m18_135 -> m18_23  [key=2, style=dotted];
m18_135 -> m18_24  [key=2, style=dotted];
m18_136 -> m18_137  [key=0, style=solid, color=red];
m18_136 -> m18_141  [key=1, style=dashed, color=darkseagreen4, label=now];
m18_136 -> m18_99  [key=2, style=dotted];
m18_137 -> m18_138  [key=0, style=solid, color=red];
m18_137 -> m18_145  [key=2, style=dotted];
m18_137 -> d42  [key=2, style=dotted, color=red];
m18_139 -> m18_140  [key=0, style=solid];
m18_139 -> m18_146  [key=2, style=dotted];
m18_139 -> m18_101  [key=2, style=dotted];
m18_139 -> m18_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_140 -> m18_141  [key=0, style=solid];
m18_140 -> m18_145  [key=2, style=dotted];
m18_140 -> m18_134  [key=0, style=bold, color=blue];
m18_141 -> m18_142  [key=0, style=solid];
m18_141 -> m18_147  [key=2, style=dotted];
m18_141 -> m18_145  [key=2, style=dotted];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_148  [key=2, style=dotted];
m18_142 -> m18_34  [key=2, style=dotted];
m18_142 -> m18_35  [key=2, style=dotted];
m18_138 -> m18_139  [key=0, style=solid, color=red];
m18_138 -> m18_140  [key=0, style=solid];
m18_138 -> m18_101  [key=2, style=dotted, color=red];
m18_138 -> m18_144  [key=1, style=dashed, color=red, label="lambda expression"];
m18_143 -> m18_129  [key=0, style=bold, color=blue];
m18_143 -> m18_141  [key=0, style=bold, color=blue];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_51  [key=2, style=dotted];
m18_35 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m18_35 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m18_54 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m18_54 -> m18_96  [key=0, style=solid];
m18_54 -> m18_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m18_54 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m18_54 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m18_100 -> m18_103  [key=2, style=dotted];
m18_100 -> m18_96  [key=0, style=solid];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_96  [key=0, style=solid];
m18_99 -> m18_216  [key=0, style=solid, color=red];
m18_101 -> m18_54  [key=0, style=bold, color=blue];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_54  [key=2, style=dotted];
m18_120 -> m18_121  [key=0, style=solid, color=green];
m18_120 -> m18_122  [key=0, style=solid, color=green];
m18_92 -> m18_104  [key=0, style=solid];
m18_92 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m18_92 -> m18_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m18_92 -> m18_93  [key=0, style=solid, color=red];
m18_92 -> m18_72  [key=2, style=dotted, color=red];
m18_104 -> m18_55  [key=2, style=dotted];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_107  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m18_104 -> m18_102  [key=0, style=bold, color=blue];
m18_14 -> m18_15  [key=0, style=solid, color=red];
m18_14 -> m18_23  [key=2, style=dotted];
m18_14 -> m18_24  [key=2, style=dotted];
m18_14 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_90 -> m18_87  [key=0, style=bold, color=blue];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_34  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m18_164 -> m18_82  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m18_164 -> m18_110  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m18_164 -> m18_131  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m18_164 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_164 -> m18_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m18_165 -> m18_166  [key=0, style=solid];
m18_165 -> m18_23  [key=2, style=dotted];
m18_165 -> m18_30  [key=2, style=dotted];
m18_165 -> m18_24  [key=2, style=dotted];
m18_165 -> m18_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_165 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m18_166 -> m18_167  [key=0, style=solid, color=red];
m18_166 -> m18_99  [key=2, style=dotted];
m18_166 -> m18_174  [key=1, style=dashed, color=red, label=scheduler];
m18_167 -> m18_168  [key=0, style=solid, color=red];
m18_167 -> m18_169  [key=2, style=dotted, color=red];
m18_167 -> m18_173  [key=1, style=dashed, color=red, label="lambda expression"];
m18_168 -> m18_164  [key=0, style=bold, color=blue];
m18_152 -> m18_150  [key=0, style=bold, color=blue];
m18_27 -> m18_28  [key=0, style=solid, color=green];
m18_27 -> m18_29  [key=0, style=solid, color=green];
m18_0 -> m18_1  [key=0, style=solid, color=red];
m18_1 -> m18_2  [key=0, style=solid, color=red];
m18_1 -> m18_17  [key=2, style=dotted, color=red];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_18  [key=2, style=dotted, color=red];
m18_2 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m18_2 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m18_2 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m18_2 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m18_2 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m18_2 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_3 -> m18_19  [key=2, style=dotted, color=red];
m18_3 -> m18_5  [key=0, style=solid, color=green];
m18_4 -> m18_5  [key=0, style=solid, color=red];
m18_4 -> m18_20  [key=2, style=dotted];
m18_4 -> m18_13  [key=0, style=solid, color=green];
m18_4 -> m18_14  [key=2, style=dotted, color=green];
m18_5 -> m18_6  [key=0, style=solid, color=red];
m18_5 -> m18_21  [key=2, style=dotted, color=red];
m18_5 -> m18_7  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_22  [key=2, style=dotted];
m18_6 -> m18_13  [key=0, style=solid];
m18_6 -> m18_14  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid, color=red];
m18_7 -> m18_23  [key=2, style=dotted];
m18_7 -> m18_24  [key=2, style=dotted];
m18_7 -> m18_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_8 -> m18_9  [key=0, style=solid, color=green];
m18_8 -> m18_15  [key=2, style=dotted];
m18_8 -> m18_16  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid, color=green];
m18_9 -> m18_23  [key=2, style=dotted, color=red];
m18_9 -> m18_24  [key=2, style=dotted, color=red];
m18_9 -> m18_36  [key=1, style=dashed, color=red, label="lambda expression"];
m18_9 -> m18_40  [key=1, style=dashed, color=red, label="lambda expression"];
m18_9 -> m18_11  [key=0, style=solid, color=green];
m18_10 -> m18_11  [key=0, style=solid, color=red];
m18_10 -> m18_25  [key=2, style=dotted, color=red];
m18_10 -> m18_26  [key=2, style=dotted, color=red];
m18_10 -> m18_27  [key=2, style=dotted, color=red];
m18_10 -> m18_28  [key=2, style=dotted, color=red];
m18_10 -> m18_43  [key=1, style=dashed, color=red, label="lambda expression"];
m18_10 -> m18_9  [key=0, style=solid, color=green];
m18_10 -> m18_17  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid, color=red];
m18_11 -> m18_29  [key=2, style=dotted];
m18_11 -> m18_13  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid, color=red];
m18_12 -> m18_23  [key=2, style=dotted, color=red];
m18_12 -> m18_24  [key=2, style=dotted, color=red];
m18_12 -> m18_47  [key=1, style=dashed, color=red, label="lambda expression"];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_23  [key=2, style=dotted];
m18_13 -> m18_30  [key=2, style=dotted];
m18_13 -> m18_24  [key=2, style=dotted];
m18_13 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_13 -> m18_2  [key=0, style=bold, color=blue];
m18_16 -> m18_0  [key=0, style=bold, color=blue];
m18_26 -> m18_27  [key=0, style=solid, color=green];
m18_26 -> m18_33  [key=1, style=dashed, color=green, label="HangFire.Common.JobMethod"];
m18_26 -> m18_34  [key=1, style=dashed, color=green, label="string[]"];
m18_26 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m18_26 -> m18_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_26 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m18_26 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m18_26 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_28 -> m18_45  [key=0, style=solid, color=green];
m18_28 -> m18_14  [key=2, style=dotted, color=green];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_31  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid, color=green];
m18_33 -> m18_46  [key=2, style=dotted, color=green];
m18_33 -> m18_47  [key=2, style=dotted, color=green];
m18_33 -> m18_21  [key=2, style=dotted, color=green];
m18_33 -> m18_48  [key=2, style=dotted, color=green];
m18_33 -> m18_31  [key=0, style=bold, color=blue];
m18_31 -> m18_33  [key=0, style=solid, color=green];
m18_31 -> m18_32  [key=0, style=solid];
m18_34 -> m18_35  [key=0, style=solid, color=green];
m18_34 -> m18_49  [key=2, style=dotted, color=green];
m18_34 -> m18_50  [key=2, style=dotted, color=green];
m18_34 -> m18_36  [key=1, style=dashed, color=green, label=jobId];
m18_34 -> m18_42  [key=1, style=dashed, color=green, label=jobId];
m18_34 -> m18_44  [key=1, style=dashed, color=green, label=jobId];
m18_36 -> m18_37  [key=0, style=solid, color=red];
m18_36 -> m18_52  [key=2, style=dotted];
m18_36 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m18_36 -> m18_19  [key=0, style=solid];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_58  [key=2, style=dotted];
m18_42 -> m18_40  [key=0, style=bold, color=blue];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_46  [key=2, style=dotted];
m18_30 -> m18_14  [key=2, style=dotted];
m18_30 -> m18_45  [key=0, style=solid];
m18_32 -> m18_14  [key=2, style=dotted];
m18_32 -> m18_45  [key=0, style=solid];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_34  [key=2, style=dotted];
m18_32 -> m18_35  [key=2, style=dotted];
m18_37 -> m18_53  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid, color=red];
m18_37 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m18_37 -> m18_34  [key=2, style=dotted, color=red];
m18_37 -> m18_39  [key=2, style=dotted, color=red];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_54  [key=2, style=dotted];
m18_38 -> m18_36  [key=0, style=bold, color=blue];
m18_39 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m18_39 -> m18_55  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m18_41 -> m18_42  [key=0, style=solid, color=red];
m18_41 -> m18_71  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Server.PerformContext context"];
m18_41 -> m18_57  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid, color=red];
m18_40 -> m18_56  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_59  [key=2, style=dotted];
m18_45 -> m18_26  [key=0, style=bold, color=blue];
m18_45 -> m18_43  [key=0, style=bold, color=blue];
m18_185 -> m18_186  [key=0, style=solid, color=red];
m18_186 -> m18_187  [key=0, style=solid, color=red];
m18_186 -> m18_192  [key=2, style=dotted, color=red];
m18_186 -> m18_193  [key=2, style=dotted, color=red];
m18_186 -> m18_190  [key=1, style=dashed, color=red, label=timeZone];
m18_186 -> m18_195  [key=1, style=dashed, color=red, label=timeZone];
m18_187 -> m18_188  [key=0, style=solid];
m18_190 -> m18_191  [key=0, style=solid, color=red];
m18_190 -> m18_101  [key=2, style=dotted, color=red];
m18_190 -> m18_194  [key=1, style=dashed, color=red, label="lambda expression"];
m18_188 -> m18_189  [key=0, style=solid, color=red];
m18_188 -> m18_99  [key=2, style=dotted];
m18_189 -> m18_190  [key=0, style=solid, color=red];
m18_189 -> d42  [key=2, style=dotted, color=red];
m18_191 -> m18_185  [key=0, style=bold, color=blue];
m18_213 -> m18_214  [key=0, style=solid, color=red];
m18_47 -> m18_48  [key=0, style=solid, color=red];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_149  [key=0, style=solid];
m18_55 -> m18_56  [key=0, style=solid];
m18_60 -> m18_61  [key=0, style=solid, color=red];
m18_48 -> m18_49  [key=0, style=solid, color=red];
m18_48 -> m18_50  [key=2, style=dotted, color=red];
m18_49 -> m18_47  [key=0, style=bold, color=blue];
m18_53 -> m18_51  [key=0, style=bold, color=blue];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_58  [key=2, style=dotted];
m18_56 -> m18_59  [key=2, style=dotted];
m18_57 -> m18_55  [key=0, style=bold, color=blue];
m18_57 -> m18_110  [key=1, style=dashed, color=green, label=string];
m18_57 -> m18_113  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m18_57 -> m18_114  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateApplyingContext"];
m18_57 -> m18_116  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateApplyingContext"];
m18_57 -> m18_120  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m18_57 -> m18_121  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateApplyingContext"];
m18_57 -> m18_109  [key=0, style=solid];
m18_57 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_57 -> m18_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m18_57 -> m18_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_57 -> m18_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_57 -> m18_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m18_57 -> m18_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m18_61 -> m18_62  [key=0, style=solid, color=red];
m18_61 -> m18_34  [key=2, style=dotted, color=red];
m18_61 -> m18_63  [key=2, style=dotted, color=red];
m18_62 -> m18_60  [key=0, style=bold, color=blue];
m18_69 -> m18_70  [key=0, style=solid, color=green];
m18_69 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m18_69 -> m18_89  [key=2, style=dotted];
m18_69 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m18_70 -> m18_71  [key=0, style=solid, color=green];
m18_70 -> m18_72  [key=2, style=dotted, color=red];
m18_71 -> m18_69  [key=0, style=bold, color=blue];
m18_71 -> m18_86  [key=0, style=solid];
m18_77 -> m18_78  [key=0, style=solid, color=red];
m18_77 -> m18_52  [key=2, style=dotted];
m18_78 -> m18_79  [key=0, style=solid, color=red];
m18_78 -> m18_72  [key=2, style=dotted, color=red];
m18_78 -> m18_53  [key=2, style=dotted];
m18_78 -> m18_80  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m18_79 -> m18_77  [key=0, style=bold, color=blue];
m18_79 -> m18_80  [key=0, style=solid];
m18_79 -> m18_54  [key=2, style=dotted];
m18_84 -> m18_85  [key=0, style=solid, color=green];
m18_85 -> m18_86  [key=0, style=solid, color=green];
m18_85 -> m18_72  [key=2, style=dotted, color=red];
m18_86 -> m18_84  [key=0, style=bold, color=blue];
m18_86 -> m18_63  [key=0, style=bold, color=blue];
m18_93 -> m18_91  [key=0, style=bold, color=blue];
m18_102 -> m18_103  [key=0, style=solid, color=red];
m18_103 -> m18_104  [key=0, style=solid, color=red];
m18_103 -> m18_34  [key=2, style=dotted, color=red];
m18_103 -> m18_63  [key=2, style=dotted, color=red];
m18_103 -> m18_131  [key=0, style=solid, color=green];
m18_103 -> m18_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateContext"];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_34  [key=2, style=dotted];
m18_114 -> m18_116  [key=2, style=dotted];
m18_114 -> m18_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_114 -> m18_113  [key=0, style=solid, color=green];
m18_114 -> m18_126  [key=2, style=dotted, color=green];
m18_122 -> m18_123  [key=0, style=solid];
m18_122 -> m18_34  [key=2, style=dotted];
m18_122 -> m18_116  [key=2, style=dotted];
m18_122 -> m18_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_122 -> m18_57  [key=0, style=bold, color=blue];
m18_113 -> m18_114  [key=0, style=solid, color=green];
m18_113 -> m18_115  [key=0, style=solid, color=green];
m18_121 -> m18_122  [key=0, style=solid];
m18_121 -> m18_120  [key=0, style=solid, color=green];
m18_121 -> m18_130  [key=2, style=dotted, color=green];
m18_128 -> m18_129  [key=0, style=solid];
m18_115 -> m18_113  [key=0, style=bold, color=blue];
m18_115 -> m18_116  [key=0, style=solid, color=green];
m18_115 -> m18_124  [key=2, style=dotted];
m18_115 -> m18_119  [key=0, style=solid];
m18_117 -> m18_118  [key=0, style=solid];
m18_117 -> m18_119  [key=0, style=solid];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_120  [key=2, style=dotted];
m18_118 -> m18_117  [key=0, style=solid];
m18_118 -> m18_128  [key=2, style=dotted];
m18_119 -> m18_117  [key=0, style=bold, color=blue];
m18_119 -> m18_120  [key=0, style=solid, color=green];
m18_119 -> m18_129  [key=2, style=dotted];
m18_123 -> m18_121  [key=0, style=bold, color=blue];
m18_124 -> m18_125  [key=0, style=solid];
m18_125 -> m18_126  [key=0, style=solid];
m18_125 -> m18_120  [key=2, style=dotted];
m18_125 -> m18_127  [key=2, style=dotted];
m18_126 -> m18_124  [key=0, style=bold, color=blue];
m18_130 -> m18_128  [key=0, style=bold, color=blue];
m18_131 -> m18_132  [key=0, style=solid, color=green];
m18_131 -> m18_55  [key=2, style=dotted, color=green];
m18_131 -> m18_133  [key=1, style=dashed, color=green, label=transaction];
m18_132 -> m18_133  [key=0, style=solid];
m18_132 -> m18_120  [key=2, style=dotted];
m18_132 -> m18_127  [key=2, style=dotted];
m18_132 -> m18_129  [key=2, style=dotted];
m18_133 -> m18_131  [key=0, style=bold, color=blue];
m18_133 -> m18_134  [key=0, style=solid];
m18_133 -> m18_59  [key=2, style=dotted];
m18_144 -> m18_145  [key=0, style=solid, color=red];
m18_147 -> m18_148  [key=0, style=solid];
m18_145 -> m18_146  [key=0, style=solid, color=red];
m18_145 -> m18_34  [key=2, style=dotted, color=red];
m18_145 -> m18_63  [key=2, style=dotted, color=red];
m18_146 -> m18_144  [key=0, style=bold, color=blue];
m18_148 -> m18_149  [key=0, style=solid];
m18_148 -> m18_58  [key=2, style=dotted];
m18_148 -> m18_34  [key=2, style=dotted];
m18_148 -> m18_116  [key=2, style=dotted];
m18_148 -> m18_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_149 -> m18_147  [key=0, style=bold, color=blue];
m18_149 -> m18_150  [key=0, style=solid];
m18_149 -> m18_151  [key=2, style=dotted];
m18_149 -> m18_152  [key=2, style=dotted];
m18_150 -> m18_151  [key=0, style=solid];
m18_150 -> m18_51  [key=0, style=bold, color=blue];
m18_151 -> m18_152  [key=0, style=solid];
m18_151 -> m18_120  [key=2, style=dotted];
m18_151 -> m18_127  [key=2, style=dotted];
m18_162 -> m18_163  [key=0, style=solid];
m18_162 -> m18_35  [key=2, style=dotted];
m18_163 -> m18_161  [key=0, style=bold, color=blue];
m18_170 -> m18_171  [key=0, style=solid];
m18_174 -> m18_175  [key=0, style=solid, color=red];
m18_174 -> d42  [key=2, style=dotted, color=red];
m18_173 -> m18_174  [key=0, style=solid, color=red];
m18_171 -> m18_172  [key=0, style=solid];
m18_171 -> m18_34  [key=2, style=dotted];
m18_171 -> m18_54  [key=2, style=dotted];
m18_172 -> m18_170  [key=0, style=bold, color=blue];
m18_175 -> m18_173  [key=0, style=bold, color=blue];
m18_183 -> m18_184  [key=0, style=solid, color=red];
m18_183 -> d42  [key=2, style=dotted, color=red];
m18_182 -> m18_183  [key=0, style=solid, color=red];
m18_184 -> m18_182  [key=0, style=bold, color=blue];
m18_195 -> m18_196  [key=0, style=solid, color=red];
m18_195 -> m18_34  [key=2, style=dotted, color=red];
m18_195 -> m18_39  [key=2, style=dotted, color=red];
m18_194 -> m18_195  [key=0, style=solid, color=red];
m18_196 -> m18_194  [key=0, style=bold, color=blue];
m18_204 -> m18_205  [key=0, style=solid, color=red];
m18_205 -> m18_206  [key=0, style=solid, color=red];
m18_205 -> m18_34  [key=2, style=dotted, color=red];
m18_205 -> m18_39  [key=2, style=dotted, color=red];
m18_206 -> m18_204  [key=0, style=bold, color=blue];
m18_214 -> m18_215  [key=0, style=solid, color=red];
m18_214 -> m18_34  [key=2, style=dotted, color=red];
m18_214 -> m18_63  [key=2, style=dotted, color=red];
m18_19 -> m18_21  [key=2, style=dotted];
m18_19 -> m18_38  [key=0, style=solid];
m18_19 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_215 -> m18_213  [key=0, style=bold, color=blue];
m18_116 -> m18_117  [key=0, style=solid, color=green];
m18_116 -> m18_127  [key=2, style=dotted, color=green];
m18_116 -> m18_118  [key=1, style=dashed, color=green, label=stateData];
m18_87 -> m18_88  [key=0, style=solid, color=red];
m18_88 -> m18_89  [key=0, style=solid, color=red];
m18_88 -> m18_34  [key=2, style=dotted, color=red];
m18_88 -> m18_91  [key=1, style=dashed, color=red, label="lambda expression"];
m18_88 -> m18_88  [key=3, color=darkorchid, style=bold, label="Field variable string JobId"];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_68  [key=2, style=dotted];
m18_176 -> m18_177  [key=0, style=solid];
m18_177 -> m18_178  [key=0, style=solid];
m18_177 -> m18_181  [key=2, style=dotted];
m18_177 -> m18_28  [key=2, style=dotted];
m18_178 -> m18_179  [key=0, style=solid, color=red];
m18_178 -> m18_99  [key=2, style=dotted];
m18_178 -> m18_183  [key=1, style=dashed, color=red, label=scheduler];
m18_179 -> m18_180  [key=0, style=solid, color=red];
m18_179 -> m18_169  [key=2, style=dotted, color=red];
m18_179 -> m18_182  [key=1, style=dashed, color=red, label="lambda expression"];
m18_180 -> m18_176  [key=0, style=bold, color=blue];
m18_64 -> m18_65  [key=0, style=solid, color=red];
m18_64 -> m18_66  [key=0, style=solid];
m18_64 -> m18_87  [key=2, style=dotted];
m18_65 -> m18_66  [key=0, style=solid, color=red];
m18_65 -> m18_34  [key=2, style=dotted, color=red];
m18_65 -> m18_69  [key=1, style=dashed, color=red, label="lambda expression"];
m18_65 -> m18_14  [key=2, style=dotted];
m18_65 -> m18_86  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid, color=red];
m18_66 -> m18_68  [key=2, style=dotted, color=red];
m18_67 -> m18_64  [key=0, style=bold, color=blue];
m18_67 -> m18_14  [key=2, style=dotted];
m18_67 -> m18_86  [key=0, style=solid];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_88  [key=2, style=dotted];
m18_134 -> m18_135  [key=0, style=solid];
m18_134 -> m18_103  [key=0, style=bold, color=blue];
m18_197 -> m18_198  [key=0, style=solid];
m18_198 -> m18_199  [key=0, style=solid];
m18_198 -> m18_203  [key=2, style=dotted];
m18_199 -> m18_200  [key=0, style=solid, color=red];
m18_199 -> m18_99  [key=2, style=dotted];
m18_200 -> m18_201  [key=0, style=solid, color=red];
m18_200 -> d42  [key=2, style=dotted, color=red];
m18_201 -> m18_202  [key=0, style=solid, color=red];
m18_201 -> m18_101  [key=2, style=dotted, color=red];
m18_201 -> m18_204  [key=1, style=dashed, color=red, label="lambda expression"];
m18_202 -> m18_197  [key=0, style=bold, color=blue];
m18_80 -> m18_81  [key=0, style=solid, color=red];
m18_80 -> m18_86  [key=0, style=solid];
m18_80 -> m18_92  [key=2, style=dotted];
m18_81 -> m18_82  [key=0, style=solid, color=green];
m18_81 -> m18_34  [key=2, style=dotted, color=red];
m18_81 -> m18_84  [key=1, style=dashed, color=red, label="lambda expression"];
m18_82 -> m18_83  [key=0, style=solid, color=green];
m18_82 -> m18_68  [key=2, style=dotted];
m18_82 -> m18_53  [key=2, style=dotted, color=green];
m18_82 -> m18_52  [key=2, style=dotted, color=green];
m18_82 -> m18_93  [key=2, style=dotted, color=green];
m18_82 -> m18_94  [key=2, style=dotted, color=green];
m18_83 -> m18_80  [key=0, style=bold, color=blue];
m18_83 -> m18_86  [key=0, style=solid];
m18_83 -> m18_95  [key=2, style=dotted];
m18_83 -> m18_92  [key=2, style=dotted];
m18_216 -> m18_217  [key=0, style=solid, color=red];
m18_216 -> m18_72  [key=2, style=dotted, color=red];
m18_217 -> m18_99  [key=0, style=bold, color=blue];
m18_63 -> m18_82  [key=1, style=dashed, color=green, label=string];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_63 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_63 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_63 -> m18_73  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m18_63 -> m18_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_63 -> m18_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_51  [key=2, style=dotted];
m18_76 -> m18_79  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m18_76 -> m18_80  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m18_76 -> m18_73  [key=0, style=bold, color=blue];
m18_73 -> m18_74  [key=0, style=solid, color=red];
m18_73 -> m18_75  [key=0, style=solid];
m18_73 -> m18_90  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid, color=red];
m18_75 -> m18_77  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m18_75 -> m18_91  [key=2, style=dotted];
m18_75 -> m18_68  [key=2, style=dotted, color=red];
m18_74 -> m18_86  [key=0, style=solid];
m18_74 -> m18_75  [key=0, style=solid, color=red];
m18_74 -> m18_34  [key=2, style=dotted, color=red];
m18_74 -> m18_77  [key=1, style=dashed, color=red, label="lambda expression"];
m18_218 -> m18_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_8  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_9  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_41  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_10  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_12  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_15  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_65  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_70  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_74  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_78  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_81  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_85  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_88  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_92  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_96  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_97  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_107  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_109  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_132  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_137  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_138  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_151  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_157  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_167  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_174  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_179  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_183  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_189  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_190  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_200  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_201  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_210  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_211  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_218 -> m18_216  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m18_219 -> m18_114  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_219 -> m18_122  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_219 -> m18_129  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m18_220 -> m18_162  [key=1, style=dashed, color=darkseagreen4, label=time];
m18_221 -> m18_174  [key=1, style=dashed, color=red, label=scheduler];
m18_222 -> m18_183  [key=1, style=dashed, color=red, label=scheduler];
m18_223 -> m18_195  [key=1, style=dashed, color=red, label=timeZone];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m21_3 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_13  [key=2, style=dotted];
m21_4 -> m21_6  [key=1, style=dashed, color=green, label=transaction];
m21_4 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m21_4 -> m21_9  [key=1, style=dashed, color=green, label=transaction];
m21_4 -> m21_10  [key=1, style=dashed, color=green, label=transaction];
m21_4 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m21_5 -> m21_6  [key=0, style=solid, color=green];
m21_5 -> m21_8  [key=0, style=solid];
m21_8 -> m21_9  [key=0, style=solid, color=green];
m21_8 -> m21_11  [key=0, style=solid, color=red];
m21_6 -> m21_7  [key=0, style=solid, color=green];
m21_6 -> m21_14  [key=2, style=dotted, color=green];
m21_6 -> d24  [key=2, style=dotted, color=green];
m21_6 -> m21_16  [key=2, style=dotted, color=green];
m21_6 -> m21_17  [key=2, style=dotted, color=green];
m21_7 -> m21_11  [key=0, style=solid, color=red];
m21_7 -> m21_14  [key=2, style=dotted, color=red];
m21_7 -> d24  [key=2, style=dotted, color=red];
m21_7 -> m21_18  [key=2, style=dotted, color=red];
m21_7 -> m21_17  [key=2, style=dotted, color=red];
m21_9 -> m21_10  [key=0, style=solid, color=green];
m21_9 -> m21_14  [key=2, style=dotted, color=green];
m21_9 -> d24  [key=2, style=dotted, color=green];
m21_9 -> m21_16  [key=2, style=dotted, color=green];
m21_9 -> m21_17  [key=2, style=dotted, color=green];
m21_10 -> m21_11  [key=0, style=solid, color=green];
m21_10 -> m21_14  [key=2, style=dotted, color=green];
m21_10 -> d24  [key=2, style=dotted, color=green];
m21_10 -> m21_18  [key=2, style=dotted, color=green];
m21_10 -> m21_17  [key=2, style=dotted, color=green];
m21_11 -> m21_12  [key=0, style=solid, color=red];
m21_11 -> m21_19  [key=2, style=dotted, color=red];
m21_12 -> m21_3  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid, color=green];
m21_1 -> m21_2  [key=0, style=solid, color=green];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_20 -> m21_1  [key=1, style=dashed, color=green, label="HangFire.Filters.StatisticsHistoryFilterAttribute"];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_15  [key=2, style=dotted];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> d39  [key=2, style=dotted];
m23_9 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_9 -> m23_16  [key=2, style=dotted];
m23_9 -> m23_17  [key=2, style=dotted];
m23_10 -> m23_8  [key=0, style=bold, color=blue];
m23_10 -> m23_12  [key=0, style=solid];
m23_10 -> m23_11  [key=0, style=solid];
m23_17 -> m23_14  [key=0, style=bold, color=blue];
m23_19 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m23_19 -> m23_20  [key=0, style=solid, color=red];
m23_19 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m23_21 -> m23_22  [key=0, style=solid, color=red];
m23_21 -> m23_16  [key=2, style=dotted];
m23_21 -> m23_17  [key=2, style=dotted];
m23_21 -> m23_25  [key=2, style=dotted, color=red];
m23_22 -> m23_23  [key=0, style=solid, color=red];
m23_22 -> m23_24  [key=0, style=solid];
m23_22 -> m23_26  [key=2, style=dotted, color=red];
m23_22 -> m23_18  [key=2, style=dotted, color=red];
m23_20 -> m23_21  [key=0, style=solid, color=red];
m23_20 -> m23_15  [key=2, style=dotted];
m23_20 -> m23_7  [key=2, style=dotted, color=red];
m23_20 -> m23_22  [key=1, style=dashed, color=red, label=state];
m23_20 -> m23_23  [key=1, style=dashed, color=red, label=state];
m23_23 -> m23_24  [key=0, style=solid, color=red];
m23_23 -> m23_18  [key=2, style=dotted, color=red];
m23_24 -> m23_19  [key=0, style=bold, color=blue];
m23_7 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatingContext"];
m23_7 -> m23_8  [key=0, style=solid];
m23_13 -> m23_14  [key=0, style=solid, color=green];
m23_13 -> m23_18  [key=2, style=dotted, color=green];
m23_13 -> m23_11  [key=0, style=bold, color=blue];
m23_12 -> m23_13  [key=0, style=solid, color=green];
m23_12 -> m23_14  [key=0, style=solid];
m23_12 -> m23_7  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_14 -> m23_7  [key=0, style=bold, color=blue];
m23_14 -> m23_15  [key=0, style=solid, color=red];
m23_15 -> m23_16  [key=0, style=solid, color=red];
m23_15 -> m23_7  [key=2, style=dotted, color=red];
m23_16 -> m23_17  [key=0, style=solid, color=red];
m23_16 -> m23_18  [key=2, style=dotted, color=red];
m23_27 -> m23_28  [key=0, style=solid, color=red];
m23_28 -> m23_29  [key=0, style=solid, color=red];
m23_28 -> m23_7  [key=2, style=dotted, color=red];
m23_29 -> m23_30  [key=0, style=solid, color=red];
m23_29 -> m23_31  [key=2, style=dotted, color=red];
m23_30 -> m23_27  [key=0, style=bold, color=blue];
m23_25 -> m23_1  [key=1, style=dashed, color=green, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_2  [key=1, style=dashed, color=green, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_4  [key=1, style=dashed, color=green, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_25 -> m23_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestClientFilter"];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_0 -> m23_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.ICollection<string>"];
m23_0 -> m23_4  [key=1, style=dashed, color=green, label=bool];
m23_0 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label=bool];
m23_0 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label=bool];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_1 -> d39  [key=2, style=dotted, color=red];
m23_1 -> m23_4  [key=1, style=dashed, color=red, label="lambda expression"];
m23_2 -> m23_3  [key=0, style=solid, color=green];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_3 -> m23_4  [key=0, style=solid, color=green];
m23_4 -> m23_5  [key=0, style=solid, color=red];
m23_5 -> m23_6  [key=0, style=solid, color=red];
m23_5 -> m23_7  [key=2, style=dotted, color=red];
m23_6 -> m23_0  [key=0, style=bold, color=blue];
m23_6 -> m23_4  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_0  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_59  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_60  [key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_61  [key=2, style=dotted];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_62  [key=2, style=dotted];
m25_4 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label=queues];
m25_4 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=queues];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_59  [key=2, style=dotted];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_8  [key=0, style=solid];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_57  [key=0, style=solid];
m25_9 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_9 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=queue];
m25_7 -> m25_58  [key=0, style=solid];
m25_7 -> m25_59  [key=2, style=dotted];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_59  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_59  [key=2, style=dotted];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_59  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_63  [key=2, style=dotted];
m25_11 -> m25_64  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_64  [key=2, style=dotted];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_64  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_23  [key=0, style=solid];
m25_19 -> m25_20  [key=0, style=solid];
m25_19 -> m25_63  [key=2, style=dotted];
m25_19 -> m25_64  [key=2, style=dotted];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_64  [key=2, style=dotted];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_27  [key=0, style=solid];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_55  [key=0, style=solid];
m25_28 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_59  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_59  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_59  [key=2, style=dotted];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_59  [key=2, style=dotted];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_59  [key=2, style=dotted];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_59  [key=2, style=dotted];
m25_22 -> m25_24  [key=0, style=solid];
m25_22 -> m25_59  [key=2, style=dotted];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_59  [key=2, style=dotted];
m25_26 -> m25_56  [key=0, style=solid];
m25_26 -> m25_59  [key=2, style=dotted];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_59  [key=2, style=dotted];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_59  [key=2, style=dotted];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_59  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_64  [key=2, style=dotted];
m25_30 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_30 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_59  [key=2, style=dotted];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_63  [key=2, style=dotted];
m25_32 -> m25_64  [key=2, style=dotted];
m25_32 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_32 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_59  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_65  [key=2, style=dotted];
m25_34 -> m25_66  [key=2, style=dotted];
m25_34 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_34 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_59  [key=2, style=dotted];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_38  [key=0, style=solid];
m25_36 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_36 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_59  [key=2, style=dotted];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_59  [key=2, style=dotted];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_67  [key=2, style=dotted];
m25_39 -> d24  [key=2, style=dotted];
m25_39 -> m25_64  [key=2, style=dotted];
m25_39 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_39 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_59  [key=2, style=dotted];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_64  [key=2, style=dotted];
m25_41 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_41 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_59  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_63  [key=2, style=dotted];
m25_43 -> m25_64  [key=2, style=dotted];
m25_43 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_43 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_59  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_69  [key=2, style=dotted];
m25_45 -> m25_66  [key=2, style=dotted];
m25_45 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_45 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_59  [key=2, style=dotted];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_53  [key=0, style=solid];
m25_47 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_47 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_59  [key=2, style=dotted];
m25_53 -> m25_54  [key=0, style=solid];
m25_53 -> m25_59  [key=2, style=dotted];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_70  [key=2, style=dotted];
m25_49 -> m25_64  [key=2, style=dotted];
m25_49 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_49 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_59  [key=2, style=dotted];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_64  [key=2, style=dotted];
m25_51 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_52 -> m25_54  [key=0, style=solid];
m25_52 -> m25_59  [key=2, style=dotted];
m25_54 -> m25_28  [key=0, style=solid];
m25_54 -> m25_59  [key=2, style=dotted];
m25_56 -> m25_9  [key=0, style=solid];
m25_56 -> m25_59  [key=2, style=dotted];
m25_58 -> m25_0  [key=0, style=bold, color=blue];
m25_71 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m25_71 -> m25_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_53  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_54  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_55  [key=2, style=dotted];
m26_4 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=from];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_55  [key=2, style=dotted];
m26_5 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_57  [key=2, style=dotted];
m26_7 -> m26_58  [key=2, style=dotted];
m26_7 -> m26_59  [key=2, style=dotted];
m26_7 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label=pager];
m26_7 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label=pager];
m26_7 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label=pager];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_56  [key=2, style=dotted];
m26_6 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_60  [key=2, style=dotted];
m26_8 -> m26_19  [key=1, style=dashed, color=darkseagreen4, label=processingJobs];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_12  [key=0, style=solid];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_62  [key=2, style=dotted];
m26_17 -> m26_63  [key=2, style=dotted];
m26_17 -> m26_64  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_51 -> m26_69  [key=2, style=dotted];
m26_51 -> m26_63  [key=2, style=dotted];
m26_51 -> m26_64  [key=2, style=dotted];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_53  [key=2, style=dotted];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_50  [key=0, style=solid];
m26_19 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_11 -> m26_52  [key=0, style=solid];
m26_11 -> m26_53  [key=2, style=dotted];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_53  [key=2, style=dotted];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_59  [key=2, style=dotted];
m26_13 -> m26_61  [key=2, style=dotted];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_53  [key=2, style=dotted];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_59  [key=2, style=dotted];
m26_15 -> m26_61  [key=2, style=dotted];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_53  [key=2, style=dotted];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_53  [key=2, style=dotted];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_53  [key=2, style=dotted];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_53  [key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_61  [key=2, style=dotted];
m26_21 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_21 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_53  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_61  [key=2, style=dotted];
m26_23 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_23 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_53  [key=2, style=dotted];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_29  [key=0, style=solid];
m26_25 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_25 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_25 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_53  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_53  [key=2, style=dotted];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_61  [key=2, style=dotted];
m26_27 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_27 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_59  [key=2, style=dotted];
m26_30 -> m26_61  [key=2, style=dotted];
m26_30 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_30 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_53  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_53  [key=2, style=dotted];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_65  [key=2, style=dotted];
m26_32 -> m26_64  [key=2, style=dotted];
m26_32 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_32 -> m26_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_53  [key=2, style=dotted];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_36  [key=0, style=solid];
m26_34 -> m26_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_34 -> m26_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_53  [key=2, style=dotted];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_53  [key=2, style=dotted];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_66  [key=2, style=dotted];
m26_37 -> m26_61  [key=2, style=dotted];
m26_37 -> m26_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_37 -> m26_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_53  [key=2, style=dotted];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_59  [key=2, style=dotted];
m26_39 -> m26_61  [key=2, style=dotted];
m26_39 -> m26_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_39 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_53  [key=2, style=dotted];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_67  [key=2, style=dotted];
m26_41 -> m26_64  [key=2, style=dotted];
m26_41 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_41 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_53  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_49  [key=0, style=solid];
m26_43 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_43 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_53  [key=2, style=dotted];
m26_49 -> m26_19  [key=0, style=solid];
m26_49 -> m26_53  [key=2, style=dotted];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_68  [key=2, style=dotted];
m26_45 -> m26_61  [key=2, style=dotted];
m26_45 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_45 -> m26_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_53  [key=2, style=dotted];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_61  [key=2, style=dotted];
m26_47 -> m26_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_53  [key=2, style=dotted];
m26_52 -> m26_0  [key=0, style=bold, color=blue];
m26_70 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m26_70 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m27_74 -> m27_75  [key=0, style=solid];
m27_75 -> m27_76  [key=0, style=solid];
m27_76 -> m27_48  [key=2, style=dotted];
m27_76 -> m27_77  [key=0, style=solid];
m27_76 -> m27_80  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_77 -> d39  [key=2, style=dotted];
m27_77 -> m27_78  [key=0, style=solid];
m27_77 -> m27_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_78 -> m27_74  [key=0, style=bold, color=blue];
m27_37 -> m27_38  [key=0, style=solid, color=green];
m27_38 -> m27_39  [key=0, style=solid, color=green];
m27_38 -> d39  [key=2, style=dotted, color=green];
m27_38 -> m27_41  [key=1, style=dashed, color=green, label="lambda expression"];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_24  [key=2, style=dotted];
m27_40 -> m27_37  [key=0, style=bold, color=blue];
m27_82 -> m27_83  [key=0, style=solid];
m27_83 -> m27_84  [key=0, style=solid];
m27_84 -> m27_48  [key=2, style=dotted];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_88  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_85 -> d39  [key=2, style=dotted];
m27_85 -> m27_86  [key=0, style=solid];
m27_85 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_86 -> m27_82  [key=0, style=bold, color=blue];
m27_54 -> m27_55  [key=0, style=solid];
m27_55 -> m27_14  [key=2, style=dotted];
m27_55 -> m27_56  [key=0, style=solid];
m27_56 -> m27_48  [key=2, style=dotted];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_57 -> d39  [key=2, style=dotted];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_58 -> m27_54  [key=0, style=bold, color=blue];
m27_30 -> m27_31  [key=0, style=solid, color=green];
m27_31 -> m27_32  [key=0, style=solid, color=green];
m27_31 -> d39  [key=2, style=dotted, color=green];
m27_31 -> m27_34  [key=1, style=dashed, color=green, label="lambda expression"];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_24  [key=2, style=dotted];
m27_33 -> m27_30  [key=0, style=bold, color=blue];
m27_19 -> m27_20  [key=0, style=solid, color=green];
m27_20 -> m27_21  [key=0, style=solid, color=green];
m27_20 -> d39  [key=2, style=dotted, color=green];
m27_20 -> m27_25  [key=1, style=dashed, color=green, label="lambda expression"];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_24  [key=2, style=dotted];
m27_22 -> m27_19  [key=0, style=bold, color=blue];
m27_63 -> m27_64  [key=0, style=solid, color=green];
m27_64 -> m27_65  [key=0, style=solid, color=green];
m27_64 -> m27_11  [key=2, style=dotted, color=green];
m27_64 -> m27_12  [key=2, style=dotted, color=green];
m27_64 -> m27_68  [key=1, style=dashed, color=green, label="lambda expression"];
m27_65 -> m27_48  [key=2, style=dotted];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_72  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_66 -> d39  [key=2, style=dotted];
m27_66 -> m27_67  [key=0, style=solid];
m27_66 -> m27_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_67 -> m27_63  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid, color=green];
m27_4 -> m27_13  [key=2, style=dotted, color=green];
m27_3 -> m27_4  [key=0, style=solid, color=green];
m27_3 -> m27_11  [key=2, style=dotted];
m27_3 -> m27_12  [key=2, style=dotted];
m27_3 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_5 -> m27_6  [key=0, style=solid, color=green];
m27_6 -> m27_7  [key=0, style=solid, color=green];
m27_6 -> m27_14  [key=2, style=dotted, color=green];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_8  [key=2, style=dotted];
m27_1 -> m27_9  [key=2, style=dotted];
m27_1 -> m27_0  [key=0, style=bold, color=blue];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_10  [key=2, style=dotted];
m27_7 -> m27_0  [key=0, style=bold, color=blue];
m27_95 -> m27_96  [key=0, style=solid];
m27_25 -> m27_26  [key=0, style=solid, color=green];
m27_26 -> m27_27  [key=0, style=solid, color=green];
m27_26 -> m27_28  [key=2, style=dotted, color=green];
m27_26 -> m27_29  [key=2, style=dotted, color=green];
m27_27 -> m27_25  [key=0, style=bold, color=blue];
m27_34 -> m27_35  [key=0, style=solid, color=green];
m27_35 -> m27_36  [key=0, style=solid, color=green];
m27_35 -> m27_28  [key=2, style=dotted, color=green];
m27_35 -> m27_29  [key=2, style=dotted, color=green];
m27_36 -> m27_34  [key=0, style=bold, color=blue];
m27_41 -> m27_42  [key=0, style=solid, color=green];
m27_42 -> m27_43  [key=0, style=solid, color=green];
m27_42 -> m27_28  [key=2, style=dotted, color=green];
m27_42 -> m27_29  [key=2, style=dotted, color=green];
m27_43 -> m27_41  [key=0, style=bold, color=blue];
m27_68 -> m27_69  [key=0, style=solid, color=green];
m27_69 -> m27_70  [key=0, style=solid, color=green];
m27_69 -> d39  [key=2, style=dotted, color=green];
m27_69 -> m27_18  [key=2, style=dotted, color=green];
m27_70 -> m27_68  [key=0, style=bold, color=blue];
m27_15 -> m27_16  [key=0, style=solid];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_62  [key=2, style=dotted];
m27_16 -> m27_18  [key=2, style=dotted];
m27_16 -> m27_17  [key=0, style=solid];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_62  [key=2, style=dotted];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_62  [key=2, style=dotted];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_62  [key=2, style=dotted];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_62  [key=2, style=dotted];
m27_17 -> m27_15  [key=0, style=bold, color=blue];
m27_59 -> m27_60  [key=0, style=solid];
m27_71 -> m27_72  [key=0, style=solid];
m27_79 -> m27_80  [key=0, style=solid];
m27_87 -> m27_88  [key=0, style=solid];
m27_73 -> m27_71  [key=0, style=bold, color=blue];
m27_61 -> m27_59  [key=0, style=bold, color=blue];
m27_81 -> m27_79  [key=0, style=bold, color=blue];
m27_89 -> m27_87  [key=0, style=bold, color=blue];
m27_97 -> m27_95  [key=0, style=bold, color=blue];
m27_90 -> m27_91  [key=0, style=solid];
m27_91 -> m27_92  [key=0, style=solid];
m27_92 -> m27_48  [key=2, style=dotted];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_93 -> d39  [key=2, style=dotted];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_94 -> m27_90  [key=0, style=bold, color=blue];
m27_44 -> m27_45  [key=0, style=solid, color=green];
m27_45 -> m27_46  [key=0, style=solid, color=green];
m27_45 -> m27_48  [key=2, style=dotted, color=green];
m27_46 -> m27_47  [key=0, style=solid, color=green];
m27_46 -> m27_24  [key=2, style=dotted, color=green];
m27_47 -> m27_44  [key=0, style=bold, color=blue];
m27_48 -> m27_98  [key=0, style=solid];
m27_98 -> m27_28  [key=2, style=dotted];
m27_98 -> m27_99  [key=0, style=solid];
m27_99 -> m27_48  [key=0, style=bold, color=blue];
m27_49 -> m27_50  [key=0, style=solid];
m27_50 -> m27_48  [key=2, style=dotted];
m27_50 -> m27_51  [key=0, style=solid];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_53  [key=2, style=dotted];
m27_52 -> m27_49  [key=0, style=bold, color=blue];
m27_100 -> m27_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_6  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_20  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_26  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_31  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_35  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_38  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_42  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_45  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_46  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_64  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_100 -> m27_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m27_102 -> m27_72  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_101 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_103 -> m27_80  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_104 -> m27_88  [key=1, style=dashed, color=darkseagreen4, label=token];
m27_105 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label=token];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m28_0 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m28_0 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_8  [key=2, style=dotted];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_9  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_10  [key=2, style=dotted];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_12  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> d39  [key=2, style=dotted];
m28_4 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label=token];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_7  [key=0, style=solid];
m28_7 -> m28_0  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid, color=red];
m29_1 -> m29_2  [key=0, style=solid, color=red];
m29_1 -> m29_8  [key=2, style=dotted, color=red];
m29_2 -> m29_3  [key=0, style=solid, color=red];
m29_2 -> m29_9  [key=2, style=dotted, color=red];
m29_3 -> m29_4  [key=0, style=solid, color=red];
m29_3 -> m29_10  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid, color=red];
m29_4 -> m29_11  [key=2, style=dotted, color=red];
m29_5 -> m29_6  [key=0, style=solid, color=red];
m29_5 -> m29_12  [key=2, style=dotted, color=red];
m29_6 -> m29_7  [key=0, style=solid, color=red];
m29_6 -> m29_13  [key=2, style=dotted, color=red];
m29_6 -> m29_14  [key=2, style=dotted, color=red];
m29_6 -> m29_15  [key=1, style=dashed, color=red, label="lambda expression"];
m29_7 -> m29_0  [key=0, style=bold, color=blue];
m29_50 -> m29_51  [key=0, style=solid];
m29_51 -> m29_52  [key=0, style=solid, color=red];
m29_51 -> m29_13  [key=2, style=dotted];
m29_51 -> m29_14  [key=2, style=dotted];
m29_51 -> m29_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_52 -> m29_53  [key=0, style=solid, color=red];
m29_52 -> m29_40  [key=2, style=dotted, color=red];
m29_53 -> m29_54  [key=0, style=solid, color=red];
m29_53 -> m29_41  [key=2, style=dotted, color=red];
m29_54 -> m29_55  [key=0, style=solid];
m29_54 -> m29_42  [key=2, style=dotted];
m29_54 -> m29_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_55 -> m29_50  [key=0, style=bold, color=blue];
m29_19 -> m29_20  [key=0, style=solid, color=red];
m29_20 -> m29_21  [key=0, style=solid, color=red];
m29_20 -> d39  [key=2, style=dotted, color=red];
m29_20 -> m29_23  [key=1, style=dashed, color=red, label="lambda expression"];
m29_21 -> m29_19  [key=0, style=bold, color=blue];
m29_40 -> m29_63  [key=0, style=solid, color=red];
m29_63 -> m29_64  [key=0, style=solid, color=red];
m29_63 -> m29_33  [key=2, style=dotted, color=red];
m29_64 -> m29_40  [key=0, style=bold, color=blue];
m29_60 -> m29_61  [key=0, style=solid];
m29_15 -> m29_16  [key=0, style=solid, color=red];
m29_16 -> m29_17  [key=0, style=solid, color=red];
m29_16 -> m29_18  [key=2, style=dotted, color=red];
m29_17 -> m29_15  [key=0, style=bold, color=blue];
m29_23 -> m29_24  [key=0, style=solid, color=red];
m29_24 -> m29_25  [key=0, style=solid, color=red];
m29_24 -> m29_26  [key=2, style=dotted, color=red];
m29_25 -> m29_23  [key=0, style=bold, color=blue];
m29_30 -> m29_31  [key=0, style=solid, color=red];
m29_31 -> m29_32  [key=0, style=solid, color=red];
m29_31 -> m29_33  [key=2, style=dotted, color=red];
m29_32 -> m29_30  [key=0, style=bold, color=blue];
m29_43 -> m29_44  [key=0, style=solid, color=red];
m29_46 -> m29_47  [key=0, style=solid, color=red];
m29_44 -> m29_45  [key=0, style=solid, color=red];
m29_44 -> m29_18  [key=2, style=dotted, color=red];
m29_45 -> m29_43  [key=0, style=bold, color=blue];
m29_47 -> m29_48  [key=0, style=solid, color=red];
m29_47 -> m29_49  [key=2, style=dotted, color=red];
m29_48 -> m29_46  [key=0, style=bold, color=blue];
m29_56 -> m29_57  [key=0, style=solid];
m29_57 -> m29_58  [key=0, style=solid];
m29_57 -> d39  [key=2, style=dotted];
m29_57 -> m29_59  [key=2, style=dotted];
m29_58 -> m29_56  [key=0, style=bold, color=blue];
m29_61 -> m29_62  [key=0, style=solid];
m29_61 -> m29_59  [key=2, style=dotted];
m29_62 -> m29_60  [key=0, style=bold, color=blue];
m29_27 -> m29_28  [key=0, style=solid, color=red];
m29_28 -> m29_29  [key=0, style=solid, color=red];
m29_28 -> d39  [key=2, style=dotted, color=red];
m29_28 -> m29_30  [key=1, style=dashed, color=red, label="lambda expression"];
m29_29 -> m29_27  [key=0, style=bold, color=blue];
m29_34 -> m29_35  [key=0, style=solid, color=red];
m29_35 -> m29_36  [key=0, style=solid, color=red];
m29_35 -> m29_40  [key=2, style=dotted, color=red];
m29_36 -> m29_37  [key=0, style=solid, color=red];
m29_36 -> m29_41  [key=2, style=dotted, color=red];
m29_37 -> m29_38  [key=0, style=solid, color=red];
m29_37 -> m29_42  [key=2, style=dotted, color=red];
m29_37 -> m29_43  [key=1, style=dashed, color=red, label="lambda expression"];
m29_38 -> m29_39  [key=0, style=solid, color=red];
m29_38 -> m29_42  [key=2, style=dotted, color=red];
m29_38 -> m29_46  [key=1, style=dashed, color=red, label="lambda expression"];
m29_39 -> m29_34  [key=0, style=bold, color=blue];
m29_65 -> m29_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_28  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_31  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_35  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_36  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_37  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_38  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m29_65 -> m29_63  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts"];
m30_239 -> m30_240  [key=0, style=solid];
m30_239 -> m30_243  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_239 -> m30_244  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_240 -> m30_241  [key=0, style=solid];
m30_240 -> m30_47  [key=2, style=dotted];
m30_240 -> m30_247  [key=2, style=dotted];
m30_243 -> m30_244  [key=0, style=solid];
m30_243 -> m30_246  [key=0, style=solid];
m30_244 -> m30_245  [key=0, style=solid];
m30_244 -> m30_97  [key=2, style=dotted];
m30_241 -> m30_242  [key=0, style=solid];
m30_241 -> m30_248  [key=2, style=dotted];
m30_241 -> m30_249  [key=2, style=dotted];
m30_241 -> m30_244  [key=1, style=dashed, color=darkseagreen4, label=history];
m30_242 -> m30_243  [key=0, style=solid];
m30_242 -> m30_244  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_242 -> m30_245  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_245 -> m30_243  [key=0, style=solid];
m30_245 -> m30_245  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_246 -> m30_239  [key=0, style=bold, color=blue];
m30_153 -> m30_154  [key=0, style=solid];
m30_154 -> m30_155  [key=0, style=solid];
m30_154 -> m30_159  [key=2, style=dotted];
m30_155 -> m30_156  [key=0, style=solid];
m30_155 -> m30_160  [key=2, style=dotted];
m30_155 -> m30_157  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m30_156 -> m30_157  [key=0, style=solid];
m30_156 -> m30_161  [key=2, style=dotted];
m30_156 -> m30_109  [key=2, style=dotted];
m30_157 -> m30_158  [key=0, style=solid];
m30_157 -> m30_161  [key=2, style=dotted];
m30_157 -> m30_109  [key=2, style=dotted];
m30_158 -> m30_153  [key=0, style=bold, color=blue];
m30_137 -> m30_138  [key=0, style=solid];
m30_138 -> m30_139  [key=0, style=solid];
m30_138 -> m30_141  [key=2, style=dotted];
m30_138 -> m30_97  [key=2, style=dotted];
m30_139 -> m30_140  [key=0, style=solid];
m30_139 -> m30_142  [key=2, style=dotted];
m30_139 -> m30_109  [key=2, style=dotted];
m30_140 -> m30_137  [key=0, style=bold, color=blue];
m30_90 -> m30_91  [key=0, style=solid];
m30_90 -> m30_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_91 -> m30_92  [key=0, style=solid];
m30_91 -> m30_77  [key=2, style=dotted];
m30_91 -> m30_78  [key=2, style=dotted];
m30_92 -> m30_93  [key=0, style=solid];
m30_92 -> m30_89  [key=2, style=dotted];
m30_93 -> m30_90  [key=0, style=bold, color=blue];
m30_19 -> m30_20  [key=0, style=solid];
m30_20 -> m30_21  [key=0, style=solid];
m30_20 -> m30_22  [key=2, style=dotted];
m30_21 -> m30_19  [key=0, style=bold, color=blue];
m30_162 -> m30_163  [key=0, style=solid];
m30_163 -> m30_164  [key=0, style=solid];
m30_163 -> m30_142  [key=2, style=dotted];
m30_163 -> m30_109  [key=2, style=dotted];
m30_164 -> m30_165  [key=0, style=solid];
m30_164 -> m30_159  [key=2, style=dotted];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_160  [key=2, style=dotted];
m30_165 -> m30_167  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m30_166 -> m30_167  [key=0, style=solid];
m30_166 -> m30_18  [key=2, style=dotted];
m30_166 -> m30_109  [key=2, style=dotted];
m30_167 -> m30_168  [key=0, style=solid];
m30_167 -> m30_18  [key=2, style=dotted];
m30_167 -> m30_109  [key=2, style=dotted];
m30_168 -> m30_162  [key=0, style=bold, color=blue];
m30_64 -> m30_65  [key=0, style=solid];
m30_64 -> m30_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_65 -> m30_66  [key=0, style=solid];
m30_65 -> m30_47  [key=2, style=dotted];
m30_65 -> m30_48  [key=2, style=dotted];
m30_66 -> m30_67  [key=0, style=solid];
m30_66 -> m30_68  [key=2, style=dotted];
m30_66 -> m30_63  [key=2, style=dotted];
m30_67 -> m30_64  [key=0, style=bold, color=blue];
m30_169 -> m30_170  [key=0, style=solid];
m30_170 -> m30_171  [key=0, style=solid];
m30_170 -> m30_142  [key=2, style=dotted];
m30_170 -> m30_152  [key=2, style=dotted];
m30_171 -> m30_169  [key=0, style=bold, color=blue];
m30_212 -> m30_213  [key=0, style=solid];
m30_213 -> m30_214  [key=0, style=solid];
m30_213 -> m30_47  [key=2, style=dotted];
m30_213 -> m30_193  [key=2, style=dotted];
m30_213 -> m30_215  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_214 -> m30_215  [key=0, style=solid];
m30_214 -> m30_194  [key=2, style=dotted];
m30_215 -> m30_216  [key=0, style=solid];
m30_215 -> m30_40  [key=2, style=dotted];
m30_215 -> m30_218  [key=1, style=dashed, color=darkseagreen4, label=history];
m30_215 -> m30_219  [key=1, style=dashed, color=darkseagreen4, label=history];
m30_216 -> m30_217  [key=0, style=solid];
m30_216 -> m30_194  [key=2, style=dotted];
m30_218 -> m30_219  [key=0, style=solid];
m30_218 -> n53  [key=2, style=dotted];
m30_218 -> m30_109  [key=2, style=dotted];
m30_218 -> m30_218  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_219 -> m30_217  [key=0, style=solid];
m30_219 -> m30_97  [key=2, style=dotted];
m30_219 -> m30_219  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_217 -> m30_218  [key=0, style=solid];
m30_217 -> m30_220  [key=0, style=solid];
m30_220 -> m30_212  [key=0, style=bold, color=blue];
m30_121 -> m30_122  [key=0, style=solid];
m30_122 -> m30_123  [key=0, style=solid];
m30_122 -> m30_47  [key=2, style=dotted];
m30_123 -> m30_124  [key=0, style=solid];
m30_123 -> m30_102  [key=2, style=dotted];
m30_123 -> m30_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_124 -> m30_121  [key=0, style=bold, color=blue];
m30_94 -> m30_95  [key=0, style=solid];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_97  [key=2, style=dotted];
m30_96 -> m30_94  [key=0, style=bold, color=blue];
m30_59 -> m30_60  [key=0, style=solid];
m30_60 -> m30_61  [key=0, style=solid];
m30_60 -> m30_62  [key=2, style=dotted];
m30_60 -> m30_63  [key=2, style=dotted];
m30_61 -> m30_59  [key=0, style=bold, color=blue];
m30_10 -> m30_11  [key=0, style=solid];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_13  [key=2, style=dotted];
m30_12 -> m30_10  [key=0, style=bold, color=blue];
m30_195 -> m30_196  [key=0, style=solid];
m30_196 -> m30_197  [key=0, style=solid];
m30_196 -> m30_198  [key=2, style=dotted];
m30_196 -> m30_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_197 -> m30_195  [key=0, style=bold, color=blue];
m30_227 -> m30_222  [key=0, style=bold, color=blue];
m30_222 -> m30_223  [key=0, style=solid];
m30_223 -> m30_224  [key=0, style=solid];
m30_223 -> m30_47  [key=2, style=dotted];
m30_223 -> m30_180  [key=2, style=dotted];
m30_223 -> m30_225  [key=1, style=dashed, color=darkseagreen4, label=stateEntry];
m30_223 -> m30_226  [key=1, style=dashed, color=darkseagreen4, label=stateEntry];
m30_224 -> m30_225  [key=0, style=solid];
m30_224 -> m30_227  [key=0, style=solid];
m30_225 -> m30_226  [key=0, style=solid];
m30_225 -> m30_228  [key=2, style=dotted];
m30_225 -> m30_109  [key=2, style=dotted];
m30_225 -> m30_225  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_226 -> m30_224  [key=0, style=solid];
m30_226 -> m30_97  [key=2, style=dotted];
m30_226 -> m30_226  [key=1, style=dashed, color=darkseagreen4, label=property];
m30_229 -> m30_230  [key=0, style=solid];
m30_229 -> m30_232  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_229 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_230 -> m30_231  [key=0, style=solid];
m30_230 -> m30_97  [key=2, style=dotted];
m30_232 -> m30_233  [key=0, style=solid];
m30_232 -> m30_235  [key=0, style=solid];
m30_233 -> m30_234  [key=0, style=solid];
m30_233 -> m30_97  [key=2, style=dotted];
m30_231 -> m30_232  [key=0, style=solid];
m30_231 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_231 -> m30_234  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_234 -> m30_232  [key=0, style=solid];
m30_234 -> m30_234  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_235 -> m30_229  [key=0, style=bold, color=blue];
m30_209 -> m30_210  [key=0, style=solid];
m30_34 -> m30_35  [key=0, style=solid];
m30_37 -> m30_38  [key=0, style=solid];
m30_35 -> m30_36  [key=0, style=solid];
m30_36 -> m30_34  [key=0, style=bold, color=blue];
m30_38 -> m30_39  [key=0, style=solid];
m30_38 -> m30_40  [key=2, style=dotted];
m30_38 -> m30_41  [key=2, style=dotted];
m30_39 -> m30_37  [key=0, style=bold, color=blue];
m30_50 -> m30_51  [key=0, style=solid];
m30_53 -> m30_54  [key=0, style=solid];
m30_56 -> m30_57  [key=0, style=solid];
m30_51 -> m30_52  [key=0, style=solid];
m30_52 -> m30_50  [key=0, style=bold, color=blue];
m30_54 -> m30_55  [key=0, style=solid];
m30_55 -> m30_53  [key=0, style=bold, color=blue];
m30_57 -> m30_58  [key=0, style=solid];
m30_57 -> m30_40  [key=2, style=dotted];
m30_57 -> m30_41  [key=2, style=dotted];
m30_58 -> m30_56  [key=0, style=bold, color=blue];
m30_103 -> m30_104  [key=0, style=solid];
m30_103 -> m30_105  [key=1, style=dashed, color=darkseagreen4, label="?"];
m30_104 -> m30_105  [key=0, style=solid];
m30_104 -> m30_107  [key=2, style=dotted];
m30_105 -> m30_106  [key=0, style=solid];
m30_105 -> m30_108  [key=2, style=dotted];
m30_105 -> m30_109  [key=2, style=dotted];
m30_106 -> m30_103  [key=0, style=bold, color=blue];
m30_125 -> m30_126  [key=0, style=solid];
m30_125 -> m30_127  [key=1, style=dashed, color=darkseagreen4, label="?"];
m30_126 -> m30_127  [key=0, style=solid];
m30_126 -> m30_107  [key=2, style=dotted];
m30_127 -> m30_128  [key=0, style=solid];
m30_127 -> m30_108  [key=2, style=dotted];
m30_127 -> m30_109  [key=2, style=dotted];
m30_128 -> m30_125  [key=0, style=bold, color=blue];
m30_199 -> m30_200  [key=0, style=solid];
m30_200 -> m30_201  [key=0, style=solid];
m30_200 -> m30_40  [key=2, style=dotted];
m30_200 -> m30_202  [key=2, style=dotted];
m30_200 -> m30_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_201 -> m30_199  [key=0, style=bold, color=blue];
m30_203 -> m30_204  [key=0, style=solid];
m30_204 -> m30_205  [key=0, style=solid];
m30_205 -> m30_203  [key=0, style=bold, color=blue];
m30_210 -> m30_211  [key=0, style=solid];
m30_210 -> m30_40  [key=2, style=dotted];
m30_210 -> m30_202  [key=2, style=dotted];
m30_211 -> m30_209  [key=0, style=bold, color=blue];
m30_149 -> m30_150  [key=0, style=solid];
m30_150 -> m30_151  [key=0, style=solid];
m30_150 -> m30_142  [key=2, style=dotted];
m30_150 -> m30_152  [key=2, style=dotted];
m30_151 -> m30_149  [key=0, style=bold, color=blue];
m30_80 -> m30_81  [key=0, style=solid];
m30_81 -> m30_82  [key=0, style=solid];
m30_81 -> m30_83  [key=2, style=dotted];
m30_81 -> m30_84  [key=2, style=dotted];
m30_82 -> m30_80  [key=0, style=bold, color=blue];
m30_69 -> m30_70  [key=0, style=solid];
m30_70 -> m30_71  [key=0, style=solid];
m30_70 -> m30_72  [key=2, style=dotted];
m30_70 -> m30_63  [key=2, style=dotted];
m30_71 -> m30_69  [key=0, style=bold, color=blue];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_42 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_47  [key=2, style=dotted];
m30_43 -> m30_48  [key=2, style=dotted];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_49  [key=2, style=dotted];
m30_44 -> m30_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_44 -> m30_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_30  [key=2, style=dotted];
m30_45 -> m30_31  [key=2, style=dotted];
m30_45 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_46 -> m30_42  [key=0, style=bold, color=blue];
m30_206 -> m30_207  [key=0, style=solid];
m30_207 -> m30_208  [key=0, style=solid];
m30_207 -> m30_198  [key=2, style=dotted];
m30_207 -> m30_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_208 -> m30_206  [key=0, style=bold, color=blue];
m30_176 -> m30_177  [key=0, style=solid];
m30_176 -> m30_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_177 -> m30_178  [key=0, style=solid];
m30_177 -> m30_47  [key=2, style=dotted];
m30_177 -> m30_180  [key=2, style=dotted];
m30_178 -> m30_179  [key=0, style=solid];
m30_178 -> m30_97  [key=2, style=dotted];
m30_179 -> m30_176  [key=0, style=bold, color=blue];
m30_110 -> m30_111  [key=0, style=solid];
m30_111 -> m30_112  [key=0, style=solid];
m30_111 -> m30_113  [key=2, style=dotted];
m30_111 -> m30_114  [key=2, style=dotted];
m30_111 -> m30_97  [key=2, style=dotted];
m30_112 -> m30_110  [key=0, style=bold, color=blue];
m30_236 -> m30_237  [key=0, style=solid];
m30_237 -> m30_238  [key=0, style=solid];
m30_237 -> m30_97  [key=2, style=dotted];
m30_238 -> m30_236  [key=0, style=bold, color=blue];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_23 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_24 -> m30_25  [key=0, style=solid];
m30_24 -> m30_29  [key=2, style=dotted];
m30_24 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label=mock];
m30_24 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label=mock];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_30  [key=2, style=dotted];
m30_25 -> m30_31  [key=2, style=dotted];
m30_25 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_33  [key=2, style=dotted];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_30  [key=2, style=dotted];
m30_26 -> m30_32  [key=2, style=dotted];
m30_26 -> m30_31  [key=2, style=dotted];
m30_26 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_28 -> m30_23  [key=0, style=bold, color=blue];
m30_14 -> m30_15  [key=0, style=solid];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_17  [key=2, style=dotted];
m30_15 -> m30_18  [key=2, style=dotted];
m30_16 -> m30_14  [key=0, style=bold, color=blue];
m30_172 -> m30_173  [key=0, style=solid];
m30_173 -> m30_174  [key=0, style=solid];
m30_173 -> m30_175  [key=2, style=dotted];
m30_173 -> m30_109  [key=2, style=dotted];
m30_174 -> m30_172  [key=0, style=bold, color=blue];
m30_146 -> m30_147  [key=0, style=solid];
m30_147 -> m30_148  [key=0, style=solid];
m30_147 -> m30_142  [key=2, style=dotted];
m30_147 -> m30_109  [key=2, style=dotted];
m30_148 -> m30_146  [key=0, style=bold, color=blue];
m30_115 -> m30_116  [key=0, style=solid];
m30_116 -> m30_117  [key=0, style=solid];
m30_116 -> m30_119  [key=2, style=dotted];
m30_116 -> m30_97  [key=2, style=dotted];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_120  [key=2, style=dotted];
m30_117 -> m30_97  [key=2, style=dotted];
m30_118 -> m30_115  [key=0, style=bold, color=blue];
m30_143 -> m30_144  [key=0, style=solid];
m30_144 -> m30_145  [key=0, style=solid];
m30_144 -> m30_141  [key=2, style=dotted];
m30_144 -> m30_97  [key=2, style=dotted];
m30_145 -> m30_143  [key=0, style=bold, color=blue];
m30_184 -> m30_181  [key=0, style=bold, color=blue];
m30_181 -> m30_182  [key=0, style=solid];
m30_181 -> m30_183  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_182 -> m30_183  [key=0, style=solid];
m30_182 -> m30_47  [key=2, style=dotted];
m30_182 -> m30_180  [key=2, style=dotted];
m30_183 -> m30_184  [key=0, style=solid];
m30_183 -> m30_185  [key=2, style=dotted];
m30_98 -> m30_99  [key=0, style=solid];
m30_99 -> m30_100  [key=0, style=solid];
m30_99 -> m30_47  [key=2, style=dotted];
m30_100 -> m30_101  [key=0, style=solid];
m30_100 -> m30_102  [key=2, style=dotted];
m30_100 -> m30_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_101 -> m30_98  [key=0, style=bold, color=blue];
m30_4 -> m30_5  [key=0, style=solid];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_8  [key=2, style=dotted];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_9  [key=2, style=dotted];
m30_7 -> m30_4  [key=0, style=bold, color=blue];
m30_192 -> m30_186  [key=0, style=bold, color=blue];
m30_186 -> m30_187  [key=0, style=solid];
m30_186 -> m30_191  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_187 -> m30_188  [key=0, style=solid];
m30_187 -> m30_47  [key=2, style=dotted];
m30_187 -> m30_193  [key=2, style=dotted];
m30_187 -> m30_189  [key=1, style=dashed, color=darkseagreen4, label=entry];
m30_191 -> m30_192  [key=0, style=solid];
m30_191 -> m30_136  [key=2, style=dotted];
m30_188 -> m30_189  [key=0, style=solid];
m30_188 -> m30_194  [key=2, style=dotted];
m30_189 -> m30_190  [key=0, style=solid];
m30_189 -> m30_40  [key=2, style=dotted];
m30_189 -> m30_191  [key=1, style=dashed, color=darkseagreen4, label=history];
m30_190 -> m30_191  [key=0, style=solid];
m30_190 -> m30_194  [key=2, style=dotted];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=2, style=dotted];
m30_2 -> m30_0  [key=0, style=bold, color=blue];
m30_129 -> m30_130  [key=0, style=solid];
m30_130 -> m30_131  [key=0, style=solid];
m30_130 -> m30_119  [key=2, style=dotted];
m30_130 -> m30_97  [key=2, style=dotted];
m30_131 -> m30_129  [key=0, style=bold, color=blue];
m30_132 -> m30_133  [key=0, style=solid];
m30_133 -> m30_134  [key=0, style=solid];
m30_133 -> m30_135  [key=2, style=dotted];
m30_133 -> m30_136  [key=2, style=dotted];
m30_134 -> m30_132  [key=0, style=bold, color=blue];
m30_85 -> m30_86  [key=0, style=solid];
m30_85 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_86 -> m30_87  [key=0, style=solid];
m30_86 -> m30_77  [key=2, style=dotted];
m30_86 -> m30_78  [key=2, style=dotted];
m30_87 -> m30_88  [key=0, style=solid];
m30_87 -> m30_89  [key=2, style=dotted];
m30_88 -> m30_85  [key=0, style=bold, color=blue];
m30_73 -> m30_74  [key=0, style=solid];
m30_74 -> m30_75  [key=0, style=solid];
m30_74 -> m30_77  [key=2, style=dotted];
m30_74 -> m30_78  [key=2, style=dotted];
m30_75 -> m30_76  [key=0, style=solid];
m30_75 -> m30_79  [key=2, style=dotted];
m30_76 -> m30_73  [key=0, style=bold, color=blue];
m30_250 -> m30_251  [key=0, style=solid];
m30_250 -> m30_253  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_250 -> m30_254  [key=1, style=dashed, color=darkseagreen4, label=Table];
m30_251 -> m30_252  [key=0, style=solid];
m30_251 -> m30_97  [key=2, style=dotted];
m30_253 -> m30_254  [key=0, style=solid];
m30_253 -> m30_256  [key=0, style=solid];
m30_254 -> m30_255  [key=0, style=solid];
m30_254 -> m30_97  [key=2, style=dotted];
m30_252 -> m30_253  [key=0, style=solid];
m30_252 -> m30_254  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_252 -> m30_255  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_255 -> m30_253  [key=0, style=solid];
m30_255 -> m30_255  [key=1, style=dashed, color=darkseagreen4, label=i];
m30_256 -> m30_250  [key=0, style=bold, color=blue];
m30_257 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_224  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_237  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_251  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m30_257 -> m30_254  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_30  [key=2, style=dotted];
m31_2 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_31  [key=2, style=dotted];
m31_3 -> m31_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_31  [key=2, style=dotted];
m31_4 -> m31_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_31  [key=2, style=dotted];
m31_5 -> m31_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_6 -> m31_7  [key=0, style=solid, color=red];
m31_6 -> m31_31  [key=2, style=dotted];
m31_6 -> m31_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_7 -> m31_8  [key=0, style=solid, color=red];
m31_7 -> m31_31  [key=2, style=dotted, color=red];
m31_7 -> m31_56  [key=1, style=dashed, color=red, label="lambda expression"];
m31_8 -> m31_9  [key=0, style=solid];
m31_8 -> m31_31  [key=2, style=dotted];
m31_8 -> m31_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_9 -> m31_10  [key=0, style=solid, color=red];
m31_9 -> m31_31  [key=2, style=dotted];
m31_9 -> m31_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_10 -> m31_11  [key=0, style=solid, color=red];
m31_10 -> m31_31  [key=2, style=dotted, color=red];
m31_10 -> m31_75  [key=1, style=dashed, color=red, label="lambda expression"];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_31  [key=2, style=dotted];
m31_11 -> m31_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_31  [key=2, style=dotted];
m31_12 -> m31_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_31  [key=2, style=dotted];
m31_13 -> m31_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_31  [key=2, style=dotted];
m31_14 -> m31_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_31  [key=2, style=dotted];
m31_15 -> m31_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_31  [key=2, style=dotted];
m31_16 -> m31_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_31  [key=2, style=dotted];
m31_17 -> m31_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_31  [key=2, style=dotted];
m31_18 -> m31_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_31  [key=2, style=dotted];
m31_19 -> m31_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_31  [key=2, style=dotted];
m31_20 -> m31_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_31  [key=2, style=dotted];
m31_21 -> m31_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_22 -> m31_23  [key=0, style=solid];
m31_22 -> m31_31  [key=2, style=dotted];
m31_22 -> m31_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_31  [key=2, style=dotted];
m31_23 -> m31_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_31  [key=2, style=dotted];
m31_24 -> m31_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_31  [key=2, style=dotted];
m31_25 -> m31_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_31  [key=2, style=dotted];
m31_26 -> m31_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_31  [key=2, style=dotted];
m31_27 -> m31_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_31  [key=2, style=dotted];
m31_28 -> m31_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_29 -> m31_0  [key=0, style=bold, color=blue];
m31_179 -> m31_180  [key=0, style=solid];
m31_180 -> m31_181  [key=0, style=solid];
m31_181 -> m31_179  [key=0, style=bold, color=blue];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_224  [key=3, color=darkorchid, style=bold, label="Parameter variable string contentFolder"];
m31_221 -> m31_222  [key=0, style=solid];
m31_221 -> m31_223  [key=2, style=dotted];
m31_222 -> m31_220  [key=0, style=bold, color=blue];
m31_200 -> m31_201  [key=0, style=solid];
m31_200 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_200 -> m31_212  [key=3, color=darkorchid, style=bold, label="method methodReturn IHttpHandler FindHandler"];
m31_201 -> m31_202  [key=0, style=solid];
m31_201 -> m31_203  [key=0, style=solid];
m31_201 -> m31_214  [key=2, style=dotted];
m31_209 -> m31_210  [key=0, style=solid];
m31_209 -> m31_218  [key=2, style=dotted];
m31_209 -> m31_211  [key=1, style=dashed, color=darkseagreen4, label=match];
m31_202 -> m31_213  [key=0, style=solid];
m31_202 -> m31_215  [key=2, style=dotted];
m31_203 -> m31_204  [key=0, style=solid];
m31_203 -> m31_212  [key=0, style=solid];
m31_203 -> m31_211  [key=1, style=dashed, color=darkseagreen4, label=pathHandlerFactory];
m31_204 -> m31_205  [key=0, style=solid];
m31_204 -> m31_206  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_204 -> m31_207  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_204 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_204 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_212 -> m31_213  [key=0, style=solid];
m31_211 -> m31_213  [key=0, style=solid];
m31_211 -> m31_219  [key=2, style=dotted];
m31_205 -> m31_206  [key=0, style=solid];
m31_205 -> m31_207  [key=0, style=solid];
m31_205 -> m31_216  [key=2, style=dotted];
m31_206 -> m31_207  [key=0, style=solid];
m31_206 -> m31_206  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_206 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_206 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_207 -> m31_208  [key=0, style=solid];
m31_207 -> m31_209  [key=0, style=solid];
m31_207 -> m31_217  [key=2, style=dotted];
m31_208 -> m31_209  [key=0, style=solid];
m31_208 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m31_210 -> m31_211  [key=0, style=solid];
m31_210 -> m31_203  [key=0, style=solid];
m31_213 -> m31_200  [key=0, style=bold, color=blue];
m31_155 -> m31_156  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_35  [key=2, style=dotted];
m31_36 -> m31_37  [key=0, style=solid];
m31_40 -> m31_41  [key=0, style=solid];
m31_44 -> m31_45  [key=0, style=solid];
m31_48 -> m31_49  [key=0, style=solid];
m31_52 -> m31_53  [key=0, style=solid];
m31_56 -> m31_57  [key=0, style=solid, color=red];
m31_64 -> m31_65  [key=0, style=solid];
m31_71 -> m31_72  [key=0, style=solid];
m31_75 -> m31_76  [key=0, style=solid, color=red];
m31_82 -> m31_83  [key=0, style=solid];
m31_89 -> m31_90  [key=0, style=solid];
m31_93 -> m31_94  [key=0, style=solid];
m31_99 -> m31_100  [key=0, style=solid];
m31_105 -> m31_106  [key=0, style=solid];
m31_109 -> m31_110  [key=0, style=solid];
m31_113 -> m31_114  [key=0, style=solid];
m31_119 -> m31_120  [key=0, style=solid];
m31_123 -> m31_124  [key=0, style=solid];
m31_129 -> m31_130  [key=0, style=solid];
m31_135 -> m31_136  [key=0, style=solid];
m31_139 -> m31_140  [key=0, style=solid];
m31_145 -> m31_146  [key=0, style=solid];
m31_145 -> m31_150  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m31_152 -> m31_153  [key=0, style=solid];
m31_152 -> m31_156  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m31_158 -> m31_159  [key=0, style=solid];
m31_162 -> m31_163  [key=0, style=solid];
m31_166 -> m31_167  [key=0, style=solid];
m31_170 -> m31_171  [key=0, style=solid];
m31_32 -> m31_33  [key=0, style=solid];
m31_34 -> m31_32  [key=0, style=bold, color=blue];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_39  [key=2, style=dotted];
m31_38 -> m31_36  [key=0, style=bold, color=blue];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_43  [key=2, style=dotted];
m31_42 -> m31_40  [key=0, style=bold, color=blue];
m31_45 -> m31_46  [key=0, style=solid];
m31_45 -> m31_47  [key=2, style=dotted];
m31_46 -> m31_44  [key=0, style=bold, color=blue];
m31_49 -> m31_50  [key=0, style=solid];
m31_49 -> m31_51  [key=2, style=dotted];
m31_50 -> m31_48  [key=0, style=bold, color=blue];
m31_53 -> m31_54  [key=0, style=solid];
m31_53 -> m31_55  [key=2, style=dotted];
m31_54 -> m31_52  [key=0, style=bold, color=blue];
m31_57 -> m31_58  [key=0, style=solid, color=red];
m31_57 -> m31_59  [key=2, style=dotted, color=red];
m31_57 -> m31_61  [key=1, style=dashed, color=red, label=string];
m31_58 -> m31_56  [key=0, style=bold, color=blue];
m31_61 -> m31_62  [key=0, style=solid, color=red];
m31_61 -> m31_63  [key=2, style=dotted, color=red];
m31_60 -> m31_61  [key=0, style=solid, color=red];
m31_62 -> m31_60  [key=0, style=bold, color=blue];
m31_62 -> m31_75  [key=0, style=bold, color=green];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_59  [key=2, style=dotted];
m31_65 -> m31_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_66 -> m31_64  [key=0, style=bold, color=blue];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_70  [key=2, style=dotted];
m31_67 -> m31_68  [key=0, style=solid];
m31_69 -> m31_67  [key=0, style=bold, color=blue];
m31_72 -> m31_73  [key=0, style=solid];
m31_72 -> m31_74  [key=2, style=dotted];
m31_73 -> m31_71  [key=0, style=bold, color=blue];
m31_76 -> m31_77  [key=0, style=solid, color=red];
m31_76 -> m31_59  [key=2, style=dotted, color=red];
m31_76 -> m31_79  [key=1, style=dashed, color=red, label=string];
m31_77 -> m31_75  [key=0, style=bold, color=blue];
m31_77 -> m31_60  [key=0, style=bold, color=green];
m31_79 -> m31_80  [key=0, style=solid, color=red];
m31_79 -> m31_81  [key=2, style=dotted, color=red];
m31_78 -> m31_79  [key=0, style=solid, color=red];
m31_80 -> m31_78  [key=0, style=bold, color=blue];
m31_83 -> m31_84  [key=0, style=solid];
m31_83 -> m31_59  [key=2, style=dotted];
m31_83 -> m31_86  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_84 -> m31_82  [key=0, style=bold, color=blue];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_88  [key=2, style=dotted];
m31_85 -> m31_86  [key=0, style=solid];
m31_87 -> m31_85  [key=0, style=bold, color=blue];
m31_90 -> m31_91  [key=0, style=solid];
m31_90 -> m31_92  [key=2, style=dotted];
m31_91 -> m31_89  [key=0, style=bold, color=blue];
m31_94 -> m31_95  [key=0, style=solid];
m31_94 -> m31_59  [key=2, style=dotted];
m31_94 -> m31_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_95 -> m31_93  [key=0, style=bold, color=blue];
m31_97 -> m31_98  [key=0, style=solid];
m31_97 -> m31_88  [key=2, style=dotted];
m31_96 -> m31_97  [key=0, style=solid];
m31_98 -> m31_96  [key=0, style=bold, color=blue];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_59  [key=2, style=dotted];
m31_100 -> m31_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_101 -> m31_99  [key=0, style=bold, color=blue];
m31_103 -> m31_104  [key=0, style=solid];
m31_103 -> m31_81  [key=2, style=dotted];
m31_102 -> m31_103  [key=0, style=solid];
m31_104 -> m31_102  [key=0, style=bold, color=blue];
m31_106 -> m31_107  [key=0, style=solid];
m31_106 -> m31_108  [key=2, style=dotted];
m31_107 -> m31_105  [key=0, style=bold, color=blue];
m31_110 -> m31_111  [key=0, style=solid];
m31_110 -> m31_112  [key=2, style=dotted];
m31_111 -> m31_109  [key=0, style=bold, color=blue];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_59  [key=2, style=dotted];
m31_114 -> m31_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_115 -> m31_113  [key=0, style=bold, color=blue];
m31_117 -> m31_118  [key=0, style=solid];
m31_117 -> m31_88  [key=2, style=dotted];
m31_116 -> m31_117  [key=0, style=solid];
m31_118 -> m31_116  [key=0, style=bold, color=blue];
m31_120 -> m31_121  [key=0, style=solid];
m31_120 -> m31_122  [key=2, style=dotted];
m31_121 -> m31_119  [key=0, style=bold, color=blue];
m31_124 -> m31_125  [key=0, style=solid];
m31_124 -> m31_59  [key=2, style=dotted];
m31_124 -> m31_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_125 -> m31_123  [key=0, style=bold, color=blue];
m31_127 -> m31_128  [key=0, style=solid];
m31_127 -> m31_88  [key=2, style=dotted];
m31_126 -> m31_127  [key=0, style=solid];
m31_128 -> m31_126  [key=0, style=bold, color=blue];
m31_130 -> m31_131  [key=0, style=solid];
m31_130 -> m31_59  [key=2, style=dotted];
m31_130 -> m31_133  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_131 -> m31_129  [key=0, style=bold, color=blue];
m31_133 -> m31_134  [key=0, style=solid];
m31_133 -> m31_81  [key=2, style=dotted];
m31_132 -> m31_133  [key=0, style=solid];
m31_134 -> m31_132  [key=0, style=bold, color=blue];
m31_136 -> m31_137  [key=0, style=solid];
m31_136 -> m31_138  [key=2, style=dotted];
m31_137 -> m31_135  [key=0, style=bold, color=blue];
m31_140 -> m31_141  [key=0, style=solid];
m31_140 -> m31_59  [key=2, style=dotted];
m31_140 -> m31_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_141 -> m31_139  [key=0, style=bold, color=blue];
m31_143 -> m31_144  [key=0, style=solid];
m31_143 -> m31_88  [key=2, style=dotted];
m31_142 -> m31_143  [key=0, style=solid];
m31_144 -> m31_142  [key=0, style=bold, color=blue];
m31_146 -> m31_147  [key=0, style=solid];
m31_146 -> m31_148  [key=2, style=dotted];
m31_150 -> m31_151  [key=0, style=solid];
m31_150 -> m31_70  [key=2, style=dotted];
m31_147 -> m31_145  [key=0, style=bold, color=blue];
m31_149 -> m31_150  [key=0, style=solid];
m31_151 -> m31_149  [key=0, style=bold, color=blue];
m31_153 -> m31_154  [key=0, style=solid];
m31_153 -> m31_148  [key=2, style=dotted];
m31_156 -> m31_157  [key=0, style=solid];
m31_156 -> m31_63  [key=2, style=dotted];
m31_154 -> m31_152  [key=0, style=bold, color=blue];
m31_157 -> m31_155  [key=0, style=bold, color=blue];
m31_159 -> m31_160  [key=0, style=solid];
m31_159 -> m31_161  [key=2, style=dotted];
m31_160 -> m31_158  [key=0, style=bold, color=blue];
m31_163 -> m31_164  [key=0, style=solid];
m31_163 -> m31_165  [key=2, style=dotted];
m31_164 -> m31_162  [key=0, style=bold, color=blue];
m31_167 -> m31_168  [key=0, style=solid];
m31_167 -> m31_169  [key=2, style=dotted];
m31_168 -> m31_166  [key=0, style=bold, color=blue];
m31_171 -> m31_172  [key=0, style=solid];
m31_171 -> m31_173  [key=2, style=dotted];
m31_172 -> m31_170  [key=0, style=bold, color=blue];
m31_182 -> m31_183  [key=0, style=solid];
m31_182 -> m31_185  [key=1, style=dashed, color=darkseagreen4, label=HttpContext];
m31_182 -> m31_186  [key=1, style=dashed, color=darkseagreen4, label=HttpContext];
m31_182 -> m31_187  [key=1, style=dashed, color=darkseagreen4, label=HttpContext];
m31_182 -> m31_188  [key=1, style=dashed, color=darkseagreen4, label=HttpContext];
m31_182 -> m31_192  [key=1, style=dashed, color=darkseagreen4, label=HttpContext];
m31_182 -> m31_190  [key=3, color=darkorchid, style=bold, label="method methodReturn IHttpHandler GetHandler"];
m31_183 -> m31_184  [key=0, style=solid];
m31_183 -> m31_185  [key=0, style=solid];
m31_185 -> m31_186  [key=0, style=solid];
m31_185 -> m31_187  [key=0, style=solid];
m31_186 -> m31_194  [key=0, style=solid];
m31_186 -> m31_196  [key=2, style=dotted];
m31_187 -> m31_188  [key=0, style=solid];
m31_187 -> m31_197  [key=2, style=dotted];
m31_188 -> m31_189  [key=0, style=solid];
m31_192 -> m31_194  [key=0, style=solid];
m31_192 -> m31_196  [key=2, style=dotted];
m31_184 -> m31_194  [key=0, style=solid];
m31_184 -> n11  [key=2, style=dotted];
m31_189 -> m31_190  [key=0, style=solid];
m31_189 -> m31_198  [key=2, style=dotted];
m31_190 -> m31_191  [key=0, style=solid];
m31_190 -> m31_199  [key=2, style=dotted];
m31_190 -> m31_193  [key=1, style=dashed, color=darkseagreen4, label=handler];
m31_191 -> m31_192  [key=0, style=solid];
m31_191 -> m31_193  [key=0, style=solid];
m31_193 -> m31_194  [key=0, style=solid];
m31_194 -> m31_182  [key=0, style=bold, color=blue];
m31_224 -> m31_225  [key=0, style=solid];
m31_225 -> m31_226  [key=0, style=solid];
m31_225 -> m31_220  [key=2, style=dotted];
m31_225 -> m31_223  [key=2, style=dotted];
m31_226 -> m31_224  [key=0, style=bold, color=blue];
m31_174 -> m31_175  [key=0, style=solid];
m31_175 -> m31_176  [key=0, style=solid];
m31_175 -> m31_177  [key=2, style=dotted];
m31_175 -> m31_178  [key=2, style=dotted];
m31_176 -> m31_174  [key=0, style=bold, color=blue];
m31_227 -> m31_228  [key=0, style=solid];
m31_228 -> m31_227  [key=0, style=bold, color=blue];
m31_229 -> m31_150  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m31_230 -> m31_156  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m31_231 -> m31_190  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.HangFirePageFactory"];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_0  [key=0, style=bold, color=blue];
m33_82 -> m33_79  [key=0, style=bold, color=blue];
m33_164 -> m33_165  [key=0, style=solid];
m33_165 -> m33_166  [key=0, style=solid, color=red];
m33_165 -> m33_92  [key=2, style=dotted];
m33_166 -> m33_167  [key=0, style=solid, color=red];
m33_166 -> m33_93  [key=2, style=dotted, color=red];
m33_167 -> m33_168  [key=0, style=solid];
m33_167 -> m33_94  [key=2, style=dotted];
m33_167 -> m33_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_168 -> m33_164  [key=0, style=bold, color=blue];
m33_90 -> m33_91  [key=0, style=solid];
m33_90 -> m33_94  [key=2, style=dotted];
m33_90 -> m33_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_19 -> m33_20  [key=0, style=solid, color=green];
m33_19 -> m33_60  [key=1, style=dashed, color=green, label=index];
m33_79 -> m33_80  [key=0, style=solid, color=red];
m33_80 -> m33_81  [key=0, style=solid, color=red];
m33_80 -> d39  [key=2, style=dotted, color=red];
m33_80 -> m33_83  [key=1, style=dashed, color=red, label="lambda expression"];
m33_81 -> m33_82  [key=0, style=solid];
m33_81 -> m33_60  [key=2, style=dotted];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_74  [key=2, style=dotted];
m33_60 -> m33_60  [key=1, style=dashed, color=darkseagreen4, label=index];
m33_60 -> m33_61  [key=0, style=solid];
m33_60 -> m33_82  [key=2, style=dotted];
m33_245 -> m33_246  [key=0, style=solid];
m33_246 -> m33_247  [key=0, style=solid];
m33_246 -> m33_252  [key=2, style=dotted];
m33_246 -> m33_250  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_246 -> m33_258  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_246 -> m33_261  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_247 -> m33_248  [key=0, style=solid];
m33_247 -> m33_21  [key=2, style=dotted];
m33_247 -> m33_253  [key=2, style=dotted];
m33_247 -> m33_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_250 -> m33_251  [key=0, style=solid];
m33_250 -> m33_94  [key=2, style=dotted];
m33_250 -> m33_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_248 -> m33_249  [key=0, style=solid, color=red];
m33_248 -> m33_92  [key=2, style=dotted];
m33_249 -> m33_250  [key=0, style=solid, color=red];
m33_249 -> m33_93  [key=2, style=dotted, color=red];
m33_251 -> m33_245  [key=0, style=bold, color=blue];
m33_234 -> m33_235  [key=0, style=solid];
m33_235 -> m33_236  [key=0, style=solid, color=red];
m33_235 -> m33_92  [key=2, style=dotted];
m33_236 -> m33_237  [key=0, style=solid, color=red];
m33_236 -> m33_93  [key=2, style=dotted, color=red];
m33_237 -> m33_238  [key=0, style=solid];
m33_237 -> m33_94  [key=2, style=dotted];
m33_237 -> m33_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_238 -> m33_234  [key=0, style=bold, color=blue];
m33_27 -> m33_74  [key=2, style=dotted];
m33_27 -> m33_28  [key=0, style=solid];
m33_0 -> m33_1  [key=0, style=solid, color=red];
m33_2 -> m33_3  [key=0, style=solid, color=red];
m33_2 -> m33_75  [key=2, style=dotted, color=green];
m33_2 -> m33_17  [key=2, style=dotted, color=red];
m33_1 -> m33_2  [key=0, style=solid, color=red];
m33_1 -> m33_74  [key=2, style=dotted];
m33_1 -> m33_16  [key=2, style=dotted, color=red];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_18  [key=2, style=dotted];
m33_7 -> m33_8  [key=0, style=solid, color=green];
m33_7 -> m33_78  [key=2, style=dotted, color=green];
m33_7 -> m33_79  [key=2, style=dotted, color=green];
m33_7 -> m33_80  [key=2, style=dotted, color=green];
m33_7 -> m33_10  [key=1, style=dashed, color=green, label=pager];
m33_7 -> m33_17  [key=1, style=dashed, color=green, label=pager];
m33_7 -> m33_72  [key=1, style=dashed, color=green, label=pager];
m33_7 -> m33_23  [key=2, style=dotted];
m33_4 -> m33_7  [key=1, style=dashed, color=green, label=from];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_76  [key=2, style=dotted];
m33_4 -> m33_19  [key=2, style=dotted];
m33_5 -> m33_7  [key=1, style=dashed, color=green, label=perPage];
m33_5 -> m33_6  [key=0, style=solid, color=red];
m33_5 -> m33_76  [key=2, style=dotted];
m33_5 -> m33_20  [key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid, color=red];
m33_6 -> m33_77  [key=2, style=dotted];
m33_6 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m33_6 -> m33_21  [key=2, style=dotted, color=red];
m33_6 -> m33_22  [key=2, style=dotted, color=red];
m33_6 -> m33_28  [key=1, style=dashed, color=red, label="lambda expression"];
m33_8 -> m33_9  [key=0, style=solid, color=red];
m33_8 -> m33_81  [key=2, style=dotted];
m33_8 -> m33_20  [key=1, style=dashed, color=darkseagreen4, label=failedJobs];
m33_8 -> m33_21  [key=2, style=dotted];
m33_8 -> m33_22  [key=2, style=dotted];
m33_8 -> m33_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_12  [key=0, style=solid];
m33_10 -> m33_21  [key=2, style=dotted];
m33_10 -> m33_24  [key=2, style=dotted];
m33_10 -> m33_25  [key=2, style=dotted];
m33_10 -> m33_22  [key=2, style=dotted];
m33_10 -> m33_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_10 -> m33_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_17 -> m33_18  [key=0, style=solid, color=green];
m33_17 -> m33_83  [key=2, style=dotted];
m33_17 -> m33_84  [key=2, style=dotted];
m33_17 -> m33_85  [key=2, style=dotted];
m33_72 -> m33_73  [key=0, style=solid, color=red];
m33_72 -> m33_91  [key=2, style=dotted];
m33_72 -> m33_84  [key=2, style=dotted];
m33_72 -> m33_85  [key=2, style=dotted];
m33_14 -> m33_15  [key=0, style=solid, color=red];
m33_14 -> m33_74  [key=2, style=dotted, color=green];
m33_14 -> m33_27  [key=2, style=dotted, color=red];
m33_13 -> m33_14  [key=0, style=solid, color=red];
m33_13 -> m33_80  [key=2, style=dotted];
m33_13 -> m33_82  [key=2, style=dotted];
m33_13 -> m33_21  [key=2, style=dotted];
m33_13 -> m33_22  [key=2, style=dotted];
m33_13 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_15 -> m33_80  [key=2, style=dotted];
m33_15 -> m33_16  [key=0, style=solid];
m33_15 -> m33_82  [key=2, style=dotted];
m33_15 -> m33_0  [key=0, style=bold, color=blue];
m33_18 -> m33_19  [key=0, style=solid, color=green];
m33_18 -> m33_74  [key=2, style=dotted, color=green];
m33_20 -> m33_21  [key=0, style=solid];
m33_20 -> m33_71  [key=0, style=solid];
m33_20 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_26 -> m33_26  [key=1, style=dashed, color=green, label=job];
m33_26 -> m33_27  [key=0, style=solid, color=green];
m33_26 -> m33_82  [key=2, style=dotted, color=green];
m33_26 -> m33_28  [key=1, style=dashed, color=green, label=job];
m33_24 -> m33_26  [key=1, style=dashed, color=green, label=job];
m33_24 -> m33_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_82  [key=2, style=dotted];
m33_25 -> m33_26  [key=0, style=solid, color=green];
m33_25 -> m33_74  [key=2, style=dotted];
m33_28 -> m33_29  [key=0, style=solid, color=red];
m33_28 -> m33_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_28 -> m33_32  [key=0, style=solid];
m33_28 -> m33_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_28 -> m33_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_29 -> m33_30  [key=0, style=solid, color=red];
m33_29 -> m33_74  [key=2, style=dotted, color=green];
m33_29 -> m33_31  [key=2, style=dotted, color=red];
m33_30 -> m33_82  [key=2, style=dotted];
m33_30 -> m33_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_30 -> m33_31  [key=0, style=solid];
m33_30 -> m33_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_30 -> m33_28  [key=0, style=bold, color=blue];
m33_38 -> m33_39  [key=0, style=solid, color=green];
m33_38 -> m33_74  [key=2, style=dotted, color=green];
m33_37 -> m33_38  [key=0, style=solid, color=green];
m33_37 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_37 -> m33_86  [key=2, style=dotted];
m33_37 -> m33_85  [key=2, style=dotted];
m33_37 -> m33_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_37 -> m33_35  [key=0, style=bold, color=blue];
m33_39 -> m33_41  [key=0, style=solid, color=green];
m33_39 -> m33_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_39 -> m33_40  [key=0, style=solid];
m33_39 -> m33_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_41 -> m33_42  [key=0, style=solid, color=green];
m33_41 -> m33_74  [key=2, style=dotted, color=green];
m33_41 -> m33_43  [key=2, style=dotted];
m33_40 -> m33_41  [key=0, style=solid, color=green];
m33_40 -> m33_74  [key=2, style=dotted];
m33_42 -> m33_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_42 -> m33_43  [key=0, style=solid];
m33_42 -> m33_48  [key=0, style=solid];
m33_42 -> m33_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_42 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_42 -> m33_40  [key=0, style=bold, color=blue];
m33_9 -> m33_10  [key=0, style=solid, color=red];
m33_9 -> m33_74  [key=2, style=dotted];
m33_9 -> m33_21  [key=2, style=dotted, color=red];
m33_9 -> m33_22  [key=2, style=dotted, color=red];
m33_9 -> m33_35  [key=1, style=dashed, color=red, label="lambda expression"];
m33_11 -> m33_74  [key=2, style=dotted];
m33_11 -> m33_73  [key=0, style=solid];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_26  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_74  [key=2, style=dotted];
m33_12 -> m33_21  [key=2, style=dotted];
m33_12 -> m33_22  [key=2, style=dotted];
m33_12 -> m33_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_21 -> m33_74  [key=2, style=dotted];
m33_21 -> m33_22  [key=0, style=solid];
m33_22 -> m33_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_22 -> m33_82  [key=2, style=dotted];
m33_22 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_22 -> m33_23  [key=0, style=solid];
m33_23 -> m33_74  [key=2, style=dotted];
m33_23 -> m33_24  [key=0, style=solid];
m33_31 -> m33_74  [key=2, style=dotted];
m33_31 -> m33_32  [key=0, style=solid];
m33_32 -> m33_74  [key=2, style=dotted];
m33_32 -> m33_33  [key=0, style=solid];
m33_33 -> m33_82  [key=2, style=dotted];
m33_33 -> m33_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_34 -> m33_74  [key=2, style=dotted];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_32  [key=0, style=bold, color=blue];
m33_35 -> m33_80  [key=2, style=dotted];
m33_35 -> m33_82  [key=2, style=dotted];
m33_35 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_35 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_35 -> m33_36  [key=0, style=solid, color=red];
m33_36 -> m33_74  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid, color=red];
m33_36 -> d39  [key=2, style=dotted, color=red];
m33_36 -> m33_39  [key=2, style=dotted, color=red];
m33_43 -> m33_74  [key=2, style=dotted];
m33_43 -> m33_44  [key=0, style=solid];
m33_44 -> m33_82  [key=2, style=dotted];
m33_44 -> m33_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_44 -> m33_45  [key=0, style=solid];
m33_44 -> m33_87  [key=2, style=dotted];
m33_44 -> m33_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_45 -> m33_74  [key=2, style=dotted];
m33_45 -> m33_46  [key=0, style=solid];
m33_45 -> m33_47  [key=2, style=dotted];
m33_46 -> m33_82  [key=2, style=dotted];
m33_46 -> m33_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_46 -> m33_47  [key=0, style=solid];
m33_46 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_46 -> m33_44  [key=0, style=bold, color=blue];
m33_47 -> m33_74  [key=2, style=dotted];
m33_47 -> m33_48  [key=0, style=solid];
m33_47 -> m33_297  [key=0, style=solid];
m33_48 -> m33_74  [key=2, style=dotted];
m33_48 -> m33_49  [key=0, style=solid];
m33_49 -> m33_80  [key=2, style=dotted];
m33_49 -> m33_82  [key=2, style=dotted];
m33_49 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_49 -> m33_50  [key=0, style=solid];
m33_49 -> m33_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_50 -> m33_74  [key=2, style=dotted];
m33_50 -> m33_51  [key=0, style=solid];
m33_50 -> m33_48  [key=0, style=bold, color=blue];
m33_51 -> m33_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_88  [key=2, style=dotted];
m33_51 -> m33_85  [key=2, style=dotted];
m33_51 -> m33_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_52 -> m33_74  [key=2, style=dotted];
m33_52 -> m33_53  [key=0, style=solid];
m33_54 -> m33_74  [key=2, style=dotted];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_52  [key=0, style=bold, color=blue];
m33_55 -> m33_82  [key=2, style=dotted];
m33_55 -> m33_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_56 -> m33_74  [key=2, style=dotted];
m33_56 -> m33_57  [key=0, style=solid, color=red];
m33_57 -> m33_74  [key=2, style=dotted];
m33_57 -> m33_58  [key=0, style=solid, color=red];
m33_57 -> d39  [key=2, style=dotted, color=red];
m33_57 -> m33_61  [key=1, style=dashed, color=red, label="lambda expression"];
m33_59 -> m33_74  [key=2, style=dotted];
m33_59 -> m33_60  [key=0, style=solid];
m33_59 -> m33_56  [key=0, style=bold, color=blue];
m33_61 -> m33_74  [key=2, style=dotted];
m33_61 -> m33_62  [key=0, style=solid, color=red];
m33_62 -> m33_82  [key=2, style=dotted];
m33_62 -> m33_62  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_62 -> m33_63  [key=0, style=solid, color=red];
m33_62 -> m33_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_63 -> m33_74  [key=2, style=dotted];
m33_63 -> m33_64  [key=0, style=solid];
m33_63 -> m33_61  [key=0, style=bold, color=blue];
m33_64 -> m33_82  [key=2, style=dotted];
m33_64 -> m33_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_64 -> m33_65  [key=0, style=solid];
m33_64 -> m33_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_65 -> m33_74  [key=2, style=dotted];
m33_65 -> m33_66  [key=0, style=solid, color=red];
m33_67 -> m33_74  [key=2, style=dotted];
m33_67 -> m33_68  [key=0, style=solid, color=red];
m33_67 -> m33_60  [key=2, style=dotted, color=red];
m33_68 -> m33_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_68 -> m33_69  [key=0, style=solid];
m33_68 -> m33_90  [key=2, style=dotted];
m33_68 -> m33_85  [key=2, style=dotted];
m33_68 -> m33_65  [key=0, style=bold, color=blue];
m33_69 -> m33_74  [key=2, style=dotted];
m33_69 -> m33_70  [key=0, style=solid, color=red];
m33_70 -> m33_74  [key=2, style=dotted];
m33_70 -> m33_20  [key=0, style=solid];
m33_70 -> m33_71  [key=0, style=solid, color=red];
m33_70 -> m33_64  [key=2, style=dotted, color=red];
m33_71 -> m33_72  [key=0, style=solid];
m33_71 -> m33_74  [key=2, style=dotted];
m33_71 -> m33_69  [key=0, style=bold, color=blue];
m33_58 -> m33_20  [key=0, style=solid];
m33_58 -> m33_59  [key=0, style=solid];
m33_58 -> m33_62  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_58 -> m33_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_58 -> m33_60  [key=2, style=dotted];
m33_53 -> m33_54  [key=0, style=solid];
m33_53 -> m33_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_53 -> m33_57  [key=0, style=solid];
m33_53 -> m33_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_53 -> m33_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_53 -> m33_89  [key=2, style=dotted];
m33_53 -> d39  [key=2, style=dotted];
m33_66 -> m33_67  [key=0, style=solid, color=red];
m33_66 -> m33_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_66 -> m33_70  [key=0, style=solid];
m33_66 -> m33_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_66 -> m33_89  [key=2, style=dotted];
m33_66 -> d39  [key=2, style=dotted, color=red];
m33_66 -> m33_69  [key=1, style=dashed, color=red, label="lambda expression"];
m33_73 -> m33_0  [key=0, style=bold, color=blue];
m33_73 -> m33_74  [key=0, style=solid, color=red];
m33_73 -> d39  [key=2, style=dotted, color=red];
m33_73 -> m33_76  [key=1, style=dashed, color=red, label="lambda expression"];
m33_175 -> m33_176  [key=0, style=solid];
m33_176 -> m33_177  [key=0, style=solid];
m33_176 -> m33_21  [key=2, style=dotted];
m33_176 -> m33_22  [key=2, style=dotted];
m33_176 -> m33_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_177 -> m33_178  [key=0, style=solid, color=red];
m33_177 -> m33_92  [key=2, style=dotted];
m33_178 -> m33_179  [key=0, style=solid, color=red];
m33_178 -> m33_93  [key=2, style=dotted, color=red];
m33_179 -> m33_180  [key=0, style=solid];
m33_179 -> m33_94  [key=2, style=dotted];
m33_179 -> m33_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_180 -> m33_175  [key=0, style=bold, color=blue];
m33_187 -> m33_188  [key=0, style=solid];
m33_188 -> m33_189  [key=0, style=solid, color=red];
m33_188 -> m33_92  [key=2, style=dotted];
m33_189 -> m33_190  [key=0, style=solid, color=red];
m33_189 -> m33_93  [key=2, style=dotted, color=red];
m33_190 -> m33_191  [key=0, style=solid];
m33_190 -> m33_94  [key=2, style=dotted];
m33_190 -> m33_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_191 -> m33_187  [key=0, style=bold, color=blue];
m33_78 -> m33_76  [key=0, style=bold, color=blue];
m33_76 -> m33_77  [key=0, style=solid, color=red];
m33_74 -> m33_75  [key=0, style=solid];
m33_74 -> m33_60  [key=2, style=dotted];
m33_115 -> m33_116  [key=0, style=solid];
m33_116 -> m33_117  [key=0, style=solid];
m33_116 -> m33_21  [key=2, style=dotted];
m33_116 -> d39  [key=2, style=dotted];
m33_116 -> m33_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_117 -> m33_118  [key=0, style=solid, color=red];
m33_117 -> m33_92  [key=2, style=dotted];
m33_117 -> m33_126  [key=1, style=dashed, color=red, label=worker];
m33_118 -> m33_119  [key=0, style=solid, color=red];
m33_118 -> d39  [key=2, style=dotted, color=red];
m33_118 -> m33_125  [key=1, style=dashed, color=red, label="lambda expression"];
m33_119 -> m33_120  [key=0, style=solid];
m33_119 -> m33_94  [key=2, style=dotted];
m33_119 -> m33_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_120 -> m33_121  [key=0, style=solid];
m33_120 -> m33_94  [key=2, style=dotted];
m33_120 -> m33_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_121 -> m33_115  [key=0, style=bold, color=blue];
m33_214 -> m33_215  [key=0, style=solid];
m33_215 -> m33_216  [key=0, style=solid];
m33_215 -> m33_21  [key=2, style=dotted];
m33_215 -> d39  [key=2, style=dotted];
m33_215 -> m33_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_216 -> m33_217  [key=0, style=solid, color=red];
m33_216 -> m33_92  [key=2, style=dotted];
m33_216 -> m33_226  [key=1, style=dashed, color=red, label=worker];
m33_217 -> m33_218  [key=0, style=solid, color=red];
m33_217 -> m33_221  [key=2, style=dotted, color=red];
m33_217 -> m33_225  [key=1, style=dashed, color=red, label="lambda expression"];
m33_218 -> m33_219  [key=0, style=solid];
m33_218 -> m33_94  [key=2, style=dotted];
m33_218 -> m33_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_219 -> m33_220  [key=0, style=solid];
m33_219 -> m33_94  [key=2, style=dotted];
m33_219 -> m33_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_220 -> m33_214  [key=0, style=bold, color=blue];
m33_92 -> m33_295  [key=0, style=solid, color=red];
m33_92 -> m33_2  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_7  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_92 -> m33_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m33_295 -> m33_296  [key=0, style=solid, color=red];
m33_295 -> m33_64  [key=2, style=dotted, color=red];
m33_296 -> m33_92  [key=0, style=bold, color=blue];
m33_264 -> m33_265  [key=0, style=solid];
m33_265 -> m33_266  [key=0, style=solid];
m33_265 -> m33_252  [key=2, style=dotted];
m33_265 -> m33_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_265 -> m33_276  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_265 -> m33_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_266 -> m33_267  [key=0, style=solid];
m33_266 -> m33_21  [key=2, style=dotted];
m33_266 -> m33_271  [key=2, style=dotted];
m33_266 -> m33_253  [key=2, style=dotted];
m33_266 -> m33_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_269 -> m33_270  [key=0, style=solid];
m33_269 -> m33_94  [key=2, style=dotted];
m33_269 -> m33_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_267 -> m33_268  [key=0, style=solid, color=red];
m33_267 -> m33_92  [key=2, style=dotted];
m33_268 -> m33_269  [key=0, style=solid, color=red];
m33_268 -> m33_93  [key=2, style=dotted, color=red];
m33_270 -> m33_264  [key=0, style=bold, color=blue];
m33_84 -> m33_85  [key=0, style=solid, color=red];
m33_84 -> m33_64  [key=2, style=dotted, color=red];
m33_89 -> m33_90  [key=0, style=solid, color=red];
m33_89 -> m33_94  [key=2, style=dotted, color=red];
m33_89 -> m33_95  [key=1, style=dashed, color=red, label="lambda expression"];
m33_86 -> m33_87  [key=0, style=solid];
m33_87 -> m33_88  [key=0, style=solid, color=red];
m33_87 -> m33_92  [key=2, style=dotted];
m33_88 -> m33_89  [key=0, style=solid, color=red];
m33_88 -> m33_93  [key=2, style=dotted, color=red];
m33_91 -> m33_86  [key=0, style=bold, color=blue];
m33_281 -> m33_282  [key=0, style=solid];
m33_282 -> m33_283  [key=0, style=solid];
m33_282 -> m33_21  [key=2, style=dotted];
m33_282 -> m33_24  [key=2, style=dotted];
m33_282 -> m33_287  [key=2, style=dotted];
m33_282 -> m33_288  [key=2, style=dotted];
m33_282 -> m33_22  [key=2, style=dotted];
m33_282 -> m33_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_283 -> m33_284  [key=0, style=solid, color=red];
m33_283 -> m33_92  [key=2, style=dotted];
m33_284 -> m33_285  [key=0, style=solid, color=red];
m33_284 -> m33_93  [key=2, style=dotted, color=red];
m33_285 -> m33_286  [key=0, style=solid];
m33_285 -> m33_94  [key=2, style=dotted];
m33_285 -> m33_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_286 -> m33_281  [key=0, style=bold, color=blue];
m33_83 -> m33_84  [key=0, style=solid, color=red];
m33_292 -> m33_293  [key=0, style=solid];
m33_77 -> m33_78  [key=0, style=solid, color=red];
m33_77 -> m33_64  [key=2, style=dotted, color=red];
m33_85 -> m33_83  [key=0, style=bold, color=blue];
m33_95 -> m33_96  [key=0, style=solid, color=red];
m33_98 -> m33_99  [key=0, style=solid];
m33_96 -> m33_97  [key=0, style=solid, color=red];
m33_96 -> m33_31  [key=2, style=dotted, color=red];
m33_97 -> m33_95  [key=0, style=bold, color=blue];
m33_99 -> m33_100  [key=0, style=solid];
m33_99 -> m33_101  [key=2, style=dotted];
m33_100 -> m33_98  [key=0, style=bold, color=blue];
m33_108 -> m33_109  [key=0, style=solid, color=red];
m33_111 -> m33_112  [key=0, style=solid];
m33_109 -> m33_110  [key=0, style=solid, color=red];
m33_109 -> m33_39  [key=2, style=dotted, color=red];
m33_110 -> m33_108  [key=0, style=bold, color=blue];
m33_112 -> m33_113  [key=0, style=solid];
m33_112 -> m33_114  [key=2, style=dotted];
m33_113 -> m33_111  [key=0, style=bold, color=blue];
m33_122 -> m33_123  [key=0, style=solid];
m33_126 -> m33_127  [key=0, style=solid, color=red];
m33_126 -> m33_93  [key=2, style=dotted, color=red];
m33_125 -> m33_126  [key=0, style=solid, color=red];
m33_128 -> m33_129  [key=0, style=solid];
m33_131 -> m33_132  [key=0, style=solid];
m33_123 -> m33_124  [key=0, style=solid];
m33_123 -> d39  [key=2, style=dotted];
m33_123 -> m33_55  [key=2, style=dotted];
m33_124 -> m33_122  [key=0, style=bold, color=blue];
m33_127 -> m33_125  [key=0, style=bold, color=blue];
m33_129 -> m33_130  [key=0, style=solid];
m33_129 -> m33_114  [key=2, style=dotted];
m33_130 -> m33_128  [key=0, style=bold, color=blue];
m33_132 -> m33_133  [key=0, style=solid];
m33_132 -> m33_134  [key=2, style=dotted];
m33_133 -> m33_131  [key=0, style=bold, color=blue];
m33_143 -> m33_144  [key=0, style=solid];
m33_146 -> m33_147  [key=0, style=solid];
m33_150 -> m33_151  [key=0, style=solid];
m33_144 -> m33_145  [key=0, style=solid];
m33_144 -> d39  [key=2, style=dotted];
m33_144 -> m33_55  [key=2, style=dotted];
m33_145 -> m33_143  [key=0, style=bold, color=blue];
m33_147 -> m33_148  [key=0, style=solid];
m33_147 -> d39  [key=2, style=dotted];
m33_147 -> m33_149  [key=2, style=dotted];
m33_148 -> m33_146  [key=0, style=bold, color=blue];
m33_151 -> m33_152  [key=0, style=solid];
m33_151 -> d39  [key=2, style=dotted];
m33_151 -> m33_55  [key=2, style=dotted];
m33_152 -> m33_150  [key=0, style=bold, color=blue];
m33_158 -> m33_159  [key=0, style=solid, color=red];
m33_159 -> m33_160  [key=0, style=solid, color=red];
m33_159 -> d39  [key=2, style=dotted, color=red];
m33_159 -> m33_55  [key=2, style=dotted, color=red];
m33_159 -> m33_161  [key=1, style=dashed, color=red, label="lambda expression"];
m33_160 -> m33_158  [key=0, style=bold, color=blue];
m33_161 -> m33_162  [key=0, style=solid, color=red];
m33_162 -> m33_163  [key=0, style=solid, color=red];
m33_163 -> m33_161  [key=0, style=bold, color=blue];
m33_169 -> m33_170  [key=0, style=solid];
m33_170 -> m33_171  [key=0, style=solid];
m33_170 -> d39  [key=2, style=dotted];
m33_170 -> m33_55  [key=2, style=dotted];
m33_170 -> m33_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_171 -> m33_169  [key=0, style=bold, color=blue];
m33_172 -> m33_173  [key=0, style=solid];
m33_173 -> m33_174  [key=0, style=solid];
m33_174 -> m33_172  [key=0, style=bold, color=blue];
m33_181 -> m33_182  [key=0, style=solid];
m33_184 -> m33_185  [key=0, style=solid];
m33_182 -> m33_183  [key=0, style=solid];
m33_182 -> d39  [key=2, style=dotted];
m33_182 -> m33_55  [key=2, style=dotted];
m33_183 -> m33_181  [key=0, style=bold, color=blue];
m33_185 -> m33_186  [key=0, style=solid];
m33_185 -> d39  [key=2, style=dotted];
m33_185 -> m33_149  [key=2, style=dotted];
m33_186 -> m33_184  [key=0, style=bold, color=blue];
m33_192 -> m33_193  [key=0, style=solid];
m33_193 -> m33_194  [key=0, style=solid];
m33_193 -> d39  [key=2, style=dotted];
m33_193 -> m33_149  [key=2, style=dotted];
m33_194 -> m33_192  [key=0, style=bold, color=blue];
m33_202 -> m33_203  [key=0, style=solid];
m33_206 -> m33_207  [key=0, style=solid, color=red];
m33_206 -> m33_93  [key=2, style=dotted, color=red];
m33_205 -> m33_206  [key=0, style=solid, color=red];
m33_208 -> m33_209  [key=0, style=solid];
m33_211 -> m33_212  [key=0, style=solid];
m33_203 -> m33_204  [key=0, style=solid];
m33_203 -> d39  [key=2, style=dotted];
m33_203 -> m33_149  [key=2, style=dotted];
m33_204 -> m33_202  [key=0, style=bold, color=blue];
m33_207 -> m33_205  [key=0, style=bold, color=blue];
m33_209 -> m33_210  [key=0, style=solid];
m33_209 -> d39  [key=2, style=dotted];
m33_209 -> m33_55  [key=2, style=dotted];
m33_210 -> m33_208  [key=0, style=bold, color=blue];
m33_212 -> m33_213  [key=0, style=solid];
m33_212 -> m33_134  [key=2, style=dotted];
m33_213 -> m33_211  [key=0, style=bold, color=blue];
m33_222 -> m33_223  [key=0, style=solid];
m33_226 -> m33_227  [key=0, style=solid, color=red];
m33_226 -> m33_93  [key=2, style=dotted, color=red];
m33_225 -> m33_226  [key=0, style=solid, color=red];
m33_228 -> m33_229  [key=0, style=solid];
m33_231 -> m33_232  [key=0, style=solid];
m33_223 -> m33_224  [key=0, style=solid];
m33_223 -> d39  [key=2, style=dotted];
m33_223 -> m33_149  [key=2, style=dotted];
m33_224 -> m33_222  [key=0, style=bold, color=blue];
m33_227 -> m33_225  [key=0, style=bold, color=blue];
m33_229 -> m33_230  [key=0, style=solid];
m33_229 -> m33_114  [key=2, style=dotted];
m33_230 -> m33_228  [key=0, style=bold, color=blue];
m33_232 -> m33_233  [key=0, style=solid];
m33_232 -> m33_134  [key=2, style=dotted];
m33_233 -> m33_231  [key=0, style=bold, color=blue];
m33_239 -> m33_240  [key=0, style=solid];
m33_240 -> m33_241  [key=0, style=solid];
m33_240 -> d39  [key=2, style=dotted];
m33_240 -> m33_55  [key=2, style=dotted];
m33_240 -> m33_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_241 -> m33_239  [key=0, style=bold, color=blue];
m33_242 -> m33_243  [key=0, style=solid];
m33_243 -> m33_244  [key=0, style=solid];
m33_244 -> m33_242  [key=0, style=bold, color=blue];
m33_258 -> m33_259  [key=0, style=solid];
m33_258 -> d39  [key=2, style=dotted];
m33_258 -> m33_55  [key=2, style=dotted];
m33_258 -> m33_260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_261 -> m33_262  [key=0, style=solid];
m33_261 -> m33_263  [key=2, style=dotted];
m33_254 -> m33_255  [key=0, style=solid];
m33_257 -> m33_258  [key=0, style=solid];
m33_255 -> m33_256  [key=0, style=solid];
m33_255 -> d39  [key=2, style=dotted];
m33_255 -> m33_149  [key=2, style=dotted];
m33_256 -> m33_254  [key=0, style=bold, color=blue];
m33_259 -> m33_257  [key=0, style=bold, color=blue];
m33_260 -> m33_261  [key=0, style=solid];
m33_262 -> m33_260  [key=0, style=bold, color=blue];
m33_276 -> m33_277  [key=0, style=solid];
m33_276 -> d39  [key=2, style=dotted];
m33_276 -> m33_55  [key=2, style=dotted];
m33_276 -> m33_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_279 -> m33_280  [key=0, style=solid];
m33_272 -> m33_273  [key=0, style=solid];
m33_275 -> m33_276  [key=0, style=solid];
m33_273 -> m33_274  [key=0, style=solid];
m33_273 -> d39  [key=2, style=dotted];
m33_273 -> m33_149  [key=2, style=dotted];
m33_274 -> m33_272  [key=0, style=bold, color=blue];
m33_277 -> m33_275  [key=0, style=bold, color=blue];
m33_278 -> m33_279  [key=0, style=solid];
m33_280 -> m33_278  [key=0, style=bold, color=blue];
m33_289 -> m33_290  [key=0, style=solid];
m33_290 -> m33_291  [key=0, style=solid];
m33_290 -> m33_43  [key=2, style=dotted];
m33_291 -> m33_289  [key=0, style=bold, color=blue];
m33_293 -> m33_294  [key=0, style=solid];
m33_293 -> d39  [key=2, style=dotted];
m33_293 -> m33_55  [key=2, style=dotted];
m33_294 -> m33_292  [key=0, style=bold, color=blue];
m33_153 -> m33_154  [key=0, style=solid];
m33_154 -> m33_155  [key=0, style=solid, color=red];
m33_154 -> m33_92  [key=2, style=dotted];
m33_155 -> m33_156  [key=0, style=solid, color=red];
m33_155 -> m33_93  [key=2, style=dotted, color=red];
m33_156 -> m33_157  [key=0, style=solid, color=red];
m33_156 -> m33_94  [key=2, style=dotted, color=red];
m33_156 -> m33_158  [key=1, style=dashed, color=red, label="lambda expression"];
m33_157 -> m33_153  [key=0, style=bold, color=blue];
m33_135 -> m33_136  [key=0, style=solid];
m33_136 -> m33_137  [key=0, style=solid];
m33_136 -> m33_21  [key=2, style=dotted];
m33_136 -> m33_142  [key=2, style=dotted];
m33_136 -> m33_22  [key=2, style=dotted];
m33_136 -> m33_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_137 -> m33_138  [key=0, style=solid];
m33_137 -> m33_21  [key=2, style=dotted];
m33_137 -> m33_142  [key=2, style=dotted];
m33_137 -> m33_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_138 -> m33_139  [key=0, style=solid];
m33_138 -> m33_21  [key=2, style=dotted];
m33_138 -> m33_142  [key=2, style=dotted];
m33_138 -> m33_22  [key=2, style=dotted];
m33_138 -> m33_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_139 -> m33_140  [key=0, style=solid, color=red];
m33_139 -> m33_92  [key=2, style=dotted];
m33_140 -> m33_141  [key=0, style=solid, color=red];
m33_140 -> m33_93  [key=2, style=dotted, color=red];
m33_141 -> m33_135  [key=0, style=bold, color=blue];
m33_102 -> m33_103  [key=0, style=solid];
m33_103 -> m33_104  [key=0, style=solid, color=red];
m33_103 -> m33_92  [key=2, style=dotted];
m33_104 -> m33_105  [key=0, style=solid, color=red];
m33_104 -> m33_93  [key=2, style=dotted, color=red];
m33_105 -> m33_106  [key=0, style=solid, color=red];
m33_105 -> m33_94  [key=2, style=dotted, color=red];
m33_105 -> m33_108  [key=1, style=dashed, color=red, label="lambda expression"];
m33_106 -> m33_107  [key=0, style=solid];
m33_106 -> m33_94  [key=2, style=dotted];
m33_106 -> m33_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_107 -> m33_102  [key=0, style=bold, color=blue];
m33_195 -> m33_196  [key=0, style=solid];
m33_196 -> m33_197  [key=0, style=solid];
m33_196 -> m33_21  [key=2, style=dotted];
m33_196 -> d39  [key=2, style=dotted];
m33_196 -> m33_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_197 -> m33_198  [key=0, style=solid, color=red];
m33_197 -> m33_92  [key=2, style=dotted];
m33_197 -> m33_206  [key=1, style=dashed, color=red, label=worker];
m33_198 -> m33_199  [key=0, style=solid, color=red];
m33_198 -> d39  [key=2, style=dotted, color=red];
m33_198 -> m33_205  [key=1, style=dashed, color=red, label="lambda expression"];
m33_199 -> m33_200  [key=0, style=solid];
m33_199 -> m33_94  [key=2, style=dotted];
m33_199 -> m33_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_200 -> m33_201  [key=0, style=solid];
m33_200 -> m33_94  [key=2, style=dotted];
m33_200 -> m33_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_201 -> m33_195  [key=0, style=bold, color=blue];
m33_75 -> m33_72  [key=0, style=bold, color=blue];
m33_297 -> m33_47  [key=0, style=bold, color=blue];
m33_298 -> m33_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_9  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_36  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_14  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_57  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_62  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_66  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_70  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_73  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_77  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_80  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_84  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_88  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_89  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_104  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_105  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_109  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_118  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_126  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_140  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_155  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_156  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_159  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_162  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_166  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_167  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_178  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_189  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_198  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_206  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_217  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_226  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_218  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_219  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_236  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_237  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_249  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_268  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_269  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_282  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_283  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_284  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_285  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_298 -> m33_295  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.WorkerFacts"];
m33_299 -> m33_126  [key=1, style=dashed, color=red, label=worker];
m33_300 -> m33_206  [key=1, style=dashed, color=red, label=worker];
m33_301 -> m33_226  [key=1, style=dashed, color=red, label=worker];
m33_302 -> m33_258  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_302 -> m33_261  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_303 -> m33_276  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_303 -> m33_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
}
