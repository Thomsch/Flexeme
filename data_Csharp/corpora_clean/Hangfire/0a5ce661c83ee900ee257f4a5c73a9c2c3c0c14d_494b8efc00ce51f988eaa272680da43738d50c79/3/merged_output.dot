digraph  {
m0_97 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m0_252 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ClientJobDescriptor.cs", label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="343-343"];
m0_253 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m0_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientJobDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_101 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m0_103 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="177-177"];
m0_104 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="178-180"];
m0_102 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="175-175"];
m0_105 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m0_235 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m0_237 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="322-322"];
m0_239 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="327-327"];
m0_240 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="328-328"];
m0_236 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="key == null", span="322-322"];
m0_238 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325"];
m0_241 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m0_6 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m0_7 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=green, community=0, file="ClientJobDescriptor.cs", label="1: _storage.UseTransaction(connection =>\r\n            {\r\n                connection.EnlistTransaction(Transaction.Current);\r\n\r\n                if (_lockedResources.Count > 0)\r\n                {\r\n                    connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    command(connection);\r\n                }\r\n            })", span="46-62"];
m0_8 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m0_225 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m0_227 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="311-311"];
m0_229 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="316-316"];
m0_230 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="317-317"];
m0_226 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="key == null", span="311-311"];
m0_228 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="313-314"];
m0_231 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m0_65 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m0_66 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129"];
m0_67 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m0_59 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m0_250 [cluster="string.Format(string, params object[])", file="ClientJobDescriptor.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m0_77 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m0_78 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143"];
m0_79 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m0_45 [cluster="Hangfire.States.IState.SerializeData()", file="ClientJobDescriptor.cs", label="Entry Hangfire.States.IState.SerializeData()", span="202-202"];
m0_251 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m0_256 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ClientJobDescriptor.cs", label="_lockedResources.Add(resource)", span="353-353"];
m0_257 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m0_195 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m0_197 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="278-278"];
m0_199 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="283-283"];
m0_200 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="284-284"];
m0_196 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="key == null", span="278-278"];
m0_198 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="280-281"];
m0_201 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m0_60 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m0_141 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m0_254 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ClientJobDescriptor.cs", label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="348-348"];
m0_255 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m0_247 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m0_38 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m0_40 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="86-96"];
m0_39 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="81-84"];
m0_41 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m0_205 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m0_207 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="289-289"];
m0_209 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="294-294"];
m0_210 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="295-295"];
m0_206 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="key == null", span="289-289"];
m0_208 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="291-292"];
m0_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m0_47 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m0_49 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="105-114"];
m0_48 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="101-103"];
m0_50 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m0_83 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m0_84 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150"];
m0_85 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m0_175 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m0_177 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m0_179 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="261-261"];
m0_180 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="262-262"];
m0_176 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="key == null", span="257-257"];
m0_178 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="259-259"];
m0_181 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m0_89 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m0_90 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ClientJobDescriptor.cs", label="AddToSet(key, value, 0.0)", span="155-155"];
m0_91 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m0_27 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m0_245 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientJobDescriptor.cs", label="_commandQueue.Enqueue(action)", span="333-333"];
m0_246 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m0_54 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m0_55 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119"];
m0_57 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => persistentQueue.Enqueue(x, queue, jobId))", span="122-122"];
m0_56 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="var persistentQueue = provider.GetJobQueue()", span="120-120"];
m0_58 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m0_9 [cluster="Unk.UseTransaction", file="ClientJobDescriptor.cs", label="Entry Unk.UseTransaction", span=""];
m0_17 [cluster="Unk.EnlistTransaction", file="ClientJobDescriptor.cs", label="Entry Unk.EnlistTransaction", span=""];
m0_20 [cluster="System.Action<T>.Invoke(T)", file="ClientJobDescriptor.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_132 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m0_134 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="216-216"];
m0_136 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="217-217"];
m0_138 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="226-226"];
m0_139 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="227-229"];
m0_133 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="key == null", span="216-216"];
m0_135 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="keyValuePairs == null", span="217-217"];
m0_137 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="219-224"];
m0_140 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m0_71 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m0_72 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136"];
m0_73 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m0_149 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m0_151 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="234-234"];
m0_153 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="238-238"];
m0_154 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key }))", span="239-239"];
m0_150 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="key == null", span="234-234"];
m0_152 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="236-236"];
m0_155 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m0_92 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m0_94 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="167-167"];
m0_95 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="168-170"];
m0_93 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165"];
m0_96 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m0_64 [cluster="Unk.Enqueue", file="ClientJobDescriptor.cs", label="Entry Unk.Enqueue", span=""];
m0_31 [cluster="System.DateTime.Add(System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_32 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m0_33 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76"];
m0_34 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m0_0 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m0_1 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="ClientJobDescriptor.cs", label="1: storage == null", span="39-39"];
m0_2 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="ClientJobDescriptor.cs", label="1: throw new ArgumentNullException(''storage'');", span="39-39"];
m0_3 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientJobDescriptor.cs", label="_storage = storage", span="41-41"];
m0_4 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m0_185 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m0_187 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="267-267"];
m0_189 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="272-272"];
m0_190 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="273-273"];
m0_186 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="key == null", span="267-267"];
m0_188 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="269-270"];
m0_191 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m0_46 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m0_24 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m0_25 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69"];
m0_26 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m0_172 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="252-252"];
m0_10 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="46-62"];
m0_11 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="2: connection.EnlistTransaction(Transaction.Current)", span="48-48"];
m0_12 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="_lockedResources.Count > 0", span="50-50"];
m0_13 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="0: connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="52-55"];
m0_14 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="2: _commandQueue", span="58-58"];
m0_21 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="55-55"];
m0_15 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="0: command(connection)", span="60-60"];
m0_16 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="46-62"];
m0_22 [cluster="lambda expression", color=green, community=0, file="ClientJobDescriptor.cs", label="1: new { resource = x }", span="55-55"];
m0_23 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="55-55"];
m0_144 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="227-229"];
m0_169 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="252-252"];
m0_29 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69"];
m0_36 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76"];
m0_43 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="86-96"];
m0_52 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="105-114"];
m0_69 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129"];
m0_75 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136"];
m0_81 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143"];
m0_87 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150"];
m0_99 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="168-170"];
m0_107 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                query,\r\n                new { key, value })", span="178-180"];
m0_115 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="186-188"];
m0_122 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="194-196"];
m0_130 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="209-211"];
m0_157 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key })", span="239-239"];
m0_183 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="262-262"];
m0_193 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="273-273"];
m0_203 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="284-284"];
m0_213 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="295-295"];
m0_223 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="306-306"];
m0_233 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="317-317"];
m0_243 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="x.Execute(query, new { key = key })", span="328-328"];
m0_28 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="67-69"];
m0_35 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="74-76"];
m0_42 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="86-96"];
m0_51 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="105-114"];
m0_61 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="122-122"];
m0_68 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="127-129"];
m0_74 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="134-136"];
m0_80 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="141-143"];
m0_86 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="148-150"];
m0_98 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="168-170"];
m0_106 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="178-180"];
m0_114 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="186-188"];
m0_121 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="194-196"];
m0_129 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="209-211"];
m0_143 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="227-229"];
m0_156 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="239-239"];
m0_168 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="252-252"];
m0_182 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="262-262"];
m0_192 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="273-273"];
m0_202 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="284-284"];
m0_212 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="295-295"];
m0_222 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="306-306"];
m0_232 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="317-317"];
m0_242 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="328-328"];
m0_145 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="227-229"];
m0_146 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Entry lambda expression", span="229-229"];
m0_170 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="252-252"];
m0_30 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="67-69"];
m0_37 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="74-76"];
m0_44 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="86-96"];
m0_53 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="105-114"];
m0_70 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="127-129"];
m0_76 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="134-136"];
m0_82 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="141-143"];
m0_88 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="148-150"];
m0_100 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="168-170"];
m0_108 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="178-180"];
m0_116 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="186-188"];
m0_123 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="194-196"];
m0_131 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="209-211"];
m0_158 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="239-239"];
m0_184 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="262-262"];
m0_194 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="273-273"];
m0_204 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="284-284"];
m0_214 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="295-295"];
m0_224 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="306-306"];
m0_234 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="317-317"];
m0_244 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="328-328"];
m0_62 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="persistentQueue.Enqueue(x, queue, jobId)", span="122-122"];
m0_63 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="122-122"];
m0_147 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="new { key = key, field = y.Key, value = y.Value }", span="229-229"];
m0_173 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="new { key = key, value = value }", span="252-252"];
m0_148 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="229-229"];
m0_174 [cluster="lambda expression", file="ClientJobDescriptor.cs", label="Exit lambda expression", span="252-252"];
m0_159 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m0_161 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="244-244"];
m0_163 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''items'');", span="245-245"];
m0_165 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="AcquireSetLock()", span="251-251"];
m0_166 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="252-252"];
m0_160 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="key == null", span="244-244"];
m0_162 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="items == null", span="245-245"];
m0_164 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="247-249"];
m0_167 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m0_18 [cluster="Unk.Select", file="ClientJobDescriptor.cs", label="Entry Unk.Select", span=""];
m0_258 [cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0"];
m0_171 [cluster="Unk.ToList", file="ClientJobDescriptor.cs", label="Entry Unk.ToList", span=""];
m0_19 [cluster="Unk.Execute", file="ClientJobDescriptor.cs", label="Entry Unk.Execute", span=""];
m0_142 [cluster="Unk.QueueCommand", file="ClientJobDescriptor.cs", label="Entry Unk.QueueCommand", span=""];
m0_117 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m0_118 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="193-193"];
m0_119 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="194-196"];
m0_120 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m0_113 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m0_248 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ClientJobDescriptor.cs", label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="338-338"];
m0_249 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m0_215 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m0_217 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''key'');", span="300-300"];
m0_219 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="AcquireHashLock()", span="305-305"];
m0_220 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="306-306"];
m0_216 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="key == null", span="300-300"];
m0_218 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="302-303"];
m0_221 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m0_109 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m0_110 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="185-185"];
m0_111 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="186-188"];
m0_112 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m0_124 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m0_126 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="AcquireListLock()", span="208-208"];
m0_127 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="209-211"];
m0_125 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="201-206"];
m0_128 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ClientJobDescriptor.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m0_259 [file="ClientJobDescriptor.cs", label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m0_293 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_294 [file="ClientJobDescriptor.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m0_295 [file="ClientJobDescriptor.cs", label=sql, span=""];
m0_298 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_299 [file="ClientJobDescriptor.cs", label="System.Collections.Generic.IList<string>", span=""];
m0_300 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_260 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_261 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_262 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_263 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_264 [file="ClientJobDescriptor.cs", label="Hangfire.States.IState", span=""];
m0_265 [file="ClientJobDescriptor.cs", label=addAndSetStateSql, span=""];
m0_266 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_267 [file="ClientJobDescriptor.cs", label="Hangfire.States.IState", span=""];
m0_268 [file="ClientJobDescriptor.cs", label=addStateSql, span=""];
m0_272 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_273 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_274 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_275 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_276 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_277 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_278 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_279 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_280 [file="ClientJobDescriptor.cs", label=double, span=""];
m0_281 [file="ClientJobDescriptor.cs", label=addSql, span=""];
m0_282 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_283 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_284 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_285 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_286 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_287 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_288 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_289 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_290 [file="ClientJobDescriptor.cs", label=int, span=""];
m0_291 [file="ClientJobDescriptor.cs", label=int, span=""];
m0_292 [file="ClientJobDescriptor.cs", label=trimSql, span=""];
m0_296 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_297 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_301 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_302 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_303 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_304 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_305 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_306 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_307 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_308 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_309 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_310 [file="ClientJobDescriptor.cs", label="System.TimeSpan", span=""];
m0_311 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_312 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_313 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_314 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_315 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_316 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_317 [file="ClientJobDescriptor.cs", label=query, span=""];
m0_269 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_270 [file="ClientJobDescriptor.cs", label=string, span=""];
m0_271 [file="ClientJobDescriptor.cs", label=persistentQueue, span=""];
m2_60 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m2_27 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DequeuedJobsWatcher.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95"];
m2_59 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64"];
m2_26 [cluster="string.Format(string, object, object)", file="DequeuedJobsWatcher.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_32 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="77-77"];
m2_33 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext)", span="79-79"];
m2_34 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext.Items)", span="80-80"];
m2_35 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="82-83"];
m2_38 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="89-89"];
m2_41 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Assert.AreEqual(\r\n                        parameter.Value,\r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="97-99"];
m2_43 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="filterContext.ExceptionHandled = true", span="105-105"];
m2_36 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="_setOnPostMethodParameters != null", span="85-85"];
m2_37 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label=_setOnPostMethodParameters, span="87-87"];
m2_39 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="_readParameters != null", span="93-93"];
m2_40 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label=_readParameters, span="95-95"];
m2_42 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label=_handlesException, span="103-103"];
m2_44 [cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="77-77"];
m2_29 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128"];
m2_30 [cluster="Unk.AreEqual", file="DequeuedJobsWatcher.cs", label="Entry Unk.AreEqual", span=""];
m2_31 [cluster="System.Exception.Exception()", file="DequeuedJobsWatcher.cs", label="Entry System.Exception.Exception()", span="0-0"];
m2_0 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21"];
m2_1 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_name = name", span="31-31"];
m2_2 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_results = results", span="32-32"];
m2_3 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_throwException = throwException", span="33-33"];
m2_4 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_cancelsTheCreation = cancelsTheCreation", span="34-34"];
m2_5 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_handlesException = handlesException", span="35-35"];
m2_6 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_setOnPreMethodParameters = setOnPreMethodParameters", span="36-36"];
m2_7 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_readParameters = readParameters", span="37-37"];
m2_8 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="_setOnPostMethodParameters = setOnPostMethodParameters", span="38-38"];
m2_9 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21"];
m2_45 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="109-109"];
m2_46 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="1: Assert.IsNotNull(filterContext)", span="111-111"];
m2_48 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="filterContext.Canceled = true", span="115-115"];
m2_52 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="124-124"];
m2_55 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="Assert.AreEqual(\r\n                        parameter.Value,\r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="132-134"];
m2_47 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="1: _cancelsTheCreation", span="113-113"];
m2_49 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: _results.Add(String.Format(''{0}::{1}'', _name, ''OnPerforming''))", span="118-118"];
m2_50 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="0: _setOnPreMethodParameters != null", span="120-120"];
m2_51 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="2: _setOnPreMethodParameters", span="122-122"];
m2_53 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="_readParameters != null", span="128-128"];
m2_54 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label=_readParameters, span="130-130"];
m2_56 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label=_throwException, span="138-138"];
m2_57 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="throw new Exception();", span="140-140"];
m2_58 [cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="109-109"];
m2_61 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="144-144"];
m2_62 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext)", span="146-146"];
m2_63 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnPerformed'')\r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="148-149"];
m2_65 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="filterContext.ExceptionHandled = true", span="153-153"];
m2_64 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label=_handlesException, span="151-151"];
m2_66 [cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="144-144"];
m2_25 [cluster="Unk.IsNotNull", file="DequeuedJobsWatcher.cs", label="Entry Unk.IsNotNull", span=""];
m2_10 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="41-41"];
m2_11 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext)", span="43-43"];
m2_12 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Assert.IsNotNull(filterContext.Items)", span="44-44"];
m2_14 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="filterContext.Canceled = true", span="48-48"];
m2_18 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="57-57"];
m2_21 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Assert.AreEqual(\r\n                        parameter.Value, \r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="65-67"];
m2_13 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_cancelsTheCreation, span="46-46"];
m2_15 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="51-51"];
m2_16 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="_setOnPreMethodParameters != null", span="53-53"];
m2_17 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_setOnPreMethodParameters, span="55-55"];
m2_19 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="_readParameters != null", span="61-61"];
m2_20 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_readParameters, span="63-63"];
m2_22 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label=_throwException, span="71-71"];
m2_23 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="throw new Exception();", span="73-73"];
m2_24 [cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="41-41"];
m2_67 [file="DequeuedJobsWatcher.cs", label="HangFire.Tests.TestFilter", span=""];
m3_6 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m3_7 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="DictionaryAssert.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreBackgroundJobPerformer(null))", span="28-30"];
m3_8 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="DictionaryAssert.cs", label="0: Assert.Equal(''activator'', exception.ParamName)", span="32-32"];
m3_9 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m3_190 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m3_191 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227"];
m3_192 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228"];
m3_193 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="229-229"];
m3_194 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => performer.Perform(_context.Object))", span="232-233"];
m3_195 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m3_90 [cluster="System.DateTime.ToString(string)", file="DictionaryAssert.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_77 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="DictionaryAssert.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m3_53 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254"];
m3_219 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="256-256"];
m3_220 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254"];
m3_11 [cluster="Unk.Equal", file="DictionaryAssert.cs", label="Entry Unk.Equal", span=""];
m3_101 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m3_240 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="Assert.Equal(SomeDateTime, argument)", span="298-298"];
m3_239 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="_methodInvoked = true", span="296-296"];
m3_241 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m3_157 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144"];
m3_24 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319"];
m3_251 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="DictionaryAssert.cs", label="return new CoreBackgroundJobPerformer(_activator.Object);", span="321-321"];
m3_252 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319"];
m3_0 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19"];
m3_1 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", color=green, community=0, file="DictionaryAssert.cs", label="2: _activator = new Mock<JobActivator>() { CallBase = true }", span="21-21"];
m3_2 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", color=green, community=0, file="DictionaryAssert.cs", label="0: _context = new PerformContextMock()", span="22-22"];
m3_3 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19"];
m3_38 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="286-286"];
m3_91 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m3_93 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132"];
m3_94 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="133-133"];
m3_95 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="136-136"];
m3_96 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="139-139"];
m3_92 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="131-131"];
m3_97 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m3_78 [cluster="System.Type.GetMethod(string)", file="DictionaryAssert.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m3_79 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m3_207 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m3_208 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239"];
m3_209 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="240-240"];
m3_210 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="var result = performer.Perform(_context.Object)", span="242-242"];
m3_211 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="Assert.Equal(''Return value'', result)", span="244-244"];
m3_212 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m3_120 [cluster="System.InvalidOperationException.InvalidOperationException()", file="DictionaryAssert.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_186 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314"];
m3_248 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="DictionaryAssert.cs", label="throw new InvalidOperationException(''exception'');", span="316-316"];
m3_249 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314"];
m3_10 [cluster="Unk.>", file="DictionaryAssert.cs", label="Entry Unk.>", span=""];
m3_102 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m3_104 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147"];
m3_105 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="149-149"];
m3_106 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="151-151"];
m3_107 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="154-154"];
m3_103 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="146-146"];
m3_108 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m3_203 [cluster="Unk.ThrowIfCancellationRequested", file="DictionaryAssert.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m3_54 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m3_56 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76"];
m3_57 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="77-77"];
m3_58 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="80-80"];
m3_59 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="83-83"];
m3_55 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="75-75"];
m3_60 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m3_15 [cluster="Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", file="DictionaryAssert.cs", label="Entry Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", span="35-35"];
m3_64 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306"];
m3_245 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Assert.Equal(''hello'', stringArg)", span="310-310"];
m3_246 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Assert.Equal(5, intArg)", span="311-311"];
m3_244 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="_methodInvoked = true", span="308-308"];
m3_247 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306"];
m3_250 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DictionaryAssert.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_65 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m3_71 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="97-97"];
m3_72 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="98-98"];
m3_73 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="101-101"];
m3_74 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="104-104"];
m3_68 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92"];
m3_69 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="94-94"];
m3_70 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95"];
m3_67 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91"];
m3_66 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="90-90"];
m3_75 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m3_76 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="DictionaryAssert.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m3_25 [cluster="Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="DictionaryAssert.cs", label="Entry Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="41-41"];
m3_158 [cluster="Unk.NotNull", file="DictionaryAssert.cs", label="Entry Unk.NotNull", span=""];
m3_162 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m3_164 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201"];
m3_165 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="202-202"];
m3_166 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="204-205"];
m3_167 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="207-207"];
m3_163 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="200-200"];
m3_168 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m3_16 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m3_17 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="1: _methodInvoked = false", span="38-38"];
m3_18 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="1: _context.BackgroundJob.Job = Job.FromExpression(() => StaticMethod())", span="39-39"];
m3_19 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="2: var performer = CreatePerformer()", span="40-40"];
m3_20 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="0: performer.Perform(_context.Object)", span="42-42"];
m3_21 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="DictionaryAssert.cs", label="2: Assert.True(_methodInvoked)", span="44-44"];
m3_22 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m3_121 [cluster="Unk.Setup", file="DictionaryAssert.cs", label="Entry Unk.Setup", span=""];
m3_113 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158"];
m3_115 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162"];
m3_116 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="164-164"];
m3_117 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="165-165"];
m3_118 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="168-169"];
m3_114 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="var exception = new InvalidOperationException()", span="161-161"];
m3_119 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158"];
m3_122 [cluster="Unk.Throws", file="DictionaryAssert.cs", label="Entry Unk.Throws", span=""];
m3_235 [cluster="Unk.Null", file="DictionaryAssert.cs", label="Entry Unk.Null", span=""];
m3_149 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m3_152 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188"];
m3_153 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="189-189"];
m3_154 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="191-192"];
m3_150 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var type = typeof(JobFacts)", span="186-186"];
m3_151 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187"];
m3_155 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="Assert.NotNull(exception.InnerException)", span="194-194"];
m3_156 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m3_253 [cluster="CoreBackgroundJobPerformer.cstr", file="DictionaryAssert.cs", label="Entry CoreBackgroundJobPerformer.cstr", span=""];
m3_43 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m3_45 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63"];
m3_46 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="64-64"];
m3_47 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="66-66"];
m3_48 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="Assert.True(_disposed)", span="68-68"];
m3_44 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="_disposed = false", span="62-62"];
m3_49 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m3_133 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m3_134 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175"];
m3_135 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176"];
m3_136 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="177-177"];
m3_137 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="179-180"];
m3_138 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m3_213 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="239-239"];
m3_12 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="30-30"];
m3_13 [cluster="lambda expression", color=green, community=0, file="DictionaryAssert.cs", label="1: new CoreBackgroundJobPerformer(null)", span="30-30"];
m3_14 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="30-30"];
m3_27 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="39-39"];
m3_28 [cluster="lambda expression", color=green, community=0, file="DictionaryAssert.cs", label="1: StaticMethod()", span="39-39"];
m3_29 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="39-39"];
m3_62 [cluster="lambda expression", file="DictionaryAssert.cs", label="MethodWithArguments(''hello'', 5)", span="76-76"];
m3_99 [cluster="lambda expression", file="DictionaryAssert.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132"];
m3_128 [cluster="lambda expression", file="DictionaryAssert.cs", label="InstanceMethod()", span="164-164"];
m3_131 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="169-169"];
m3_144 [cluster="lambda expression", file="DictionaryAssert.cs", label="InstanceMethod()", span="176-176"];
m3_147 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="180-180"];
m3_160 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="192-192"];
m3_174 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="205-205"];
m3_188 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="217-217"];
m3_205 [cluster="lambda expression", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="233-233"];
m3_124 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ActivateJob(It.IsAny<Type>())", span="162-162"];
m3_141 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175"];
m3_39 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="51-51"];
m3_50 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="63-63"];
m3_61 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="76-76"];
m3_63 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="76-76"];
m3_98 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="132-132"];
m3_100 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="132-132"];
m3_109 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="147-147"];
m3_123 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="162-162"];
m3_127 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="164-164"];
m3_129 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="164-164"];
m3_130 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="169-169"];
m3_132 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="169-169"];
m3_140 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="175-175"];
m3_143 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="176-176"];
m3_145 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="176-176"];
m3_146 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="180-180"];
m3_148 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="180-180"];
m3_159 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="192-192"];
m3_161 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="192-192"];
m3_169 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="201-201"];
m3_173 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="205-205"];
m3_175 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="205-205"];
m3_183 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="213-213"];
m3_187 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="217-217"];
m3_189 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="217-217"];
m3_196 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="227-227"];
m3_200 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="228-228"];
m3_204 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="233-233"];
m3_206 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="233-233"];
m3_125 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="162-162"];
m3_142 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="175-175"];
m3_41 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="51-51"];
m3_40 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.InstanceMethod()", span="51-51"];
m3_52 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="63-63"];
m3_51 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.Method()", span="63-63"];
m3_110 [cluster="lambda expression", file="DictionaryAssert.cs", label="NullArgumentMethod(null)", span="147-147"];
m3_111 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="147-147"];
m3_171 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="201-201"];
m3_170 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.Method()", span="201-201"];
m3_185 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="213-213"];
m3_184 [cluster="lambda expression", file="DictionaryAssert.cs", label="ExceptionMethod()", span="213-213"];
m3_198 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="227-227"];
m3_197 [cluster="lambda expression", file="DictionaryAssert.cs", label="CancelableJob(JobCancellationToken.Null)", span="227-227"];
m3_202 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="228-228"];
m3_201 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ThrowIfCancellationRequested()", span="228-228"];
m3_214 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.FunctionReturningValue()", span="239-239"];
m3_215 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="239-239"];
m3_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571"];
m3_126 [cluster="Unk.ActivateJob", file="DictionaryAssert.cs", label="Entry Unk.ActivateJob", span=""];
m3_80 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m3_85 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117"];
m3_86 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="118-118"];
m3_87 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="121-121"];
m3_88 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="124-124"];
m3_82 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112"];
m3_83 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="114-114"];
m3_84 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115"];
m3_81 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="111-111"];
m3_89 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m3_4 [cluster="Mock<JobActivator>.cstr", file="DictionaryAssert.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m3_172 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267"];
m3_224 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="269-269"];
m3_225 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267"];
m3_238 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="DictionaryAssert.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m3_31 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m3_33 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression<CoreBackgroundJobPerformerFacts>(x => x.InstanceMethod())", span="51-51"];
m3_34 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="52-52"];
m3_35 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="performer.Perform(_context.Object)", span="54-54"];
m3_36 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="Assert.True(_methodInvoked)", span="56-56"];
m3_32 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="_methodInvoked = false", span="50-50"];
m3_37 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m3_26 [cluster="Unk.True", file="DictionaryAssert.cs", label="Entry Unk.True", span=""];
m3_176 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m3_177 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213"];
m3_178 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="var performer = CreatePerformer()", span="214-214"];
m3_179 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="216-217"];
m3_180 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219"];
m3_181 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220"];
m3_182 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m3_30 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301"];
m3_242 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="303-303"];
m3_243 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301"];
m3_139 [cluster="Unk.Returns", file="DictionaryAssert.cs", label="Entry Unk.Returns", span=""];
m3_112 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283"];
m3_232 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="_methodInvoked = true", span="285-285"];
m3_233 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="Assert.Null(argument)", span="286-286"];
m3_234 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283"];
m3_199 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m3_236 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="DictionaryAssert.cs", label="token.ThrowIfCancellationRequested()", span="291-291"];
m3_237 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m3_5 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m3_226 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272"];
m3_227 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="DictionaryAssert.cs", label="throw new InvalidOperationException();", span="274-274"];
m3_228 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272"];
m3_42 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="DictionaryAssert.cs", label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247"];
m3_217 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="DictionaryAssert.cs", label="_methodInvoked = true", span="249-249"];
m3_218 [cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="DictionaryAssert.cs", label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247"];
m3_23 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DictionaryAssert.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="232-232"];
m3_254 [file="DictionaryAssert.cs", label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", span=""];
m3_255 [file="DictionaryAssert.cs", label=performer, span=""];
m3_256 [file="DictionaryAssert.cs", label=performer, span=""];
m3_257 [file="DictionaryAssert.cs", label=performer, span=""];
m3_258 [file="DictionaryAssert.cs", label=performer, span=""];
m3_259 [file="DictionaryAssert.cs", label=performer, span=""];
m3_260 [file="DictionaryAssert.cs", label=performer, span=""];
m4_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnqueuedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_24 [cluster="Unk.EnqueueItemOnList", file="EnqueuedState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m4_8 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Apply(IRedisTransaction)", span="29-29"];
m4_9 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="transaction == null", span="31-31"];
m4_11 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="transaction.QueueCommand(x => x.AddItemToSet(''hangfire:queues'', Queue))", span="33-33"];
m4_12 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", color=green, community=0, file="EnqueuedState.cs", label="0: transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), JobId))", span="34-35"];
m4_10 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="throw new ArgumentNullException(''transaction'');", span="31-31"];
m4_13 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Apply(IRedisTransaction)", span="29-29"];
m4_23 [cluster="string.Format(string, object)", file="EnqueuedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_0 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m4_1 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="EnqueuedState.cs", label="Queue = queue", span="13-13"];
m4_2 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m4_15 [cluster="Unk.QueueCommand", file="EnqueuedState.cs", label="Entry Unk.QueueCommand", span=""];
m4_3 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.GetProperties()", span="20-20"];
m4_4 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="EnqueuedState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', Queue }\r\n                };", span="22-26"];
m4_5 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.GetProperties()", span="20-20"];
m4_19 [cluster="Unk.AddItemToSet", file="EnqueuedState.cs", label="Entry Unk.AddItemToSet", span=""];
m4_20 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="34-35"];
m4_16 [cluster="lambda expression", file="EnqueuedState.cs", label="Entry lambda expression", span="33-33"];
m4_17 [cluster="lambda expression", file="EnqueuedState.cs", label="x.AddItemToSet(''hangfire:queues'', Queue)", span="33-33"];
m4_18 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="33-33"];
m4_21 [cluster="lambda expression", color=green, community=0, file="EnqueuedState.cs", label="0: x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), JobId)", span="34-35"];
m4_22 [cluster="lambda expression", file="EnqueuedState.cs", label="Exit lambda expression", span="34-35"];
m4_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m4_25 [file="EnqueuedState.cs", label="HangFire.States.EnqueuedState", span=""];
m5_14 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46"];
m5_15 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Enqueued state''))", span="48-49"];
m5_16 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(null)", span="51-51"];
m5_17 [cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46"];
m5_57 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129"];
m5_58 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should enqueue the job to the given queue'', ((string[])(null)))", span="131-131"];
m5_59 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="133-133"];
m5_60 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: this.FeatureBackground()", span="135-135"];
m5_61 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137"];
m5_62 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.Then(''the \'test\' queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139"];
m5_63 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.And(''the \'test\' queue was added to the queues set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141"];
m5_64 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioCleanup()", span="143-143"];
m5_65 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129"];
m5_25 [cluster="Unk.OnScenarioStart", file="EnqueuedState.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m5_29 [cluster="Unk.CollectScenarioErrors", file="EnqueuedState.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m5_21 [cluster="Unk.OnScenarioEnd", file="EnqueuedState.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m5_26 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66"];
m5_27 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.CollectScenarioErrors()", span="68-68"];
m5_28 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66"];
m5_9 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39"];
m5_10 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.OnFeatureEnd()", span="41-41"];
m5_11 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner = null", span="42-42"];
m5_12 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39"];
m5_35 [cluster="Unk.And", file="EnqueuedState.feature.cs", label="Entry Unk.And", span=""];
m5_67 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150"];
m5_68 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should not remove the job from the queue'', ((string[])(null)))", span="152-152"];
m5_69 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="154-154"];
m5_70 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: this.FeatureBackground()", span="156-156"];
m5_71 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158"];
m5_72 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160"];
m5_73 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.Then(''the \'test\' queue still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162"];
m5_74 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: this.ScenarioCleanup()", span="164-164"];
m5_75 [cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150"];
m5_5 [cluster="Unk.GetTestRunner", file="EnqueuedState.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m5_36 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85"];
m5_37 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Enqueued\''', ((string[])(null)))", span="87-87"];
m5_38 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="89-89"];
m5_39 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: this.FeatureBackground()", span="91-91"];
m5_40 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.Then(''the state name is equal to \'Enqueued\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m5_41 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: this.ScenarioCleanup()", span="95-95"];
m5_42 [cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85"];
m5_45 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102"];
m5_46 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104"];
m5_47 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="106-106"];
m5_48 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: this.FeatureBackground()", span="108-108"];
m5_49 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=1, file="EnqueuedState.feature.cs", label="0: TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
m5_50 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=1, file="EnqueuedState.feature.cs", label="2: table1.AddRow(new string[] {\r\n                        ''EnqueuedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
m5_51 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=1, file="EnqueuedState.feature.cs", label="0: table1.AddRow(new string[] {\r\n                        ''Queue'',\r\n                        ''test''})", span="116-118"];
m5_52 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="120-120"];
m5_53 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: this.ScenarioCleanup()", span="122-122"];
m5_54 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102"];
m5_13 [cluster="Unk.OnFeatureEnd", file="EnqueuedState.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m5_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="EnqueuedState.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m5_66 [cluster="Unk.When", file="EnqueuedState.feature.cs", label="Entry Unk.When", span=""];
m5_56 [cluster="Unk.AddRow", file="EnqueuedState.feature.cs", label="Entry Unk.AddRow", span=""];
m5_18 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56"];
m5_19 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.OnScenarioEnd()", span="58-58"];
m5_20 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56"];
m5_22 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m5_23 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m5_24 [cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m5_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="EnqueuedState.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m5_44 [cluster="Unk.Then", file="EnqueuedState.feature.cs", label="Entry Unk.Then", span=""];
m5_34 [cluster="Unk.Given", file="EnqueuedState.feature.cs", label="Entry Unk.Given", span=""];
m5_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="EnqueuedState.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m5_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="EnqueuedState.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m5_30 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71"];
m5_31 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", color=green, community=0, file="EnqueuedState.feature.cs", label="2: testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m5_32 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", color=green, community=0, file="EnqueuedState.feature.cs", label="0: testRunner.And(''the Enqueued state with the \'test\' value for the \'queue\' argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m5_33 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71"];
m5_8 [cluster="Unk.OnFeatureStart", file="EnqueuedState.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m5_0 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="EnqueuedState.feature.cs", label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m5_1 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m5_2 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=1, file="EnqueuedState.feature.cs", label="1: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Enqueued state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m5_3 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m5_4 [cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="EnqueuedState.feature.cs", label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m5_76 [file="EnqueuedState.feature.cs", label="HangFire.Tests.States.EnqueuedStateFeature", span=""];
m6_3 [cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs", label="Entry HangFire.States.FailedState.GetProperties()", span="20-20"];
m6_4 [cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="22-28"];
m6_5 [cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs", label="Exit HangFire.States.FailedState.GetProperties()", span="20-20"];
m6_20 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m6_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_10 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="Entry HangFire.States.FailedState.Apply(IRedisTransaction)", span="31-31"];
m6_13 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", color=green, community=0, file="FailedState.cs", label="0: transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        JobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow)))", span="35-38"];
m6_11 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="transaction == null", span="33-33"];
m6_12 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="throw new ArgumentNullException(''transaction'');", span="33-33"];
m6_14 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs", label="Exit HangFire.States.FailedState.Apply(IRedisTransaction)", span="31-31"];
m6_9 [cluster="System.Exception.ToString()", file="FailedState.cs", label="Entry System.Exception.ToString()", span="0-0"];
m6_16 [cluster="Unk.QueueCommand", file="FailedState.cs", label="Entry Unk.QueueCommand", span=""];
m6_21 [cluster="Unk.AddItemToSortedSet", file="FailedState.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m6_0 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m6_1 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs", label="Exception = exception", span="13-13"];
m6_2 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs", label="Exit HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m6_8 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m6_27 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="47-47"];
m6_17 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="35-38"];
m6_18 [cluster="lambda expression", color=green, community=0, file="FailedState.cs", label="0: x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        JobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow))", span="35-38"];
m6_19 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="35-38"];
m6_28 [cluster="lambda expression", file="FailedState.cs", label="x.RemoveItemFromSortedSet(''hangfire:failed'', jobId)", span="47-47"];
m6_29 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="47-47"];
m6_22 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="Entry HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", span="43-43"];
m6_25 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:failed'', jobId))", span="47-47"];
m6_23 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="transaction == null", span="45-45"];
m6_24 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="throw new ArgumentNullException(''transaction'');", span="45-45"];
m6_26 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="FailedState.cs", label="Exit HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", span="43-43"];
m6_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m6_30 [cluster="Unk.RemoveItemFromSortedSet", file="FailedState.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m6_31 [file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m6_32 [file="FailedState.cs", label=string, span=""];
m7_12 [cluster="System.Collections.Generic.List<T>.List()", file="FailedState.feature.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_36 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m7_37 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _components))", span="52-53"];
m7_38 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="FailedState.feature.cs", label="2: Assert.Equal(''storage'', exception.ParamName)", span="55-55"];
m7_39 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m7_63 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m7_64 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="80-80"];
m7_65 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="1: server.Execute(_cts.Token)", span="82-82"];
m7_66 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="1: _storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="84-84"];
m7_67 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="FailedState.feature.cs", label="1: _connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="85-85"];
m7_68 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m7_19 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m7_20 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="FailedState.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _components))", span="34-35"];
m7_21 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="FailedState.feature.cs", label="2: Assert.Equal(''serverId'', exception.ParamName)", span="37-37"];
m7_22 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m7_24 [cluster="Unk.Equal", file="FailedState.feature.cs", label="Entry Unk.Equal", span=""];
m7_0 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m7_1 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="2: _context = new ServerContext()", span="22-22"];
m7_2 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="0: _storage = new Mock<JobStorage>()", span="23-23"];
m7_3 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="2: _connection = new Mock<IStorageConnection>()", span="24-24"];
m7_4 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="0: _cts = new CancellationTokenSource()", span="25-25"];
m7_5 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="2: _components = new List<IServerComponent>()", span="26-26"];
m7_6 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="FailedState.feature.cs", label="0: _storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="28-28"];
m7_7 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m7_77 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m7_78 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="0: var component1 = CreateComponentMock()", span="92-92"];
m7_79 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="93-93"];
m7_83 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="0: component1.Verify(x => x.Execute(_cts.Token))", span="102-102"];
m7_80 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var component2 = CreateComponentMock()", span="95-95"];
m7_82 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="2: server.Execute(_cts.Token)", span="99-99"];
m7_84 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="2: component2.Verify(x => x.Execute(_cts.Token))", span="103-103"];
m7_81 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="96-96"];
m7_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m7_95 [cluster="System.Threading.Thread.Sleep(int)", file="FailedState.feature.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_23 [cluster="Unk.>", file="FailedState.feature.cs", label="Entry Unk.>", span=""];
m7_57 [cluster="Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="FailedState.feature.cs", label="Entry Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="53-53"];
m7_56 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m7_111 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=green, community=0, file="FailedState.feature.cs", label="1: return new ServerBootstrapper(ServerId, _context, _storage.Object, _components);", span="118-118"];
m7_112 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m7_18 [cluster="Unk.GetConnection", file="FailedState.feature.cs", label="Entry Unk.GetConnection", span=""];
m7_86 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m7_113 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="FailedState.feature.cs", label="1: var mock = new Mock<IServerComponent>()", span="123-123"];
m7_114 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="FailedState.feature.cs", label="0: _components.Add(mock.Object)", span="124-124"];
m7_115 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="FailedState.feature.cs", label="2: return mock;", span="126-126"];
m7_116 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m7_118 [cluster="Unk.Add", file="FailedState.feature.cs", label="Entry Unk.Add", span=""];
m7_8 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="FailedState.feature.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m7_102 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m7_103 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="109-109"];
m7_104 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="FailedState.feature.cs", label="1: server.Execute(_cts.Token)", span="111-111"];
m7_105 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="FailedState.feature.cs", label="2: _connection.Verify(x => x.RemoveServer(ServerId))", span="113-113"];
m7_106 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m7_29 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m7_30 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _components))", span="43-44"];
m7_31 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="FailedState.feature.cs", label="2: Assert.Equal(''context'', exception.ParamName)", span="46-46"];
m7_32 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m7_13 [cluster="Unk.Setup", file="FailedState.feature.cs", label="Entry Unk.Setup", span=""];
m7_76 [cluster="Unk.Dispose", file="FailedState.feature.cs", label="Entry Unk.Dispose", span=""];
m7_51 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m7_52 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="FailedState.feature.cs", label="1: var server = CreateServer()", span="70-70"];
m7_53 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="FailedState.feature.cs", label="1: server.Execute(_cts.Token)", span="72-72"];
m7_54 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="FailedState.feature.cs", label="1: _connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="74-74"];
m7_55 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m7_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="FailedState.feature.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_28 [cluster="ServerBootstrapper.cstr", file="FailedState.feature.cs", label="Entry ServerBootstrapper.cstr", span=""];
m7_117 [cluster="Mock<IServerComponent>.cstr", file="FailedState.feature.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m7_44 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="FailedState.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m7_45 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=green, community=0, file="FailedState.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="61-62"];
m7_46 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=green, community=0, file="FailedState.feature.cs", label="2: Assert.Equal(''components'', exception.ParamName)", span="64-64"];
m7_47 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="FailedState.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m7_107 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="113-113"];
m7_15 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="28-28"];
m7_16 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: x.GetConnection()", span="28-28"];
m7_17 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="28-28"];
m7_25 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="35-35"];
m7_26 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: new ServerBootstrapper(null, _context, _storage.Object, _components)", span="35-35"];
m7_27 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="35-35"];
m7_33 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="44-44"];
m7_34 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: new ServerBootstrapper(ServerId, null, _storage.Object, _components)", span="44-44"];
m7_35 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="44-44"];
m7_40 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="53-53"];
m7_41 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="2: new ServerBootstrapper(ServerId, _context, null, _components)", span="53-53"];
m7_42 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="53-53"];
m7_48 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="62-62"];
m7_49 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="62-62"];
m7_50 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="62-62"];
m7_59 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="74-74"];
m7_60 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="2: x.AnnounceServer(ServerId, _context)", span="74-74"];
m7_61 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="74-74"];
m7_70 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="84-84"];
m7_73 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="85-85"];
m7_71 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: x.GetConnection()", span="84-84"];
m7_72 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="84-84"];
m7_74 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: x.Dispose()", span="85-85"];
m7_75 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="85-85"];
m7_88 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="93-93"];
m7_92 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="93-93"];
m7_96 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="102-102"];
m7_99 [cluster="lambda expression", file="FailedState.feature.cs", label="Entry lambda expression", span="103-103"];
m7_89 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: x.Execute(It.IsAny<CancellationToken>())", span="93-93"];
m7_90 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="93-93"];
m7_93 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="1: Thread.Sleep(100)", span="93-93"];
m7_94 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="93-93"];
m7_97 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="2: x.Execute(_cts.Token)", span="102-102"];
m7_98 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="102-102"];
m7_100 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="0: x.Execute(_cts.Token)", span="103-103"];
m7_101 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="103-103"];
m7_108 [cluster="lambda expression", color=green, community=0, file="FailedState.feature.cs", label="2: x.RemoveServer(ServerId)", span="113-113"];
m7_109 [cluster="lambda expression", file="FailedState.feature.cs", label="Exit lambda expression", span="113-113"];
m7_62 [cluster="Unk.AnnounceServer", file="FailedState.feature.cs", label="Entry Unk.AnnounceServer", span=""];
m7_69 [cluster="Unk.Exactly", file="FailedState.feature.cs", label="Entry Unk.Exactly", span=""];
m7_58 [cluster="Unk.Verify", file="FailedState.feature.cs", label="Entry Unk.Verify", span=""];
m7_43 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", file="FailedState.feature.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", span="36-36"];
m7_110 [cluster="Unk.RemoveServer", file="FailedState.feature.cs", label="Entry Unk.RemoveServer", span=""];
m7_91 [cluster="Unk.Execute", file="FailedState.feature.cs", label="Entry Unk.Execute", span=""];
m7_87 [cluster="Unk.Callback", file="FailedState.feature.cs", label="Entry Unk.Callback", span=""];
m7_14 [cluster="Unk.Returns", file="FailedState.feature.cs", label="Entry Unk.Returns", span=""];
m7_10 [cluster="Mock<IStorageConnection>.cstr", file="FailedState.feature.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_9 [cluster="Mock<JobStorage>.cstr", file="FailedState.feature.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m7_119 [file="FailedState.feature.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m8_20 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HistoryStatisticsFilter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_29 [cluster="Unk.IncrementValue", file="HistoryStatisticsFilter.cs", label="Entry Unk.IncrementValue", span=""];
m8_25 [cluster="Unk.Commit", file="HistoryStatisticsFilter.cs", label="Entry Unk.Commit", span=""];
m8_23 [cluster="System.DateTime.ToString(string)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_24 [cluster="string.Format(string, object)", file="HistoryStatisticsFilter.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_22 [cluster="Unk.QueueCommand", file="HistoryStatisticsFilter.cs", label="Entry Unk.QueueCommand", span=""];
m8_37 [cluster="Unk.ExpireEntryIn", file="HistoryStatisticsFilter.cs", label="Entry Unk.ExpireEntryIn", span=""];
m8_16 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1)))", span="38-38"];
m8_0 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m8_1 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="redis == null", span="10-10"];
m8_3 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="state == null", span="11-11"];
m8_5 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="var transaction = redis.CreateTransaction()", span="13-13"];
m8_6 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="state.StateName == SucceededState.Name", span="15-15"];
m8_11 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="state.StateName == FailedState.Name", span="26-26"];
m8_18 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="return state;", span="44-44"];
m8_2 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="throw new ArgumentNullException(''redis'');", span="10-10"];
m8_4 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="throw new ArgumentNullException(''state'');", span="11-11"];
m8_7 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="17-18"];
m8_9 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(hourlySucceededKey))", span="23-23"];
m8_10 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1)))", span="24-24"];
m8_12 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd''))))", span="28-29"];
m8_13 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm''))))", span="31-32"];
m8_15 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.QueueCommand(x => x.IncrementValue(hourlyFailedKey))", span="37-37"];
m8_17 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="transaction.Commit()", span="41-41"];
m8_8 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="var hourlySucceededKey = String.Format(\r\n                        ''hangfire:stats:succeeded:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="20-22"];
m8_14 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="var hourlyFailedKey = String.Format(\r\n                        ''hangfire:stats:failed:{0}'',\r\n                        DateTime.UtcNow.ToString(''yyyy-MM-dd-HH''))", span="34-36"];
m8_19 [cluster="HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.HistoryStatisticsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m8_36 [cluster="System.TimeSpan.FromDays(double)", file="HistoryStatisticsFilter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m8_33 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="24-24"];
m8_26 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="17-18"];
m8_31 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(hourlySucceededKey)", span="23-23"];
m8_34 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.ExpireEntryIn(hourlySucceededKey, TimeSpan.FromDays(1))", span="24-24"];
m8_30 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="23-23"];
m8_38 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="28-29"];
m8_41 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="31-32"];
m8_45 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(hourlyFailedKey)", span="37-37"];
m8_48 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.ExpireEntryIn(hourlyFailedKey, TimeSpan.FromDays(1))", span="38-38"];
m8_44 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="37-37"];
m8_47 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="38-38"];
m8_27 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:succeeded:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="17-18"];
m8_28 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="17-18"];
m8_32 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="23-23"];
m8_35 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="24-24"];
m8_39 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-dd'')))", span="28-29"];
m8_40 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="28-29"];
m8_42 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="x.IncrementValue(\r\n                        String.Format(''hangfire:stats:failed:{0}'', DateTime.UtcNow.ToString(''yyyy-MM-ddTHH-mm'')))", span="31-32"];
m8_43 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="31-32"];
m8_46 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="37-37"];
m8_49 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="38-38"];
m8_21 [cluster="Unk.CreateTransaction", file="HistoryStatisticsFilter.cs", label="Entry Unk.CreateTransaction", span=""];
m8_50 [file="HistoryStatisticsFilter.cs", label=hourlySucceededKey, span=""];
m8_51 [file="HistoryStatisticsFilter.cs", label=hourlyFailedKey, span=""];
m9_2 [cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IStateAppliedFilter.cs", label="Entry HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m9_3 [cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IStateAppliedFilter.cs", label="Exit HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m9_0 [cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IStateAppliedFilter.cs", label="Entry HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m9_1 [cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IStateAppliedFilter.cs", label="Exit HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m10_0 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IStateChangedFilter.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m10_1 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IStateChangedFilter.cs", label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m11_17 [cluster="Mock<IJobCreationProcess>.cstr", file="JobClient.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m11_16 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
m11_18 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_96 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m11_97 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="102-102"];
m11_98 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105"];
m11_99 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="Assert.Equal(''job'', exception.ParamName)", span="107-107"];
m11_100 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m11_23 [cluster="Unk.GetConnection", file="JobClient.cs", label="Entry Unk.GetConnection", span=""];
m11_20 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="24-24"];
m11_56 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="92-92"];
m11_58 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", color=green, community=0, file="JobClient.cs", label="2: Exit HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86"];
m11_57 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="return job;", span="94-94"];
m11_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_136 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m11_137 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="148-148"];
m11_138 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151"];
m11_139 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153"];
m11_140 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m11_46 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="49-49"];
m11_22 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="24-24"];
m11_63 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="2: Exit lambda expression", span="67-67"];
m11_64 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m11_49 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m11_50 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", color=green, community=0, file="JobClient.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m11_51 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="JobClient.cs", label="Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m11_37 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var jobId = GenerateId()", span="68-68"];
m11_77 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m11_78 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=green, community=0, file="JobClient.cs", label="1: CreateClient()", span="86-86"];
m11_79 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=green, community=0, file="JobClient.cs", label="1: _storage.Verify(x => x.GetConnection())", span="87-87"];
m11_80 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m11_11 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="1: var state = new EnqueuedState(jobId, ''Enqueued by the Сlient'', queue)", span="34-34"];
m11_61 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="67-67"];
m11_60 [cluster="Unk.DoesNotThrow", file="JobClient.cs", label="Entry Unk.DoesNotThrow", span=""];
m11_62 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="0: new BackgroundJobClient()", span="67-67"];
m11_122 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m11_123 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="var client = CreateClient()", span="134-134"];
m11_124 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136"];
m11_125 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139"];
m11_127 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142"];
m11_126 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Assert.NotNull(exception.InnerException)", span="141-141"];
m11_128 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m11_145 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m11_146 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="159-159"];
m11_147 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162"];
m11_148 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Assert.Equal(''state'', exception.ParamName)", span="164-164"];
m11_149 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m11_112 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81"];
m11_154 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m11_155 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="var client = CreateClient()", span="170-170"];
m11_156 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172"];
m11_157 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177"];
m11_158 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m11_121 [cluster="Unk.Run", file="JobClient.cs", label="Entry Unk.Run", span=""];
m11_36 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="0: return Async(jobType, args);", span="65-65"];
m11_26 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="29-29"];
m11_104 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m11_105 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var client = CreateClient()", span="113-113"];
m11_106 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116"];
m11_107 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Assert.Equal(''state'', exception.ParamName)", span="118-118"];
m11_108 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m11_21 [cluster="lambda expression", file="JobClient.cs", label="x.GetConnection()", span="24-24"];
m11_45 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m11_163 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m11_164 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="var client = CreateClient()", span="183-183"];
m11_165 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185"];
m11_166 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190"];
m11_167 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m11_91 [cluster="HangFire.BackgroundJobClient.Dispose()", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113"];
m11_4 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="2: _stateMachine = new Mock<IStateMachine>()", span="26-26"];
m11_5 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="JobClient.cs", label="1: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m11_7 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="1: _process = new Mock<IJobCreationProcess>()", span="31-31"];
m11_8 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="0: _state = new Mock<IState>()", span="32-32"];
m11_9 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="2: _job = Job.FromExpression(() => Method())", span="33-33"];
m11_12 [cluster="Mock<JobStorage>.cstr", color=red, community=0, file="JobClient.cs", label="0: Entry Mock<JobStorage>.cstr", span=""];
m11_6 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="1: _stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m11_10 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="JobClient.cs", label="1: Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m11_13 [cluster="Unk.Setup", color=red, community=2, file="JobClient.cs", label="1: Entry Unk.Setup", span=""];
m11_15 [cluster="Mock<IStateMachine>.cstr", color=red, community=0, file="JobClient.cs", label="1: Entry Mock<IStateMachine>.cstr", span=""];
m11_14 [cluster="Unk.Returns", color=red, community=0, file="JobClient.cs", label="2: Entry Unk.Returns", span=""];
m11_171 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m11_172 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197"];
m11_173 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="var client = CreateClient()", span="198-198"];
m11_174 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200"];
m11_175 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="Assert.True(result)", span="202-202"];
m11_176 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m11_0 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m11_1 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="JobClient.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m11_2 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="JobClient.cs", label="1: _storage = new Mock<JobStorage>()", span="23-23"];
m11_66 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", color=green, community=0, file="JobClient.cs", label="1: Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m11_144 [cluster="Unk.ChangeState", file="JobClient.cs", label="Entry Unk.ChangeState", span=""];
m11_48 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="49-49"];
m11_3 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="JobClient.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24"];
m11_86 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m11_87 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="JobClient.cs", label="0: var client = CreateClient()", span="93-93"];
m11_88 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="JobClient.cs", label="2: client.Dispose()", span="94-94"];
m11_89 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=green, community=0, file="JobClient.cs", label="1: _connection.Verify(x => x.Dispose())", span="96-96"];
m11_90 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m11_129 [cluster="Unk.NotNull", file="JobClient.cs", label="Entry Unk.NotNull", span=""];
m11_28 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="33-33"];
m11_29 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="2: Method()", span="33-33"];
m11_31 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m11_32 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m11_33 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="JobClient.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40"];
m11_39 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="1: new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m11_30 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="1: Exit lambda expression", span="33-33"];
m11_34 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="JobClient.cs", label="1: Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m11_35 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="JobClient.cs", label="0: Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m11_38 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="2: Entry lambda expression", span="40-40"];
m11_40 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="1: Exit lambda expression", span="40-40"];
m11_42 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m11_41 [cluster="BackgroundJobClient.cstr", file="JobClient.cs", label="Entry BackgroundJobClient.cstr", span=""];
m11_43 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m11_52 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m11_27 [cluster="Unk.Create", file="JobClient.cs", label="Entry Unk.Create", span=""];
m11_65 [cluster="System.Guid.NewGuid()", file="JobClient.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_67 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m11_81 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m11_182 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="JobClient.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211"];
m11_183 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m11_24 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="29-29"];
m11_53 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="58-58"];
m11_54 [cluster="lambda expression", file="JobClient.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m11_55 [cluster="lambda expression", color=red, community=0, file="JobClient.cs", label="1: Exit lambda expression", span="58-58"];
m11_44 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="JobClient.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m11_71 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m11_72 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", color=green, community=0, file="JobClient.cs", label="2: Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m11_73 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m11_153 [cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="JobClient.cs", label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100"];
m11_162 [cluster="Unk.TryToChangeState", file="JobClient.cs", label="Entry Unk.TryToChangeState", span=""];
m11_150 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="162-162"];
m11_25 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", color=green, community=0, file="JobClient.cs", label="0: Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m11_68 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="73-73"];
m11_69 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="2: new BackgroundJobClient(_storage.Object)", span="73-73"];
m11_70 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="73-73"];
m11_74 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="80-80"];
m11_75 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="2: new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80"];
m11_76 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="80-80"];
m11_83 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="87-87"];
m11_84 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="2: x.GetConnection()", span="87-87"];
m11_85 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="87-87"];
m11_92 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="96-96"];
m11_93 [cluster="lambda expression", color=green, community=0, file="JobClient.cs", label="1: x.Dispose()", span="96-96"];
m11_94 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="96-96"];
m11_47 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="JobClient.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m11_102 [cluster="lambda expression", file="JobClient.cs", label="client.Create(null, _state.Object)", span="105-105"];
m11_110 [cluster="lambda expression", file="JobClient.cs", label="client.Create(_job, null)", span="116-116"];
m11_134 [cluster="lambda expression", file="JobClient.cs", label="client.Create(_job, _state.Object)", span="139-139"];
m11_142 [cluster="lambda expression", file="JobClient.cs", label="client.ChangeState(null, _state.Object, null)", span="151-151"];
m11_160 [cluster="lambda expression", file="JobClient.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177"];
m11_169 [cluster="lambda expression", file="JobClient.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190"];
m11_179 [cluster="lambda expression", file="JobClient.cs", label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196"];
m11_119 [cluster="lambda expression", file="JobClient.cs", label="x.Run(It.IsNotNull<CreateContext>())", span="128-128"];
m11_131 [cluster="lambda expression", file="JobClient.cs", label="x.Run(It.IsAny<CreateContext>())", span="135-135"];
m11_101 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="105-105"];
m11_103 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="105-105"];
m11_109 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="116-116"];
m11_111 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="116-116"];
m11_118 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="128-128"];
m11_130 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="135-135"];
m11_133 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="139-139"];
m11_135 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="139-139"];
m11_141 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="151-151"];
m11_143 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="151-151"];
m11_151 [cluster="lambda expression", file="JobClient.cs", label="client.ChangeState(''jobId'', null, null)", span="162-162"];
m11_159 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="174-177"];
m11_161 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="174-177"];
m11_168 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="187-190"];
m11_170 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="187-190"];
m11_178 [cluster="lambda expression", file="JobClient.cs", label="Entry lambda expression", span="196-196"];
m11_180 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="196-196"];
m11_120 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="128-128"];
m11_132 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="135-135"];
m11_152 [cluster="lambda expression", file="JobClient.cs", label="Exit lambda expression", span="162-162"];
m11_19 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobClient.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m11_181 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m11_113 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m11_114 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="var client = CreateClient()", span="124-124"];
m11_115 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="client.Create(_job, _state.Object)", span="126-126"];
m11_116 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128"];
m11_117 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="JobClient.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m11_177 [cluster="Unk.True", file="JobClient.cs", label="Entry Unk.True", span=""];
m11_82 [cluster="Unk.Verify", file="JobClient.cs", label="Entry Unk.Verify", span=""];
m11_184 [file="JobClient.cs", label="HangFire.Core.Tests.BackgroundJobClientFacts", span=""];
m11_185 [file="JobClient.cs", label=client, span=""];
m11_186 [file="JobClient.cs", label=client, span=""];
m11_187 [file="JobClient.cs", label=client, span=""];
m11_188 [file="JobClient.cs", label=client, span=""];
m11_189 [file="JobClient.cs", label=client, span=""];
m12_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_23 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="109-109"];
m12_64 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filters.Reverse()", span="112-112"];
m12_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filter.OnClientException(context)", span="114-114"];
m12_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="109-109"];
m12_63 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m12_22 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m12_44 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="69-69"];
m12_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="74-74"];
m12_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="75-75"];
m12_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="77-78"];
m12_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="85-85"];
m12_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="90-91"];
m12_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="93-93"];
m12_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="103-103"];
m12_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="81-81"];
m12_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="82-82"];
m12_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="87-87"];
m12_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="101-101"];
m12_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="89-89"];
m12_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="95-95"];
m12_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="106-106"];
m12_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="97-97"];
m12_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="69-69"];
m12_67 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m12_13 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m12_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="37-37"];
m12_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="41-41"];
m12_15 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label=Exception, span="39-39"];
m12_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="43-43"];
m12_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="44-44"];
m12_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="throw;", span="46-46"];
m12_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m12_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m12_32 [cluster="Unk.thunk", file="JobCreator.cs", label="Entry Unk.thunk", span=""];
m12_29 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6"];
m12_38 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m12_37 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="JobCreator.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="28-28"];
m12_3 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m12_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientFilters == null", span="26-26"];
m12_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientExceptionFilters == null", span="27-27"];
m12_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientFilters = clientFilters", span="29-29"];
m12_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientExceptionFilters = clientExceptionFilters", span="30-30"];
m12_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientFilters'');", span="26-26"];
m12_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="27-27"];
m12_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m12_4 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobCreator.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m12_41 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="64-64"];
m12_34 [cluster="lambda expression", color=red, community=0, file="JobCreator.cs", label="1: jobDescriptor.Enqueue()", span="59-59"];
m12_35 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(createContext, false, null);", span="60-60"];
m12_42 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="64-64"];
m12_39 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="64-64"];
m12_33 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="57-61"];
m12_36 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="57-61"];
m12_40 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="64-64"];
m12_43 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="64-64"];
m12_61 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m12_31 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m12_62 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m12_21 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="51-51"];
m12_24 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(createContext)", span="56-56"];
m12_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", color=red, community=0, file="JobCreator.cs", label="1: Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Enqueue();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="57-61"];
m12_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="63-64"];
m12_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="66-66"];
m12_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="51-51"];
m12_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m12_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Current = new JobCreator(\r\n                GlobalJobFilters.Filters.OfType<IClientFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IClientExceptionFilter>())", span="14-16"];
m12_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m12_68 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m12_69 [file="JobCreator.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m12_70 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m12_71 [file="JobCreator.cs", label=preContext, span=""];
m12_72 [file="JobCreator.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m12_73 [file="JobCreator.cs", label="HangFire.Filters.IClientFilter", span=""];
m14_46 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="71-71"];
m14_47 [cluster="Unk.IsNull", file="JobFetcherSteps.cs", label="Entry Unk.IsNull", span=""];
m14_48 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="77-77"];
m14_49 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label=_queues, span="79-79"];
m14_35 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="50-50"];
m14_39 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="JobFetcherSteps.cs", label="1: Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59"];
m14_40 [cluster="Unk.AreEqual", file="JobFetcherSteps.cs", label="Entry Unk.AreEqual", span=""];
m14_20 [cluster="Unk.Select", file="JobFetcherSteps.cs", label="Entry Unk.Select", span=""];
m14_21 [cluster="Unk.ToList", color=green, community=0, file="JobFetcherSteps.cs", label="1: Entry Unk.ToList", span=""];
m14_22 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="40-40"];
m14_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="JobFetcherSteps.cs", label="_server.Dispose()", span="95-95"];
m14_45 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", color=red, community=0, file="JobFetcherSteps.cs", label="1: Exit HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="92-92"];
m14_29 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m14_30 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="50-50"];
m14_31 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="var i = 0", span="52-52"];
m14_50 [cluster="Unk.GetAllItemsFromList", file="JobFetcherSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m14_51 [cluster="Unk.Contains", file="JobFetcherSteps.cs", label="Entry Unk.Contains", span=""];
m14_76 [cluster="Unk.GetAllEntriesFromHash", file="JobFetcherSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m14_5 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="24-24"];
m14_6 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="_fetcher = new JobFetcher(RedisFactory.BasicManager, queue, TimeSpan.FromSeconds(1))", span="26-26"];
m14_7 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="24-24"];
m14_8 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m14_9 [cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcherSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m14_66 [cluster="Unk.IsTrue", file="JobFetcherSteps.cs", label="Entry Unk.IsTrue", span=""];
m14_88 [cluster="Unk.ContainsKey", file="JobFetcherSteps.cs", label="Entry Unk.ContainsKey", span=""];
m14_27 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="44-44"];
m14_15 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="i++", span="34-34"];
m14_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="_server = null", span="24-24"];
m14_36 [cluster="Unk.When", file="JobFetcherSteps.cs", label="Entry Unk.When", span=""];
m14_37 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="59-59"];
m14_38 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="61-61"];
m14_10 [cluster="Unk.Given", file="JobFetcherSteps.cs", label="Entry Unk.Given", span=""];
m14_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m14_16 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m14_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="38-38"];
m14_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Given(''the job was dequeued'')", span="39-39"];
m14_14 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m14_17 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="JobFetcherSteps.cs", label="Given(''a job'')", span="45-45"];
m14_60 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m14_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="127-127"];
m14_62 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="128-128"];
m14_63 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m14_52 [cluster="Unk.Then", file="JobFetcherSteps.cs", label="Entry Unk.Then", span=""];
m14_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="JobFetcherSteps.cs", label="HangFire.Tests.JobFetcherSteps", span=""];
m14_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="110-110"];
m14_78 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m14_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", span="148-148"];
m14_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(2, registeredQueues.Count)", span="150-150"];
m14_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(queue1, registeredQueues[0])", span="151-151"];
m14_82 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(queue2, registeredQueues[1])", span="152-152"];
m14_83 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m14_41 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65"];
m14_0 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m14_1 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="_server != null", span="21-21"];
m14_2 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="JobFetcherSteps.cs", label="_server.Dispose()", span="23-23"];
m14_84 [cluster="Unk.AreEqual", file="JobFetcherSteps.cs", label="Entry Unk.AreEqual", span=""];
m14_71 [cluster="Unk.IsFalse", file="JobFetcherSteps.cs", label="Entry Unk.IsFalse", span=""];
m14_64 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="JobFetcherSteps.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m14_42 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(jobId, _payload.Id)", span="67-67"];
m14_43 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="65-65"];
m14_18 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="JobFetcherSteps.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="46-46"];
m14_55 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m14_56 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="118-119"];
m14_57 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="CollectionAssert.DoesNotContain(jobIds, jobId)", span="121-121"];
m14_58 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m14_4 [cluster="Unk.Given", file="JobFetcherSteps.cs", label="Entry Unk.Given", span=""];
m14_28 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobFetcherSteps.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m14_19 [cluster="Unk.Format", file="JobFetcherSteps.cs", label="Entry Unk.Format", span=""];
m14_72 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m14_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", span="141-141"];
m14_74 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, properties)", span="142-142"];
m14_75 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m14_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=green, community=0, file="JobFetcherSteps.cs", label="2: Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m14_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=red, community=0, file="JobFetcherSteps.cs", label="2: Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m14_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m14_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=green, community=0, file="JobFetcherSteps.cs", label="0: Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m14_65 [cluster="Unk.SetContainsItem", file="JobFetcherSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m14_91 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m14_90 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="JobFetcherSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", span="164-164"];
m14_89 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m14_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m14_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m14_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="JobFetcherSteps.cs", label="CreateServer(name, workers, new [] { ''critical'' })", span="73-73"];
m14_59 [cluster="Unk.DoesNotContain", file="JobFetcherSteps.cs", label="Entry Unk.DoesNotContain", span=""];
m14_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m14_86 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="JobFetcherSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="158-158"];
m14_85 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m14_77 [cluster="Unk.ContainsFollowingItems", file="JobFetcherSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m14_67 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m14_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="134-134"];
m14_69 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="135-135"];
m14_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m14_92 [file="JobFetcherSteps.cs", label="HangFire.Tests.ServerSteps", span=""];
m16_64 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobSteps.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m16_58 [cluster="Unk.TryParse", file="JobSteps.cs", label="Entry Unk.TryParse", span=""];
m16_56 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m16_63 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="JobSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m16_59 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobSteps.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m16_57 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m16_65 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobSteps.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m16_67 [cluster="Unk.Write", file="JobSteps.cs", label="Entry Unk.Write", span=""];
m16_62 [cluster="HttpRequestBase.LinkTo(string)", file="JobSteps.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m16_61 [cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="JobSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m16_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobSteps.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m16_71 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobSteps.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m16_0 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m16_1 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="WriteLiteral(''\r\n'')", span="57-57"];
m16_2 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69"];
m16_3 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="int from, perPage", span="71-71"];
m16_4 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="73-73"];
m16_5 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="74-74"];
m16_9 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="pager = new Pager(from, perPage, monitor.DeletedListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/deleted'')\r\n        }", span="81-84"];
m16_6 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="Pager pager", span="76-76"];
m16_7 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="JobSteps.cs", label="JobList<DeletedJobDto> jobs", span="77-77"];
m0_97 -> m0_252  [key=0, style=solid];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_250  [key=2, style=dotted];
m0_252 -> m0_251  [key=2, style=dotted];
m0_253 -> m0_97  [color=blue, key=0, style=bold];
m0_101 -> m0_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_101 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_97  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_27  [key=2, style=dotted];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_102 -> m0_107  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_105 -> m0_101  [color=blue, key=0, style=bold];
m0_235 -> m0_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_235 -> m0_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_235 -> m0_236  [key=0, style=solid];
m0_237 -> m0_5  [key=2, style=dotted];
m0_237 -> m0_241  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_113  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_27  [key=2, style=dotted];
m0_240 -> m0_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_238  [key=0, style=solid];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_238 -> m0_243  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_241 -> m0_235  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_7 -> m0_7  [color=green, key=3, label="method methodReturn System.Collections.Generic.IDictionary<string, string> SerializeProperties", style=bold];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_9  [color=green, key=2, style=dotted];
m0_7 -> m0_10  [color=green, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_225 -> m0_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_225 -> m0_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_5  [key=2, style=dotted];
m0_227 -> m0_231  [key=0, style=solid];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_97  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_27  [key=2, style=dotted];
m0_230 -> m0_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_228  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_230  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_228 -> m0_233  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_231 -> m0_225  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_27  [key=2, style=dotted];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_67 -> m0_65  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_27  [key=2, style=dotted];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_251 -> m0_256  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_258  [key=2, style=dotted];
m0_257 -> m0_251  [color=blue, key=0, style=bold];
m0_195 -> m0_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_195 -> m0_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_195 -> m0_196  [key=0, style=solid];
m0_197 -> m0_5  [key=2, style=dotted];
m0_197 -> m0_201  [key=0, style=solid];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_97  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_27  [key=2, style=dotted];
m0_200 -> m0_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_198 -> m0_203  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_201 -> m0_195  [color=blue, key=0, style=bold];
m0_141 -> m0_254  [key=0, style=solid];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_250  [key=2, style=dotted];
m0_254 -> m0_251  [key=2, style=dotted];
m0_255 -> m0_141  [color=blue, key=0, style=bold];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_38 -> m0_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_27  [key=2, style=dotted];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m0_41 -> m0_38  [color=blue, key=0, style=bold];
m0_205 -> m0_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_205 -> m0_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_205 -> m0_206  [key=0, style=solid];
m0_207 -> m0_5  [key=2, style=dotted];
m0_207 -> m0_211  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_113  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_27  [key=2, style=dotted];
m0_210 -> m0_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_208  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_210  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_208 -> m0_213  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_211 -> m0_205  [color=blue, key=0, style=bold];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_47 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_47 -> m0_48  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_27  [key=2, style=dotted];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_52  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m0_50 -> m0_47  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_27  [key=2, style=dotted];
m0_84 -> m0_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_85 -> m0_83  [color=blue, key=0, style=bold];
m0_175 -> m0_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_175 -> m0_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_175 -> m0_176  [key=0, style=solid];
m0_177 -> m0_5  [key=2, style=dotted];
m0_177 -> m0_181  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_97  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_27  [key=2, style=dotted];
m0_180 -> m0_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_178  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_180  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_178 -> m0_183  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_181 -> m0_175  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [key=2, style=dotted];
m0_91 -> m0_89  [color=blue, key=0, style=bold];
m0_27 -> m0_245  [key=0, style=solid];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_247  [key=2, style=dotted];
m0_246 -> m0_27  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_54 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_27  [key=2, style=dotted];
m0_57 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m0_58 -> m0_54  [color=blue, key=0, style=bold];
m0_132 -> m0_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_132 -> m0_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_135  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m0_132 -> m0_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_134 -> m0_5  [key=2, style=dotted];
m0_134 -> m0_140  [key=0, style=solid];
m0_136 -> m0_5  [key=2, style=dotted];
m0_136 -> m0_140  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_141  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_142  [key=2, style=dotted];
m0_139 -> m0_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_139  [color=darkseagreen4, key=1, label=sql, style=dashed];
m0_137 -> m0_144  [color=darkseagreen4, key=1, label=sql, style=dashed];
m0_140 -> m0_132  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_27  [key=2, style=dotted];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_71  [color=blue, key=0, style=bold];
m0_149 -> m0_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_149 -> m0_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_151 -> m0_5  [key=2, style=dotted];
m0_151 -> m0_155  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_141  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_27  [key=2, style=dotted];
m0_154 -> m0_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_152 -> m0_157  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_155 -> m0_149  [color=blue, key=0, style=bold];
m0_92 -> m0_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_27  [key=2, style=dotted];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m0_93 -> m0_99  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m0_96 -> m0_92  [color=blue, key=0, style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_27  [key=2, style=dotted];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_32  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=0, style=solid];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_185 -> m0_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_185 -> m0_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_187 -> m0_5  [key=2, style=dotted];
m0_187 -> m0_191  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_141  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_27  [key=2, style=dotted];
m0_190 -> m0_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_188  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_190  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_188 -> m0_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_191 -> m0_185  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_172 -> m0_173  [key=0, style=solid];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_10 -> m0_13  [color=green, key=1, label=SqlConnection, style=dashed];
m0_10 -> m0_15  [color=green, key=1, label=SqlConnection, style=dashed];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_17  [color=green, key=2, style=dotted];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_12 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_18  [color=green, key=2, style=dotted];
m0_13 -> m0_19  [color=green, key=2, style=dotted];
m0_13 -> m0_21  [color=green, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_16  [color=green, key=0, style=solid];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_15 -> m0_14  [color=green, key=0, style=solid];
m0_15 -> m0_20  [color=green, key=2, style=dotted];
m0_16 -> m0_10  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_144 -> m0_18  [key=2, style=dotted];
m0_144 -> m0_19  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_169 -> m0_18  [key=2, style=dotted];
m0_169 -> m0_19  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_171  [key=2, style=dotted];
m0_169 -> m0_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_19  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_36 -> m0_19  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_43 -> m0_19  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_46  [key=2, style=dotted];
m0_52 -> m0_19  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_45  [key=2, style=dotted];
m0_52 -> m0_46  [key=2, style=dotted];
m0_69 -> m0_19  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_75 -> m0_19  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_31  [key=2, style=dotted];
m0_81 -> m0_19  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_87 -> m0_19  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_31  [key=2, style=dotted];
m0_99 -> m0_19  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_107 -> m0_19  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_115 -> m0_19  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_122 -> m0_19  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_130 -> m0_19  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_157 -> m0_19  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_183 -> m0_19  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_193 -> m0_19  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_31  [key=2, style=dotted];
m0_203 -> m0_19  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_31  [key=2, style=dotted];
m0_213 -> m0_19  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_31  [key=2, style=dotted];
m0_223 -> m0_19  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_233 -> m0_19  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_243 -> m0_19  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_212 -> m0_213  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_232 -> m0_233  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_145 -> m0_143  [color=blue, key=0, style=bold];
m0_146 -> m0_147  [key=0, style=solid];
m0_170 -> m0_168  [color=blue, key=0, style=bold];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_37 -> m0_35  [color=blue, key=0, style=bold];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_76 -> m0_74  [color=blue, key=0, style=bold];
m0_82 -> m0_80  [color=blue, key=0, style=bold];
m0_88 -> m0_86  [color=blue, key=0, style=bold];
m0_100 -> m0_98  [color=blue, key=0, style=bold];
m0_108 -> m0_106  [color=blue, key=0, style=bold];
m0_116 -> m0_114  [color=blue, key=0, style=bold];
m0_123 -> m0_121  [color=blue, key=0, style=bold];
m0_131 -> m0_129  [color=blue, key=0, style=bold];
m0_158 -> m0_156  [color=blue, key=0, style=bold];
m0_184 -> m0_182  [color=blue, key=0, style=bold];
m0_194 -> m0_192  [color=blue, key=0, style=bold];
m0_204 -> m0_202  [color=blue, key=0, style=bold];
m0_214 -> m0_212  [color=blue, key=0, style=bold];
m0_224 -> m0_222  [color=blue, key=0, style=bold];
m0_234 -> m0_232  [color=blue, key=0, style=bold];
m0_244 -> m0_242  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=2, style=dotted];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_147 -> m0_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m0_147 -> m0_148  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_148 -> m0_146  [color=blue, key=0, style=bold];
m0_174 -> m0_172  [color=blue, key=0, style=bold];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_159 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_162  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_159 -> m0_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_161 -> m0_5  [key=2, style=dotted];
m0_161 -> m0_167  [key=0, style=solid];
m0_163 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_167  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_97  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_142  [key=2, style=dotted];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_164  [key=0, style=solid];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_166  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_164 -> m0_169  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_167 -> m0_159  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_117 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_113  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_27  [key=2, style=dotted];
m0_119 -> m0_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_120 -> m0_117  [color=blue, key=0, style=bold];
m0_113 -> m0_248  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_250  [key=2, style=dotted];
m0_248 -> m0_251  [key=2, style=dotted];
m0_249 -> m0_113  [color=blue, key=0, style=bold];
m0_215 -> m0_220  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_215 -> m0_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_215 -> m0_216  [key=0, style=solid];
m0_217 -> m0_5  [key=2, style=dotted];
m0_217 -> m0_221  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_141  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_27  [key=2, style=dotted];
m0_220 -> m0_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_218  [key=0, style=solid];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_220  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_218 -> m0_223  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_221 -> m0_215  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_109 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_27  [key=2, style=dotted];
m0_111 -> m0_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_112 -> m0_109  [color=blue, key=0, style=bold];
m0_124 -> m0_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_124 -> m0_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_124 -> m0_125  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_113  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_27  [key=2, style=dotted];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m0_125 -> m0_130  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m0_128 -> m0_124  [color=blue, key=0, style=bold];
m0_259 -> m0_7  [color=green, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_13  [color=green, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_14  [color=green, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_55  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_57  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_66  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_72  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_78  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_84  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_90  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_95  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_104  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_110  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_111  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_118  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_119  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_126  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_127  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_153  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_166  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_190  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_199  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_200  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_209  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_219  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_229  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_230  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_245  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_248  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_254  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_259 -> m0_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_293 -> m0_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_293 -> m0_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_294 -> m0_144  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m0_295 -> m0_144  [color=darkseagreen4, key=1, label=sql, style=dashed];
m0_298 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_298 -> m0_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_299 -> m0_169  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_300 -> m0_169  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_260 -> m0_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_261 -> m0_29  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_262 -> m0_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_263 -> m0_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_264 -> m0_43  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m0_265 -> m0_43  [color=darkseagreen4, key=1, label=addAndSetStateSql, style=dashed];
m0_266 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_267 -> m0_52  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m0_268 -> m0_52  [color=darkseagreen4, key=1, label=addStateSql, style=dashed];
m0_272 -> m0_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_273 -> m0_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_274 -> m0_75  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_275 -> m0_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_276 -> m0_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_277 -> m0_87  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_278 -> m0_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_279 -> m0_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_280 -> m0_99  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_281 -> m0_99  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m0_282 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_283 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_284 -> m0_107  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_285 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_286 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_287 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_288 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_289 -> m0_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_290 -> m0_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_291 -> m0_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_292 -> m0_130  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m0_296 -> m0_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_297 -> m0_157  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_301 -> m0_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_302 -> m0_183  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_303 -> m0_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_304 -> m0_193  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_305 -> m0_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_306 -> m0_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_307 -> m0_203  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_308 -> m0_203  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_309 -> m0_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_310 -> m0_213  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_311 -> m0_213  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_312 -> m0_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_313 -> m0_223  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_314 -> m0_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_315 -> m0_233  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_316 -> m0_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_317 -> m0_243  [color=darkseagreen4, key=1, label=query, style=dashed];
m0_269 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_270 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_271 -> m0_62  [color=darkseagreen4, key=1, label=persistentQueue, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_38  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_41  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_32 -> m2_43  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatedContext", style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_25  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_25  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_26  [key=2, style=dotted];
m2_35 -> m2_27  [key=2, style=dotted];
m2_38 -> m2_37  [key=0, style=solid];
m2_38 -> m2_28  [key=2, style=dotted];
m2_38 -> m2_38  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_41 -> m2_40  [key=0, style=solid];
m2_41 -> m2_29  [key=2, style=dotted];
m2_41 -> m2_30  [key=2, style=dotted];
m2_41 -> m2_41  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_43 -> m2_44  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_39  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_42  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=0, style=solid];
m2_44 -> m2_32  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [color=red, key=0, style=solid];
m2_45 -> m2_48  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m2_45 -> m2_52  [color=red, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m2_45 -> m2_55  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m2_46 -> m2_47  [color=red, key=0, style=solid];
m2_46 -> m2_25  [color=red, key=2, style=dotted];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_52 -> m2_51  [color=red, key=0, style=solid];
m2_52 -> m2_59  [color=red, key=2, style=dotted];
m2_52 -> m2_52  [color=red, key=1, label=parameter, style=dashed];
m2_55 -> m2_54  [key=0, style=solid];
m2_55 -> m2_60  [key=2, style=dotted];
m2_55 -> m2_30  [key=2, style=dotted];
m2_55 -> m2_55  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_47 -> m2_48  [color=red, key=0, style=solid];
m2_47 -> m2_49  [color=red, key=0, style=solid];
m2_49 -> m2_50  [color=red, key=0, style=solid];
m2_49 -> m2_26  [color=red, key=2, style=dotted];
m2_49 -> m2_27  [color=red, key=2, style=dotted];
m2_50 -> m2_51  [color=red, key=0, style=solid];
m2_50 -> m2_53  [color=red, key=0, style=solid];
m2_51 -> m2_52  [color=red, key=0, style=solid];
m2_51 -> m2_53  [color=red, key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_56  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_31  [key=2, style=dotted];
m2_58 -> m2_45  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_63  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformedContext", style=dashed];
m2_61 -> m2_65  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformedContext", style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_25  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_26  [key=2, style=dotted];
m2_63 -> m2_27  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_66 -> m2_61  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_10 -> m2_14  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_10 -> m2_18  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_10 -> m2_21  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_25  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_25  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_18 -> m2_17  [key=0, style=solid];
m2_18 -> m2_28  [key=2, style=dotted];
m2_18 -> m2_18  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_21 -> m2_20  [key=0, style=solid];
m2_21 -> m2_29  [key=2, style=dotted];
m2_21 -> m2_30  [key=2, style=dotted];
m2_21 -> m2_21  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_26  [key=2, style=dotted];
m2_15 -> m2_27  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_19  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_31  [key=2, style=dotted];
m2_24 -> m2_10  [color=blue, key=0, style=bold];
m2_67 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_5  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_13  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_15  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_16  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_17  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_19  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_20  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_36  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_40  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_42  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_47  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_49  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_50  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_51  [color=red, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_53  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_54  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_56  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_63  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m2_67 -> m2_64  [color=darkseagreen4, key=1, label="HangFire.Tests.TestFilter", style=dashed];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_10  [color=green, key=2, style=dotted];
m3_7 -> m3_12  [color=green, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_11  [color=green, key=2, style=dotted];
m3_9 -> m3_6  [color=blue, key=0, style=bold];
m3_190 -> m3_191  [key=0, style=solid];
m3_191 -> m3_23  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_192 -> m3_10  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_121  [key=2, style=dotted];
m3_192 -> m3_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_193 -> m3_24  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_205  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_194 -> m3_10  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_195 -> m3_190  [color=blue, key=0, style=bold];
m3_53 -> m3_219  [key=0, style=solid];
m3_219 -> m3_220  [key=0, style=solid];
m3_220 -> m3_53  [color=blue, key=0, style=bold];
m3_101 -> m3_240  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_101 -> m3_239  [key=0, style=solid];
m3_240 -> m3_11  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_239 -> m3_240  [key=0, style=solid];
m3_241 -> m3_101  [color=blue, key=0, style=bold];
m3_24 -> m3_251  [key=0, style=solid];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_253  [key=2, style=dotted];
m3_252 -> m3_24  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_4  [color=green, key=2, style=dotted];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_5  [color=green, key=2, style=dotted];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_91 -> m3_92  [key=0, style=solid];
m3_93 -> m3_23  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_94 -> m3_24  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_25  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_26  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_97 -> m3_91  [color=blue, key=0, style=bold];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_38  [key=2, style=dotted];
m3_208 -> m3_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_209 -> m3_24  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_210 -> m3_25  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_211 -> m3_11  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_212 -> m3_207  [color=blue, key=0, style=bold];
m3_186 -> m3_248  [key=0, style=solid];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_250  [key=2, style=dotted];
m3_249 -> m3_186  [color=blue, key=0, style=bold];
m3_102 -> m3_103  [key=0, style=solid];
m3_104 -> m3_23  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_105 -> m3_24  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_25  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_26  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_108 -> m3_102  [color=blue, key=0, style=bold];
m3_54 -> m3_55  [key=0, style=solid];
m3_56 -> m3_23  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_57 -> m3_24  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_25  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_26  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_60 -> m3_54  [color=blue, key=0, style=bold];
m3_64 -> m3_56  [color=darkorchid, key=3, label="Parameter variable int intArg", style=bold];
m3_64 -> m3_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_64 -> m3_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_64 -> m3_244  [key=0, style=solid];
m3_245 -> m3_11  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_246 -> m3_11  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_244 -> m3_245  [key=0, style=solid];
m3_247 -> m3_64  [color=blue, key=0, style=bold];
m3_65 -> m3_66  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_79  [key=2, style=dotted];
m3_72 -> m3_24  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_25  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_26  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_68 -> m3_71  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_77  [key=2, style=dotted];
m3_69 -> m3_71  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_78  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_76  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_75 -> m3_65  [color=blue, key=0, style=bold];
m3_162 -> m3_163  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_38  [key=2, style=dotted];
m3_164 -> m3_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_165 -> m3_24  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_174  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_166 -> m3_10  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_167 -> m3_26  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_163 -> m3_164  [key=0, style=solid];
m3_168 -> m3_162  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [color=green, key=0, style=solid];
m3_17 -> m3_18  [color=green, key=0, style=solid];
m3_18 -> m3_19  [color=green, key=0, style=solid];
m3_18 -> m3_23  [color=green, key=2, style=dotted];
m3_18 -> m3_27  [color=green, key=1, label="lambda expression", style=dashed];
m3_19 -> m3_20  [color=green, key=0, style=solid];
m3_19 -> m3_24  [color=green, key=2, style=dotted];
m3_20 -> m3_21  [color=green, key=0, style=solid];
m3_20 -> m3_25  [color=green, key=2, style=dotted];
m3_21 -> m3_22  [color=green, key=0, style=solid];
m3_21 -> m3_26  [color=green, key=2, style=dotted];
m3_22 -> m3_16  [color=blue, key=0, style=bold];
m3_113 -> m3_114  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_121  [key=2, style=dotted];
m3_115 -> m3_122  [key=2, style=dotted];
m3_115 -> m3_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_116 -> m3_23  [key=2, style=dotted];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_117 -> m3_24  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_131  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_118 -> m3_10  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_120  [key=2, style=dotted];
m3_119 -> m3_113  [color=blue, key=0, style=bold];
m3_149 -> m3_150  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_157  [key=2, style=dotted];
m3_153 -> m3_24  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_160  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_154 -> m3_10  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_150 -> m3_152  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_150 -> m3_151  [key=0, style=solid];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_78  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_158  [key=2, style=dotted];
m3_156 -> m3_149  [color=blue, key=0, style=bold];
m3_43 -> m3_44  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_38  [key=2, style=dotted];
m3_45 -> m3_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_46 -> m3_24  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_25  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_26  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_49 -> m3_43  [color=blue, key=0, style=bold];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_121  [key=2, style=dotted];
m3_134 -> m3_139  [key=2, style=dotted];
m3_134 -> m3_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_135 -> m3_23  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_136 -> m3_24  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_147  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_137 -> m3_10  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_138 -> m3_133  [color=blue, key=0, style=bold];
m3_213 -> m3_214  [key=0, style=solid];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_15  [color=green, key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_28 -> m3_29  [color=green, key=0, style=solid];
m3_28 -> m3_30  [color=green, key=2, style=dotted];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_101  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_42  [key=2, style=dotted];
m3_131 -> m3_25  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_42  [key=2, style=dotted];
m3_147 -> m3_25  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_160 -> m3_25  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_174 -> m3_25  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_188 -> m3_25  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_205 -> m3_25  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_124 -> m3_10  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_126  [key=2, style=dotted];
m3_141 -> m3_10  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_126  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_63 -> m3_61  [color=blue, key=0, style=bold];
m3_98 -> m3_99  [key=0, style=solid];
m3_100 -> m3_98  [color=blue, key=0, style=bold];
m3_109 -> m3_110  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_129 -> m3_127  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_132 -> m3_130  [color=blue, key=0, style=bold];
m3_140 -> m3_141  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_145 -> m3_143  [color=blue, key=0, style=bold];
m3_146 -> m3_147  [key=0, style=solid];
m3_148 -> m3_146  [color=blue, key=0, style=bold];
m3_159 -> m3_160  [key=0, style=solid];
m3_161 -> m3_159  [color=blue, key=0, style=bold];
m3_169 -> m3_170  [key=0, style=solid];
m3_173 -> m3_174  [key=0, style=solid];
m3_175 -> m3_173  [color=blue, key=0, style=bold];
m3_183 -> m3_184  [key=0, style=solid];
m3_187 -> m3_188  [key=0, style=solid];
m3_189 -> m3_187  [color=blue, key=0, style=bold];
m3_196 -> m3_197  [key=0, style=solid];
m3_200 -> m3_201  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_206 -> m3_204  [color=blue, key=0, style=bold];
m3_125 -> m3_123  [color=blue, key=0, style=bold];
m3_142 -> m3_140  [color=blue, key=0, style=bold];
m3_41 -> m3_39  [color=blue, key=0, style=bold];
m3_40 -> m3_42  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_52 -> m3_50  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=2, style=dotted];
m3_110 -> m3_112  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_109  [color=blue, key=0, style=bold];
m3_171 -> m3_169  [color=blue, key=0, style=bold];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_172  [key=2, style=dotted];
m3_185 -> m3_183  [color=blue, key=0, style=bold];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_186  [key=2, style=dotted];
m3_198 -> m3_196  [color=blue, key=0, style=bold];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_199  [key=2, style=dotted];
m3_202 -> m3_200  [color=blue, key=0, style=bold];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_203  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_216  [key=2, style=dotted];
m3_215 -> m3_213  [color=blue, key=0, style=bold];
m3_80 -> m3_81  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_79  [key=2, style=dotted];
m3_86 -> m3_24  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_25  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_88 -> m3_26  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_82 -> m3_85  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_90  [key=2, style=dotted];
m3_83 -> m3_85  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_78  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_89 -> m3_80  [color=blue, key=0, style=bold];
m3_172 -> m3_224  [key=0, style=solid];
m3_224 -> m3_225  [key=0, style=solid];
m3_225 -> m3_172  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_38  [key=2, style=dotted];
m3_33 -> m3_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_34 -> m3_24  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_25  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_26  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_37 -> m3_31  [color=blue, key=0, style=bold];
m3_176 -> m3_177  [key=0, style=solid];
m3_177 -> m3_23  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_178 -> m3_24  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_188  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_179 -> m3_10  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_179 -> m3_181  [color=darkseagreen4, key=1, label=thrownException, style=dashed];
m3_180 -> m3_10  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_11  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_182 -> m3_176  [color=blue, key=0, style=bold];
m3_30 -> m3_242  [key=0, style=solid];
m3_242 -> m3_243  [key=0, style=solid];
m3_243 -> m3_30  [color=blue, key=0, style=bold];
m3_112 -> m3_104  [color=darkorchid, key=3, label="Parameter variable string[] argument", style=bold];
m3_112 -> m3_232  [key=0, style=solid];
m3_112 -> m3_233  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_232 -> m3_233  [key=0, style=solid];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_235  [key=2, style=dotted];
m3_234 -> m3_112  [color=blue, key=0, style=bold];
m3_199 -> m3_236  [key=0, style=solid];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_238  [key=2, style=dotted];
m3_237 -> m3_199  [color=blue, key=0, style=bold];
m3_226 -> m3_227  [key=0, style=solid];
m3_227 -> m3_120  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_228 -> m3_226  [color=blue, key=0, style=bold];
m3_42 -> m3_217  [key=0, style=solid];
m3_217 -> m3_218  [key=0, style=solid];
m3_218 -> m3_42  [color=blue, key=0, style=bold];
m3_254 -> m3_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_18  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_19  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_105  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_147  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_166  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_205  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_208  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_210  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_254 -> m3_251  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", style=dashed];
m3_255 -> m3_131  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_256 -> m3_147  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_257 -> m3_160  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_258 -> m3_174  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_259 -> m3_188  [color=darkseagreen4, key=1, label=performer, style=dashed];
m3_260 -> m3_205  [color=darkseagreen4, key=1, label=performer, style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m4_8 -> m4_12  [color=green, key=1, label=IRedisTransaction, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [color=green, key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_12 -> m4_15  [color=green, key=2, style=dotted];
m4_12 -> m4_20  [color=green, key=1, label="lambda expression", style=dashed];
m4_10 -> m4_13  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_13 -> m4_8  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_3  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_16  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_21 -> m4_23  [color=green, key=2, style=dotted];
m4_21 -> m4_24  [color=green, key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_25 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_12  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m4_25 -> m4_21  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m5_14 -> m5_15  [color=green, key=0, style=solid];
m5_15 -> m5_16  [color=green, key=0, style=solid];
m5_15 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_0  [color=green, key=2, style=dotted];
m5_17 -> m5_14  [color=blue, key=0, style=bold];
m5_57 -> m5_58  [color=green, key=0, style=solid];
m5_58 -> m5_59  [color=green, key=0, style=solid];
m5_58 -> m5_43  [color=green, key=2, style=dotted];
m5_59 -> m5_60  [color=green, key=0, style=solid];
m5_59 -> m5_22  [color=green, key=2, style=dotted];
m5_60 -> m5_61  [color=green, key=0, style=solid];
m5_60 -> m5_30  [color=green, key=2, style=dotted];
m5_61 -> m5_62  [color=green, key=0, style=solid];
m5_61 -> m5_66  [color=green, key=2, style=dotted];
m5_62 -> m5_63  [color=green, key=0, style=solid];
m5_62 -> m5_44  [color=green, key=2, style=dotted];
m5_63 -> m5_64  [color=green, key=0, style=solid];
m5_63 -> m5_35  [color=green, key=2, style=dotted];
m5_64 -> m5_65  [color=green, key=0, style=solid];
m5_64 -> m5_26  [color=green, key=2, style=dotted];
m5_65 -> m5_57  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [color=green, key=0, style=solid];
m5_27 -> m5_28  [color=green, key=0, style=solid];
m5_27 -> m5_29  [color=green, key=2, style=dotted];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_10 -> m5_13  [color=green, key=2, style=dotted];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_12 -> m5_9  [color=blue, key=0, style=bold];
m5_67 -> m5_68  [color=green, key=0, style=solid];
m5_68 -> m5_69  [color=green, key=0, style=solid];
m5_68 -> m5_43  [color=green, key=2, style=dotted];
m5_69 -> m5_70  [color=green, key=0, style=solid];
m5_69 -> m5_22  [color=green, key=2, style=dotted];
m5_70 -> m5_71  [color=green, key=0, style=solid];
m5_70 -> m5_30  [color=green, key=2, style=dotted];
m5_71 -> m5_72  [color=green, key=0, style=solid];
m5_71 -> m5_66  [color=green, key=2, style=dotted];
m5_72 -> m5_73  [color=green, key=0, style=solid];
m5_72 -> m5_35  [color=green, key=2, style=dotted];
m5_73 -> m5_74  [color=green, key=0, style=solid];
m5_73 -> m5_44  [color=green, key=2, style=dotted];
m5_74 -> m5_75  [color=green, key=0, style=solid];
m5_74 -> m5_26  [color=green, key=2, style=dotted];
m5_75 -> m5_67  [color=blue, key=0, style=bold];
m5_36 -> m5_37  [color=green, key=0, style=solid];
m5_37 -> m5_38  [color=green, key=0, style=solid];
m5_37 -> m5_43  [color=green, key=2, style=dotted];
m5_38 -> m5_39  [color=green, key=0, style=solid];
m5_38 -> m5_22  [color=green, key=2, style=dotted];
m5_39 -> m5_40  [color=green, key=0, style=solid];
m5_39 -> m5_30  [color=green, key=2, style=dotted];
m5_40 -> m5_41  [color=green, key=0, style=solid];
m5_40 -> m5_44  [color=green, key=2, style=dotted];
m5_41 -> m5_42  [color=green, key=0, style=solid];
m5_41 -> m5_26  [color=green, key=2, style=dotted];
m5_42 -> m5_36  [color=blue, key=0, style=bold];
m5_45 -> m5_46  [color=green, key=0, style=solid];
m5_46 -> m5_47  [color=green, key=0, style=solid];
m5_46 -> m5_43  [color=green, key=2, style=dotted];
m5_47 -> m5_48  [color=green, key=0, style=solid];
m5_47 -> m5_22  [color=green, key=2, style=dotted];
m5_48 -> m5_49  [color=green, key=0, style=solid];
m5_48 -> m5_30  [color=green, key=2, style=dotted];
m5_49 -> m5_50  [color=green, key=0, style=solid];
m5_49 -> m5_55  [color=green, key=2, style=dotted];
m5_49 -> m5_51  [color=green, key=1, label=table1, style=dashed];
m5_49 -> m5_52  [color=green, key=1, label=table1, style=dashed];
m5_50 -> m5_51  [color=green, key=0, style=solid];
m5_50 -> m5_56  [color=green, key=2, style=dotted];
m5_51 -> m5_52  [color=green, key=0, style=solid];
m5_51 -> m5_56  [color=green, key=2, style=dotted];
m5_52 -> m5_53  [color=green, key=0, style=solid];
m5_52 -> m5_44  [color=green, key=2, style=dotted];
m5_53 -> m5_54  [color=green, key=0, style=solid];
m5_53 -> m5_26  [color=green, key=2, style=dotted];
m5_54 -> m5_45  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [color=green, key=0, style=solid];
m5_19 -> m5_20  [color=green, key=0, style=solid];
m5_19 -> m5_21  [color=green, key=2, style=dotted];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [color=green, key=0, style=solid];
m5_22 -> m5_37  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_22 -> m5_46  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_22 -> m5_58  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_22 -> m5_68  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_25  [color=green, key=2, style=dotted];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [color=green, key=0, style=solid];
m5_31 -> m5_32  [color=green, key=0, style=solid];
m5_31 -> m5_34  [color=green, key=2, style=dotted];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_32 -> m5_35  [color=green, key=2, style=dotted];
m5_33 -> m5_30  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_0 -> m5_16  [color=green, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_5  [color=green, key=2, style=dotted];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_2 -> m5_6  [color=green, key=2, style=dotted];
m5_2 -> m5_7  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_3 -> m5_8  [color=green, key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_76 -> m5_38  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_39  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_41  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_47  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_48  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_53  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_59  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_60  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_64  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_69  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_70  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m5_76 -> m5_74  [color=green, key=1, label="HangFire.Tests.States.EnqueuedStateFeature", style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_9  [key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_10 -> m6_13  [color=green, key=1, label=IRedisTransaction, style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_13 -> m6_14  [color=green, key=0, style=solid];
m6_13 -> m6_16  [color=green, key=2, style=dotted];
m6_13 -> m6_17  [color=green, key=1, label="lambda expression", style=dashed];
m6_11 -> m6_13  [color=green, key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_12 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_10  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_17 -> m6_18  [color=green, key=0, style=solid];
m6_18 -> m6_19  [color=green, key=0, style=solid];
m6_18 -> m6_20  [color=green, key=2, style=dotted];
m6_18 -> m6_21  [color=green, key=2, style=dotted];
m6_19 -> m6_17  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_29 -> m6_27  [color=blue, key=0, style=bold];
m6_22 -> m6_25  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_25 -> m6_16  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_23 -> m6_25  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_15  [key=2, style=dotted];
m6_24 -> m6_26  [key=0, style=solid];
m6_26 -> m6_22  [color=blue, key=0, style=bold];
m6_31 -> m6_13  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m6_31 -> m6_18  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m6_31 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m6_31 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m6_32 -> m6_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_36 -> m7_37  [color=green, key=0, style=solid];
m7_37 -> m7_38  [color=green, key=0, style=solid];
m7_37 -> m7_23  [color=green, key=2, style=dotted];
m7_37 -> m7_40  [color=green, key=1, label="lambda expression", style=dashed];
m7_38 -> m7_39  [color=green, key=0, style=solid];
m7_38 -> m7_24  [color=green, key=2, style=dotted];
m7_39 -> m7_36  [color=blue, key=0, style=bold];
m7_63 -> m7_64  [color=green, key=0, style=solid];
m7_64 -> m7_65  [color=green, key=0, style=solid];
m7_64 -> m7_56  [color=green, key=2, style=dotted];
m7_65 -> m7_66  [color=green, key=0, style=solid];
m7_65 -> m7_57  [color=green, key=2, style=dotted];
m7_66 -> m7_67  [color=green, key=0, style=solid];
m7_66 -> m7_69  [color=green, key=2, style=dotted];
m7_66 -> m7_58  [color=green, key=2, style=dotted];
m7_66 -> m7_70  [color=green, key=1, label="lambda expression", style=dashed];
m7_67 -> m7_68  [color=green, key=0, style=solid];
m7_67 -> m7_69  [color=green, key=2, style=dotted];
m7_67 -> m7_58  [color=green, key=2, style=dotted];
m7_67 -> m7_73  [color=green, key=1, label="lambda expression", style=dashed];
m7_68 -> m7_63  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_23  [color=green, key=2, style=dotted];
m7_20 -> m7_25  [color=green, key=1, label="lambda expression", style=dashed];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_24  [color=green, key=2, style=dotted];
m7_22 -> m7_19  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_8  [color=green, key=2, style=dotted];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_9  [color=green, key=2, style=dotted];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_10  [color=green, key=2, style=dotted];
m7_4 -> m7_5  [color=green, key=0, style=solid];
m7_4 -> m7_11  [color=green, key=2, style=dotted];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_12  [color=green, key=2, style=dotted];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_13  [color=green, key=2, style=dotted];
m7_6 -> m7_14  [color=green, key=2, style=dotted];
m7_6 -> m7_15  [color=green, key=1, label="lambda expression", style=dashed];
m7_7 -> m7_0  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [color=green, key=0, style=solid];
m7_78 -> m7_79  [color=green, key=0, style=solid];
m7_78 -> m7_86  [color=green, key=2, style=dotted];
m7_78 -> m7_83  [color=green, key=1, label=component1, style=dashed];
m7_79 -> m7_80  [color=green, key=0, style=solid];
m7_79 -> m7_13  [color=green, key=2, style=dotted];
m7_79 -> m7_87  [color=green, key=2, style=dotted];
m7_79 -> m7_88  [color=green, key=1, label="lambda expression", style=dashed];
m7_79 -> m7_92  [color=green, key=1, label="lambda expression", style=dashed];
m7_83 -> m7_84  [color=green, key=0, style=solid];
m7_83 -> m7_58  [color=green, key=2, style=dotted];
m7_83 -> m7_96  [color=green, key=1, label="lambda expression", style=dashed];
m7_80 -> m7_81  [color=green, key=0, style=solid];
m7_80 -> m7_86  [color=green, key=2, style=dotted];
m7_80 -> m7_84  [color=green, key=1, label=component2, style=dashed];
m7_82 -> m7_83  [color=green, key=0, style=solid];
m7_82 -> m7_57  [color=green, key=2, style=dotted];
m7_84 -> m7_85  [color=green, key=0, style=solid];
m7_84 -> m7_58  [color=green, key=2, style=dotted];
m7_84 -> m7_99  [color=green, key=1, label="lambda expression", style=dashed];
m7_81 -> m7_82  [color=green, key=0, style=solid];
m7_81 -> m7_56  [color=green, key=2, style=dotted];
m7_85 -> m7_77  [color=blue, key=0, style=bold];
m7_56 -> m7_111  [color=green, key=0, style=solid];
m7_111 -> m7_112  [color=green, key=0, style=solid];
m7_111 -> m7_28  [color=green, key=2, style=dotted];
m7_112 -> m7_56  [color=blue, key=0, style=bold];
m7_86 -> m7_113  [color=green, key=0, style=solid];
m7_113 -> m7_114  [color=green, key=0, style=solid];
m7_113 -> m7_117  [color=green, key=2, style=dotted];
m7_113 -> m7_115  [color=green, key=1, label=mock, style=dashed];
m7_114 -> m7_115  [color=green, key=0, style=solid];
m7_114 -> m7_118  [color=green, key=2, style=dotted];
m7_115 -> m7_116  [color=green, key=0, style=solid];
m7_116 -> m7_86  [color=blue, key=0, style=bold];
m7_102 -> m7_103  [color=green, key=0, style=solid];
m7_103 -> m7_104  [color=green, key=0, style=solid];
m7_103 -> m7_56  [color=green, key=2, style=dotted];
m7_104 -> m7_105  [color=green, key=0, style=solid];
m7_104 -> m7_57  [color=green, key=2, style=dotted];
m7_105 -> m7_106  [color=green, key=0, style=solid];
m7_105 -> m7_58  [color=green, key=2, style=dotted];
m7_105 -> m7_107  [color=green, key=1, label="lambda expression", style=dashed];
m7_106 -> m7_102  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_30 -> m7_23  [color=green, key=2, style=dotted];
m7_30 -> m7_33  [color=green, key=1, label="lambda expression", style=dashed];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_31 -> m7_24  [color=green, key=2, style=dotted];
m7_32 -> m7_29  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_52 -> m7_56  [color=green, key=2, style=dotted];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_53 -> m7_57  [color=green, key=2, style=dotted];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_54 -> m7_58  [color=green, key=2, style=dotted];
m7_54 -> m7_59  [color=green, key=1, label="lambda expression", style=dashed];
m7_55 -> m7_51  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_45 -> m7_46  [color=green, key=0, style=solid];
m7_45 -> m7_23  [color=green, key=2, style=dotted];
m7_45 -> m7_48  [color=green, key=1, label="lambda expression", style=dashed];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_46 -> m7_24  [color=green, key=2, style=dotted];
m7_47 -> m7_44  [color=blue, key=0, style=bold];
m7_107 -> m7_108  [color=green, key=0, style=solid];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_16 -> m7_18  [color=green, key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_28  [color=green, key=2, style=dotted];
m7_27 -> m7_25  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_34 -> m7_28  [color=green, key=2, style=dotted];
m7_35 -> m7_33  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_41 -> m7_42  [color=green, key=0, style=solid];
m7_41 -> m7_43  [color=green, key=2, style=dotted];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m7_48 -> m7_49  [color=green, key=0, style=solid];
m7_49 -> m7_50  [color=green, key=0, style=solid];
m7_49 -> m7_28  [color=green, key=2, style=dotted];
m7_50 -> m7_48  [color=blue, key=0, style=bold];
m7_59 -> m7_60  [color=green, key=0, style=solid];
m7_60 -> m7_61  [color=green, key=0, style=solid];
m7_60 -> m7_62  [color=green, key=2, style=dotted];
m7_61 -> m7_59  [color=blue, key=0, style=bold];
m7_70 -> m7_71  [color=green, key=0, style=solid];
m7_73 -> m7_74  [color=green, key=0, style=solid];
m7_71 -> m7_72  [color=green, key=0, style=solid];
m7_71 -> m7_18  [color=green, key=2, style=dotted];
m7_72 -> m7_70  [color=blue, key=0, style=bold];
m7_74 -> m7_75  [color=green, key=0, style=solid];
m7_74 -> m7_76  [color=green, key=2, style=dotted];
m7_75 -> m7_73  [color=blue, key=0, style=bold];
m7_88 -> m7_89  [color=green, key=0, style=solid];
m7_92 -> m7_93  [color=green, key=0, style=solid];
m7_96 -> m7_97  [color=green, key=0, style=solid];
m7_99 -> m7_100  [color=green, key=0, style=solid];
m7_89 -> m7_90  [color=green, key=0, style=solid];
m7_89 -> m7_23  [color=green, key=2, style=dotted];
m7_89 -> m7_91  [color=green, key=2, style=dotted];
m7_90 -> m7_88  [color=blue, key=0, style=bold];
m7_93 -> m7_94  [color=green, key=0, style=solid];
m7_93 -> m7_95  [color=green, key=2, style=dotted];
m7_94 -> m7_92  [color=blue, key=0, style=bold];
m7_97 -> m7_98  [color=green, key=0, style=solid];
m7_97 -> m7_91  [color=green, key=2, style=dotted];
m7_98 -> m7_96  [color=blue, key=0, style=bold];
m7_100 -> m7_101  [color=green, key=0, style=solid];
m7_100 -> m7_91  [color=green, key=2, style=dotted];
m7_101 -> m7_99  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [color=green, key=0, style=solid];
m7_108 -> m7_110  [color=green, key=2, style=dotted];
m7_109 -> m7_107  [color=blue, key=0, style=bold];
m7_119 -> m7_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_3  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_4  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_5  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_6  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_30  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_37  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_41  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_45  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_49  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_52  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_53  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_54  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_60  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_64  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_65  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_66  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_67  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_83  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_80  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_81  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_84  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_82  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_97  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_100  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_103  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_104  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_105  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_111  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m7_119 -> m7_114  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m8_0 -> m8_0  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_21  [key=2, style=dotted];
m8_5 -> m8_7  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_9  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_12  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_15  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_5 -> m8_16  [color=darkseagreen4, key=1, label=transaction, style=dashed];
}
