digraph  {
m2_5 [cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs", label="_context = new ElectStateContext(_stateContext, _failedState, CurrentState, _connection.Object)", span="25-25"];
m2_6 [cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="19-19"];
m2_7 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m2_0 [cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="19-19"];
m2_1 [cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs", label="var job = Job.FromExpression(() => Sample())", span="21-21"];
m2_2 [cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs", label="_stateContext = new StateContext(JobId, job)", span="22-22"];
m2_9 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27"];
m2_21 [cluster="Unk.SetRangeInHash", file="BackgroundProcessExtensions.cs", label="Entry Unk.SetRangeInHash", span=""];
m2_41 [cluster="Unk.Same", file="BackgroundProcessExtensions.cs", label="Entry Unk.Same", span=""];
m2_57 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71"];
m2_58 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="var filter = new RetryAttribute(1)", span="73-73"];
m2_59 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="var state = new Mock<IState>()", span="74-74"];
m2_61 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="filter.OnStateElection(context)", span="77-77"];
m2_60 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="var context = new ElectStateContext(_stateContext, state.Object, CurrentState, _connection.Object)", span="75-75"];
m2_62 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="Assert.Same(state.Object, context.CandidateState)", span="79-79"];
m2_63 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71"];
m2_64 [cluster="Mock<IState>.cstr", file="BackgroundProcessExtensions.cs", label="Entry Mock<IState>.cstr", span=""];
m2_40 [cluster="HangFire.RetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.RetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="51-51"];
m2_8 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m2_22 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="55-55"];
m2_23 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsAllPropertyValuesCorrectly()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsAllPropertyValuesCorrectly()", span="36-36"];
m2_24 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsAllPropertyValuesCorrectly()", file="BackgroundProcessExtensions.cs", label="var filter = new RetryAttribute(175)", span="38-38"];
m2_18 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="BackgroundProcessExtensions.cs", label="var filter = new RetryAttribute()", span="31-31"];
m2_3 [cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs", label="_failedState = new FailedState(new InvalidOperationException())", span="23-23"];
m2_14 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Sample()", span="21-21"];
m2_15 [cluster="lambda expression", color=green, community=0, file="BackgroundProcessExtensions.cs", label="Exit lambda expression", prediction=0, span="21-21"];
m2_12 [cluster="ElectStateContext.cstr", file="BackgroundProcessExtensions.cs", label="Entry ElectStateContext.cstr", span=""];
m2_13 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Entry lambda expression", span="21-21"];
m2_16 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Sample()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.Sample()", span="93-93"];
m2_25 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66"];
m2_26 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="68-70"];
m2_20 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="29-29"];
m2_10 [cluster="System.InvalidOperationException.InvalidOperationException()", file="BackgroundProcessExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m2_11 [cluster="Mock<IStorageConnection>.cstr", file="BackgroundProcessExtensions.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m2_31 [cluster="Unk.>", file="BackgroundProcessExtensions.cs", label="Entry Unk.>", span=""];
m2_77 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Sample()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.Sample()", span="93-93"];
m2_30 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="43-43"];
m2_35 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49"];
m2_36 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs", label="var filter = new RetryAttribute(0)", span="51-51"];
m2_37 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs", label="filter.OnStateElection(_context)", span="52-52"];
m2_38 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs", label="Assert.Same(_failedState, _context.CandidateState)", span="54-54"];
m2_39 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49"];
m2_4 [cluster="Unk.Given", file="BackgroundProcessExtensions.cs", label="Entry Unk.Given", span=""];
m2_19 [cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="BackgroundProcessExtensions.cs", label="Assert.Equal(10, filter.Attempts)", span="32-32"];
m2_76 [cluster="Unk.GetJobParameter", file="BackgroundProcessExtensions.cs", label="Entry Unk.GetJobParameter", span=""];
m2_17 [cluster="Unk.AddItemToList", file="BackgroundProcessExtensions.cs", label="Entry Unk.AddItemToList", span=""];
m2_71 [cluster="Unk.Setup", file="BackgroundProcessExtensions.cs", label="Entry Unk.Setup", span=""];
m2_73 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Entry lambda expression", span="85-85"];
m2_32 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Entry lambda expression", span="45-45"];
m2_33 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="new RetryAttribute(-1)", span="45-45"];
m2_34 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Exit lambda expression", span="45-45"];
m2_53 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Entry lambda expression", span="67-67"];
m2_54 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="x.SetJobParameter(JobId, ''RetryCount'', ''1'')", span="67-67"];
m2_55 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Exit lambda expression", span="67-67"];
m2_74 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="x.GetJobParameter(JobId, ''RetryCount'')", span="85-85"];
m2_75 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Exit lambda expression", span="85-85"];
m2_65 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83"];
m2_66 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="85-85"];
m2_67 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs", label="var filter = new RetryAttribute(1)", span="86-86"];
m2_68 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs", label="filter.OnStateElection(_context)", span="88-88"];
m2_69 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs", label="Assert.Same(_failedState, _context.CandidateState)", span="90-90"];
m2_70 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83"];
m2_51 [cluster="Unk.Contains", file="BackgroundProcessExtensions.cs", label="Entry Unk.Contains", span=""];
m2_52 [cluster="Unk.Verify", file="BackgroundProcessExtensions.cs", label="Entry Unk.Verify", span=""];
m2_42 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58"];
m2_43 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="var filter = new RetryAttribute(1)", span="60-60"];
m2_44 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="filter.OnStateElection(_context)", span="61-61"];
m2_45 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="Assert.IsType<ScheduledState>(_context.CandidateState)", span="63-63"];
m2_46 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="Assert.True(((ScheduledState)_context.CandidateState).EnqueueAt > DateTime.UtcNow)", span="64-64"];
m2_47 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="Assert.Contains(''1 of 1'', _context.CandidateState.Reason)", span="65-65"];
m2_48 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="_connection.Verify(x => x.SetJobParameter(JobId, ''RetryCount'', ''1''))", span="67-67"];
m2_49 [cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58"];
m2_28 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66"];
m2_29 [cluster="Unk.GetValueFromHash", file="BackgroundProcessExtensions.cs", label="Entry Unk.GetValueFromHash", span=""];
m2_50 [cluster="Unk.True", file="BackgroundProcessExtensions.cs", label="Entry Unk.True", span=""];
m2_72 [cluster="Unk.Returns", file="BackgroundProcessExtensions.cs", label="Entry Unk.Returns", span=""];
m2_27 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs", label="Assert.AreEqual(state, jobState)", span="72-72"];
m2_56 [cluster="Unk.SetJobParameter", file="BackgroundProcessExtensions.cs", label="Entry Unk.SetJobParameter", span=""];
m2_78 [file="BackgroundProcessExtensions.cs", label="HangFire.Core.Tests.RetryAttributeFacts", span=""];
m4_6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36"];
m4_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="BootstrapperConfigurationExtensions.cs", label="_transaction.Dispose()", span="38-38"];
m4_8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36"];
m4_128 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="152-152"];
m4_126 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m4_127 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="151-151"];
m4_129 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m4_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BootstrapperConfigurationExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_90 [cluster="Unk.EnqueueItemOnList", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m4_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BootstrapperConfigurationExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_156 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m4_157 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="175-176"];
m4_158 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m4_78 [cluster="Unk.SetRangeInHash", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.SetRangeInHash", span=""];
m4_111 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="141-141"];
m4_109 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m4_110 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="140-140"];
m4_112 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m4_169 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m4_170 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="188-189"];
m4_171 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m4_55 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95"];
m4_53 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m4_54 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92"];
m4_56 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="97-97"];
m4_57 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="storedData.Add(''State'', state.Name)", span="98-98"];
m4_58 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="state.Reason != null", span="100-100"];
m4_59 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="storedData.Add(''Reason'', state.Reason)", span="102-102"];
m4_60 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="105-107"];
m4_61 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="AddJobState(jobId, state)", span="109-109"];
m4_62 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m4_70 [cluster="Unk.SetEntryInHash", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.SetEntryInHash", span=""];
m4_98 [cluster="Unk.AddItemToSet", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.AddItemToSet", span=""];
m4_30 [cluster="string.Format(string, object)", file="BootstrapperConfigurationExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_74 [cluster="Unk.RemoveEntry", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.RemoveEntry", span=""];
m4_108 [cluster="Unk.IncrementValue", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.IncrementValue", span=""];
m4_38 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m4_39 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80"];
m4_40 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82"];
m4_41 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84"];
m4_42 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m4_31 [cluster="Unk.ExpireEntryIn", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.ExpireEntryIn", span=""];
m4_142 [cluster="Unk.AddItemToSortedSet", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m4_119 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m4_120 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="146-146"];
m4_121 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m4_136 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m4_137 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="157-158"];
m4_138 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m4_149 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m4_150 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="169-170"];
m4_151 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m4_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="BootstrapperConfigurationExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_9 [cluster="Unk.Dispose", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Dispose", span=""];
m4_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m4_11 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="!_transaction.Commit()", span="43-43"];
m4_12 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="int replayCount = 1", span="49-49"];
m4_13 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="int maxReplayCount = 3", span="50-50"];
m4_15 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="replayCount++ >= maxReplayCount", span="54-54"];
m4_14 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="!_transaction.Replay()", span="52-52"];
m4_16 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56"];
m4_17 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m4_64 [cluster="HangFire.States.State.SerializeData()", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.States.State.SerializeData()", span="27-27"];
m4_172 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="188-189"];
m4_28 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66"];
m4_33 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70"];
m4_36 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74"];
m4_27 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="64-66"];
m4_32 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="68-70"];
m4_35 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="72-74"];
m4_29 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="64-66"];
m4_34 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="68-70"];
m4_37 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="72-74"];
m4_44 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80"];
m4_48 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82"];
m4_51 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84"];
m4_43 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="79-80"];
m4_47 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="81-82"];
m4_50 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="83-84"];
m4_45 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="79-80"];
m4_49 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="81-82"];
m4_52 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="83-84"];
m4_68 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92"];
m4_72 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95"];
m4_76 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="105-107"];
m4_67 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="89-92"];
m4_71 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="94-95"];
m4_75 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="105-107"];
m4_69 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="89-92"];
m4_73 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="94-95"];
m4_77 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="105-107"];
m4_87 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="119-121"];
m4_86 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="119-121"];
m4_88 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="119-121"];
m4_96 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="126-127"];
m4_100 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="129-130"];
m4_95 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="126-127"];
m4_99 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="129-130"];
m4_97 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="126-127"];
m4_101 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="129-130"];
m4_106 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="135-135"];
m4_105 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="135-135"];
m4_107 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="135-135"];
m4_114 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="140-140"];
m4_117 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="141-141"];
m4_113 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="140-140"];
m4_116 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="141-141"];
m4_115 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="140-140"];
m4_118 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="141-141"];
m4_123 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="146-146"];
m4_122 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="146-146"];
m4_124 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="146-146"];
m4_131 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="151-151"];
m4_134 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="152-152"];
m4_130 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="151-151"];
m4_133 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="152-152"];
m4_132 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="151-151"];
m4_135 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="152-152"];
m4_140 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="157-158"];
m4_139 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="157-158"];
m4_141 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="157-158"];
m4_147 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="163-164"];
m4_146 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="163-164"];
m4_148 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="163-164"];
m4_153 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="169-170"];
m4_152 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="169-170"];
m4_154 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="169-170"];
m4_160 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="175-176"];
m4_159 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="175-176"];
m4_161 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="175-176"];
m4_166 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="181-182"];
m4_165 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="181-182"];
m4_167 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="181-182"];
m4_173 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="188-189"];
m4_174 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="188-189"];
m4_85 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m4_143 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m4_144 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="163-164"];
m4_145 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m4_102 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m4_103 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="135-135"];
m4_104 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m4_168 [cluster="Unk.RemoveItemFromList", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.RemoveItemFromList", span=""];
m4_24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74"];
m4_21 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m4_22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66"];
m4_23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70"];
m4_25 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m4_91 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m4_92 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="126-127"];
m4_93 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="129-130"];
m4_94 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m4_89 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m4_46 [cluster="Unk.Persist", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Persist", span=""];
m4_18 [cluster="Unk.Commit", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Commit", span=""];
m4_66 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112"];
m4_79 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="114-114"];
m4_80 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="storedData.Add(''State'', state.Name)", span="115-115"];
m4_81 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="storedData.Add(''Reason'', state.Reason)", span="116-116"];
m4_83 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="119-121"];
m4_82 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="117-117"];
m4_84 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112"];
m4_19 [cluster="Unk.Replay", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Replay", span=""];
m4_20 [cluster="RedisException.cstr", file="BootstrapperConfigurationExtensions.cs", label="Entry RedisException.cstr", span=""];
m4_26 [cluster="Unk.QueueCommand", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.QueueCommand", span=""];
m4_125 [cluster="Unk.DecrementValue", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.DecrementValue", span=""];
m4_175 [cluster="Unk.TrimList", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.TrimList", span=""];
m4_162 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m4_163 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BootstrapperConfigurationExtensions.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="181-182"];
m4_164 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m4_155 [cluster="Unk.RemoveItemFromSortedSet", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m4_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m4_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs", label="transaction == null", span="31-31"];
m4_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs", label="_transaction = transaction", span="33-33"];
m4_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs", label="throw new ArgumentNullException(''transaction'');", span="31-31"];
m4_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m4_176 [file="BootstrapperConfigurationExtensions.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m4_177 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_178 [file="BootstrapperConfigurationExtensions.cs", label="System.TimeSpan", span=""];
m4_179 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_180 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_181 [file="BootstrapperConfigurationExtensions.cs", label="HangFire.States.State", span=""];
m4_182 [file="BootstrapperConfigurationExtensions.cs", label=storedData, span=""];
m4_183 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_184 [file="BootstrapperConfigurationExtensions.cs", label=storedData, span=""];
m4_185 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_186 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_187 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_188 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_189 [file="BootstrapperConfigurationExtensions.cs", label="System.TimeSpan", span=""];
m4_190 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_191 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_192 [file="BootstrapperConfigurationExtensions.cs", label="System.TimeSpan", span=""];
m4_193 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_194 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_195 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_196 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_197 [file="BootstrapperConfigurationExtensions.cs", label=double, span=""];
m4_198 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_199 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_200 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_201 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_202 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_203 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_204 [file="BootstrapperConfigurationExtensions.cs", label=string, span=""];
m4_205 [file="BootstrapperConfigurationExtensions.cs", label=int, span=""];
m4_206 [file="BootstrapperConfigurationExtensions.cs", label=int, span=""];
m5_0 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m5_1 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43"];
m5_2 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m5_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DashboardOwinExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_24 [cluster="Unk.>", file="DashboardOwinExtensions.cs", label="Entry Unk.>", span=""];
m5_7 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m5_10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94"];
m5_11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m5_20 [cluster="Unk.Map", file="DashboardOwinExtensions.cs", label="Entry Unk.Map", span=""];
m5_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m5_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app == null", span="115-115"];
m5_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="SignatureConversions.AddConversions(app)", span="117-117"];
m5_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123"];
m5_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="throw new ArgumentNullException(''app'');", span="115-115"];
m5_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m5_4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m5_5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58"];
m5_6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m5_3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m5_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75"];
m5_9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m5_19 [cluster="Unk.AddConversions", file="DashboardOwinExtensions.cs", label="Entry Unk.AddConversions", span=""];
m5_21 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="119-123"];
m5_22 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123"];
m5_23 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="119-123"];
m5_25 [file="DashboardOwinExtensions.cs", label=string, span=""];
m5_26 [file="DashboardOwinExtensions.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m5_27 [file="DashboardOwinExtensions.cs", label="Hangfire.JobStorage", span=""];
m6_26 [cluster="Unk.GetTestJob", file="IBootstrapperConfiguration.cs", label="Entry Unk.GetTestJob", span=""];
m6_375 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445"];
m6_376 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="447-458"];
m6_377 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445"];
m6_78 [cluster="Mock<IState>.cstr", file="IBootstrapperConfiguration.cs", label="Entry Mock<IState>.cstr", span=""];
m6_248 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m6_432 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520"];
m6_433 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="522-533"];
m6_434 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520"];
m6_348 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m6_12 [cluster="Unk.UseConnection", file="IBootstrapperConfiguration.cs", label="Entry Unk.UseConnection", span=""];
m6_299 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345"];
m6_300 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="347-358"];
m6_301 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345"];
m6_82 [cluster="Unk.Equal", file="IBootstrapperConfiguration.cs", label="Entry Unk.Equal", span=""];
m6_286 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m6_179 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m6_96 [cluster="Unk.SetJobState", file="IBootstrapperConfiguration.cs", label="Entry Unk.SetJobState", span=""];
m6_409 [cluster="Unk.ToArray", file="IBootstrapperConfiguration.cs", label="Entry Unk.ToArray", span=""];
m6_235 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264"];
m6_236 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="266-275"];
m6_237 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264"];
m6_34 [cluster="Unk.ExpireJob", file="IBootstrapperConfiguration.cs", label="Entry Unk.ExpireJob", span=""];
m6_3 [cluster="Unk.>", file="IBootstrapperConfiguration.cs", label="Entry Unk.>", span=""];
m6_131 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m6_132 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149"];
m6_133 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m6_444 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537"];
m6_445 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="539-550"];
m6_446 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537"];
m6_473 [cluster="System.Action<T>.Invoke(T)", file="IBootstrapperConfiguration.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m6_145 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m6_146 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="IBootstrapperConfiguration.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156"];
m6_147 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m6_399 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479"];
m6_400 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="481-497"];
m6_401 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479"];
m6_417 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193"];
m6_22 [cluster="Unk.Query", file="IBootstrapperConfiguration.cs", label="Entry Unk.Query", span=""];
m6_148 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m6_149 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="162-171"];
m6_150 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m6_33 [cluster="System.TimeSpan.FromDays(double)", file="IBootstrapperConfiguration.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_97 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m6_98 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111"];
m6_99 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135"];
m6_100 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m6_206 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227"];
m6_207 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="229-243"];
m6_208 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227"];
m6_205 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m6_222 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m6_27 [cluster="System.DateTime.AddDays(double)", file="IBootstrapperConfiguration.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_0 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m6_1 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="IBootstrapperConfiguration.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18"];
m6_2 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m6_24 [cluster="Unk.ToString", file="IBootstrapperConfiguration.cs", label="Entry Unk.ToString", span=""];
m6_130 [cluster="Unk.AddJobState", file="IBootstrapperConfiguration.cs", label="Entry Unk.AddJobState", span=""];
m6_223 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247"];
m6_224 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="249-260"];
m6_225 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247"];
m6_48 [cluster="Unk.NotNull", file="IBootstrapperConfiguration.cs", label="Entry Unk.NotNull", span=""];
m6_387 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462"];
m6_388 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="464-475"];
m6_389 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462"];
m6_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IBootstrapperConfiguration.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_162 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175"];
m6_163 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="177-191"];
m6_164 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175"];
m6_311 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m6_25 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578"];
m6_474 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="582-582"];
m6_475 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs", label="action(transaction)", span="584-584"];
m6_476 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs", label="transaction.Commit()", span="585-585"];
m6_477 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578"];
m6_79 [cluster="Unk.Setup", file="IBootstrapperConfiguration.cs", label="Entry Unk.Setup", span=""];
m6_324 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379"];
m6_325 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="381-392"];
m6_326 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379"];
m6_29 [cluster="Unk.Null", file="IBootstrapperConfiguration.cs", label="Entry Unk.Null", span=""];
m6_374 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186"];
m6_180 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195"];
m6_181 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="197-208"];
m6_182 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195"];
m6_92 [cluster="Unk.SerializeData", file="IBootstrapperConfiguration.cs", label="Entry Unk.SerializeData", span=""];
m6_478 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m6_361 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427"];
m6_362 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="429-441"];
m6_363 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427"];
m6_35 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m6_36 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m6_37 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m6_38 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m6_273 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313"];
m6_274 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="315-324"];
m6_275 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313"];
m6_464 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="558-562"];
m6_4 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="18-18"];
m6_5 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="new SqlServerWriteOnlyTransaction(null)", span="18-18"];
m6_6 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="18-18"];
m6_14 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31"];
m6_15 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32"];
m6_13 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="29-41"];
m6_16 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34"];
m6_17 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var job = GetTestJob(sql, jobId)", span="36-36"];
m6_19 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39"];
m6_31 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34"];
m6_30 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="34-34"];
m6_18 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37"];
m6_20 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(anotherJob.ExpireAt)", span="40-40"];
m6_21 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="29-41"];
m6_32 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="34-34"];
m6_40 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m6_41 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m6_39 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="52-64"];
m6_42 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="57-57"];
m6_43 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m6_45 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m6_50 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.PersistJob(jobId)", span="57-57"];
m6_49 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="57-57"];
m6_44 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(job.ExpireAt)", span="60-60"];
m6_46 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63"];
m6_47 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="52-64"];
m6_51 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="57-57"];
m6_58 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m6_59 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m6_57 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="75-102"];
m6_64 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86"];
m6_65 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var job = GetTestJob(sql, jobId)", span="88-88"];
m6_68 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92"];
m6_71 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96"];
m6_94 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.SetJobState(jobId, state.Object)", span="86-86"];
m6_72 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97"];
m6_60 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var state = new Mock<IState>()", span="80-80"];
m6_61 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="81-81"];
m6_62 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82"];
m6_63 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84"];
m6_83 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="81-81"];
m6_86 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="82-82"];
m6_89 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="83-83"];
m6_93 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="86-86"];
m6_66 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''State'', job.StateName)", span="89-89"];
m6_67 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.NotNull(job.StateId)", span="90-90"];
m6_69 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(anotherJob.StateName)", span="93-93"];
m6_70 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(anotherJob.StateId)", span="94-94"];
m6_73 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''State'', jobState.Name)", span="98-98"];
m6_74 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99"];
m6_75 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.NotNull(jobState.CreatedAt)", span="100-100"];
m6_76 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101"];
m6_77 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="75-102"];
m6_84 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.Name", span="81-81"];
m6_85 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="81-81"];
m6_87 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.Reason", span="82-82"];
m6_88 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="82-82"];
m6_90 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.SerializeData()", span="83-83"];
m6_91 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="83-83"];
m6_95 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="86-86"];
m6_102 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115"];
m6_101 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="113-135"];
m6_107 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123"];
m6_108 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var job = GetTestJob(sql, jobId)", span="125-125"];
m6_111 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129"];
m6_103 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var state = new Mock<IState>()", span="117-117"];
m6_128 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddJobState(jobId, state.Object)", span="123-123"];
m6_112 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130"];
m6_104 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="118-118"];
m6_105 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="119-119"];
m6_106 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="120-121"];
m6_118 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="118-118"];
m6_121 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="119-119"];
m6_124 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="120-120"];
m6_127 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="123-123"];
m6_109 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(job.StateName)", span="126-126"];
m6_110 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(job.StateId)", span="127-127"];
m6_113 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''State'', jobState.Name)", span="131-131"];
m6_114 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132"];
m6_115 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.NotNull(jobState.CreatedAt)", span="133-133"];
m6_116 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134"];
m6_117 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="113-135"];
m6_119 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.Name", span="118-118"];
m6_120 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="118-118"];
m6_122 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.Reason", span="119-119"];
m6_123 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="119-119"];
m6_125 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.SerializeData()", span="120-120"];
m6_126 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="120-120"];
m6_129 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="123-123"];
m6_134 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="141-149"];
m6_135 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143"];
m6_136 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145"];
m6_141 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="143-143"];
m6_137 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146"];
m6_138 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''default'', record.Queue)", span="147-147"];
m6_139 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Null(record.FetchedAt)", span="148-148"];
m6_140 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="141-149"];
m6_142 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToQueue(''default'', ''1'')", span="143-143"];
m6_143 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="143-143"];
m6_151 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="162-171"];
m6_152 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164"];
m6_153 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166"];
m6_158 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="164-164"];
m6_154 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="168-168"];
m6_155 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, record.Value)", span="169-169"];
m6_156 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="170-170"];
m6_157 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="162-171"];
m6_159 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.IncrementCounter(''my-key'')", span="164-164"];
m6_160 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="164-164"];
m6_165 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="177-191"];
m6_166 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="179-179"];
m6_167 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="181-181"];
m6_176 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="179-179"];
m6_168 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="183-183"];
m6_169 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, record.Value)", span="184-184"];
m6_170 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.NotNull(record.ExpireAt)", span="185-185"];
m6_171 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var expireAt = (DateTime) record.ExpireAt", span="187-187"];
m6_172 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="189-189"];
m6_173 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="190-190"];
m6_174 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="177-191"];
m6_177 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="179-179"];
m6_178 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="179-179"];
m6_183 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="197-208"];
m6_184 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="199-203"];
m6_185 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="205-205"];
m6_188 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="199-203"];
m6_186 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(2, recordCount)", span="207-207"];
m6_187 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="197-208"];
m6_189 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.IncrementCounter(''my-key'')", span="201-201"];
m6_190 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.IncrementCounter(''my-key'')", span="202-202"];
m6_191 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="199-203"];
m6_195 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="214-223"];
m6_196 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="216-216"];
m6_197 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="218-218"];
m6_202 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="216-216"];
m6_198 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="220-220"];
m6_199 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(-1, record.Value)", span="221-221"];
m6_200 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="222-222"];
m6_201 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="214-223"];
m6_203 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.DecrementCounter(''my-key'')", span="216-216"];
m6_204 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="216-216"];
m6_209 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="229-243"];
m6_210 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="231-231"];
m6_211 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="233-233"];
m6_219 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="231-231"];
m6_212 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="235-235"];
m6_213 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(-1, record.Value)", span="236-236"];
m6_214 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.NotNull(record.ExpireAt)", span="237-237"];
m6_215 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var expireAt = (DateTime)record.ExpireAt", span="239-239"];
m6_216 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="241-241"];
m6_217 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="242-242"];
m6_218 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="229-243"];
m6_220 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="231-231"];
m6_221 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="231-231"];
m6_226 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="249-260"];
m6_227 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="251-255"];
m6_228 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="257-257"];
m6_231 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="251-255"];
m6_229 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(2, recordCount)", span="259-259"];
m6_230 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="249-260"];
m6_232 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.DecrementCounter(''my-key'')", span="253-253"];
m6_233 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.DecrementCounter(''my-key'')", span="254-254"];
m6_234 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="251-255"];
m6_238 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="266-275"];
m6_239 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="268-268"];
m6_240 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="270-270"];
m6_245 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="268-268"];
m6_241 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="272-272"];
m6_242 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-value'', record.Value)", span="273-273"];
m6_243 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(0.0, record.Score, 2)", span="274-274"];
m6_244 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="266-275"];
m6_246 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="268-268"];
m6_247 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="268-268"];
m6_252 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="281-292"];
m6_253 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="283-287"];
m6_254 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="289-289"];
m6_257 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="283-287"];
m6_255 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(2, recordCount)", span="291-291"];
m6_256 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="281-292"];
m6_258 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="285-285"];
m6_259 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="286-286"];
m6_260 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="283-287"];
m6_264 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="298-309"];
m6_265 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="300-304"];
m6_266 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="306-306"];
m6_269 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="300-304"];
m6_267 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, recordCount)", span="308-308"];
m6_268 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="298-309"];
m6_270 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="302-302"];
m6_271 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="303-303"];
m6_272 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="300-304"];
m6_276 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="315-324"];
m6_277 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="317-317"];
m6_278 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="319-319"];
m6_283 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="317-317"];
m6_279 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="321-321"];
m6_280 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-value'', record.Value)", span="322-322"];
m6_281 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(3.2, record.Score, 3)", span="323-323"];
m6_282 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="315-324"];
m6_284 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="317-317"];
m6_285 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="317-317"];
m6_290 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="330-341"];
m6_291 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="332-336"];
m6_292 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="338-338"];
m6_295 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="332-336"];
m6_293 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(3.2, record.Score, 3)", span="340-340"];
m6_294 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="330-341"];
m6_296 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="334-334"];
m6_297 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="335-335"];
m6_298 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="332-336"];
m6_302 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="347-358"];
m6_303 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="349-353"];
m6_304 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="355-355"];
m6_307 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="349-353"];
m6_305 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(0, recordCount)", span="357-357"];
m6_306 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="347-358"];
m6_308 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="351-351"];
m6_309 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="352-352"];
m6_310 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="349-353"];
m6_315 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="364-375"];
m6_316 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="366-370"];
m6_317 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="372-372"];
m6_320 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="366-370"];
m6_318 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, recordCount)", span="374-374"];
m6_319 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="364-375"];
m6_321 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="368-368"];
m6_322 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="369-369"];
m6_323 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="366-370"];
m6_327 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="381-392"];
m6_328 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="383-387"];
m6_329 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="389-389"];
m6_332 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="383-387"];
m6_330 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, recordCount)", span="391-391"];
m6_331 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="381-392"];
m6_333 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="385-385"];
m6_334 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="386-386"];
m6_335 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="383-387"];
m6_339 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="398-406"];
m6_340 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="400-400"];
m6_341 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="402-402"];
m6_345 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="400-400"];
m6_342 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-key'', record.Key)", span="404-404"];
m6_343 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''my-value'', record.Value)", span="405-405"];
m6_344 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="398-406"];
m6_346 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="400-400"];
m6_347 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="400-400"];
m6_352 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="412-423"];
m6_353 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="414-418"];
m6_354 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="420-420"];
m6_357 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="414-418"];
m6_355 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(2, recordCount)", span="422-422"];
m6_356 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="412-423"];
m6_358 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="416-416"];
m6_359 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="417-417"];
m6_360 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="414-418"];
m6_364 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="429-441"];
m6_365 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="431-436"];
m6_366 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="438-438"];
m6_369 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="431-436"];
m6_367 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(0, recordCount)", span="440-440"];
m6_368 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="429-441"];
m6_370 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="433-433"];
m6_371 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="434-434"];
m6_372 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="435-435"];
m6_373 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="431-436"];
m6_378 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="447-458"];
m6_379 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="449-453"];
m6_380 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="455-455"];
m6_383 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="449-453"];
m6_381 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, recordCount)", span="457-457"];
m6_382 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="447-458"];
m6_384 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="451-451"];
m6_385 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="452-452"];
m6_386 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="449-453"];
m6_390 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="464-475"];
m6_391 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="466-470"];
m6_392 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="472-472"];
m6_395 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="466-470"];
m6_393 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, recordCount)", span="474-474"];
m6_394 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="464-475"];
m6_396 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="468-468"];
m6_397 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="469-469"];
m6_398 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="466-470"];
m6_402 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="481-497"];
m6_403 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="483-490"];
m6_404 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="492-492"];
m6_410 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="483-490"];
m6_405 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(2, records.Length)", span="494-494"];
m6_406 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''1'', records[0].Value)", span="495-495"];
m6_407 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(''2'', records[1].Value)", span="496-496"];
m6_408 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="481-497"];
m6_411 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''0'')", span="485-485"];
m6_412 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''1'')", span="486-486"];
m6_413 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''2'')", span="487-487"];
m6_414 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''3'')", span="488-488"];
m6_415 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.TrimList(''my-key'', 1, 2)", span="489-489"];
m6_416 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="483-490"];
m6_421 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="503-516"];
m6_422 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="505-511"];
m6_423 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="513-513"];
m6_426 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="505-511"];
m6_424 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(2, recordCount)", span="515-515"];
m6_425 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="503-516"];
m6_427 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''0'')", span="507-507"];
m6_428 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''1'')", span="508-508"];
m6_429 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''2'')", span="509-509"];
m6_430 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.TrimList(''my-key'', 1, 100)", span="510-510"];
m6_431 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="505-511"];
m6_435 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="522-533"];
m6_436 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="524-528"];
m6_437 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="530-530"];
m6_440 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="524-528"];
m6_438 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(0, recordCount)", span="532-532"];
m6_439 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="522-533"];
m6_441 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''0'')", span="526-526"];
m6_442 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.TrimList(''my-key'', 1, 100)", span="527-527"];
m6_443 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="524-528"];
m6_447 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="539-550"];
m6_448 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="541-545"];
m6_449 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547"];
m6_452 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="541-545"];
m6_450 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(0, recordCount)", span="549-549"];
m6_451 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="539-550"];
m6_453 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''0'')", span="543-543"];
m6_454 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.TrimList(''my-key'', 1, 0)", span="544-544"];
m6_455 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="541-545"];
m6_459 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Entry lambda expression", span="556-567"];
m6_460 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="558-562"];
m6_461 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="564-564"];
m6_462 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Assert.Equal(1, recordCount)", span="566-566"];
m6_463 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="556-567"];
m6_465 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.InsertToList(''my-key'', ''0'')", span="560-560"];
m6_466 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="x.TrimList(''another-key'', 1, 0)", span="561-561"];
m6_467 [cluster="lambda expression", file="IBootstrapperConfiguration.cs", label="Exit lambda expression", span="558-562"];
m6_312 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362"];
m6_313 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="364-375"];
m6_314 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362"];
m6_261 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296"];
m6_262 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="298-309"];
m6_263 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296"];
m6_468 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570"];
m6_469 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs", label="var connection = ConnectionUtils.CreateConnection()", span="572-572"];
m6_470 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs", label="action(connection)", span="574-574"];
m6_471 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570"];
m6_175 [cluster="System.DateTime.AddHours(double)", file="IBootstrapperConfiguration.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m6_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m6_456 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554"];
m6_457 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="556-567"];
m6_458 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554"];
m6_23 [cluster="Unk.Single", file="IBootstrapperConfiguration.cs", label="Entry Unk.Single", span=""];
m6_8 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m6_9 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27"];
m6_10 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41"];
m6_11 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m6_53 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m6_54 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m6_55 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102"];
m6_56 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m6_28 [cluster="Unk.True", file="IBootstrapperConfiguration.cs", label="Entry Unk.True", span=""];
m6_349 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410"];
m6_350 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="412-423"];
m6_351 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410"];
m6_144 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m6_472 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m6_161 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m6_418 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501"];
m6_419 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="503-516"];
m6_420 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501"];
m6_80 [cluster="Unk.Returns", file="IBootstrapperConfiguration.cs", label="Entry Unk.Returns", span=""];
m6_249 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279"];
m6_250 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="281-292"];
m6_251 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279"];
m6_52 [cluster="Unk.PersistJob", file="IBootstrapperConfiguration.cs", label="Entry Unk.PersistJob", span=""];
m6_287 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328"];
m6_288 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="330-341"];
m6_289 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328"];
m6_336 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396"];
m6_337 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="398-406"];
m6_338 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396"];
m6_192 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212"];
m6_193 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="IBootstrapperConfiguration.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="214-223"];
m6_194 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212"];
m6_479 [file="IBootstrapperConfiguration.cs", label="HangFire.SqlServer.Tests.WriteTransactionFacts", span=""];
m6_480 [file="IBootstrapperConfiguration.cs", label=arrangeSql, span=""];
m6_481 [file="IBootstrapperConfiguration.cs", label=jobId, span=""];
m6_482 [file="IBootstrapperConfiguration.cs", label=arrangeSql, span=""];
m6_483 [file="IBootstrapperConfiguration.cs", label=jobId, span=""];
m6_484 [file="IBootstrapperConfiguration.cs", label=arrangeSql, span=""];
m6_485 [file="IBootstrapperConfiguration.cs", label=jobId, span=""];
m6_486 [file="IBootstrapperConfiguration.cs", label=state, span=""];
m6_487 [file="IBootstrapperConfiguration.cs", label=arrangeSql, span=""];
m6_488 [file="IBootstrapperConfiguration.cs", label=jobId, span=""];
m6_489 [file="IBootstrapperConfiguration.cs", label=state, span=""];
m7_19 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
m7_74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
m7_20 [cluster="Unk.Same", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Same", span=""];
m7_30 [cluster="System.TimeSpan.FromMilliseconds(double)", file="InfiniteLoopComponentFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m7_14 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
m7_18 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
m7_72 [cluster="Unk.Equal", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Equal", span=""];
m7_55 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m7_41 [cluster="System.Threading.Thread.Sleep(int)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_9 [cluster="Unk.>", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.>", span=""];
m7_6 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
m7_7 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs", label="Assert.Throws<ArgumentNullException>(() => new InfiniteLoopProcess(null))", span="22-22"];
m7_8 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
m7_21 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m7_27 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m7_70 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m7_13 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m7_45 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32"];
m7_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m7_3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m7_71 [cluster="Unk.ToString", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.ToString", span=""];
m7_28 [cluster="Unk.Setup", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Setup", span=""];
m7_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_4 [cluster="Mock<IServerComponent>.cstr", file="InfiniteLoopComponentFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m7_59 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="61-61"];
m7_10 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="22-22"];
m7_11 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="new InfiniteLoopProcess(null)", span="22-22"];
m7_12 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="22-22"];
m7_34 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="37-37"];
m7_38 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="38-38"];
m7_42 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="44-44"];
m7_46 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="47-47"];
m7_36 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="37-37"];
m7_39 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Thread.Sleep(5)", span="38-38"];
m7_40 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="38-38"];
m7_44 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="44-44"];
m7_48 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="47-47"];
m7_56 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="58-58"];
m7_58 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="58-58"];
m7_61 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="61-61"];
m7_65 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m7_69 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m7_49 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m7_54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m7_31 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
m7_32 [cluster="Unk.AtLeast", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.AtLeast", span=""];
m7_62 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m7_64 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m7_75 [cluster="InfiniteLoopProcess.cstr", file="InfiniteLoopComponentFacts.cs", label="Entry InfiniteLoopProcess.cstr", span=""];
m7_37 [cluster="Unk.Execute", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Execute", span=""];
m7_29 [cluster="Unk.Callback", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Callback", span=""];
m7_33 [cluster="Unk.Verify", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Verify", span=""];
m7_76 [file="InfiniteLoopComponentFacts.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m7_77 [file="InfiniteLoopComponentFacts.cs", label=component, span=""];
m7_78 [file="InfiniteLoopComponentFacts.cs", label=component, span=""];
m9_5 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20"];
m9_6 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="22-22"];
m9_7 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs", label="Given(''the job was dequeued'')", span="23-23"];
m9_8 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20"];
m9_4 [cluster="Unk.Given", file="OwinBootstrapper.cs", label="Entry Unk.Given", span=""];
m9_17 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40"];
m9_18 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs", label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="42-42"];
m9_19 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="43-45"];
m9_20 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40"];
m9_29 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59"];
m9_30 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="61-62"];
m9_31 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="64-64"];
m9_32 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59"];
m9_23 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50"];
m9_24 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="52-53"];
m9_25 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="55-55"];
m9_26 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50"];
m9_33 [cluster="Unk.DoesNotContain", file="OwinBootstrapper.cs", label="Entry Unk.DoesNotContain", span=""];
m9_22 [cluster="Unk.AddItemToList", file="OwinBootstrapper.cs", label="Entry Unk.AddItemToList", span=""];
m9_10 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27"];
m9_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs", label="Given(''a job'')", span="29-29"];
m9_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="30-30"];
m9_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27"];
m9_14 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34"];
m9_15 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="OwinBootstrapper.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="36-36"];
m9_16 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34"];
m9_0 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="13-13"];
m9_1 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs", label="Given(''a job'')", span="15-15"];
m9_2 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs", label="Given(''the job was dequeued'')", span="16-16"];
m9_3 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="13-13"];
m9_21 [cluster="Unk.AddItemToSet", file="OwinBootstrapper.cs", label="Entry Unk.AddItemToSet", span=""];
m9_27 [cluster="Unk.GetAllItemsFromList", file="OwinBootstrapper.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m9_9 [cluster="string.Format(string, object)", file="OwinBootstrapper.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_28 [cluster="Unk.Contains", file="OwinBootstrapper.cs", label="Entry Unk.Contains", span=""];
m10_39 [cluster="System.TimeSpan.FromMilliseconds(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m10_62 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="96-96"];
m10_63 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs", label=_queues, span="98-98"];
m10_64 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs", label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="100-100"];
m10_65 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="96-96"];
m10_56 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="89-89"];
m10_57 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs", label="Assert.IsNotNull(_exception)", span="91-91"];
m10_58 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(typeof(OperationCanceledException).Name, _exception.GetType().Name)", span="92-92"];
m10_59 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="89-89"];
m10_3 [cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_41 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m10_34 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m10_10 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34"];
m10_11 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="table.Rows", prediction=1, span="36-36"];
m10_16 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", prediction=2, span="44-44"];
m10_12 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", label="var i = 0", span="38-38"];
m10_13 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", label="i < int.Parse(row[''Jobs''])", span="38-38"];
m10_15 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", label="i++", span="38-38"];
m10_17 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34"];
m10_0 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="22-22"];
m10_1 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Given(String.Format(''the fetcher listening the '{0}' queue'', QueueSteps.DefaultQueue))", prediction=3, span="24-24"];
m10_2 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="22-22"];
m10_9 [cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m10_52 [cluster="Unk.AreEqual", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.AreEqual", span=""];
m10_40 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m10_18 [cluster="Unk.Parse", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Parse", span=""];
m10_5 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28"];
m10_6 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="_fetcher = new JobFetcher(RedisFactory.BasicManager, queue, TimeSpan.FromSeconds(1))", prediction=4, span="30-30"];
m10_7 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28"];
m10_48 [cluster="Unk.When", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.When", span=""];
m10_53 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="83-83"];
m10_54 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(jobId, _payload.Id)", prediction=5, span="85-85"];
m10_55 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="83-83"];
m10_32 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m10_33 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m10_25 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48"];
m10_26 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs", label="var cts = new CancellationTokenSource()", span="50-50"];
m10_27 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Task.Factory.StartNew(() =>\r\n                {\r\n                    Thread.Sleep(TimeSpan.FromMilliseconds(100)); \r\n                    cts.Cancel();\r\n                })", prediction=6, span="51-55"];
m10_28 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs", label="_payload = _fetcher.DequeueJob(cts.Token)", span="59-59"];
m10_30 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs", label="_exception = ex", span="63-63"];
m10_31 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48"];
m10_35 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="51-55"];
m10_22 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="44-44"];
m10_23 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="x[''Queue'']", prediction=7, span="44-44"];
m10_24 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="44-44"];
m10_37 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="cts.Cancel()", span="54-54"];
m10_38 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="51-55"];
m10_60 [cluster="Unk.IsNotNull", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.IsNotNull", span=""];
m10_61 [cluster="System.Exception.GetType()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Exception.GetType()", span="0-0"];
m10_20 [cluster="Unk.Select", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Select", span=""];
m10_66 [cluster="Unk.Then", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Then", span=""];
m10_4 [cluster="Unk.Given", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Given", span=""];
m10_42 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="68-68"];
m10_43 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs", label="var i = 0", span="70-70"];
m10_44 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs", label="i < count", span="70-70"];
m10_46 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs", label="i++", span="70-70"];
m10_45 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs", label="When(''it dequeues a job'')", span="72-72"];
m10_47 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="68-68"];
m10_49 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77"];
m10_50 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", prediction=5, span="79-79"];
m10_51 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77"];
m10_21 [cluster="Unk.ToList", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ToList", span=""];
m10_19 [cluster="Unk.Format", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Format", span=""];
m10_8 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m10_67 [file="RecurringJobSchedulerFacts.cs", label="HangFire.Tests.JobFetcherSteps", span=""];
m10_68 [file="RecurringJobSchedulerFacts.cs", label=cts, span=""];
m12_0 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", span="14-14"];
m12_1 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs", label="_now = new DateTime(2012, 12, 12, 12, 12, 0, DateTimeKind.Utc)", span="16-16"];
m12_2 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs", label="_schedule = CrontabSchedule.Parse(''* * * * *'')", span="17-17"];
m12_3 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs", label="_timeZone = TimeZoneInfo.Utc", span="18-18"];
m12_4 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", span="14-14"];
m12_24 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", span="40-40"];
m12_25 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new ScheduleInstant(_now, _timeZone, null))", span="42-44"];
m12_26 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs", label="Assert.Equal(''schedule'', exception.ParamName)", span="46-46"];
m12_27 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", span="40-40"];
m12_61 [cluster="System.DateTime.AddMinutes(double)", file="ScheduleInstantFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m12_7 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", span="22-22"];
m12_8 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Local), _timeZone, _schedule))", span="24-25"];
m12_9 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs", label="Assert.Equal(''nowInstant'', exception.ParamName)", span="27-27"];
m12_10 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", span="22-22"];
m12_31 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", span="50-50"];
m12_32 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs", label="_now = new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Utc)", span="52-52"];
m12_33 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs", label="var instant = CreateInstant()", span="53-53"];
m12_34 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs", label="var value = instant.NowInstant", span="55-55"];
m12_35 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs", label="Assert.Equal(new DateTime(2012, 12, 12, 12, 12, 0, DateTimeKind.Utc), value)", span="57-57"];
m12_36 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", span="50-50"];
m12_12 [cluster="Unk.Equal", file="ScheduleInstantFacts.cs", label="Entry Unk.Equal", span=""];
m12_17 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", span="31-31"];
m12_18 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Unspecified), _timeZone, _schedule))", span="33-34"];
m12_19 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs", label="Assert.Equal(''nowInstant'', exception.ParamName)", span="36-36"];
m12_20 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", span="31-31"];
m12_43 [cluster="Unk.GetNextOccurrence", file="ScheduleInstantFacts.cs", label="Entry Unk.GetNextOccurrence", span=""];
m12_16 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="32-32"];
m12_11 [cluster="Unk.>", file="ScheduleInstantFacts.cs", label="Entry Unk.>", span=""];
m12_51 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="53-53"];
m12_5 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ScheduleInstantFacts.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m12_37 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", span="115-115"];
m12_78 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", color=green, community=0, file="ScheduleInstantFacts.cs", label="return new ScheduleInstant(localTime ?? _now, _timeZone, _schedule);", prediction=9, span="117-117"];
m12_79 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", span="115-115"];
m12_63 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", span="93-93"];
m12_65 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="var instant = CreateInstant(time)", span="96-96"];
m12_64 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="var time = new DateTime(2012, 12, 12, 00, 00, 00, DateTimeKind.Utc)", span="95-95"];
m12_66 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="var matches = instant.GetNextInstants(null).ToList()", span="98-98"];
m12_68 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="Assert.Equal(time, matches[0])", span="101-101"];
m12_67 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="Assert.Equal(1, matches.Count)", span="100-100"];
m12_69 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", span="93-93"];
m12_6 [cluster="Unk.Parse", file="ScheduleInstantFacts.cs", label="Entry Unk.Parse", span=""];
m12_44 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", span="71-71"];
m12_45 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs", label="var instant = CreateInstant()", span="73-73"];
m12_46 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs", label="Assert.Throws<ArgumentException>(() => instant.GetNextInstants(DateTime.Now))", span="75-75"];
m12_47 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", span="71-71"];
m12_38 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", span="61-61"];
m12_39 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs", label="var instant = CreateInstant()", span="63-63"];
m12_41 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs", label="Assert.Equal(_schedule.GetNextOccurrence(_now), value)", span="67-67"];
m12_40 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs", label="var value = instant.NextInstant", span="65-65"];
m12_42 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", span="61-61"];
m12_52 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", span="79-79"];
m12_54 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="var instant = CreateInstant(time)", span="82-82"];
m12_53 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="var time = new DateTime(2012, 12, 12, 00, 00, 00, DateTimeKind.Utc)", span="81-81"];
m12_55 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="var matches = instant.GetNextInstants(time.AddMinutes(-3)).ToList()", span="84-84"];
m12_57 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="Assert.Equal(time.AddMinutes(-2), matches[0])", span="87-87"];
m12_58 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="Assert.Equal(time.AddMinutes(-1), matches[1])", span="88-88"];
m12_59 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="Assert.Equal(time, matches[2])", span="89-89"];
m12_56 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="Assert.Equal(3, matches.Count)", span="86-86"];
m12_60 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", span="79-79"];
m12_62 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ScheduleInstantFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m12_70 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", span="105-105"];
m12_71 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs", label="var time = new DateTime(2012, 12, 12, 00, 01, 00, DateTimeKind.Utc)", span="107-107"];
m12_72 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs", label="var instant = new ScheduleInstant(time, TimeZoneInfo.Utc, CrontabSchedule.Parse(''0 * * * *''))", span="108-108"];
m12_73 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs", label="var matches = instant.GetNextInstants(time.AddMinutes(50))", span="110-110"];
m12_74 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs", label="Assert.Empty(matches)", span="112-112"];
m12_75 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", span="105-105"];
m12_48 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Entry lambda expression", span="75-75"];
m12_14 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Local), _timeZone, _schedule)", span="25-25"];
m12_22 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Unspecified), _timeZone, _schedule)", span="34-34"];
m12_29 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="new ScheduleInstant(_now, _timeZone, null)", span="44-44"];
m12_13 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Entry lambda expression", span="25-25"];
m12_15 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Exit lambda expression", span="25-25"];
m12_21 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Entry lambda expression", span="34-34"];
m12_23 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Exit lambda expression", span="34-34"];
m12_28 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Entry lambda expression", span="44-44"];
m12_30 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Exit lambda expression", span="44-44"];
m12_49 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="instant.GetNextInstants(DateTime.Now)", span="75-75"];
m12_50 [cluster="lambda expression", file="ScheduleInstantFacts.cs", label="Exit lambda expression", span="75-75"];
m12_77 [cluster="Unk.Empty", file="ScheduleInstantFacts.cs", label="Entry Unk.Empty", span=""];
m12_76 [cluster="ScheduleInstant.cstr", file="ScheduleInstantFacts.cs", label="Entry ScheduleInstant.cstr", span=""];
m12_80 [file="ScheduleInstantFacts.cs", label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", span=""];
m12_81 [file="ScheduleInstantFacts.cs", label=instant, span=""];
m13_51 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="SchedulePollerFacts.cs", label="server.Execute(_token)", span="59-59"];
m13_56 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="61-61"];
m13_16 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="28-29"];
m13_50 [cluster="lambda expression", color=green, community=0, file="SchedulePollerFacts.cs", label="Exit lambda expression", prediction=10, span="50-51"];
m13_20 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="28-28"];
m13_39 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="64-64"];
m13_33 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="33-33"];
m13_35 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m13_34 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="33-33"];
m13_38 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m13_15 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="26-26"];
m13_19 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="28-28"];
m13_22 [cluster="Unk.>", file="SchedulePollerFacts.cs", label="Entry Unk.>", span=""];
m13_76 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82"];
m13_77 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="84-85"];
m13_78 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="86-86"];
m13_80 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="90-92"];
m13_81 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82"];
m13_43 [cluster="lambda expression", color=green, community=0, file="SchedulePollerFacts.cs", label="x.GetConnection()", prediction=11, span="50-50"];
m13_44 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47"];
m13_46 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="53-53"];
m13_47 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47"];
m13_31 [cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m13_27 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="SchedulePollerFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", prediction=12, span="40-40"];
m13_67 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m13_68 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="70-70"];
m13_70 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>()))", span="74-78"];
m13_71 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m13_75 [cluster="Unk.ChangeState", file="SchedulePollerFacts.cs", label="Entry Unk.ChangeState", span=""];
m13_58 [cluster="Unk.Execute", file="SchedulePollerFacts.cs", label="Entry Unk.Execute", span=""];
m13_59 [cluster="Unk.Verify", file="SchedulePollerFacts.cs", label="Entry Unk.Verify", span=""];
m13_26 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="31-31"];
m13_28 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="32-33"];
m13_17 [cluster="Unk.Setup", file="SchedulePollerFacts.cs", label="Entry Unk.Setup", span=""];
m13_18 [cluster="Unk.Returns", file="SchedulePollerFacts.cs", label="Entry Unk.Returns", span=""];
m13_40 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="40-41"];
m13_57 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95"];
m13_66 [cluster="Unk.Dispose", file="SchedulePollerFacts.cs", label="Entry Unk.Dispose", span=""];
m13_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="SchedulePollerFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m13_0 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m13_2 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="SchedulePollerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m13_3 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=green, community=0, file="SchedulePollerFacts.cs", label="_token = new CancellationToken(true)", prediction=13, span="20-20"];
m13_4 [cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=green, community=0, file="SchedulePollerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", prediction=10, span="22-22"];
m13_6 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27"];
m13_7 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="28-29"];
m13_9 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33"];
m13_10 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m13_24 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="31-31"];
m13_21 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="28-28"];
m13_29 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33"];
m13_30 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new ServerHeartbeat(_storage.Object, null)", span="38-38"];
m13_32 [cluster="ServerHeartbeat.cstr", file="SchedulePollerFacts.cs", label="Entry ServerHeartbeat.cstr", span=""];
m13_42 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="40-41"];
m13_48 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="50-51"];
m13_60 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", span=""];
m13_63 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="64-64"];
m13_62 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="63-63"];
m13_65 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="64-64"];
m13_72 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="74-78"];
m13_73 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>())", span="74-78"];
m13_74 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="74-78"];
m13_82 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="84-85"];
m13_88 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="91-91"];
m13_83 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="84-85"];
m13_84 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="84-85"];
m13_85 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="85-85"];
m13_86 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="85-85"];
m13_87 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="85-85"];
m13_89 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="91-91"];
m13_90 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="91-91"];
m13_12 [cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="SchedulePollerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", prediction=15, span=""];
m13_13 [cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m13_23 [cluster="Unk.Create", file="SchedulePollerFacts.cs", label="Entry Unk.Create", span=""];
m13_11 [cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m13_92 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95"];
m13_93 [file="SchedulePollerFacts.cs", label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span=""];
m14_12 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="var exception = new Exception()", prediction=16, span="25-25"];
m14_36 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m14_39 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m14_23 [cluster="Unk.>", file="ServerBootstrapperFacts.cs", label="Entry Unk.>", span=""];
m14_62 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m14_63 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="80-80"];
m14_66 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="85-85"];
m14_67 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m14_19 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m14_22 [cluster="System.Exception.Exception()", file="ServerBootstrapperFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m14_24 [cluster="CreateContext.cstr", file="ServerBootstrapperFacts.cs", label="Entry CreateContext.cstr", span=""];
m14_0 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13"];
m14_1 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, false, null))", prediction=17, span="15-16"];
m14_7 [cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26"];
m14_76 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m14_78 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="93-93"];
m14_80 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="96-96"];
m14_84 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m14_93 [cluster="System.Threading.Thread.Sleep(int)", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m14_55 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m14_110 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m14_18 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20"];
m14_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m14_113 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs", label="return mock;", span="126-126"];
m14_114 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m14_8 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20"];
m14_9 [cluster="Mock<JobStorage>.cstr", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Entry Mock<JobStorage>.cstr", prediction=18, span=""];
m14_10 [cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Entry Mock<IStorageConnection>.cstr", prediction=18, span=""];
m14_14 [cluster="Unk.Returns", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Entry Unk.Returns", prediction=18, span=""];
m14_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m14_13 [cluster="Unk.Setup", file="ServerBootstrapperFacts.cs", label="Entry Unk.Setup", span=""];
m14_15 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="28-28"];
m14_17 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="28-28"];
m14_116 [cluster="Unk.Add", file="ServerBootstrapperFacts.cs", label="Entry Unk.Add", span=""];
m14_100 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m14_101 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="109-109"];
m14_104 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m14_29 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m14_32 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m14_75 [cluster="Unk.Dispose", file="ServerBootstrapperFacts.cs", label="Entry Unk.Dispose", span=""];
m14_50 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m14_51 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="70-70"];
m14_54 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m14_28 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="TestMethod()", prediction=21, span="23-23"];
m14_115 [cluster="Mock<IServerComponent>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m14_43 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m14_46 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m14_105 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="113-113"];
m14_25 [cluster="Unk.True", file="ServerBootstrapperFacts.cs", label="Entry Unk.True", span=""];
m14_27 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="35-35"];
m14_33 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="44-44"];
m14_35 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="44-44"];
m14_40 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="53-53"];
m14_42 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="53-53"];
m14_47 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="62-62"];
m14_49 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="62-62"];
m14_58 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="74-74"];
m14_60 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="74-74"];
m14_69 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="84-84"];
m14_72 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="85-85"];
m14_71 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="84-84"];
m14_73 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="85-85"];
m14_74 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="85-85"];
m14_87 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="93-93"];
m14_90 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="93-93"];
m14_94 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="102-102"];
m14_97 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="103-103"];
m14_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="93-93"];
m14_89 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="93-93"];
m14_91 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Thread.Sleep(100)", span="93-93"];
m14_92 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="93-93"];
m14_96 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="102-102"];
m14_99 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="103-103"];
m14_107 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="113-113"];
m14_61 [cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.AnnounceServer", span=""];
m14_68 [cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m14_57 [cluster="Unk.Verify", file="ServerBootstrapperFacts.cs", label="Entry Unk.Verify", span=""];
m14_108 [cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.RemoveServer", span=""];
m14_56 [cluster="Unk.Execute", file="ServerBootstrapperFacts.cs", label="Entry Unk.Execute", span=""];
m14_86 [cluster="Unk.Callback", file="ServerBootstrapperFacts.cs", label="Entry Unk.Callback", span=""];
m14_117 [file="ServerBootstrapperFacts.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m15_15 [cluster="Unk.CreateTask", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.CreateTask", span=""];
m15_10 [cluster="Unk.>", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.>", span=""];
m15_6 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21"];
m15_9 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21"];
m15_27 [cluster="System.Threading.Tasks.Task.Wait()", file="ServerComponentExtensionsFacts.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m15_20 [cluster="System.Enum.HasFlag(System.Enum)", file="ServerComponentExtensionsFacts.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m15_21 [cluster="Unk.True", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.True", span=""];
m15_32 [cluster="Unk.Execute", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Execute", span=""];
m15_38 [cluster="Unk.Setup", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Setup", span=""];
m15_0 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14"];
m15_3 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14"];
m15_11 [cluster="Unk.Equal", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Equal", span=""];
m15_33 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="48-48"];
m15_37 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="48-48"];
m15_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerComponentExtensionsFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m15_4 [cluster="Mock<IServerComponent>.cstr", file="ServerComponentExtensionsFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m15_16 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", span="30-30"];
m15_19 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", span="30-30"];
m15_28 [cluster="Unk.Verify", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Verify", span=""];
m15_43 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="53-53"];
m15_12 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="24-24"];
m15_14 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="24-24"];
m15_29 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="44-44"];
m15_31 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="44-44"];
m15_40 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="50-50"];
m15_42 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="50-50"];
m15_45 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="53-53"];
m15_39 [cluster="Unk.DoesNotThrow", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m15_22 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="38-38"];
m15_26 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="38-38"];
m15_46 [file="ServerComponentExtensionsFacts.cs", label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", span=""];
m15_47 [file="ServerComponentExtensionsFacts.cs", label=task, span=""];
m16_9 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m16_10 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs", label="var connection = _storage.CreateAndOpenConnection()", span="53-53"];
m16_11 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs", label=ProcessedTables, span="55-55"];
m16_12 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs", label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="57-57"];
m16_15 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs", label="Exit HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m16_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerHeartbeatFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_2 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m16_7 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m16_0 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m16_1 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ServerHeartbeatFacts.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m16_20 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m16_19 [cluster="Unk.Execute", file="ServerHeartbeatFacts.cs", label="Entry Unk.Execute", span=""];
m16_21 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.SqlServer.ExpirationManager.ToString()", span="70-70"];
m16_22 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ServerHeartbeatFacts.cs", label="return ''SQL Records Expiration Manager'';", span="72-72"];
m16_23 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.SqlServer.ExpirationManager.ToString()", span="70-70"];
m16_16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
m16_17 [cluster="Unk.DebugFormat", file="ServerHeartbeatFacts.cs", label="Entry Unk.DebugFormat", span=""];
m16_18 [cluster="string.Format(string, object)", file="ServerHeartbeatFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_24 [file="ServerHeartbeatFacts.cs", label="HangFire.SqlServer.ExpirationManager", span=""];
m18_82 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m18_90 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m18_13 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs", label="Write(Request.LinkTo(''/failed/requeue''))", span="119-119"];
m18_74 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m18_75 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m18_76 [cluster="Unk.TryParse", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.TryParse", span=""];
m18_77 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m18_78 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m18_18 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table failed-table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Failed</th>\n                    <th>Job</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="158-173"];
m18_37 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs", label="Write(HtmlHelper.JobId(job.Key))", span="280-280"];
m18_38 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="WriteLiteral(''\n                            </a>\n'')", prediction=22, span="285-285"];
m18_39 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs", label="!job.Value.InFailedState", span="290-290"];
m18_40 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="296-297"];
m18_24 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs", label="Write(job.Value.InFailedState ? ''hover'' : null)", span="207-207"];
m18_0 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m18_1 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_stateData = new StateData\r\n            {\r\n                Name = ProcessingState.StateName,\r\n                Data = new Dictionary<string, string>\r\n                {\r\n                    { ''WorkerNumber'', ''1'' },\r\n                    { ''ServerId'', ''Server'' },\r\n                }\r\n            }", span="21-29"];
m18_2 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m18_3 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="32-32"];
m18_4 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_workerContextMock = new WorkerContextMock { WorkerNumber = 1 }", prediction=23, span="34-34"];
m18_5 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_workerContextMock.ServerId = ''Server''", prediction=24, span="35-35"];
m18_7 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m18_6 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_shutdownToken = new CancellationToken(false)", prediction=25, span="37-37"];
m18_8 [cluster="Hangfire.Storage.StateData.StateData()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m18_10 [cluster="Mock<IStorageConnection>.cstr", file="ServerJobCancellationTokenFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m18_17 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="32-32"];
m18_72 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="101-101"];
m18_20 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken()))", prediction=26, span="43-45"];
m18_11 [cluster="Unk.Setup", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Setup", span=""];
m18_12 [cluster="Unk.Returns", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Returns", span=""];
m18_14 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m18_15 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="32-32"];
m18_16 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="x.GetStateData(JobId)", span="32-32"];
m18_19 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m18_60 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="92-92"];
m18_21 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="47-47"];
m18_71 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="101-101"];
m18_22 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m18_23 [cluster="Unk.>", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.>", span=""];
m18_25 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="44-45"];
m18_26 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken())", prediction=22, span="44-45"];
m18_27 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="44-45"];
m18_28 [cluster="ServerJobCancellationToken.cstr", file="ServerJobCancellationTokenFacts.cs", label="Entry ServerJobCancellationToken.cstr", span=""];
m18_29 [cluster="System.Threading.CancellationToken.CancellationToken()", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m18_32 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="57-57"];
m18_30 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m18_33 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m18_31 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken()))", prediction=28, span="53-55"];
m18_34 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="54-55"];
m18_35 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken())", prediction=22, span="54-55"];
m18_36 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="54-55"];
m18_41 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="64-65"];
m18_42 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken())", prediction=22, span="64-65"];
m18_43 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="64-65"];
m18_48 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m18_44 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m18_49 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m18_45 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", prediction=31, span="73-73"];
m18_46 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(_shutdownToken, token.ShutdownToken)", prediction=22, span="74-74"];
m18_47 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m18_50 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="80-80"];
m18_51 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="82-82"];
m18_52 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m18_53 [cluster="Unk.DoesNotThrow", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m18_54 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m18_57 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="91-92"];
m18_55 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="_shutdownToken = new CancellationToken(true)", span="88-88"];
m18_58 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m18_56 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="89-89"];
m18_59 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="92-92"];
m18_62 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m18_61 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="92-92"];
m18_63 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m18_64 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", prediction=22, span="98-98"];
m18_65 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="99-99"];
m18_66 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="101-101"];
m18_67 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m18_70 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="98-98"];
m18_68 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="98-98"];
m18_69 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="x.GetStateData(It.IsAny<string>())", prediction=22, span="98-98"];
m18_73 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="101-101"];
m18_81 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="111-111"];
m18_87 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="121-121"];
m18_83 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m18_84 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m18_85 [cluster="Unk.Write", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Write", span=""];
m18_86 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m18_89 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="121-121"];
m18_79 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="111-111"];
m18_95 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="131-131"];
m18_80 [cluster="HttpRequestBase.LinkTo(string)", file="ServerJobCancellationTokenFacts.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m18_88 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m18_96 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="131-131"];
m18_97 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="131-131"];
m18_91 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m18_92 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m18_93 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="130-131"];
m18_94 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m18_98 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="return new ServerJobCancellationToken(\r\n                JobId, _connection.Object, _workerContextMock.Object, _shutdownToken);", span="136-137"];
m18_99 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m18_100 [file="ServerJobCancellationTokenFacts.cs", label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span=""];
m18_102 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m18_101 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m18_103 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m18_104 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m18_105 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m19_0 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38"];
m19_1 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Servers.Add(server)", span="42-42"];
m19_2 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="server.Start()", span="44-44"];
m19_3 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var context = new OwinContext(app.Properties)", span="46-46"];
m19_6 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token.Register(server.Dispose)", span="51-51"];
m19_4 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="47-47"];
m19_5 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token != CancellationToken.None", span="49-49"];
m19_7 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38"];
m19_11 [cluster="Unk.>", file="ServerOwinExtensions.cs", label="Entry Unk.>", span=""];
m19_12 [cluster="Unk.Register", file="ServerOwinExtensions.cs", label="Entry Unk.Register", span=""];
m19_9 [cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="123-123"];
m19_8 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m19_10 [cluster="OwinContext.cstr", file="ServerOwinExtensions.cs", label="Entry OwinContext.cstr", span=""];
m20_8 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17"];
m20_9 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ServerWatchdogFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(String.Empty))", span="19-20"];
m20_10 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17"];
m20_3 [cluster="Unk.>", file="ServerWatchdogFacts.cs", label="Entry Unk.>", span=""];
m20_31 [cluster="Unk.False", file="ServerWatchdogFacts.cs", label="Entry Unk.False", span=""];
m20_14 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24"];
m20_15 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", color=green, community=0, file="ServerWatchdogFacts.cs", label="var state = new ProcessingState(''Server1'')", prediction=35, span="26-26"];
m20_16 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", color=green, community=0, file="ServerWatchdogFacts.cs", label="Assert.Equal(ProcessingState.StateName, state.Name)", prediction=36, span="27-27"];
m20_17 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24"];
m20_27 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42"];
m20_29 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ServerWatchdogFacts.cs", label="Assert.False(state.IsFinal)", prediction=37, span="46-46"];
m20_28 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerWatchdogFacts.cs", label="var state = new ProcessingState(''server'')", span="44-44"];
m20_30 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42"];
m20_25 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ServerWatchdogFacts.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="41-41"];
m20_18 [cluster="Unk.Equal", file="ServerWatchdogFacts.cs", label="Entry Unk.Equal", span=""];
m20_19 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31"];
m20_20 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs", label="var state = new ProcessingState(''Server1'')", span="33-33"];
m20_22 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.StartedAt), data[''StartedAt''])", span="37-37"];
m20_23 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs", label="Assert.Equal(''Server1'', state.ServerName)", span="38-38"];
m20_21 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs", label="var data = state.SerializeData()", span="35-35"];
m20_24 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31"];
m20_7 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ServerWatchdogFacts.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m20_11 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="20-20"];
m20_4 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="13-13"];
m20_5 [cluster="lambda expression", color=green, community=0, file="ServerWatchdogFacts.cs", label="new ProcessingState(null)", prediction=38, span="13-13"];
m20_6 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="13-13"];
m20_12 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="new ProcessingState(String.Empty)", span="20-20"];
m20_13 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="20-20"];
m20_26 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m20_0 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerWatchdogFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10"];
m20_1 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", color=green, community=0, file="ServerWatchdogFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", prediction=39, span="12-13"];
m20_2 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerWatchdogFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10"];
m22_92 [cluster="Unk.GetTimeToLive", file="WorkerContextFacts.cs", label="Entry Unk.GetTimeToLive", span=""];
m22_9 [cluster="WorkerContext.cstr", file="WorkerContextFacts.cs", label="Entry WorkerContext.cstr", span=""];
m22_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21"];
m22_3 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="WorkerContextFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m22_105 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="144-144"];
m22_106 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="146-151"];
m22_107 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs", label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="153-159"];
m22_108 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="144-144"];
m22_144 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="WorkerContextFacts.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m22_126 [cluster="Unk.SortedSetContainsItem", file="WorkerContextFacts.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m22_62 [cluster="Unk.Apply", file="WorkerContextFacts.cs", label="Entry Unk.Apply", span=""];
m22_97 [cluster="string.Format(string, params object[])", file="WorkerContextFacts.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m22_145 [cluster="System.DateTime.AddSeconds(double)", file="WorkerContextFacts.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m22_40 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs", label="Hangfire.Core.Tests.Server.WorkerContextFacts", span=""];
m22_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs", label="_stateMock.Setup(x => x.GetProperties()).Returns(\r\n                table.Rows.ToDictionary(x => x[''Name''], x => x[''Value'']))", span="65-66"];
m22_41 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs", label="Given(String.Format(''a '{0}' state'', state))", span="64-64"];
m22_43 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="62-62"];
m22_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="WorkerContextFacts.cs", label="_failedException = new InvalidOperationException(''Hello'')", span="29-29"];
m22_46 [cluster="Unk.ToDictionary", file="WorkerContextFacts.cs", label="Entry Unk.ToDictionary", span=""];
m22_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="WorkerContextFacts.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58"];
m22_160 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="233-233"];
m22_162 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs", label="Assert.AreEqual(state, job[''State''])", span="236-236"];
m22_161 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="235-235"];
m22_163 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="233-233"];
m22_180 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="261-261"];
m22_181 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="WorkerContextFacts.cs", label="_stateMock.Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)), \r\n                Times.Once)", span="263-265"];
m22_182 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="261-261"];
m22_93 [cluster="Unk.IsTrue", file="WorkerContextFacts.cs", label="Entry Unk.IsTrue", span=""];
m22_83 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="109-109"];
m22_84 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="111-116"];
m22_85 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="118-124"];
m22_86 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="109-109"];
m22_4 [cluster="Unk.>", file="WorkerContextFacts.cs", label="Entry Unk.>", span=""];
m22_6 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="17-17"];
m22_176 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="248-248"];
m22_175 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="DictionaryAssert.ContainsFollowingItems(table, history)", span="257-257"];
m22_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="250-251"];
m22_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="248-248"];
m22_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="254-254"];
m22_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Assert.IsNotNull(history, entry)", span="255-255"];
m22_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Assert.IsNotNull(entry)", span="252-252"];
m22_44 [cluster="string.Format(string, object)", file="WorkerContextFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_29 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="45-45"];
m22_104 [cluster="Unk.PopItemFromList", file="WorkerContextFacts.cs", label="Entry Unk.PopItemFromList", span=""];
m22_137 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="200-200"];
m22_140 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs", label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="205-205"];
m22_141 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="206-206"];
m22_139 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="203-203"];
m22_138 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="202-202"];
m22_142 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="200-200"];
m22_77 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="WorkerContextFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36"];
m22_121 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="175-175"];
m22_122 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs", label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="177-177"];
m22_123 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="178-178"];
m22_124 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="175-175"];
m22_17 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32"];
m22_94 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="128-128"];
m22_95 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="WorkerContextFacts.cs", label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="130-132"];
m22_96 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="128-128"];
m22_179 [cluster="Unk.>", file="WorkerContextFacts.cs", label="Entry Unk.>", span=""];
m22_143 [cluster="Unk.GetItemScoreInSortedSet", file="WorkerContextFacts.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m22_79 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="103-103"];
m22_80 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="WorkerContextFacts.cs", label="Assert.AreEqual(name, _state.StateName)", span="105-105"];
m22_81 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="103-103"];
m22_146 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="210-210"];
m22_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="216-216"];
m22_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="217-217"];
m22_149 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="214-214"];
m22_148 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="213-213"];
m22_147 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="212-212"];
m22_152 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="210-210"];
m22_82 [cluster="Unk.AreEqual", file="WorkerContextFacts.cs", label="Entry Unk.AreEqual", span=""];
m22_136 [cluster="Unk.IsFalse", file="WorkerContextFacts.cs", label="Entry Unk.IsFalse", span=""];
m22_10 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23"];
m22_12 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="28-28"];
m22_103 [cluster="Unk.GetListCount", file="WorkerContextFacts.cs", label="Entry Unk.GetListCount", span=""];
m22_22 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32"];
m22_24 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs", label="_stateMock = new Mock<JobState>(''SomeReason'')", span="54-54"];
m22_25 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs", label="_stateMock.Setup(x => x.StateName).Returns(state)", span="55-55"];
m22_26 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs", label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="56-56"];
m22_120 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m22_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="52-52"];
m22_39 [cluster="Unk.GetProperties", file="WorkerContextFacts.cs", label="Entry Unk.GetProperties", span=""];
m22_30 [cluster="Unk.Setup", file="WorkerContextFacts.cs", label="Entry Unk.Setup", span=""];
m22_20 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", color=green, community=0, file="WorkerContextFacts.cs", label="Assert.Equal(Queues, context.Queues)", prediction=40, span="37-37"];
m22_21 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="38-38"];
m22_8 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="17-17"];
m22_18 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="var context = CreateContext()", span="34-34"];
m22_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="240-240"];
m22_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="242-243"];
m22_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="240-240"];
m22_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="244-244"];
m22_27 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="45-45"];
m22_28 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new WorkerContext(null)", span="45-45"];
m22_32 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="var context = CreateContext()", span="51-51"];
m22_177 [cluster="Unk.RemoveStartFromList", file="WorkerContextFacts.cs", label="Entry Unk.RemoveStartFromList", span=""];
m22_13 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23"];
m22_14 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="26-26"];
m22_16 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="26-26"];
m22_113 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="163-163"];
m22_114 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="WorkerContextFacts.cs", label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="165-165"];
m22_115 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="163-163"];
m22_72 [cluster="Unk.Unapply", file="WorkerContextFacts.cs", label="Entry Unk.Unapply", span=""];
m22_56 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70"];
m22_58 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs", label="_state.Apply(transaction, JobSteps.DefaultJobId)", span="74-74"];
m22_57 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs", label="var transaction = Redis.Client.CreateTransaction()", span="72-72"];
m22_59 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs", label="transaction.Commit()", span="75-75"];
m22_60 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70"];
m22_87 [cluster="Unk.ForEach", file="WorkerContextFacts.cs", label="Entry Unk.ForEach", span=""];
m22_116 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="169-169"];
m22_117 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="171-171"];
m22_118 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="169-169"];
m22_164 [cluster="Unk.GetAllEntriesFromHash", file="WorkerContextFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m22_109 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="153-159"];
m22_47 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="65-65"];
m22_50 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="66-66"];
m22_53 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="66-66"];
m22_184 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="264-264"];
m22_49 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="65-65"];
m22_48 [cluster="lambda expression", file="WorkerContextFacts.cs", label="x.GetProperties()", span="65-65"];
m22_52 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="66-66"];
m22_51 [cluster="lambda expression", file="WorkerContextFacts.cs", label="x[''Name'']", span="66-66"];
m22_55 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="66-66"];
m22_54 [cluster="lambda expression", file="WorkerContextFacts.cs", label="x[''Value'']", span="66-66"];
m22_185 [cluster="lambda expression", file="WorkerContextFacts.cs", label="x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="264-264"];
m22_186 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="264-264"];
m22_187 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="264-264"];
m22_190 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="264-264"];
m22_90 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="121-123"];
m22_111 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="156-158"];
m22_37 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49"];
m22_189 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="264-264"];
m22_188 [cluster="lambda expression", file="WorkerContextFacts.cs", label="y != null", span="264-264"];
m22_192 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="264-264"];
m22_191 [cluster="lambda expression", file="WorkerContextFacts.cs", label="y == JobSteps.DefaultJobId", span="264-264"];
m22_88 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="118-124"];
m22_89 [cluster="lambda expression", file="WorkerContextFacts.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="120-120"];
m22_91 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="118-124"];
m22_110 [cluster="lambda expression", file="WorkerContextFacts.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="155-155"];
m22_112 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="153-159"];
m22_178 [cluster="Unk.IsNotNull", file="WorkerContextFacts.cs", label="Entry Unk.IsNotNull", span=""];
m22_159 [cluster="Unk.SetContainsItem", file="WorkerContextFacts.cs", label="Entry Unk.SetContainsItem", span=""];
m22_73 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96"];
m22_75 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="99-99"];
m22_74 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs", label="var stateMachine = new StateMachine(Redis.Client)", span="98-98"];
m22_76 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96"];
m22_45 [cluster="Unk.Given", file="WorkerContextFacts.cs", label="Entry Unk.Given", span=""];
m22_71 [cluster="HangFire.States.StateMachine.GetStateDescriptor(string)", file="WorkerContextFacts.cs", label="Entry HangFire.States.StateMachine.GetStateDescriptor(string)", span="26-26"];
m22_63 [cluster="Unk.Commit", file="WorkerContextFacts.cs", label="Entry Unk.Commit", span=""];
m22_125 [cluster="Unk.GetSortedSetCount", file="WorkerContextFacts.cs", label="Entry Unk.GetSortedSetCount", span=""];
m22_130 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="188-188"];
m22_131 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="WorkerContextFacts.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="190-190"];
m22_132 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="188-188"];
m22_98 [cluster="Unk.GetValue", file="WorkerContextFacts.cs", label="Entry Unk.GetValue", span=""];
m22_156 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="227-227"];
m22_157 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="WorkerContextFacts.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="229-229"];
m22_158 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="227-227"];
m22_153 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="221-221"];
m22_154 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="WorkerContextFacts.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="223-223"];
m22_155 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="221-221"];
m22_64 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80"];
m22_66 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="var descriptor = StateMachine.GetStateDescriptor(_state.StateName)", span="84-84"];
m22_65 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="var transaction = Redis.Client.CreateTransaction()", span="82-82"];
m22_67 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="descriptor != null", span="86-86"];
m22_68 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="descriptor.Unapply(transaction, JobSteps.DefaultJobId)", span="88-88"];
m22_69 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="transaction.Commit()", span="91-91"];
m22_70 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80"];
m22_169 [cluster="Unk.ContainsFollowingItems", file="WorkerContextFacts.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m22_31 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49"];
m22_133 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="194-194"];
m22_134 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="WorkerContextFacts.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="196-196"];
m22_135 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="194-194"];
m22_183 [cluster="Unk.Verify", file="WorkerContextFacts.cs", label="Entry Unk.Verify", span=""];
m22_99 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="136-136"];
m22_100 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs", label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="138-138"];
m22_101 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="139-140"];
m22_102 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="136-136"];
m22_127 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="WorkerContextFacts.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="182-182"];
m22_128 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="WorkerContextFacts.cs", label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="184-184"];
m22_129 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="WorkerContextFacts.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="182-182"];
m22_33 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="var contextCopy = new WorkerContext(context)", span="52-52"];
m22_35 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Assert.Equal(Queues, context.Queues)", span="55-55"];
m22_36 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="56-56"];
m22_61 [cluster="Unk.CreateTransaction", file="WorkerContextFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m22_119 [cluster="HangFire.States.JobState.GetProperties()", file="WorkerContextFacts.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m22_193 [file="WorkerContextFacts.cs", label="HangFire.Tests.States.StateSteps", span=""];
m23_0 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m23_2 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs", label="Queues = new[] { ''default'' }", span="12-12"];
m23_3 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs", label="WorkerNumber = 1", span="13-13"];
m23_5 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs", label="Exit Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m23_7 [cluster="lambda expression", file="WorkerContextMock.cs", label="Entry lambda expression", span="16-16"];
m23_9 [cluster="lambda expression", file="WorkerContextMock.cs", label="Exit lambda expression", span="16-16"];
m23_10 [cluster="WorkerContext.cstr", file="WorkerContextMock.cs", label="Entry WorkerContext.cstr", span=""];
m23_6 [cluster="Lazy<WorkerContext>.cstr", file="WorkerContextMock.cs", label="Entry Lazy<WorkerContext>.cstr", span=""];
m23_11 [file="WorkerContextMock.cs", label="Hangfire.Core.Tests.WorkerContextMock", span=""];
m24_5 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="WorkerFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20"];
m24_7 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", color=green, community=0, file="WorkerFacts.cs", label="Given(''the job was dequeued'')", prediction=41, span="23-23"];
m24_6 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="WorkerFacts.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="22-22"];
m24_8 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20"];
m24_4 [cluster="Unk.Given", file="WorkerFacts.cs", label="Entry Unk.Given", span=""];
m24_29 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="WorkerFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59"];
m24_30 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", color=green, community=0, file="WorkerFacts.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", prediction=42, span="61-62"];
m24_31 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="WorkerFacts.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="64-64"];
m24_32 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59"];
m24_33 [cluster="Unk.DoesNotContain", file="WorkerFacts.cs", label="Entry Unk.DoesNotContain", span=""];
m24_17 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40"];
m24_19 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="43-45"];
m24_18 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs", label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="42-42"];
m24_20 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40"];
m24_23 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50"];
m24_24 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="52-53"];
m24_25 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="55-55"];
m24_26 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50"];
m24_22 [cluster="Unk.AddItemToList", file="WorkerFacts.cs", label="Entry Unk.AddItemToList", span=""];
m24_10 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="WorkerFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27"];
m24_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", color=green, community=0, file="WorkerFacts.cs", label="Given(''a job'')", prediction=43, span="29-29"];
m24_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="WorkerFacts.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="30-30"];
m24_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27"];
m24_2 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="WorkerFacts.cs", label="Given(''the job was dequeued'')", span="16-16"];
m24_3 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="13-13"];
m24_14 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="WorkerFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34"];
m24_15 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="WorkerFacts.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="36-36"];
m24_16 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="WorkerFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34"];
m24_0 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="WorkerFacts.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23"];
m24_1 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="WorkerFacts.cs", label="Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23"];
m24_21 [cluster="Unk.AddItemToSet", file="WorkerFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m24_27 [cluster="Unk.GetAllItemsFromList", file="WorkerFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m24_9 [cluster="string.Format(string, object)", file="WorkerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m24_28 [cluster="Unk.Contains", file="WorkerFacts.cs", label="Entry Unk.Contains", span=""];
m2_1 -> m2_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_58 -> m2_61  [color=darkseagreen4, key=1, label=filter, style=dashed];
m2_59 -> m2_62  [color=darkseagreen4, key=1, label=state, style=dashed];
m2_60 -> m2_62  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_12 -> m2_15  [color=green, key=1, label=string, style=dashed];
m2_12 -> m2_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_25 -> m2_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_66 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_48 -> m2_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_78 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_38  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_78 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.RetryAttributeFacts", style=dashed];
m4_128 -> m4_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_126 -> m4_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_126 -> m4_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_126 -> m4_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_127 -> m4_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_156 -> m4_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_157 -> m4_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_111 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_109 -> m4_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_109 -> m4_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_109 -> m4_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_110 -> m4_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_169 -> m4_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_170 -> m4_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_55 -> m4_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_53 -> m4_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_53 -> m4_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_53 -> m4_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_53 -> m4_57  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m4_53 -> m4_58  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m4_53 -> m4_59  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m4_53 -> m4_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_53 -> m4_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_53 -> m4_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_54 -> m4_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_59  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_56 -> m4_60  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_56 -> m4_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_60 -> m4_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_38 -> m4_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_38 -> m4_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_38 -> m4_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_38 -> m4_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_38 -> m4_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_39 -> m4_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_41 -> m4_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_119 -> m4_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_120 -> m4_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_136 -> m4_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_137 -> m4_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_149 -> m4_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_150 -> m4_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label=maxReplayCount, style=dashed];
m4_15 -> m4_15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
m4_143 -> m4_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_144 -> m4_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_102 -> m4_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_103 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_24 -> m4_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_21 -> m4_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_21 -> m4_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_21 -> m4_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_21 -> m4_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_22 -> m4_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_23 -> m4_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_91 -> m4_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_91 -> m4_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_92 -> m4_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_93 -> m4_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_66 -> m4_80  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m4_66 -> m4_81  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m4_66 -> m4_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_66 -> m4_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_79 -> m4_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_79 -> m4_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_79 -> m4_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_79 -> m4_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_83 -> m4_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_162 -> m4_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_163 -> m4_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_176 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_14  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_39  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_40  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_54  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_55  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_60  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_61  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_83  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_92  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_93  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_110  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_111  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_128  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_137  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_144  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_150  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_157  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_163  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_176 -> m4_170  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m4_177 -> m4_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_177 -> m4_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_177 -> m4_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_178 -> m4_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_178 -> m4_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_178 -> m4_36  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_179 -> m4_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_179 -> m4_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_179 -> m4_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_180 -> m4_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_180 -> m4_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_180 -> m4_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_181 -> m4_68  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m4_182 -> m4_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_183 -> m4_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_184 -> m4_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m4_185 -> m4_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_185 -> m4_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_186 -> m4_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_187 -> m4_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_188 -> m4_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_188 -> m4_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_189 -> m4_117  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_190 -> m4_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_191 -> m4_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_191 -> m4_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_192 -> m4_134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_193 -> m4_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_194 -> m4_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_195 -> m4_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_196 -> m4_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_197 -> m4_147  [color=darkseagreen4, key=1, label=double, style=dashed];
m4_198 -> m4_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_199 -> m4_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_200 -> m4_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_201 -> m4_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_202 -> m4_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_203 -> m4_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_204 -> m4_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_205 -> m4_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_206 -> m4_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_12 -> m5_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m5_12 -> m5_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_16 -> m5_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_25 -> m5_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_26 -> m5_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m5_27 -> m5_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_376 -> m6_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_433 -> m6_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_300 -> m6_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_236 -> m6_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_132 -> m6_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_445 -> m6_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_400 -> m6_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_149 -> m6_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_99 -> m6_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_207 -> m6_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_224 -> m6_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_388 -> m6_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_163 -> m6_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_25 -> m6_475  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m6_474 -> m6_476  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_325 -> m6_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_181 -> m6_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_362 -> m6_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_37 -> m6_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_274 -> m6_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_464 -> m6_466  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_14 -> m6_16  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_14 -> m6_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_13 -> m6_16  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m6_16 -> m6_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_40 -> m6_42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_40 -> m6_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_39 -> m6_42  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m6_42 -> m6_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_58 -> m6_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_58 -> m6_94  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_58 -> m6_72  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_57 -> m6_64  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m6_64 -> m6_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_65 -> m6_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_68 -> m6_70  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m6_71 -> m6_73  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_71 -> m6_74  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_71 -> m6_75  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_71 -> m6_76  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_60 -> m6_62  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_60 -> m6_63  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_60 -> m6_64  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_60 -> m6_94  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_61 -> m6_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_62 -> m6_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_63 -> m6_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_102 -> m6_107  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_102 -> m6_128  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_102 -> m6_112  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_101 -> m6_107  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m6_107 -> m6_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_110  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_111 -> m6_113  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_111 -> m6_114  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_111 -> m6_115  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_111 -> m6_116  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m6_103 -> m6_105  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_103 -> m6_106  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_103 -> m6_107  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_103 -> m6_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_104 -> m6_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_105 -> m6_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_106 -> m6_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_135 -> m6_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_136 -> m6_138  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_136 -> m6_139  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_152 -> m6_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_153 -> m6_155  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_153 -> m6_156  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_166 -> m6_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_167 -> m6_169  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_167 -> m6_170  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_171 -> m6_173  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m6_184 -> m6_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_188 -> m6_190  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_196 -> m6_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_197 -> m6_199  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_197 -> m6_200  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_210 -> m6_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_211 -> m6_213  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_211 -> m6_214  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_215 -> m6_217  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m6_227 -> m6_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_231 -> m6_233  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_239 -> m6_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_240 -> m6_242  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_240 -> m6_243  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_253 -> m6_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_257 -> m6_259  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_265 -> m6_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_269 -> m6_271  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_277 -> m6_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_278 -> m6_280  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_278 -> m6_281  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_291 -> m6_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_295 -> m6_297  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_303 -> m6_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_307 -> m6_309  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_316 -> m6_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_320 -> m6_322  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_328 -> m6_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_332 -> m6_334  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_340 -> m6_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_341 -> m6_343  [color=darkseagreen4, key=1, label=record, style=dashed];
m6_353 -> m6_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_357 -> m6_359  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_365 -> m6_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_369 -> m6_371  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_369 -> m6_372  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_379 -> m6_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_383 -> m6_385  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_391 -> m6_395  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_395 -> m6_397  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_403 -> m6_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_404 -> m6_406  [color=darkseagreen4, key=1, label=records, style=dashed];
m6_404 -> m6_407  [color=darkseagreen4, key=1, label=records, style=dashed];
m6_410 -> m6_412  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_410 -> m6_413  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_410 -> m6_414  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_410 -> m6_415  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_422 -> m6_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_426 -> m6_428  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_426 -> m6_429  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_426 -> m6_430  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_436 -> m6_440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_440 -> m6_442  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_448 -> m6_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_452 -> m6_454  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m6_460 -> m6_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_313 -> m6_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_262 -> m6_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_468 -> m6_470  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m6_457 -> m6_459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_10 -> m6_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_55 -> m6_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_350 -> m6_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_419 -> m6_421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_250 -> m6_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_288 -> m6_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_337 -> m6_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_193 -> m6_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_479 -> m6_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_64  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_135  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_152  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_166  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_184  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_196  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_210  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_227  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_239  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_253  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_265  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_277  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_291  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_303  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_316  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_328  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_340  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_353  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_365  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_379  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_391  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_403  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_422  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_436  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_448  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_479 -> m6_460  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m6_481 -> m6_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_483 -> m6_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_485 -> m6_94  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_486 -> m6_94  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_488 -> m6_128  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_489 -> m6_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m7_7 -> m7_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_17 -> m9_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_10 -> m9_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_11 -> m10_13  [color=green, key=1, label=row, style=dashed];
m10_16 -> m10_22  [color=green, key=1, label="lambda expression", style=dashed];
m10_12 -> m10_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_15 -> m10_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_26 -> m10_37  [color=darkseagreen4, key=1, label=cts, style=dashed];
m10_27 -> m10_35  [color=green, key=1, label="lambda expression", style=dashed];
m10_42 -> m10_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_43 -> m10_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_46 -> m10_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_67 -> m10_50  [color=green, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m10_67 -> m10_54  [color=green, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m10_67 -> m10_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m10_67 -> m10_58  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m10_67 -> m10_63  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m10_68 -> m10_37  [color=darkseagreen4, key=1, label=cts, style=dashed];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_8 -> m12_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_18 -> m12_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_64 -> m12_68  [color=darkseagreen4, key=1, label=time, style=dashed];
m12_66 -> m12_68  [color=darkseagreen4, key=1, label=matches, style=dashed];
m12_45 -> m12_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m12_46 -> m12_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_53 -> m12_57  [color=darkseagreen4, key=1, label=time, style=dashed];
m12_53 -> m12_58  [color=darkseagreen4, key=1, label=time, style=dashed];
m12_53 -> m12_59  [color=darkseagreen4, key=1, label=time, style=dashed];
m12_55 -> m12_57  [color=darkseagreen4, key=1, label=matches, style=dashed];
m12_55 -> m12_58  [color=darkseagreen4, key=1, label=matches, style=dashed];
m12_55 -> m12_59  [color=darkseagreen4, key=1, label=matches, style=dashed];
m12_80 -> m12_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m12_80 -> m12_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m12_80 -> m12_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m12_80 -> m12_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m12_80 -> m12_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", style=dashed];
m12_81 -> m12_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m13_16 -> m13_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_77 -> m13_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_80 -> m13_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_70 -> m13_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_26 -> m13_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_4 -> m13_24  [color=green, key=1, label="lambda expression", style=dashed];
m13_7 -> m13_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_9 -> m13_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_29 -> m13_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_60 -> m13_4  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_50  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_60 -> m13_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_83 -> m13_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_93 -> m13_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m13_93 -> m13_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m13_93 -> m13_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m13_93 -> m13_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m13_93 -> m13_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m14_12 -> m14_15  [color=green, key=1, label=exception, style=dashed];
m14_12 -> m14_17  [color=green, key=1, label=exception, style=dashed];
m14_66 -> m14_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1 -> m14_15  [color=green, key=1, label="lambda expression", style=dashed];
m14_78 -> m14_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_78 -> m14_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_9 -> m14_14  [color=green, key=1, label=connection, style=dashed];
m14_10 -> m14_25  [color=green, key=1, label="lambda expression", style=dashed];
m14_10 -> m14_14  [color=green, key=1, label=job, style=dashed];
m14_11 -> m14_14  [color=green, key=1, label=state, style=dashed];
m14_15 -> m14_17  [color=darkseagreen4, key=1, label=context, style=dashed];
m14_117 -> m14_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m18_76 -> m18_80  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_77 -> m18_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_37 -> m18_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_37 -> m18_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_38 -> m18_41  [color=green, key=1, label="lambda expression", style=dashed];
m18_39 -> m18_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_39 -> m18_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_24 -> m18_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_24 -> m18_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_3 -> m18_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_4 -> m18_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m18_5 -> m18_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m18_7 -> m18_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m18_7 -> m18_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m18_7 -> m18_72  [color=darkseagreen4, key=1, label=pager, style=dashed];
m18_6 -> m18_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m18_20 -> m18_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_20 -> m18_25  [color=green, key=1, label="lambda expression", style=dashed];
m18_19 -> m18_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m18_60 -> m18_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m18_22 -> m18_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_22 -> m18_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_26 -> m18_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_26 -> m18_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_28 -> m18_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_28 -> m18_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_28 -> m18_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_30 -> m18_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_30 -> m18_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_33 -> m18_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_33 -> m18_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_31 -> m18_34  [color=green, key=1, label="lambda expression", style=dashed];
m18_35 -> m18_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_35 -> m18_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_42 -> m18_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_42 -> m18_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_42 -> m18_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_44 -> m18_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_44 -> m18_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_49 -> m18_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_49 -> m18_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_46 -> m18_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_46 -> m18_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_51 -> m18_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_51 -> m18_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_53 -> m18_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_53 -> m18_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_57 -> m18_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_55 -> m18_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_58 -> m18_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_58 -> m18_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_56 -> m18_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_62 -> m18_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_62 -> m18_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_64 -> m18_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_64 -> m18_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_64 -> m18_68  [color=green, key=1, label="lambda expression", style=dashed];
m18_65 -> m18_72  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_66 -> m18_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_66 -> m18_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_66 -> m18_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_68 -> m18_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_84 -> m18_88  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_85 -> m18_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_92 -> m18_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_92 -> m18_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_92 -> m18_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m18_93 -> m18_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_100 -> m18_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_35  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_38  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_42  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_46  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_64  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_100 -> m18_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m18_102 -> m18_72  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_101 -> m18_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_103 -> m18_80  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_104 -> m18_88  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_105 -> m18_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m19_0 -> m19_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m19_0 -> m19_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m19_4 -> m19_6  [color=darkseagreen4, key=1, label=token, style=dashed];
m20_9 -> m20_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_20 -> m20_22  [color=darkseagreen4, key=1, label=state, style=dashed];
m20_20 -> m20_23  [color=darkseagreen4, key=1, label=state, style=dashed];
m20_1 -> m20_4  [color=green, key=1, label="lambda expression", style=dashed];
m22_107 -> m22_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_40 -> m22_42  [color=darkseagreen4, key=1, label=Table, style=dashed];
m22_42 -> m22_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_42 -> m22_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_42 -> m22_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_160 -> m22_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_181 -> m22_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_85 -> m22_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_171 -> m22_174  [color=darkseagreen4, key=1, label=entry, style=dashed];
m22_170 -> m22_175  [color=darkseagreen4, key=1, label=Table, style=dashed];
m22_173 -> m22_175  [color=darkseagreen4, key=1, label=history, style=dashed];
m22_139 -> m22_141  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m22_149 -> m22_151  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m22_25 -> m22_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_25 -> m22_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_26 -> m22_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_23 -> m22_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_18 -> m22_20  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_18 -> m22_21  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_165 -> m22_167  [color=darkseagreen4, key=1, label=Table, style=dashed];
m22_32 -> m22_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_32 -> m22_36  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_57 -> m22_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m22_109 -> m22_111  [color=darkseagreen4, key=1, label="?", style=dashed];
m22_185 -> m22_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_185 -> m22_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_88 -> m22_90  [color=darkseagreen4, key=1, label="?", style=dashed];
m22_66 -> m22_68  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m22_65 -> m22_68  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m22_65 -> m22_69  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m22_33 -> m22_36  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m22_193 -> m22_20  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_25  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_26  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_27  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_42  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_58  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_80  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_117  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m22_193 -> m22_181  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m24_17 -> m24_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_10 -> m24_12  [color=darkseagreen4, key=1, label=string, style=dashed];
}
