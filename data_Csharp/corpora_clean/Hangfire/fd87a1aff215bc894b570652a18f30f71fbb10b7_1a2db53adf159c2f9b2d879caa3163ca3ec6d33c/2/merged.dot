digraph  {
m2_5 [label="_context = new ElectStateContext(_stateContext, _failedState, CurrentState, _connection.Object)", span="25-25", cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs"];
m2_6 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="19-19", cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs"];
m2_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundProcessExtensions.cs"];
m2_0 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="19-19", cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs"];
m2_1 [label="var job = Job.FromExpression(() => Sample())", span="21-21", cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs"];
m2_2 [label="_stateContext = new StateContext(JobId, job)", span="22-22", cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs"];
m2_9 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="BackgroundProcessExtensions.cs"];
m2_21 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="BackgroundProcessExtensions.cs"];
m2_41 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="BackgroundProcessExtensions.cs"];
m2_57 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_58 [label="var filter = new RetryAttribute(1)", span="73-73", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_59 [label="var state = new Mock<IState>()", span="74-74", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_61 [label="filter.OnStateElection(context)", span="77-77", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_60 [label="var context = new ElectStateContext(_stateContext, state.Object, CurrentState, _connection.Object)", span="75-75", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_62 [label="Assert.Same(state.Object, context.CandidateState)", span="79-79", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_63 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="BackgroundProcessExtensions.cs"];
m2_64 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundProcessExtensions.cs"];
m2_40 [label="Entry HangFire.RetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="51-51", cluster="HangFire.RetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="BackgroundProcessExtensions.cs"];
m2_8 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="BackgroundProcessExtensions.cs"];
m2_22 [label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="55-55", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="BackgroundProcessExtensions.cs"];
m2_23 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsAllPropertyValuesCorrectly()", span="36-36", cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsAllPropertyValuesCorrectly()", file="BackgroundProcessExtensions.cs"];
m2_24 [label="var filter = new RetryAttribute(175)", span="38-38", cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsAllPropertyValuesCorrectly()", file="BackgroundProcessExtensions.cs"];
m2_18 [label="var filter = new RetryAttribute()", span="31-31", cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="BackgroundProcessExtensions.cs"];
m2_3 [label="_failedState = new FailedState(new InvalidOperationException())", span="23-23", cluster="HangFire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="BackgroundProcessExtensions.cs"];
m2_14 [label="Sample()", span="21-21", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_15 [label="Exit lambda expression", span="21-21", cluster="lambda expression", color=green, community=0, file="BackgroundProcessExtensions.cs"];
m2_12 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="BackgroundProcessExtensions.cs"];
m2_13 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_16 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.Sample()", span="93-93", cluster="HangFire.Core.Tests.RetryAttributeFacts.Sample()", file="BackgroundProcessExtensions.cs"];
m2_25 [label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs"];
m2_26 [label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="68-70", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs"];
m2_20 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="29-29", cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="BackgroundProcessExtensions.cs"];
m2_10 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="BackgroundProcessExtensions.cs"];
m2_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="BackgroundProcessExtensions.cs"];
m2_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundProcessExtensions.cs"];
m2_77 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.Sample()", span="93-93", cluster="HangFire.Core.Tests.RetryAttributeFacts.Sample()", file="BackgroundProcessExtensions.cs"];
m2_30 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="43-43", cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="BackgroundProcessExtensions.cs"];
m2_35 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs"];
m2_36 [label="var filter = new RetryAttribute(0)", span="51-51", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs"];
m2_37 [label="filter.OnStateElection(_context)", span="52-52", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs"];
m2_38 [label="Assert.Same(_failedState, _context.CandidateState)", span="54-54", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs"];
m2_39 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="BackgroundProcessExtensions.cs"];
m2_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="BackgroundProcessExtensions.cs"];
m2_19 [label="Assert.Equal(10, filter.Attempts)", span="32-32", cluster="HangFire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="BackgroundProcessExtensions.cs"];
m2_76 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="BackgroundProcessExtensions.cs"];
m2_17 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="BackgroundProcessExtensions.cs"];
m2_71 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundProcessExtensions.cs"];
m2_73 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_32 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_33 [label="new RetryAttribute(-1)", span="45-45", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_34 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_53 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_54 [label="x.SetJobParameter(JobId, ''RetryCount'', ''1'')", span="67-67", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_55 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_74 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="85-85", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_75 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="BackgroundProcessExtensions.cs"];
m2_65 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs"];
m2_66 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="85-85", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs"];
m2_67 [label="var filter = new RetryAttribute(1)", span="86-86", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs"];
m2_68 [label="filter.OnStateElection(_context)", span="88-88", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs"];
m2_69 [label="Assert.Same(_failedState, _context.CandidateState)", span="90-90", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs"];
m2_70 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="BackgroundProcessExtensions.cs"];
m2_51 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundProcessExtensions.cs"];
m2_52 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundProcessExtensions.cs"];
m2_42 [label="Entry HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_43 [label="var filter = new RetryAttribute(1)", span="60-60", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_44 [label="filter.OnStateElection(_context)", span="61-61", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_45 [label="Assert.IsType<ScheduledState>(_context.CandidateState)", span="63-63", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_46 [label="Assert.True(((ScheduledState)_context.CandidateState).EnqueueAt > DateTime.UtcNow)", span="64-64", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_47 [label="Assert.Contains(''1 of 1'', _context.CandidateState.Reason)", span="65-65", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_48 [label="_connection.Verify(x => x.SetJobParameter(JobId, ''RetryCount'', ''1''))", span="67-67", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_49 [label="Exit HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58", cluster="HangFire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="BackgroundProcessExtensions.cs"];
m2_28 [label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs"];
m2_29 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="BackgroundProcessExtensions.cs"];
m2_50 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundProcessExtensions.cs"];
m2_72 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundProcessExtensions.cs"];
m2_27 [label="Assert.AreEqual(state, jobState)", span="72-72", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundProcessExtensions.cs"];
m2_56 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="BackgroundProcessExtensions.cs"];
m2_78 [label="HangFire.Core.Tests.RetryAttributeFacts", span="", file="BackgroundProcessExtensions.cs"];
m4_6 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="BootstrapperConfigurationExtensions.cs"];
m4_7 [label="_transaction.Dispose()", span="38-38", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="BootstrapperConfigurationExtensions.cs"];
m4_8 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="BootstrapperConfigurationExtensions.cs"];
m4_128 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="152-152", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_126 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_127 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="151-151", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_129 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_90 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="BootstrapperConfigurationExtensions.cs"];
m4_65 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BootstrapperConfigurationExtensions.cs"];
m4_156 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_157 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="175-176", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_158 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_78 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="BootstrapperConfigurationExtensions.cs"];
m4_111 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="141-141", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_109 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_110 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="140-140", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_112 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_169 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BootstrapperConfigurationExtensions.cs"];
m4_170 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="188-189", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BootstrapperConfigurationExtensions.cs"];
m4_171 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BootstrapperConfigurationExtensions.cs"];
m4_55 [label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_53 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_54 [label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_56 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="97-97", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_57 [label="storedData.Add(''State'', state.Name)", span="98-98", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_58 [label="state.Reason != null", span="100-100", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_59 [label="storedData.Add(''Reason'', state.Reason)", span="102-102", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_60 [label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="105-107", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_61 [label="AddJobState(jobId, state)", span="109-109", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_62 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_70 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="BootstrapperConfigurationExtensions.cs"];
m4_98 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="BootstrapperConfigurationExtensions.cs"];
m4_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BootstrapperConfigurationExtensions.cs"];
m4_74 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="BootstrapperConfigurationExtensions.cs"];
m4_108 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="BootstrapperConfigurationExtensions.cs"];
m4_38 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_39 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_40 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_41 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_42 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_31 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="BootstrapperConfigurationExtensions.cs"];
m4_142 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="BootstrapperConfigurationExtensions.cs"];
m4_119 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_120 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="146-146", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_121 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_136 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_137 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="157-158", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_138 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_149 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_150 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="169-170", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_151 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_63 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="BootstrapperConfigurationExtensions.cs"];
m4_9 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BootstrapperConfigurationExtensions.cs"];
m4_10 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_11 [label="!_transaction.Commit()", span="43-43", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_12 [label="int replayCount = 1", span="49-49", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_13 [label="int maxReplayCount = 3", span="50-50", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_15 [label="replayCount++ >= maxReplayCount", span="54-54", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_14 [label="!_transaction.Replay()", span="52-52", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_16 [label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_17 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BootstrapperConfigurationExtensions.cs"];
m4_64 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="BootstrapperConfigurationExtensions.cs"];
m4_172 [label="Entry lambda expression", span="188-189", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_28 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_33 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_36 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_27 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_32 [label="Entry lambda expression", span="68-70", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_35 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_29 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_34 [label="Exit lambda expression", span="68-70", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_37 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_44 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_48 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_51 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_43 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_47 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_50 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_45 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_49 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_52 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_68 [label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_72 [label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_76 [label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="105-107", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_67 [label="Entry lambda expression", span="89-92", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_71 [label="Entry lambda expression", span="94-95", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_75 [label="Entry lambda expression", span="105-107", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_69 [label="Exit lambda expression", span="89-92", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_73 [label="Exit lambda expression", span="94-95", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_77 [label="Exit lambda expression", span="105-107", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_87 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="119-121", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_86 [label="Entry lambda expression", span="119-121", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_88 [label="Exit lambda expression", span="119-121", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_96 [label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="126-127", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_100 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="129-130", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_95 [label="Entry lambda expression", span="126-127", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_99 [label="Entry lambda expression", span="129-130", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_97 [label="Exit lambda expression", span="126-127", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_101 [label="Exit lambda expression", span="129-130", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_106 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="135-135", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_105 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_107 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_114 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="140-140", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_117 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="141-141", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_113 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_116 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_115 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_118 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_123 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="146-146", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_122 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_124 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_131 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="151-151", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_134 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="152-152", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_130 [label="Entry lambda expression", span="151-151", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_133 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_132 [label="Exit lambda expression", span="151-151", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_135 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_140 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="157-158", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_139 [label="Entry lambda expression", span="157-158", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_141 [label="Exit lambda expression", span="157-158", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_147 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="163-164", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_146 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_148 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_153 [label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="169-170", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_152 [label="Entry lambda expression", span="169-170", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_154 [label="Exit lambda expression", span="169-170", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_160 [label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="175-176", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_159 [label="Entry lambda expression", span="175-176", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_161 [label="Exit lambda expression", span="175-176", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_166 [label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="181-182", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_165 [label="Entry lambda expression", span="181-182", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_167 [label="Exit lambda expression", span="181-182", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_173 [label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="188-189", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_174 [label="Exit lambda expression", span="188-189", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_85 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BootstrapperConfigurationExtensions.cs"];
m4_143 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BootstrapperConfigurationExtensions.cs"];
m4_144 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="163-164", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BootstrapperConfigurationExtensions.cs"];
m4_145 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BootstrapperConfigurationExtensions.cs"];
m4_102 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_103 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="135-135", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_104 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_168 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="BootstrapperConfigurationExtensions.cs"];
m4_24 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_21 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_22 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_23 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_25 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_91 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_92 [label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="126-127", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_93 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="129-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_94 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_89 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="BootstrapperConfigurationExtensions.cs"];
m4_46 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="BootstrapperConfigurationExtensions.cs"];
m4_18 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="BootstrapperConfigurationExtensions.cs"];
m4_66 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_79 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="114-114", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_80 [label="storedData.Add(''State'', state.Name)", span="115-115", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_81 [label="storedData.Add(''Reason'', state.Reason)", span="116-116", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_83 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="119-121", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_82 [label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="117-117", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_84 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="BootstrapperConfigurationExtensions.cs"];
m4_19 [label="Entry Unk.Replay", span="", cluster="Unk.Replay", file="BootstrapperConfigurationExtensions.cs"];
m4_20 [label="Entry RedisException.cstr", span="", cluster="RedisException.cstr", file="BootstrapperConfigurationExtensions.cs"];
m4_26 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="BootstrapperConfigurationExtensions.cs"];
m4_125 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="BootstrapperConfigurationExtensions.cs"];
m4_175 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="BootstrapperConfigurationExtensions.cs"];
m4_162 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_163 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="181-182", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_164 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BootstrapperConfigurationExtensions.cs"];
m4_155 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="BootstrapperConfigurationExtensions.cs"];
m4_0 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs"];
m4_1 [label="transaction == null", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs"];
m4_3 [label="_transaction = transaction", span="33-33", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs"];
m4_2 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs"];
m4_4 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BootstrapperConfigurationExtensions.cs"];
m4_176 [label="HangFire.Redis.RedisWriteOnlyTransaction", span="", file="BootstrapperConfigurationExtensions.cs"];
m4_177 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_178 [label="System.TimeSpan", span="", file="BootstrapperConfigurationExtensions.cs"];
m4_179 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_180 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_181 [label="HangFire.States.State", span="", file="BootstrapperConfigurationExtensions.cs"];
m4_182 [label=storedData, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_183 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_184 [label=storedData, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_185 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_186 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_187 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_188 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_189 [label="System.TimeSpan", span="", file="BootstrapperConfigurationExtensions.cs"];
m4_190 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_191 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_192 [label="System.TimeSpan", span="", file="BootstrapperConfigurationExtensions.cs"];
m4_193 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_194 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_195 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_196 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_197 [label=double, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_198 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_199 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_200 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_201 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_202 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_203 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_204 [label=string, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_205 [label=int, span="", file="BootstrapperConfigurationExtensions.cs"];
m4_206 [label=int, span="", file="BootstrapperConfigurationExtensions.cs"];
m5_0 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs"];
m5_1 [label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs"];
m5_2 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs"];
m5_18 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DashboardOwinExtensions.cs"];
m5_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="DashboardOwinExtensions.cs"];
m5_7 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs"];
m5_10 [label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs"];
m5_11 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs"];
m5_20 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="DashboardOwinExtensions.cs"];
m5_12 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m5_13 [label="app == null", span="115-115", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m5_15 [label="SignatureConversions.AddConversions(app)", span="117-117", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m5_16 [label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m5_14 [label="throw new ArgumentNullException(''app'');", span="115-115", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m5_17 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs"];
m5_4 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs"];
m5_5 [label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs"];
m5_6 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs"];
m5_3 [label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs"];
m5_8 [label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs"];
m5_9 [label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70", cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs"];
m5_19 [label="Entry Unk.AddConversions", span="", cluster="Unk.AddConversions", file="DashboardOwinExtensions.cs"];
m5_21 [label="Entry lambda expression", span="119-123", cluster="lambda expression", file="DashboardOwinExtensions.cs"];
m5_22 [label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123", cluster="lambda expression", file="DashboardOwinExtensions.cs"];
m5_23 [label="Exit lambda expression", span="119-123", cluster="lambda expression", file="DashboardOwinExtensions.cs"];
m5_25 [label=string, span="", file="DashboardOwinExtensions.cs"];
m5_26 [label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span="", file="DashboardOwinExtensions.cs"];
m5_27 [label="Hangfire.JobStorage", span="", file="DashboardOwinExtensions.cs"];
m6_26 [label="Entry Unk.GetTestJob", span="", cluster="Unk.GetTestJob", file="IBootstrapperConfiguration.cs"];
m6_375 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="IBootstrapperConfiguration.cs"];
m6_376 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="447-458", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="IBootstrapperConfiguration.cs"];
m6_377 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="IBootstrapperConfiguration.cs"];
m6_78 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="IBootstrapperConfiguration.cs"];
m6_248 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="IBootstrapperConfiguration.cs"];
m6_432 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs"];
m6_433 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="522-533", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs"];
m6_434 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs"];
m6_348 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="IBootstrapperConfiguration.cs"];
m6_12 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="IBootstrapperConfiguration.cs"];
m6_299 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_300 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="347-358", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_301 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_82 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="IBootstrapperConfiguration.cs"];
m6_286 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="IBootstrapperConfiguration.cs"];
m6_179 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IBootstrapperConfiguration.cs"];
m6_96 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="IBootstrapperConfiguration.cs"];
m6_409 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="IBootstrapperConfiguration.cs"];
m6_235 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_236 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="266-275", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_237 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_34 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="IBootstrapperConfiguration.cs"];
m6_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="IBootstrapperConfiguration.cs"];
m6_131 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="IBootstrapperConfiguration.cs"];
m6_132 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="IBootstrapperConfiguration.cs"];
m6_133 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="IBootstrapperConfiguration.cs"];
m6_444 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="IBootstrapperConfiguration.cs"];
m6_445 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="539-550", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="IBootstrapperConfiguration.cs"];
m6_446 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="IBootstrapperConfiguration.cs"];
m6_473 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="IBootstrapperConfiguration.cs"];
m6_145 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="IBootstrapperConfiguration.cs"];
m6_146 [label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="IBootstrapperConfiguration.cs"];
m6_147 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="IBootstrapperConfiguration.cs"];
m6_399 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="IBootstrapperConfiguration.cs"];
m6_400 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="481-497", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="IBootstrapperConfiguration.cs"];
m6_401 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="IBootstrapperConfiguration.cs"];
m6_417 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="IBootstrapperConfiguration.cs"];
m6_22 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="IBootstrapperConfiguration.cs"];
m6_148 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="IBootstrapperConfiguration.cs"];
m6_149 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="162-171", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="IBootstrapperConfiguration.cs"];
m6_150 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="IBootstrapperConfiguration.cs"];
m6_33 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="IBootstrapperConfiguration.cs"];
m6_97 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs"];
m6_98 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs"];
m6_99 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs"];
m6_100 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="IBootstrapperConfiguration.cs"];
m6_206 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m6_207 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="229-243", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m6_208 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m6_205 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="IBootstrapperConfiguration.cs"];
m6_222 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IBootstrapperConfiguration.cs"];
m6_27 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="IBootstrapperConfiguration.cs"];
m6_0 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="IBootstrapperConfiguration.cs"];
m6_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="IBootstrapperConfiguration.cs"];
m6_2 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="IBootstrapperConfiguration.cs"];
m6_24 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="IBootstrapperConfiguration.cs"];
m6_130 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="IBootstrapperConfiguration.cs"];
m6_223 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs"];
m6_224 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="249-260", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs"];
m6_225 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs"];
m6_48 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="IBootstrapperConfiguration.cs"];
m6_387 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="IBootstrapperConfiguration.cs"];
m6_388 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="464-475", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="IBootstrapperConfiguration.cs"];
m6_389 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="IBootstrapperConfiguration.cs"];
m6_81 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IBootstrapperConfiguration.cs"];
m6_162 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m6_163 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="177-191", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m6_164 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m6_311 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="IBootstrapperConfiguration.cs"];
m6_25 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs"];
m6_474 [label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="582-582", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs"];
m6_475 [label="action(transaction)", span="584-584", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs"];
m6_476 [label="transaction.Commit()", span="585-585", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs"];
m6_477 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="IBootstrapperConfiguration.cs"];
m6_79 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="IBootstrapperConfiguration.cs"];
m6_324 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="IBootstrapperConfiguration.cs"];
m6_325 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="381-392", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="IBootstrapperConfiguration.cs"];
m6_326 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="IBootstrapperConfiguration.cs"];
m6_29 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="IBootstrapperConfiguration.cs"];
m6_374 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="IBootstrapperConfiguration.cs"];
m6_180 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs"];
m6_181 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="197-208", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs"];
m6_182 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="IBootstrapperConfiguration.cs"];
m6_92 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="IBootstrapperConfiguration.cs"];
m6_478 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="IBootstrapperConfiguration.cs"];
m6_361 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_362 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="429-441", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_363 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="IBootstrapperConfiguration.cs"];
m6_35 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_36 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_37 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_38 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_273 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="IBootstrapperConfiguration.cs"];
m6_274 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="315-324", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="IBootstrapperConfiguration.cs"];
m6_275 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="IBootstrapperConfiguration.cs"];
m6_464 [label="Entry lambda expression", span="558-562", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_4 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_5 [label="new SqlServerWriteOnlyTransaction(null)", span="18-18", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_6 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_14 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_15 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_13 [label="Entry lambda expression", span="29-41", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_16 [label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_17 [label="var job = GetTestJob(sql, jobId)", span="36-36", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_19 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_31 [label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_30 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_18 [label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_20 [label="Assert.Null(anotherJob.ExpireAt)", span="40-40", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_21 [label="Exit lambda expression", span="29-41", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_32 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_40 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_41 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_39 [label="Entry lambda expression", span="52-64", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_42 [label="Commit(sql, x => x.PersistJob(jobId))", span="57-57", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_43 [label="var job = GetTestJob(sql, jobId)", span="59-59", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_45 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_50 [label="x.PersistJob(jobId)", span="57-57", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_49 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_44 [label="Assert.Null(job.ExpireAt)", span="60-60", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_46 [label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_47 [label="Exit lambda expression", span="52-64", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_51 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_58 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_59 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_57 [label="Entry lambda expression", span="75-102", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_64 [label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_65 [label="var job = GetTestJob(sql, jobId)", span="88-88", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_68 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_71 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_94 [label="x.SetJobState(jobId, state.Object)", span="86-86", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_72 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_60 [label="var state = new Mock<IState>()", span="80-80", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_61 [label="state.Setup(x => x.Name).Returns(''State'')", span="81-81", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_62 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_63 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_83 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_86 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_89 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_93 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_66 [label="Assert.Equal(''State'', job.StateName)", span="89-89", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_67 [label="Assert.NotNull(job.StateId)", span="90-90", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_69 [label="Assert.Null(anotherJob.StateName)", span="93-93", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_70 [label="Assert.Null(anotherJob.StateId)", span="94-94", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_73 [label="Assert.Equal(''State'', jobState.Name)", span="98-98", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_74 [label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_75 [label="Assert.NotNull(jobState.CreatedAt)", span="100-100", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_76 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_77 [label="Exit lambda expression", span="75-102", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_84 [label="x.Name", span="81-81", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_85 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_87 [label="x.Reason", span="82-82", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_88 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_90 [label="x.SerializeData()", span="83-83", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_91 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_95 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_102 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_101 [label="Entry lambda expression", span="113-135", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_107 [label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_108 [label="var job = GetTestJob(sql, jobId)", span="125-125", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_111 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_103 [label="var state = new Mock<IState>()", span="117-117", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_128 [label="x.AddJobState(jobId, state.Object)", span="123-123", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_112 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_104 [label="state.Setup(x => x.Name).Returns(''State'')", span="118-118", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_105 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="119-119", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_106 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="120-121", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_118 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_121 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_124 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_127 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_109 [label="Assert.Null(job.StateName)", span="126-126", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_110 [label="Assert.Null(job.StateId)", span="127-127", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_113 [label="Assert.Equal(''State'', jobState.Name)", span="131-131", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_114 [label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_115 [label="Assert.NotNull(jobState.CreatedAt)", span="133-133", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_116 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_117 [label="Exit lambda expression", span="113-135", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_119 [label="x.Name", span="118-118", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_120 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_122 [label="x.Reason", span="119-119", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_123 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_125 [label="x.SerializeData()", span="120-120", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_126 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_129 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_134 [label="Entry lambda expression", span="141-149", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_135 [label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_136 [label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_141 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_137 [label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_138 [label="Assert.Equal(''default'', record.Queue)", span="147-147", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_139 [label="Assert.Null(record.FetchedAt)", span="148-148", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_140 [label="Exit lambda expression", span="141-149", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_142 [label="x.AddToQueue(''default'', ''1'')", span="143-143", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_143 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_151 [label="Entry lambda expression", span="162-171", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_152 [label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_153 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_158 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_154 [label="Assert.Equal(''my-key'', record.Key)", span="168-168", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_155 [label="Assert.Equal(1, record.Value)", span="169-169", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_156 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="170-170", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_157 [label="Exit lambda expression", span="162-171", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_159 [label="x.IncrementCounter(''my-key'')", span="164-164", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_160 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_165 [label="Entry lambda expression", span="177-191", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_166 [label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="179-179", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_167 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="181-181", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_176 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_168 [label="Assert.Equal(''my-key'', record.Key)", span="183-183", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_169 [label="Assert.Equal(1, record.Value)", span="184-184", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_170 [label="Assert.NotNull(record.ExpireAt)", span="185-185", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_171 [label="var expireAt = (DateTime) record.ExpireAt", span="187-187", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_172 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="189-189", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_173 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="190-190", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_174 [label="Exit lambda expression", span="177-191", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_177 [label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="179-179", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_178 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_183 [label="Entry lambda expression", span="197-208", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_184 [label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="199-203", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_185 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="205-205", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_188 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_186 [label="Assert.Equal(2, recordCount)", span="207-207", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_187 [label="Exit lambda expression", span="197-208", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_189 [label="x.IncrementCounter(''my-key'')", span="201-201", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_190 [label="x.IncrementCounter(''my-key'')", span="202-202", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_191 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_195 [label="Entry lambda expression", span="214-223", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_196 [label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="216-216", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_197 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="218-218", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_202 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_198 [label="Assert.Equal(''my-key'', record.Key)", span="220-220", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_199 [label="Assert.Equal(-1, record.Value)", span="221-221", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_200 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="222-222", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_201 [label="Exit lambda expression", span="214-223", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_203 [label="x.DecrementCounter(''my-key'')", span="216-216", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_204 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_209 [label="Entry lambda expression", span="229-243", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_210 [label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_211 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="233-233", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_219 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_212 [label="Assert.Equal(''my-key'', record.Key)", span="235-235", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_213 [label="Assert.Equal(-1, record.Value)", span="236-236", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_214 [label="Assert.NotNull(record.ExpireAt)", span="237-237", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_215 [label="var expireAt = (DateTime)record.ExpireAt", span="239-239", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_216 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="241-241", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_217 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="242-242", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_218 [label="Exit lambda expression", span="229-243", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_220 [label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_221 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_226 [label="Entry lambda expression", span="249-260", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_227 [label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="251-255", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_228 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="257-257", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_231 [label="Entry lambda expression", span="251-255", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_229 [label="Assert.Equal(2, recordCount)", span="259-259", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_230 [label="Exit lambda expression", span="249-260", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_232 [label="x.DecrementCounter(''my-key'')", span="253-253", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_233 [label="x.DecrementCounter(''my-key'')", span="254-254", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_234 [label="Exit lambda expression", span="251-255", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_238 [label="Entry lambda expression", span="266-275", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_239 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="268-268", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_240 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="270-270", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_245 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_241 [label="Assert.Equal(''my-key'', record.Key)", span="272-272", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_242 [label="Assert.Equal(''my-value'', record.Value)", span="273-273", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_243 [label="Assert.Equal(0.0, record.Score, 2)", span="274-274", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_244 [label="Exit lambda expression", span="266-275", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_246 [label="x.AddToSet(''my-key'', ''my-value'')", span="268-268", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_247 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_252 [label="Entry lambda expression", span="281-292", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_253 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="283-287", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_254 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="289-289", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_257 [label="Entry lambda expression", span="283-287", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_255 [label="Assert.Equal(2, recordCount)", span="291-291", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_256 [label="Exit lambda expression", span="281-292", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_258 [label="x.AddToSet(''my-key'', ''my-value'')", span="285-285", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_259 [label="x.AddToSet(''my-key'', ''another-value'')", span="286-286", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_260 [label="Exit lambda expression", span="283-287", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_264 [label="Entry lambda expression", span="298-309", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_265 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="300-304", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_266 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="306-306", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_269 [label="Entry lambda expression", span="300-304", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_267 [label="Assert.Equal(1, recordCount)", span="308-308", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_268 [label="Exit lambda expression", span="298-309", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_270 [label="x.AddToSet(''my-key'', ''my-value'')", span="302-302", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_271 [label="x.AddToSet(''my-key'', ''my-value'')", span="303-303", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_272 [label="Exit lambda expression", span="300-304", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_276 [label="Entry lambda expression", span="315-324", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_277 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="317-317", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_278 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="319-319", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_283 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_279 [label="Assert.Equal(''my-key'', record.Key)", span="321-321", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_280 [label="Assert.Equal(''my-value'', record.Value)", span="322-322", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_281 [label="Assert.Equal(3.2, record.Score, 3)", span="323-323", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_282 [label="Exit lambda expression", span="315-324", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_284 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="317-317", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_285 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_290 [label="Entry lambda expression", span="330-341", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_291 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="332-336", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_292 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="338-338", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_295 [label="Entry lambda expression", span="332-336", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_293 [label="Assert.Equal(3.2, record.Score, 3)", span="340-340", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_294 [label="Exit lambda expression", span="330-341", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_296 [label="x.AddToSet(''my-key'', ''my-value'')", span="334-334", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_297 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="335-335", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_298 [label="Exit lambda expression", span="332-336", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_302 [label="Entry lambda expression", span="347-358", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_303 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="349-353", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_304 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="355-355", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_307 [label="Entry lambda expression", span="349-353", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_305 [label="Assert.Equal(0, recordCount)", span="357-357", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_306 [label="Exit lambda expression", span="347-358", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_308 [label="x.AddToSet(''my-key'', ''my-value'')", span="351-351", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_309 [label="x.RemoveFromSet(''my-key'', ''my-value'')", span="352-352", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_310 [label="Exit lambda expression", span="349-353", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_315 [label="Entry lambda expression", span="364-375", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_316 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="366-370", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_317 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="372-372", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_320 [label="Entry lambda expression", span="366-370", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_318 [label="Assert.Equal(1, recordCount)", span="374-374", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_319 [label="Exit lambda expression", span="364-375", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_321 [label="x.AddToSet(''my-key'', ''my-value'')", span="368-368", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_322 [label="x.RemoveFromSet(''my-key'', ''different-value'')", span="369-369", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_323 [label="Exit lambda expression", span="366-370", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_327 [label="Entry lambda expression", span="381-392", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_328 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="383-387", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_329 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="389-389", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_332 [label="Entry lambda expression", span="383-387", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_330 [label="Assert.Equal(1, recordCount)", span="391-391", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_331 [label="Exit lambda expression", span="381-392", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_333 [label="x.AddToSet(''my-key'', ''my-value'')", span="385-385", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_334 [label="x.RemoveFromSet(''different-key'', ''my-value'')", span="386-386", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_335 [label="Exit lambda expression", span="383-387", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_339 [label="Entry lambda expression", span="398-406", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_340 [label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="400-400", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_341 [label="var record = sql.Query(''select * from HangFire.List'').Single()", span="402-402", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_345 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_342 [label="Assert.Equal(''my-key'', record.Key)", span="404-404", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_343 [label="Assert.Equal(''my-value'', record.Value)", span="405-405", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_344 [label="Exit lambda expression", span="398-406", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_346 [label="x.InsertToList(''my-key'', ''my-value'')", span="400-400", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_347 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_352 [label="Entry lambda expression", span="412-423", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_353 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="414-418", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_354 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="420-420", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_357 [label="Entry lambda expression", span="414-418", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_355 [label="Assert.Equal(2, recordCount)", span="422-422", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_356 [label="Exit lambda expression", span="412-423", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_358 [label="x.InsertToList(''my-key'', ''my-value'')", span="416-416", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_359 [label="x.InsertToList(''my-key'', ''my-value'')", span="417-417", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_360 [label="Exit lambda expression", span="414-418", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_364 [label="Entry lambda expression", span="429-441", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_365 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="431-436", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_366 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="438-438", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_369 [label="Entry lambda expression", span="431-436", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_367 [label="Assert.Equal(0, recordCount)", span="440-440", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_368 [label="Exit lambda expression", span="429-441", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_370 [label="x.InsertToList(''my-key'', ''my-value'')", span="433-433", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_371 [label="x.InsertToList(''my-key'', ''my-value'')", span="434-434", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_372 [label="x.RemoveFromList(''my-key'', ''my-value'')", span="435-435", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_373 [label="Exit lambda expression", span="431-436", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_378 [label="Entry lambda expression", span="447-458", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_379 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="449-453", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_380 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="455-455", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_383 [label="Entry lambda expression", span="449-453", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_381 [label="Assert.Equal(1, recordCount)", span="457-457", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_382 [label="Exit lambda expression", span="447-458", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_384 [label="x.InsertToList(''my-key'', ''my-value'')", span="451-451", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_385 [label="x.RemoveFromList(''my-key'', ''different-value'')", span="452-452", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_386 [label="Exit lambda expression", span="449-453", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_390 [label="Entry lambda expression", span="464-475", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_391 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="466-470", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_392 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="472-472", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_395 [label="Entry lambda expression", span="466-470", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_393 [label="Assert.Equal(1, recordCount)", span="474-474", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_394 [label="Exit lambda expression", span="464-475", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_396 [label="x.InsertToList(''my-key'', ''my-value'')", span="468-468", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_397 [label="x.RemoveFromList(''different-key'', ''my-value'')", span="469-469", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_398 [label="Exit lambda expression", span="466-470", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_402 [label="Entry lambda expression", span="481-497", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_403 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="483-490", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_404 [label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="492-492", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_410 [label="Entry lambda expression", span="483-490", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_405 [label="Assert.Equal(2, records.Length)", span="494-494", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_406 [label="Assert.Equal(''1'', records[0].Value)", span="495-495", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_407 [label="Assert.Equal(''2'', records[1].Value)", span="496-496", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_408 [label="Exit lambda expression", span="481-497", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_411 [label="x.InsertToList(''my-key'', ''0'')", span="485-485", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_412 [label="x.InsertToList(''my-key'', ''1'')", span="486-486", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_413 [label="x.InsertToList(''my-key'', ''2'')", span="487-487", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_414 [label="x.InsertToList(''my-key'', ''3'')", span="488-488", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_415 [label="x.TrimList(''my-key'', 1, 2)", span="489-489", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_416 [label="Exit lambda expression", span="483-490", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_421 [label="Entry lambda expression", span="503-516", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_422 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="505-511", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_423 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="513-513", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_426 [label="Entry lambda expression", span="505-511", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_424 [label="Assert.Equal(2, recordCount)", span="515-515", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_425 [label="Exit lambda expression", span="503-516", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_427 [label="x.InsertToList(''my-key'', ''0'')", span="507-507", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_428 [label="x.InsertToList(''my-key'', ''1'')", span="508-508", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_429 [label="x.InsertToList(''my-key'', ''2'')", span="509-509", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_430 [label="x.TrimList(''my-key'', 1, 100)", span="510-510", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_431 [label="Exit lambda expression", span="505-511", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_435 [label="Entry lambda expression", span="522-533", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_436 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="524-528", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_437 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="530-530", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_440 [label="Entry lambda expression", span="524-528", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_438 [label="Assert.Equal(0, recordCount)", span="532-532", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_439 [label="Exit lambda expression", span="522-533", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_441 [label="x.InsertToList(''my-key'', ''0'')", span="526-526", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_442 [label="x.TrimList(''my-key'', 1, 100)", span="527-527", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_443 [label="Exit lambda expression", span="524-528", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_447 [label="Entry lambda expression", span="539-550", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_448 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="541-545", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_449 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_452 [label="Entry lambda expression", span="541-545", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_450 [label="Assert.Equal(0, recordCount)", span="549-549", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_451 [label="Exit lambda expression", span="539-550", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_453 [label="x.InsertToList(''my-key'', ''0'')", span="543-543", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_454 [label="x.TrimList(''my-key'', 1, 0)", span="544-544", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_455 [label="Exit lambda expression", span="541-545", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_459 [label="Entry lambda expression", span="556-567", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_460 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="558-562", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_461 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="564-564", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_462 [label="Assert.Equal(1, recordCount)", span="566-566", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_463 [label="Exit lambda expression", span="556-567", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_465 [label="x.InsertToList(''my-key'', ''0'')", span="560-560", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_466 [label="x.TrimList(''another-key'', 1, 0)", span="561-561", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_467 [label="Exit lambda expression", span="558-562", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m6_312 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="IBootstrapperConfiguration.cs"];
m6_313 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="364-375", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="IBootstrapperConfiguration.cs"];
m6_314 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="IBootstrapperConfiguration.cs"];
m6_261 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_262 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="298-309", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_263 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_468 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs"];
m6_469 [label="var connection = ConnectionUtils.CreateConnection()", span="572-572", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs"];
m6_470 [label="action(connection)", span="574-574", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs"];
m6_471 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="IBootstrapperConfiguration.cs"];
m6_175 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="IBootstrapperConfiguration.cs"];
m6_7 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="IBootstrapperConfiguration.cs"];
m6_456 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="IBootstrapperConfiguration.cs"];
m6_457 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="556-567", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="IBootstrapperConfiguration.cs"];
m6_458 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="IBootstrapperConfiguration.cs"];
m6_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="IBootstrapperConfiguration.cs"];
m6_8 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_9 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_10 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_11 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="IBootstrapperConfiguration.cs"];
m6_53 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs"];
m6_54 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs"];
m6_55 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs"];
m6_56 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="IBootstrapperConfiguration.cs"];
m6_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="IBootstrapperConfiguration.cs"];
m6_349 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_350 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="412-423", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_351 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_144 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="IBootstrapperConfiguration.cs"];
m6_472 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="IBootstrapperConfiguration.cs"];
m6_161 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="IBootstrapperConfiguration.cs"];
m6_418 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs"];
m6_419 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="503-516", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs"];
m6_420 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="IBootstrapperConfiguration.cs"];
m6_80 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="IBootstrapperConfiguration.cs"];
m6_249 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="IBootstrapperConfiguration.cs"];
m6_250 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="281-292", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="IBootstrapperConfiguration.cs"];
m6_251 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="IBootstrapperConfiguration.cs"];
m6_52 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="IBootstrapperConfiguration.cs"];
m6_287 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_288 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="330-341", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_289 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="IBootstrapperConfiguration.cs"];
m6_336 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="IBootstrapperConfiguration.cs"];
m6_337 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="398-406", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="IBootstrapperConfiguration.cs"];
m6_338 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="IBootstrapperConfiguration.cs"];
m6_192 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="IBootstrapperConfiguration.cs"];
m6_193 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="214-223", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="IBootstrapperConfiguration.cs"];
m6_194 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="IBootstrapperConfiguration.cs"];
m6_479 [label="HangFire.SqlServer.Tests.WriteTransactionFacts", span="", file="IBootstrapperConfiguration.cs"];
m6_480 [label=arrangeSql, span="", file="IBootstrapperConfiguration.cs"];
m6_481 [label=jobId, span="", file="IBootstrapperConfiguration.cs"];
m6_482 [label=arrangeSql, span="", file="IBootstrapperConfiguration.cs"];
m6_483 [label=jobId, span="", file="IBootstrapperConfiguration.cs"];
m6_484 [label=arrangeSql, span="", file="IBootstrapperConfiguration.cs"];
m6_485 [label=jobId, span="", file="IBootstrapperConfiguration.cs"];
m6_486 [label=state, span="", file="IBootstrapperConfiguration.cs"];
m6_487 [label=arrangeSql, span="", file="IBootstrapperConfiguration.cs"];
m6_488 [label=jobId, span="", file="IBootstrapperConfiguration.cs"];
m6_489 [label=state, span="", file="IBootstrapperConfiguration.cs"];
m7_19 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="InfiniteLoopComponentFacts.cs"];
m7_73 [label="return new InfiniteLoopProcess(_inner.Object);", span="80-80", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_74 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="InfiniteLoopComponentFacts.cs"];
m7_20 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="InfiniteLoopComponentFacts.cs"];
m7_30 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="InfiniteLoopComponentFacts.cs"];
m7_14 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m7_15 [label="var component = CreateComponent()", span="28-28", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_16 [label="var result = component.InnerProcess", span="29-29", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_17 [label="Assert.Same(_inner.Object, result)", span="30-30", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_18 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m7_72 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InfiniteLoopComponentFacts.cs"];
m7_55 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="InfiniteLoopComponentFacts.cs"];
m7_41 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="InfiniteLoopComponentFacts.cs"];
m7_9 [label="Entry Unk.>", span="", cluster="Unk.>", file="InfiniteLoopComponentFacts.cs"];
m7_6 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs"];
m7_7 [label="Assert.Throws<ArgumentNullException>(() => new InfiniteLoopProcess(null))", span="22-22", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs"];
m7_8 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs"];
m7_21 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m7_22 [label="_inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=1, file="InfiniteLoopComponentFacts.cs"];
m7_23 [label="var component = CreateComponent()", span="40-40", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_24 [label="_cts.CancelAfter(TimeSpan.FromMilliseconds(100))", span="41-41", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_25 [label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="44-44", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_26 [label="_inner.Verify(x => x.Execute(_cts.Token), Times.AtLeast(5))", span="47-47", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_27 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m7_70 [label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopComponentFacts.cs"];
m7_13 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopComponentFacts.cs"];
m7_45 [label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs"];
m7_0 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m7_1 [label="_inner = new Mock<IServerComponent>()", span="15-15", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_2 [label="_cts = new CancellationTokenSource()", span="16-16", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_3 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m7_71 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="InfiniteLoopComponentFacts.cs"];
m7_28 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="InfiniteLoopComponentFacts.cs"];
m7_5 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="InfiniteLoopComponentFacts.cs"];
m7_4 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="InfiniteLoopComponentFacts.cs"];
m7_59 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_10 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_11 [label="new InfiniteLoopProcess(null)", span="22-22", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_12 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_34 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_38 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_43 [label="component.Execute(_cts.Token)", span="44-44", cluster="lambda expression", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_42 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_46 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_35 [label="x.Execute(It.IsAny<CancellationToken>())", span="37-37", cluster="lambda expression", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_36 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_39 [label="Thread.Sleep(5)", span="38-38", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_40 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_44 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_47 [label="x.Execute(_cts.Token)", span="47-47", cluster="lambda expression", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_48 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_57 [label="component.Execute(_cts.Token)", span="58-58", cluster="lambda expression", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_56 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_58 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_60 [label="x.Execute(It.IsAny<CancellationToken>())", span="61-61", cluster="lambda expression", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_61 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m7_65 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m7_66 [label="var component = CreateComponent()", span="73-73", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_67 [label="var result = component.ToString()", span="74-74", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_68 [label="Assert.Equal(_inner.Object.ToString(), result)", span="75-75", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_69 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m7_49 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m7_50 [label="var component = CreateComponent()", span="54-54", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_51 [label="_cts.Cancel()", span="55-55", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_52 [label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_53 [label="_inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_54 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m7_31 [label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="InfiniteLoopComponentFacts.cs"];
m7_32 [label="Entry Unk.AtLeast", span="", cluster="Unk.AtLeast", file="InfiniteLoopComponentFacts.cs"];
m7_62 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m7_63 [label="_cts.Cancel()", span="67-67", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", color=red, community=0, file="InfiniteLoopComponentFacts.cs"];
m7_64 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m7_75 [label="Entry InfiniteLoopProcess.cstr", span="", cluster="InfiniteLoopProcess.cstr", file="InfiniteLoopComponentFacts.cs"];
m7_37 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="InfiniteLoopComponentFacts.cs"];
m7_29 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="InfiniteLoopComponentFacts.cs"];
m7_33 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="InfiniteLoopComponentFacts.cs"];
m7_76 [label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span="", file="InfiniteLoopComponentFacts.cs"];
m7_77 [label=component, span="", file="InfiniteLoopComponentFacts.cs"];
m7_78 [label=component, span="", file="InfiniteLoopComponentFacts.cs"];
m9_5 [label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs"];
m9_6 [label="Given(String.Format(''a job of the '{0}' type'', type))", span="22-22", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs"];
m9_7 [label="Given(''the job was dequeued'')", span="23-23", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs"];
m9_8 [label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="OwinBootstrapper.cs"];
m9_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="OwinBootstrapper.cs"];
m9_17 [label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_18 [label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="42-42", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_19 [label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="43-45", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_20 [label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_29 [label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs"];
m9_30 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="61-62", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs"];
m9_31 [label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="64-64", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs"];
m9_32 [label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="OwinBootstrapper.cs"];
m9_23 [label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs"];
m9_24 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="52-53", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs"];
m9_25 [label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="55-55", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs"];
m9_26 [label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="OwinBootstrapper.cs"];
m9_33 [label="Entry Unk.DoesNotContain", span="", cluster="Unk.DoesNotContain", file="OwinBootstrapper.cs"];
m9_22 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="OwinBootstrapper.cs"];
m9_10 [label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_11 [label="Given(''a job'')", span="29-29", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_12 [label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="30-30", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_13 [label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="OwinBootstrapper.cs"];
m9_14 [label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="OwinBootstrapper.cs"];
m9_15 [label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="36-36", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="OwinBootstrapper.cs"];
m9_16 [label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="OwinBootstrapper.cs"];
m9_0 [label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="13-13", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs"];
m9_1 [label="Given(''a job'')", span="15-15", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs"];
m9_2 [label="Given(''the job was dequeued'')", span="16-16", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs"];
m9_3 [label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="13-13", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="OwinBootstrapper.cs"];
m9_21 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="OwinBootstrapper.cs"];
m9_27 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="OwinBootstrapper.cs"];
m9_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="OwinBootstrapper.cs"];
m9_28 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="OwinBootstrapper.cs"];
m10_39 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="RecurringJobSchedulerFacts.cs"];
m10_62 [label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="96-96", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs"];
m10_63 [label=_queues, span="98-98", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs"];
m10_64 [label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="100-100", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs"];
m10_65 [label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="96-96", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="RecurringJobSchedulerFacts.cs"];
m10_56 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="89-89", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs"];
m10_57 [label="Assert.IsNotNull(_exception)", span="91-91", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs"];
m10_58 [label="Assert.AreEqual(typeof(OperationCanceledException).Name, _exception.GetType().Name)", span="92-92", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs"];
m10_59 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="89-89", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="RecurringJobSchedulerFacts.cs"];
m10_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs"];
m10_41 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobSchedulerFacts.cs"];
m10_34 [label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RecurringJobSchedulerFacts.cs"];
m10_10 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs"];
m10_11 [label="table.Rows", span="36-36", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m10_16 [label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", span="44-44", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m10_12 [label="var i = 0", span="38-38", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs"];
m10_13 [label="i < int.Parse(row[''Jobs''])", span="38-38", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs"];
m10_14 [label="Given(String.Format(''a job in the '{0}' queue'', row[''Queue'']))", span="40-40", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m10_15 [label="i++", span="38-38", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs"];
m10_17 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="RecurringJobSchedulerFacts.cs"];
m10_0 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="22-22", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="RecurringJobSchedulerFacts.cs"];
m10_1 [label="Given(String.Format(''the fetcher listening the '{0}' queue'', QueueSteps.DefaultQueue))", span="24-24", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m10_2 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="22-22", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="RecurringJobSchedulerFacts.cs"];
m10_9 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJobSchedulerFacts.cs"];
m10_52 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="RecurringJobSchedulerFacts.cs"];
m10_40 [label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0", cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="RecurringJobSchedulerFacts.cs"];
m10_18 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="RecurringJobSchedulerFacts.cs"];
m10_5 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="RecurringJobSchedulerFacts.cs"];
m10_6 [label="_fetcher = new JobFetcher(RedisFactory.BasicManager, queue, TimeSpan.FromSeconds(1))", span="30-30", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m10_7 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="RecurringJobSchedulerFacts.cs"];
m10_48 [label="Entry Unk.When", span="", cluster="Unk.When", file="RecurringJobSchedulerFacts.cs"];
m10_53 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="83-83", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="RecurringJobSchedulerFacts.cs"];
m10_54 [label="Assert.AreEqual(jobId, _payload.Id)", span="85-85", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m10_55 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="83-83", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="RecurringJobSchedulerFacts.cs"];
m10_32 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RecurringJobSchedulerFacts.cs"];
m10_33 [label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0", cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="RecurringJobSchedulerFacts.cs"];
m10_25 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs"];
m10_26 [label="var cts = new CancellationTokenSource()", span="50-50", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs"];
m10_27 [label="Task.Factory.StartNew(() =>\r\n                {\r\n                    Thread.Sleep(TimeSpan.FromMilliseconds(100)); \r\n                    cts.Cancel();\r\n                })", span="51-55", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m10_28 [label="_payload = _fetcher.DequeueJob(cts.Token)", span="59-59", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs"];
m10_29 [label=Exception, span="61-61", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m10_30 [label="_exception = ex", span="63-63", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs"];
m10_31 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="RecurringJobSchedulerFacts.cs"];
m10_35 [label="Entry lambda expression", span="51-55", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m10_22 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m10_23 [label="x[''Queue'']", span="44-44", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m10_24 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m10_37 [label="cts.Cancel()", span="54-54", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m10_36 [label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="53-53", cluster="lambda expression", color=red, community=0, file="RecurringJobSchedulerFacts.cs"];
m10_38 [label="Exit lambda expression", span="51-55", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m10_60 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="RecurringJobSchedulerFacts.cs"];
m10_61 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="RecurringJobSchedulerFacts.cs"];
m10_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RecurringJobSchedulerFacts.cs"];
m10_66 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="RecurringJobSchedulerFacts.cs"];
m10_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="RecurringJobSchedulerFacts.cs"];
m10_42 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="68-68", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs"];
m10_43 [label="var i = 0", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs"];
m10_44 [label="i < count", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs"];
m10_46 [label="i++", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs"];
m10_45 [label="When(''it dequeues a job'')", span="72-72", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs"];
m10_47 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="68-68", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="RecurringJobSchedulerFacts.cs"];
m10_49 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="RecurringJobSchedulerFacts.cs"];
m10_50 [label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="79-79", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m10_51 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="RecurringJobSchedulerFacts.cs"];
m10_21 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="RecurringJobSchedulerFacts.cs"];
m10_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RecurringJobSchedulerFacts.cs"];
m10_8 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="RecurringJobSchedulerFacts.cs"];
m10_67 [label="HangFire.Tests.JobFetcherSteps", span="", file="RecurringJobSchedulerFacts.cs"];
m10_68 [label=cts, span="", file="RecurringJobSchedulerFacts.cs"];
m12_0 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs"];
m12_1 [label="_now = new DateTime(2012, 12, 12, 12, 12, 0, DateTimeKind.Utc)", span="16-16", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs"];
m12_2 [label="_schedule = CrontabSchedule.Parse(''* * * * *'')", span="17-17", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs"];
m12_3 [label="_timeZone = TimeZoneInfo.Utc", span="18-18", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs"];
m12_4 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.ScheduleInstantFacts()", file="ScheduleInstantFacts.cs"];
m12_24 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", span="40-40", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs"];
m12_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new ScheduleInstant(_now, _timeZone, null))", span="42-44", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs"];
m12_26 [label="Assert.Equal(''schedule'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs"];
m12_27 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", span="40-40", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenScheduleIsNull()", file="ScheduleInstantFacts.cs"];
m12_61 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="ScheduleInstantFacts.cs"];
m12_7 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", span="22-22", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs"];
m12_8 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Local), _timeZone, _schedule))", span="24-25", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs"];
m12_9 [label="Assert.Equal(''nowInstant'', exception.ParamName)", span="27-27", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs"];
m12_10 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", span="22-22", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasLocalKind()", file="ScheduleInstantFacts.cs"];
m12_31 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", span="50-50", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs"];
m12_32 [label="_now = new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Utc)", span="52-52", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs"];
m12_33 [label="var instant = CreateInstant()", span="53-53", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs"];
m12_34 [label="var value = instant.NowInstant", span="55-55", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs"];
m12_35 [label="Assert.Equal(new DateTime(2012, 12, 12, 12, 12, 0, DateTimeKind.Utc), value)", span="57-57", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs"];
m12_36 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", span="50-50", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NowInstant_ReturnsNormalizedValue()", file="ScheduleInstantFacts.cs"];
m12_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduleInstantFacts.cs"];
m12_17 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", span="31-31", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs"];
m12_18 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Unspecified), _timeZone, _schedule))", span="33-34", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs"];
m12_19 [label="Assert.Equal(''nowInstant'', exception.ParamName)", span="36-36", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs"];
m12_20 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", span="31-31", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.Ctor_ThrowsAnException_WhenLocalTimeArgument_HasUnspecifiedKind()", file="ScheduleInstantFacts.cs"];
m12_43 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence", file="ScheduleInstantFacts.cs"];
m12_16 [label="Entry Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="32-32", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="ScheduleInstantFacts.cs"];
m12_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduleInstantFacts.cs"];
m12_51 [label="Entry Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="53-53", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="ScheduleInstantFacts.cs"];
m12_5 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ScheduleInstantFacts.cs"];
m12_37 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", span="115-115", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", file="ScheduleInstantFacts.cs"];
m12_78 [label="return new ScheduleInstant(localTime ?? _now, _timeZone, _schedule);", span="117-117", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", color=green, community=0, file="ScheduleInstantFacts.cs"];
m12_79 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", span="115-115", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.CreateInstant(System.DateTime?)", file="ScheduleInstantFacts.cs"];
m12_63 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", span="93-93", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_65 [label="var instant = CreateInstant(time)", span="96-96", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_64 [label="var time = new DateTime(2012, 12, 12, 00, 00, 00, DateTimeKind.Utc)", span="95-95", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_66 [label="var matches = instant.GetNextInstants(null).ToList()", span="98-98", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_68 [label="Assert.Equal(time, matches[0])", span="101-101", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_67 [label="Assert.Equal(1, matches.Count)", span="100-100", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_69 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", span="93-93", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsSingleMatch_WhenLocalTimeSatisfiesTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_6 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="ScheduleInstantFacts.cs"];
m12_44 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", span="71-71", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs"];
m12_45 [label="var instant = CreateInstant()", span="73-73", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs"];
m12_46 [label="Assert.Throws<ArgumentException>(() => instant.GetNextInstants(DateTime.Now))", span="75-75", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs"];
m12_47 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", span="71-71", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ThrowsAnException_WhenLastTime_IsNotUtc()", file="ScheduleInstantFacts.cs"];
m12_38 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", span="61-61", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs"];
m12_39 [label="var instant = CreateInstant()", span="63-63", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs"];
m12_41 [label="Assert.Equal(_schedule.GetNextOccurrence(_now), value)", span="67-67", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs"];
m12_40 [label="var value = instant.NextInstant", span="65-65", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs"];
m12_42 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", span="61-61", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.NextInstant_ReturnsCorrectValue()", file="ScheduleInstantFacts.cs"];
m12_52 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", span="79-79", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_54 [label="var instant = CreateInstant(time)", span="82-82", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_53 [label="var time = new DateTime(2012, 12, 12, 00, 00, 00, DateTimeKind.Utc)", span="81-81", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_55 [label="var matches = instant.GetNextInstants(time.AddMinutes(-3)).ToList()", span="84-84", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_57 [label="Assert.Equal(time.AddMinutes(-2), matches[0])", span="87-87", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_58 [label="Assert.Equal(time.AddMinutes(-1), matches[1])", span="88-88", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_59 [label="Assert.Equal(time, matches[2])", span="89-89", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_56 [label="Assert.Equal(3, matches.Count)", span="86-86", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_60 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", span="79-79", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsCollectionOfScheduleMatches_BetweenLocalTime_AndLastMatchingTime()", file="ScheduleInstantFacts.cs"];
m12_62 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ScheduleInstantFacts.cs"];
m12_70 [label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", span="105-105", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_71 [label="var time = new DateTime(2012, 12, 12, 00, 01, 00, DateTimeKind.Utc)", span="107-107", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_72 [label="var instant = new ScheduleInstant(time, TimeZoneInfo.Utc, CrontabSchedule.Parse(''0 * * * *''))", span="108-108", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_73 [label="var matches = instant.GetNextInstants(time.AddMinutes(50))", span="110-110", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_74 [label="Assert.Empty(matches)", span="112-112", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_75 [label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", span="105-105", cluster="Hangfire.Core.Tests.Server.ScheduleInstantFacts.GetNextInstants_ReturnsEmptyCollection_WhenGivenIntervalDoesNotSatisfyTheSchedule()", file="ScheduleInstantFacts.cs"];
m12_48 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_14 [label="new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Local), _timeZone, _schedule)", span="25-25", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_22 [label="new ScheduleInstant(new DateTime(2012, 12, 12, 12, 12, 12, DateTimeKind.Unspecified), _timeZone, _schedule)", span="34-34", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_29 [label="new ScheduleInstant(_now, _timeZone, null)", span="44-44", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_13 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_15 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_21 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_23 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_28 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_30 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_49 [label="instant.GetNextInstants(DateTime.Now)", span="75-75", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_50 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="ScheduleInstantFacts.cs"];
m12_77 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="ScheduleInstantFacts.cs"];
m12_76 [label="Entry ScheduleInstant.cstr", span="", cluster="ScheduleInstant.cstr", file="ScheduleInstantFacts.cs"];
m12_80 [label="Hangfire.Core.Tests.Server.ScheduleInstantFacts", span="", file="ScheduleInstantFacts.cs"];
m12_81 [label=instant, span="", file="ScheduleInstantFacts.cs"];
m13_51 [label="server.Execute(_token)", span="59-59", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="SchedulePollerFacts.cs"];
m13_52 [label="_connection.Verify(x => x.Heartbeat(ServerId))", span="61-61", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_53 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_54 [label="Entry lambda expression", span="61-61", cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_55 [label="x.Heartbeat(ServerId)", span="61-61", cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_56 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="28-29", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m13_49 [label="new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan)", span="50-51", cluster="lambda expression", file="SchedulePollerFacts.cs", color=red, community=1];
m13_50 [label="Exit lambda expression", span="50-51", cluster="lambda expression", color=green, community=0, file="SchedulePollerFacts.cs"];
m13_20 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="28-28", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_39 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="64-64", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="SchedulePollerFacts.cs"];
m13_33 [label="time > 0", span="33-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="39-41", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=1, file="SchedulePollerFacts.cs"];
m13_35 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m13_37 [label="Assert.Equal(''storage'', exception.ParamName)", span="43-43", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", color=red, community=0];
m13_34 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_38 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m13_15 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="26-26", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs"];
m13_19 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="SchedulePollerFacts.cs"];
m13_76 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m13_77 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="84-85", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m13_78 [label="var scheduler = CreateScheduler()", span="86-86", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m13_79 [label="scheduler.Execute(_cts.Token)", span="88-88", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_80 [label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="90-92", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m13_81 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="82-82", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs"];
m13_43 [label="x.GetConnection()", span="50-50", cluster="lambda expression", file="SchedulePollerFacts.cs", color=green, community=0];
m13_44 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m13_45 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan))", span="49-51", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_46 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="53-53", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m13_47 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs"];
m13_31 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs"];
m13_27 [label="Assert.Equal(''serverId'', exception.ParamName)", span="40-40", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SchedulePollerFacts.cs", color=green, community=0];
m13_67 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m13_68 [label="var scheduler = CreateScheduler()", span="70-70", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m13_69 [label="scheduler.Execute(_cts.Token)", span="72-72", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_70 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>()))", span="74-78", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m13_71 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs"];
m13_75 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="SchedulePollerFacts.cs"];
m13_58 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SchedulePollerFacts.cs"];
m13_59 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SchedulePollerFacts.cs"];
m13_25 [label="x.GetConnection()", span="31-31", cluster="lambda expression", file="SchedulePollerFacts.cs", color=red, community=0];
m13_26 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_28 [label="Entry lambda expression", span="32-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SchedulePollerFacts.cs"];
m13_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SchedulePollerFacts.cs"];
m13_40 [label="Entry lambda expression", span="40-41", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_57 [label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m13_66 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SchedulePollerFacts.cs"];
m13_14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="SchedulePollerFacts.cs"];
m13_0 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="SchedulePollerFacts.cs"];
m13_1 [label="_storage = new Mock<JobStorage>()", span="18-18", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="SchedulePollerFacts.cs"];
m13_3 [label="_token = new CancellationToken(true)", span="20-20", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=green, community=0, file="SchedulePollerFacts.cs"];
m13_4 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="22-22", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=green, community=0, file="SchedulePollerFacts.cs"];
m13_5 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_6 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m13_7 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="28-29", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m13_8 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_9 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m13_10 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs"];
m13_24 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_21 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_29 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_30 [label="new ServerHeartbeat(_storage.Object, null)", span="38-38", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_32 [label="Entry ServerHeartbeat.cstr", span="", cluster="ServerHeartbeat.cstr", file="SchedulePollerFacts.cs"];
m13_41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", color=red, community=1, file="SchedulePollerFacts.cs"];
m13_42 [label="Exit lambda expression", span="40-41", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_48 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_60 [label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", span="", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_63 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_61 [label="x.GetConnection()", span="63-63", cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_62 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_64 [label="x.Dispose()", span="64-64", cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_65 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_72 [label="Entry lambda expression", span="74-78", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_73 [label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>())", span="74-78", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_74 [label="Exit lambda expression", span="74-78", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_82 [label="Entry lambda expression", span="84-85", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_88 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_83 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="84-85", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_84 [label="Exit lambda expression", span="84-85", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_85 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_86 [label="time > 0", span="85-85", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_87 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_89 [label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="91-91", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_90 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m13_12 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="SchedulePollerFacts.cs"];
m13_13 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs"];
m13_23 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="SchedulePollerFacts.cs"];
m13_11 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs"];
m13_91 [label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="97-97", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", color=red, community=0, file="SchedulePollerFacts.cs"];
m13_92 [label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="95-95", cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs"];
m13_93 [label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span="", file="SchedulePollerFacts.cs"];
m14_12 [label="var exception = new Exception()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ServerBootstrapperFacts.cs", color=green, community=0];
m14_36 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs"];
m14_37 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _components))", span="52-53", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=1, file="ServerBootstrapperFacts.cs"];
m14_38 [label="Assert.Equal(''storage'', exception.ParamName)", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_39 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs"];
m14_23 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerBootstrapperFacts.cs"];
m14_21 [label="Assert.Equal(''serverId'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m14_26 [label="new ServerBootstrapper(null, _context, _storage.Object, _components)", span="35-35", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=red, community=0];
m14_62 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m14_63 [label="var server = CreateServer()", span="80-80", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m14_64 [label="server.Execute(_cts.Token)", span="82-82", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_65 [label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="84-84", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_66 [label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m14_67 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m14_19 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m14_20 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=1, file="ServerBootstrapperFacts.cs"];
m14_22 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="ServerBootstrapperFacts.cs"];
m14_24 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="ServerBootstrapperFacts.cs"];
m14_0 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ServerBootstrapperFacts.cs"];
m14_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, false, null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m14_2 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_4 [label="_cts = new CancellationTokenSource()", span="25-25", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_5 [label="new CreatedContext(null, false, null)", span="16-16", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_6 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="28-28", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_7 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="ServerBootstrapperFacts.cs"];
m14_76 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs"];
m14_77 [label="var component1 = CreateComponentMock()", span="92-92", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_78 [label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="93-93", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs"];
m14_82 [label="component1.Verify(x => x.Execute(_cts.Token))", span="102-102", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_79 [label="var component2 = CreateComponentMock()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_80 [label="var server = CreateServer()", span="96-96", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs"];
m14_83 [label="component2.Verify(x => x.Execute(_cts.Token))", span="103-103", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_81 [label="server.Execute(_cts.Token)", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_84 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs"];
m14_93 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="ServerBootstrapperFacts.cs"];
m14_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _components))", span="43-44", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", color=red, community=1];
m14_31 [label="Assert.Equal(''context'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m14_55 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs"];
m14_109 [label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _components);", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_110 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs"];
m14_18 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ServerBootstrapperFacts.cs"];
m14_85 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs"];
m14_111 [label="var mock = new Mock<IServerComponent>()", span="123-123", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_112 [label="_components.Add(mock.Object)", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_113 [label="return mock;", span="126-126", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs"];
m14_114 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs"];
m14_8 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20", cluster="Hangfire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs"];
m14_9 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m14_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m14_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m14_11 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerBootstrapperFacts.cs"];
m14_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerBootstrapperFacts.cs"];
m14_15 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_17 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_16 [label="x.GetConnection()", span="28-28", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_116 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="ServerBootstrapperFacts.cs"];
m14_100 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m14_101 [label="var server = CreateServer()", span="109-109", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m14_102 [label="server.Execute(_cts.Token)", span="111-111", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_103 [label="_connection.Verify(x => x.RemoveServer(ServerId))", span="113-113", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_104 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m14_29 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m14_32 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m14_75 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerBootstrapperFacts.cs"];
m14_50 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m14_51 [label="var server = CreateServer()", span="70-70", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m14_52 [label="server.Execute(_cts.Token)", span="72-72", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_53 [label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="74-74", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_54 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m14_28 [label="TestMethod()", span="23-23", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=green, community=0];
m14_115 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="ServerBootstrapperFacts.cs"];
m14_43 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs"];
m14_44 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="61-62", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_45 [label="Assert.Equal(''components'', exception.ParamName)", span="64-64", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_46 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs"];
m14_105 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_25 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerBootstrapperFacts.cs"];
m14_27 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_33 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_34 [label="new ServerBootstrapper(ServerId, null, _storage.Object, _components)", span="44-44", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_35 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_40 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_41 [label="new ServerBootstrapper(ServerId, _context, null, _components)", span="53-53", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_42 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_47 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_48 [label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="62-62", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_49 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_58 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_59 [label="x.AnnounceServer(ServerId, _context)", span="74-74", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_60 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_69 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_72 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_70 [label="x.GetConnection()", span="84-84", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_71 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_73 [label="x.Dispose()", span="85-85", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_74 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_87 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_90 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_94 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_97 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_88 [label="x.Execute(It.IsAny<CancellationToken>())", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_89 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_91 [label="Thread.Sleep(100)", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_92 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_95 [label="x.Execute(_cts.Token)", span="102-102", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_96 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_98 [label="x.Execute(_cts.Token)", span="103-103", cluster="lambda expression", color=red, community=1, file="ServerBootstrapperFacts.cs"];
m14_99 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_106 [label="x.RemoveServer(ServerId)", span="113-113", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m14_107 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m14_61 [label="Entry Unk.AnnounceServer", span="", cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs"];
m14_68 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs"];
m14_57 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerBootstrapperFacts.cs"];
m14_108 [label="Entry Unk.RemoveServer", span="", cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs"];
m14_56 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerBootstrapperFacts.cs"];
m14_86 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="ServerBootstrapperFacts.cs"];
m14_117 [label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span="", file="ServerBootstrapperFacts.cs"];
m15_15 [label="Entry Unk.CreateTask", span="", cluster="Unk.CreateTask", file="ServerComponentExtensionsFacts.cs"];
m15_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerComponentExtensionsFacts.cs"];
m15_6 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs"];
m15_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundProcessExtensions.CreateTask(null, _cts.Token))", span="23-24", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", color=red, community=1, file="ServerComponentExtensionsFacts.cs"];
m15_8 [label="Assert.Equal(''component'', exception.ParamName)", span="26-26", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_9 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs"];
m15_27 [label="Entry System.Threading.Tasks.Task.Wait()", span="0-0", cluster="System.Threading.Tasks.Task.Wait()", file="ServerComponentExtensionsFacts.cs"];
m15_20 [label="Entry System.Enum.HasFlag(System.Enum)", span="0-0", cluster="System.Enum.HasFlag(System.Enum)", file="ServerComponentExtensionsFacts.cs"];
m15_21 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerComponentExtensionsFacts.cs"];
m15_32 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerComponentExtensionsFacts.cs"];
m15_38 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerComponentExtensionsFacts.cs"];
m15_0 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs"];
m15_1 [label="_component = new Mock<IServerComponent>()", span="16-16", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_2 [label="_cts = new CancellationTokenSource()", span="17-17", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_3 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs"];
m15_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerComponentExtensionsFacts.cs"];
m15_33 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="48-48", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m15_34 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_35 [label="var task = _component.Object.CreateTask(_cts.Token)", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_36 [label="Assert.DoesNotThrow(() => task.Wait())", span="53-53", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_37 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="48-48", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m15_5 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerComponentExtensionsFacts.cs"];
m15_4 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="ServerComponentExtensionsFacts.cs"];
m15_16 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", span="30-30", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", file="ServerComponentExtensionsFacts.cs"];
m15_17 [label="var task = _component.Object.CreateTask(_cts.Token)", span="32-32", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_18 [label="Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.LongRunning))", span="34-34", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_19 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", span="30-30", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunningTask()", file="ServerComponentExtensionsFacts.cs"];
m15_28 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerComponentExtensionsFacts.cs"];
m15_43 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_12 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_13 [label="BackgroundProcessExtensions.CreateTask(null, _cts.Token)", span="24-24", cluster="lambda expression", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_14 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_29 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_30 [label="x.Execute(_cts.Token)", span="44-44", cluster="lambda expression", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_31 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_40 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_44 [label="task.Wait()", span="53-53", cluster="lambda expression", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_41 [label="x.Execute(It.IsAny<CancellationToken>())", span="50-50", cluster="lambda expression", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_42 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_45 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m15_39 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerComponentExtensionsFacts.cs"];
m15_22 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="38-38", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m15_23 [label="var task = _component.Object.CreateTask(_cts.Token)", span="40-40", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_24 [label="task.Wait()", span="42-42", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_25 [label="_component.Verify(x => x.Execute(_cts.Token), Times.Once)", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m15_26 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="38-38", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m15_46 [label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", span="", file="ServerComponentExtensionsFacts.cs"];
m15_47 [label=task, span="", file="ServerComponentExtensionsFacts.cs"];
m16_9 [label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs"];
m16_10 [label="var connection = _storage.CreateAndOpenConnection()", span="53-53", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs"];
m16_14 [label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="67-67", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ServerHeartbeatFacts.cs"];
m16_11 [label=ProcessedTables, span="55-55", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs"];
m16_13 [label="connection.Execute(\r\n                        String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete from HangFire.[{0}] with (tablock) where ExpireAt < @now;'', table),\r\n                        new { now = DateTime.UtcNow })", span="59-63", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ServerHeartbeatFacts.cs"];
m16_12 [label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="57-57", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs"];
m16_15 [label="Exit HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ServerHeartbeatFacts.cs"];
m16_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerHeartbeatFacts.cs"];
m16_2 [label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m16_3 [label="storage == null", span="45-45", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=red, community=0, file="ServerHeartbeatFacts.cs"];
m16_5 [label="_storage = storage", span="47-47", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=red, community=0, file="ServerHeartbeatFacts.cs"];
m16_6 [label="_checkInterval = checkInterval", span="48-48", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=red, community=0, file="ServerHeartbeatFacts.cs"];
m16_4 [label="throw new ArgumentNullException(''storage'');", span="45-45", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=red, community=0, file="ServerHeartbeatFacts.cs"];
m16_7 [label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m16_0 [label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ServerHeartbeatFacts.cs"];
m16_1 [label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ServerHeartbeatFacts.cs"];
m16_20 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerHeartbeatFacts.cs"];
m16_19 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerHeartbeatFacts.cs"];
m16_21 [label="Entry HangFire.SqlServer.ExpirationManager.ToString()", span="70-70", cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ServerHeartbeatFacts.cs"];
m16_22 [label="return ''SQL Records Expiration Manager'';", span="72-72", cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ServerHeartbeatFacts.cs"];
m16_23 [label="Exit HangFire.SqlServer.ExpirationManager.ToString()", span="70-70", cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="ServerHeartbeatFacts.cs"];
m16_16 [label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126", cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ServerHeartbeatFacts.cs"];
m16_17 [label="Entry Unk.DebugFormat", span="", cluster="Unk.DebugFormat", file="ServerHeartbeatFacts.cs"];
m16_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ServerHeartbeatFacts.cs"];
m16_24 [label="HangFire.SqlServer.ExpirationManager", span="", file="ServerHeartbeatFacts.cs"];
m18_82 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs"];
m18_90 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m18_13 [label="Write(Request.LinkTo(''/failed/requeue''))", span="119-119", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs"];
m18_74 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerJobCancellationTokenFacts.cs"];
m18_75 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerJobCancellationTokenFacts.cs"];
m18_76 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ServerJobCancellationTokenFacts.cs"];
m18_77 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerJobCancellationTokenFacts.cs"];
m18_78 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ServerJobCancellationTokenFacts.cs"];
m18_18 [label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table failed-table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Failed</th>\n                    <th>Job</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="158-173", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs"];
m18_37 [label="Write(HtmlHelper.JobId(job.Key))", span="280-280", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs"];
m18_38 [label="WriteLiteral(''\n                            </a>\n'')", span="285-285", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs"];
m18_39 [label="!job.Value.InFailedState", span="290-290", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs"];
m18_40 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="296-297", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs"];
m18_24 [label="Write(job.Value.InFailedState ? ''hover'' : null)", span="207-207", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobCancellationTokenFacts.cs"];
m18_0 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m18_1 [label="_stateData = new StateData\r\n            {\r\n                Name = ProcessingState.StateName,\r\n                Data = new Dictionary<string, string>\r\n                {\r\n                    { ''WorkerNumber'', ''1'' },\r\n                    { ''ServerId'', ''Server'' },\r\n                }\r\n            }", span="21-29", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m18_2 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m18_3 [label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="32-32", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m18_4 [label="_workerContextMock = new WorkerContextMock { WorkerNumber = 1 }", span="34-34", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_5 [label="_workerContextMock.ServerId = ''Server''", span="35-35", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_7 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs"];
m18_6 [label="_shutdownToken = new CancellationToken(false)", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_8 [label="Entry Hangfire.Storage.StateData.StateData()", span="21-21", cluster="Hangfire.Storage.StateData.StateData()", file="ServerJobCancellationTokenFacts.cs"];
m18_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerJobCancellationTokenFacts.cs"];
m18_17 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_72 [label="token.ThrowIfCancellationRequested()", span="101-101", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=red, community=0, file="ServerJobCancellationTokenFacts.cs"];
m18_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken()))", span="43-45", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerJobCancellationTokenFacts.cs"];
m18_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerJobCancellationTokenFacts.cs"];
m18_14 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerJobCancellationTokenFacts.cs"];
m18_15 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_16 [label="x.GetStateData(JobId)", span="32-32", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_19 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m18_60 [label="token.ThrowIfCancellationRequested()", span="92-92", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_21 [label="Assert.Equal(''jobId'', exception.ParamName)", span="47-47", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m18_71 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_22 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m18_23 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerJobCancellationTokenFacts.cs"];
m18_25 [label="Entry lambda expression", span="44-45", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_26 [label="new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken())", span="44-45", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_27 [label="Exit lambda expression", span="44-45", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_28 [label="Entry ServerJobCancellationToken.cstr", span="", cluster="ServerJobCancellationToken.cstr", file="ServerJobCancellationTokenFacts.cs"];
m18_29 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="ServerJobCancellationTokenFacts.cs"];
m18_32 [label="Assert.Equal(''connection'', exception.ParamName)", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m18_30 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m18_33 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs"];
m18_31 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken()))", span="53-55", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_34 [label="Entry lambda expression", span="54-55", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_35 [label="new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken())", span="54-55", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_36 [label="Exit lambda expression", span="54-55", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_41 [label="Entry lambda expression", span="64-65", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_42 [label="new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken())", span="64-65", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_43 [label="Exit lambda expression", span="64-65", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_48 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs"];
m18_44 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs"];
m18_49 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m18_45 [label="var token = CreateToken()", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_46 [label="Assert.Equal(_shutdownToken, token.ShutdownToken)", span="74-74", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_47 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs"];
m18_50 [label="var token = CreateToken()", span="80-80", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m18_51 [label="Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="82-82", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m18_52 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs"];
m18_53 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerJobCancellationTokenFacts.cs"];
m18_54 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m18_57 [label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="91-92", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m18_55 [label="_shutdownToken = new CancellationToken(true)", span="88-88", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m18_58 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m18_56 [label="var token = CreateToken()", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs"];
m18_59 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_62 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationTokenFacts.cs"];
m18_61 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_63 [label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m18_64 [label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", span="98-98", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_65 [label="var token = CreateToken()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m18_66 [label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="101-101", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m18_67 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs"];
m18_70 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_68 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_69 [label="x.GetStateData(It.IsAny<string>())", span="98-98", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", color=green, community=0];
m18_73 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_81 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_87 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_83 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ServerJobCancellationTokenFacts.cs"];
m18_84 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ServerJobCancellationTokenFacts.cs"];
m18_85 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ServerJobCancellationTokenFacts.cs"];
m18_86 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerJobCancellationTokenFacts.cs"];
m18_89 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_79 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_95 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_80 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ServerJobCancellationTokenFacts.cs"];
m18_88 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerJobCancellationTokenFacts.cs"];
m18_96 [label="token.ThrowIfCancellationRequested()", span="131-131", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_97 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs"];
m18_91 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ServerJobCancellationTokenFacts.cs"];
m18_92 [label="HangFire.Web.Pages.FailedJobsPage", span="", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m18_93 [label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="130-131", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m18_94 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs"];
m18_98 [label="return new ServerJobCancellationToken(\r\n                JobId, _connection.Object, _workerContextMock.Object, _shutdownToken);", span="136-137", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs"];
m18_99 [label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs"];
m18_100 [label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span="", file="ServerJobCancellationTokenFacts.cs"];
m18_102 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m18_101 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m18_103 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m18_104 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m18_105 [label=token, span="", file="ServerJobCancellationTokenFacts.cs"];
m19_0 [label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_1 [label="Servers.Add(server)", span="42-42", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_2 [label="server.Start()", span="44-44", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_3 [label="var context = new OwinContext(app.Properties)", span="46-46", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_6 [label="token.Register(server.Dispose)", span="51-51", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_4 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="47-47", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_5 [label="token != CancellationToken.None", span="49-49", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_7 [label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs"];
m19_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerOwinExtensions.cs"];
m19_12 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="ServerOwinExtensions.cs"];
m19_9 [label="Entry Hangfire.BackgroundJobServer.Start()", span="123-123", cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs"];
m19_8 [label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs"];
m19_10 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="ServerOwinExtensions.cs"];
m20_8 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ServerWatchdogFacts.cs"];
m20_9 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(String.Empty))", span="19-20", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ServerWatchdogFacts.cs"];
m20_10 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ServerWatchdogFacts.cs"];
m20_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerWatchdogFacts.cs"];
m20_31 [label="Entry Unk.False", span="", cluster="Unk.False", file="ServerWatchdogFacts.cs"];
m20_14 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerWatchdogFacts.cs"];
m20_15 [label="var state = new ProcessingState(''Server1'')", span="26-26", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", color=green, community=0, file="ServerWatchdogFacts.cs"];
m20_16 [label="Assert.Equal(ProcessingState.StateName, state.Name)", span="27-27", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", color=green, community=0, file="ServerWatchdogFacts.cs"];
m20_17 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerWatchdogFacts.cs"];
m20_27 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerWatchdogFacts.cs"];
m20_29 [label="Assert.False(state.IsFinal)", span="46-46", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ServerWatchdogFacts.cs"];
m20_28 [label="var state = new ProcessingState(''server'')", span="44-44", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerWatchdogFacts.cs"];
m20_30 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerWatchdogFacts.cs"];
m20_25 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="41-41", cluster="HangFire.States.ProcessingState.SerializeData()", file="ServerWatchdogFacts.cs"];
m20_18 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerWatchdogFacts.cs"];
m20_19 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs"];
m20_20 [label="var state = new ProcessingState(''Server1'')", span="33-33", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs"];
m20_22 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.StartedAt), data[''StartedAt''])", span="37-37", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs"];
m20_23 [label="Assert.Equal(''Server1'', state.ServerName)", span="38-38", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs"];
m20_21 [label="var data = state.SerializeData()", span="35-35", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs"];
m20_24 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerWatchdogFacts.cs"];
m20_7 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ServerWatchdogFacts.cs"];
m20_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m20_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m20_5 [label="new ProcessingState(null)", span="13-13", cluster="lambda expression", color=green, community=0, file="ServerWatchdogFacts.cs"];
m20_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m20_12 [label="new ProcessingState(String.Empty)", span="20-20", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m20_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m20_26 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerWatchdogFacts.cs"];
m20_0 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerWatchdogFacts.cs"];
m20_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", span="12-13", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerWatchdogFacts.cs", color=green, community=0];
m20_2 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerWatchdogFacts.cs"];
m22_92 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="WorkerContextFacts.cs"];
m22_9 [label="Entry WorkerContext.cstr", span="", cluster="WorkerContext.cstr", file="WorkerContextFacts.cs"];
m22_0 [label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="WorkerContextFacts.cs"];
m22_1 [label="_state = new SucceededState(''Some reason'')", span="23-23", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", color=red, community=1, file="WorkerContextFacts.cs"];
m22_2 [label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", color=red, community=0, file="WorkerContextFacts.cs"];
m22_3 [label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string)", file="WorkerContextFacts.cs"];
m22_105 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="144-144", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs"];
m22_106 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="146-151", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs"];
m22_107 [label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="153-159", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs"];
m22_108 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="144-144", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="WorkerContextFacts.cs"];
m22_144 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="WorkerContextFacts.cs"];
m22_126 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="WorkerContextFacts.cs"];
m22_62 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="WorkerContextFacts.cs"];
m22_97 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="WorkerContextFacts.cs"];
m22_145 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="WorkerContextFacts.cs"];
m22_40 [label="Hangfire.Core.Tests.Server.WorkerContextFacts", span="", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs"];
m22_42 [label="_stateMock.Setup(x => x.GetProperties()).Returns(\r\n                table.Rows.ToDictionary(x => x[''Name''], x => x[''Value'']))", span="65-66", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs"];
m22_41 [label="Given(String.Format(''a '{0}' state'', state))", span="64-64", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs"];
m22_43 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="62-62", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="WorkerContextFacts.cs"];
m22_5 [label="_failedException = new InvalidOperationException(''Hello'')", span="29-29", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="WorkerContextFacts.cs"];
m22_46 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="WorkerContextFacts.cs"];
m22_78 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="WorkerContextFacts.cs"];
m22_160 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="233-233", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs"];
m22_162 [label="Assert.AreEqual(state, job[''State''])", span="236-236", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs"];
m22_161 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="235-235", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs"];
m22_163 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="233-233", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="WorkerContextFacts.cs"];
m22_180 [label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="261-261", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="WorkerContextFacts.cs"];
m22_181 [label="_stateMock.Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)), \r\n                Times.Once)", span="263-265", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="WorkerContextFacts.cs"];
m22_182 [label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="261-261", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="WorkerContextFacts.cs"];
m22_93 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="WorkerContextFacts.cs"];
m22_83 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="109-109", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs"];
m22_84 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="111-116", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs"];
m22_85 [label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="118-124", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs"];
m22_86 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="109-109", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="WorkerContextFacts.cs"];
m22_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerContextFacts.cs"];
m22_6 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_7 [label="new WorkerContext(null, Queues, WorkerNumber)", span="17-17", cluster="lambda expression", file="WorkerContextFacts.cs", color=red, community=0];
m22_176 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="248-248", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_175 [label="DictionaryAssert.ContainsFollowingItems(table, history)", span="257-257", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_171 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="250-251", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_170 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="248-248", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_173 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="254-254", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_174 [label="Assert.IsNotNull(history, entry)", span="255-255", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_172 [label="Assert.IsNotNull(entry)", span="252-252", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_44 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="WorkerContextFacts.cs"];
m22_29 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_104 [label="Entry Unk.PopItemFromList", span="", cluster="Unk.PopItemFromList", file="WorkerContextFacts.cs"];
m22_137 [label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="200-200", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs"];
m22_140 [label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="205-205", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs"];
m22_141 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="206-206", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs"];
m22_139 [label="var timestamp = JobHelper.FromTimestamp((long)score)", span="203-203", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs"];
m22_138 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="202-202", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs"];
m22_142 [label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="200-200", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="WorkerContextFacts.cs"];
m22_77 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="WorkerContextFacts.cs"];
m22_121 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="175-175", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs"];
m22_122 [label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="177-177", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs"];
m22_123 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="178-178", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs"];
m22_124 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="175-175", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="WorkerContextFacts.cs"];
m22_17 [label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m22_94 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="128-128", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="WorkerContextFacts.cs"];
m22_95 [label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="130-132", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="WorkerContextFacts.cs"];
m22_96 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="128-128", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="WorkerContextFacts.cs"];
m22_179 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerContextFacts.cs"];
m22_143 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="WorkerContextFacts.cs"];
m22_79 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="103-103", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="WorkerContextFacts.cs"];
m22_80 [label="Assert.AreEqual(name, _state.StateName)", span="105-105", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="WorkerContextFacts.cs"];
m22_81 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="103-103", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="WorkerContextFacts.cs"];
m22_146 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="210-210", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_150 [label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="216-216", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_151 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="217-217", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_149 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="214-214", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_148 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="213-213", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_147 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="212-212", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_152 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="210-210", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="WorkerContextFacts.cs"];
m22_82 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="WorkerContextFacts.cs"];
m22_136 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="WorkerContextFacts.cs"];
m22_10 [label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs"];
m22_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerContext(ServerId, null, WorkerNumber))", span="25-26", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs", color=red, community=0];
m22_12 [label="Assert.Equal(''queues'', exception.ParamName)", span="28-28", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs"];
m22_103 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="WorkerContextFacts.cs"];
m22_22 [label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m22_24 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="54-54", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs"];
m22_25 [label="_stateMock.Setup(x => x.StateName).Returns(state)", span="55-55", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs"];
m22_26 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="56-56", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs"];
m22_120 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="WorkerContextFacts.cs"];
m22_23 [label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="52-52", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="WorkerContextFacts.cs"];
m22_38 [label="return new WorkerContext(ServerId, Queues, WorkerNumber);", span="61-61", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CreateContext()", color=red, community=0, file="WorkerContextFacts.cs"];
m22_39 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="WorkerContextFacts.cs"];
m22_30 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerContextFacts.cs"];
m22_19 [label="Assert.Equal(ServerId, context.ServerId)", span="36-36", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", color=red, community=0];
m22_20 [label="Assert.Equal(Queues, context.Queues)", span="37-37", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", color=green, community=0, file="WorkerContextFacts.cs"];
m22_21 [label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="38-38", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m22_8 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_18 [label="var context = CreateContext()", span="34-34", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m22_168 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="240-240", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_166 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="242-243", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_165 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="240-240", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_167 [label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="244-244", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_27 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_28 [label="new WorkerContext(null)", span="45-45", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_32 [label="var context = CreateContext()", span="51-51", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m22_177 [label="Entry Unk.RemoveStartFromList", span="", cluster="Unk.RemoveStartFromList", file="WorkerContextFacts.cs"];
m22_13 [label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerContextFacts.cs"];
m22_14 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_15 [label="new WorkerContext(ServerId, null, WorkerNumber)", span="26-26", cluster="lambda expression", file="WorkerContextFacts.cs", color=red, community=0];
m22_16 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_113 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="163-163", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="WorkerContextFacts.cs"];
m22_114 [label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="165-165", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="WorkerContextFacts.cs"];
m22_115 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="163-163", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="WorkerContextFacts.cs"];
m22_72 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="WorkerContextFacts.cs"];
m22_56 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs"];
m22_58 [label="_state.Apply(transaction, JobSteps.DefaultJobId)", span="74-74", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs"];
m22_57 [label="var transaction = Redis.Client.CreateTransaction()", span="72-72", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs"];
m22_59 [label="transaction.Commit()", span="75-75", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs"];
m22_60 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="WorkerContextFacts.cs"];
m22_87 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="WorkerContextFacts.cs"];
m22_116 [label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="169-169", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_117 [label="DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="171-171", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_118 [label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="169-169", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="WorkerContextFacts.cs"];
m22_164 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="WorkerContextFacts.cs"];
m22_109 [label="Entry lambda expression", span="153-159", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_47 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_50 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_53 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_184 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_49 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_48 [label="x.GetProperties()", span="65-65", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_52 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_51 [label="x[''Name'']", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_55 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_54 [label="x[''Value'']", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_185 [label="x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_186 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_187 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_190 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_90 [label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="121-123", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_111 [label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="156-158", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_37 [label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m22_189 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_188 [label="y != null", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_192 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_191 [label="y == JobSteps.DefaultJobId", span="264-264", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_88 [label="Entry lambda expression", span="118-124", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_89 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="120-120", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_91 [label="Exit lambda expression", span="118-124", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_110 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="155-155", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_112 [label="Exit lambda expression", span="153-159", cluster="lambda expression", file="WorkerContextFacts.cs"];
m22_178 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="WorkerContextFacts.cs"];
m22_159 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="WorkerContextFacts.cs"];
m22_73 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs"];
m22_75 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="99-99", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs"];
m22_74 [label="var stateMachine = new StateMachine(Redis.Client)", span="98-98", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs"];
m22_76 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="WorkerContextFacts.cs"];
m22_45 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="WorkerContextFacts.cs"];
m22_71 [label="Entry HangFire.States.StateMachine.GetStateDescriptor(string)", span="26-26", cluster="HangFire.States.StateMachine.GetStateDescriptor(string)", file="WorkerContextFacts.cs"];
m22_63 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="WorkerContextFacts.cs"];
m22_125 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="WorkerContextFacts.cs"];
m22_130 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="188-188", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="WorkerContextFacts.cs"];
m22_131 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="190-190", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="WorkerContextFacts.cs"];
m22_132 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="188-188", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="WorkerContextFacts.cs"];
m22_98 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="WorkerContextFacts.cs"];
m22_156 [label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="227-227", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="WorkerContextFacts.cs"];
m22_157 [label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="229-229", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="WorkerContextFacts.cs"];
m22_158 [label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="227-227", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="WorkerContextFacts.cs"];
m22_153 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="221-221", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="WorkerContextFacts.cs"];
m22_154 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="223-223", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="WorkerContextFacts.cs"];
m22_155 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="221-221", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="WorkerContextFacts.cs"];
m22_64 [label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_66 [label="var descriptor = StateMachine.GetStateDescriptor(_state.StateName)", span="84-84", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_65 [label="var transaction = Redis.Client.CreateTransaction()", span="82-82", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_67 [label="descriptor != null", span="86-86", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_68 [label="descriptor.Unapply(transaction, JobSteps.DefaultJobId)", span="88-88", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_69 [label="transaction.Commit()", span="91-91", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_70 [label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="WorkerContextFacts.cs"];
m22_169 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="WorkerContextFacts.cs"];
m22_31 [label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m22_133 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="194-194", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="WorkerContextFacts.cs"];
m22_134 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="196-196", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="WorkerContextFacts.cs"];
m22_135 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="194-194", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="WorkerContextFacts.cs"];
m22_183 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="WorkerContextFacts.cs"];
m22_99 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="136-136", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs"];
m22_100 [label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="138-138", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs"];
m22_101 [label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="139-140", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs"];
m22_102 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="136-136", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="WorkerContextFacts.cs"];
m22_127 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="182-182", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="WorkerContextFacts.cs"];
m22_128 [label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="184-184", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="WorkerContextFacts.cs"];
m22_129 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="182-182", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="WorkerContextFacts.cs"];
m22_33 [label="var contextCopy = new WorkerContext(context)", span="52-52", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m22_34 [label="Assert.Equal(ServerId, context.ServerId)", span="54-54", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", color=red, community=0, file="WorkerContextFacts.cs"];
m22_35 [label="Assert.Equal(Queues, context.Queues)", span="55-55", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m22_36 [label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="56-56", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs"];
m22_61 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="WorkerContextFacts.cs"];
m22_119 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="WorkerContextFacts.cs"];
m22_193 [label="HangFire.Tests.States.StateSteps", span="", file="WorkerContextFacts.cs"];
m23_0 [label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs"];
m23_1 [label="ServerId = ''server''", span="11-11", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=red, community=0, file="WorkerContextMock.cs"];
m23_2 [label="Queues = new[] { ''default'' }", span="12-12", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs"];
m23_3 [label="WorkerNumber = 1", span="13-13", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs"];
m23_4 [label="_context = new Lazy<WorkerContext>(\r\n                () => new WorkerContext(ServerId, Queues, WorkerNumber))", span="15-16", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=red, community=0, file="WorkerContextMock.cs"];
m23_5 [label="Exit Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerContextMock.cs"];
m23_7 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="WorkerContextMock.cs"];
m23_8 [label="new WorkerContext(ServerId, Queues, WorkerNumber)", span="16-16", cluster="lambda expression", color=red, community=0, file="WorkerContextMock.cs"];
m23_9 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="WorkerContextMock.cs"];
m23_10 [label="Entry WorkerContext.cstr", span="", cluster="WorkerContext.cstr", file="WorkerContextMock.cs"];
m23_6 [label="Entry Lazy<WorkerContext>.cstr", span="", cluster="Lazy<WorkerContext>.cstr", file="WorkerContextMock.cs"];
m23_11 [label="Hangfire.Core.Tests.WorkerContextMock", span="", file="WorkerContextMock.cs"];
m24_5 [label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="WorkerFacts.cs"];
m24_7 [label="Given(''the job was dequeued'')", span="23-23", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", color=green, community=0, file="WorkerFacts.cs"];
m24_6 [label="Given(String.Format(''a job of the '{0}' type'', type))", span="22-22", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="WorkerFacts.cs"];
m24_8 [label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="20-20", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="WorkerFacts.cs"];
m24_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="WorkerFacts.cs"];
m24_29 [label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="WorkerFacts.cs"];
m24_30 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="61-62", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", color=green, community=0, file="WorkerFacts.cs"];
m24_31 [label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="64-64", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="WorkerFacts.cs"];
m24_32 [label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="59-59", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="WorkerFacts.cs"];
m24_33 [label="Entry Unk.DoesNotContain", span="", cluster="Unk.DoesNotContain", file="WorkerFacts.cs"];
m24_17 [label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs"];
m24_19 [label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="43-45", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs"];
m24_18 [label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="42-42", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs"];
m24_20 [label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="40-40", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="WorkerFacts.cs"];
m24_23 [label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs"];
m24_24 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="52-53", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs"];
m24_25 [label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="55-55", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs"];
m24_26 [label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="50-50", cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="WorkerFacts.cs"];
m24_22 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="WorkerFacts.cs"];
m24_10 [label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="WorkerFacts.cs"];
m24_11 [label="Given(''a job'')", span="29-29", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", color=green, community=0, file="WorkerFacts.cs"];
m24_12 [label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="30-30", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="WorkerFacts.cs"];
m24_13 [label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="27-27", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="WorkerFacts.cs"];
m24_2 [label="Given(''the job was dequeued'')", span="16-16", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="WorkerFacts.cs"];
m24_3 [label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="13-13", cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="WorkerFacts.cs"];
m24_14 [label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="WorkerFacts.cs"];
m24_15 [label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="36-36", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="WorkerFacts.cs"];
m24_16 [label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="34-34", cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="WorkerFacts.cs"];
m24_0 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="WorkerFacts.cs"];
m24_1 [label="Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="WorkerFacts.cs"];
m24_21 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="WorkerFacts.cs"];
m24_27 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="WorkerFacts.cs"];
m24_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="WorkerFacts.cs"];
m24_28 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="WorkerFacts.cs"];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_4  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_27  [key=2, style=dotted];
m2_58 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_64  [key=2, style=dotted];
m2_59 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=state];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_40  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_12  [key=2, style=dotted];
m2_60 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_41  [key=2, style=dotted];
m2_63 -> m2_57  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_3  [key=2, style=dotted];
m2_23 -> m2_18  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_21  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_10  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid, color=green];
m2_14 -> m2_3  [key=2, style=dotted];
m2_14 -> m2_18  [key=2, style=dotted];
m2_14 -> m2_16  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_15 -> m2_3  [key=2, style=dotted, color=green];
m2_15 -> m2_19  [key=2, style=dotted, color=green];
m2_15 -> m2_20  [key=2, style=dotted, color=green];
m2_15 -> m2_21  [key=2, style=dotted, color=green];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_12 -> m2_15  [key=1, style=dashed, color=green, label=string];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_3  [key=2, style=dotted];
m2_13 -> m2_17  [key=2, style=dotted];
m2_16 -> m2_12  [key=0, style=bold, color=blue];
m2_16 -> m2_77  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_22  [key=2, style=dotted];
m2_25 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_26 -> m2_23  [key=0, style=bold, color=blue];
m2_26 -> m2_3  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=2, style=dotted];
m2_20 -> m2_17  [key=0, style=bold, color=blue];
m2_10 -> m2_4  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_8  [key=2, style=dotted];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_77 -> m2_16  [key=0, style=bold, color=blue];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_27  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_40  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_35  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_27  [key=2, style=dotted];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=2, style=dotted];
m2_55 -> m2_53  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=2, style=dotted];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_71  [key=2, style=dotted];
m2_66 -> m2_72  [key=2, style=dotted];
m2_66 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_27  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_40  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_41  [key=2, style=dotted];
m2_70 -> m2_65  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_27  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_40  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_31  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_50  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_51  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_52  [key=2, style=dotted];
m2_48 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_49 -> m2_42  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_25  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=2, style=dotted];
m2_29 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=2, style=dotted];
m2_78 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m2_78 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.RetryAttributeFacts"];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_26  [key=2, style=dotted];
m4_128 -> m4_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_126 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_126 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_26  [key=2, style=dotted];
m4_127 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_129 -> m4_126  [key=0, style=bold, color=blue];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_26  [key=2, style=dotted];
m4_157 -> m4_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_158 -> m4_156  [key=0, style=bold, color=blue];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_26  [key=2, style=dotted];
m4_111 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_109 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_109 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_26  [key=2, style=dotted];
m4_110 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_112 -> m4_109  [key=0, style=bold, color=blue];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_26  [key=2, style=dotted];
m4_170 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_171 -> m4_169  [key=0, style=bold, color=blue];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_26  [key=2, style=dotted];
m4_55 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_53 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_53 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_53 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_53 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_53 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_53 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_53 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_53 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_53 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_26  [key=2, style=dotted];
m4_54 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_63  [key=2, style=dotted];
m4_56 -> m4_64  [key=2, style=dotted];
m4_56 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_56 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_56 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_65  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_65  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_26  [key=2, style=dotted];
m4_60 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_66  [key=2, style=dotted];
m4_62 -> m4_53  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_38 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_38 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_38 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_38 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_26  [key=2, style=dotted];
m4_39 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_26  [key=2, style=dotted];
m4_40 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_26  [key=2, style=dotted];
m4_41 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_42 -> m4_38  [key=0, style=bold, color=blue];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_26  [key=2, style=dotted];
m4_120 -> m4_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_121 -> m4_119  [key=0, style=bold, color=blue];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_26  [key=2, style=dotted];
m4_137 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_138 -> m4_136  [key=0, style=bold, color=blue];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_26  [key=2, style=dotted];
m4_150 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_151 -> m4_149  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_17  [key=0, style=solid];
m4_11 -> m4_18  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=maxReplayCount];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_14  [key=0, style=solid];
m4_15 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_17  [key=0, style=solid];
m4_14 -> m4_19  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_20  [key=2, style=dotted];
m4_17 -> m4_10  [key=0, style=bold, color=blue];
m4_172 -> m4_173  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_28 -> m4_31  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_30  [key=2, style=dotted];
m4_33 -> m4_31  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_30  [key=2, style=dotted];
m4_36 -> m4_31  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_29 -> m4_27  [key=0, style=bold, color=blue];
m4_34 -> m4_32  [key=0, style=bold, color=blue];
m4_37 -> m4_35  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_30  [key=2, style=dotted];
m4_44 -> m4_46  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_30  [key=2, style=dotted];
m4_48 -> m4_46  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_30  [key=2, style=dotted];
m4_51 -> m4_46  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_49 -> m4_47  [key=0, style=bold, color=blue];
m4_52 -> m4_50  [key=0, style=bold, color=blue];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_30  [key=2, style=dotted];
m4_68 -> m4_70  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_30  [key=2, style=dotted];
m4_72 -> m4_74  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_30  [key=2, style=dotted];
m4_76 -> m4_78  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_69 -> m4_67  [key=0, style=bold, color=blue];
m4_73 -> m4_71  [key=0, style=bold, color=blue];
m4_77 -> m4_75  [key=0, style=bold, color=blue];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_30  [key=2, style=dotted];
m4_87 -> m4_89  [key=2, style=dotted];
m4_87 -> m4_90  [key=2, style=dotted];
m4_86 -> m4_87  [key=0, style=solid];
m4_88 -> m4_86  [key=0, style=bold, color=blue];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_30  [key=2, style=dotted];
m4_100 -> m4_90  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_97 -> m4_95  [key=0, style=bold, color=blue];
m4_101 -> m4_99  [key=0, style=bold, color=blue];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_108  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_107 -> m4_105  [key=0, style=bold, color=blue];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_108  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_31  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_115 -> m4_113  [key=0, style=bold, color=blue];
m4_118 -> m4_116  [key=0, style=bold, color=blue];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_125  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_124 -> m4_122  [key=0, style=bold, color=blue];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_125  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_31  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_132 -> m4_130  [key=0, style=bold, color=blue];
m4_135 -> m4_133  [key=0, style=bold, color=blue];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_142  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_141 -> m4_139  [key=0, style=bold, color=blue];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_142  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_148 -> m4_146  [key=0, style=bold, color=blue];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_155  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_154 -> m4_152  [key=0, style=bold, color=blue];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_90  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_161 -> m4_159  [key=0, style=bold, color=blue];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_168  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_167 -> m4_165  [key=0, style=bold, color=blue];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_175  [key=2, style=dotted];
m4_174 -> m4_172  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_26  [key=2, style=dotted];
m4_144 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_145 -> m4_143  [key=0, style=bold, color=blue];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_26  [key=2, style=dotted];
m4_103 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_104 -> m4_102  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=2, style=dotted];
m4_24 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_21 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_21 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_21 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_21 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_26  [key=2, style=dotted];
m4_22 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_26  [key=2, style=dotted];
m4_23 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_25 -> m4_21  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_91 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_91 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_26  [key=2, style=dotted];
m4_92 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_26  [key=2, style=dotted];
m4_93 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_94 -> m4_91  [key=0, style=bold, color=blue];
m4_66 -> m4_79  [key=0, style=solid];
m4_66 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_66 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_66 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_66 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_63  [key=2, style=dotted];
m4_79 -> m4_64  [key=2, style=dotted];
m4_79 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_79 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_79 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_79 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_65  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_65  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_26  [key=2, style=dotted];
m4_83 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_85  [key=2, style=dotted];
m4_82 -> m4_65  [key=2, style=dotted];
m4_84 -> m4_66  [key=0, style=bold, color=blue];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_26  [key=2, style=dotted];
m4_163 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_164 -> m4_162  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_2 -> m4_4  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_176 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_176 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m4_177 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_177 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_177 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_178 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_178 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_178 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_179 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_179 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_179 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_180 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_180 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_180 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_181 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_182 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_183 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_184 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m4_185 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_185 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_186 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_187 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_188 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_188 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_189 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_190 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_191 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_191 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_192 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_193 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_194 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_195 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_196 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_197 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=double];
m4_198 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_199 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_200 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_201 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_202 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_203 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_204 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_205 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_206 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_7  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m5_12 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m5_12 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_19  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_20  [key=2, style=dotted];
m5_16 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_14 -> m5_17  [key=0, style=solid];
m5_14 -> m5_18  [key=2, style=dotted];
m5_17 -> m5_12  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_4  [key=0, style=bold, color=blue];
m5_3 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_7  [key=2, style=dotted];
m5_9 -> m5_3  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=2, style=dotted];
m5_23 -> m5_21  [key=0, style=bold, color=blue];
m5_25 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_26 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>"];
m5_27 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m6_375 -> m6_376  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_12  [key=2, style=dotted];
m6_376 -> m6_378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_377 -> m6_375  [key=0, style=bold, color=blue];
m6_432 -> m6_433  [key=0, style=solid];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_12  [key=2, style=dotted];
m6_433 -> m6_435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_434 -> m6_432  [key=0, style=bold, color=blue];
m6_299 -> m6_300  [key=0, style=solid];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_12  [key=2, style=dotted];
m6_300 -> m6_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_301 -> m6_299  [key=0, style=bold, color=blue];
m6_235 -> m6_236  [key=0, style=solid];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_12  [key=2, style=dotted];
m6_236 -> m6_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_237 -> m6_235  [key=0, style=bold, color=blue];
m6_131 -> m6_132  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_12  [key=2, style=dotted];
m6_132 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_133 -> m6_131  [key=0, style=bold, color=blue];
m6_444 -> m6_445  [key=0, style=solid];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_12  [key=2, style=dotted];
m6_445 -> m6_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_446 -> m6_444  [key=0, style=bold, color=blue];
m6_145 -> m6_146  [key=0, style=solid];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_22  [key=2, style=dotted];
m6_146 -> m6_23  [key=2, style=dotted];
m6_147 -> m6_145  [key=0, style=bold, color=blue];
m6_399 -> m6_400  [key=0, style=solid];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_12  [key=2, style=dotted];
m6_400 -> m6_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_401 -> m6_399  [key=0, style=bold, color=blue];
m6_148 -> m6_149  [key=0, style=solid];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_12  [key=2, style=dotted];
m6_149 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_150 -> m6_148  [key=0, style=bold, color=blue];
m6_97 -> m6_98  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_12  [key=2, style=dotted];
m6_99 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_100 -> m6_97  [key=0, style=bold, color=blue];
m6_206 -> m6_207  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_12  [key=2, style=dotted];
m6_207 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_208 -> m6_206  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_223 -> m6_224  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_12  [key=2, style=dotted];
m6_224 -> m6_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_225 -> m6_223  [key=0, style=bold, color=blue];
m6_387 -> m6_388  [key=0, style=solid];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_12  [key=2, style=dotted];
m6_388 -> m6_390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_389 -> m6_387  [key=0, style=bold, color=blue];
m6_162 -> m6_163  [key=0, style=solid];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_12  [key=2, style=dotted];
m6_163 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_164 -> m6_162  [key=0, style=bold, color=blue];
m6_25 -> m6_474  [key=0, style=solid];
m6_25 -> m6_475  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>"];
m6_474 -> m6_475  [key=0, style=solid];
m6_474 -> m6_7  [key=2, style=dotted];
m6_474 -> m6_476  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_473  [key=2, style=dotted];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_478  [key=2, style=dotted];
m6_477 -> m6_25  [key=0, style=bold, color=blue];
m6_324 -> m6_325  [key=0, style=solid];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_12  [key=2, style=dotted];
m6_325 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_326 -> m6_324  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_12  [key=2, style=dotted];
m6_181 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_182 -> m6_180  [key=0, style=bold, color=blue];
m6_361 -> m6_362  [key=0, style=solid];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_12  [key=2, style=dotted];
m6_362 -> m6_364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_363 -> m6_361  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_36 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_12  [key=2, style=dotted];
m6_37 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_38 -> m6_35  [key=0, style=bold, color=blue];
m6_273 -> m6_274  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_12  [key=2, style=dotted];
m6_274 -> m6_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_275 -> m6_273  [key=0, style=bold, color=blue];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_466  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_22  [key=2, style=dotted];
m6_14 -> m6_23  [key=2, style=dotted];
m6_14 -> m6_24  [key=2, style=dotted];
m6_14 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_14 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_14 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_22  [key=2, style=dotted];
m6_15 -> m6_23  [key=2, style=dotted];
m6_15 -> m6_24  [key=2, style=dotted];
m6_15 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_13 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_13 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_25  [key=2, style=dotted];
m6_16 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_26  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_26  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_34  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_27  [key=2, style=dotted];
m6_18 -> m6_28  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_29  [key=2, style=dotted];
m6_21 -> m6_13  [key=0, style=bold, color=blue];
m6_32 -> m6_30  [key=0, style=bold, color=blue];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_22  [key=2, style=dotted];
m6_40 -> m6_23  [key=2, style=dotted];
m6_40 -> m6_24  [key=2, style=dotted];
m6_40 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_40 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_40 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_22  [key=2, style=dotted];
m6_41 -> m6_23  [key=2, style=dotted];
m6_41 -> m6_24  [key=2, style=dotted];
m6_41 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_39 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_39 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_39 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_25  [key=2, style=dotted];
m6_42 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_26  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_26  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_29  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_48  [key=2, style=dotted];
m6_47 -> m6_39  [key=0, style=bold, color=blue];
m6_51 -> m6_49  [key=0, style=bold, color=blue];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_22  [key=2, style=dotted];
m6_58 -> m6_23  [key=2, style=dotted];
m6_58 -> m6_24  [key=2, style=dotted];
m6_58 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_58 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_58 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_58 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_22  [key=2, style=dotted];
m6_59 -> m6_23  [key=2, style=dotted];
m6_59 -> m6_24  [key=2, style=dotted];
m6_59 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_57 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_57 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_57 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_57 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_25  [key=2, style=dotted];
m6_64 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_26  [key=2, style=dotted];
m6_65 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_26  [key=2, style=dotted];
m6_68 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=anotherJob];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_22  [key=2, style=dotted];
m6_71 -> m6_23  [key=2, style=dotted];
m6_71 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_71 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_71 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_71 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_96  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_24  [key=2, style=dotted];
m6_72 -> m6_82  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_78  [key=2, style=dotted];
m6_60 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_60 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_60 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_60 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_79  [key=2, style=dotted];
m6_61 -> m6_80  [key=2, style=dotted];
m6_61 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_79  [key=2, style=dotted];
m6_62 -> m6_80  [key=2, style=dotted];
m6_62 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_79  [key=2, style=dotted];
m6_63 -> m6_81  [key=2, style=dotted];
m6_63 -> m6_80  [key=2, style=dotted];
m6_63 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_83 -> m6_84  [key=0, style=solid];
m6_86 -> m6_87  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_93 -> m6_94  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_82  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_48  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_29  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_29  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_82  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_82  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_48  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_82  [key=2, style=dotted];
m6_77 -> m6_57  [key=0, style=bold, color=blue];
m6_84 -> m6_85  [key=0, style=solid];
m6_85 -> m6_83  [key=0, style=bold, color=blue];
m6_87 -> m6_88  [key=0, style=solid];
m6_88 -> m6_86  [key=0, style=bold, color=blue];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_92  [key=2, style=dotted];
m6_91 -> m6_89  [key=0, style=bold, color=blue];
m6_95 -> m6_93  [key=0, style=bold, color=blue];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_22  [key=2, style=dotted];
m6_102 -> m6_23  [key=2, style=dotted];
m6_102 -> m6_24  [key=2, style=dotted];
m6_102 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_102 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_102 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_102 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_101 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_101 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_25  [key=2, style=dotted];
m6_107 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_26  [key=2, style=dotted];
m6_108 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_22  [key=2, style=dotted];
m6_111 -> m6_23  [key=2, style=dotted];
m6_111 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_111 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_111 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_111 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_78  [key=2, style=dotted];
m6_103 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_103 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_103 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_103 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_130  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_24  [key=2, style=dotted];
m6_112 -> m6_82  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_79  [key=2, style=dotted];
m6_104 -> m6_80  [key=2, style=dotted];
m6_104 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_79  [key=2, style=dotted];
m6_105 -> m6_80  [key=2, style=dotted];
m6_105 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_79  [key=2, style=dotted];
m6_106 -> m6_81  [key=2, style=dotted];
m6_106 -> m6_80  [key=2, style=dotted];
m6_106 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_118 -> m6_119  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_29  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_29  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_82  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_82  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_48  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_82  [key=2, style=dotted];
m6_117 -> m6_101  [key=0, style=bold, color=blue];
m6_119 -> m6_120  [key=0, style=solid];
m6_120 -> m6_118  [key=0, style=bold, color=blue];
m6_122 -> m6_123  [key=0, style=solid];
m6_123 -> m6_121  [key=0, style=bold, color=blue];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_92  [key=2, style=dotted];
m6_126 -> m6_124  [key=0, style=bold, color=blue];
m6_129 -> m6_127  [key=0, style=bold, color=blue];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_25  [key=2, style=dotted];
m6_135 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_22  [key=2, style=dotted];
m6_136 -> m6_23  [key=2, style=dotted];
m6_136 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_136 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_141 -> m6_142  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_24  [key=2, style=dotted];
m6_137 -> m6_82  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_82  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_29  [key=2, style=dotted];
m6_140 -> m6_134  [key=0, style=bold, color=blue];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_144  [key=2, style=dotted];
m6_143 -> m6_141  [key=0, style=bold, color=blue];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_25  [key=2, style=dotted];
m6_152 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_22  [key=2, style=dotted];
m6_153 -> m6_23  [key=2, style=dotted];
m6_153 -> m6_155  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_153 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_158 -> m6_159  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_82  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_82  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_82  [key=2, style=dotted];
m6_157 -> m6_151  [key=0, style=bold, color=blue];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_161  [key=2, style=dotted];
m6_160 -> m6_158  [key=0, style=bold, color=blue];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_25  [key=2, style=dotted];
m6_166 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_22  [key=2, style=dotted];
m6_167 -> m6_23  [key=2, style=dotted];
m6_167 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_167 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_167 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_176 -> m6_177  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_82  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_82  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_48  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_173  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_175  [key=2, style=dotted];
m6_172 -> m6_28  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_175  [key=2, style=dotted];
m6_173 -> m6_28  [key=2, style=dotted];
m6_174 -> m6_165  [key=0, style=bold, color=blue];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_33  [key=2, style=dotted];
m6_177 -> m6_179  [key=2, style=dotted];
m6_178 -> m6_176  [key=0, style=bold, color=blue];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_25  [key=2, style=dotted];
m6_184 -> m6_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_3  [key=2, style=dotted];
m6_185 -> m6_23  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_82  [key=2, style=dotted];
m6_187 -> m6_183  [key=0, style=bold, color=blue];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_161  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_161  [key=2, style=dotted];
m6_191 -> m6_188  [key=0, style=bold, color=blue];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_25  [key=2, style=dotted];
m6_196 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_22  [key=2, style=dotted];
m6_197 -> m6_23  [key=2, style=dotted];
m6_197 -> m6_199  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_197 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_202 -> m6_203  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_82  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_82  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_82  [key=2, style=dotted];
m6_201 -> m6_195  [key=0, style=bold, color=blue];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_205  [key=2, style=dotted];
m6_204 -> m6_202  [key=0, style=bold, color=blue];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_25  [key=2, style=dotted];
m6_210 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_22  [key=2, style=dotted];
m6_211 -> m6_23  [key=2, style=dotted];
m6_211 -> m6_213  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_211 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_211 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_219 -> m6_220  [key=0, style=solid];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_82  [key=2, style=dotted];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_82  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_48  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_217  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_175  [key=2, style=dotted];
m6_216 -> m6_28  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_175  [key=2, style=dotted];
m6_217 -> m6_28  [key=2, style=dotted];
m6_218 -> m6_209  [key=0, style=bold, color=blue];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_33  [key=2, style=dotted];
m6_220 -> m6_222  [key=2, style=dotted];
m6_221 -> m6_219  [key=0, style=bold, color=blue];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_228  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_25  [key=2, style=dotted];
m6_227 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_3  [key=2, style=dotted];
m6_228 -> m6_23  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_82  [key=2, style=dotted];
m6_230 -> m6_226  [key=0, style=bold, color=blue];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_205  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_205  [key=2, style=dotted];
m6_234 -> m6_231  [key=0, style=bold, color=blue];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_240  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_25  [key=2, style=dotted];
m6_239 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_22  [key=2, style=dotted];
m6_240 -> m6_23  [key=2, style=dotted];
m6_240 -> m6_242  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_240 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_245 -> m6_246  [key=0, style=solid];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_82  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_82  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_82  [key=2, style=dotted];
m6_244 -> m6_238  [key=0, style=bold, color=blue];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_248  [key=2, style=dotted];
m6_247 -> m6_245  [key=0, style=bold, color=blue];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_254  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_25  [key=2, style=dotted];
m6_253 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_3  [key=2, style=dotted];
m6_254 -> m6_23  [key=2, style=dotted];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_82  [key=2, style=dotted];
m6_256 -> m6_252  [key=0, style=bold, color=blue];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_248  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_248  [key=2, style=dotted];
m6_260 -> m6_257  [key=0, style=bold, color=blue];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_266  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_25  [key=2, style=dotted];
m6_265 -> m6_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_3  [key=2, style=dotted];
m6_266 -> m6_23  [key=2, style=dotted];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_82  [key=2, style=dotted];
m6_268 -> m6_264  [key=0, style=bold, color=blue];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_248  [key=2, style=dotted];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_248  [key=2, style=dotted];
m6_272 -> m6_269  [key=0, style=bold, color=blue];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_25  [key=2, style=dotted];
m6_277 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_22  [key=2, style=dotted];
m6_278 -> m6_23  [key=2, style=dotted];
m6_278 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_278 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_283 -> m6_284  [key=0, style=solid];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_82  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_82  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_82  [key=2, style=dotted];
m6_282 -> m6_276  [key=0, style=bold, color=blue];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_286  [key=2, style=dotted];
m6_285 -> m6_283  [key=0, style=bold, color=blue];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_292  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_291 -> m6_292  [key=0, style=solid];
m6_291 -> m6_25  [key=2, style=dotted];
m6_291 -> m6_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_22  [key=2, style=dotted];
m6_292 -> m6_23  [key=2, style=dotted];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_82  [key=2, style=dotted];
m6_294 -> m6_290  [key=0, style=bold, color=blue];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_248  [key=2, style=dotted];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_286  [key=2, style=dotted];
m6_298 -> m6_295  [key=0, style=bold, color=blue];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_304  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_25  [key=2, style=dotted];
m6_303 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_3  [key=2, style=dotted];
m6_304 -> m6_23  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_82  [key=2, style=dotted];
m6_306 -> m6_302  [key=0, style=bold, color=blue];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_248  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_311  [key=2, style=dotted];
m6_310 -> m6_307  [key=0, style=bold, color=blue];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_317  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_25  [key=2, style=dotted];
m6_316 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_3  [key=2, style=dotted];
m6_317 -> m6_23  [key=2, style=dotted];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_82  [key=2, style=dotted];
m6_319 -> m6_315  [key=0, style=bold, color=blue];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_248  [key=2, style=dotted];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_311  [key=2, style=dotted];
m6_323 -> m6_320  [key=0, style=bold, color=blue];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_25  [key=2, style=dotted];
m6_328 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_3  [key=2, style=dotted];
m6_329 -> m6_23  [key=2, style=dotted];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_82  [key=2, style=dotted];
m6_331 -> m6_327  [key=0, style=bold, color=blue];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_248  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_311  [key=2, style=dotted];
m6_335 -> m6_332  [key=0, style=bold, color=blue];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_341  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_25  [key=2, style=dotted];
m6_340 -> m6_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_22  [key=2, style=dotted];
m6_341 -> m6_23  [key=2, style=dotted];
m6_341 -> m6_343  [key=1, style=dashed, color=darkseagreen4, label=record];
m6_345 -> m6_346  [key=0, style=solid];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_82  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_82  [key=2, style=dotted];
m6_344 -> m6_339  [key=0, style=bold, color=blue];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_348  [key=2, style=dotted];
m6_347 -> m6_345  [key=0, style=bold, color=blue];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_25  [key=2, style=dotted];
m6_353 -> m6_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_3  [key=2, style=dotted];
m6_354 -> m6_23  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_82  [key=2, style=dotted];
m6_356 -> m6_352  [key=0, style=bold, color=blue];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_348  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_348  [key=2, style=dotted];
m6_360 -> m6_357  [key=0, style=bold, color=blue];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_366  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_25  [key=2, style=dotted];
m6_365 -> m6_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_366 -> m6_367  [key=0, style=solid];
m6_366 -> m6_3  [key=2, style=dotted];
m6_366 -> m6_23  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_371  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_369 -> m6_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_82  [key=2, style=dotted];
m6_368 -> m6_364  [key=0, style=bold, color=blue];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_348  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_348  [key=2, style=dotted];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_374  [key=2, style=dotted];
m6_373 -> m6_369  [key=0, style=bold, color=blue];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_380  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_25  [key=2, style=dotted];
m6_379 -> m6_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_3  [key=2, style=dotted];
m6_380 -> m6_23  [key=2, style=dotted];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_385  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_82  [key=2, style=dotted];
m6_382 -> m6_378  [key=0, style=bold, color=blue];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_348  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_374  [key=2, style=dotted];
m6_386 -> m6_383  [key=0, style=bold, color=blue];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_25  [key=2, style=dotted];
m6_391 -> m6_395  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_3  [key=2, style=dotted];
m6_392 -> m6_23  [key=2, style=dotted];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_397  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_82  [key=2, style=dotted];
m6_394 -> m6_390  [key=0, style=bold, color=blue];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_348  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_374  [key=2, style=dotted];
m6_398 -> m6_395  [key=0, style=bold, color=blue];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_404  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_25  [key=2, style=dotted];
m6_403 -> m6_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_22  [key=2, style=dotted];
m6_404 -> m6_409  [key=2, style=dotted];
m6_404 -> m6_406  [key=1, style=dashed, color=darkseagreen4, label=records];
m6_404 -> m6_407  [key=1, style=dashed, color=darkseagreen4, label=records];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_412  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_410 -> m6_413  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_410 -> m6_414  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_410 -> m6_415  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_82  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_82  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_82  [key=2, style=dotted];
m6_408 -> m6_402  [key=0, style=bold, color=blue];
m6_411 -> m6_412  [key=0, style=solid];
m6_411 -> m6_348  [key=2, style=dotted];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_348  [key=2, style=dotted];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_348  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_414 -> m6_348  [key=2, style=dotted];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_417  [key=2, style=dotted];
m6_416 -> m6_410  [key=0, style=bold, color=blue];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_423  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_25  [key=2, style=dotted];
m6_422 -> m6_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_3  [key=2, style=dotted];
m6_423 -> m6_23  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_428  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_426 -> m6_429  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_426 -> m6_430  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_82  [key=2, style=dotted];
m6_425 -> m6_421  [key=0, style=bold, color=blue];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_348  [key=2, style=dotted];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_348  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_348  [key=2, style=dotted];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_417  [key=2, style=dotted];
m6_431 -> m6_426  [key=0, style=bold, color=blue];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_437  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_25  [key=2, style=dotted];
m6_436 -> m6_440  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_3  [key=2, style=dotted];
m6_437 -> m6_23  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_442  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_82  [key=2, style=dotted];
m6_439 -> m6_435  [key=0, style=bold, color=blue];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_348  [key=2, style=dotted];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_417  [key=2, style=dotted];
m6_443 -> m6_440  [key=0, style=bold, color=blue];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_449  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_448 -> m6_449  [key=0, style=solid];
m6_448 -> m6_25  [key=2, style=dotted];
m6_448 -> m6_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_449 -> m6_450  [key=0, style=solid];
m6_449 -> m6_3  [key=2, style=dotted];
m6_449 -> m6_23  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_454  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_82  [key=2, style=dotted];
m6_451 -> m6_447  [key=0, style=bold, color=blue];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_348  [key=2, style=dotted];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_417  [key=2, style=dotted];
m6_455 -> m6_452  [key=0, style=bold, color=blue];
m6_459 -> m6_460  [key=0, style=solid];
m6_459 -> m6_461  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_25  [key=2, style=dotted];
m6_460 -> m6_464  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_461 -> m6_462  [key=0, style=solid];
m6_461 -> m6_3  [key=2, style=dotted];
m6_461 -> m6_23  [key=2, style=dotted];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_82  [key=2, style=dotted];
m6_463 -> m6_459  [key=0, style=bold, color=blue];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_348  [key=2, style=dotted];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_417  [key=2, style=dotted];
m6_467 -> m6_464  [key=0, style=bold, color=blue];
m6_312 -> m6_313  [key=0, style=solid];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_12  [key=2, style=dotted];
m6_313 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_314 -> m6_312  [key=0, style=bold, color=blue];
m6_261 -> m6_262  [key=0, style=solid];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_12  [key=2, style=dotted];
m6_262 -> m6_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_263 -> m6_261  [key=0, style=bold, color=blue];
m6_468 -> m6_469  [key=0, style=solid];
m6_468 -> m6_470  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m6_469 -> m6_470  [key=0, style=solid];
m6_469 -> m6_472  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_473  [key=2, style=dotted];
m6_471 -> m6_468  [key=0, style=bold, color=blue];
m6_456 -> m6_457  [key=0, style=solid];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_12  [key=2, style=dotted];
m6_457 -> m6_459  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_458 -> m6_456  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_9 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=2, style=dotted];
m6_10 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_11 -> m6_8  [key=0, style=bold, color=blue];
m6_53 -> m6_54  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_54 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_12  [key=2, style=dotted];
m6_55 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_56 -> m6_53  [key=0, style=bold, color=blue];
m6_349 -> m6_350  [key=0, style=solid];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_12  [key=2, style=dotted];
m6_350 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_351 -> m6_349  [key=0, style=bold, color=blue];
m6_418 -> m6_419  [key=0, style=solid];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_12  [key=2, style=dotted];
m6_419 -> m6_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_420 -> m6_418  [key=0, style=bold, color=blue];
m6_249 -> m6_250  [key=0, style=solid];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_12  [key=2, style=dotted];
m6_250 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_251 -> m6_249  [key=0, style=bold, color=blue];
m6_287 -> m6_288  [key=0, style=solid];
m6_288 -> m6_289  [key=0, style=solid];
m6_288 -> m6_12  [key=2, style=dotted];
m6_288 -> m6_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_289 -> m6_287  [key=0, style=bold, color=blue];
m6_336 -> m6_337  [key=0, style=solid];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_12  [key=2, style=dotted];
m6_337 -> m6_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_338 -> m6_336  [key=0, style=bold, color=blue];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_12  [key=2, style=dotted];
m6_193 -> m6_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_194 -> m6_192  [key=0, style=bold, color=blue];
m6_479 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_193  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_224  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_236  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_253  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_277  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_288  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_291  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_300  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_313  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_350  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_353  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_362  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_365  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_376  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_379  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_388  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_391  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_400  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_403  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_419  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_422  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_433  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_436  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_445  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_448  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_457  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_479 -> m6_460  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m6_480 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_480 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_481 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_482 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_482 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_483 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_484 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_484 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_485 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_486 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_487 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_488 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_489 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=state];
m7_19 -> m7_73  [key=0, style=solid, color=red];
m7_73 -> m7_74  [key=0, style=solid, color=red];
m7_73 -> m7_75  [key=2, style=dotted, color=red];
m7_74 -> m7_19  [key=0, style=bold, color=blue];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_15 -> m7_16  [key=0, style=solid, color=red];
m7_15 -> m7_19  [key=2, style=dotted, color=red];
m7_16 -> m7_17  [key=0, style=solid, color=red];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_20  [key=2, style=dotted, color=red];
m7_18 -> m7_14  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=2, style=dotted];
m7_7 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid, color=red];
m7_22 -> m7_23  [key=0, style=solid, color=red];
m7_22 -> m7_28  [key=2, style=dotted, color=red];
m7_22 -> m7_29  [key=2, style=dotted, color=red];
m7_22 -> m7_34  [key=1, style=dashed, color=red, label="lambda expression"];
m7_22 -> m7_38  [key=1, style=dashed, color=red, label="lambda expression"];
m7_23 -> m7_24  [key=0, style=solid, color=red];
m7_23 -> m7_19  [key=2, style=dotted, color=red];
m7_23 -> m7_25  [key=1, style=dashed, color=red, label=component];
m7_23 -> m7_43  [key=1, style=dashed, color=red, label=component];
m7_24 -> m7_25  [key=0, style=solid, color=red];
m7_24 -> m7_30  [key=2, style=dotted, color=red];
m7_24 -> m7_31  [key=2, style=dotted, color=red];
m7_25 -> m7_26  [key=0, style=solid, color=red];
m7_25 -> m7_9  [key=2, style=dotted, color=red];
m7_25 -> m7_42  [key=1, style=dashed, color=red, label="lambda expression"];
m7_26 -> m7_27  [key=0, style=solid, color=red];
m7_26 -> m7_32  [key=2, style=dotted, color=red];
m7_26 -> m7_33  [key=2, style=dotted, color=red];
m7_26 -> m7_46  [key=1, style=dashed, color=red, label="lambda expression"];
m7_27 -> m7_21  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_4  [key=2, style=dotted, color=red];
m7_2 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_5  [key=2, style=dotted, color=red];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_59 -> m7_60  [key=0, style=solid, color=red];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_13  [key=2, style=dotted];
m7_12 -> m7_10  [key=0, style=bold, color=blue];
m7_34 -> m7_35  [key=0, style=solid, color=red];
m7_38 -> m7_39  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid, color=red];
m7_43 -> m7_45  [key=2, style=dotted, color=red];
m7_42 -> m7_43  [key=0, style=solid, color=red];
m7_46 -> m7_47  [key=0, style=solid, color=red];
m7_35 -> m7_36  [key=0, style=solid, color=red];
m7_35 -> m7_9  [key=2, style=dotted, color=red];
m7_35 -> m7_37  [key=2, style=dotted, color=red];
m7_36 -> m7_34  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [key=2, style=dotted];
m7_40 -> m7_38  [key=0, style=bold, color=blue];
m7_44 -> m7_42  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid, color=red];
m7_47 -> m7_37  [key=2, style=dotted, color=red];
m7_48 -> m7_46  [key=0, style=bold, color=blue];
m7_57 -> m7_58  [key=0, style=solid, color=red];
m7_57 -> m7_45  [key=2, style=dotted, color=red];
m7_56 -> m7_57  [key=0, style=solid, color=red];
m7_58 -> m7_56  [key=0, style=bold, color=blue];
m7_60 -> m7_61  [key=0, style=solid, color=red];
m7_60 -> m7_9  [key=2, style=dotted, color=red];
m7_60 -> m7_37  [key=2, style=dotted, color=red];
m7_61 -> m7_59  [key=0, style=bold, color=blue];
m7_65 -> m7_66  [key=0, style=solid, color=red];
m7_66 -> m7_67  [key=0, style=solid, color=red];
m7_66 -> m7_19  [key=2, style=dotted, color=red];
m7_67 -> m7_68  [key=0, style=solid, color=red];
m7_67 -> m7_70  [key=2, style=dotted, color=red];
m7_68 -> m7_69  [key=0, style=solid, color=red];
m7_68 -> m7_71  [key=2, style=dotted, color=red];
m7_68 -> m7_72  [key=2, style=dotted, color=red];
m7_69 -> m7_65  [key=0, style=bold, color=blue];
m7_49 -> m7_50  [key=0, style=solid, color=red];
m7_50 -> m7_51  [key=0, style=solid, color=red];
m7_50 -> m7_19  [key=2, style=dotted, color=red];
m7_50 -> m7_52  [key=1, style=dashed, color=red, label=component];
m7_50 -> m7_57  [key=1, style=dashed, color=red, label=component];
m7_51 -> m7_52  [key=0, style=solid, color=red];
m7_51 -> m7_55  [key=2, style=dotted, color=red];
m7_52 -> m7_53  [key=0, style=solid, color=red];
m7_52 -> m7_9  [key=2, style=dotted, color=red];
m7_52 -> m7_56  [key=1, style=dashed, color=red, label="lambda expression"];
m7_53 -> m7_54  [key=0, style=solid, color=red];
m7_53 -> m7_33  [key=2, style=dotted, color=red];
m7_53 -> m7_59  [key=1, style=dashed, color=red, label="lambda expression"];
m7_54 -> m7_49  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid, color=red];
m7_63 -> m7_64  [key=0, style=solid, color=red];
m7_63 -> m7_55  [key=2, style=dotted, color=red];
m7_64 -> m7_62  [key=0, style=bold, color=blue];
m7_76 -> m7_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_15  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_17  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_22  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_23  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_24  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_25  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_43  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_26  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_47  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_50  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_51  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_57  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_63  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_66  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_68  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_76 -> m7_73  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m7_77 -> m7_43  [key=1, style=dashed, color=red, label=component];
m7_78 -> m7_57  [key=1, style=dashed, color=red, label=component];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_9  [key=2, style=dotted];
m9_6 -> m9_4  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_4  [key=2, style=dotted];
m9_8 -> m9_5  [key=0, style=bold, color=blue];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_21  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_9  [key=2, style=dotted];
m9_19 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_17  [key=0, style=bold, color=blue];
m9_29 -> m9_30  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_9  [key=2, style=dotted];
m9_30 -> m9_27  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=2, style=dotted];
m9_32 -> m9_29  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_9  [key=2, style=dotted];
m9_24 -> m9_27  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_28  [key=2, style=dotted];
m9_26 -> m9_23  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_4  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_9  [key=2, style=dotted];
m9_12 -> m9_4  [key=2, style=dotted];
m9_13 -> m9_10  [key=0, style=bold, color=blue];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_9  [key=2, style=dotted];
m9_15 -> m9_4  [key=2, style=dotted];
m9_16 -> m9_14  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_4  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=2, style=dotted];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m10_62 -> m10_63  [key=0, style=solid];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_65  [key=0, style=solid];
m10_64 -> m10_63  [key=0, style=solid];
m10_64 -> m10_3  [key=2, style=dotted];
m10_64 -> m10_66  [key=2, style=dotted];
m10_65 -> m10_62  [key=0, style=bold, color=blue];
m10_56 -> m10_57  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_60  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_61  [key=2, style=dotted];
m10_58 -> m10_52  [key=2, style=dotted];
m10_59 -> m10_56  [key=0, style=bold, color=blue];
m10_10 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_16  [key=1, style=dashed, color=green, label=Table];
m10_11 -> m10_12  [key=0, style=solid, color=green];
m10_11 -> m10_16  [key=0, style=solid, color=green];
m10_11 -> m10_13  [key=1, style=dashed, color=green, label=row];
m10_11 -> m10_14  [key=1, style=dashed, color=green, label=row];
m10_16 -> m10_17  [key=0, style=solid, color=green];
m10_16 -> m10_20  [key=2, style=dotted, color=green];
m10_16 -> m10_21  [key=2, style=dotted, color=green];
m10_16 -> m10_22  [key=1, style=dashed, color=green, label="lambda expression"];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_13 -> m10_14  [key=0, style=solid, color=red];
m10_13 -> m10_11  [key=0, style=solid, color=green];
m10_13 -> m10_18  [key=2, style=dotted];
m10_14 -> m10_15  [key=0, style=solid, color=red];
m10_14 -> m10_19  [key=2, style=dotted, color=red];
m10_14 -> m10_4  [key=2, style=dotted, color=red];
m10_15 -> m10_13  [key=0, style=solid];
m10_15 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_17 -> m10_10  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_1 -> m10_3  [key=2, style=dotted, color=green];
m10_1 -> m10_4  [key=2, style=dotted, color=green];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_6 -> m10_7  [key=0, style=solid, color=green];
m10_6 -> m10_8  [key=2, style=dotted, color=green];
m10_6 -> m10_9  [key=2, style=dotted, color=green];
m10_7 -> m10_5  [key=0, style=bold, color=blue];
m10_53 -> m10_54  [key=0, style=solid, color=green];
m10_54 -> m10_55  [key=0, style=solid, color=green];
m10_54 -> m10_52  [key=2, style=dotted, color=green];
m10_55 -> m10_53  [key=0, style=bold, color=blue];
m10_25 -> m10_26  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid, color=green];
m10_26 -> m10_32  [key=2, style=dotted];
m10_26 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=cts];
m10_26 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label=cts];
m10_27 -> m10_28  [key=0, style=solid, color=green];
m10_27 -> m10_33  [key=2, style=dotted, color=green];
m10_27 -> m10_35  [key=1, style=dashed, color=green, label="lambda expression"];
m10_28 -> m10_29  [key=0, style=solid, color=red];
m10_28 -> m10_31  [key=0, style=solid];
m10_28 -> m10_34  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid, color=red];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_25  [key=0, style=bold, color=blue];
m10_35 -> m10_36  [key=0, style=solid, color=red];
m10_22 -> m10_23  [key=0, style=solid, color=green];
m10_23 -> m10_24  [key=0, style=solid, color=green];
m10_24 -> m10_22  [key=0, style=bold, color=blue];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_41  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid, color=red];
m10_36 -> m10_39  [key=2, style=dotted, color=red];
m10_36 -> m10_40  [key=2, style=dotted, color=red];
m10_38 -> m10_35  [key=0, style=bold, color=blue];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_47  [key=0, style=solid];
m10_46 -> m10_44  [key=0, style=solid];
m10_46 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_48  [key=2, style=dotted];
m10_47 -> m10_42  [key=0, style=bold, color=blue];
m10_49 -> m10_50  [key=0, style=solid, color=green];
m10_50 -> m10_51  [key=0, style=solid, color=green];
m10_50 -> m10_52  [key=2, style=dotted, color=green];
m10_51 -> m10_49  [key=0, style=bold, color=blue];
m10_67 -> m10_6  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_16  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_50  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_54  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m10_67 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m10_68 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=cts];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_5  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_6  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_0  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_11  [key=2, style=dotted];
m12_25 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_12  [key=2, style=dotted];
m12_27 -> m12_24  [key=0, style=bold, color=blue];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_11  [key=2, style=dotted];
m12_8 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_12  [key=2, style=dotted];
m12_10 -> m12_7  [key=0, style=bold, color=blue];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_5  [key=2, style=dotted];
m12_33 -> m12_37  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_5  [key=2, style=dotted];
m12_35 -> m12_12  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_36 -> m12_31  [key=0, style=bold, color=blue];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_11  [key=2, style=dotted];
m12_18 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_12  [key=2, style=dotted];
m12_20 -> m12_17  [key=0, style=bold, color=blue];
m12_37 -> m12_78  [key=0, style=solid, color=green];
m12_37 -> m12_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime? localTime"];
m12_37 -> m12_64  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime? localTime"];
m12_78 -> m12_79  [key=0, style=solid, color=green];
m12_78 -> m12_16  [key=2, style=dotted, color=green];
m12_79 -> m12_37  [key=0, style=bold, color=blue];
m12_63 -> m12_64  [key=0, style=solid];
m12_65 -> m12_37  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_5  [key=2, style=dotted];
m12_64 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_51  [key=2, style=dotted];
m12_66 -> m12_62  [key=2, style=dotted];
m12_66 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label=matches];
m12_68 -> m12_12  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_67 -> m12_12  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_69 -> m12_63  [key=0, style=bold, color=blue];
m12_44 -> m12_45  [key=0, style=solid];
m12_45 -> m12_37  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=instant];
m12_46 -> m12_11  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_47 -> m12_44  [key=0, style=bold, color=blue];
m12_38 -> m12_39  [key=0, style=solid];
m12_39 -> m12_37  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_43  [key=2, style=dotted];
m12_41 -> m12_12  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_42 -> m12_38  [key=0, style=bold, color=blue];
m12_52 -> m12_53  [key=0, style=solid];
m12_54 -> m12_37  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_5  [key=2, style=dotted];
m12_53 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_53 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_53 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_53 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_61  [key=2, style=dotted];
m12_55 -> m12_51  [key=2, style=dotted];
m12_55 -> m12_62  [key=2, style=dotted];
m12_55 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=matches];
m12_55 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=matches];
m12_55 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=matches];
m12_57 -> m12_12  [key=2, style=dotted];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_61  [key=2, style=dotted];
m12_58 -> m12_12  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_61  [key=2, style=dotted];
m12_59 -> m12_12  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_56 -> m12_12  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_60 -> m12_52  [key=0, style=bold, color=blue];
m12_70 -> m12_71  [key=0, style=solid];
m12_71 -> m12_5  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=time];
m12_72 -> m12_6  [key=2, style=dotted];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_76  [key=2, style=dotted];
m12_73 -> m12_51  [key=2, style=dotted];
m12_73 -> m12_61  [key=2, style=dotted];
m12_73 -> m12_74  [key=0, style=solid];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_77  [key=2, style=dotted];
m12_75 -> m12_70  [key=0, style=bold, color=blue];
m12_48 -> m12_49  [key=0, style=solid];
m12_14 -> m12_16  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_5  [key=2, style=dotted];
m12_22 -> m12_16  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_5  [key=2, style=dotted];
m12_29 -> m12_16  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_15 -> m12_13  [key=0, style=bold, color=blue];
m12_21 -> m12_22  [key=0, style=solid];
m12_23 -> m12_21  [key=0, style=bold, color=blue];
m12_28 -> m12_29  [key=0, style=solid];
m12_30 -> m12_28  [key=0, style=bold, color=blue];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_51  [key=2, style=dotted];
m12_50 -> m12_48  [key=0, style=bold, color=blue];
m12_80 -> m12_78  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_80 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ScheduleInstantFacts"];
m12_81 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=instant];
m13_51 -> m13_52  [key=0, style=solid, color=red];
m13_51 -> m13_40  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid, color=red];
m13_52 -> m13_57  [key=2, style=dotted, color=red];
m13_52 -> m13_41  [key=2, style=dotted];
m13_52 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_53 -> m13_54  [key=0, style=solid, color=red];
m13_53 -> m13_58  [key=2, style=dotted, color=red];
m13_53 -> m13_49  [key=0, style=bold, color=blue];
m13_54 -> m13_55  [key=0, style=solid, color=red];
m13_54 -> m13_59  [key=2, style=dotted, color=red];
m13_54 -> m13_60  [key=1, style=dashed, color=red, label="lambda expression"];
m13_55 -> m13_56  [key=0, style=solid, color=red];
m13_55 -> m13_59  [key=2, style=dotted, color=red];
m13_55 -> m13_63  [key=1, style=dashed, color=red, label="lambda expression"];
m13_55 -> m13_57  [key=2, style=dotted];
m13_56 -> m13_51  [key=0, style=bold, color=blue];
m13_56 -> m13_54  [key=0, style=bold, color=blue];
m13_16 -> m13_19  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_49 -> m13_50  [key=0, style=solid, color=red];
m13_49 -> m13_43  [key=2, style=dotted, color=red];
m13_50 -> m13_51  [key=0, style=solid, color=green];
m13_50 -> m13_39  [key=2, style=dotted, color=green];
m13_50 -> m13_48  [key=0, style=bold, color=blue];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=2, style=dotted];
m13_20 -> m13_23  [key=2, style=dotted];
m13_39 -> m13_58  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid, color=red];
m13_36 -> m13_41  [key=2, style=dotted, color=green];
m13_36 -> m13_60  [key=1, style=dashed, color=green, label="lambda expression"];
m13_36 -> m13_22  [key=2, style=dotted, color=red];
m13_36 -> m13_40  [key=1, style=dashed, color=red, label="lambda expression"];
m13_35 -> m13_36  [key=0, style=solid, color=red];
m13_35 -> m13_40  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid, color=red];
m13_37 -> m13_41  [key=2, style=dotted];
m13_37 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_37 -> m13_39  [key=2, style=dotted, color=red];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_39  [key=2, style=dotted];
m13_34 -> m13_32  [key=0, style=bold, color=blue];
m13_38 -> m13_33  [key=0, style=bold, color=blue];
m13_38 -> m13_35  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_76 -> m13_77  [key=0, style=solid];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_17  [key=2, style=dotted];
m13_77 -> m13_18  [key=2, style=dotted];
m13_77 -> m13_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_78 -> m13_79  [key=0, style=solid, color=red];
m13_78 -> m13_57  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid, color=red];
m13_79 -> m13_58  [key=2, style=dotted, color=red];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_59  [key=2, style=dotted];
m13_80 -> m13_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_81 -> m13_76  [key=0, style=bold, color=blue];
m13_43 -> m13_62  [key=0, style=solid, color=green];
m13_43 -> m13_27  [key=2, style=dotted, color=green];
m13_44 -> m13_45  [key=0, style=solid, color=red];
m13_45 -> m13_46  [key=0, style=solid, color=red];
m13_45 -> m13_22  [key=2, style=dotted, color=red];
m13_45 -> m13_48  [key=1, style=dashed, color=red, label="lambda expression"];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_39  [key=2, style=dotted];
m13_47 -> m13_44  [key=0, style=bold, color=blue];
m13_27 -> m13_28  [key=0, style=solid, color=green];
m13_27 -> m13_20  [key=2, style=dotted, color=green];
m13_67 -> m13_68  [key=0, style=solid];
m13_68 -> m13_69  [key=0, style=solid, color=red];
m13_68 -> m13_57  [key=2, style=dotted];
m13_69 -> m13_70  [key=0, style=solid, color=red];
m13_69 -> m13_58  [key=2, style=dotted, color=red];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_59  [key=2, style=dotted];
m13_70 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_71 -> m13_67  [key=0, style=bold, color=blue];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_32  [key=2, style=dotted];
m13_59 -> m13_39  [key=0, style=bold, color=blue];
m13_25 -> m13_26  [key=0, style=solid, color=red];
m13_25 -> m13_27  [key=2, style=dotted, color=red];
m13_26 -> m13_27  [key=0, style=solid, color=green];
m13_26 -> m13_19  [key=2, style=dotted];
m13_26 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_26 -> m13_24  [key=0, style=bold, color=blue];
m13_28 -> m13_25  [key=0, style=bold, color=blue];
m13_28 -> m13_29  [key=0, style=solid];
m13_17 -> m13_20  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_15  [key=0, style=bold, color=blue];
m13_40 -> m13_41  [key=0, style=solid, color=red];
m13_57 -> m13_91  [key=0, style=solid, color=red];
m13_0 -> m13_1  [key=0, style=solid, color=red];
m13_1 -> m13_2  [key=0, style=solid, color=red];
m13_1 -> m13_11  [key=2, style=dotted, color=red];
m13_2 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_12  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid, color=green];
m13_3 -> m13_13  [key=2, style=dotted, color=red];
m13_3 -> m13_8  [key=2, style=dotted, color=green];
m13_4 -> m13_5  [key=0, style=solid, color=green];
m13_4 -> m13_14  [key=2, style=dotted, color=red];
m13_4 -> m13_17  [key=2, style=dotted, color=green];
m13_4 -> m13_18  [key=2, style=dotted, color=green];
m13_4 -> m13_24  [key=1, style=dashed, color=green, label="lambda expression"];
m13_5 -> m13_6  [key=0, style=solid, color=red];
m13_5 -> m13_15  [key=2, style=dotted, color=red];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_16  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid, color=red];
m13_7 -> m13_17  [key=2, style=dotted];
m13_7 -> m13_18  [key=2, style=dotted];
m13_7 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_8 -> m13_17  [key=2, style=dotted, color=red];
m13_8 -> m13_18  [key=2, style=dotted, color=red];
m13_8 -> m13_24  [key=1, style=dashed, color=red, label="lambda expression"];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_17  [key=2, style=dotted];
m13_9 -> m13_18  [key=2, style=dotted];
m13_9 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_10 -> m13_0  [key=0, style=bold, color=blue];
m13_24 -> m13_25  [key=0, style=solid, color=red];
m13_24 -> m13_12  [key=0, style=solid, color=green];
m13_21 -> m13_19  [key=0, style=bold, color=blue];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_22  [key=2, style=dotted];
m13_29 -> m13_31  [key=2, style=dotted];
m13_29 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_30 -> m13_28  [key=0, style=bold, color=blue];
m13_30 -> m13_50  [key=0, style=solid];
m13_30 -> m13_32  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_41 -> m13_42  [key=0, style=solid, color=red];
m13_41 -> m13_43  [key=2, style=dotted, color=red];
m13_42 -> m13_40  [key=0, style=bold, color=blue];
m13_48 -> m13_49  [key=0, style=solid, color=red];
m13_48 -> m13_30  [key=0, style=solid];
m13_60 -> m13_61  [key=0, style=solid, color=red];
m13_60 -> m13_43  [key=0, style=solid, color=green];
m13_60 -> m13_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_4  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_36  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_50  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_60 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m13_63 -> m13_64  [key=0, style=solid, color=red];
m13_61 -> m13_62  [key=0, style=solid, color=red];
m13_61 -> m13_27  [key=2, style=dotted, color=red];
m13_62 -> m13_60  [key=0, style=bold, color=blue];
m13_64 -> m13_65  [key=0, style=solid, color=red];
m13_64 -> m13_66  [key=2, style=dotted, color=red];
m13_65 -> m13_63  [key=0, style=bold, color=blue];
m13_72 -> m13_73  [key=0, style=solid];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_22  [key=2, style=dotted];
m13_73 -> m13_75  [key=2, style=dotted];
m13_74 -> m13_72  [key=0, style=bold, color=blue];
m13_82 -> m13_83  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_22  [key=2, style=dotted];
m13_83 -> m13_31  [key=2, style=dotted];
m13_83 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_84 -> m13_82  [key=0, style=bold, color=blue];
m13_85 -> m13_86  [key=0, style=solid];
m13_86 -> m13_87  [key=0, style=solid];
m13_87 -> m13_85  [key=0, style=bold, color=blue];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_22  [key=2, style=dotted];
m13_89 -> m13_75  [key=2, style=dotted];
m13_90 -> m13_88  [key=0, style=bold, color=blue];
m13_12 -> m13_26  [key=0, style=solid, color=green];
m13_12 -> m13_27  [key=2, style=dotted, color=green];
m13_91 -> m13_92  [key=0, style=solid, color=red];
m13_91 -> m13_43  [key=2, style=dotted, color=red];
m13_92 -> m13_57  [key=0, style=bold, color=blue];
m13_93 -> m13_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_8  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_36  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_41  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_45  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_49  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_54  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_55  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_69  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_79  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m13_93 -> m13_91  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.SchedulePollerFacts"];
m14_12 -> m14_13  [key=0, style=solid, color=green];
m14_12 -> m14_22  [key=2, style=dotted, color=green];
m14_12 -> m14_15  [key=1, style=dashed, color=green, label=exception];
m14_12 -> m14_17  [key=1, style=dashed, color=green, label=exception];
m14_36 -> m14_37  [key=0, style=solid, color=red];
m14_37 -> m14_38  [key=0, style=solid, color=red];
m14_37 -> m14_23  [key=2, style=dotted, color=red];
m14_37 -> m14_40  [key=1, style=dashed, color=red, label="lambda expression"];
m14_38 -> m14_39  [key=0, style=solid, color=red];
m14_38 -> m14_24  [key=2, style=dotted, color=red];
m14_39 -> m14_36  [key=0, style=bold, color=blue];
m14_21 -> m14_22  [key=0, style=solid, color=red];
m14_21 -> m14_24  [key=2, style=dotted, color=red];
m14_26 -> m14_27  [key=0, style=solid, color=red];
m14_26 -> m14_28  [key=2, style=dotted, color=red];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid, color=red];
m14_63 -> m14_55  [key=2, style=dotted];
m14_64 -> m14_65  [key=0, style=solid, color=red];
m14_64 -> m14_56  [key=2, style=dotted, color=red];
m14_65 -> m14_66  [key=0, style=solid, color=red];
m14_65 -> m14_68  [key=2, style=dotted, color=red];
m14_65 -> m14_57  [key=2, style=dotted, color=red];
m14_65 -> m14_69  [key=1, style=dashed, color=red, label="lambda expression"];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_68  [key=2, style=dotted];
m14_66 -> m14_57  [key=2, style=dotted];
m14_66 -> m14_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_67 -> m14_62  [key=0, style=bold, color=blue];
m14_19 -> m14_20  [key=0, style=solid, color=red];
m14_20 -> m14_21  [key=0, style=solid, color=red];
m14_20 -> m14_23  [key=2, style=dotted, color=red];
m14_20 -> m14_25  [key=1, style=dashed, color=red, label="lambda expression"];
m14_22 -> m14_19  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=green];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_8  [key=2, style=dotted, color=red];
m14_1 -> m14_23  [key=2, style=dotted, color=green];
m14_1 -> m14_15  [key=1, style=dashed, color=green, label="lambda expression"];
m14_2 -> m14_3  [key=0, style=solid, color=red];
m14_2 -> m14_9  [key=2, style=dotted, color=red];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_3 -> m14_4  [key=0, style=solid, color=red];
m14_3 -> m14_10  [key=2, style=dotted, color=red];
m14_4 -> m14_5  [key=0, style=solid, color=red];
m14_4 -> m14_11  [key=2, style=dotted, color=red];
m14_5 -> m14_6  [key=0, style=solid, color=red];
m14_5 -> m14_12  [key=2, style=dotted, color=red];
m14_5 -> m14_7  [key=2, style=dotted];
m14_5 -> m14_17  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid, color=red];
m14_6 -> m14_13  [key=2, style=dotted, color=red];
m14_6 -> m14_14  [key=2, style=dotted, color=red];
m14_6 -> m14_15  [key=1, style=dashed, color=red, label="lambda expression"];
m14_7 -> m14_0  [key=0, style=bold, color=blue];
m14_76 -> m14_77  [key=0, style=solid, color=red];
m14_77 -> m14_78  [key=0, style=solid, color=red];
m14_77 -> m14_85  [key=2, style=dotted, color=red];
m14_77 -> m14_82  [key=1, style=dashed, color=red, label=component1];
m14_78 -> m14_79  [key=0, style=solid, color=red];
m14_78 -> m14_13  [key=2, style=dotted];
m14_78 -> m14_86  [key=2, style=dotted];
m14_78 -> m14_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_78 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_82 -> m14_83  [key=0, style=solid, color=red];
m14_82 -> m14_57  [key=2, style=dotted, color=red];
m14_82 -> m14_94  [key=1, style=dashed, color=red, label="lambda expression"];
m14_79 -> m14_80  [key=0, style=solid, color=red];
m14_79 -> m14_85  [key=2, style=dotted, color=red];
m14_79 -> m14_83  [key=1, style=dashed, color=red, label=component2];
m14_80 -> m14_81  [key=0, style=solid, color=red];
m14_80 -> m14_55  [key=2, style=dotted];
m14_83 -> m14_84  [key=0, style=solid, color=red];
m14_83 -> m14_57  [key=2, style=dotted, color=red];
m14_83 -> m14_97  [key=1, style=dashed, color=red, label="lambda expression"];
m14_81 -> m14_82  [key=0, style=solid, color=red];
m14_81 -> m14_56  [key=2, style=dotted, color=red];
m14_84 -> m14_76  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid, color=red];
m14_30 -> m14_23  [key=2, style=dotted, color=red];
m14_30 -> m14_33  [key=1, style=dashed, color=red, label="lambda expression"];
m14_31 -> m14_30  [key=0, style=bold, color=blue];
m14_31 -> m14_32  [key=0, style=solid, color=red];
m14_31 -> m14_24  [key=2, style=dotted, color=red];
m14_55 -> m14_109  [key=0, style=solid, color=red];
m14_109 -> m14_110  [key=0, style=solid, color=red];
m14_109 -> m14_28  [key=2, style=dotted, color=red];
m14_110 -> m14_55  [key=0, style=bold, color=blue];
m14_18 -> m14_8  [key=0, style=bold, color=blue];
m14_85 -> m14_111  [key=0, style=solid, color=red];
m14_111 -> m14_112  [key=0, style=solid, color=red];
m14_111 -> m14_115  [key=2, style=dotted, color=red];
m14_111 -> m14_113  [key=1, style=dashed, color=red, label=mock];
m14_112 -> m14_113  [key=0, style=solid, color=red];
m14_112 -> m14_116  [key=2, style=dotted, color=red];
m14_113 -> m14_114  [key=0, style=solid];
m14_114 -> m14_85  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid, color=green];
m14_9 -> m14_10  [key=0, style=solid, color=green];
m14_9 -> m14_14  [key=1, style=dashed, color=green, label=connection];
m14_10 -> m14_11  [key=0, style=solid, color=green];
m14_10 -> m14_20  [key=2, style=dotted, color=green];
m14_10 -> m14_25  [key=1, style=dashed, color=green, label="lambda expression"];
m14_10 -> m14_14  [key=1, style=dashed, color=green, label=job];
m14_14 -> m14_15  [key=0, style=solid, color=green];
m14_14 -> m14_24  [key=2, style=dotted, color=green];
m14_11 -> m14_14  [key=1, style=dashed, color=green, label=state];
m14_11 -> m14_12  [key=0, style=solid, color=green];
m14_11 -> m14_21  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid, color=green];
m14_13 -> m14_23  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid, color=red];
m14_15 -> m14_7  [key=2, style=dotted];
m14_15 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label=context];
m14_15 -> m14_5  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_26  [key=2, style=dotted];
m14_17 -> m14_15  [key=0, style=bold, color=blue];
m14_16 -> m14_17  [key=0, style=solid, color=red];
m14_16 -> m14_25  [key=2, style=dotted, color=green];
m14_16 -> m14_18  [key=2, style=dotted, color=red];
m14_100 -> m14_101  [key=0, style=solid];
m14_101 -> m14_102  [key=0, style=solid, color=red];
m14_101 -> m14_55  [key=2, style=dotted];
m14_102 -> m14_103  [key=0, style=solid, color=red];
m14_102 -> m14_56  [key=2, style=dotted, color=red];
m14_103 -> m14_104  [key=0, style=solid, color=red];
m14_103 -> m14_57  [key=2, style=dotted, color=red];
m14_103 -> m14_105  [key=1, style=dashed, color=red, label="lambda expression"];
m14_104 -> m14_100  [key=0, style=bold, color=blue];
m14_29 -> m14_30  [key=0, style=solid, color=red];
m14_32 -> m14_29  [key=0, style=bold, color=blue];
m14_50 -> m14_51  [key=0, style=solid];
m14_51 -> m14_52  [key=0, style=solid, color=red];
m14_51 -> m14_55  [key=2, style=dotted];
m14_52 -> m14_53  [key=0, style=solid, color=red];
m14_52 -> m14_56  [key=2, style=dotted, color=red];
m14_53 -> m14_54  [key=0, style=solid, color=red];
m14_53 -> m14_57  [key=2, style=dotted, color=red];
m14_53 -> m14_58  [key=1, style=dashed, color=red, label="lambda expression"];
m14_54 -> m14_50  [key=0, style=bold, color=blue];
m14_28 -> m14_27  [key=0, style=solid, color=green];
m14_28 -> m14_30  [key=2, style=dotted, color=green];
m14_43 -> m14_44  [key=0, style=solid, color=red];
m14_44 -> m14_45  [key=0, style=solid, color=red];
m14_44 -> m14_23  [key=2, style=dotted, color=red];
m14_44 -> m14_47  [key=1, style=dashed, color=red, label="lambda expression"];
m14_45 -> m14_46  [key=0, style=solid, color=red];
m14_45 -> m14_24  [key=2, style=dotted, color=red];
m14_46 -> m14_43  [key=0, style=bold, color=blue];
m14_105 -> m14_106  [key=0, style=solid, color=red];
m14_25 -> m14_26  [key=0, style=solid, color=red];
m14_25 -> m14_28  [key=0, style=solid, color=green];
m14_27 -> m14_25  [key=0, style=bold, color=blue];
m14_33 -> m14_34  [key=0, style=solid, color=red];
m14_34 -> m14_35  [key=0, style=solid, color=red];
m14_34 -> m14_28  [key=2, style=dotted, color=red];
m14_35 -> m14_33  [key=0, style=bold, color=blue];
m14_40 -> m14_41  [key=0, style=solid, color=red];
m14_41 -> m14_42  [key=0, style=solid, color=red];
m14_41 -> m14_28  [key=2, style=dotted, color=red];
m14_42 -> m14_40  [key=0, style=bold, color=blue];
m14_47 -> m14_48  [key=0, style=solid, color=red];
m14_48 -> m14_49  [key=0, style=solid, color=red];
m14_48 -> m14_28  [key=2, style=dotted, color=red];
m14_49 -> m14_47  [key=0, style=bold, color=blue];
m14_58 -> m14_59  [key=0, style=solid, color=red];
m14_59 -> m14_60  [key=0, style=solid, color=red];
m14_59 -> m14_61  [key=2, style=dotted, color=red];
m14_60 -> m14_58  [key=0, style=bold, color=blue];
m14_69 -> m14_70  [key=0, style=solid, color=red];
m14_72 -> m14_73  [key=0, style=solid];
m14_70 -> m14_71  [key=0, style=solid, color=red];
m14_70 -> m14_18  [key=2, style=dotted, color=red];
m14_71 -> m14_69  [key=0, style=bold, color=blue];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_75  [key=2, style=dotted];
m14_74 -> m14_72  [key=0, style=bold, color=blue];
m14_87 -> m14_88  [key=0, style=solid];
m14_90 -> m14_91  [key=0, style=solid];
m14_94 -> m14_95  [key=0, style=solid, color=red];
m14_97 -> m14_98  [key=0, style=solid, color=red];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_23  [key=2, style=dotted];
m14_88 -> m14_56  [key=2, style=dotted];
m14_89 -> m14_87  [key=0, style=bold, color=blue];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_93  [key=2, style=dotted];
m14_92 -> m14_90  [key=0, style=bold, color=blue];
m14_95 -> m14_96  [key=0, style=solid, color=red];
m14_95 -> m14_56  [key=2, style=dotted, color=red];
m14_96 -> m14_94  [key=0, style=bold, color=blue];
m14_98 -> m14_99  [key=0, style=solid, color=red];
m14_98 -> m14_56  [key=2, style=dotted, color=red];
m14_99 -> m14_97  [key=0, style=bold, color=blue];
m14_106 -> m14_107  [key=0, style=solid, color=red];
m14_106 -> m14_108  [key=2, style=dotted, color=red];
m14_107 -> m14_105  [key=0, style=bold, color=blue];
m14_117 -> m14_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_20  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_26  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_30  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_34  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_37  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_41  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_44  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_48  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_59  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_64  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_65  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_77  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_79  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_81  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_82  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_95  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_83  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_98  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_102  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_103  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_109  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m14_117 -> m14_112  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m15_6 -> m15_7  [key=0, style=solid, color=red];
m15_7 -> m15_8  [key=0, style=solid, color=red];
m15_7 -> m15_10  [key=2, style=dotted, color=red];
m15_7 -> m15_12  [key=1, style=dashed, color=red, label="lambda expression"];
m15_8 -> m15_9  [key=0, style=solid, color=red];
m15_8 -> m15_11  [key=2, style=dotted, color=red];
m15_9 -> m15_6  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid, color=red];
m15_1 -> m15_2  [key=0, style=solid, color=red];
m15_1 -> m15_4  [key=2, style=dotted, color=red];
m15_2 -> m15_3  [key=0, style=solid, color=red];
m15_2 -> m15_5  [key=2, style=dotted, color=red];
m15_3 -> m15_0  [key=0, style=bold, color=blue];
m15_33 -> m15_34  [key=0, style=solid, color=red];
m15_34 -> m15_35  [key=0, style=solid, color=red];
m15_34 -> m15_38  [key=2, style=dotted, color=red];
m15_34 -> m15_10  [key=2, style=dotted, color=red];
m15_34 -> m15_40  [key=1, style=dashed, color=red, label="lambda expression"];
m15_35 -> m15_36  [key=0, style=solid, color=red];
m15_35 -> m15_15  [key=2, style=dotted, color=red];
m15_35 -> m15_44  [key=1, style=dashed, color=red, label=task];
m15_36 -> m15_37  [key=0, style=solid, color=red];
m15_36 -> m15_39  [key=2, style=dotted, color=red];
m15_36 -> m15_43  [key=1, style=dashed, color=red, label="lambda expression"];
m15_37 -> m15_33  [key=0, style=bold, color=blue];
m15_16 -> m15_17  [key=0, style=solid, color=red];
m15_17 -> m15_18  [key=0, style=solid, color=red];
m15_17 -> m15_15  [key=2, style=dotted, color=red];
m15_18 -> m15_19  [key=0, style=solid, color=red];
m15_18 -> m15_20  [key=2, style=dotted, color=red];
m15_18 -> m15_21  [key=2, style=dotted, color=red];
m15_19 -> m15_16  [key=0, style=bold, color=blue];
m15_43 -> m15_44  [key=0, style=solid, color=red];
m15_12 -> m15_13  [key=0, style=solid, color=red];
m15_13 -> m15_14  [key=0, style=solid, color=red];
m15_13 -> m15_15  [key=2, style=dotted, color=red];
m15_14 -> m15_12  [key=0, style=bold, color=blue];
m15_29 -> m15_30  [key=0, style=solid, color=red];
m15_30 -> m15_31  [key=0, style=solid, color=red];
m15_30 -> m15_32  [key=2, style=dotted, color=red];
m15_31 -> m15_29  [key=0, style=bold, color=blue];
m15_40 -> m15_41  [key=0, style=solid, color=red];
m15_44 -> m15_45  [key=0, style=solid, color=red];
m15_44 -> m15_27  [key=2, style=dotted, color=red];
m15_41 -> m15_42  [key=0, style=solid, color=red];
m15_41 -> m15_10  [key=2, style=dotted, color=red];
m15_41 -> m15_32  [key=2, style=dotted, color=red];
m15_42 -> m15_40  [key=0, style=bold, color=blue];
m15_45 -> m15_43  [key=0, style=bold, color=blue];
m15_22 -> m15_23  [key=0, style=solid, color=red];
m15_23 -> m15_24  [key=0, style=solid, color=red];
m15_23 -> m15_15  [key=2, style=dotted, color=red];
m15_24 -> m15_25  [key=0, style=solid, color=red];
m15_24 -> m15_27  [key=2, style=dotted, color=red];
m15_25 -> m15_26  [key=0, style=solid, color=red];
m15_25 -> m15_28  [key=2, style=dotted, color=red];
m15_25 -> m15_29  [key=1, style=dashed, color=red, label="lambda expression"];
m15_26 -> m15_22  [key=0, style=bold, color=blue];
m15_46 -> m15_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_7  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_13  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_17  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_23  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_25  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_30  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_34  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_46 -> m15_35  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m15_47 -> m15_44  [key=1, style=dashed, color=red, label=task];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_14  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_16  [key=2, style=dotted];
m16_10 -> m16_13  [key=1, style=dashed, color=red, label=connection];
m16_14 -> m16_15  [key=0, style=solid, color=red];
m16_14 -> m16_20  [key=2, style=dotted, color=red];
m16_14 -> m16_14  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_14  [key=0, style=solid, color=red];
m16_11 -> m16_13  [key=1, style=dashed, color=red, label=table];
m16_13 -> m16_11  [key=0, style=solid, color=red];
m16_13 -> m16_18  [key=2, style=dotted, color=red];
m16_13 -> m16_19  [key=2, style=dotted, color=red];
m16_12 -> m16_13  [key=0, style=solid, color=red];
m16_12 -> m16_17  [key=2, style=dotted];
m16_15 -> m16_9  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid, color=red];
m16_2 -> m16_5  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerStorage"];
m16_2 -> m16_6  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m16_3 -> m16_4  [key=0, style=solid, color=red];
m16_3 -> m16_5  [key=0, style=solid, color=red];
m16_5 -> m16_6  [key=0, style=solid, color=red];
m16_6 -> m16_7  [key=0, style=solid, color=red];
m16_4 -> m16_7  [key=0, style=solid, color=red];
m16_4 -> m16_8  [key=2, style=dotted, color=red];
m16_7 -> m16_2  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_23  [key=0, style=solid];
m16_23 -> m16_21  [key=0, style=bold, color=blue];
m16_24 -> m16_5  [key=1, style=dashed, color=red, label="HangFire.SqlServer.ExpirationManager"];
m16_24 -> m16_6  [key=1, style=dashed, color=red, label="HangFire.SqlServer.ExpirationManager"];
m16_24 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.ExpirationManager"];
m16_24 -> m16_14  [key=1, style=dashed, color=red, label="HangFire.SqlServer.ExpirationManager"];
m18_82 -> m18_83  [key=0, style=solid];
m18_90 -> m18_91  [key=0, style=solid];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_80  [key=2, style=dotted];
m18_13 -> m18_82  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_75 -> m18_76  [key=0, style=solid];
m18_76 -> m18_48  [key=2, style=dotted];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_80  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_77 -> m18_23  [key=2, style=dotted];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_78 -> m18_74  [key=0, style=bold, color=blue];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_74  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid, color=green];
m18_37 -> m18_86  [key=2, style=dotted];
m18_37 -> m18_85  [key=2, style=dotted];
m18_37 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_37 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_38 -> m18_39  [key=0, style=solid, color=green];
m18_38 -> m18_23  [key=2, style=dotted, color=green];
m18_38 -> m18_41  [key=1, style=dashed, color=green, label="lambda expression"];
m18_38 -> m18_74  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_24  [key=2, style=dotted];
m18_39 -> m18_41  [key=0, style=solid];
m18_39 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_39 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_40 -> m18_37  [key=0, style=bold, color=blue];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_74  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_82  [key=2, style=dotted];
m18_24 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_24 -> m18_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_74  [key=2, style=dotted];
m18_1 -> m18_8  [key=2, style=dotted];
m18_1 -> m18_9  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_75  [key=2, style=dotted];
m18_2 -> m18_10  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_3 -> m18_11  [key=2, style=dotted];
m18_3 -> m18_12  [key=2, style=dotted];
m18_3 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_4 -> m18_5  [key=0, style=solid, color=green];
m18_4 -> m18_76  [key=2, style=dotted];
m18_4 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label=from];
m18_4 -> m18_13  [key=2, style=dotted, color=green];
m18_5 -> m18_6  [key=0, style=solid, color=green];
m18_5 -> m18_76  [key=2, style=dotted];
m18_5 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_78  [key=2, style=dotted];
m18_7 -> m18_79  [key=2, style=dotted];
m18_7 -> m18_80  [key=2, style=dotted];
m18_7 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label=pager];
m18_7 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label=pager];
m18_7 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label=pager];
m18_7 -> m18_0  [key=0, style=bold, color=blue];
m18_6 -> m18_7  [key=0, style=solid, color=green];
m18_6 -> m18_77  [key=2, style=dotted];
m18_6 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m18_6 -> m18_14  [key=2, style=dotted, color=green];
m18_8 -> m18_9  [key=0, style=solid, color=red];
m18_8 -> m18_81  [key=2, style=dotted];
m18_8 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=failedJobs];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_12  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_83  [key=2, style=dotted];
m18_17 -> m18_84  [key=2, style=dotted];
m18_17 -> m18_85  [key=2, style=dotted];
m18_17 -> m18_15  [key=0, style=bold, color=blue];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_91  [key=2, style=dotted];
m18_72 -> m18_84  [key=2, style=dotted];
m18_72 -> m18_85  [key=2, style=dotted];
m18_72 -> m18_62  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid, color=red];
m18_9 -> m18_74  [key=2, style=dotted, color=red];
m18_20 -> m18_21  [key=0, style=solid, color=green];
m18_20 -> m18_71  [key=0, style=solid];
m18_20 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_20 -> m18_23  [key=2, style=dotted, color=green];
m18_20 -> m18_25  [key=1, style=dashed, color=green, label="lambda expression"];
m18_11 -> m18_73  [key=0, style=solid];
m18_11 -> m18_74  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_74  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_74  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_80  [key=2, style=dotted];
m18_15 -> m18_82  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_74  [key=2, style=dotted];
m18_16 -> m18_18  [key=2, style=dotted];
m18_19 -> m18_20  [key=0, style=solid, color=green];
m18_19 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=index];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_82  [key=2, style=dotted];
m18_60 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=index];
m18_60 -> m18_62  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_74  [key=2, style=dotted];
m18_21 -> m18_24  [key=2, style=dotted];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_74  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_82  [key=2, style=dotted];
m18_22 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_22 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_22 -> m18_19  [key=0, style=bold, color=blue];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_74  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid, color=green];
m18_25 -> m18_74  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid, color=green];
m18_26 -> m18_82  [key=2, style=dotted];
m18_26 -> m18_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_26 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_26 -> m18_29  [key=2, style=dotted, color=green];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_74  [key=2, style=dotted];
m18_27 -> m18_25  [key=0, style=bold, color=blue];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_32  [key=0, style=solid];
m18_28 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_28 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_28 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_74  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_74  [key=2, style=dotted];
m18_32 -> m18_24  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid, color=green];
m18_30 -> m18_82  [key=2, style=dotted];
m18_30 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_30 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_82  [key=2, style=dotted];
m18_33 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_33 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_33 -> m18_30  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid, color=green];
m18_31 -> m18_74  [key=2, style=dotted];
m18_31 -> m18_23  [key=2, style=dotted, color=green];
m18_31 -> m18_34  [key=1, style=dashed, color=green, label="lambda expression"];
m18_34 -> m18_35  [key=0, style=solid, color=green];
m18_34 -> m18_74  [key=2, style=dotted];
m18_35 -> m18_36  [key=0, style=solid, color=green];
m18_35 -> m18_80  [key=2, style=dotted];
m18_35 -> m18_82  [key=2, style=dotted];
m18_35 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_35 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_35 -> m18_28  [key=2, style=dotted, color=green];
m18_35 -> m18_29  [key=2, style=dotted, color=green];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_74  [key=2, style=dotted];
m18_36 -> m18_34  [key=0, style=bold, color=blue];
m18_41 -> m18_42  [key=0, style=solid, color=green];
m18_41 -> m18_74  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid, color=green];
m18_42 -> m18_48  [key=0, style=solid];
m18_42 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_42 -> m18_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_42 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_42 -> m18_28  [key=2, style=dotted, color=green];
m18_42 -> m18_29  [key=2, style=dotted, color=green];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_74  [key=2, style=dotted];
m18_43 -> m18_41  [key=0, style=bold, color=blue];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_74  [key=2, style=dotted];
m18_48 -> m18_98  [key=0, style=solid];
m18_44 -> m18_45  [key=0, style=solid, color=green];
m18_44 -> m18_87  [key=2, style=dotted];
m18_44 -> m18_82  [key=2, style=dotted];
m18_44 -> m18_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_44 -> m18_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_80  [key=2, style=dotted];
m18_49 -> m18_82  [key=2, style=dotted];
m18_49 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_49 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_45 -> m18_46  [key=0, style=solid, color=green];
m18_45 -> m18_74  [key=2, style=dotted];
m18_45 -> m18_48  [key=2, style=dotted, color=green];
m18_46 -> m18_47  [key=0, style=solid, color=green];
m18_46 -> m18_82  [key=2, style=dotted];
m18_46 -> m18_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_46 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_46 -> m18_24  [key=2, style=dotted, color=green];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_74  [key=2, style=dotted];
m18_47 -> m18_44  [key=0, style=bold, color=blue];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_74  [key=2, style=dotted];
m18_50 -> m18_48  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_88  [key=2, style=dotted];
m18_51 -> m18_85  [key=2, style=dotted];
m18_51 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_51 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_74  [key=2, style=dotted];
m18_52 -> m18_49  [key=0, style=bold, color=blue];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_57  [key=0, style=solid];
m18_53 -> m18_89  [key=2, style=dotted];
m18_53 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_53 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_53 -> m18_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_74  [key=2, style=dotted];
m18_57 -> m18_58  [key=0, style=solid];
m18_57 -> m18_74  [key=2, style=dotted];
m18_57 -> m18_23  [key=2, style=dotted];
m18_57 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_82  [key=2, style=dotted];
m18_55 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_55 -> m18_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_55 -> m18_14  [key=2, style=dotted];
m18_58 -> m18_59  [key=0, style=solid];
m18_58 -> m18_20  [key=0, style=solid];
m18_58 -> m18_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_58 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_58 -> m18_54  [key=0, style=bold, color=blue];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_74  [key=2, style=dotted];
m18_56 -> m18_48  [key=2, style=dotted];
m18_56 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_74  [key=2, style=dotted];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_82  [key=2, style=dotted];
m18_62 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_62 -> m18_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_74  [key=2, style=dotted];
m18_61 -> m18_59  [key=0, style=bold, color=blue];
m18_63 -> m18_64  [key=0, style=solid, color=green];
m18_63 -> m18_74  [key=2, style=dotted];
m18_64 -> m18_65  [key=0, style=solid, color=green];
m18_64 -> m18_82  [key=2, style=dotted];
m18_64 -> m18_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_64 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_64 -> m18_11  [key=2, style=dotted, color=green];
m18_64 -> m18_12  [key=2, style=dotted, color=green];
m18_64 -> m18_68  [key=1, style=dashed, color=green, label="lambda expression"];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_74  [key=2, style=dotted];
m18_65 -> m18_48  [key=2, style=dotted];
m18_65 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_70  [key=0, style=solid];
m18_66 -> m18_89  [key=2, style=dotted];
m18_66 -> m18_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_66 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_66 -> m18_23  [key=2, style=dotted];
m18_66 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_74  [key=2, style=dotted];
m18_67 -> m18_63  [key=0, style=bold, color=blue];
m18_70 -> m18_20  [key=0, style=solid];
m18_70 -> m18_74  [key=2, style=dotted];
m18_70 -> m18_68  [key=0, style=bold, color=blue];
m18_68 -> m18_69  [key=0, style=solid, color=green];
m18_68 -> m18_90  [key=2, style=dotted];
m18_68 -> m18_85  [key=2, style=dotted];
m18_68 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_69 -> m18_70  [key=0, style=solid, color=green];
m18_69 -> m18_74  [key=2, style=dotted];
m18_69 -> m18_23  [key=2, style=dotted, color=green];
m18_69 -> m18_18  [key=2, style=dotted, color=green];
m18_73 -> m18_0  [key=0, style=bold, color=blue];
m18_73 -> m18_71  [key=0, style=bold, color=blue];
m18_81 -> m18_79  [key=0, style=bold, color=blue];
m18_87 -> m18_88  [key=0, style=solid];
m18_83 -> m18_84  [key=0, style=solid];
m18_84 -> m18_48  [key=2, style=dotted];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_85 -> m18_23  [key=2, style=dotted];
m18_85 -> m18_86  [key=0, style=solid];
m18_85 -> m18_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_86 -> m18_82  [key=0, style=bold, color=blue];
m18_89 -> m18_87  [key=0, style=bold, color=blue];
m18_79 -> m18_80  [key=0, style=solid];
m18_95 -> m18_96  [key=0, style=solid];
m18_80 -> m18_81  [key=0, style=solid];
m18_80 -> m18_62  [key=2, style=dotted];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_62  [key=2, style=dotted];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_62  [key=2, style=dotted];
m18_97 -> m18_95  [key=0, style=bold, color=blue];
m18_91 -> m18_92  [key=0, style=solid];
m18_92 -> m18_48  [key=2, style=dotted];
m18_92 -> m18_93  [key=0, style=solid];
m18_92 -> m18_96  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_92 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_9  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_92 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m18_93 -> m18_23  [key=2, style=dotted];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_94 -> m18_90  [key=0, style=bold, color=blue];
m18_98 -> m18_28  [key=2, style=dotted];
m18_98 -> m18_99  [key=0, style=solid];
m18_99 -> m18_48  [key=0, style=bold, color=blue];
m18_100 -> m18_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_6  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_20  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_26  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_31  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_35  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_38  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_42  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_45  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_46  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_64  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_100 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts"];
m18_102 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_101 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_103 -> m18_80  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_104 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_105 -> m18_96  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m19_0 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_8  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_9  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_10  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_12  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_11  [key=2, style=dotted];
m19_4 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_7 -> m19_0  [key=0, style=bold, color=blue];
m20_8 -> m20_9  [key=0, style=solid];
m20_9 -> m20_3  [key=2, style=dotted];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_10 -> m20_8  [key=0, style=bold, color=blue];
m20_14 -> m20_15  [key=0, style=solid, color=green];
m20_15 -> m20_16  [key=0, style=solid, color=green];
m20_15 -> m20_7  [key=2, style=dotted, color=green];
m20_16 -> m20_17  [key=0, style=solid, color=green];
m20_16 -> m20_18  [key=2, style=dotted, color=green];
m20_17 -> m20_14  [key=0, style=bold, color=blue];
m20_27 -> m20_28  [key=0, style=solid];
m20_29 -> m20_30  [key=0, style=solid, color=green];
m20_29 -> m20_31  [key=2, style=dotted, color=green];
m20_28 -> m20_29  [key=0, style=solid, color=green];
m20_28 -> m20_7  [key=2, style=dotted];
m20_30 -> m20_27  [key=0, style=bold, color=blue];
m20_19 -> m20_20  [key=0, style=solid];
m20_20 -> m20_7  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label=state];
m20_20 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label=state];
m20_22 -> m20_18  [key=2, style=dotted];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_26  [key=2, style=dotted];
m20_23 -> m20_18  [key=2, style=dotted];
m20_23 -> m20_24  [key=0, style=solid];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_25  [key=2, style=dotted];
m20_24 -> m20_19  [key=0, style=bold, color=blue];
m20_11 -> m20_12  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid, color=green];
m20_5 -> m20_6  [key=0, style=solid, color=green];
m20_5 -> m20_7  [key=2, style=dotted, color=green];
m20_6 -> m20_4  [key=0, style=bold, color=blue];
m20_12 -> m20_7  [key=2, style=dotted];
m20_12 -> m20_13  [key=0, style=solid];
m20_13 -> m20_11  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid, color=green];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m20_1 -> m20_2  [key=0, style=solid, color=green];
m20_1 -> m20_3  [key=2, style=dotted, color=green];
m20_1 -> m20_4  [key=1, style=dashed, color=green, label="lambda expression"];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=red];
m22_1 -> m22_2  [key=0, style=solid, color=red];
m22_1 -> m22_4  [key=2, style=dotted, color=red];
m22_1 -> m22_6  [key=1, style=dashed, color=red, label="lambda expression"];
m22_1 -> m22_3  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid, color=red];
m22_2 -> m22_5  [key=2, style=dotted, color=red];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_3 -> m22_0  [key=0, style=bold, color=blue];
m22_105 -> m22_106  [key=0, style=solid];
m22_106 -> m22_44  [key=2, style=dotted];
m22_106 -> m22_107  [key=0, style=solid];
m22_107 -> m22_108  [key=0, style=solid];
m22_107 -> m22_87  [key=2, style=dotted];
m22_107 -> m22_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_108 -> m22_105  [key=0, style=bold, color=blue];
m22_40 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerContextFacts"];
m22_40 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerContextFacts"];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_30  [key=2, style=dotted];
m22_42 -> m22_46  [key=2, style=dotted];
m22_42 -> m22_31  [key=2, style=dotted];
m22_42 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_42 -> m22_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_42 -> m22_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_44  [key=2, style=dotted];
m22_41 -> m22_45  [key=2, style=dotted];
m22_43 -> m22_40  [key=0, style=bold, color=blue];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_8  [key=2, style=dotted];
m22_160 -> m22_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_160 -> m22_161  [key=0, style=solid];
m22_162 -> m22_82  [key=2, style=dotted];
m22_162 -> m22_163  [key=0, style=solid];
m22_161 -> m22_44  [key=2, style=dotted];
m22_161 -> m22_162  [key=0, style=solid];
m22_161 -> m22_164  [key=2, style=dotted];
m22_163 -> m22_160  [key=0, style=bold, color=blue];
m22_180 -> m22_181  [key=0, style=solid];
m22_181 -> m22_182  [key=0, style=solid];
m22_181 -> m22_183  [key=2, style=dotted];
m22_181 -> m22_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_182 -> m22_180  [key=0, style=bold, color=blue];
m22_83 -> m22_84  [key=0, style=solid];
m22_84 -> m22_44  [key=2, style=dotted];
m22_84 -> m22_85  [key=0, style=solid];
m22_85 -> m22_86  [key=0, style=solid];
m22_85 -> m22_87  [key=2, style=dotted];
m22_85 -> m22_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_86 -> m22_83  [key=0, style=bold, color=blue];
m22_4 -> m22_5  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid, color=red];
m22_6 -> m22_9  [key=2, style=dotted];
m22_7 -> m22_4  [key=0, style=bold, color=blue];
m22_7 -> m22_8  [key=0, style=solid, color=red];
m22_7 -> m22_9  [key=2, style=dotted, color=red];
m22_176 -> m22_170  [key=0, style=bold, color=blue];
m22_175 -> m22_120  [key=2, style=dotted];
m22_175 -> m22_176  [key=0, style=solid];
m22_171 -> m22_44  [key=2, style=dotted];
m22_171 -> m22_172  [key=0, style=solid];
m22_171 -> m22_177  [key=2, style=dotted];
m22_171 -> m22_173  [key=1, style=dashed, color=darkseagreen4, label=entry];
m22_171 -> m22_174  [key=1, style=dashed, color=darkseagreen4, label=entry];
m22_170 -> m22_175  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_170 -> m22_171  [key=0, style=solid];
m22_173 -> m22_175  [key=1, style=dashed, color=darkseagreen4, label=history];
m22_173 -> m22_179  [key=2, style=dotted];
m22_173 -> m22_174  [key=0, style=solid];
m22_174 -> m22_175  [key=0, style=solid];
m22_174 -> m22_178  [key=2, style=dotted];
m22_172 -> m22_173  [key=0, style=solid];
m22_172 -> m22_178  [key=2, style=dotted];
m22_29 -> m22_27  [key=0, style=bold, color=blue];
m22_137 -> m22_138  [key=0, style=solid];
m22_140 -> m22_93  [key=2, style=dotted];
m22_140 -> m22_141  [key=0, style=solid];
m22_140 -> m22_145  [key=2, style=dotted];
m22_141 -> m22_93  [key=2, style=dotted];
m22_141 -> m22_142  [key=0, style=solid];
m22_141 -> m22_145  [key=2, style=dotted];
m22_139 -> m22_144  [key=2, style=dotted];
m22_139 -> m22_140  [key=0, style=solid];
m22_139 -> m22_141  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m22_138 -> m22_143  [key=2, style=dotted];
m22_138 -> m22_139  [key=0, style=solid];
m22_142 -> m22_137  [key=0, style=bold, color=blue];
m22_121 -> m22_122  [key=0, style=solid];
m22_122 -> m22_82  [key=2, style=dotted];
m22_122 -> m22_123  [key=0, style=solid];
m22_122 -> m22_125  [key=2, style=dotted];
m22_123 -> m22_93  [key=2, style=dotted];
m22_123 -> m22_124  [key=0, style=solid];
m22_123 -> m22_126  [key=2, style=dotted];
m22_124 -> m22_121  [key=0, style=bold, color=blue];
m22_17 -> m22_18  [key=0, style=solid];
m22_94 -> m22_95  [key=0, style=solid];
m22_95 -> m22_82  [key=2, style=dotted];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_97  [key=2, style=dotted];
m22_95 -> m22_98  [key=2, style=dotted];
m22_96 -> m22_94  [key=0, style=bold, color=blue];
m22_79 -> m22_80  [key=0, style=solid];
m22_80 -> m22_81  [key=0, style=solid];
m22_80 -> m22_82  [key=2, style=dotted];
m22_81 -> m22_79  [key=0, style=bold, color=blue];
m22_146 -> m22_147  [key=0, style=solid];
m22_150 -> m22_18  [key=2, style=dotted];
m22_150 -> m22_151  [key=0, style=solid];
m22_150 -> m22_93  [key=2, style=dotted];
m22_151 -> m22_18  [key=2, style=dotted];
m22_151 -> m22_152  [key=0, style=solid];
m22_151 -> m22_93  [key=2, style=dotted];
m22_149 -> m22_150  [key=0, style=solid];
m22_149 -> m22_151  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m22_149 -> m22_144  [key=2, style=dotted];
m22_148 -> m22_149  [key=0, style=solid];
m22_148 -> m22_143  [key=2, style=dotted];
m22_147 -> m22_93  [key=2, style=dotted];
m22_147 -> m22_148  [key=0, style=solid];
m22_147 -> m22_126  [key=2, style=dotted];
m22_152 -> m22_146  [key=0, style=bold, color=blue];
m22_10 -> m22_11  [key=0, style=solid, color=red];
m22_11 -> m22_12  [key=0, style=solid, color=red];
m22_11 -> m22_13  [key=2, style=dotted];
m22_11 -> m22_4  [key=2, style=dotted, color=red];
m22_11 -> m22_14  [key=1, style=dashed, color=red, label="lambda expression"];
m22_12 -> m22_10  [key=0, style=bold, color=blue];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_5  [key=2, style=dotted];
m22_22 -> m22_17  [key=0, style=bold, color=blue];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_29  [key=2, style=dotted];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_4  [key=2, style=dotted];
m22_25 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_25 -> m22_30  [key=2, style=dotted];
m22_25 -> m22_31  [key=2, style=dotted];
m22_25 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_26 -> m22_24  [key=0, style=bold, color=blue];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_30  [key=2, style=dotted];
m22_26 -> m22_32  [key=2, style=dotted];
m22_26 -> m22_31  [key=2, style=dotted];
m22_26 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_23 -> m22_38  [key=0, style=solid, color=red];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_38 -> m22_39  [key=0, style=solid, color=red];
m22_38 -> m22_9  [key=2, style=dotted, color=red];
m22_39 -> m22_23  [key=0, style=bold, color=blue];
m22_19 -> m22_20  [key=0, style=solid, color=red];
m22_19 -> m22_5  [key=2, style=dotted, color=red];
m22_20 -> m22_21  [key=0, style=solid, color=green];
m22_20 -> m22_22  [key=2, style=dotted, color=green];
m22_20 -> m22_5  [key=2, style=dotted];
m22_21 -> m22_19  [key=0, style=bold, color=blue];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_5  [key=2, style=dotted];
m22_8 -> m22_6  [key=0, style=bold, color=blue];
m22_18 -> m22_19  [key=0, style=solid, color=red];
m22_18 -> m22_23  [key=2, style=dotted];
m22_18 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_18 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_168 -> m22_165  [key=0, style=bold, color=blue];
m22_166 -> m22_44  [key=2, style=dotted];
m22_166 -> m22_167  [key=0, style=solid];
m22_166 -> m22_164  [key=2, style=dotted];
m22_165 -> m22_166  [key=0, style=solid];
m22_165 -> m22_167  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_167 -> m22_168  [key=0, style=solid];
m22_167 -> m22_169  [key=2, style=dotted];
m22_27 -> m22_28  [key=0, style=solid];
m22_28 -> m22_23  [key=0, style=bold, color=blue];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_30  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_23  [key=2, style=dotted];
m22_32 -> m22_34  [key=1, style=dashed, color=red, label=context];
m22_32 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_32 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_13 -> m22_10  [key=0, style=bold, color=blue];
m22_14 -> m22_15  [key=0, style=solid, color=red];
m22_14 -> m22_37  [key=0, style=solid];
m22_15 -> m22_16  [key=0, style=solid, color=red];
m22_15 -> m22_17  [key=2, style=dotted];
m22_15 -> m22_18  [key=2, style=dotted];
m22_15 -> m22_9  [key=2, style=dotted, color=red];
m22_16 -> m22_14  [key=0, style=bold, color=blue];
m22_113 -> m22_114  [key=0, style=solid];
m22_114 -> m22_82  [key=2, style=dotted];
m22_114 -> m22_115  [key=0, style=solid];
m22_114 -> m22_103  [key=2, style=dotted];
m22_115 -> m22_113  [key=0, style=bold, color=blue];
m22_56 -> m22_57  [key=0, style=solid];
m22_58 -> m22_59  [key=0, style=solid];
m22_58 -> m22_62  [key=2, style=dotted];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_61  [key=2, style=dotted];
m22_57 -> m22_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m22_59 -> m22_60  [key=0, style=solid];
m22_59 -> m22_63  [key=2, style=dotted];
m22_60 -> m22_56  [key=0, style=bold, color=blue];
m22_116 -> m22_117  [key=0, style=solid];
m22_117 -> m22_118  [key=0, style=solid];
m22_117 -> m22_119  [key=2, style=dotted];
m22_117 -> m22_120  [key=2, style=dotted];
m22_118 -> m22_116  [key=0, style=bold, color=blue];
m22_109 -> m22_111  [key=1, style=dashed, color=darkseagreen4, label="?"];
m22_109 -> m22_110  [key=0, style=solid];
m22_47 -> m22_48  [key=0, style=solid];
m22_50 -> m22_51  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_184 -> m22_185  [key=0, style=solid];
m22_49 -> m22_47  [key=0, style=bold, color=blue];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_39  [key=2, style=dotted];
m22_52 -> m22_50  [key=0, style=bold, color=blue];
m22_51 -> m22_52  [key=0, style=solid];
m22_55 -> m22_53  [key=0, style=bold, color=blue];
m22_54 -> m22_55  [key=0, style=solid];
m22_185 -> m22_62  [key=2, style=dotted];
m22_185 -> m22_186  [key=0, style=solid];
m22_185 -> m22_179  [key=2, style=dotted];
m22_185 -> m22_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_185 -> m22_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_186 -> m22_184  [key=0, style=bold, color=blue];
m22_187 -> m22_188  [key=0, style=solid];
m22_190 -> m22_191  [key=0, style=solid];
m22_90 -> m22_93  [key=2, style=dotted];
m22_90 -> m22_91  [key=0, style=solid];
m22_111 -> m22_93  [key=2, style=dotted];
m22_111 -> m22_112  [key=0, style=solid];
m22_37 -> m22_39  [key=2, style=dotted];
m22_37 -> m22_16  [key=0, style=solid];
m22_37 -> m22_31  [key=0, style=bold, color=blue];
m22_189 -> m22_187  [key=0, style=bold, color=blue];
m22_188 -> m22_189  [key=0, style=solid];
m22_192 -> m22_190  [key=0, style=bold, color=blue];
m22_191 -> m22_192  [key=0, style=solid];
m22_88 -> m22_90  [key=1, style=dashed, color=darkseagreen4, label="?"];
m22_88 -> m22_89  [key=0, style=solid];
m22_89 -> m22_90  [key=0, style=solid];
m22_89 -> m22_92  [key=2, style=dotted];
m22_91 -> m22_88  [key=0, style=bold, color=blue];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_92  [key=2, style=dotted];
m22_112 -> m22_109  [key=0, style=bold, color=blue];
m22_73 -> m22_74  [key=0, style=solid];
m22_75 -> m22_76  [key=0, style=solid];
m22_75 -> m22_78  [key=2, style=dotted];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_77  [key=2, style=dotted];
m22_76 -> m22_73  [key=0, style=bold, color=blue];
m22_130 -> m22_131  [key=0, style=solid];
m22_131 -> m22_93  [key=2, style=dotted];
m22_131 -> m22_132  [key=0, style=solid];
m22_131 -> m22_126  [key=2, style=dotted];
m22_132 -> m22_130  [key=0, style=bold, color=blue];
m22_156 -> m22_157  [key=0, style=solid];
m22_157 -> m22_93  [key=2, style=dotted];
m22_157 -> m22_158  [key=0, style=solid];
m22_157 -> m22_159  [key=2, style=dotted];
m22_158 -> m22_156  [key=0, style=bold, color=blue];
m22_153 -> m22_154  [key=0, style=solid];
m22_154 -> m22_126  [key=2, style=dotted];
m22_154 -> m22_155  [key=0, style=solid];
m22_154 -> m22_136  [key=2, style=dotted];
m22_155 -> m22_153  [key=0, style=bold, color=blue];
m22_64 -> m22_65  [key=0, style=solid];
m22_66 -> m22_67  [key=0, style=solid];
m22_66 -> m22_71  [key=2, style=dotted];
m22_66 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m22_65 -> m22_66  [key=0, style=solid];
m22_65 -> m22_61  [key=2, style=dotted];
m22_65 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m22_65 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m22_67 -> m22_68  [key=0, style=solid];
m22_67 -> m22_69  [key=0, style=solid];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_72  [key=2, style=dotted];
m22_69 -> m22_63  [key=2, style=dotted];
m22_69 -> m22_70  [key=0, style=solid];
m22_70 -> m22_64  [key=0, style=bold, color=blue];
m22_31 -> m22_32  [key=0, style=solid];
m22_133 -> m22_134  [key=0, style=solid];
m22_134 -> m22_126  [key=2, style=dotted];
m22_134 -> m22_135  [key=0, style=solid];
m22_134 -> m22_136  [key=2, style=dotted];
m22_135 -> m22_133  [key=0, style=bold, color=blue];
m22_99 -> m22_100  [key=0, style=solid];
m22_100 -> m22_82  [key=2, style=dotted];
m22_100 -> m22_101  [key=0, style=solid];
m22_100 -> m22_103  [key=2, style=dotted];
m22_101 -> m22_82  [key=2, style=dotted];
m22_101 -> m22_102  [key=0, style=solid];
m22_101 -> m22_104  [key=2, style=dotted];
m22_102 -> m22_99  [key=0, style=bold, color=blue];
m22_127 -> m22_128  [key=0, style=solid];
m22_128 -> m22_82  [key=2, style=dotted];
m22_128 -> m22_129  [key=0, style=solid];
m22_128 -> m22_125  [key=2, style=dotted];
m22_129 -> m22_127  [key=0, style=bold, color=blue];
m22_33 -> m22_34  [key=0, style=solid, color=red];
m22_33 -> m22_30  [key=2, style=dotted];
m22_33 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m22_34 -> m22_35  [key=0, style=solid, color=red];
m22_34 -> m22_5  [key=2, style=dotted, color=red];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_5  [key=2, style=dotted];
m22_36 -> m22_37  [key=0, style=solid];
m22_36 -> m22_5  [key=2, style=dotted];
m22_193 -> m22_20  [key=1, style=dashed, color=green, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m22_193 -> m22_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid, color=red];
m23_4 -> m23_5  [key=0, style=solid, color=red];
m23_4 -> m23_6  [key=2, style=dotted, color=red];
m23_5 -> m23_0  [key=0, style=bold, color=blue];
m23_7 -> m23_8  [key=0, style=solid, color=red];
m23_8 -> m23_9  [key=0, style=solid, color=red];
m23_8 -> m23_10  [key=2, style=dotted, color=red];
m23_9 -> m23_7  [key=0, style=bold, color=blue];
m23_11 -> m23_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.WorkerContextMock"];
m23_11 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.WorkerContextMock"];
m23_11 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.WorkerContextMock"];
m23_11 -> m23_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.WorkerContextMock"];
m23_11 -> m23_8  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.WorkerContextMock"];
m24_5 -> m24_6  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid, color=green];
m24_7 -> m24_4  [key=2, style=dotted, color=green];
m24_6 -> m24_7  [key=0, style=solid, color=green];
m24_6 -> m24_9  [key=2, style=dotted];
m24_6 -> m24_4  [key=2, style=dotted];
m24_8 -> m24_5  [key=0, style=bold, color=blue];
m24_29 -> m24_30  [key=0, style=solid, color=green];
m24_30 -> m24_31  [key=0, style=solid, color=green];
m24_30 -> m24_9  [key=2, style=dotted, color=green];
m24_30 -> m24_27  [key=2, style=dotted, color=green];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_33  [key=2, style=dotted];
m24_32 -> m24_29  [key=0, style=bold, color=blue];
m24_17 -> m24_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_17 -> m24_18  [key=0, style=solid];
m24_19 -> m24_9  [key=2, style=dotted];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_22  [key=2, style=dotted];
m24_18 -> m24_19  [key=0, style=solid];
m24_18 -> m24_21  [key=2, style=dotted];
m24_20 -> m24_17  [key=0, style=bold, color=blue];
m24_23 -> m24_24  [key=0, style=solid];
m24_24 -> m24_9  [key=2, style=dotted];
m24_24 -> m24_27  [key=2, style=dotted];
m24_24 -> m24_25  [key=0, style=solid];
m24_25 -> m24_26  [key=0, style=solid];
m24_25 -> m24_28  [key=2, style=dotted];
m24_26 -> m24_23  [key=0, style=bold, color=blue];
m24_10 -> m24_11  [key=0, style=solid, color=green];
m24_10 -> m24_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_11 -> m24_12  [key=0, style=solid, color=green];
m24_11 -> m24_4  [key=2, style=dotted, color=green];
m24_12 -> m24_4  [key=2, style=dotted];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_9  [key=2, style=dotted];
m24_13 -> m24_10  [key=0, style=bold, color=blue];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_4  [key=2, style=dotted];
m24_3 -> m24_2  [key=0, style=bold, color=blue];
m24_3 -> m24_0  [key=0, style=bold, color=blue];
m24_14 -> m24_15  [key=0, style=solid];
m24_15 -> m24_4  [key=2, style=dotted];
m24_15 -> m24_9  [key=2, style=dotted];
m24_15 -> m24_16  [key=0, style=solid];
m24_16 -> m24_14  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_4  [key=2, style=dotted];
m24_1 -> m24_1  [key=3, color=darkorchid, style=bold, label="Field variable string Queue"];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_0  [key=0, style=bold, color=blue];
}
