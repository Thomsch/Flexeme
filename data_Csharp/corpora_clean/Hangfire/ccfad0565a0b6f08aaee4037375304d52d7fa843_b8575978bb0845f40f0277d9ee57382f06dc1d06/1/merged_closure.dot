digraph  {
m0_35 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m0_36 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m0_37 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50"];
m0_38 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m0_86 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", span="96-96"];
m0_87 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="var server = CreateServer()", span="99-99"];
m0_88 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="var supervisors = server.GetSupervisors()", prediction=0, span="102-102"];
m0_89 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="var componentTypes = supervisors.OfType<ServerSupervisor>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", prediction=1, span="105-108"];
m0_90 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(WorkerManager), componentTypes)", span="110-110"];
m0_91 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="111-111"];
m0_92 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="112-112"];
m0_93 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(SchedulePoller), componentTypes)", span="113-113"];
m0_94 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents()", span="96-96"];
m0_22 [cluster="Unk.Equal", file="BackgroundJobServerFacts.cs", label="Entry Unk.Equal", span=""];
m0_65 [cluster="Unk.Stop", file="BackgroundJobServerFacts.cs", label="Entry Unk.Stop", span=""];
m0_83 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="136-136"];
m0_123 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs", label="return new BackgroundJobServer(_options, _storage.Object);", span="138-138"];
m0_124 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="136-136"];
m0_61 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheBootstrapSupervisor()", span="69-69"];
m0_62 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="_serverMock.Object.Stop()", span="71-71"];
m0_63 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheBootstrapSupervisor()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="_supervisor.Verify(x => x.Stop())", prediction=2, span="73-73"];
m0_64 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheBootstrapSupervisor()", span="69-69"];
m0_69 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m0_70 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs", label="_serverMock.Object.Dispose()", span="79-79"];
m0_72 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m0_39 [cluster="Unk.DoesNotThrow", file="BackgroundJobServerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m0_9 [cluster="Mock<IServerSupervisor>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<IServerSupervisor>.cstr", span=""];
m0_21 [cluster="Unk.>", file="BackgroundJobServerFacts.cs", label="Entry Unk.>", span=""];
m0_107 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", span="117-117"];
m0_108 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs", label="var storageComponent = new Mock<IServerComponent>()", span="120-120"];
m0_109 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs", label="_storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="121-121"];
m0_113 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(storageComponent.Object, components)", span="133-133"];
m0_110 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs", label="var server = CreateServer()", span="123-123"];
m0_111 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="var supervisors = server.GetSupervisors()", prediction=3, span="126-126"];
m0_112 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="var components = supervisors.OfType<ServerSupervisor>()\r\n                .Select(x => x.Component)\r\n                .ToArray()", prediction=4, span="129-131"];
m0_114 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents()", span="117-117"];
m0_0 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m0_1 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m0_2 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_options = new BackgroundJobServerOptions()", span="18-18"];
m0_3 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="_supervisor = new Mock<IServerSupervisor>()", prediction=5, span="20-20"];
m0_4 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24"];
m0_5 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="_serverMock.Setup(x => x.GetBootstrapSupervisor()).Returns(_supervisor.Object)", prediction=2, span="25-25"];
m0_6 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m0_119 [cluster="Unk.GetComponents", file="BackgroundJobServerFacts.cs", label="Entry Unk.GetComponents", span=""];
m0_84 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="82-82"];
m0_44 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m0_45 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56"];
m0_46 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57"];
m0_47 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m0_77 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", span="85-85"];
m0_78 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs", label="var server = CreateServer()", span="87-87"];
m0_79 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="var supervisor = server.GetBootstrapSupervisor()", prediction=7, span="89-89"];
m0_80 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="Assert.NotNull(supervisor)", prediction=8, span="91-91"];
m0_81 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="Assert.IsType<ServerBootstrapper>(((ServerSupervisor) supervisor).Component)", prediction=7, span="92-92"];
m0_82 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsNonNullResult()", span="85-85"];
m0_98 [cluster="Unk.ToArray", file="BackgroundJobServerFacts.cs", label="Entry Unk.ToArray", span=""];
m0_85 [cluster="Unk.NotNull", file="BackgroundJobServerFacts.cs", label="Entry Unk.NotNull", span=""];
m0_43 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="BackgroundJobServerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m0_16 [cluster="Unk.GetServerRunner", file="BackgroundJobServerFacts.cs", label="Entry Unk.GetServerRunner", span=""];
m0_11 [cluster="Unk.Setup", file="BackgroundJobServerFacts.cs", label="Entry Unk.Setup", span=""];
m0_51 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m0_73 [cluster="Unk.Dispose", file="BackgroundJobServerFacts.cs", label="Entry Unk.Dispose", span=""];
m0_34 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServerFacts.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m0_10 [cluster="Mock<BackgroundJobServer>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<BackgroundJobServer>.cstr", span=""];
m0_115 [cluster="Mock<IServerComponent>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m0_52 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheBootstrapSupervisor()", span="61-61"];
m0_53 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="_serverMock.Object.Start()", span="63-63"];
m0_54 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheBootstrapSupervisor()", color=green, community=0, file="BackgroundJobServerFacts.cs", label="_supervisor.Verify(x => x.Start())", prediction=2, span="65-65"];
m0_55 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheBootstrapSupervisor()", span="61-61"];
m0_95 [cluster="HangFire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.BackgroundJobServer.GetSupervisors()", span="104-104"];
m0_96 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="BackgroundJobServerFacts.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_17 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m0_18 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m0_19 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m0_20 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m0_120 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="130-130"];
m0_13 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="25-25"];
m0_14 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerFacts.cs", label="x.GetBootstrapSupervisor()", prediction=11, span="25-25"];
m0_15 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="25-25"];
m0_23 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="32-32"];
m0_24 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(null, _storage.Object)", span="32-32"];
m0_25 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="32-32"];
m0_31 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="41-41"];
m0_32 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(_options, null)", span="41-41"];
m0_33 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="41-41"];
m0_40 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="50-50"];
m0_41 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(_options)", span="50-50"];
m0_42 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="50-50"];
m0_48 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="57-57"];
m0_49 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer()", span="57-57"];
m0_50 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="57-57"];
m0_58 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="65-65"];
m0_59 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerFacts.cs", label="x.Start()", prediction=12, span="65-65"];
m0_60 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="65-65"];
m0_66 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="73-73"];
m0_67 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerFacts.cs", label="x.Stop()", prediction=13, span="73-73"];
m0_68 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="73-73"];
m0_74 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="81-81"];
m0_75 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerFacts.cs", label="x.Dispose()", prediction=14, span="81-81"];
m0_76 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="81-81"];
m0_100 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="106-106"];
m0_103 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="107-107"];
m0_101 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.Component", span="106-106"];
m0_102 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="106-106"];
m0_104 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.GetType()", span="107-107"];
m0_105 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="107-107"];
m0_116 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="121-121"];
m0_117 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.GetComponents()", span="121-121"];
m0_118 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="121-121"];
m0_121 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.Component", span="130-130"];
m0_122 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="130-130"];
m0_99 [cluster="Unk.Contains", file="BackgroundJobServerFacts.cs", label="Entry Unk.Contains", span=""];
m0_56 [cluster="Unk.Start", file="BackgroundJobServerFacts.cs", label="Entry Unk.Start", span=""];
m0_97 [cluster="Unk.Select", file="BackgroundJobServerFacts.cs", label="Entry Unk.Select", span=""];
m0_106 [cluster="Unk.GetType", file="BackgroundJobServerFacts.cs", label="Entry Unk.GetType", span=""];
m0_27 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m0_28 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m0_29 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m0_30 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m0_8 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m0_12 [cluster="Unk.Returns", file="BackgroundJobServerFacts.cs", label="Entry Unk.Returns", span=""];
m0_26 [cluster="BackgroundJobServer.cstr", file="BackgroundJobServerFacts.cs", label="Entry BackgroundJobServer.cstr", span=""];
m0_57 [cluster="Unk.Verify", file="BackgroundJobServerFacts.cs", label="Entry Unk.Verify", span=""];
m0_7 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m0_125 [file="BackgroundJobServerFacts.cs", label="HangFire.Core.Tests.BackgroundJobServerFacts", span=""];
m1_2 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="IServerComponentRunner.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m1_3 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="IServerComponentRunner.cs", label="Exit HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m1_0 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="IServerComponentRunner.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m1_1 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="IServerComponentRunner.cs", label="Exit HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m3_0 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", span="12-12"];
m3_1 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="ServerComponentRunnerCollection.cs", label="_assembly = assembly", span="18-18"];
m3_2 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="ServerComponentRunnerCollection.cs", label="_baseNamespace = baseNamespace", span="19-19"];
m3_3 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="ServerComponentRunnerCollection.cs", label="_resourceNames = resourceNames", span="20-20"];
m3_4 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", span="12-12"];
m3_9 [cluster="string.Format(string, object, object)", file="ServerComponentRunnerCollection.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_10 [cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="46-46"];
m3_5 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.WriteResponse(IOwinResponse)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Dashboard.CombinedResourceDispatcher.WriteResponse(IOwinResponse)", span="23-23"];
m3_6 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.WriteResponse(IOwinResponse)", file="ServerComponentRunnerCollection.cs", label=_resourceNames, span="25-25"];
m3_8 [cluster="HangFire.Dashboard.CombinedResourceDispatcher.WriteResponse(IOwinResponse)", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Dashboard.CombinedResourceDispatcher.WriteResponse(IOwinResponse)", span="23-23"];
m3_11 [file="ServerComponentRunnerCollection.cs", label="HangFire.Dashboard.CombinedResourceDispatcher", span=""];
m4_6 [cluster="System.Collections.Generic.List<T>.List()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_45 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55"];
m4_46 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="57-57"];
m4_47 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Dispose()", span="59-59"];
m4_50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55"];
m4_98 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
m4_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="121-121"];
m4_104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
m4_118 [cluster="Unk.Same", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Same", span=""];
m4_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130"];
m4_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="132-132"];
m4_108 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.False(collection.IsReadOnly)", span="134-134"];
m4_109 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130"];
m4_75 [cluster="Unk.Equal", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Equal", span=""];
m4_41 [cluster="Unk.Stop", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Stop", span=""];
m4_82 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
m4_83 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="97-97"];
m4_84 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Clear()", span="99-99"];
m4_85 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Equal(0, collection.Count)", span="101-101"];
m4_86 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
m4_7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
m4_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
m4_5 [cluster="Mock<IServerComponentRunner>.cstr", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m4_88 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
m4_90 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="108-108"];
m4_91 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.False(collection.Contains(element.Object))", span="110-110"];
m4_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Add(element.Object)", span="112-112"];
m4_93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.True(collection.Contains(element.Object))", span="114-114"];
m4_94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
m4_117 [cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87"];
m4_37 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m4_10 [cluster="Unk.>", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.>", span=""];
m4_96 [cluster="Unk.False", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.False", span=""];
m4_21 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="149-149"];
m4_120 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="149-149"];
m4_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
m4_4 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
m4_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
m4_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="87-87"];
m4_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Equal(3, collection.Count)", span="91-91"];
m4_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
m4_81 [cluster="Unk.Add", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Add", span=""];
m4_22 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m4_87 [cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77"];
m4_15 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
m4_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="35-35"];
m4_17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Start()", span="37-37"];
m4_20 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
m4_55 [cluster="Unk.Dispose", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Dispose", span=""];
m4_105 [cluster="Unk.Remove", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Remove", span=""];
m4_68 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="73-73"];
m4_11 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="29-29"];
m4_13 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="29-29"];
m4_24 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="39-39"];
m4_28 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="40-40"];
m4_26 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="39-39"];
m4_30 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="40-40"];
m4_38 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="50-50"];
m4_42 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="51-51"];
m4_40 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="50-50"];
m4_44 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="51-51"];
m4_52 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="61-61"];
m4_56 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="62-62"];
m4_54 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="61-61"];
m4_58 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="62-62"];
m4_65 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="72-72"];
m4_67 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="72-72"];
m4_70 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="73-73"];
m4_95 [cluster="Unk.Contains", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Contains", span=""];
m4_14 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m4_27 [cluster="Unk.Start", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Start", span=""];
m4_31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
m4_32 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="46-46"];
m4_33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Stop()", span="48-48"];
m4_36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
m4_97 [cluster="Unk.True", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.True", span=""];
m4_51 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m4_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
m4_72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="79-79"];
m4_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Equal(2, collection.Count)", span="81-81"];
m4_74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
m4_59 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
m4_60 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="68-68"];
m4_61 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Dispose()", span="70-70"];
m4_64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
m4_23 [cluster="Unk.Verify", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Verify", span=""];
m4_110 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", span="138-138"];
m4_111 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="140-140"];
m4_113 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.CopyTo(array, 1)", span="143-143"];
m4_116 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", span="138-138"];
m4_121 [file="ServerComponentRunnerCollectionFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", span=""];
m5_0 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m5_1 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m5_2 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5"];
m5_3 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5"];
m6_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m6_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MaxRetryAttempts = 10", span="27-27"];
m6_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="28-28"];
m6_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="LowerLogVerbosity = false", span="29-29"];
m6_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m6_5 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerComponentRunnerOptions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m6_6 [file="ServerComponentRunnerOptions.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m7_11 [cluster="Mock<IState>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m7_12 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ServerComponentRunnerOptionsFacts.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m7_10 [cluster="Mock<IStateMachine>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m7_8 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10"];
m7_16 [cluster="ElectStateContext.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry ElectStateContext.cstr", span=""];
m7_9 [cluster="Mock<IStorageConnection>.cstr", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_13 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="20-25"];
m7_14 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    ConnectionValue.Object,\r\n                    StateMachineValue.Object,\r\n                    CandidateStateValue,\r\n                    CurrentStateValue)", span="20-25"];
m7_15 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="20-25"];
m7_0 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11"];
m7_1 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="StateContextValue = new StateContextMock()", span="13-13"];
m7_2 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="ConnectionValue = new Mock<IStorageConnection>()", span="14-14"];
m7_3 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="StateMachineValue = new Mock<IStateMachine>()", span="15-15"];
m7_4 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="CandidateStateValue = new Mock<IState>().Object", span="16-16"];
m7_5 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="CurrentStateValue = ''OldState''", span="17-17"];
m7_6 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="_context = new Lazy<ElectStateContext>(\r\n                () => new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    ConnectionValue.Object,\r\n                    StateMachineValue.Object,\r\n                    CandidateStateValue,\r\n                    CurrentStateValue))", span="19-25"];
m7_7 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11"];
m7_17 [file="ServerComponentRunnerOptionsFacts.cs", label="Hangfire.Core.Tests.ElectStateContextMock", span=""];
m9_68 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="ServerCoreFacts.cs", label="Entry Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35"];
m9_139 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="153-153"];
m9_140 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="155-155"];
m9_141 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="157-157"];
m9_142 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="159-164"];
m9_143 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="153-153"];
m9_15 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m9_56 [cluster="Unk.Equal", file="ServerCoreFacts.cs", label="Entry Unk.Equal", span=""];
m9_263 [cluster="System.Exception.Exception()", file="ServerCoreFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m9_220 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="250-250"];
m9_221 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m9_222 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="254-256"];
m9_225 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="264-267"];
m9_223 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="258-258"];
m9_224 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="261-261"];
m9_226 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="250-250"];
m9_209 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="237-237"];
m9_210 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="239-239"];
m9_211 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="241-241"];
m9_212 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="243-246"];
m9_213 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="237-237"];
m9_23 [cluster="System.Threading.CancellationToken.CancellationToken()", file="ServerCoreFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m9_109 [cluster="Unk.Requeue", file="ServerCoreFacts.cs", label="Entry Unk.Requeue", span=""];
m9_150 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="168-168"];
m9_151 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="ServerCoreFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="171-176"];
m9_152 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="178-178"];
m9_153 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="181-181"];
m9_154 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="ServerCoreFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="184-186"];
m9_155 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="168-168"];
m9_162 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="190-190"];
m9_163 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="192-192"];
m9_164 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="194-194"];
m9_165 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="ServerCoreFacts.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="196-198"];
m9_166 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="190-190"];
m9_196 [cluster="Unk.DoesNotThrow", file="ServerCoreFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m9_124 [cluster="Unk.Run", file="ServerCoreFacts.cs", label="Entry Unk.Run", span=""];
m9_227 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ServerCoreFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m9_34 [cluster="Unk.>", file="ServerCoreFacts.cs", label="Entry Unk.>", span=""];
m9_90 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="97-97"];
m9_92 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="103-103"];
m9_94 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="ServerCoreFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="108-108"];
m9_95 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="ServerCoreFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="109-109"];
m9_96 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="97-97"];
m9_189 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="221-221"];
m9_190 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="224-225"];
m9_191 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="227-227"];
m9_192 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="Assert.DoesNotThrow(() => worker.Execute(_token))", span="230-230"];
m9_193 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="232-232"];
m9_194 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="233-233"];
m9_195 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="221-221"];
m9_67 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="310-310"];
m9_270 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="ServerCoreFacts.cs", label="return new Worker(_context.Object);", span="312-312"];
m9_271 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="310-310"];
m9_52 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63"];
m9_54 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerCoreFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="68-68"];
m9_55 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63"];
m9_19 [cluster="Mock<IFetchedJob>.cstr", file="ServerCoreFacts.cs", label="Entry Mock<IFetchedJob>.cstr", span=""];
m9_239 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="271-271"];
m9_240 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="var exception = new InvalidOperationException()", span="274-274"];
m9_241 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="275-277"];
m9_244 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="285-288"];
m9_242 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="279-279"];
m9_243 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="282-282"];
m9_245 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="271-271"];
m9_27 [cluster="Unk.GetConnection", file="ServerCoreFacts.cs", label="Entry Unk.GetConnection", span=""];
m9_51 [cluster="Unk.ChangeState", file="ServerCoreFacts.cs", label="Entry Unk.ChangeState", span=""];
m9_0 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25"];
m9_1 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_context = new WorkerContextMock()", span="27-27"];
m9_2 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_storage = _context.SharedContext.Storage", span="28-28"];
m9_3 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_process = _context.SharedContext.PerformanceProcess", span="29-29"];
m9_4 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m9_5 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33"];
m9_6 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_fetchedJob = new Mock<IFetchedJob>()", span="35-35"];
m9_8 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_fetchedJob.Object)", span="38-40"];
m9_10 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="48-48"];
m9_11 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="50-52"];
m9_13 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="_token = new CancellationToken()", span="59-59"];
m9_14 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25"];
m9_117 [cluster="Unk.InSequence", file="ServerCoreFacts.cs", label="Entry Unk.InSequence", span=""];
m9_17 [cluster="Unk.Setup", file="ServerCoreFacts.cs", label="Entry Unk.Setup", span=""];
m9_76 [cluster="Unk.Dispose", file="ServerCoreFacts.cs", label="Entry Unk.Dispose", span=""];
m9_228 [cluster="Unk.Throws", file="ServerCoreFacts.cs", label="Entry Unk.Throws", span=""];
m9_35 [cluster="Unk.FetchNextJob", file="ServerCoreFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m9_61 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72"];
m9_62 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="74-74"];
m9_63 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="76-76"];
m9_64 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="ServerCoreFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="78-78"];
m9_65 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="ServerCoreFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="79-79"];
m9_66 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72"];
m9_256 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="292-292"];
m9_257 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="ServerCoreFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="295-296"];
m9_258 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="298-298"];
m9_259 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="301-301"];
m9_260 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="304-307"];
m9_261 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="292-292"];
m9_89 [cluster="Unk.RemoveFromQueue", file="ServerCoreFacts.cs", label="Entry Unk.RemoveFromQueue", span=""];
m9_267 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="304-307"];
m9_24 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="33-33"];
m9_28 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="36-36"];
m9_31 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="39-39"];
m9_36 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="42-42"];
m9_40 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="45-45"];
m9_44 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="51-51"];
m9_48 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="54-57"];
m9_25 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.GetConnection()", span="33-33"];
m9_26 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="33-33"];
m9_30 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="36-36"];
m9_32 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>())", span="39-39"];
m9_33 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="39-39"];
m9_37 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.GetJobData(JobId)", span="42-42"];
m9_38 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="42-42"];
m9_42 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="45-45"];
m9_45 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Create(_connection.Object)", span="51-51"];
m9_46 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="51-51"];
m9_50 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="54-57"];
m9_57 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="66-66"];
m9_58 [cluster="lambda expression", file="ServerCoreFacts.cs", label="new Worker(null)", span="66-66"];
m9_59 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="66-66"];
m9_70 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="78-78"];
m9_73 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="79-79"];
m9_71 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.GetConnection()", span="78-78"];
m9_72 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="78-78"];
m9_74 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Dispose()", span="79-79"];
m9_75 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="79-79"];
m9_83 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="90-90"];
m9_86 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="93-93"];
m9_85 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="90-90"];
m9_87 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.RemoveFromQueue()", span="93-93"];
m9_88 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="93-93"];
m9_97 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="100-100"];
m9_101 [cluster="lambda expression", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="106-106"];
m9_100 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="106-106"];
m9_103 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="108-108"];
m9_106 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="109-109"];
m9_98 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="100-100"];
m9_99 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="100-100"];
m9_102 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="106-106"];
m9_104 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.RemoveFromQueue()", span="108-108"];
m9_105 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="108-108"];
m9_107 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Requeue()", span="109-109"];
m9_108 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="109-109"];
m9_118 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="117-118"];
m9_121 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="122-122"];
m9_125 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="126-127"];
m9_119 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="117-118"];
m9_120 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="117-118"];
m9_122 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="122-122"];
m9_123 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="122-122"];
m9_126 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="126-127"];
m9_127 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="126-127"];
m9_133 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="146-149"];
m9_134 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>())", span="146-149"];
m9_135 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="146-149"];
m9_136 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="148-148"];
m9_137 [cluster="lambda expression", file="ServerCoreFacts.cs", label="state.ServerId == _context.Object.ServerId", span="148-148"];
m9_138 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="148-148"];
m9_144 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="159-164"];
m9_145 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="159-164"];
m9_146 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="159-164"];
m9_147 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="163-164"];
m9_148 [cluster="lambda expression", file="ServerCoreFacts.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="163-164"];
m9_149 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="163-164"];
m9_156 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="172-175"];
m9_159 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="185-185"];
m9_157 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="172-175"];
m9_158 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="172-175"];
m9_160 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="185-185"];
m9_161 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="185-185"];
m9_167 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="196-198"];
m9_168 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="196-198"];
m9_169 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="196-198"];
m9_177 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="205-205"];
m9_181 [cluster="lambda expression", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="211-211"];
m9_180 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="211-211"];
m9_183 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="215-215"];
m9_186 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="217-217"];
m9_178 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="205-205"];
m9_179 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="205-205"];
m9_182 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="211-211"];
m9_184 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>())", span="215-215"];
m9_185 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="215-215"];
m9_187 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Requeue()", span="217-217"];
m9_188 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="217-217"];
m9_197 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="224-224"];
m9_201 [cluster="lambda expression", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="230-230"];
m9_200 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="230-230"];
m9_203 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="232-232"];
m9_206 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="233-233"];
m9_198 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="224-224"];
m9_199 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="224-224"];
m9_202 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="230-230"];
m9_204 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.RemoveFromQueue()", span="232-232"];
m9_205 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="232-232"];
m9_207 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Requeue()", span="233-233"];
m9_208 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="233-233"];
m9_214 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="243-246"];
m9_215 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="243-246"];
m9_216 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="243-246"];
m9_217 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="246-246"];
m9_218 [cluster="lambda expression", file="ServerCoreFacts.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="246-246"];
m9_219 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="246-246"];
m9_233 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="264-267"];
m9_236 [cluster="lambda expression", file="ServerCoreFacts.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="266-266"];
m9_229 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="255-255"];
m9_232 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="264-267"];
m9_230 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="255-255"];
m9_231 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="255-255"];
m9_234 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="264-267"];
m9_235 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="266-266"];
m9_237 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="266-266"];
m9_251 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="285-288"];
m9_254 [cluster="lambda expression", file="ServerCoreFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="287-287"];
m9_247 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="276-276"];
m9_250 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="285-288"];
m9_248 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="276-276"];
m9_249 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="276-276"];
m9_252 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="285-288"];
m9_253 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="287-287"];
m9_255 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="287-287"];
m9_264 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="295-295"];
m9_265 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.GetJobData(JobId)", span="295-295"];
m9_266 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="295-295"];
m9_268 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="304-307"];
m9_269 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="304-307"];
m9_128 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="140-140"];
m9_129 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="142-142"];
m9_130 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="144-144"];
m9_131 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", span="146-149"];
m9_132 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="140-140"];
m9_20 [cluster="Hangfire.Storage.JobData.JobData()", file="ServerCoreFacts.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m9_238 [cluster="Unk.Contains", file="ServerCoreFacts.cs", label="Entry Unk.Contains", span=""];
m9_69 [cluster="Unk.Verify", file="ServerCoreFacts.cs", label="Entry Unk.Verify", span=""];
m9_110 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="113-113"];
m9_112 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="ServerCoreFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="122-123"];
m9_115 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="134-134"];
m9_116 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="113-113"];
m9_77 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="83-83"];
m9_78 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="85-85"];
m9_79 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="ServerCoreFacts.cs", label="worker.Execute(_token)", span="87-87"];
m9_81 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="ServerCoreFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="93-93"];
m9_82 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="83-83"];
m9_262 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="ServerCoreFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m9_246 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="ServerCoreFacts.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m9_22 [cluster="Mock<IStateMachine>.cstr", file="ServerCoreFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m9_170 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="202-202"];
m9_171 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="205-206"];
m9_172 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="var worker = CreateWorker()", span="208-208"];
m9_173 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_token))", span="211-211"];
m9_174 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="214-216"];
m9_175 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="217-217"];
m9_176 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="202-202"];
m9_47 [cluster="Unk.Create", file="ServerCoreFacts.cs", label="Entry Unk.Create", span=""];
m9_60 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="ServerCoreFacts.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m9_18 [cluster="Unk.Returns", file="ServerCoreFacts.cs", label="Entry Unk.Returns", span=""];
m9_43 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="ServerCoreFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="315-315"];
m9_272 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="ServerCoreFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="315-315"];
m9_16 [cluster="Mock<IStorageConnection>.cstr", file="ServerCoreFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m9_39 [cluster="Unk.GetJobData", file="ServerCoreFacts.cs", label="Entry Unk.GetJobData", span=""];
m9_21 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerCoreFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m9_273 [file="ServerCoreFacts.cs", label="Hangfire.Core.Tests.Server.WorkerFacts", span=""];
m9_274 [file="ServerCoreFacts.cs", label=worker, span=""];
m9_275 [file="ServerCoreFacts.cs", label=worker, span=""];
m9_276 [file="ServerCoreFacts.cs", label=worker, span=""];
m9_277 [file="ServerCoreFacts.cs", label=exception, span=""];
m9_278 [file="ServerCoreFacts.cs", label=exception, span=""];
m11_10 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m11_16 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManager.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m11_37 [cluster="Unk.Equal", file="WorkerManager.cs", label="Entry Unk.Equal", span=""];
m11_12 [cluster="Mock<IStorageConnection>.cstr", file="WorkerManager.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m11_11 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="WorkerManager.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m11_24 [cluster="Unk.>", file="WorkerManager.cs", label="Entry Unk.>", span=""];
m11_59 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="61-61"];
m11_60 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="WorkerManager.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", prediction=15, span="63-64"];
m11_61 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="WorkerManager.cs", label="var scheduler = CreateScheduler()", span="65-65"];
m11_62 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="WorkerManager.cs", label="scheduler.Execute(_context.Object)", span="67-67"];
m11_63 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="WorkerManager.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="69-71"];
m11_64 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="61-61"];
m11_33 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="37-37"];
m11_34 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(Timeout.InfiniteTimeSpan, null))", span="39-40"];
m11_35 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerManager.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="42-42"];
m11_36 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="37-37"];
m11_49 [cluster="Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", file="WorkerManager.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(Hangfire.Server.BackgroundProcessContext)", span="45-45"];
m11_29 [cluster="Unk.GetFirstByLowestScoreFromSet", file="WorkerManager.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m11_41 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", file="WorkerManager.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>)", span="37-37"];
m11_20 [cluster="Unk.GetConnection", file="WorkerManager.cs", label="Entry Unk.GetConnection", span=""];
m11_42 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="46-46"];
m11_44 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=0, file="WorkerManager.cs", label="scheduler.Execute(_context.Object)", prediction=15, span="50-50"];
m11_43 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="WorkerManager.cs", label="var scheduler = CreateScheduler()", span="48-48"];
m11_45 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=0, file="WorkerManager.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>()))", prediction=15, span="52-56"];
m11_46 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="WorkerManager.cs", label="_connection.Verify(x => x.Dispose())", span="57-57"];
m11_47 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="46-46"];
m11_54 [cluster="Unk.ChangeState", file="WorkerManager.cs", label="Entry Unk.ChangeState", span=""];
m11_13 [cluster="Unk.Setup", file="WorkerManager.cs", label="Entry Unk.Setup", span=""];
m11_58 [cluster="Unk.Dispose", file="WorkerManager.cs", label="Entry Unk.Dispose", span=""];
m11_0 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="18-18"];
m11_1 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_context = new BackgroundProcessContextMock()", span="20-20"];
m11_2 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_context.CancellationTokenSource.Cancel()", span="21-21"];
m11_3 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_connection = new Mock<IStorageConnection>()", span="23-23"];
m11_4 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24"];
m11_5 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_stateMachine = new Mock<IStateMachine>()", span="26-26"];
m11_6 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m11_7 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="29-30"];
m11_8 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33"];
m11_9 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="18-18"];
m11_38 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="40-40"];
m11_51 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="52-56"];
m11_52 [cluster="lambda expression", color=green, community=0, file="WorkerManager.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName },\r\n                It.IsAny<CancellationToken>())", prediction=18, span="52-56"];
m11_53 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="52-56"];
m11_65 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="63-64"];
m11_66 [cluster="lambda expression", color=green, community=0, file="WorkerManager.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", prediction=19, span="63-64"];
m11_67 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="63-64"];
m11_68 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="64-64"];
m11_69 [cluster="lambda expression", color=green, community=0, file="WorkerManager.cs", label="time > 0", prediction=20, span="64-64"];
m11_70 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="64-64"];
m11_77 [cluster="lambda expression", file="WorkerManager.cs", label="_stateMachineFactory.Object", span="76-76"];
m11_55 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="57-57"];
m11_22 [cluster="lambda expression", file="WorkerManager.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="29-29"];
m11_27 [cluster="lambda expression", file="WorkerManager.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33"];
m11_72 [cluster="lambda expression", file="WorkerManager.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="70-70"];
m11_17 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="24-24"];
m11_21 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="29-29"];
m11_26 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="32-33"];
m11_71 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="70-70"];
m11_76 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="76-76"];
m11_78 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="76-76"];
m11_57 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="57-57"];
m11_56 [cluster="lambda expression", file="WorkerManager.cs", label="x.Dispose()", span="57-57"];
m11_23 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="29-29"];
m11_28 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="32-33"];
m11_30 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="33-33"];
m11_73 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="70-70"];
m11_19 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="24-24"];
m11_18 [cluster="lambda expression", file="WorkerManager.cs", label="x.GetConnection()", span="24-24"];
m11_39 [cluster="lambda expression", file="WorkerManager.cs", label="new SchedulePoller(Timeout.InfiniteTimeSpan, null)", span="40-40"];
m11_32 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="33-33"];
m11_31 [cluster="lambda expression", file="WorkerManager.cs", label="time > 0", span="33-33"];
m11_40 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="40-40"];
m11_15 [cluster="Mock<IStateMachine>.cstr", file="WorkerManager.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m11_25 [cluster="Unk.Create", file="WorkerManager.cs", label="Entry Unk.Create", span=""];
m11_14 [cluster="Unk.Returns", file="WorkerManager.cs", label="Entry Unk.Returns", span=""];
m11_50 [cluster="Unk.Verify", file="WorkerManager.cs", label="Entry Unk.Verify", span=""];
m11_48 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="74-74"];
m11_74 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="WorkerManager.cs", label="return new SchedulePoller(Timeout.InfiniteTimeSpan, storage => _stateMachineFactory.Object);", span="76-76"];
m11_75 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="74-74"];
m11_79 [file="WorkerManager.cs", label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span=""];
m12_10 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m12_45 [cluster="HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", span="62-62"];
m12_34 [cluster="Unk.Equal", file="WorkerManagerFacts.cs", label="Entry Unk.Equal", span=""];
m12_47 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70"];
m12_49 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[0].Verify(x => x.Start())", prediction=21, span="74-74"];
m12_48 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="72-72"];
m12_50 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[1].Verify(x => x.Start())", prediction=21, span="75-75"];
m12_51 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70"];
m12_70 [cluster="Unk.Stop", file="WorkerManagerFacts.cs", label="Entry Unk.Stop", span=""];
m12_4 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="WorkerManagerFacts.cs", label="_manager.Setup(x => x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerSupervisors[context.WorkerNumber - 1].Object)", prediction=21, span="37-38"];
m12_5 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m12_74 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88"];
m12_76 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[0].Verify(x => x.Dispose())", prediction=21, span="92-92"];
m12_75 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="90-90"];
m12_77 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[1].Verify(x => x.Dispose())", prediction=21, span="93-93"];
m12_78 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88"];
m12_11 [cluster="Mock<IServerSupervisor>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IServerSupervisor>.cstr", span=""];
m12_12 [cluster="Mock<WorkerManager>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<WorkerManager>.cstr", span=""];
m12_0 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="WorkerManagerFacts.cs", label="Entry HangFire.Web.GenericHandler.GenericHandler()", span="6-6"];
m12_2 [cluster="HangFire.Web.GenericHandler.GenericHandler()", color=green, community=0, file="WorkerManagerFacts.cs", label="Exit HangFire.Web.GenericHandler.GenericHandler()", prediction=21, span="6-6"];
m12_1 [cluster="HangFire.Web.GenericHandler.GenericHandler()", file="WorkerManagerFacts.cs", label="Context = new HttpContextWrapper(HttpContext.Current)", span="8-8"];
m12_3 [cluster="HttpContextWrapper.cstr", file="WorkerManagerFacts.cs", label="Entry HttpContextWrapper.cstr", span=""];
m12_18 [cluster="Unk.>", file="WorkerManagerFacts.cs", label="Entry Unk.>", span=""];
m12_23 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42"];
m12_24 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(null, WorkerCount))", span="44-45"];
m12_25 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42"];
m12_30 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m12_31 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="51-53"];
m12_32 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Assert.Equal(''workerCount'', exception.ParamName)", span="55-55"];
m12_33 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m12_46 [cluster="Unk.NotNull", file="WorkerManagerFacts.cs", label="Entry Unk.NotNull", span=""];
m12_44 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m12_13 [cluster="Unk.Setup", file="WorkerManagerFacts.cs", label="Entry Unk.Setup", span=""];
m12_82 [cluster="Unk.Dispose", file="WorkerManagerFacts.cs", label="Entry Unk.Dispose", span=""];
m12_38 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59"];
m12_41 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", color=green, community=0, file="WorkerManagerFacts.cs", label="var worker = manager.CreateWorkerSupervisor(context)", prediction=27, span="64-64"];
m12_39 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs", label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61"];
m12_40 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs", label="var context = new WorkerContext(_sharedContext, 1)", span="62-62"];
m12_42 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs", label="Assert.NotNull(worker)", span="66-66"];
m12_43 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59"];
m12_19 [cluster="Unk.CreateWorkerSupervisor", file="WorkerManagerFacts.cs", label="Entry Unk.CreateWorkerSupervisor", span=""];
m12_26 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="45-45"];
m12_15 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="37-37"];
m12_20 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="38-38"];
m12_16 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>())", prediction=28, span="37-37"];
m12_17 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="37-37"];
m12_21 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[context.WorkerNumber - 1].Object", prediction=21, span="38-38"];
m12_22 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="38-38"];
m12_55 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="74-74"];
m12_59 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="75-75"];
m12_56 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.Start()", prediction=30, span="74-74"];
m12_57 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="74-74"];
m12_60 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.Start()", prediction=31, span="75-75"];
m12_61 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="75-75"];
m12_67 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="83-83"];
m12_71 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="84-84"];
m12_68 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.Stop()", prediction=32, span="83-83"];
m12_69 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="83-83"];
m12_72 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.Stop()", prediction=33, span="84-84"];
m12_73 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="84-84"];
m12_79 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="92-92"];
m12_83 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="93-93"];
m12_80 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.Dispose()", prediction=34, span="92-92"];
m12_81 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="92-92"];
m12_84 [cluster="lambda expression", color=green, community=0, file="WorkerManagerFacts.cs", label="x.Dispose()", prediction=35, span="93-93"];
m12_85 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="93-93"];
m12_36 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="new WorkerManager(\r\n                    _sharedContext, 0)", span="52-53"];
m12_35 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="52-53"];
m12_37 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="52-53"];
m12_27 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="new WorkerManager(null, WorkerCount)", span="45-45"];
m12_28 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="45-45"];
m12_52 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="WorkerManagerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m12_58 [cluster="Unk.Start", file="WorkerManagerFacts.cs", label="Entry Unk.Start", span=""];
m12_9 [cluster="Mock<JobActivator>.cstr", file="WorkerManagerFacts.cs", label="HangFire.Web.GenericHandler", span=""];
m12_62 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79"];
m12_64 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[0].Verify(x => x.Stop())", prediction=21, span="83-83"];
m12_63 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="81-81"];
m12_65 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", color=green, community=0, file="WorkerManagerFacts.cs", label="_workerSupervisors[1].Verify(x => x.Stop())", prediction=21, span="84-84"];
m12_66 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79"];
m12_6 [cluster="SharedWorkerContext.cstr", file="WorkerManagerFacts.cs", label="Entry SharedWorkerContext.cstr", span=""];
m12_7 [cluster="Mock<JobStorage>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m12_8 [cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m12_53 [cluster="Unk.Execute", file="WorkerManagerFacts.cs", label="Entry Unk.Execute", span=""];
m12_14 [cluster="Unk.Returns", file="WorkerManagerFacts.cs", label="Entry Unk.Returns", span=""];
m12_29 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m12_54 [cluster="Unk.Verify", file="WorkerManagerFacts.cs", label="Entry Unk.Verify", span=""];
m12_86 [file="WorkerManagerFacts.cs", label="HangFire.Core.Tests.Server.WorkerManagerFacts", span=""];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_89 -> m0_100  [color=green, key=1, label="lambda expression", style=dashed];
m0_89 -> m0_103  [color=green, key=1, label="lambda expression", style=dashed];
m0_89 -> m0_91  [color=green, key=1, label=componentTypes, style=dashed];
m0_89 -> m0_92  [color=green, key=1, label=componentTypes, style=dashed];
m0_89 -> m0_93  [color=green, key=1, label=componentTypes, style=dashed];
m0_63 -> m0_66  [color=green, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_113  [color=darkseagreen4, key=1, label=storageComponent, style=dashed];
m0_109 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_112 -> m0_120  [color=green, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_13  [color=green, key=1, label="lambda expression", style=dashed];
m0_46 -> m0_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_79 -> m0_81  [color=green, key=1, label=supervisor, style=dashed];
m0_54 -> m0_58  [color=green, key=1, label="lambda expression", style=dashed];
m0_18 -> m0_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_125 -> m0_5  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_54  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_63  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m0_125 -> m0_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m3_11 -> m3_6  [color=darkseagreen4, key=1, label="HangFire.Dashboard.CombinedResourceDispatcher", style=dashed];
m4_83 -> m4_85  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_90 -> m4_93  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_77 -> m4_79  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_111 -> m4_113  [color=darkseagreen4, key=1, label=collection, style=dashed];
m7_17 -> m7_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ElectStateContextMock", style=dashed];
m9_142 -> m9_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_221 -> m9_225  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_221 -> m9_233  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_221 -> m9_236  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_222 -> m9_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_225 -> m9_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_212 -> m9_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_151 -> m9_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_154 -> m9_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_165 -> m9_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_92 -> m9_101  [color=darkseagreen4, key=1, label=worker, style=dashed];
m9_94 -> m9_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_95 -> m9_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_190 -> m9_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_191 -> m9_201  [color=darkseagreen4, key=1, label=worker, style=dashed];
m9_192 -> m9_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_193 -> m9_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_194 -> m9_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_240 -> m9_244  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_240 -> m9_251  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_240 -> m9_254  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_241 -> m9_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_244 -> m9_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_5 -> m9_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_8 -> m9_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_64 -> m9_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_65 -> m9_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_257 -> m9_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_260 -> m9_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_134 -> m9_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_145 -> m9_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_215 -> m9_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_233 -> m9_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_251 -> m9_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_131 -> m9_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_112 -> m9_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_81 -> m9_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_171 -> m9_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_172 -> m9_181  [color=darkseagreen4, key=1, label=worker, style=dashed];
m9_173 -> m9_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_174 -> m9_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_175 -> m9_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_273 -> m9_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_130  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_142  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_151  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_181  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_175  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_212  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_222  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_241  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_243  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_244  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_273 -> m9_270  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m9_274 -> m9_101  [color=darkseagreen4, key=1, label=worker, style=dashed];
m9_275 -> m9_181  [color=darkseagreen4, key=1, label=worker, style=dashed];
m9_276 -> m9_201  [color=darkseagreen4, key=1, label=worker, style=dashed];
m9_277 -> m9_233  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_277 -> m9_236  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_278 -> m9_251  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_278 -> m9_254  [color=darkseagreen4, key=1, label=exception, style=dashed];
m11_60 -> m11_65  [color=green, key=1, label="lambda expression", style=dashed];
m11_63 -> m11_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_34 -> m11_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_45 -> m11_51  [color=green, key=1, label="lambda expression", style=dashed];
m11_46 -> m11_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_4 -> m11_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_7 -> m11_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_8 -> m11_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_66 -> m11_68  [color=green, key=1, label="lambda expression", style=dashed];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_79 -> m11_44  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_45  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_60  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m11_79 -> m11_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m12_49 -> m12_55  [color=green, key=1, label="lambda expression", style=dashed];
m12_50 -> m12_59  [color=green, key=1, label="lambda expression", style=dashed];
m12_4 -> m12_15  [color=green, key=1, label="lambda expression", style=dashed];
m12_4 -> m12_20  [color=green, key=1, label="lambda expression", style=dashed];
m12_76 -> m12_79  [color=green, key=1, label="lambda expression", style=dashed];
m12_77 -> m12_83  [color=green, key=1, label="lambda expression", style=dashed];
m12_24 -> m12_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_31 -> m12_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_9 -> m12_7  [color=darkseagreen4, key=1, label="HangFire.Web.GenericHandler", style=dashed];
m12_64 -> m12_67  [color=green, key=1, label="lambda expression", style=dashed];
m12_65 -> m12_71  [color=green, key=1, label="lambda expression", style=dashed];
m12_86 -> m12_2  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_4  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_21  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_49  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_50  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_64  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_65  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_76  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_77  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m12_86 -> m12_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
}
