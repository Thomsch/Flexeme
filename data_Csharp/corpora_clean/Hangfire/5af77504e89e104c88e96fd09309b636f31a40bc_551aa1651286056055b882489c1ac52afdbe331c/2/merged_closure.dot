digraph  {
d20 [cluster="HangFire.Redis.RedisStorage.GetComponents()", color=green, community=0, label="yield return new SchedulePoller(this, _options.PollInterval);", prediction=0, span="56-56"];
d39 [label="HangFire.Redis.RedisStorage", span=""];
d19 [cluster="HangFire.Redis.RedisStorage.GetComponents()", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="54-54"];
d21 [cluster="HangFire.Redis.RedisStorage.GetComponents()", label="yield return new DequeuedJobsWatcher(this);", span="57-57"];
d24 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
d3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", label="_host = host", span="28-28"];
d4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", label="_db = db", span="29-29"];
d5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", label="_options = options", span="30-30"];
d6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="32-39"];
d11 [cluster="HangFire.Redis.RedisStorage.CreateMonitoring()", label="return new RedisMonitoringApi(this, _pooledManager.GetClient());", span="46-46"];
d16 [cluster="HangFire.Redis.RedisStorage.GetConnection()", label="return new RedisStorageConnection(this, _pooledManager.GetClient());", span="51-51"];
d22 [cluster="HangFire.Redis.RedisStorage.GetComponents()", label="yield return new ServerWatchdog(this);", span="58-58"];
d36 [cluster="HangFire.Redis.RedisStorage.ToString()", label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="70-70"];
d23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="54-54"];
d25 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
d2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="26-26"];
d7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="26-26"];
d8 [cluster="PooledRedisClientManager.cstr", label="Entry PooledRedisClientManager.cstr", span=""];
d9 [cluster="RedisClientManagerConfig.cstr", label="Entry RedisClientManagerConfig.cstr", span=""];
d10 [cluster="HangFire.Redis.RedisStorage.CreateMonitoring()", label="Entry HangFire.Redis.RedisStorage.CreateMonitoring()", span="44-44"];
d12 [cluster="HangFire.Redis.RedisStorage.CreateMonitoring()", label="Exit HangFire.Redis.RedisStorage.CreateMonitoring()", span="44-44"];
d13 [cluster="RedisMonitoringApi.cstr", label="Entry RedisMonitoringApi.cstr", span=""];
d14 [cluster="Unk.GetClient", label="Entry Unk.GetClient", span=""];
d15 [cluster="HangFire.Redis.RedisStorage.GetConnection()", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="49-49"];
d17 [cluster="HangFire.Redis.RedisStorage.GetConnection()", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="49-49"];
d18 [cluster="RedisStorageConnection.cstr", label="Entry RedisStorageConnection.cstr", span=""];
d26 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
d35 [cluster="HangFire.Redis.RedisStorage.ToString()", label="Entry HangFire.Redis.RedisStorage.ToString()", span="68-68"];
d37 [cluster="HangFire.Redis.RedisStorage.ToString()", label="Exit HangFire.Redis.RedisStorage.ToString()", span="68-68"];
d38 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
m0_6 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m0_7 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="var type = System.Type.GetType(Type, throwOnError: true, ignoreCase: true)", span="48-48"];
m0_8 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="var parameterTypes = JobHelper.FromJson<Type[]>(ParameterTypes)", span="49-49"];
m0_9 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="var method = GetNonOpenMatchingMethod(type, Method, parameterTypes)", span="50-50"];
m0_11 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''The type `{0}` does not contain a method with signature `{1}({2})`'',\r\n                        type.FullName,\r\n                        Method,\r\n                        String.Join('', '', parameterTypes.Select(x => x.Name))));", span="54-58"];
m0_14 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="return new Job(type, method, arguments);", span="64-64"];
m0_10 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="method == null", span="52-52"];
m0_13 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="var arguments = DeserializeArguments(method, serializedArguments)", span="62-62"];
m0_12 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="var serializedArguments = JobHelper.FromJson<string[]>(Arguments)", span="61-61"];
m0_15 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label=Exception, span="66-66"];
m0_16 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="throw new JobLoadException(''Could not load the job. See inner exception for the details.'', ex);", span="68-68"];
m0_17 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m0_110 [cluster="System.Collections.Generic.List<T>.List()", file="JobCreationProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_20 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m0_87 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var methodCandidates = type.GetMethods()", span="174-174"];
m0_89 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="178-178"];
m0_91 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="parameters.Length != parameterTypes.Length", span="184-184"];
m0_98 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var actualType = parameterTypes[i]", span="198-198"];
m0_88 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label=methodCandidates, span="176-176"];
m0_106 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="return null;", span="222-222"];
m0_90 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var parameters = methodCandidate.GetParameters()", span="183-183"];
m0_105 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="return methodCandidate.ContainsGenericParameters \r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray()) \r\n                    : methodCandidate;", span="217-219"];
m0_95 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="i < parameters.Length", span="194-194"];
m0_96 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var parameter = parameters[i]", span="196-196"];
m0_92 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var parameterTypesMatched = true", span="189-189"];
m0_93 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var genericArguments = new List<Type>()", span="190-190"];
m0_104 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="!parameterTypesMatched", span="214-214"];
m0_94 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var i = 0", span="194-194"];
m0_100 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="genericArguments.Add(actualType)", span="203-203"];
m0_103 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="i++", span="194-194"];
m0_97 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="var parameterType = parameter.ParameterType", span="197-197"];
m0_99 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="parameterType.IsGenericParameter", span="201-201"];
m0_101 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="parameterType.IsAssignableFrom(actualType)", span="208-208"];
m0_102 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="parameterTypesMatched = false", span="210-210"];
m0_107 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m0_112 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="JobCreationProcessFacts.cs", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
m0_53 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JobCreationProcessFacts.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m0_26 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="121-121"];
m0_23 [cluster="Unk.Join", file="JobCreationProcessFacts.cs", label="Entry Unk.Join", span=""];
m0_111 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobCreationProcessFacts.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_25 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m0_56 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="var parameters = methodInfo.GetParameters()", span="112-112"];
m0_57 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="var result = new List<object>(arguments.Length)", span="113-113"];
m0_61 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="var argument = arguments[i]", span="118-118"];
m0_59 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="i < parameters.Length", span="115-115"];
m0_60 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="var parameter = parameters[i]", span="117-117"];
m0_58 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="var i = 0", span="115-115"];
m0_66 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="result.Add(value)", span="133-133"];
m0_68 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="return result.ToArray();", span="136-136"];
m0_67 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="i++", span="115-115"];
m0_63 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="CoreBackgroundJobPerformer.Substitutions.ContainsKey(parameter.ParameterType)", span="122-122"];
m0_64 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="value = parameter.ParameterType.IsValueType\r\n                        ? Activator.CreateInstance(parameter.ParameterType)\r\n                        : null", span="124-126"];
m0_65 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="value = DeserializeArgument(argument, parameter.ParameterType)", span="130-130"];
m0_62 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="object value", span="120-120"];
m0_69 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m0_71 [cluster="System.Activator.CreateInstance(System.Type)", file="JobCreationProcessFacts.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m0_70 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobCreationProcessFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_18 [cluster="System.Type.GetType(string, bool, bool)", file="JobCreationProcessFacts.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m0_72 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m0_73 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="object value", span="141-141"];
m0_74 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="value = argument != null\r\n                    ? JobHelper.FromJson(argument, type)\r\n                    : null", span="144-146"];
m0_76 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="type == typeof (object)", span="150-150"];
m0_77 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="value = argument", span="154-154"];
m0_78 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="var converter = TypeDescriptor.GetConverter(type)", span="160-160"];
m0_79 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="value = converter.ConvertFromInvariantString(argument)", span="161-161"];
m0_75 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label=Exception, span="148-148"];
m0_82 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="return value;", span="169-169"];
m0_80 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label=Exception, span="163-163"];
m0_81 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="throw jsonException;", span="165-165"];
m0_83 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m0_31 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m0_32 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobCreationProcessFacts.cs", label="return new InvocationData(\r\n                job.Type.AssemblyQualifiedName,\r\n                job.Method.Name,\r\n                JobHelper.ToJson(job.Method.GetParameters().Select(x => x.ParameterType).ToArray()),\r\n                JobHelper.ToJson(SerializeArguments(job.Args)));", span="74-78"];
m0_33 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m0_35 [cluster="Unk.ToArray", file="JobCreationProcessFacts.cs", label="Entry Unk.ToArray", span=""];
m0_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobCreationProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m0_85 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobCreationProcessFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m0_24 [cluster="string.Format(string, object, object, object)", file="JobCreationProcessFacts.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m0_55 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JobCreationProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m0_19 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m0_38 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m0_36 [cluster="Unk.ToJson", file="JobCreationProcessFacts.cs", label="Entry Unk.ToJson", span=""];
m0_39 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="77-77"];
m0_28 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Entry lambda expression", span="58-58"];
m0_29 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.Name", span="58-58"];
m0_30 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="58-58"];
m0_40 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="x.ParameterType", span="77-77"];
m0_41 [cluster="lambda expression", file="JobCreationProcessFacts.cs", label="Exit lambda expression", span="77-77"];
m0_109 [cluster="string.Equals(string, System.StringComparison)", file="JobCreationProcessFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m0_22 [cluster="Unk.Select", file="JobCreationProcessFacts.cs", label="Entry Unk.Select", span=""];
m0_108 [cluster="System.Type.GetMethods()", file="JobCreationProcessFacts.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m0_52 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobCreationProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m0_84 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m0_27 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m0_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobCreationProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_0 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m0_1 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobCreationProcessFacts.cs", label="Type = type", span="33-33"];
m0_2 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobCreationProcessFacts.cs", label="Method = method", span="34-34"];
m0_3 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobCreationProcessFacts.cs", label="ParameterTypes = parameterTypes", span="35-35"];
m0_4 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobCreationProcessFacts.cs", label="Arguments = arguments", span="36-36"];
m0_5 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m0_86 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="JobCreationProcessFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m0_34 [cluster="System.Reflection.MethodBase.GetParameters()", file="JobCreationProcessFacts.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_37 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m0_42 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="var serializedArguments = new List<string>(arguments.Count)", span="83-83"];
m0_43 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label=arguments, span="84-84"];
m0_49 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="serializedArguments.Add(value)", span="104-104"];
m0_50 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="return serializedArguments.ToArray();", span="107-107"];
m0_44 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="string value = null", span="86-86"];
m0_45 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="argument != null", span="88-88"];
m0_46 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="argument is DateTime", span="90-90"];
m0_47 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="value = ((DateTime)argument).ToString(''o'', CultureInfo.InvariantCulture)", span="92-92"];
m0_48 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="value = JobHelper.ToJson(argument)", span="96-96"];
m0_51 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m0_113 [file="JobCreationProcessFacts.cs", label="Hangfire.Storage.InvocationData", span=""];
m1_19 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="59-59"];
m1_20 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="PossibleHangingFactAttribute.cs", label=_redis, span="61-61"];
m1_21 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="PossibleHangingFactAttribute.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="63-63"];
m1_22 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="59-59"];
m1_66 [cluster="System.Collections.Generic.List<T>.List()", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_204 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="328-328"];
m1_205 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label=_redis, span="331-331"];
m1_206 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="333-336"];
m1_207 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="return GetJobsWithProperties(\r\n                    _redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (method, job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="338-348"];
m1_208 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="328-328"];
m1_434 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m1_225 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="426-426"];
m1_262 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var endDate = DateTime.UtcNow", span="429-429"];
m1_269 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="437-437"];
m1_270 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="438-438"];
m1_263 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var dates = new List<DateTime>()", span="430-430"];
m1_266 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="dates.Add(endDate)", span="433-433"];
m1_267 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="endDate = endDate.AddHours(-1)", span="434-434"];
m1_264 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var i = 0", span="431-431"];
m1_273 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="i < dates.Count", span="441-441"];
m1_277 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="result.Add(dates[i], value)", span="449-449"];
m1_265 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="i < 24", span="431-431"];
m1_268 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="i++", span="431-431"];
m1_271 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var result = new Dictionary<DateTime, long>()", span="440-440"];
m1_275 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="444-444"];
m1_272 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var i = 0", span="441-441"];
m1_279 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="return result;", span="452-452"];
m1_278 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="i++", span="441-441"];
m1_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="long value", span="443-443"];
m1_276 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="value = 0", span="446-446"];
m1_280 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="426-426"];
m1_220 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m1_101 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="455-455"];
m1_291 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var endDate = DateTime.UtcNow.Date", span="458-458"];
m1_298 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="469-469"];
m1_299 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="471-471"];
m1_292 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var startDate = endDate.AddDays(-7)", span="459-459"];
m1_294 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="startDate <= endDate", span="462-462"];
m1_295 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="dates.Add(endDate)", span="464-464"];
m1_296 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="endDate = endDate.AddDays(-1)", span="465-465"];
m1_293 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var dates = new List<DateTime>()", span="460-460"];
m1_297 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="468-468"];
m1_306 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="result.Add(dates[i], value)", span="481-481"];
m1_302 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="i < stringDates.Count", span="474-474"];
m1_300 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var result = new Dictionary<DateTime, long>()", span="473-473"];
m1_304 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="477-477"];
m1_301 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="var i = 0", span="474-474"];
m1_308 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="return result;", span="484-484"];
m1_307 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="i++", span="474-474"];
m1_303 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="long value", span="476-476"];
m1_305 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="value = 0", span="479-479"];
m1_309 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="455-455"];
m1_140 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m1_284 [cluster="Unk.TryParse", file="PossibleHangingFactAttribute.cs", label="Entry Unk.TryParse", span=""];
m1_44 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m1_93 [cluster="KeyValuePair<string, ScheduleDto>.cstr", file="PossibleHangingFactAttribute.cs", label="Entry KeyValuePair<string, ScheduleDto>.cstr", span=""];
m1_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_45 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m1_139 [cluster="int.Parse(string)", file="PossibleHangingFactAttribute.cs", label="Entry int.Parse(string)", span="0-0"];
m1_226 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="385-385"];
m1_227 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="PossibleHangingFactAttribute.cs", label=_redis, span="387-387"];
m1_228 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="PossibleHangingFactAttribute.cs", label="return GetHourlyTimelineStats(_redis, ''failed'');", span="389-389"];
m1_229 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="385-385"];
m1_366 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="551-551"];
m1_367 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label=_redis, span="553-553"];
m1_368 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="var stats = new StatisticsDto()", span="555-555"];
m1_369 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="557-557"];
m1_371 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="561-563"];
m1_372 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="565-567"];
m1_373 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="569-571"];
m1_374 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="573-575"];
m1_375 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="577-579"];
m1_376 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="581-583"];
m1_379 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="588-590"];
m1_381 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="return stats;", span="596-596"];
m1_370 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="var pipeline = _redis.CreatePipeline()", span="559-559"];
m1_377 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label=queues, span="585-585"];
m1_380 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="pipeline.Flush()", span="593-593"];
m1_378 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="var queueName = queue", span="587-587"];
m1_382 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="551-551"];
m1_38 [cluster="Unk.GetJobsWithProperties", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m1_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_356 [cluster="KeyValuePair<string, T>.cstr", file="PossibleHangingFactAttribute.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m1_68 [cluster="Unk.CreatePipeline", file="PossibleHangingFactAttribute.cs", label="Entry Unk.CreatePipeline", span=""];
m1_86 [cluster="Unk.GetValueFromHash", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetValueFromHash", span=""];
m1_337 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_230 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="393-393"];
m1_231 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label=_redis, span="395-395"];
m1_232 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="397-397"];
m1_236 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="var historyList = _redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="402-403"];
m1_233 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="job.Count == 0", span="398-398"];
m1_238 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="!job.ContainsKey(''Method'')", span="410-410"];
m1_239 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="job.Add(''Method'', null)", span="410-410"];
m1_240 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="!job.ContainsKey(''ParameterTypes'')", span="411-411"];
m1_241 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="job.Add(''ParameterTypes'', null)", span="411-411"];
m1_242 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="return new JobDetailsDto\r\n                {\r\n                    Method = TryToGetMethod(job[''Type''], job[''Method''], job[''ParameterTypes'']),\r\n                    Arguments = job.ContainsKey(''Arguments'') ? JobHelper.FromJson<string[]>(job[''Arguments'']) : null,\r\n                    OldFormatArguments = job.ContainsKey(''Args'') ? JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']) : null,\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    CreatedAt = job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?)null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="413-422"];
m1_234 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="return null;", span="398-398"];
m1_235 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''Args'', ''State'', ''CreatedAt'' }", span="400-400"];
m1_237 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="405-407"];
m1_243 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="393-393"];
m1_245 [cluster="Unk.ContainsKey", file="PossibleHangingFactAttribute.cs", label="Entry Unk.ContainsKey", span=""];
m1_358 [cluster="Unk.selector", file="PossibleHangingFactAttribute.cs", label="Entry Unk.selector", span=""];
m1_362 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="543-543"];
m1_363 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="PossibleHangingFactAttribute.cs", label=_redis, span="545-545"];
m1_364 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="PossibleHangingFactAttribute.cs", label="return _redis.GetListCount(''hangfire:succeeded'');", span="547-547"];
m1_365 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="543-543"];
m1_342 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_383 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m1_65 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m1_138 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5"];
m1_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(HangFire.Redis.RedisStorage, IRedisClient)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(HangFire.Redis.RedisStorage, IRedisClient)", span="32-32"];
m1_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(HangFire.Redis.RedisStorage, IRedisClient)", color=green, community=0, file="PossibleHangingFactAttribute.cs", label="_storage = storage", prediction=1, span="34-34"];
m1_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(HangFire.Redis.RedisStorage, IRedisClient)", file="PossibleHangingFactAttribute.cs", label="_redis = redis", span="35-35"];
m1_250 [cluster="Unk.Where", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Where", span=""];
m1_310 [cluster="System.DateTime.AddDays(double)", file="PossibleHangingFactAttribute.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m1_357 [cluster="Unk.TrueForAll", file="PossibleHangingFactAttribute.cs", label="Entry Unk.TrueForAll", span=""];
m1_96 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="600-600"];
m1_429 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="PossibleHangingFactAttribute.cs", label="return JobMethod.Deserialize(new InvocationData\r\n                {\r\n                    Type = type,\r\n                    Method = method,\r\n                    ParameterTypes = parameterTypes\r\n                });", span="605-610"];
m1_430 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="PossibleHangingFactAttribute.cs", label=Exception, span="612-612"];
m1_431 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="PossibleHangingFactAttribute.cs", label="return null;", span="614-614"];
m1_432 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="600-600"];
m1_7 [cluster="Unk.Dispose", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Dispose", span=""];
m1_246 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m1_426 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="590-590"];
m1_41 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="97-104"];
m1_47 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="104-104"];
m1_42 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Method = method,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                    }", span="97-104"];
m1_43 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="97-104"];
m1_48 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.Value.StartedAt", span="104-104"];
m1_49 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="104-104"];
m1_80 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="jobs.Add(job.Key, x)", span="135-135"];
m1_91 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new KeyValuePair<string, ScheduleDto>(\r\n                        job.Key,\r\n                        new ScheduleDto\r\n                        {\r\n                            ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                            InScheduledState =\r\n                                ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="148-156"];
m1_88 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="states.Add(job.Key, x)", span="141-141"];
m1_75 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'' })", span="132-134"];
m1_84 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="138-140"];
m1_74 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="132-134"];
m1_79 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="135-135"];
m1_83 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="138-140"];
m1_87 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="141-141"];
m1_90 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="148-156"];
m1_76 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="132-134"];
m1_81 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="135-135"];
m1_85 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="138-140"];
m1_89 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="141-141"];
m1_92 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="148-156"];
m1_126 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="servers.Add(name, x)", span="201-201"];
m1_136 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="212-219"];
m1_133 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="queues.Add(name, x)", span="206-206"];
m1_123 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="198-200"];
m1_129 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="204-205"];
m1_122 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="198-200"];
m1_125 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="201-201"];
m1_128 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="204-205"];
m1_132 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="206-206"];
m1_135 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="212-219"];
m1_124 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="198-200"];
m1_127 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="201-201"];
m1_130 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="204-205"];
m1_134 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="206-206"];
m1_137 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="212-219"];
m1_147 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="237-245"];
m1_148 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new FailedJobDto\r\n                    {\r\n                        Method = method,\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-245"];
m1_149 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="237-245"];
m1_157 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="263-268"];
m1_158 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new SucceededJobDto\r\n                    {\r\n                        Method = method,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="263-268"];
m1_159 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="263-268"];
m1_183 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="288-289"];
m1_189 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="293-293"];
m1_195 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="297-297"];
m1_182 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="288-289"];
m1_185 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="290-290"];
m1_188 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="293-293"];
m1_191 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="294-294"];
m1_194 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="297-297"];
m1_197 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="298-298"];
m1_200 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="308-313"];
m1_184 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="288-289"];
m1_186 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="firstJobIds = x", span="290-290"];
m1_187 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="290-290"];
m1_190 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="293-293"];
m1_192 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="length = x", span="294-294"];
m1_193 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="294-294"];
m1_196 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="297-297"];
m1_198 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="dequeued = x", span="298-298"];
m1_199 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="298-298"];
m1_201 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Method = method,\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="308-313"];
m1_202 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="308-313"];
m1_209 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="343-348"];
m1_210 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="343-348"];
m1_211 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="343-348"];
m1_217 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="366-373"];
m1_218 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        State = job[0],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[2]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[3])\r\n                    }", span="366-373"];
m1_219 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="366-373"];
m1_253 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="!hiddenProperties.Contains(x.Key)", span="420-420"];
m1_252 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="420-420"];
m1_256 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="420-420"];
m1_259 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="420-420"];
m1_254 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="420-420"];
m1_257 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.Key", span="420-420"];
m1_258 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="420-420"];
m1_260 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.Value", span="420-420"];
m1_261 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="420-420"];
m1_287 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="437-437"];
m1_286 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="437-437"];
m1_288 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="437-437"];
m1_315 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="469-469"];
m1_311 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="468-468"];
m1_314 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="469-469"];
m1_312 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.ToString(''yyyy-MM-dd'')", span="468-468"];
m1_313 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="468-468"];
m1_316 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="469-469"];
m1_344 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="516-516"];
m1_354 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="535-539"];
m1_339 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="!jobs.ContainsKey(id)", span="511-511"];
m1_340 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="jobs.Add(id, x)", span="511-511"];
m1_351 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="525-534"];
m1_347 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="!states.ContainsKey(id)", span="517-517"];
m1_348 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="states.Add(id, x)", span="517-517"];
m1_334 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray())", span="508-510"];
m1_333 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="508-510"];
m1_338 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="511-511"];
m1_343 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="516-516"];
m1_346 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="517-517"];
m1_350 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="525-534"];
m1_353 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="535-539"];
m1_335 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="508-510"];
m1_341 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="511-511"];
m1_345 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="516-516"];
m1_349 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="517-517"];
m1_352 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="525-534"];
m1_355 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="535-539"];
m1_359 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="537-537"];
m1_360 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="y == null", span="537-537"];
m1_361 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="537-537"];
m1_389 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Servers = x", span="563-563"];
m1_395 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Queues = x", span="567-567"];
m1_401 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Scheduled = x", span="571-571"];
m1_407 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Processing = x", span="575-575"];
m1_414 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="579-579"];
m1_421 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Failed = x", span="583-583"];
m1_427 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="stats.Enqueued += x", span="590-590"];
m1_384 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="562-562"];
m1_388 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="563-563"];
m1_391 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="566-566"];
m1_394 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="567-567"];
m1_397 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="570-570"];
m1_400 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="571-571"];
m1_403 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="574-574"];
m1_406 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="575-575"];
m1_409 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="578-578"];
m1_413 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="579-579"];
m1_417 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="582-582"];
m1_420 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="583-583"];
m1_424 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="589-589"];
m1_423 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Entry lambda expression", span="589-589"];
m1_385 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetSetCount(''hangfire:servers'')", span="562-562"];
m1_386 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="562-562"];
m1_390 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="563-563"];
m1_392 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetSetCount(''hangfire:queues'')", span="566-566"];
m1_393 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="566-566"];
m1_396 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="567-567"];
m1_398 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="570-570"];
m1_399 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="570-570"];
m1_402 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="571-571"];
m1_404 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="574-574"];
m1_405 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="574-574"];
m1_408 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="575-575"];
m1_410 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="578-578"];
m1_411 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="578-578"];
m1_415 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="579-579"];
m1_418 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="582-582"];
m1_419 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="582-582"];
m1_422 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="583-583"];
m1_425 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="589-589"];
m1_428 [cluster="lambda expression", file="PossibleHangingFactAttribute.cs", label="Exit lambda expression", span="590-590"];
m1_36 [cluster="Unk.GetRangeFromSortedSet", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m1_3 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(HangFire.Redis.RedisStorage, IRedisClient)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(HangFire.Redis.RedisStorage, IRedisClient)", span="32-32"];
m1_180 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m1_181 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_73 [cluster="Unk.ToList", file="PossibleHangingFactAttribute.cs", label="Entry Unk.ToList", span=""];
m1_77 [cluster="Unk.Format", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Format", span=""];
m1_69 [cluster="Unk.QueueCommand", file="PossibleHangingFactAttribute.cs", label="Entry Unk.QueueCommand", span=""];
m1_141 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="223-223"];
m1_142 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="PossibleHangingFactAttribute.cs", label=_redis, span="225-225"];
m1_143 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="227-230"];
m1_144 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="return GetJobsWithProperties(\r\n                    _redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (method, job, state) => new FailedJobDto\r\n                    {\r\n                        Method = method,\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-245"];
m1_145 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="223-223"];
m1_289 [cluster="System.DateTime.ToString(string)", file="PossibleHangingFactAttribute.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_94 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m1_178 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="PossibleHangingFactAttribute.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m1_283 [cluster="Unk.ElementAt", file="PossibleHangingFactAttribute.cs", label="Entry Unk.ElementAt", span=""];
m1_106 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="177-177"];
m1_107 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label=_redis, span="179-179"];
m1_108 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="181-181"];
m1_109 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="serverNames.Count == 0", span="183-183"];
m1_114 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label=serverNames, span="193-193"];
m1_119 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="212-219"];
m1_110 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="return new List<ServerDto>();", span="185-185"];
m1_111 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="var servers = new Dictionary<string, List<string>>()", span="188-188"];
m1_112 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="var queues = new Dictionary<string, List<string>>()", span="189-189"];
m1_116 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="197-201"];
m1_113 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="var pipeline = _redis.CreatePipeline()", span="191-191"];
m1_117 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="203-206"];
m1_118 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="pipeline.Flush()", span="209-209"];
m1_115 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="var name = serverName", span="195-195"];
m1_120 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="177-177"];
m1_156 [cluster="Unk.GetRangeFromList", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetRangeFromList", span=""];
m1_151 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="249-249"];
m1_152 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="PossibleHangingFactAttribute.cs", label=_redis, span="251-251"];
m1_153 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var succeededJobIds = _redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="253-256"];
m1_154 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="return GetJobsWithProperties(\r\n                    _redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (method, job, state) => new SucceededJobDto\r\n                    {\r\n                        Method = method,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="258-268"];
m1_155 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="249-249"];
m1_97 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="161-161"];
m1_98 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="PossibleHangingFactAttribute.cs", label=_redis, span="163-163"];
m1_99 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="PossibleHangingFactAttribute.cs", label="return GetTimelineStats(_redis, ''succeeded'');", span="165-165"];
m1_100 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="161-161"];
m1_70 [cluster="Unk.Flush", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Flush", span=""];
m1_416 [cluster="Unk.Parse", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Parse", span=""];
m1_82 [cluster="Unk.Add", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Add", span=""];
m1_46 [cluster="string.Equals(string, System.StringComparison)", file="PossibleHangingFactAttribute.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m1_23 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="67-67"];
m1_24 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="PossibleHangingFactAttribute.cs", label=_redis, span="69-69"];
m1_25 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="PossibleHangingFactAttribute.cs", label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="71-71"];
m1_26 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="67-67"];
m1_281 [cluster="System.DateTime.AddHours(double)", file="PossibleHangingFactAttribute.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m1_31 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m1_32 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="PossibleHangingFactAttribute.cs", label=_redis, span="86-86"];
m1_33 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="88-91"];
m1_34 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (method, job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Method = method,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());", span="93-104"];
m1_35 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m1_12 [cluster="Unk.GetSortedSetCount", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetSortedSetCount", span=""];
m1_160 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m1_27 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="75-75"];
m1_28 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="PossibleHangingFactAttribute.cs", label=_redis, span="77-77"];
m1_29 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="PossibleHangingFactAttribute.cs", label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="79-79"];
m1_30 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="75-75"];
m1_336 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_247 [cluster="Unk.TryToGetMethod", file="PossibleHangingFactAttribute.cs", label="Entry Unk.TryToGetMethod", span=""];
m1_332 [cluster="JobList<T>.cstr", file="PossibleHangingFactAttribute.cs", label="Entry JobList<T>.cstr", span=""];
m1_285 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_221 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="377-377"];
m1_222 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="PossibleHangingFactAttribute.cs", label=_redis, span="379-379"];
m1_223 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="PossibleHangingFactAttribute.cs", label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="381-381"];
m1_224 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="377-377"];
m1_179 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="487-487"];
m1_317 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="jobIds.Count == 0", span="494-494"];
m1_319 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="496-496"];
m1_320 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="497-497"];
m1_321 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="properties = properties ?? new string[0]", span="499-499"];
m1_322 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="var pipeline = redis.CreatePipeline()", span="501-501"];
m1_323 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label=jobIds, span="503-503"];
m1_326 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="stateProperties != null", span="513-513"];
m1_327 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="515-517"];
m1_329 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="524-540"];
m1_318 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="494-494"];
m1_325 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="507-511"];
m1_328 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="pipeline.Flush()", span="521-521"];
m1_324 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="var id = jobId", span="505-505"];
m1_330 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="487-487"];
m1_244 [cluster="Unk.GetAllEntriesFromHash", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m1_251 [cluster="Unk.ToDictionary", file="PossibleHangingFactAttribute.cs", label="Entry Unk.ToDictionary", span=""];
m1_249 [cluster="Unk.FromStringTimestamp", file="PossibleHangingFactAttribute.cs", label="Entry Unk.FromStringTimestamp", span=""];
m1_331 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m1_387 [cluster="Unk.GetSetCount", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetSetCount", span=""];
m1_95 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m1_17 [cluster="string.Format(string, object)", file="PossibleHangingFactAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_102 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="169-169"];
m1_103 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="PossibleHangingFactAttribute.cs", label=_redis, span="171-171"];
m1_104 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="PossibleHangingFactAttribute.cs", label="return GetTimelineStats(_redis, ''failed'');", span="173-173"];
m1_105 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="169-169"];
m1_203 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m1_150 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m1_248 [cluster="Unk.>", file="PossibleHangingFactAttribute.cs", label="Entry Unk.>", span=""];
m1_161 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="272-272"];
m1_162 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label=_redis, span="274-274"];
m1_163 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="276-276"];
m1_164 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="277-277"];
m1_165 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label=queues, span="279-279"];
m1_175 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="315-321"];
m1_176 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="return result;", span="324-324"];
m1_166 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="IList<string> firstJobIds = null", span="281-281"];
m1_170 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="287-290"];
m1_171 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="292-294"];
m1_172 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="296-298"];
m1_167 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="long length = 0", span="282-282"];
m1_168 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="long dequeued = 0", span="283-283"];
m1_169 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="var pipeline = _redis.CreatePipeline()", span="285-285"];
m1_173 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="pipeline.Flush()", span="300-300"];
m1_174 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="var jobs = GetJobsWithProperties(\r\n                        _redis,\r\n                        firstJobIds,\r\n                        null,\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (method, job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Method = method,\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="303-313"];
m1_177 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="272-272"];
m1_18 [cluster="Unk.GetListCount", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetListCount", span=""];
m1_71 [cluster="JobList<ScheduleDto>.cstr", file="PossibleHangingFactAttribute.cs", label="Entry JobList<ScheduleDto>.cstr", span=""];
m1_50 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="108-108"];
m1_51 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label=_redis, span="110-110"];
m1_52 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="112-115"];
m1_53 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="scheduledJobs.Count == 0", span="117-117"];
m1_58 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label=scheduledJobs, span="127-127"];
m1_63 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="return new JobList<ScheduleDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduleDto>(\r\n                        job.Key,\r\n                        new ScheduleDto\r\n                        {\r\n                            ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                            InScheduledState =\r\n                                ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());", span="147-157"];
m1_54 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="return new JobList<ScheduleDto>(new List<KeyValuePair<string, ScheduleDto>>());", span="119-119"];
m1_55 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var jobs = new Dictionary<string, List<string>>()", span="122-122"];
m1_56 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var states = new Dictionary<string, string>()", span="123-123"];
m1_60 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'' }),\r\n                            x => jobs.Add(job.Key, x))", span="131-135"];
m1_57 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var pipeline = _redis.CreatePipeline()", span="125-125"];
m1_61 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="137-141"];
m1_62 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="pipeline.Flush()", span="144-144"];
m1_59 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="var job = scheduledJob", span="129-129"];
m1_64 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="108-108"];
m1_212 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="352-352"];
m1_213 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label=_redis, span="355-355"];
m1_214 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="357-359"];
m1_215 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="return GetJobsWithProperties(\r\n                    _redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (method, job, state) => new DequeuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        State = job[0],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[2]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[3])\r\n                    });", span="361-373"];
m1_216 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="352-352"];
m1_67 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PossibleHangingFactAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_37 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m1_13 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="51-51"];
m1_14 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="PossibleHangingFactAttribute.cs", label=_redis, span="53-53"];
m1_15 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="PossibleHangingFactAttribute.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="55-55"];
m1_16 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="51-51"];
m1_282 [cluster="Unk.GetValuesMap", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetValuesMap", span=""];
m1_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="43-43"];
m1_9 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="PossibleHangingFactAttribute.cs", label=_redis, span="45-45"];
m1_10 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="PossibleHangingFactAttribute.cs", label="return _redis.GetSortedSetCount(''hangfire:schedule'');", span="47-47"];
m1_11 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="43-43"];
m1_131 [cluster="Unk.GetAllItemsFromList", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m1_255 [cluster="Unk.Contains", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Contains", span=""];
m1_72 [cluster="Unk.Select", file="PossibleHangingFactAttribute.cs", label="Entry Unk.Select", span=""];
m1_4 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="38-38"];
m1_5 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="PossibleHangingFactAttribute.cs", label="_redis.Dispose()", span="40-40"];
m1_6 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="PossibleHangingFactAttribute.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="38-38"];
m1_121 [cluster="Unk.GetAllItemsFromSet", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m1_146 [cluster="Unk.GetRangeFromSortedSetDesc", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m1_412 [cluster="Unk.GetValue", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetValue", span=""];
m1_78 [cluster="Unk.GetValuesFromHash", file="PossibleHangingFactAttribute.cs", label="Entry Unk.GetValuesFromHash", span=""];
m1_433 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="PossibleHangingFactAttribute.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m1_435 [file="PossibleHangingFactAttribute.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m1_436 [file="PossibleHangingFactAttribute.cs", label=job, span=""];
m1_437 [file="PossibleHangingFactAttribute.cs", label=jobs, span=""];
m1_438 [file="PossibleHangingFactAttribute.cs", label=states, span=""];
m1_439 [file="PossibleHangingFactAttribute.cs", label=name, span=""];
m1_440 [file="PossibleHangingFactAttribute.cs", label=servers, span=""];
m1_441 [file="PossibleHangingFactAttribute.cs", label=queues, span=""];
m1_442 [file="PossibleHangingFactAttribute.cs", label=queue, span=""];
m1_443 [file="PossibleHangingFactAttribute.cs", label=hiddenProperties, span=""];
m1_444 [file="PossibleHangingFactAttribute.cs", label=string, span=""];
m1_445 [file="PossibleHangingFactAttribute.cs", label=string, span=""];
m1_446 [file="PossibleHangingFactAttribute.cs", label="string[]", span=""];
m1_447 [file="PossibleHangingFactAttribute.cs", label=id, span=""];
m1_448 [file="PossibleHangingFactAttribute.cs", label=jobs, span=""];
m1_449 [file="PossibleHangingFactAttribute.cs", label="string[]", span=""];
m1_450 [file="PossibleHangingFactAttribute.cs", label=states, span=""];
m1_451 [file="PossibleHangingFactAttribute.cs", label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m1_452 [file="PossibleHangingFactAttribute.cs", label=stats, span=""];
m1_453 [file="PossibleHangingFactAttribute.cs", label=queueName, span=""];
m2_0 [cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="SchedulePollerFacts.cs", label="Entry HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4"];
m2_1 [cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="SchedulePollerFacts.cs", label="Exit HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4"];
m4_59 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
m4_6 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="ServerComponentRunnerCollectionFacts.cs", label="Pager pager", span="83-83"];
m4_45 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="ServerComponentRunnerCollectionFacts.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="324-324"];
m4_46 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="ServerComponentRunnerCollectionFacts.cs", label="Write(RenderPartial(new Paginator(pager)))", span="336-336"];
m4_47 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="59-59"];
m4_48 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m4_49 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m4_50 [cluster="Unk.TryParse", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.TryParse", span=""];
m4_98 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
m4_99 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var runner = new Mock<IServerComponentRunner>()", span="120-120"];
m4_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="121-121"];
m4_101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Add(runner.Object)", span="122-122"];
m4_102 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Remove(runner.Object)", span="124-124"];
m4_103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.False(collection.Contains(runner.Object))", span="126-126"];
m4_104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118"];
m4_64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66"];
m4_75 [cluster="Unk.Equal", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Equal", span=""];
m4_41 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="ServerComponentRunnerCollectionFacts.cs", label="Write(job.Value.SucceededAt)", span="289-289"];
m4_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
m4_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", prediction=2, span="35-35"];
m4_10 [cluster="Unk.>", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.>", span=""];
m4_15 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", prediction=3, span="33-33"];
m4_44 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="51-51"];
m4_17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Start()", span="37-37"];
m4_18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner1.Verify(x => x.Start())", span="39-39"];
m4_14 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m4_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
m4_8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => new ServerComponentRunnerCollection(null))", span="29-29"];
m4_11 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="29-29"];
m4_28 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="40-40"];
m4_43 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Stop()", span="51-51"];
m4_19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner2.Verify(x => x.Start())", span="40-40"];
m4_20 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33"];
m4_1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner1 = new Mock<IServerComponentRunner>()", span="16-16"];
m4_2 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner2 = new Mock<IServerComponentRunner>()", span="17-17"];
m4_4 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14"];
m4_5 [cluster="Mock<IServerComponentRunner>.cstr", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m4_13 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="29-29"];
m4_21 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="129-129"];
m4_22 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m4_23 [cluster="Unk.Verify", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Verify", span=""];
m4_25 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Start()", span="39-39"];
m4_26 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="39-39"];
m4_29 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Start()", span="40-40"];
m4_30 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="40-40"];
m4_31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
m4_32 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="46-46"];
m4_33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Stop()", span="48-48"];
m4_34 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner1.Verify(x => x.Stop())", span="50-50"];
m4_35 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner2.Verify(x => x.Stop())", span="51-51"];
m4_36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44"];
m4_38 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="50-50"];
m4_39 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Stop()", span="50-50"];
m4_40 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="50-50"];
m4_42 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="51-51"];
m4_12 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="new ServerComponentRunnerCollection(null)", span="29-29"];
m4_7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27"];
m4_27 [cluster="Unk.Start", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Start", span=""];
m4_37 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m4_3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerComponentRunnerCollectionFacts.cs", label="_runners = new List<IServerComponentRunner>\r\n            {\r\n                _runner1.Object,\r\n                _runner2.Object\r\n            }", span="19-23"];
m4_24 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="39-39"];
m4_82 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
m4_83 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="97-97"];
m4_84 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Clear()", span="99-99"];
m4_85 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Equal(0, collection.Count)", span="101-101"];
m4_86 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95"];
m4_88 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
m4_89 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var element = new Mock<IServerComponentRunner>()", span="107-107"];
m4_90 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="108-108"];
m4_91 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.False(collection.Contains(element.Object))", span="110-110"];
m4_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Add(element.Object)", span="112-112"];
m4_93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.True(collection.Contains(element.Object))", span="114-114"];
m4_94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105"];
m4_52 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="61-61"];
m4_51 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m4_61 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Dispose()", span="70-70"];
m4_96 [cluster="Unk.False", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.False", span=""];
m4_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="return new ServerComponentRunnerCollection(_runners);", span="131-131"];
m4_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="129-129"];
m4_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
m4_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="87-87"];
m4_78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="collection.Add(new Mock<IServerComponentRunner>().Object)", span="89-89"];
m4_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Equal(3, collection.Count)", span="91-91"];
m4_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85"];
m4_57 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Dispose()", span="62-62"];
m4_81 [cluster="Unk.Add", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Add", span=""];
m4_53 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Dispose()", span="61-61"];
m4_62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner1.Verify(x => x.Stop())", span="72-72"];
m4_87 [cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77"];
m4_55 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m4_105 [cluster="Unk.Remove", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Remove", span=""];
m4_56 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="62-62"];
m4_63 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="_runner2.Verify(x => x.Stop())", span="73-73"];
m4_68 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Entry lambda expression", span="73-73"];
m4_54 [cluster="HttpRequestBase.LinkTo(string)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m4_58 [cluster="Unk.Write", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Write", span=""];
m4_65 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m4_66 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m4_67 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="HangFire.Web.Pages.SucceededJobs", span=""];
m4_69 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="x.Stop()", span="73-73"];
m4_70 [cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs", label="Exit lambda expression", span="73-73"];
m4_95 [cluster="Unk.Contains", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.Contains", span=""];
m4_60 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="68-68"];
m4_97 [cluster="Unk.True", file="ServerComponentRunnerCollectionFacts.cs", label="Entry Unk.True", span=""];
m4_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
m4_72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="var collection = CreateCollection()", span="79-79"];
m4_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="Assert.Equal(2, collection.Count)", span="81-81"];
m4_74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77"];
m4_108 [file="ServerComponentRunnerCollectionFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", span=""];
m5_8 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_9 [cluster="System.TimeSpan.FromMinutes(double)", file="ServerComponentRunnerFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m5_10 [cluster="System.TimeSpan.FromHours(double)", file="ServerComponentRunnerFacts.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m5_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m5_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="TransactionIsolationLevel = IsolationLevel.Serializable", span="27-27"];
m5_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28"];
m5_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29"];
m5_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30"];
m5_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31"];
m5_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="PrepareSchemaIfNecessary = true", span="32-32"];
m5_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ServerComponentRunnerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m5_11 [file="ServerComponentRunnerFacts.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m6_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m6_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MaxRetryAttempts = 10", span="27-27"];
m6_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="28-28"];
m6_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MinimumLogVerbosity = false", span="29-29"];
m6_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m6_5 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_6 [file="ServerComponentRunnerOptions.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m7_5 [cluster="Unk.>", file="ServerComponentRunnerOptionsFacts.cs", label="Entry Unk.>", span=""];
m7_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m7_16 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptionsFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m7_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", span="9-9"];
m7_1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="ServerComponentRunnerOptionsFacts.cs", label="var options = new ServerComponentRunnerOptions()", span="11-11"];
m7_2 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="ServerComponentRunnerOptionsFacts.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.MaxRetryAttempts = -1)", span="13-14"];
m7_3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", span="9-9"];
m7_13 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="23-23"];
m7_7 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="options.MaxRetryAttempts = -1", span="14-14"];
m7_6 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Entry lambda expression", span="14-14"];
m7_8 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="14-14"];
m7_15 [cluster="lambda expression", file="ServerComponentRunnerOptionsFacts.cs", label="Exit lambda expression", span="23-23"];
m7_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.ShutdownTimeout_Set_ThrowsAnException_OnNegativeValues()", file="ServerComponentRunnerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.ShutdownTimeout_Set_ThrowsAnException_OnNegativeValues()", span="18-18"];
m7_12 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.ShutdownTimeout_Set_ThrowsAnException_OnNegativeValues()", file="ServerComponentRunnerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.ShutdownTimeout_Set_ThrowsAnException_OnNegativeValues()", span="18-18"];
m7_17 [file="ServerComponentRunnerOptionsFacts.cs", label=options, span=""];
m7_18 [file="ServerComponentRunnerOptionsFacts.cs", label=options, span=""];
m8_0 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20"];
m8_1 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20"];
d39 -> d20  [color=green, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
d39 -> d11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
d39 -> d16  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
d39 -> d21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
d39 -> d22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
d39 -> d36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m0_7 -> m0_11  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_7 -> m0_14  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m0_9 -> m0_14  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_11 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_20 -> m0_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_20 -> m0_91  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m0_98 -> m0_101  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m0_88 -> m0_105  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m0_90 -> m0_95  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_92 -> m0_104  [color=darkseagreen4, key=1, label=parameterTypesMatched, style=dashed];
m0_93 -> m0_100  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m0_93 -> m0_105  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m0_94 -> m0_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_103 -> m0_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_97 -> m0_99  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m0_97 -> m0_101  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m0_56 -> m0_59  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m0_57 -> m0_66  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_57 -> m0_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_60 -> m0_63  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m0_58 -> m0_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_67 -> m0_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_72 -> m0_76  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_32 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyCollection<object>", style=dashed];
m0_42 -> m0_49  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m0_42 -> m0_50  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_44 -> m0_49  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_113 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_207 -> m1_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_225 -> m1_287  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_262 -> m1_266  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_269 -> m1_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_270 -> m1_275  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m1_263 -> m1_266  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_263 -> m1_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_263 -> m1_277  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_264 -> m1_268  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_268 -> m1_268  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_277  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_271 -> m1_279  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_272 -> m1_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_272 -> m1_277  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_272 -> m1_278  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_278  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_101 -> m1_315  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_291 -> m1_294  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_291 -> m1_295  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_298 -> m1_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_299 -> m1_304  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m1_292 -> m1_294  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m1_293 -> m1_295  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_293 -> m1_306  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_297 -> m1_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_297 -> m1_302  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m1_300 -> m1_306  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_300 -> m1_308  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_301 -> m1_304  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_301 -> m1_306  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_301 -> m1_307  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_307 -> m1_307  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_368 -> m1_381  [color=darkseagreen4, key=1, label=stats, style=dashed];
m1_369 -> m1_377  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_371 -> m1_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_371 -> m1_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_372 -> m1_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_372 -> m1_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_373 -> m1_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_373 -> m1_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_374 -> m1_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_374 -> m1_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_375 -> m1_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_375 -> m1_413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_376 -> m1_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_376 -> m1_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_379 -> m1_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_379 -> m1_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_370 -> m1_380  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_378 -> m1_424  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m1_232 -> m1_238  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_232 -> m1_239  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_232 -> m1_240  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_232 -> m1_241  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_242 -> m1_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_242 -> m1_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_242 -> m1_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_235 -> m1_253  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m1_48 -> m1_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m1_354 -> m1_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_338 -> m1_340  [color=darkseagreen4, key=1, label="?", style=dashed];
m1_346 -> m1_348  [color=darkseagreen4, key=1, label="?", style=dashed];
m1_144 -> m1_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_108 -> m1_114  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m1_119 -> m1_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_111 -> m1_116  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_111 -> m1_126  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_112 -> m1_117  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_112 -> m1_133  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_116 -> m1_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_116 -> m1_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_113 -> m1_116  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_113 -> m1_117  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_113 -> m1_118  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_117 -> m1_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_117 -> m1_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_115 -> m1_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_115 -> m1_126  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_115 -> m1_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_115 -> m1_129  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_115 -> m1_133  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_154 -> m1_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_179 -> m1_323  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m1_179 -> m1_326  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_179 -> m1_327  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_179 -> m1_344  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_179 -> m1_354  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m1_319 -> m1_325  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_319 -> m1_339  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_319 -> m1_340  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_320 -> m1_327  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_320 -> m1_347  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_320 -> m1_348  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_321 -> m1_325  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_321 -> m1_334  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_322 -> m1_325  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_322 -> m1_327  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_322 -> m1_328  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_327 -> m1_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_327 -> m1_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_329 -> m1_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_329 -> m1_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_325 -> m1_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_325 -> m1_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_324 -> m1_334  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_324 -> m1_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_324 -> m1_340  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_324 -> m1_327  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_324 -> m1_344  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_324 -> m1_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_324 -> m1_348  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_163 -> m1_165  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_164 -> m1_176  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_165 -> m1_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_165 -> m1_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_165 -> m1_195  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_170 -> m1_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_170 -> m1_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_171 -> m1_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_171 -> m1_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_172 -> m1_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_172 -> m1_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_169 -> m1_173  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_174 -> m1_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m1_63 -> m1_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_55 -> m1_60  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_55 -> m1_80  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_56 -> m1_61  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_56 -> m1_88  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_60 -> m1_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_60 -> m1_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_57 -> m1_60  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_57 -> m1_62  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_61 -> m1_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_61 -> m1_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_59 -> m1_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_59 -> m1_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_59 -> m1_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_59 -> m1_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_59 -> m1_88  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_215 -> m1_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_435 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_14  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_28  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_29  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_32  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_51  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_98  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_99  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_104  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_107  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_142  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_152  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_162  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_205  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_213  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_222  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_223  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_227  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_228  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_231  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_363  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_364  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_435 -> m1_367  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m1_436 -> m1_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_436 -> m1_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_436 -> m1_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_436 -> m1_88  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_437 -> m1_80  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_438 -> m1_88  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_439 -> m1_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_439 -> m1_126  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_439 -> m1_129  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_439 -> m1_133  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_440 -> m1_126  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_441 -> m1_133  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_442 -> m1_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_442 -> m1_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_442 -> m1_195  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_443 -> m1_253  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m1_444 -> m1_287  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_445 -> m1_315  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_446 -> m1_334  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_447 -> m1_334  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_447 -> m1_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_447 -> m1_340  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_447 -> m1_344  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_447 -> m1_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_447 -> m1_348  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_448 -> m1_339  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_448 -> m1_340  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_449 -> m1_344  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_450 -> m1_347  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_450 -> m1_348  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_451 -> m1_354  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m1_453 -> m1_424  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m4_48 -> m4_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_99 -> m4_102  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_99 -> m4_103  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_100 -> m4_102  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_100 -> m4_103  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_41 -> m4_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_16 -> m4_18  [color=green, key=1, label=job, style=dashed];
m4_18 -> m4_18  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_18 -> m4_20  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_18 -> m4_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_9 -> m4_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m4_9 -> m4_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m4_9 -> m4_46  [color=darkseagreen4, key=1, label=pager, style=dashed];
m4_8 -> m4_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m4_8 -> m4_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_19 -> m4_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_20 -> m4_20  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_4 -> m4_9  [color=darkseagreen4, key=1, label=from, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m4_22 -> m4_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_22 -> m4_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_30 -> m4_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_32 -> m4_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_35 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_39 -> m4_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_39 -> m4_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_37 -> m4_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_37 -> m4_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_24 -> m4_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_24 -> m4_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_83 -> m4_85  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_89 -> m4_91  [color=darkseagreen4, key=1, label=element, style=dashed];
m4_89 -> m4_92  [color=darkseagreen4, key=1, label=element, style=dashed];
m4_89 -> m4_93  [color=darkseagreen4, key=1, label=element, style=dashed];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_90 -> m4_93  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_77 -> m4_79  [color=darkseagreen4, key=1, label=collection, style=dashed];
m4_62 -> m4_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_63 -> m4_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_67 -> m4_15  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_67 -> m4_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m4_108 -> m4_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m4_108 -> m4_106  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", style=dashed];
m7_2 -> m7_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
}
