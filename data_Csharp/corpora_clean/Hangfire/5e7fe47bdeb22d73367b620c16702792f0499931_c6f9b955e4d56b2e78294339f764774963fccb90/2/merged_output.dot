digraph  {
n19 [label="HangFire.Web.AspNetBackgroundJobServer", span=""];
n0 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
n1 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
n2 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
n3 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
n4 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="Entry HangFire.Web.AspNetBackgroundJobServer.Start()", span="53-53"];
n5 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="HostingEnvironment.RegisterObject(this)", span="55-55"];
n6 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", color=red, community=0, label="1: base.Start()", span="56-56"];
n8 [cluster="Unk.RegisterObject", label="Entry Unk.RegisterObject", span=""];
n7 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", label="Exit HangFire.Web.AspNetBackgroundJobServer.Start()", span="53-53"];
n9 [cluster="HangFire.BackgroundJobServer.Start()", label="Entry HangFire.BackgroundJobServer.Start()", span="63-63"];
n10 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63"];
n11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, label="0: base.Stop()", span="65-65"];
n12 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="HostingEnvironment.UnregisterObject(this)", span="66-66"];
n14 [cluster="HangFire.BackgroundJobServer.Stop()", label="Entry HangFire.BackgroundJobServer.Stop()", span="68-68"];
n13 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63"];
n15 [cluster="Unk.UnregisterObject", label="Entry Unk.UnregisterObject", span=""];
n16 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69"];
n17 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", color=red, community=0, label="0: Stop()", span="71-71"];
n18 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69"];
d11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=green, community=0, label="0: base.Stop()", span="65-65"];
d17 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", color=green, community=0, label="0: Stop()", span="71-71"];
m0_33 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="BackgroundJobServer.cs", label="1: _serverRunner.Stop()", span="74-74"];
m0_34 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="72-72"];
m0_20 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobServer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_56 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_0 [cluster="HangFire.RetryAttribute.RetryAttribute()", file="BackgroundJobServer.cs", label="Entry HangFire.RetryAttribute.RetryAttribute()", span="23-23"];
m0_1 [cluster="HangFire.RetryAttribute.RetryAttribute()", file="BackgroundJobServer.cs", label="Exit HangFire.RetryAttribute.RetryAttribute()", span="23-23"];
m0_59 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="130-130"];
m0_73 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs", label="var components = _storage.GetComponents()", span="132-132"];
m0_74 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs", label="return components\r\n                .Select(component => new ServerComponentRunner(component))\r\n                .ToArray();", span="134-136"];
m0_75 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="130-130"];
m0_24 [cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_4 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="BackgroundJobServer.cs", label="Exit HangFire.RetryAttribute.RetryAttribute(int)", span="27-27"];
m0_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", color=green, community=0, file="BackgroundJobServer.cs", label="0: HangFire.RetryAttribute", span=""];
m0_6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", color=green, community=0, file="BackgroundJobServer.cs", label="0: throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="51-51"];
m0_7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="queues == null", span="52-52"];
m0_11 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", color=green, community=0, file="BackgroundJobServer.cs", label="1: storage == null", span="54-54"];
m0_9 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="queues.Length == 0", span="53-53"];
m0_12 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", color=green, community=0, file="BackgroundJobServer.cs", label="0: throw new ArgumentNullException(''storage'');", span="54-54"];
m0_13 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", color=green, community=0, file="BackgroundJobServer.cs", label="0: _storage = storage", span="56-56"];
m0_14 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_workerCount = workerCount", span="57-57"];
m0_16 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", color=green, community=0, file="BackgroundJobServer.cs", label="1: _serverId = String.Format(''{0}:{1}'', Environment.MachineName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="60-60"];
m0_15 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_queues = queues", span="58-58"];
m0_17 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="_serverRunner = GetServerRunner()", span="63-63"];
m0_8 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''queues'');", span="52-52"];
m0_10 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentException(''You should specify at least one queue to listen.'', ''queues'');", span="53-53"];
m0_18 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", span="49-49"];
m0_30 [cluster="Unk.Info", file="BackgroundJobServer.cs", label="Entry Unk.Info", span=""];
m0_76 [cluster="HangFire.JobStorage.GetComponents()", file="BackgroundJobServer.cs", label="Entry HangFire.JobStorage.GetComponents()", span="57-57"];
m0_19 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="BackgroundJobServer.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m0_47 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m0_23 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m0_31 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m0_72 [cluster="SchedulePoller.cstr", file="BackgroundJobServer.cs", label="Entry SchedulePoller.cstr", span=""];
m0_78 [cluster="Unk.ToArray", file="BackgroundJobServer.cs", label="Entry Unk.ToArray", span=""];
m0_57 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="115-115"];
m0_62 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="BackgroundJobServer.cs", label="1: yield return new WorkerManager(\r\n                _serverId, _workerCount, _queues, _storage, new JobPerformanceProcess(), new StateMachineFactory(_storage));", span="120-121"];
m0_61 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs", label="yield return new ServerComponentRunner(\r\n                new ServerHeartbeat(_storage, _serverId));", span="117-118"];
m0_63 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs", label="yield return new ServerComponentRunner(\r\n                new ServerWatchdog(_storage));", span="123-124"];
m0_64 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs", label="yield return new ServerComponentRunner(\r\n                new SchedulePoller(_storage, new StateMachineFactory(_storage), _options.SchedulePollingInterval));", span="126-127"];
m0_65 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="115-115"];
m0_67 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m0_35 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m0_69 [cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m0_45 [cluster="HangFire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m0_48 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m0_50 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="105-105"];
m0_52 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", label="componentRunners.AddRange(GetCommonComponentRunners())", span="109-109"];
m0_53 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", label="componentRunners.AddRange(GetStorageComponentRunners())", span="110-110"];
m0_51 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", label="var componentRunners = new List<IServerComponentRunner>()", span="107-107"];
m0_54 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", label="return new ServerComponentRunnerCollection(componentRunners);", span="112-112"];
m0_55 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="105-105"];
m0_22 [cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m0_79 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="135-135"];
m0_80 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new ServerComponentRunner(component)", span="135-135"];
m0_81 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="135-135"];
m0_60 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m0_58 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m0_77 [cluster="Unk.Select", file="BackgroundJobServer.cs", label="Entry Unk.Select", span=""];
m0_68 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="32-32"];
m0_26 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="66-66"];
m0_28 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_serverRunner.Start()", span="69-69"];
m0_27 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.Info(''Starting HangFire Server...'')", span="68-68"];
m0_29 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="66-66"];
m0_21 [cluster="System.ArgumentException.ArgumentException(string, string)", file="BackgroundJobServer.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_25 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="83-83"];
m0_41 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", color=green, community=0, file="BackgroundJobServer.cs", label="0: var context = new ServerContext\r\n            {\r\n                Queues = _queues,\r\n                WorkerCount = _workerCount\r\n            }", span="85-89"];
m0_42 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", color=green, community=0, file="BackgroundJobServer.cs", label="1: var server = new ServerCore(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="91-95"];
m0_43 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs", label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions\r\n                {\r\n                    ShutdownTimeout = ServerShutdownTimeout\r\n                });", span="97-102"];
m0_44 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="83-83"];
m0_49 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m0_36 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", span="77-77"];
m0_37 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="_serverRunner.Dispose()", span="79-79"];
m0_38 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Logger.Info(''HangFire Server stopped.'')", span="80-80"];
m0_39 [cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Exit HangFire.BackgroundJobServer.Dispose()", span="77-77"];
m0_66 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m0_2 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="BackgroundJobServer.cs", label="Entry HangFire.RetryAttribute.RetryAttribute(int)", span="27-27"];
m0_3 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="BackgroundJobServer.cs", label="Attempts = attempts", span="29-29"];
m0_40 [cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m0_71 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m0_70 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m0_46 [cluster="HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", span="31-31"];
m0_82 [file="BackgroundJobServer.cs", label="HangFire.BackgroundJobServer", span=""];
m3_15 [cluster="Unk.>", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.>", span=""];
m3_40 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="57-57"];
m3_41 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: var options = CreateOptions()", span="59-59"];
m3_42 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", color=green, community=1, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="61-62"];
m3_43 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="57-57"];
m3_10 [cluster="Unk.True", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.True", span=""];
m3_33 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="48-48"];
m3_34 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: var options = CreateOptions()", span="50-50"];
m3_35 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", color=green, community=1, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Throws<ArgumentNullException>(\r\n                () => options.Queues = null)", span="52-53"];
m3_36 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="48-48"];
m3_9 [cluster="Unk.Equal", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.Equal", span=""];
m3_0 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m3_1 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: var options = CreateOptions()", span="11-11"];
m3_2 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Equal(Environment.ProcessorCount * 5, options.WorkerCount)", span="13-13"];
m3_3 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Equal(Environment.MachineName, options.ServerName)", span="14-14"];
m3_4 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="15-15"];
m3_5 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="16-16"];
m3_6 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.True(options.SchedulePollingInterval > TimeSpan.Zero)", span="17-17"];
m3_7 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m3_8 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="65-65"];
m3_47 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: return new BackgroundJobServerOptions();", span="67-67"];
m3_48 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="65-65"];
m3_49 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m3_19 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="30-30"];
m3_20 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: var options = CreateOptions()", span="32-32"];
m3_21 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=green, community=1, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = 0)", span="34-35"];
m3_22 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="30-30"];
m3_11 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="21-21"];
m3_12 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: var options = CreateOptions()", span="23-23"];
m3_13 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", color=green, community=1, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Throws<ArgumentNullException>(\r\n                () => options.ServerName = null)", span="25-26"];
m3_14 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerName_ThrowsAnException_WhenValueIsNull()", span="21-21"];
m3_44 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="62-62"];
m3_17 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: options.ServerName = null", span="26-26"];
m3_16 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="26-26"];
m3_18 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="26-26"];
m3_24 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: options.WorkerCount = 0", span="35-35"];
m3_23 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="35-35"];
m3_25 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="35-35"];
m3_31 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: options.WorkerCount = -1", span="44-44"];
m3_30 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="44-44"];
m3_32 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="44-44"];
m3_38 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: options.Queues = null", span="53-53"];
m3_37 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="53-53"];
m3_39 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="53-53"];
m3_45 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: options.Queues = new string[0]", span="62-62"];
m3_46 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="62-62"];
m3_26 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="39-39"];
m3_27 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="1: var options = CreateOptions()", span="41-41"];
m3_28 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", color=green, community=1, file="BackgroundJobServerOptionsFacts.cs", label="0: Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="43-44"];
m3_29 [cluster="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="39-39"];
m3_50 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", span=""];
m3_51 [file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m3_52 [file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m3_53 [file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m3_54 [file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m3_55 [file="BackgroundJobServerOptionsFacts.cs", label=options, span=""];
m4_9 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m4_10 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="var connection = _storage.CreateAndOpenConnection()", span="53-53"];
m4_14 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="67-67"];
m4_11 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label=ProcessedTables, span="55-55"];
m4_13 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="connection.Execute(\r\n                        String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete from HangFire.[{0}] with (tablock) where ExpireAt < @now;'', table),\r\n                        new { now = DateTime.UtcNow })", span="59-63"];
m4_12 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="57-57"];
m4_15 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m4_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_2 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m4_3 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="storage == null", span="45-45"];
m4_5 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="_storage = storage", span="47-47"];
m4_6 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="_checkInterval = checkInterval", span="48-48"];
m4_4 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="throw new ArgumentNullException(''storage'');", span="45-45"];
m4_7 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m4_0 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m4_1 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m4_20 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m4_19 [cluster="Unk.Execute", file="ExpirationManager.cs", label="Entry Unk.Execute", span=""];
m4_16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ExpirationManager.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="70-70"];
m4_17 [cluster="Unk.DebugFormat", file="ExpirationManager.cs", label="Entry Unk.DebugFormat", span=""];
m4_18 [cluster="string.Format(string, object)", file="ExpirationManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_21 [file="ExpirationManager.cs", label="HangFire.SqlServer.ExpirationManager", span=""];
m6_4 [cluster="Unk.Given", file="JobServerFacts.cs", label="Entry Unk.Given", span=""];
m6_5 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobServerFacts.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21"];
m6_6 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobServerFacts.cs", label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="23-23"];
m6_7 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobServerFacts.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21"];
m6_0 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobServerFacts.cs", label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="15-15"];
m6_1 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobServerFacts.cs", label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="17-17"];
m6_2 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobServerFacts.cs", label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="15-15"];
m6_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_26 [cluster="Unk.GetValueFromHash", file="JobServerFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m6_17 [cluster="Unk.SetRangeInHash", file="JobServerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m6_8 [cluster="string.Format(string, object, object)", file="JobServerFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_12 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobServerFacts.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33"];
m6_13 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", color=red, community=0, file="JobServerFacts.cs", label="1: Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="35-42"];
m6_14 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobServerFacts.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33"];
m6_27 [cluster="Unk.AreEqual", file="JobServerFacts.cs", label="Entry Unk.AreEqual", span=""];
m6_16 [cluster="HangFire.JobHelper.ToJson(object)", file="JobServerFacts.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m6_19 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobServerFacts.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="48-51"];
m6_18 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobServerFacts.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="46-46"];
m6_20 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobServerFacts.cs", label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="46-46"];
m6_21 [cluster="Unk.SetEntryInHash", file="JobServerFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m6_3 [cluster="string.Format(string, object)", file="JobServerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_9 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobServerFacts.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27"];
m6_10 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobServerFacts.cs", label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="29-29"];
m6_11 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobServerFacts.cs", label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27"];
m6_22 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobServerFacts.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="57-57"];
m6_23 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobServerFacts.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="59-61"];
m6_24 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", color=red, community=0, file="JobServerFacts.cs", label="0: Assert.AreEqual(state, jobState)", span="63-63"];
m6_25 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobServerFacts.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="57-57"];
m7_76 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m7_4 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var count = 1", span="22-22"];
m7_10 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="38-38"];
m7_11 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(4))", span="42-42"];
m7_12 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="43-43"];
m7_13 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="43-43"];
m7_0 [cluster="HangFire.JobFetcher.TakeNext()", file="Program.cs", label="Entry HangFire.JobFetcher.TakeNext()", span="12-12"];
m7_1 [cluster="HangFire.JobFetcher.TakeNext()", color=green, community=0, file="Program.cs", label="1: var result = _blockingRedis.Lists\r\n                .BlockingRemoveLastString(0, new[] { ''queue:default'' }, 0)", span="14-15"];
m7_2 [cluster="HangFire.JobFetcher.TakeNext()", file="Program.cs", label="return _blockingRedis.Wait(result).Item2;", span="17-17"];
m7_3 [cluster="HangFire.JobFetcher.TakeNext()", color=red, community=0, file="Program.cs", label="1: Exit HangFire.JobFetcher.TakeNext()", span="12-12"];
m7_9 [cluster="Unk.AddFirst", file="Program.cs", label="Entry Unk.AddFirst", span=""];
m7_5 [cluster="Unk.Wait", file="Program.cs", label="Entry Unk.Wait", span=""];
m7_43 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var number = count++", span="94-94"];
m7_6 [cluster="HangFire.JobFetcher.AddToFailedQueue(string)", file="Program.cs", label="Entry HangFire.JobFetcher.AddToFailedQueue(string)", span="20-20"];
m7_51 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="124-124"];
m7_7 [cluster="HangFire.JobFetcher.AddToFailedQueue(string)", color=green, community=0, file="Program.cs", label="0: _redis.Lists.AddFirst(0, ''jobs:failed'', job)", span="22-22"];
m7_8 [cluster="HangFire.JobFetcher.AddToFailedQueue(string)", file="Program.cs", label="Exit HangFire.JobFetcher.AddToFailedQueue(string)", span="20-20"];
m7_20 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="56-56"];
m7_21 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(7))", span="60-60"];
m7_29 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="73-73"];
m7_30 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(6))", span="75-75"];
m7_35 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="82-82"];
m7_36 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="84-84"];
m7_41 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="91-91"];
m7_42 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var seconds = int.Parse(command.Substring(2))", span="93-93"];
m7_45 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="98-98"];
m7_46 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="102-102"];
m7_14 [cluster="Unk.Dispose", file="Program.cs", label="Entry Unk.Dispose", span=""];
m7_16 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="43-43"];
m7_17 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="48-48"];
m7_15 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="HangFire.JobFetcher", span=""];
m7_18 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="50-50"];
m7_19 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="52-52"];
m7_22 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="61-61"];
m7_23 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="61-61"];
m7_25 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="61-61"];
m7_24 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="63-63"];
m7_26 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="65-65"];
m7_27 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="67-67"];
m7_28 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="69-69"];
m7_31 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="76-76"];
m7_32 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="76-76"];
m7_34 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="76-76"];
m7_33 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="78-78"];
m7_37 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="85-85"];
m7_38 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="85-85"];
m7_40 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="85-85"];
m7_39 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="87-87"];
m7_44 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="95-95"];
m7_47 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="103-113"];
m7_48 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="114-114"];
m7_49 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="116-116"];
m7_50 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="118-118"];
m7_52 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.ReadLine()", span="125-125"];
m7_53 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Exit ConsoleSample.Program.Main()", span="11-11"];
m7_54 [cluster="ConsoleOutLoggerFactoryAdapter.cstr", file="Program.cs", label="Entry ConsoleOutLoggerFactoryAdapter.cstr", span=""];
m7_67 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Program.cs", label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="147-147"];
m7_98 [cluster="ConsoleSample.Services.EmptyCritical()", file="Program.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16"];
m7_80 [cluster="ConsoleSample.Services.Error()", file="Program.cs", label="Entry ConsoleSample.Services.Error()", span="21-21"];
m7_62 [cluster="int.Parse(string)", file="Program.cs", label="Entry int.Parse(string)", span="0-0"];
m7_66 [cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m7_56 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="Program.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36"];
m7_72 [cluster="ConsoleSample.Services.Random(int)", file="Program.cs", label="Entry ConsoleSample.Services.Random(int)", span="28-28"];
m7_85 [cluster="System.Guid.ToString()", file="Program.cs", label="Entry System.Guid.ToString()", span="0-0"];
m7_60 [cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m7_86 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="Program.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="45-45"];
m7_57 [cluster="System.Console.ReadLine()", file="Program.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m7_63 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Program.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m7_95 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="107-107"];
m7_70 [cluster="lambda expression", file="Program.cs", label="x.Random(number)", span="46-46"];
m7_69 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="46-46"];
m7_73 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="63-63"];
m7_77 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="78-78"];
m7_81 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="87-87"];
m7_88 [cluster="lambda expression", file="Program.cs", label="x.Random(number)", span="95-95"];
m7_87 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="95-95"];
m7_90 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="103-113"];
m7_71 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="46-46"];
m7_74 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="63-63"];
m7_75 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="63-63"];
m7_78 [cluster="lambda expression", file="Program.cs", label="x.Error()", span="78-78"];
m7_79 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="78-78"];
m7_82 [cluster="lambda expression", file="Program.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="87-87"];
m7_83 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="87-87"];
m7_89 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="95-95"];
m7_91 [cluster="lambda expression", file="Program.cs", label="i % 2 == 0", span="105-105"];
m7_92 [cluster="lambda expression", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="107-107"];
m7_93 [cluster="lambda expression", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="111-111"];
m7_94 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="103-113"];
m7_99 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="111-111"];
m7_96 [cluster="lambda expression", file="Program.cs", label="x.EmptyCritical()", span="107-107"];
m7_97 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="107-107"];
m7_100 [cluster="lambda expression", file="Program.cs", label="x.EmptyDefault()", span="111-111"];
m7_101 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="111-111"];
m7_58 [cluster="string.Equals(string, System.StringComparison)", file="Program.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m7_68 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Program.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m7_84 [cluster="System.Guid.NewGuid()", file="Program.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m7_55 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="Program.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="30-30"];
m7_65 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="Program.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="59-59"];
m7_64 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_102 [cluster="ConsoleSample.Services.EmptyDefault()", file="Program.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11"];
m7_61 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m7_103 [file="Program.cs", label=number, span=""];
m7_104 [file="Program.cs", label=number, span=""];
m8_42 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m8_38 [cluster="HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", span="21-21"];
m8_31 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="86-86"];
m8_32 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new FailedStateHandler();", span="88-88"];
m8_33 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new ProcessingStateHandler();", span="89-89"];
m8_34 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new SucceededStateHandler();", span="90-90"];
m8_35 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="86-86"];
m8_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string)", span="36-36"];
m8_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string)", span="36-36"];
m8_36 [cluster="HangFire.Redis.FailedStateHandler.FailedStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.FailedStateHandler.FailedStateHandler()", span="23-23"];
m8_22 [cluster="RedisConnection.cstr", file="RedisStorage.cs", label="Entry RedisConnection.cstr", span=""];
m8_30 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="RedisStorage.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="33-33"];
m8_18 [cluster="Unk.GetClient", file="RedisStorage.cs", label="Entry Unk.GetClient", span=""];
m8_37 [cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23"];
m8_17 [cluster="RedisMonitoringApi.cstr", file="RedisStorage.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m8_39 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="93-93"];
m8_40 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="return String.Format(''redis://{0}/{1}'', HostAndPort, Db);", span="95-95"];
m8_41 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="93-93"];
m8_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m8_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage()", span="31-31"];
m8_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="46-46"];
m8_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="HostAndPort = hostAndPort", span="48-48"];
m8_8 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Db = db", span="49-49"];
m8_9 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Options = options", span="50-50"];
m8_10 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ HostAndPort },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = Db,\r\n                    MaxWritePoolSize = Options.ConnectionPoolSize\r\n                })", span="52-59"];
m8_11 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="46-46"];
m8_29 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="RedisStorage.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m8_19 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="73-73"];
m8_20 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="return new RedisConnection(_pooledManager.GetClient());", span="75-75"];
m8_21 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="73-73"];
m8_13 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m8_14 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="68-68"];
m8_15 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="70-70"];
m8_16 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="68-68"];
m8_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m8_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41"];
m8_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="78-78"];
m8_24 [cluster="HangFire.Redis.RedisStorage.GetComponents()", color=red, community=0, file="RedisStorage.cs", label="1: var stateMachineFactory = new StateMachineFactory(this)", span="80-80"];
m8_25 [cluster="HangFire.Redis.RedisStorage.GetComponents()", color=red, community=0, file="RedisStorage.cs", label="0: yield return new SchedulePoller(this, stateMachineFactory, Options.PollInterval);", span="82-82"];
m8_26 [cluster="HangFire.Redis.RedisStorage.GetComponents()", color=red, community=0, file="RedisStorage.cs", label="0: yield return new FetchedJobsWatcher(this, stateMachineFactory);", span="83-83"];
m8_27 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="78-78"];
m8_12 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m8_28 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m8_43 [file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m9_4 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisStorageOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m9_0 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="RedisStorageOptions.cs", label="Entry HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", span="22-22"];
m9_1 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", color=red, community=0, file="RedisStorageOptions.cs", label="1: PollInterval = TimeSpan.FromSeconds(15)", span="24-24"];
m9_2 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="RedisStorageOptions.cs", label="ConnectionPoolSize = 50", span="25-25"];
m9_3 [cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="RedisStorageOptions.cs", label="Exit HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", span="22-22"];
m9_5 [file="RedisStorageOptions.cs", label="HangFire.Redis.RedisStorageOptions", span=""];
m10_47 [cluster="int.ToString(System.IFormatProvider)", file="SchedulePoller.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m10_8 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="Exit HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m10_9 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m10_37 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="SchedulePoller.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m10_10 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="queues == null", span="45-45"];
m10_11 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''queues'');", span="45-45"];
m10_15 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="SqlConnection connection = null", span="49-49"];
m10_12 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="queues.Length == 0", span="46-46"];
m10_16 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="SqlTransaction transaction = null", span="50-50"];
m10_13 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="46-46"];
m10_14 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="FetchedJob fetchedJob = null", span="48-48"];
m10_17 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="string fetchJobSqlTemplate = @''\r\ndelete top (1) from HangFire.JobQueue with (readpast, updlock, rowlock)\r\noutput DELETED.Id, DELETED.JobId, DELETED.Queue\r\nwhere (FetchedAt is null or FetchedAt < DATEADD(second, @timeout, GETUTCDATE()))\r\nand Queue in @queues''", span="52-56"];
m10_39 [cluster="System.TimeSpan.Negate()", file="SchedulePoller.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m10_40 [cluster="Unk.>", file="SchedulePoller.cs", label="Entry Unk.>", span=""];
m10_0 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m10_5 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="_storage = storage", span="42-42"];
m10_6 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="_stateMachineFactory = stateMachineFactory", span="43-43"];
m10_3 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="stateMachineFactory == null", span="40-40"];
m10_1 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="storage == null", span="39-39"];
m10_4 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="40-40"];
m10_2 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''storage'');", span="39-39"];
m10_7 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs", label="_pollInterval = pollInterval", span="44-44"];
m10_36 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SchedulePoller.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m10_32 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="fetchedJob == null", span="89-89"];
m10_19 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="connection = _storage.CreateAndOpenConnection()", span="62-62"];
m10_46 [cluster="SqlServerFetchedJob.cstr", file="SchedulePoller.cs", label="Entry SqlServerFetchedJob.cstr", span=""];
m10_43 [cluster="Unk.ReleaseConnection", file="SchedulePoller.cs", label="Entry Unk.ReleaseConnection", span=""];
m10_44 [cluster="Unk.Rollback", file="SchedulePoller.cs", label="Entry Unk.Rollback", span=""];
m10_31 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="87-87"];
m10_35 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SchedulePoller.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m10_34 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m10_42 [cluster="Unk.Dispose", file="SchedulePoller.cs", label="Entry Unk.Dispose", span=""];
m10_38 [cluster="Unk.BeginTransaction", file="SchedulePoller.cs", label="HangFire.Server.SchedulePoller", span=""];
m10_45 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m10_20 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted)", span="63-63"];
m10_33 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="return new SqlServerFetchedJob(\r\n                _storage,\r\n                connection,\r\n                transaction,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="91-96"];
m10_18 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m10_21 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SchedulePoller.cs", label="1: fetchedJob = connection.Query<FetchedJob>(\r\n                               fetchJobSqlTemplate,\r\n                               new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds },\r\n                               transaction)\r\n                               .SingleOrDefault()", span="67-71"];
m10_22 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label=SqlException, span="73-73"];
m10_23 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="transaction.Dispose()", span="75-75"];
m10_26 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="fetchedJob == null", span="80-80"];
m10_24 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_storage.ReleaseConnection(connection)", span="76-76"];
m10_28 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="transaction.Dispose()", span="83-83"];
m10_25 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="throw;", span="77-77"];
m10_27 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="transaction.Rollback()", span="82-82"];
m10_29 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_storage.ReleaseConnection(connection)", span="84-84"];
m10_30 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SchedulePoller.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="86-86"];
m10_41 [cluster="Unk.SingleOrDefault", file="SchedulePoller.cs", label="Entry Unk.SingleOrDefault", span=""];
m10_53 [file="SchedulePoller.cs", label="Hangfire.SqlServer.SqlServerJobQueue", span=""];
m12_19 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="62-62"];
m12_21 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="var state = _connection.GetStateData(_jobId)", span="64-64"];
m12_22 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="state == null", span="66-66"];
m12_24 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="!state.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="71-71"];
m12_26 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="!state.Data.ContainsKey(''WorkerId'')", span="76-76"];
m12_28 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="!state.Data[''WorkerId''].Equals(_workerId, StringComparison.OrdinalIgnoreCase)", span="81-81"];
m12_23 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="return true;", span="68-68"];
m12_25 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="return true;", span="73-73"];
m12_27 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="return true;", span="78-78"];
m12_29 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="return true;", span="83-83"];
m12_30 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="return false;", span="86-86"];
m12_31 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerComponentRunnerFacts.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="62-62"];
m12_32 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="ServerComponentRunnerFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m12_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerComponentRunnerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_0 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m12_1 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="jobId == null", span="37-37"];
m12_3 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="workerId == null", span="38-38"];
m12_5 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="connection == null", span="39-39"];
m12_7 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="_jobId = jobId", span="41-41"];
m12_8 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="_workerId = workerId", span="42-42"];
m12_9 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="_connection = connection", span="43-43"];
m12_10 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="_shutdownToken = shutdownToken", span="44-44"];
m12_2 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="throw new ArgumentNullException(''jobId'');", span="37-37"];
m12_4 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="throw new ArgumentNullException(''workerId'');", span="38-38"];
m12_6 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m12_11 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m12_13 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="52-52"];
m12_14 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="_shutdownToken.ThrowIfCancellationRequested()", span="54-54"];
m12_15 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="IsJobAborted()", span="56-56"];
m12_16 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="throw new JobAbortedException();", span="58-58"];
m12_17 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="52-52"];
m12_20 [cluster="Hangfire.Server.JobAbortedException.JobAbortedException()", file="ServerComponentRunnerFacts.cs", label="Entry Hangfire.Server.JobAbortedException.JobAbortedException()", span="20-20"];
m12_34 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerComponentRunnerFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_33 [cluster="string.Equals(string, System.StringComparison)", file="ServerComponentRunnerFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m12_18 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m12_35 [file="ServerComponentRunnerFacts.cs", label="Hangfire.Server.ServerJobCancellationToken", span=""];
m13_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m13_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MaxRetryAttempts = 10", span="26-26"];
m13_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27"];
m13_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=red, community=0, file="ServerComponentRunnerOptions.cs", label="0: MinimumLogVerbosity = false", span="28-28"];
m13_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m13_5 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m13_6 [file="ServerComponentRunnerOptions.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m14_17 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="_transaction.Dispose()", span="49-49"];
m14_18 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", color=green, community=0, file="ServerHeartbeat.cs", label="0: Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m14_19 [cluster="Unk.Dispose", file="ServerHeartbeat.cs", label="Entry Unk.Dispose", span=""];
m14_15 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m14_16 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="_transaction != null", span="47-47"];
m14_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m14_27 [cluster="string.Format(string, object)", file="ServerHeartbeat.cs", label="Entry string.Format(string, object)", span="0-0"];
m14_30 [cluster="Unk.Execute", file="ServerHeartbeat.cs", label="Entry Unk.Execute", span=""];
m14_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m14_28 [cluster="SqlConnection.cstr", file="ServerHeartbeat.cs", label="Entry SqlConnection.cstr", span=""];
m14_12 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", span="59-59"];
m14_20 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="var recreateDatabaseSql = String.Format(\r\n                @''if db_id('{0}') is null create database [{0}] COLLATE SQL_Latin1_General_CP1_CS_AS'',\r\n                ConnectionUtils.GetDatabaseName())", span="61-63"];
m14_21 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetMasterConnectionString())", span="65-66"];
m14_22 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="connection.Execute(recreateDatabaseSql)", span="68-68"];
m14_23 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetConnectionString())", span="71-72"];
m14_24 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="SqlServerObjectsInstaller.Install(connection)", span="74-74"];
m14_25 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", file="ServerHeartbeat.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CreateAndInitializeDatabaseIfNotExists()", span="59-59"];
m14_29 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", span="21-21"];
m14_14 [cluster="TransactionOptions.cstr", file="ServerHeartbeat.cs", label="Entry TransactionOptions.cstr", span=""];
m14_26 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", span="16-16"];
m14_13 [cluster="TransactionScope.cstr", file="ServerHeartbeat.cs", label="Entry TransactionScope.cstr", span=""];
m14_3 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="25-25"];
m14_4 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="Monitor.Enter(GlobalLock)", span="27-27"];
m14_5 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="!_sqlObjectInstalled", span="29-29"];
m14_6 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="CreateAndInitializeDatabaseIfNotExists()", span="31-31"];
m14_8 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="_isolationLevel != IsolationLevel.Unspecified", span="35-35"];
m14_7 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="_sqlObjectInstalled = true", span="32-32"];
m14_9 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="_transaction = new TransactionScope(\r\n                    TransactionScopeOption.RequiresNew,\r\n                    new TransactionOptions { IsolationLevel = _isolationLevel })", span="37-39"];
m14_10 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="ServerHeartbeat.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="25-25"];
m14_0 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="ServerHeartbeat.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="19-19"];
m14_1 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="ServerHeartbeat.cs", label="_isolationLevel = isolationLevel", span="22-22"];
m14_2 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="ServerHeartbeat.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="19-19"];
m14_11 [cluster="System.Threading.Monitor.Enter(object)", file="ServerHeartbeat.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m14_33 [file="ServerHeartbeat.cs", label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", span=""];
m15_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerWatchdog.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m15_24 [cluster="HangFire.Server.ServerWatchdog.ToString()", color=green, community=0, file="ServerWatchdog.cs", label="1: return ''Server Watchdog'';", span="61-61"];
m15_31 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="ServerWatchdog.cs", label="return @''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [HangFire].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [HangFire].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="74-100"];
m15_32 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="ServerWatchdog.cs", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72"];
m15_0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerWatchdog.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m15_1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerWatchdog.cs", label="storage == null", span="36-36"];
m15_3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerWatchdog.cs", label="_storage = storage", span="38-38"];
m15_4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerWatchdog.cs", label="_interval = interval", span="39-39"];
m15_2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerWatchdog.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m15_5 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ServerWatchdog.cs", label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m15_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_30 [cluster="System.Type.ToString()", file="ServerWatchdog.cs", label="Entry System.Type.ToString()", span="0-0"];
m15_25 [cluster="HangFire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="Exit HangFire.Server.ServerWatchdog.ToString()", span="59-59"];
m15_7 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m15_8 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44"];
m15_12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59"];
m15_15 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64"];
m15_9 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="int removedCount = 0", span="46-46"];
m15_10 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55"];
m15_11 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="57-57"];
m15_14 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="62-62"];
m15_13 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m15_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m15_17 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ServerWatchdog.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m15_26 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="ServerWatchdog.cs", label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m15_27 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="ServerWatchdog.cs", label="return GetType().ToString();", span="69-69"];
m15_28 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="ServerWatchdog.cs", label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m15_18 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ServerWatchdog.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m15_23 [cluster="lambda expression", file="ServerWatchdog.cs", label="Exit lambda expression", span="50-55"];
m15_29 [cluster="object.GetType()", file="ServerWatchdog.cs", label="Entry object.GetType()", span="0-0"];
m15_21 [cluster="lambda expression", file="ServerWatchdog.cs", label="Entry lambda expression", span="50-55"];
m15_22 [cluster="lambda expression", file="ServerWatchdog.cs", label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54"];
m15_20 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ServerWatchdog.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_33 [file="ServerWatchdog.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m16_16 [cluster="string.Replace(string, string)", file="SqlServerObjectsInstaller.cs", label="Entry string.Replace(string, string)", span="0-0"];
m16_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m16_1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="connection == null", span="36-36"];
m16_4 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="!IsSqlEditionSupported(connection)", span="40-40"];
m16_8 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="connection.Execute(script)", span="51-51"];
m16_2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m16_3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="SqlServerObjectsInstaller.cs", label="0: Log.Debug(''Start installing HangFire SQL objects...'')", span="38-38"];
m16_5 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="42-42"];
m16_6 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="45-47"];
m16_7 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="49-49"];
m16_9 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="SqlServerObjectsInstaller.cs", label="0: Log.Debug(''HangFire SQL objects installed.'')", span="53-53"];
m16_10 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m16_21 [cluster="Unk.>", file="SqlServerObjectsInstaller.cs", label="Entry Unk.>", span=""];
m16_32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerObjectsInstaller.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m16_22 [cluster="Unk.Single", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Single", span=""];
m16_30 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m16_17 [cluster="Unk.Execute", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Execute", span=""];
m16_31 [cluster="string.Format(string, object, object)", file="SqlServerObjectsInstaller.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m16_33 [cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerObjectsInstaller.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m16_12 [cluster="Unk.Debug", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Debug", span=""];
m16_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m16_23 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="64-64"];
m16_25 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="68-71"];
m16_24 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="stream == null", span="66-66"];
m16_26 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="var reader = new StreamReader(stream)", span="74-74"];
m16_27 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="return reader.ReadToEnd();", span="76-76"];
m16_28 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m16_13 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m16_18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="58-58"];
m16_19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="59-59"];
m16_20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m16_29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m16_14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m17_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m17_23 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m17_63 [cluster="string.Format(string, object, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m17_60 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m17_38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132"];
m17_64 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="var parameters = new DynamicParameters()", span="134-134"];
m17_65 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="parameters.Add(''@Resource'', resource)", span="135-135"];
m17_68 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="139-142"];
m17_71 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'',\r\n                        resource,\r\n                        releaseResult));", span="148-152"];
m17_66 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="136-136"];
m17_67 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="137-137"];
m17_69 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="144-144"];
m17_70 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="releaseResult < 0", span="146-146"];
m17_72 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132"];
m17_22 [cluster="string.Format(string, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m17_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerStorage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m17_58 [cluster="Unk.>", file="SqlServerStorage.cs", label="Entry Unk.>", span=""];
m17_26 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71"];
m17_27 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label=_completed, span="73-73"];
m17_28 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="return;", span="73-73"];
m17_29 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="_completed = true", span="75-75"];
m17_30 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="77-77"];
m17_31 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="return;", span="77-77"];
m17_32 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="AcquiredLocks.Value[_resource]--", span="79-79"];
m17_33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="AcquiredLocks.Value[_resource] != 0", span="81-81"];
m17_34 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="return;", span="81-81"];
m17_35 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="Release(_connection, _resource)", span="85-85"];
m17_36 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="AcquiredLocks.Value.Remove(_resource)", span="86-86"];
m17_37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71"];
m17_55 [cluster="DynamicParameters.cstr", file="SqlServerStorage.cs", label="Entry DynamicParameters.cstr", span=""];
m17_56 [cluster="Unk.Add", file="SqlServerStorage.cs", label="Entry Unk.Add", span=""];
m17_4 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50"];
m17_5 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="storage == null", span="52-52"];
m17_7 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="String.IsNullOrEmpty(resource)", span="53-53"];
m17_9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="(timeout.TotalSeconds + CommandTimeoutAdditionSeconds) > Int32.MaxValue", span="54-54"];
m17_11 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="_storage = storage", span="56-56"];
m17_12 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="_resource = resource", span="57-57"];
m17_13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="_connection = storage.CreateAndOpenConnection()", span="58-58"];
m17_6 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''storage'');", span="52-52"];
m17_8 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''resource'');", span="53-53"];
m17_10 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="throw new ArgumentException(string.Format(''The timeout specified is too large. Please supply a timeout equal to or less than {0} seconds'', Int32.MaxValue - CommandTimeoutAdditionSeconds), ''timeout'');", span="54-54"];
m17_15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=red, community=0, file="SqlServerStorage.cs", label="0: Acquire(_connection, _resource, timeout)", span="62-62"];
m17_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="60-60"];
m17_17 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=red, community=0, file="SqlServerStorage.cs", label="1: AcquiredLocks.Value[_resource]++", span="67-67"];
m17_16 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=red, community=0, file="SqlServerStorage.cs", label="1: AcquiredLocks.Value[_resource] = 1", span="63-63"];
m17_18 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50"];
m17_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerStorage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_20 [cluster="string.IsNullOrEmpty(string)", file="SqlServerStorage.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m17_25 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94"];
m17_40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="var parameters = new DynamicParameters()", span="96-96"];
m17_41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="parameters.Add(''@Resource'', resource)", span="97-97"];
m17_45 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="parameters.Add(''@LockTimeout'', timeout.TotalMilliseconds)", span="101-101"];
m17_48 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", span="107-111"];
m17_52 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="throw new DistributedLockTimeoutException(resource);", span="119-119"];
m17_53 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                    ''Could not place a lock on the resource '{0}': {1}.'',\r\n                    resource,\r\n                    LockErrorMessages.ContainsKey(lockResult)\r\n                        ? LockErrorMessages[lockResult]\r\n                        : String.Format(''Server returned the '{0}' error.'', lockResult)));", span="122-128"];
m17_42 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="parameters.Add(''@DbPrincipal'', ''public'')", span="98-98"];
m17_43 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="parameters.Add(''@LockMode'', LockMode)", span="99-99"];
m17_44 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="100-100"];
m17_46 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="102-102"];
m17_49 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="113-113"];
m17_47 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", span="105-105"];
m17_50 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="lockResult < 0", span="115-115"];
m17_51 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="lockResult == -1", span="117-117"];
m17_54 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94"];
m17_0 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="42-42"];
m17_1 [cluster="lambda expression", file="SqlServerStorage.cs", label="new Dictionary<string, int>()", span="42-42"];
m17_2 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="42-42"];
m17_59 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="SqlServerStorage.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m17_21 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerStorage.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m17_57 [cluster="Unk.Execute", file="SqlServerStorage.cs", label="Entry Unk.Execute", span=""];
m17_62 [cluster="Unk.Format", file="SqlServerStorage.cs", label="Entry Unk.Format", span=""];
m17_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerStorage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m17_61 [cluster="Unk.ContainsKey", file="SqlServerStorage.cs", label="Entry Unk.ContainsKey", span=""];
m17_73 [file="SqlServerStorage.cs", label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
m18_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30"];
m18_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="storage == null", span="36-36"];
m18_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m18_18 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="ProcessJob(nextJob.JobId, connection, _process)", span="55-55"];
m18_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="Worker.cs", label="throw new ArgumentNullException(''app'');", span="115-115"];
m18_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="stateMachineFactory == null", span="39-39"];
m18_10 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="_context = context", span="42-42"];
m18_11 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="_process = process", span="43-43"];
m18_47 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m18_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="Worker.cs", label="SignatureConversions.AddConversions(app)", span="117-117"];
m18_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="Worker.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123"];
m18_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="Worker.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m18_19 [cluster="Unk.AddConversions", file="Worker.cs", label="Entry Unk.AddConversions", span=""];
m18_45 [cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs", label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20"];
m18_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="context == null", span="37-37"];
m18_8 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=green, community=0, file="Worker.cs", label="0: throw new ArgumentNullException(''stateMachineFactory'');", span="39-39"];
m18_9 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="_storage = storage", span="41-41"];
m18_40 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m18_42 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37"];
m18_41 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="Worker.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m18_24 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var processingState = new ProcessingState(_context.ServerName)", span="78-78"];
m18_44 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35"];
m18_43 [cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
m18_46 [cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m18_20 [cluster="Unk.Map", file="Worker.cs", label="Entry Unk.Map", span=""];
m18_5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="Worker.cs", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58"];
m18_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="Worker.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m18_4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="Worker.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m18_6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="Worker.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m18_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="Worker.cs", label="app == null", span="115-115"];
m18_39 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m18_21 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30"];
m18_22 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="72-72"];
m18_23 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var stateMachine = _stateMachineFactory.Create(connection)", span="77-77"];
m18_25 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=string, span=""];
m18_28 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="97-97"];
m18_30 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="100-100"];
m18_31 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="process.Run(performContext, jobData.Job)", span="102-102"];
m18_37 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="123-123"];
m18_26 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m18_27 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Hangfire.JobStorage", span=""];
m18_29 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="jobData.EnsureLoaded()", span="98-98"];
m18_32 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new SucceededState()", span="104-104"];
m18_33 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=JobPerformanceException, span="106-106"];
m18_35 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=Exception, span="113-113"];
m18_34 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="108-111"];
m18_36 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="115-118"];
m18_38 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="72-72"];
m18_48 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
n19 -> n5  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n19 -> n6  [color=red, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n19 -> n11  [color=red, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n19 -> n12  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n19 -> n17  [color=red, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n19 -> d11  [color=green, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n19 -> d17  [color=green, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n9  [color=red, key=2, style=dotted];
n7 -> n4  [color=blue, key=0, style=bold];
n10 -> n11  [color=red, key=0, style=solid];
n10 -> d11  [color=green, key=0, style=solid];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n14  [color=red, key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=2, style=dotted];
n13 -> n10  [color=blue, key=0, style=bold];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> d17  [color=green, key=0, style=solid];
n17 -> n18  [color=red, key=0, style=solid];
n17 -> n10  [color=red, key=2, style=dotted];
n18 -> n16  [color=blue, key=0, style=bold];
d11 -> n12  [color=green, key=0, style=solid];
d11 -> n14  [color=green, key=2, style=dotted];
d17 -> n18  [color=green, key=0, style=solid];
d17 -> n10  [color=green, key=2, style=dotted];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_33 -> m0_35  [color=green, key=2, style=dotted];
m0_34 -> n14  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_59 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_76  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_77  [key=2, style=dotted];
m0_74 -> m0_78  [key=2, style=dotted];
m0_74 -> m0_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_75 -> m0_59  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_11  [color=green, key=1, label="HangFire.JobStorage", style=dashed];
m0_4 -> m0_13  [color=green, key=1, label="HangFire.JobStorage", style=dashed];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_4 -> m0_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_4 -> m0_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_4 -> m0_15  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=0, style=solid];
m0_5 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.RetryAttribute", style=dashed];
m0_6 -> m0_18  [color=green, key=0, style=solid];
m0_6 -> m0_19  [color=green, key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_13  [color=green, key=0, style=solid];
m0_9 -> m0_11  [color=green, key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_12 -> m0_18  [color=green, key=0, style=solid];
m0_12 -> m0_20  [color=green, key=2, style=dotted];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_22  [color=green, key=2, style=dotted];
m0_16 -> m0_23  [color=green, key=2, style=dotted];
m0_16 -> m0_24  [color=green, key=2, style=dotted];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_25  [key=2, style=dotted];
m0_8 -> m0_18  [key=0, style=solid];
m0_8 -> m0_20  [key=2, style=dotted];
m0_10 -> m0_18  [key=0, style=solid];
m0_10 -> m0_21  [key=2, style=dotted];
m0_18 -> m0_4  [color=blue, key=0, style=bold];
m0_57 -> m0_62  [color=green, key=0, style=bold];
m0_57 -> m0_61  [key=0, style=solid];
m0_57 -> m0_63  [color=crimson, key=0, style=bold];
m0_57 -> m0_64  [color=crimson, key=0, style=bold];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_62 -> m0_68  [color=green, key=2, style=dotted];
m0_62 -> m0_69  [color=green, key=2, style=dotted];
m0_62 -> m0_70  [color=green, key=2, style=dotted];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_61 -> m0_66  [key=2, style=dotted];
m0_61 -> m0_67  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=2, style=dotted];
m0_63 -> m0_71  [key=2, style=dotted];
m0_64 -> m0_70  [key=2, style=dotted];
m0_64 -> m0_66  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_72  [key=2, style=dotted];
m0_65 -> m0_57  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [key=0, style=solid];
m0_52 -> m0_57  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_58  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_59  [key=2, style=dotted];
m0_53 -> m0_58  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m0_51 -> m0_56  [key=2, style=dotted];
m0_51 -> m0_54  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_60  [key=2, style=dotted];
m0_55 -> m0_50  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_66  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_79  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=2, style=dotted];
m0_29 -> m0_26  [color=blue, key=0, style=bold];
m0_25 -> m0_41  [color=green, key=0, style=solid];
m0_41 -> m0_42  [color=green, key=0, style=solid];
m0_41 -> m0_45  [color=green, key=2, style=dotted];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_42 -> m0_46  [color=green, key=2, style=dotted];
m0_42 -> m0_47  [color=green, key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_48  [key=2, style=dotted];
m0_43 -> m0_49  [key=2, style=dotted];
m0_44 -> m0_25  [color=blue, key=0, style=bold];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_40  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_30  [key=2, style=dotted];
m0_39 -> m0_36  [color=blue, key=0, style=bold];
m0_66 -> m0_4  [color=darkorchid, key=3, label="Field variable string[] _queues", style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_82 -> m0_13  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_16  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_33  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_41  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_42  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_62  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_14  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_28  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_52  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_53  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_61  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_63  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_64  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m0_82 -> m0_73  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m3_40 -> m3_41  [color=green, key=0, style=solid];
m3_41 -> m3_42  [color=green, key=0, style=solid];
m3_41 -> m3_8  [color=green, key=2, style=dotted];
m3_41 -> m3_45  [color=green, key=1, label=options, style=dashed];
m3_42 -> m3_43  [color=green, key=0, style=solid];
m3_42 -> m3_15  [color=green, key=2, style=dotted];
m3_42 -> m3_44  [color=green, key=1, label="lambda expression", style=dashed];
m3_43 -> m3_40  [color=blue, key=0, style=bold];
m3_33 -> m3_34  [color=green, key=0, style=solid];
m3_34 -> m3_35  [color=green, key=0, style=solid];
m3_34 -> m3_8  [color=green, key=2, style=dotted];
m3_34 -> m3_38  [color=green, key=1, label=options, style=dashed];
m3_35 -> m3_36  [color=green, key=0, style=solid];
m3_35 -> m3_15  [color=green, key=2, style=dotted];
m3_35 -> m3_37  [color=green, key=1, label="lambda expression", style=dashed];
m3_36 -> m3_33  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_8  [color=green, key=2, style=dotted];
m3_1 -> m3_3  [color=green, key=1, label=options, style=dashed];
m3_1 -> m3_4  [color=green, key=1, label=options, style=dashed];
m3_1 -> m3_5  [color=green, key=1, label=options, style=dashed];
m3_1 -> m3_6  [color=green, key=1, label=options, style=dashed];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_9  [color=green, key=2, style=dotted];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_9  [color=green, key=2, style=dotted];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_9  [color=green, key=2, style=dotted];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_10  [color=green, key=2, style=dotted];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_6 -> m3_10  [color=green, key=2, style=dotted];
m3_7 -> m3_0  [color=blue, key=0, style=bold];
m3_8 -> m3_47  [color=green, key=0, style=solid];
m3_47 -> m3_48  [color=green, key=0, style=solid];
m3_47 -> m3_49  [color=green, key=2, style=dotted];
m3_48 -> m3_8  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [color=green, key=0, style=solid];
m3_20 -> m3_21  [color=green, key=0, style=solid];
m3_20 -> m3_8  [color=green, key=2, style=dotted];
m3_20 -> m3_24  [color=green, key=1, label=options, style=dashed];
m3_21 -> m3_22  [color=green, key=0, style=solid];
m3_21 -> m3_15  [color=green, key=2, style=dotted];
m3_21 -> m3_23  [color=green, key=1, label="lambda expression", style=dashed];
m3_22 -> m3_19  [color=blue, key=0, style=bold];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_8  [color=green, key=2, style=dotted];
m3_12 -> m3_17  [color=green, key=1, label=options, style=dashed];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_15  [color=green, key=2, style=dotted];
m3_13 -> m3_16  [color=green, key=1, label="lambda expression", style=dashed];
m3_14 -> m3_11  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [color=green, key=0, style=solid];
m3_17 -> m3_18  [color=green, key=0, style=solid];
m3_16 -> m3_17  [color=green, key=0, style=solid];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_24 -> m3_25  [color=green, key=0, style=solid];
m3_23 -> m3_24  [color=green, key=0, style=solid];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [color=green, key=0, style=solid];
m3_30 -> m3_31  [color=green, key=0, style=solid];
m3_32 -> m3_30  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [color=green, key=0, style=solid];
m3_37 -> m3_38  [color=green, key=0, style=solid];
m3_39 -> m3_37  [color=blue, key=0, style=bold];
m3_45 -> m3_46  [color=green, key=0, style=solid];
m3_46 -> m3_44  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [color=green, key=0, style=solid];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_27 -> m3_8  [color=green, key=2, style=dotted];
m3_27 -> m3_31  [color=green, key=1, label=options, style=dashed];
m3_28 -> m3_29  [color=green, key=0, style=solid];
m3_28 -> m3_15  [color=green, key=2, style=dotted];
m3_28 -> m3_30  [color=green, key=1, label="lambda expression", style=dashed];
m3_29 -> m3_26  [color=blue, key=0, style=bold];
m3_50 -> m3_1  [color=green, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m3_50 -> m3_12  [color=green, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m3_50 -> m3_20  [color=green, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m3_50 -> m3_27  [color=green, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m3_50 -> m3_34  [color=green, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m3_50 -> m3_41  [color=green, key=1, label="HangFire.Core.Tests.Server.BackgroundJobServerOptionsFacts", style=dashed];
m3_51 -> m3_17  [color=green, key=1, label=options, style=dashed];
m3_52 -> m3_24  [color=green, key=1, label=options, style=dashed];
m3_53 -> m3_31  [color=green, key=1, label=options, style=dashed];
m3_54 -> m3_38  [color=green, key=1, label=options, style=dashed];
m3_55 -> m3_45  [color=green, key=1, label=options, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_16  [key=2, style=dotted];
m4_10 -> m4_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_20  [key=2, style=dotted];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=0, style=solid];
m4_11 -> m4_13  [color=darkseagreen4, key=1, label=table, style=dashed];
m4_13 -> m4_11  [key=0, style=solid];
m4_13 -> m4_18  [key=2, style=dotted];
m4_13 -> m4_19  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_17  [key=2, style=dotted];
m4_15 -> m4_9  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m4_2 -> m4_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_4 -> m4_7  [key=0, style=solid];
m4_4 -> m4_8  [key=2, style=dotted];
m4_7 -> m4_2  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_21 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m4_21 -> m4_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m4_21 -> m4_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m4_21 -> m4_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=2, style=dotted];
m6_6 -> m6_4  [key=2, style=dotted];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_13 -> m6_14  [color=red, key=0, style=solid];
m6_13 -> m6_3  [color=red, key=2, style=dotted];
m6_13 -> m6_15  [color=red, key=2, style=dotted];
m6_13 -> m6_16  [color=red, key=2, style=dotted];
m6_13 -> m6_17  [color=red, key=2, style=dotted];
m6_14 -> m6_12  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_3  [key=2, style=dotted];
m6_19 -> m6_21  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_8  [key=2, style=dotted];
m6_10 -> m6_4  [key=2, style=dotted];
m6_11 -> m6_9  [color=blue, key=0, style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [color=red, key=1, label=string, style=dashed];
m6_23 -> m6_24  [color=red, key=0, style=solid];
m6_23 -> m6_3  [key=2, style=dotted];
m6_23 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_25  [color=red, key=0, style=solid];
m6_24 -> m6_27  [color=red, key=2, style=dotted];
m6_25 -> m6_22  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_43  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_4 -> m7_4  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_20  [key=0, style=solid];
m7_10 -> m7_60  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_14  [key=2, style=dotted];
m7_11 -> m7_61  [key=2, style=dotted];
m7_11 -> m7_62  [key=2, style=dotted];
m7_11 -> m7_13  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_12 -> m7_12  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_13 -> m7_10  [color=blue, key=0, style=bold];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_17  [key=0, style=solid];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_54  [color=red, key=2, style=dotted];
m7_1 -> m7_4  [color=green, key=2, style=dotted];
m7_2 -> m7_3  [color=red, key=0, style=solid];
m7_2 -> m7_55  [key=2, style=dotted];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_4  [color=red, key=0, style=solid];
m7_3 -> m7_56  [color=red, key=2, style=dotted];
m7_3 -> m7_9  [color=red, key=1, label=server, style=dashed];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> n9  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_51  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_43  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_43 -> m7_88  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_57  [key=2, style=dotted];
m7_6 -> m7_8  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_10  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_11  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_20  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_21  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_29  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_30  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_35  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_36  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_41  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_42  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_45  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_6 -> m7_46  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_64  [key=2, style=dotted];
m7_7 -> m7_8  [color=green, key=0, style=solid];
m7_7 -> m7_51  [key=0, style=solid];
m7_7 -> m7_58  [key=2, style=dotted];
m7_7 -> m7_7  [color=green, key=3, label="Local variable int count", style=bold];
m7_7 -> m7_9  [color=green, key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_8 -> m7_58  [key=2, style=dotted];
m7_8 -> m7_6  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_29  [key=0, style=solid];
m7_20 -> m7_60  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_61  [key=2, style=dotted];
m7_21 -> m7_62  [key=2, style=dotted];
m7_21 -> m7_23  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_35  [key=0, style=solid];
m7_29 -> m7_60  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_61  [key=2, style=dotted];
m7_30 -> m7_62  [key=2, style=dotted];
m7_30 -> m7_32  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_41  [key=0, style=solid];
m7_35 -> m7_60  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_61  [key=2, style=dotted];
m7_36 -> m7_62  [key=2, style=dotted];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_45  [key=0, style=solid];
m7_41 -> m7_60  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_61  [key=2, style=dotted];
m7_42 -> m7_62  [key=2, style=dotted];
m7_42 -> m7_44  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_5  [key=0, style=solid];
m7_45 -> m7_60  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_61  [key=2, style=dotted];
m7_46 -> m7_62  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_70  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_14 -> m7_12  [color=darkorchid, key=3, label="Local variable int number", style=bold];
m7_16 -> m7_13  [key=0, style=solid];
m7_16 -> m7_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_20  [key=0, style=solid];
m7_17 -> m7_64  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_63  [key=2, style=dotted];
m7_15 -> m7_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_15 -> m7_1  [color=green, key=1, label="HangFire.JobFetcher", style=dashed];
m7_15 -> m7_7  [color=green, key=1, label="HangFire.JobFetcher", style=dashed];
m7_15 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m7_15 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m7_15 -> m7_12  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_64  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_22 -> m7_12  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_26  [key=0, style=solid];
m7_25 -> m7_23  [key=0, style=solid];
m7_25 -> m7_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_65  [key=2, style=dotted];
m7_24 -> m7_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=0, style=solid];
m7_26 -> m7_64  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_64  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_31 -> m7_12  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_35  [key=0, style=solid];
m7_34 -> m7_32  [key=0, style=solid];
m7_34 -> m7_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_63  [key=2, style=dotted];
m7_33 -> m7_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_40  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_37 -> m7_12  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [key=0, style=solid];
m7_40 -> m7_38  [key=0, style=solid];
m7_40 -> m7_40  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_63  [key=2, style=dotted];
m7_39 -> m7_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_66  [key=2, style=dotted];
m7_44 -> m7_67  [key=2, style=dotted];
m7_44 -> m7_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_68  [key=2, style=dotted];
m7_47 -> m7_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_5  [key=0, style=solid];
m7_48 -> m7_64  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_5  [key=0, style=solid];
m7_50 -> m7_64  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_57  [key=2, style=dotted];
m7_53 -> m7_0  [color=blue, key=0, style=bold];
m7_95 -> m7_96  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_72  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_72  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_90 -> m7_91  [key=0, style=solid];
m7_71 -> m7_69  [color=blue, key=0, style=bold];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_76  [key=2, style=dotted];
m7_75 -> m7_73  [color=blue, key=0, style=bold];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_80  [key=2, style=dotted];
m7_79 -> m7_77  [color=blue, key=0, style=bold];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_84  [key=2, style=dotted];
m7_82 -> m7_85  [key=2, style=dotted];
m7_82 -> m7_86  [key=2, style=dotted];
m7_83 -> m7_81  [color=blue, key=0, style=bold];
m7_89 -> m7_87  [color=blue, key=0, style=bold];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_93  [key=0, style=solid];
m7_92 -> m7_94  [key=0, style=solid];
m7_92 -> m7_63  [key=2, style=dotted];
m7_92 -> m7_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_63  [key=2, style=dotted];
m7_93 -> m7_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_94 -> m7_90  [color=blue, key=0, style=bold];
m7_99 -> m7_100  [key=0, style=solid];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_98  [key=2, style=dotted];
m7_97 -> m7_95  [color=blue, key=0, style=bold];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_102  [key=2, style=dotted];
m7_101 -> m7_99  [color=blue, key=0, style=bold];
m7_103 -> m7_70  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_104 -> m7_88  [color=darkseagreen4, key=1, label=number, style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [color=crimson, key=0, style=bold];
m8_31 -> m8_34  [color=crimson, key=0, style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_36  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_37  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_38  [key=2, style=dotted];
m8_35 -> m8_31  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=2, style=dotted];
m8_41 -> m8_39  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_6 -> m8_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=2, style=dotted];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_6  [color=blue, key=0, style=bold];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_22  [key=2, style=dotted];
m8_20 -> m8_18  [key=2, style=dotted];
m8_21 -> m8_19  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=2, style=dotted];
m8_15 -> m8_18  [key=2, style=dotted];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [color=red, key=0, style=solid];
m8_23 -> m8_25  [color=red, key=0, style=bold];
m8_23 -> m8_26  [color=red, key=0, style=bold];
m8_24 -> m8_25  [color=red, key=0, style=solid];
m8_24 -> m8_28  [color=red, key=2, style=dotted];
m8_24 -> m8_26  [color=red, key=1, label=stateMachineFactory, style=dashed];
m8_25 -> m8_26  [color=red, key=0, style=solid];
m8_25 -> m8_29  [color=red, key=2, style=dotted];
m8_26 -> m8_27  [color=red, key=0, style=solid];
m8_26 -> m8_30  [color=red, key=2, style=dotted];
m8_27 -> m8_23  [color=blue, key=0, style=bold];
m8_43 -> m8_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_10  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_24  [color=red, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_25  [color=red, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_26  [color=red, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m8_43 -> m8_40  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m9_0 -> m9_1  [color=red, key=0, style=solid];
m9_0 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_2  [color=red, key=0, style=solid];
m9_1 -> m9_4  [color=red, key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_0  [color=blue, key=0, style=bold];
m9_5 -> m9_1  [color=red, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m9_5 -> m9_2  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m10_8 -> m10_0  [color=blue, key=0, style=bold];
m10_9 -> m10_21  [color=green, key=1, label="string[]", style=dashed];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m10_9 -> m10_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_10 -> m10_12  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_16  [key=0, style=solid];
m10_11 -> m10_18  [key=2, style=dotted];
m10_11 -> m10_34  [key=0, style=solid];
m10_11 -> m10_8  [key=2, style=dotted];
m10_15 -> m10_17  [key=0, style=solid];
m10_15 -> m10_20  [key=2, style=dotted];
m10_15 -> m10_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_15 -> m10_16  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_15  [key=0, style=solid];
m10_12 -> m10_14  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_19  [key=2, style=dotted];
m10_13 -> m10_34  [key=0, style=solid];
m10_13 -> m10_35  [key=2, style=dotted];
m10_14 -> m10_15  [key=0, style=solid];
m10_17 -> m10_10  [color=blue, key=0, style=bold];
m10_17 -> m10_21  [color=green, key=1, label=fetchJobSqlTemplate, style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_4 -> m10_7  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_9  [key=2, style=dotted];
m10_2 -> m10_7  [key=0, style=solid];
m10_2 -> m10_8  [key=2, style=dotted];
m10_2 -> m10_9  [key=2, style=dotted];
m10_7 -> m10_0  [color=blue, key=0, style=bold];
m10_7 -> m10_8  [key=0, style=solid];
m10_32 -> m10_17  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_19 -> m10_21  [color=green, key=1, label=connection, style=dashed];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_37  [key=2, style=dotted];
m10_19 -> m10_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m10_19 -> m10_29  [color=darkseagreen4, key=1, label=connection, style=dashed];
m10_19 -> m10_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_31 -> m10_36  [key=2, style=dotted];
m10_34 -> m10_9  [color=blue, key=0, style=bold];
m10_38 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_6  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_7  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_11  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_12  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_13  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_14  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_15  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_16  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_21  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_38 -> m10_26  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m10_20 -> m10_21  [color=green, key=0, style=solid];
m10_20 -> m10_38  [key=2, style=dotted];
m10_20 -> m10_23  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m10_20 -> m10_27  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m10_20 -> m10_28  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m10_20 -> m10_33  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_46  [key=2, style=dotted];
m10_33 -> m10_47  [key=2, style=dotted];
m10_18 -> m10_21  [key=0, style=solid];
m10_18 -> m10_25  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m10_18 -> m10_29  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_30  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_18 -> m10_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_18 -> m10_36  [key=2, style=dotted];
m10_21 -> m10_22  [color=green, key=0, style=solid];
m10_21 -> m10_31  [key=2, style=dotted];
m10_21 -> m10_23  [color=darkseagreen4, key=1, label=connection, style=dashed];
m10_21 -> m10_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m10_21 -> m10_39  [color=green, key=2, style=dotted];
m10_21 -> m10_40  [color=green, key=2, style=dotted];
m10_21 -> m10_41  [color=green, key=2, style=dotted];
m10_21 -> m10_32  [color=green, key=1, label=fetchedJob, style=dashed];
m10_21 -> m10_33  [color=green, key=1, label=fetchedJob, style=dashed];
m10_21 -> m10_28  [color=green, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_32  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_33  [key=2, style=dotted];
m10_23 -> m10_28  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_23 -> m10_42  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_35  [key=2, style=dotted];
m10_26 -> m10_28  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m10_26 -> m10_32  [key=0, style=solid];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=0, style=solid];
m10_24 -> m10_34  [key=2, style=dotted];
m10_24 -> m10_43  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_37  [key=2, style=dotted];
m10_28 -> m10_42  [key=2, style=dotted];
m10_25 -> m10_30  [key=0, style=solid];
m10_25 -> m10_34  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_36  [key=2, style=dotted];
m10_27 -> m10_44  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_43  [key=2, style=dotted];
m10_30 -> m10_18  [color=blue, key=0, style=bold];
m10_30 -> m10_30  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_45  [key=2, style=dotted];
m10_53 -> m10_21  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m10_53 -> m10_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m12_19 -> m12_21  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_32  [key=2, style=dotted];
m12_21 -> m12_24  [color=darkseagreen4, key=1, label=state, style=dashed];
m12_21 -> m12_26  [color=darkseagreen4, key=1, label=state, style=dashed];
m12_21 -> m12_28  [color=darkseagreen4, key=1, label=state, style=dashed];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_24  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [key=0, style=solid];
m12_24 -> m12_33  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_26 -> m12_34  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=0, style=solid];
m12_28 -> m12_33  [key=2, style=dotted];
m12_23 -> m12_31  [key=0, style=solid];
m12_25 -> m12_31  [key=0, style=solid];
m12_27 -> m12_31  [key=0, style=solid];
m12_29 -> m12_31  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_31 -> m12_19  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m12_0 -> m12_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_9  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m12_0 -> m12_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_2 -> m12_11  [key=0, style=solid];
m12_2 -> m12_12  [key=2, style=dotted];
m12_4 -> m12_11  [key=0, style=solid];
m12_4 -> m12_12  [key=2, style=dotted];
m12_6 -> m12_11  [key=0, style=solid];
m12_6 -> m12_12  [key=2, style=dotted];
m12_11 -> m12_0  [color=blue, key=0, style=bold];
m12_13 -> m12_14  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_18  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_17  [key=0, style=solid];
m12_15 -> m12_19  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_20  [key=2, style=dotted];
m12_17 -> m12_13  [color=blue, key=0, style=bold];
m12_35 -> m12_7  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_8  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_10  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_14  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_15  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_21  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m12_35 -> m12_28  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [color=red, key=0, style=solid];
m13_2 -> m13_5  [key=2, style=dotted];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_4 -> m13_0  [color=blue, key=0, style=bold];
m13_6 -> m13_1  [color=darkseagreen4, key=1, label="HangFire.Server.ServerComponentRunnerOptions", style=dashed];
m13_6 -> m13_2  [color=darkseagreen4, key=1, label="HangFire.Server.ServerComponentRunnerOptions", style=dashed];
m13_6 -> m13_3  [color=red, key=1, label="HangFire.Server.ServerComponentRunnerOptions", style=dashed];
m14_17 -> m14_18  [color=green, key=0, style=solid];
m14_17 -> m14_19  [key=2, style=dotted];
m14_18 -> m14_19  [color=green, key=0, style=solid];
m14_18 -> m14_15  [color=blue, key=0, style=bold];
m14_19 -> m14_17  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_18  [key=0, style=solid];
m14_12 -> m14_20  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_26  [key=2, style=dotted];
m14_20 -> m14_27  [key=2, style=dotted];
m14_20 -> m14_22  [color=darkseagreen4, key=1, label=recreateDatabaseSql, style=dashed];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_28  [key=2, style=dotted];
m14_21 -> m14_29  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_30  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_28  [key=2, style=dotted];
m14_23 -> m14_31  [key=2, style=dotted];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_32  [key=2, style=dotted];
m14_25 -> m14_12  [color=blue, key=0, style=bold];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_11  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_8  [key=0, style=solid];
m14_5 -> m14_9  [color=darkorchid, key=3, label="Field variable HangFire.Redis.FetchedJobsWatcherOptions _options", style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_12  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_10  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_13  [key=2, style=dotted];
m14_9 -> m14_14  [key=2, style=dotted];
m14_10 -> m14_3  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_33 -> m14_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m14_33 -> m14_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m14_33 -> m14_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m14_33 -> m14_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m14_33 -> m14_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m15_24 -> m15_31  [key=0, style=solid];
m15_24 -> m15_25  [color=green, key=0, style=solid];
m15_31 -> m15_32  [key=0, style=solid];
m15_32 -> m15_24  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m15_0 -> m15_4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_3  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m15_4 -> m15_5  [key=0, style=solid];
m15_2 -> m15_5  [key=0, style=solid];
m15_2 -> m15_6  [key=2, style=dotted];
m15_5 -> m15_0  [color=blue, key=0, style=bold];
m15_25 -> m15_23  [color=blue, key=0, style=bold];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_7 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_17  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_19  [key=2, style=dotted];
m15_12 -> m15_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_19  [key=2, style=dotted];
m15_15 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_9 -> m15_10  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_18  [key=2, style=dotted];
m15_10 -> m15_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_10 -> m15_14  [color=darkseagreen4, key=1, label=removedCount, style=dashed];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_14  [key=0, style=solid];
m15_14 -> m15_9  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_20  [key=2, style=dotted];
m15_13 -> m15_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_13 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_16 -> m15_7  [color=blue, key=0, style=bold];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=2, style=dotted];
m15_27 -> m15_30  [key=2, style=dotted];
m15_28 -> m15_26  [color=blue, key=0, style=bold];
m15_23 -> m15_24  [color=green, key=0, style=solid];
m15_23 -> m15_21  [color=blue, key=0, style=bold];
m15_21 -> m15_22  [key=0, style=solid];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_24  [key=2, style=dotted];
m15_22 -> m15_25  [key=2, style=dotted];
m15_33 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_33 -> m15_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_33 -> m15_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_33 -> m15_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_33 -> m15_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_0 -> m16_8  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [color=green, key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_6  [key=0, style=solid];
m16_4 -> m16_13  [key=2, style=dotted];
m16_8 -> m16_9  [color=green, key=0, style=solid];
m16_8 -> m16_17  [key=2, style=dotted];
m16_2 -> m16_10  [key=0, style=solid];
m16_2 -> m16_11  [key=2, style=dotted];
m16_3 -> m16_4  [color=green, key=0, style=solid];
m16_3 -> m16_12  [color=green, key=2, style=dotted];
m16_5 -> m16_10  [key=0, style=solid];
m16_5 -> m16_14  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_15  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_16  [key=2, style=dotted];
m16_7 -> m16_7  [color=darkseagreen4, key=1, label=script, style=dashed];
m16_9 -> m16_10  [color=green, key=0, style=solid];
m16_9 -> m16_12  [color=green, key=2, style=dotted];
m16_10 -> m16_0  [color=blue, key=0, style=bold];
m16_15 -> m16_23  [key=0, style=solid];
m16_15 -> m16_25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m16_15 -> m16_6  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_29  [key=2, style=dotted];
m16_23 -> m16_26  [color=darkseagreen4, key=1, label=stream, style=dashed];
m16_25 -> m16_28  [key=0, style=solid];
m16_25 -> m16_30  [key=2, style=dotted];
m16_25 -> m16_31  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_26  [key=0, style=solid];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_32  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_33  [key=2, style=dotted];
m16_28 -> m16_15  [color=blue, key=0, style=bold];
m16_13 -> m16_18  [key=0, style=solid];
m16_13 -> m16_0  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_21  [key=2, style=dotted];
m16_18 -> m16_22  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_20 -> m16_13  [color=blue, key=0, style=bold];
m17_38 -> m17_64  [key=0, style=solid];
m17_38 -> m17_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_38 -> m17_68  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m17_38 -> m17_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_55  [key=2, style=dotted];
m17_64 -> m17_66  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_64 -> m17_67  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_64 -> m17_68  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_64 -> m17_69  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_56  [key=2, style=dotted];
m17_68 -> m17_69  [key=0, style=solid];
m17_68 -> m17_57  [key=2, style=dotted];
m17_71 -> m17_72  [key=0, style=solid];
m17_71 -> m17_60  [key=2, style=dotted];
m17_71 -> m17_62  [key=2, style=dotted];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_56  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_56  [key=2, style=dotted];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_58  [key=2, style=dotted];
m17_69 -> m17_71  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_72  [key=0, style=solid];
m17_72 -> m17_38  [color=blue, key=0, style=bold];
m17_26 -> m17_27  [key=0, style=solid];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_29  [key=0, style=solid];
m17_28 -> m17_37  [key=0, style=solid];
m17_29 -> m17_30  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_32  [key=0, style=solid];
m17_30 -> m17_24  [key=2, style=dotted];
m17_31 -> m17_37  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_35  [key=0, style=solid];
m17_34 -> m17_37  [key=0, style=solid];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_38  [key=2, style=dotted];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_39  [key=2, style=dotted];
m17_37 -> m17_26  [color=blue, key=0, style=bold];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_4 -> m17_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_4 -> m17_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m17_4 -> m17_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_4 -> m17_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=0, style=solid];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_9  [key=0, style=solid];
m17_7 -> m17_20  [key=2, style=dotted];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=0, style=solid];
m17_9 -> m17_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_9 -> m17_15  [color=red, key=1, label="System.TimeSpan", style=dashed];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_23  [key=2, style=dotted];
m17_6 -> m17_18  [key=0, style=solid];
m17_6 -> m17_19  [key=2, style=dotted];
m17_8 -> m17_18  [key=0, style=solid];
m17_8 -> m17_19  [key=2, style=dotted];
m17_10 -> m17_18  [key=0, style=solid];
m17_10 -> m17_21  [key=2, style=dotted];
m17_10 -> m17_22  [key=2, style=dotted];
m17_15 -> m17_16  [color=red, key=0, style=solid];
m17_15 -> m17_25  [color=red, key=2, style=dotted];
m17_14 -> m17_15  [color=red, key=0, style=solid];
m17_14 -> m17_17  [color=red, key=0, style=solid];
m17_14 -> m17_24  [key=2, style=dotted];
m17_17 -> m17_18  [color=red, key=0, style=solid];
m17_16 -> m17_18  [color=red, key=0, style=solid];
m17_18 -> m17_4  [color=blue, key=0, style=bold];
m17_25 -> m17_40  [key=0, style=solid];
m17_25 -> m17_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_25 -> m17_45  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_25 -> m17_48  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m17_25 -> m17_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_25 -> m17_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_25 -> m17_4  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timeout", style=bold];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_55  [key=2, style=dotted];
m17_40 -> m17_42  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_40 -> m17_43  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_40 -> m17_44  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_40 -> m17_45  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_40 -> m17_46  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_40 -> m17_48  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_40 -> m17_49  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_56  [key=2, style=dotted];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_56  [key=2, style=dotted];
m17_45 -> m17_45  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_45 -> m17_47  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_57  [key=2, style=dotted];
m17_52 -> m17_54  [key=0, style=solid];
m17_52 -> m17_59  [key=2, style=dotted];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_60  [key=2, style=dotted];
m17_53 -> m17_61  [key=2, style=dotted];
m17_53 -> m17_62  [key=2, style=dotted];
m17_53 -> m17_63  [key=2, style=dotted];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_56  [key=2, style=dotted];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_56  [key=2, style=dotted];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_56  [key=2, style=dotted];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_56  [key=2, style=dotted];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_58  [key=2, style=dotted];
m17_49 -> m17_51  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m17_49 -> m17_53  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_47  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_54  [key=0, style=solid];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_53  [key=0, style=solid];
m17_54 -> m17_25  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_73 -> m17_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_15  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_16  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_17  [color=red, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m17_73 -> m17_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m18_0 -> m18_5  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m18_0 -> m18_7  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m18_0 -> m18_9  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m18_0 -> m18_10  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m18_0 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m18_0 -> m18_12  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_2  [key=0, style=solid];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_2 -> m18_13  [key=0, style=solid];
m18_2 -> m18_14  [key=2, style=dotted];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_22  [key=2, style=dotted];
m18_14 -> m18_17  [key=0, style=solid];
m18_14 -> m18_18  [key=2, style=dotted];
m18_7 -> m18_10  [key=0, style=solid];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_9  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_12  [key=2, style=dotted];
m18_11 -> m18_7  [color=blue, key=0, style=bold];
m18_11 -> m18_12  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_15 -> m18_19  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_20  [key=2, style=dotted];
m18_16 -> m18_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m18_16 -> m18_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_21  [key=2, style=dotted];
m18_17 -> m18_12  [color=blue, key=0, style=bold];
m18_19 -> m18_15  [color=blue, key=0, style=bold];
m18_3 -> m18_8  [color=green, key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=0, style=solid];
m18_8 -> m18_9  [color=green, key=0, style=solid];
m18_8 -> m18_7  [color=green, key=2, style=dotted];
m18_8 -> m18_13  [key=0, style=solid];
m18_8 -> m18_14  [key=2, style=dotted];
m18_9 -> m18_3  [color=blue, key=0, style=bold];
m18_9 -> m18_10  [key=0, style=solid];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_40  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m18_12 -> m18_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m18_12 -> m18_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_4 -> m18_13  [key=0, style=solid];
m18_4 -> m18_14  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_6 -> m18_13  [key=0, style=solid];
m18_6 -> m18_14  [key=2, style=dotted];
m18_6 -> m18_4  [color=blue, key=0, style=bold];
m18_13 -> m18_0  [color=blue, key=0, style=bold];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_15  [key=0, style=solid];
m18_21 -> m18_22  [key=0, style=solid];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_24  [key=2, style=dotted];
m18_22 -> m18_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_22 -> m18_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_22 -> m18_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_22 -> m18_31  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m18_22 -> m18_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_23 -> m18_21  [color=blue, key=0, style=bold];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_39  [key=2, style=dotted];
m18_23 -> m18_25  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m18_23 -> m18_37  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_27  [key=0, style=solid];
m18_25 -> m18_41  [key=2, style=dotted];
m18_25 -> m18_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_42  [key=2, style=dotted];
m18_28 -> m18_30  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m18_28 -> m18_31  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_44  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_45  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_41  [key=2, style=dotted];
m18_26 -> m18_38  [key=0, style=solid];
m18_26 -> m18_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_43  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_35  [key=0, style=solid];
m18_32 -> m18_37  [key=0, style=solid];
m18_32 -> m18_46  [key=2, style=dotted];
m18_33 -> m18_34  [key=0, style=solid];
m18_35 -> m18_36  [key=0, style=solid];
m18_34 -> m18_37  [key=0, style=solid];
m18_34 -> m18_47  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_47  [key=2, style=dotted];
m18_38 -> m18_22  [color=blue, key=0, style=bold];
m18_48 -> m18_9  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_10  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_12  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_16  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_18  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_48 -> m18_30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
}
