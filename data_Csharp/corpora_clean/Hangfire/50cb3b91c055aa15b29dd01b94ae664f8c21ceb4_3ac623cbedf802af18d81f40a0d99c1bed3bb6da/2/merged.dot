digraph  {
d1 [label="var result = JobHelper.ToJson(null)", span="14-14", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", color=green, community=0];
d0 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()"];
d2 [label="Assert.Null(result)", span="15-15", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()"];
d4 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)"];
d3 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()"];
d5 [label="Entry Unk.Null", span="", cluster="Unk.Null"];
d7 [label="var result = JobHelper.ToJson(''hello'')", span="21-21", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()"];
d14 [label="Assert.Null(stringResult)", span="31-31", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()"];
d44 [label="Assert.Null(JobHelper.FromNullableStringTimestamp(''''))", span="78-78", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()"];
d45 [label="Assert.Null(JobHelper.FromNullableStringTimestamp(null))", span="79-79", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()"];
d6 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()"];
d8 [label="Assert.Equal(''\''hello\'''', result)", span="22-22", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()"];
d12 [label="var stringResult = JobHelper.FromJson<string>(null)", span="28-28", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()"];
d13 [label="var intResult = JobHelper.FromJson<int>(null)", span="29-29", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()"];
d15 [label="Assert.Equal(0, intResult)", span="32-32", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()"];
d43 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()"];
d47 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)"];
d46 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()"];
d9 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()"];
d10 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
d11 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()"];
d17 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)"];
d16 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()"];
d49 [label="var result = JobHelper.FromNullableStringTimestamp(_wellKnownTimestamp.ToString())", span="85-85", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()"];
d20 [label="Assert.Equal(''hello'', result)", span="39-39", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()"];
d24 [label="Assert.Equal(_wellKnownTimestamp, result)", span="48-48", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()"];
d29 [label="Assert.Equal(_wellKnownDateTime, result)", span="56-56", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()"];
d34 [label="Assert.Equal(_wellKnownTimestamp.ToString(), result)", span="64-64", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()"];
d40 [label="Assert.Equal(_wellKnownDateTime, result)", span="72-72", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()"];
d50 [label="Assert.Equal(_wellKnownDateTime, result)", span="86-86", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()"];
d19 [label="var result = JobHelper.FromJson<string>(''\''hello\'''')", span="38-38", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()"];
d52 [label="HangFire.Core.Tests.Common.JobHelperFacts", span=""];
d48 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()"];
d37 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()"];
d21 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()"];
d23 [label="var result = JobHelper.ToTimestamp(\r\n                _wellKnownDateTime)", span="45-46", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()"];
d25 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()"];
d28 [label="var result = JobHelper.FromTimestamp(_wellKnownTimestamp)", span="54-54", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()"];
d30 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()"];
d33 [label="var result = JobHelper.ToStringTimestamp(_wellKnownDateTime)", span="62-62", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()"];
d35 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()"];
d39 [label="var result = JobHelper.FromStringTimestamp(_wellKnownTimestamp.ToString())", span="70-70", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()"];
d41 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()"];
d51 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()"];
d18 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()"];
d22 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()"];
d26 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)"];
d27 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()"];
d31 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45", cluster="HangFire.Common.JobHelper.FromTimestamp(long)"];
d32 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()"];
d36 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)"];
d38 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()"];
d42 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)"];
m0_148 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="254-254", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_149 [label="key == null", span="256-256", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_150 [label="throw new ArgumentNullException(nameof(key));", span="256-256", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_151 [label="toScore < fromScore", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_153 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout));", span="259-262", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_152 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_154 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="254-254", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobServer.cs"];
m0_99 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="BackgroundJobServer.cs"];
m0_97 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="BackgroundJobServer.cs"];
m0_194 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="314-314", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_195 [label="serverId == null", span="316-316", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_196 [label="throw new ArgumentNullException(nameof(serverId));", span="316-316", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_197 [label="context == null", span="317-317", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_198 [label="throw new ArgumentNullException(nameof(context));", span="317-317", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_199 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="319-324", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_200 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="326-336", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_201 [label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="314-314", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobServer.cs"];
m0_24 [label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="77-77", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m0_25 [label="HangFire.BackgroundJobServer", span="", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_26 [label="throw new ArgumentNullException(nameof(queues));", span="66-66", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_27 [label="var providers = queues\r\n                .Select(queue => _storage.QueueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="68-71", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_29 [label="throw new InvalidOperationException(\r\n                    $''Multiple provider instances registered for queues: {String.Join('', '', queues)}. You should choose only one type of persistent queues per server instance.'');", span="75-76", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_31 [label="return persistentQueue.Dequeue(queues, cancellationToken);", span="80-80", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_28 [label="providers.Length != 1", span="73-73", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_30 [label="var persistentQueue = providers[0].GetJobQueue()", span="79-79", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_32 [label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_21 [label="return AcquireLock($''{_storage.SchemaName}:{resource}'', timeout);", span="61-61", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_214 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobServer.cs"];
m0_215 [label="serverId == null", span="354-354", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobServer.cs"];
m0_216 [label="throw new ArgumentNullException(nameof(serverId));", span="354-354", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobServer.cs"];
m0_217 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="356-362", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobServer.cs"];
m0_218 [label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobServer.cs"];
m0_115 [label="Entry Hangfire.Storage.StateData.StateData()", span="23-23", cluster="Hangfire.Storage.StateData.StateData()", file="BackgroundJobServer.cs"];
m0_202 [label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="BackgroundJobServer.cs"];
m0_178 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="BackgroundJobServer.cs"];
m0_179 [label="key == null", span="300-300", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="BackgroundJobServer.cs"];
m0_180 [label="throw new ArgumentNullException(nameof(key));", span="300-300", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="BackgroundJobServer.cs"];
m0_181 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="302-311", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="BackgroundJobServer.cs"];
m0_182 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="BackgroundJobServer.cs"];
m0_123 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="BackgroundJobServer.cs"];
m0_13 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="BackgroundJobServer.cs"];
m0_71 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="BackgroundJobServer.cs"];
m0_327 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="501-501", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobServer.cs"];
m0_328 [label="key == null", span="503-503", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobServer.cs"];
m0_329 [label="throw new ArgumentNullException(nameof(key));", span="503-503", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobServer.cs"];
m0_331 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="512-514", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobServer.cs"];
m0_330 [label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from [{_storage.SchemaName}].List with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="505-510", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobServer.cs"];
m0_332 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="501-501", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobServer.cs"];
m0_23 [label="Stop()", span="79-79", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m0_345 [label="_dedicatedConnection == null", span="537-537", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_348 [label="!_lockedResources.ContainsKey(resource)", span="545-545", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_349 [label="SqlServerDistributedLock.Acquire(_dedicatedConnection, resource, timeout)", span="549-549", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_351 [label="ReleaseLock(resource, lockId, true)", span="553-553", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_353 [label="_lockedResources.Add(resource, new HashSet<Guid>())", span="557-557", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_354 [label="_lockedResources[resource].Add(lockId)", span="560-560", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_355 [label="return new DisposableLock(this, resource, lockId);", span="561-561", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_346 [label="_dedicatedConnection = _storage.CreateAndOpenConnection()", span="539-539", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_347 [label="var lockId = Guid.NewGuid()", span="543-543", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_350 [label=Exception, span="551-551", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_352 [label="throw;", span="554-554", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_356 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", span="531-531", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_22 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_295 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="459-459", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_296 [label="key == null", span="461-461", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_297 [label="throw new ArgumentNullException(nameof(key));", span="461-461", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_298 [label="name == null", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_299 [label="throw new ArgumentNullException(nameof(name));", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_301 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout));", span="468-469", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_300 [label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].Hash with (readcommittedlock)\r\nwhere [Key] = @key and [Field] = @field''", span="464-466", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_302 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="459-459", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobServer.cs"];
m0_100 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="BackgroundJobServer.cs"];
m0_358 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="BackgroundJobServer.cs"];
m0_127 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="BackgroundJobServer.cs"];
m0_147 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="BackgroundJobServer.cs"];
m0_222 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="365-365", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_223 [label="timeOut.Duration() != timeOut", span="367-367", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_224 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', nameof(timeOut));", span="369-369", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_225 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout));", span="372-375", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_226 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="365-365", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_365 [label="Entry Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", span="609-609", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="BackgroundJobServer.cs"];
m0_382 [label="_connection = connection", span="611-611", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="BackgroundJobServer.cs"];
m0_383 [label="_resource = resource", span="612-612", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="BackgroundJobServer.cs"];
m0_384 [label="_lockId = lockId", span="613-613", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="BackgroundJobServer.cs"];
m0_385 [label="Exit Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", span="609-609", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="BackgroundJobServer.cs"];
m0_5 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="14-14", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="BackgroundJobServer.cs"];
m0_315 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="484-484", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobServer.cs"];
m0_316 [label="key == null", span="486-486", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobServer.cs"];
m0_317 [label="throw new ArgumentNullException(nameof(key));", span="486-486", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobServer.cs"];
m0_319 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="492-498", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobServer.cs"];
m0_318 [label="string query = \r\n$@''select min([ExpireAt]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="488-490", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobServer.cs"];
m0_320 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="484-484", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobServer.cs"];
m0_7 [label="Entry HangFire.BackgroundJobServer.Start()", span="51-51", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_8 [label="_server != null", span="53-53", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_9 [label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="55-55", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_10 [label="_server = new JobServer(MachineName, Queues, WorkersCount, PollInterval, JobActivator)", span="58-58", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", color=green, community=0];
m0_11 [label="Exit HangFire.BackgroundJobServer.Start()", span="51-51", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_274 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="434-434", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobServer.cs"];
m0_275 [label="key == null", span="436-436", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobServer.cs"];
m0_276 [label="throw new ArgumentNullException(nameof(key));", span="436-436", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobServer.cs"];
m0_278 [label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="440-441", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobServer.cs"];
m0_277 [label="string query = $@''select count([Id]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="438-438", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobServer.cs"];
m0_279 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="434-434", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobServer.cs"];
m0_359 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServer.cs"];
m0_360 [label="Entry Unk.Acquire", span="", cluster="Unk.Acquire", file="BackgroundJobServer.cs"];
m0_53 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="BackgroundJobServer.cs"];
m0_0 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="BackgroundJobServer.cs"];
m0_1 [label="storage == null", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="BackgroundJobServer.cs"];
m0_2 [label="throw new ArgumentNullException(nameof(storage));", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="BackgroundJobServer.cs"];
m0_4 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="BackgroundJobServer.cs"];
m0_3 [label="_storage = storage", span="42-42", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="BackgroundJobServer.cs"];
m0_167 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="BackgroundJobServer.cs"];
m0_265 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="419-419", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobServer.cs"];
m0_266 [label="key == null", span="421-421", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobServer.cs"];
m0_267 [label="throw new ArgumentNullException(nameof(key));", span="421-421", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobServer.cs"];
m0_269 [label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0);", span="430-431", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobServer.cs"];
m0_268 [label="string query = \r\n$@''select sum(s.[Value]) from (select sum([Value]) as [Value] from [{_storage.SchemaName}].Counter with (readcommittedlock)\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from [{_storage.SchemaName}].AggregatedCounter with (readcommittedlock)\r\nwhere [Key] = @key) as s''", span="423-428", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobServer.cs"];
m0_270 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="419-419", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobServer.cs"];
m0_35 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="BackgroundJobServer.cs"];
m0_206 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="339-339", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobServer.cs"];
m0_207 [label="serverId == null", span="341-341", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobServer.cs"];
m0_208 [label="throw new ArgumentNullException(nameof(serverId));", span="341-341", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobServer.cs"];
m0_209 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="343-349", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobServer.cs"];
m0_210 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="339-339", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobServer.cs"];
m0_114 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="BackgroundJobServer.cs"];
m0_12 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobServer.cs"];
m0_227 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="BackgroundJobServer.cs"];
m0_39 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="BackgroundJobServer.cs"];
m0_342 [label="Entry lambda expression", span="526-526", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_17 [label="_server = null", span="70-70", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_18 [label="return true;", span="72-72", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_19 [label="return false;", span="74-74", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_40 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_41 [label="_storage.QueueProviders.GetProvider(queue)", span="69-69", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_42 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_56 [label="var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString()", span="101-110", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_57 [label="parameters.Count > 0", span="112-112", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_60 [label=parameters, span="120-120", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_55 [label="Entry lambda expression", span="99-136", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_62 [label="commandBatch.Connection = connection", span="128-128", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_61 [label="commandBatch.Append(insertParameterSql,\r\n                            new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                            new SqlParameter(''@name'', parameter.Key),\r\n                            new SqlParameter(''@value'', (object)parameter.Value ?? DBNull.Value))", span="122-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_66 [label="return jobId;", span="135-135", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_58 [label="string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="114-116", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_59 [label="var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="118-118", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_63 [label="commandBatch.CommandTimeout = _storage.CommandTimeout", span="129-129", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_64 [label="commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="130-130", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_65 [label="commandBatch.ExecuteNonQuery()", span="132-132", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_67 [label="Exit lambda expression", span="99-136", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_85 [label="var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault()", span="148-149", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_84 [label="Entry lambda expression", span="146-176", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_86 [label="jobData == null", span="151-151", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_88 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="154-154", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_89 [label="invocationData.Arguments = jobData.Arguments", span="155-155", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_95 [label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="169-175", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_87 [label="return null;", span="151-151", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_92 [label="job = invocationData.Deserialize()", span="162-162", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_90 [label="Job job = null", span="157-157", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_91 [label="JobLoadException loadException = null", span="158-158", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_93 [label=JobLoadException, span="164-164", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_94 [label="loadException = ex", span="166-166", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_96 [label="Exit lambda expression", span="146-176", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_108 [label="var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault()", span="191-191", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_107 [label="Entry lambda expression", span="189-207", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_109 [label="sqlState == null", span="192-192", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_111 [label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="197-199", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_112 [label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="201-206", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_110 [label="return null;", span="194-194", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_113 [label="Exit lambda expression", span="189-207", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_125 [label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout)", span="217-224", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_124 [label="Entry lambda expression", span="215-225", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_126 [label="Exit lambda expression", span="215-225", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_136 [label="connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout)", span="233-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_135 [label="Entry lambda expression", span="233-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_137 [label="Exit lambda expression", span="233-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_144 [label="var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)", span="245-248", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_143 [label="Entry lambda expression", span="243-251", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_145 [label="return new HashSet<string>(result);", span="250-250", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_146 [label="Exit lambda expression", span="243-251", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_157 [label="connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout)", span="259-262", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_156 [label="Entry lambda expression", span="259-262", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_158 [label="Exit lambda expression", span="259-262", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_170 [label=keyValuePairs, span="281-281", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_171 [label="commandBatch.Append(sql,\r\n                        new SqlParameter(''@key'', key),\r\n                        new SqlParameter(''@field'', keyValuePair.Key),\r\n                        new SqlParameter(''@value'', (object)keyValuePair.Value ?? DBNull.Value))", span="283-286", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_168 [label="Entry lambda expression", span="277-295", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_169 [label="var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="279-279", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_172 [label="commandBatch.Connection = connection", span="289-289", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_173 [label="commandBatch.Transaction = transaction", span="290-290", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_174 [label="commandBatch.CommandTimeout = _storage.CommandTimeout", span="291-291", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_175 [label="commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="292-292", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_176 [label="commandBatch.ExecuteNonQuery()", span="294-294", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_177 [label="Exit lambda expression", span="277-295", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_184 [label="var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="304-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_183 [label="Entry lambda expression", span="302-311", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_185 [label="return result.Count != 0 ? result : null;", span="310-310", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_188 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_191 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_186 [label="Exit lambda expression", span="302-311", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_189 [label="x.Field", span="308-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_190 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_192 [label="x.Value", span="308-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_193 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_204 [label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout)", span="328-335", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_203 [label="Entry lambda expression", span="326-336", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_205 [label="Exit lambda expression", span="326-336", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_212 [label="connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="345-348", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_211 [label="Entry lambda expression", span="343-349", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_213 [label="Exit lambda expression", span="343-349", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_220 [label="connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="358-361", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_219 [label="Entry lambda expression", span="356-362", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_221 [label="Exit lambda expression", span="356-362", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_229 [label="Entry lambda expression", span="372-375", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_230 [label="connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout)", span="372-375", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_231 [label="Exit lambda expression", span="372-375", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_239 [label="connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First()", span="382-385", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_238 [label="Entry lambda expression", span="382-385", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_240 [label="Exit lambda expression", span="382-385", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_249 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="399-401", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_248 [label="Entry lambda expression", span="399-401", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_250 [label="Exit lambda expression", span="399-401", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_259 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="412-412", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_258 [label="Entry lambda expression", span="410-416", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_260 [label="!result.HasValue", span="413-413", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_262 [label="return result.Value - DateTime.UtcNow;", span="415-415", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_261 [label="return TimeSpan.FromSeconds(-1);", span="413-413", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_263 [label="Exit lambda expression", span="410-416", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_272 [label="connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0", span="431-431", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_271 [label="Entry lambda expression", span="430-431", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_273 [label="Exit lambda expression", span="430-431", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_281 [label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="441-441", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_280 [label="Entry lambda expression", span="440-441", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_282 [label="Exit lambda expression", span="440-441", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_290 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="452-452", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_289 [label="Entry lambda expression", span="450-456", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_291 [label="!result.HasValue", span="453-453", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_293 [label="return result.Value - DateTime.UtcNow;", span="455-455", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_292 [label="return TimeSpan.FromSeconds(-1);", span="453-453", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_294 [label="Exit lambda expression", span="450-456", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_304 [label="connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout)", span="468-469", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_303 [label="Entry lambda expression", span="468-469", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_305 [label="Exit lambda expression", span="468-469", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_313 [label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="481-481", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_312 [label="Entry lambda expression", span="480-481", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_314 [label="Exit lambda expression", span="480-481", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_322 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="494-494", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_321 [label="Entry lambda expression", span="492-498", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_323 [label="!result.HasValue", span="495-495", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_325 [label="return result.Value - DateTime.UtcNow;", span="497-497", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_324 [label="return TimeSpan.FromSeconds(-1);", span="495-495", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_326 [label="Exit lambda expression", span="492-498", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_334 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="512-514", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_333 [label="Entry lambda expression", span="512-514", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_335 [label="Exit lambda expression", span="512-514", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_343 [label="connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList()", span="526-526", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_344 [label="Exit lambda expression", span="526-526", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_159 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="265-265", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_160 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_161 [label="throw new ArgumentNullException(nameof(key));", span="267-267", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_162 [label="keyValuePairs == null", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_163 [label="throw new ArgumentNullException(nameof(keyValuePairs));", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_165 [label="_storage.UseTransaction(_dedicatedConnection, (connection, transaction) =>\r\n            {\r\n                var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    commandBatch.Append(sql,\r\n                        new SqlParameter(''@key'', key),\r\n                        new SqlParameter(''@field'', keyValuePair.Key),\r\n                        new SqlParameter(''@value'', (object)keyValuePair.Value ?? DBNull.Value));\r\n                }\r\n\r\n                commandBatch.Connection = connection;\r\n                commandBatch.Transaction = transaction;\r\n                commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                commandBatch.ExecuteNonQuery();\r\n            })", span="277-295", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_164 [label="string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="270-275", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_166 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="265-265", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_14 [label="Entry HangFire.BackgroundJobServer.Stop()", span="65-65", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_15 [label="_server != null", span="67-67", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_251 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BackgroundJobServer.cs"];
m0_283 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="444-444", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobServer.cs"];
m0_284 [label="key == null", span="446-446", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobServer.cs"];
m0_285 [label="throw new ArgumentNullException(nameof(key));", span="446-446", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobServer.cs"];
m0_287 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="450-456", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobServer.cs"];
m0_286 [label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="448-448", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobServer.cs"];
m0_288 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="444-444", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobServer.cs"];
m0_54 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="BackgroundJobServer.cs"];
m0_242 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="388-388", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServer.cs"];
m0_243 [label="key == null", span="390-390", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServer.cs"];
m0_244 [label="throw new ArgumentNullException(nameof(key));", span="390-390", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServer.cs"];
m0_246 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="399-401", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServer.cs"];
m0_245 [label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num\r\n	from [{_storage.SchemaName}].[Set] with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="392-397", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServer.cs"];
m0_247 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="388-388", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServer.cs"];
m0_77 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobServer.cs"];
m0_78 [label="id == null", span="141-141", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobServer.cs"];
m0_79 [label="throw new ArgumentNullException(nameof(id));", span="141-141", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobServer.cs"];
m0_81 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="146-176", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobServer.cs"];
m0_80 [label="string sql =\r\n$@''select InvocationData, StateName, Arguments, CreatedAt from [{_storage.SchemaName}].Job with (readcommittedlock) where Id = @id''", span="143-144", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobServer.cs"];
m0_82 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobServer.cs"];
m0_20 [label="Exit HangFire.BackgroundJobServer.Stop()", span="65-65", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_232 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="BackgroundJobServer.cs"];
m0_378 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="BackgroundJobServer.cs"];
m0_37 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="BackgroundJobServer.cs"];
m0_381 [label="Entry Unk.ReleaseConnection", span="", cluster="Unk.ReleaseConnection", file="BackgroundJobServer.cs"];
m0_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="BackgroundJobServer.cs"];
m0_74 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="BackgroundJobServer.cs"];
m0_36 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobServer.cs"];
m0_83 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="BackgroundJobServer.cs"];
m0_386 [label="Entry Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", span="616-616", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="BackgroundJobServer.cs"];
m0_387 [label="_connection.ReleaseLock(_resource, _lockId, true)", span="618-618", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="BackgroundJobServer.cs"];
m0_388 [label="Exit Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", span="616-616", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="BackgroundJobServer.cs"];
m0_16 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="BackgroundJobServer.cs"];
m0_44 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="83-83", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_45 [label="job == null", span="89-89", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_46 [label="throw new ArgumentNullException(nameof(job));", span="89-89", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_47 [label="parameters == null", span="90-90", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_48 [label="throw new ArgumentNullException(nameof(parameters));", span="90-90", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_50 [label="var invocationData = InvocationData.Serialize(job)", span="97-97", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_51 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString();\r\n\r\n                if (parameters.Count > 0)\r\n                {\r\n                    string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)'';\r\n\r\n                    var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                    foreach (var parameter in parameters)\r\n                    {\r\n                        commandBatch.Append(insertParameterSql,\r\n                            new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                            new SqlParameter(''@name'', parameter.Key),\r\n                            new SqlParameter(''@value'', (object)parameter.Value ?? DBNull.Value));\r\n                    }\r\n\r\n                    commandBatch.Connection = connection;\r\n                    commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                    commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                    commandBatch.ExecuteNonQuery();\r\n                }\r\n\r\n                return jobId;\r\n            });", span="99-136", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_49 [label="string createJobSql =\r\n$@''insert into [{_storage.SchemaName}].Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\noutput inserted.Id\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt)''", span="92-95", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_52 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="83-83", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_68 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="BackgroundJobServer.cs"];
m0_241 [label="Entry Unk.First", span="", cluster="Unk.First", file="BackgroundJobServer.cs"];
m0_228 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="BackgroundJobServer.cs"];
m0_38 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="BackgroundJobServer.cs"];
m0_379 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="BackgroundJobServer.cs"];
m0_138 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="BackgroundJobServer.cs"];
m0_139 [label="key == null", span="241-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="BackgroundJobServer.cs"];
m0_140 [label="throw new ArgumentNullException(nameof(key));", span="241-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="BackgroundJobServer.cs"];
m0_141 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="243-251", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="BackgroundJobServer.cs"];
m0_142 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="BackgroundJobServer.cs"];
m0_364 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="BackgroundJobServer.cs"];
m0_363 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobServer.cs"];
m0_357 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobServer.cs"];
m0_43 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="BackgroundJobServer.cs"];
m0_187 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="BackgroundJobServer.cs"];
m0_336 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="517-517", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobServer.cs"];
m0_337 [label="key == null", span="519-519", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobServer.cs"];
m0_338 [label="throw new ArgumentNullException(nameof(key));", span="519-519", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobServer.cs"];
m0_340 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList());", span="526-526", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobServer.cs"];
m0_339 [label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="521-524", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobServer.cs"];
m0_341 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="517-517", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobServer.cs"];
m0_70 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobServer.cs"];
m0_73 [label="Entry SqlParameter.cstr", span="", cluster="SqlParameter.cstr", file="BackgroundJobServer.cs"];
m0_116 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="210-210", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_117 [label="id == null", span="212-212", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_118 [label="throw new ArgumentNullException(nameof(id));", span="212-212", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_119 [label="name == null", span="213-213", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_120 [label="throw new ArgumentNullException(nameof(name));", span="213-213", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_121 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="215-225", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_122 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="210-210", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs"];
m0_155 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BackgroundJobServer.cs"];
m0_264 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServer.cs"];
m0_380 [label="Entry Unk.Release", span="", cluster="Unk.Release", file="BackgroundJobServer.cs"];
m0_72 [label="Entry Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29", cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="BackgroundJobServer.cs"];
m0_75 [label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51", cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="BackgroundJobServer.cs"];
m0_252 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="404-404", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobServer.cs"];
m0_253 [label="key == null", span="406-406", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobServer.cs"];
m0_254 [label="throw new ArgumentNullException(nameof(key));", span="406-406", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobServer.cs"];
m0_256 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="410-416", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobServer.cs"];
m0_255 [label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key''", span="408-408", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobServer.cs"];
m0_257 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="404-404", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobServer.cs"];
m0_128 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="228-228", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_129 [label="id == null", span="230-230", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_130 [label="throw new ArgumentNullException(nameof(id));", span="230-230", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_131 [label="name == null", span="231-231", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_132 [label="throw new ArgumentNullException(nameof(name));", span="231-231", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_133 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout));", span="233-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_134 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="228-228", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs"];
m0_361 [label="Entry Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", span="564-564", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_366 [label="_lockedResources.ContainsKey(resource)", span="570-570", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_367 [label="_lockedResources[resource].Contains(lockId)", span="572-572", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_368 [label="_lockedResources[resource].Remove(lockId) &&\r\n                            _lockedResources[resource].Count == 0 &&\r\n                            _lockedResources.Remove(resource) &&\r\n                            _dedicatedConnection.State == ConnectionState.Open", span="574-577", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_369 [label="SqlServerDistributedLock.Release(_dedicatedConnection, resource)", span="583-583", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_374 [label="!onDisposing", span="596-596", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_370 [label="_lockedResources.Count == 0", span="588-588", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_371 [label="_storage.ReleaseConnection(_dedicatedConnection)", span="590-590", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_373 [label=Exception, span="594-594", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_372 [label="_dedicatedConnection = null", span="591-591", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_375 [label="throw;", span="598-598", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_376 [label="Exit Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", span="564-564", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="BackgroundJobServer.cs"];
m0_76 [label="Entry Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75", cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="BackgroundJobServer.cs"];
m0_69 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_101 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="179-179", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobServer.cs"];
m0_102 [label="jobId == null", span="181-181", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobServer.cs"];
m0_103 [label="throw new ArgumentNullException(nameof(jobId));", span="181-181", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobServer.cs"];
m0_105 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="189-207", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobServer.cs"];
m0_104 [label="string sql = \r\n$@''select s.Name, s.Reason, s.Data\r\nfrom [{_storage.SchemaName}].State s with (readcommittedlock)\r\ninner join [{_storage.SchemaName}].Job j with (readcommittedlock) on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="183-187", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobServer.cs"];
m0_106 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="179-179", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobServer.cs"];
m0_34 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="BackgroundJobServer.cs"];
m0_33 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServer.cs"];
m0_233 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="378-378", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="BackgroundJobServer.cs"];
m0_234 [label="key == null", span="380-380", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="BackgroundJobServer.cs"];
m0_235 [label="throw new ArgumentNullException(nameof(key));", span="380-380", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="BackgroundJobServer.cs"];
m0_236 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First());", span="382-385", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="BackgroundJobServer.cs"];
m0_237 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="378-378", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="BackgroundJobServer.cs"];
m0_306 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="472-472", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobServer.cs"];
m0_307 [label="key == null", span="474-474", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobServer.cs"];
m0_308 [label="throw new ArgumentNullException(nameof(key));", span="474-474", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobServer.cs"];
m0_310 [label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="480-481", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobServer.cs"];
m0_309 [label="string query = \r\n$@''select count([Id]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="476-478", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobServer.cs"];
m0_311 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="472-472", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobServer.cs"];
m0_98 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="BackgroundJobServer.cs"];
m0_377 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BackgroundJobServer.cs"];
m0_362 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="BackgroundJobServer.cs"];
m0_389 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobServer.cs"];
m0_390 [label="System.DateTime", span="", file="BackgroundJobServer.cs"];
m0_391 [label="System.TimeSpan", span="", file="BackgroundJobServer.cs"];
m0_392 [label=createJobSql, span="", file="BackgroundJobServer.cs"];
m0_393 [label=invocationData, span="", file="BackgroundJobServer.cs"];
m0_394 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="BackgroundJobServer.cs"];
m0_395 [label=string, span="", file="BackgroundJobServer.cs"];
m0_396 [label=sql, span="", file="BackgroundJobServer.cs"];
m0_397 [label=string, span="", file="BackgroundJobServer.cs"];
m0_398 [label=sql, span="", file="BackgroundJobServer.cs"];
m0_399 [label=string, span="", file="BackgroundJobServer.cs"];
m0_400 [label=string, span="", file="BackgroundJobServer.cs"];
m0_401 [label=string, span="", file="BackgroundJobServer.cs"];
m0_402 [label=string, span="", file="BackgroundJobServer.cs"];
m0_403 [label=string, span="", file="BackgroundJobServer.cs"];
m0_404 [label=string, span="", file="BackgroundJobServer.cs"];
m0_405 [label=string, span="", file="BackgroundJobServer.cs"];
m0_406 [label=double, span="", file="BackgroundJobServer.cs"];
m0_407 [label=double, span="", file="BackgroundJobServer.cs"];
m0_408 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="BackgroundJobServer.cs"];
m0_409 [label=string, span="", file="BackgroundJobServer.cs"];
m0_410 [label=sql, span="", file="BackgroundJobServer.cs"];
m0_411 [label=string, span="", file="BackgroundJobServer.cs"];
m0_412 [label=string, span="", file="BackgroundJobServer.cs"];
m0_413 [label=data, span="", file="BackgroundJobServer.cs"];
m0_414 [label=string, span="", file="BackgroundJobServer.cs"];
m0_415 [label=string, span="", file="BackgroundJobServer.cs"];
m0_416 [label="System.TimeSpan", span="", file="BackgroundJobServer.cs"];
m0_417 [label=string, span="", file="BackgroundJobServer.cs"];
m0_418 [label=string, span="", file="BackgroundJobServer.cs"];
m0_419 [label=int, span="", file="BackgroundJobServer.cs"];
m0_420 [label=int, span="", file="BackgroundJobServer.cs"];
m0_421 [label=query, span="", file="BackgroundJobServer.cs"];
m0_422 [label=string, span="", file="BackgroundJobServer.cs"];
m0_423 [label=query, span="", file="BackgroundJobServer.cs"];
m0_424 [label=string, span="", file="BackgroundJobServer.cs"];
m0_425 [label=query, span="", file="BackgroundJobServer.cs"];
m0_426 [label=string, span="", file="BackgroundJobServer.cs"];
m0_427 [label=query, span="", file="BackgroundJobServer.cs"];
m0_428 [label=string, span="", file="BackgroundJobServer.cs"];
m0_429 [label=query, span="", file="BackgroundJobServer.cs"];
m0_430 [label=string, span="", file="BackgroundJobServer.cs"];
m0_431 [label=string, span="", file="BackgroundJobServer.cs"];
m0_432 [label=query, span="", file="BackgroundJobServer.cs"];
m0_433 [label=string, span="", file="BackgroundJobServer.cs"];
m0_434 [label=query, span="", file="BackgroundJobServer.cs"];
m0_435 [label=string, span="", file="BackgroundJobServer.cs"];
m0_436 [label=query, span="", file="BackgroundJobServer.cs"];
m0_437 [label=string, span="", file="BackgroundJobServer.cs"];
m0_438 [label=int, span="", file="BackgroundJobServer.cs"];
m0_439 [label=int, span="", file="BackgroundJobServer.cs"];
m0_440 [label=query, span="", file="BackgroundJobServer.cs"];
m0_441 [label=string, span="", file="BackgroundJobServer.cs"];
m0_442 [label=query, span="", file="BackgroundJobServer.cs"];
m0_443 [label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", span="", file="BackgroundJobServer.cs"];
m3_7 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17", cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="HangFireConfig.cs"];
m3_0 [label="Entry MvcSample.HangFireConfig.Start()", span="16-16", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m3_1 [label="RedisFactory.Db = 3", span="20-20", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m3_2 [label="_server = new AspNetBackgroundJobServer(''default'')\r\n            {\r\n                MachineName = Environment.MachineName,\r\n                WorkersCount = Environment.ProcessorCount * 2\r\n            }", span="22-26", cluster="MvcSample.HangFireConfig.Start()", color=green, community=0, file="HangFireConfig.cs"];
m3_3 [label="GlobalJobFilters.Filters.Add(new PreserveCultureFilter())", span="28-28", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m3_4 [label="Exit MvcSample.HangFireConfig.Start()", span="16-16", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m3_8 [label="Entry MvcSample.HangFireConfig.Stop()", span="33-33", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m3_9 [label="_server.Stop()", span="35-35", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m3_10 [label="Exit MvcSample.HangFireConfig.Stop()", span="33-33", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m3_6 [label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8", cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="HangFireConfig.cs"];
m3_5 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="10-10", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="HangFireConfig.cs"];
m3_11 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="29-29", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="HangFireConfig.cs"];
m5_0 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobFetcher.cs"];
m5_1 [label="exception == null", span="77-77", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobFetcher.cs"];
m5_4 [label="Exception = exception", span="80-80", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="JobFetcher.cs"];
m5_2 [label="throw new ArgumentNullException(''exception'');", span="77-77", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobFetcher.cs"];
m5_3 [label="FailedAt = DateTime.UtcNow", span="79-79", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="JobFetcher.cs"];
m5_5 [label="Exit Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobFetcher.cs"];
m5_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFetcher.cs"];
m5_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobFetcher.cs"];
m5_11 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="JobFetcher.cs"];
m5_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JobFetcher.cs"];
m5_7 [label="Entry Hangfire.States.FailedState.SerializeData()", span="159-159", cluster="Hangfire.States.FailedState.SerializeData()", file="JobFetcher.cs"];
m5_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="161-167", cluster="Hangfire.States.FailedState.SerializeData()", file="JobFetcher.cs"];
m5_9 [label="Exit Hangfire.States.FailedState.SerializeData()", span="159-159", cluster="Hangfire.States.FailedState.SerializeData()", file="JobFetcher.cs"];
m5_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="JobFetcher.cs"];
m5_14 [label="Hangfire.States.FailedState", span="", file="JobFetcher.cs"];
m7_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobFetcherSteps.cs"];
m7_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="JobFetcherSteps.cs"];
m7_5 [label="Entry HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="33-33", cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobFetcherSteps.cs"];
m7_6 [label="transaction.RemoveFromSet(''failed'', context.JobId)", span="35-35", cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobFetcherSteps.cs"];
m7_7 [label="Exit HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="33-33", cluster="HangFire.Redis.FailedStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobFetcherSteps.cs"];
m7_0 [label="Entry HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobFetcherSteps.cs"];
m7_1 [label="transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="27-30", cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobFetcherSteps.cs"];
m7_2 [label="Exit HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="HangFire.Redis.FailedStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobFetcherSteps.cs"];
m8_25 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="JobManager.cs"];
m8_6 [label="Exit HangFire.JobStorage.GetComponents()", span="57-57", cluster="HangFire.JobStorage.GetComponents()", file="JobManager.cs"];
m8_27 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="JobManager.cs"];
m8_50 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobManager.cs"];
m8_24 [label="Entry HangFire.Server.WorkerPool.Dispose()", span="60-60", cluster="HangFire.Server.WorkerPool.Dispose()", file="JobManager.cs"];
m8_12 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobManager.cs"];
m8_4 [label="Exit HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", span="24-24", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="JobManager.cs"];
m8_5 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", color=red, community=0, file="JobManager.cs"];
m8_43 [label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext)", span="19-19", cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext)", file="JobManager.cs"];
m8_8 [label="_stopSent = true", span="38-38", cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs"];
m8_9 [label="_cts.Cancel()", span="40-40", cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs"];
m8_10 [label="_pool.SendStop()", span="41-41", cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs"];
m8_28 [label="Entry HangFire.Server.JobManager.Work()", span="63-63", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_29 [label="_pool = new WorkerPool(_context)", span="67-67", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_30 [label="_fetcher = new JobFetcher(_redis, _context.Queues)", span="68-68", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_31 [label=true, span="70-70", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_38 [label="worker.Process(jobId)", span="85-85", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_32 [label="var worker = _pool.TakeFree(_cts.Token)", span="72-72", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_39 [label=OperationCanceledException, span="88-88", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_40 [label=Exception, span="92-92", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_33 [label="JobPayload jobId", span="74-74", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_37 [label="jobId == null", span="83-83", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_34 [label="jobId = _fetcher.DequeueJob()", span="78-78", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_35 [label="jobId == null", span="79-79", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_36 [label="_cts.Token.ThrowIfCancellationRequested()", span="81-81", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_41 [label="_logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs from the queue '{0}' will not be processed by this server.'', \r\n                        _context.Queues.First()),\r\n                    ex)", span="94-98", cluster="HangFire.Server.JobManager.Work()", color=green, community=0, file="JobManager.cs"];
m8_42 [label="Exit HangFire.Server.JobManager.Work()", span="63-63", cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs"];
m8_47 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobManager.cs"];
m8_2 [label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", span="28-32", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="JobManager.cs", color=green, community=0];
m8_3 [label="_managerThread.Start()", span="33-33", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="JobManager.cs", color=green, community=0];
m8_26 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobManager.cs"];
m8_51 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobManager.cs"];
m8_44 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="17-17", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobManager.cs"];
m8_49 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JobManager.cs"];
m8_7 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobManager.cs"];
m8_11 [label="Exit HangFire.Server.JobManager.SendStop()", span="36-36", cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs"];
m8_46 [label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobManager.cs"];
m8_0 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="53-53", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobManager.cs"];
m8_1 [label="Exit HangFire.JobStorage.GetMonitoringApi()", span="53-53", cluster="HangFire.JobStorage.GetMonitoringApi()", color=green, community=0, file="JobManager.cs"];
m8_14 [label="Entry HangFire.Server.JobManager.Dispose()", span="44-44", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_18 [label="_pool.Dispose()", span="53-53", cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs"];
m8_17 [label="_pool != null", span="51-51", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_19 [label="_pool = null", span="54-54", cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs"];
m8_20 [label="_managerThread.Join()", span="57-57", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_15 [label="!_stopSent", span="46-46", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_16 [label="SendStop()", span="48-48", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_21 [label="_redis.Dispose()", span="59-59", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_22 [label="_cts.Dispose()", span="60-60", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_23 [label="Exit HangFire.Server.JobManager.Dispose()", span="44-44", cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs"];
m8_45 [label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="35-35", cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobManager.cs"];
m8_13 [label="Entry HangFire.Server.WorkerPool.SendStop()", span="49-49", cluster="HangFire.Server.WorkerPool.SendStop()", file="JobManager.cs"];
m8_48 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="69-69", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobManager.cs"];
m8_52 [label="HangFire.Server.JobManager", span="", file="JobManager.cs"];
m9_12 [label="throw new ArgumentNullException(nameof(queues));", span="52-52", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_19 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JobServer.cs"];
m9_27 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="JobServer.cs"];
m9_44 [label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", span="20-20", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="JobServer.cs"];
m9_45 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JobServer.cs"];
m9_46 [label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan)", file="JobServer.cs"];
m9_47 [label="_stopped.WaitOne()", span="93-93", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_48 [label="fetchedJob = connection\r\n                        .Query<FetchedJob>(\r\n                            fetchJobSqlTemplate,\r\n                            new { queues = queues, timeout = _options.SlidingInvisibilityTimeout.Value.Negate().TotalSeconds })\r\n                        .SingleOrDefault()", span="103-107", cluster="lambda expression", file="JobServer.cs"];
m9_49 [label="RemoveServer()", span="96-96", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_50 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="JobServer.cs"];
m9_51 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobServer.cs"];
m9_52 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="JobServer.cs"];
m9_26 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="JobServer.cs"];
m9_66 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobServer.cs"];
m9_79 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="JobServer.cs"];
m9_16 [label="return DequeueUsingSlidingInvisibilityTimeout(queues, cancellationToken);", span="57-57", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_21 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingTransaction(string[], System.Threading.CancellationToken)", span="124-124", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingTransaction(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_22 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", span="66-66", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="JobServer.cs"];
m9_23 [label="string enqueueJobSql =\r\n$@''insert into [{_storage.SchemaName}].JobQueue (JobId, Queue) values (@jobId, @queue)''", span="69-70", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="JobServer.cs", color=green, community=0];
m9_24 [label="connection.Execute(\r\n                enqueueJobSql, \r\n                new { jobId = long.Parse(jobId), queue = queue }\r\n#if !NETFULL\r\n                , transaction\r\n#endif\r\n                , commandTimeout: _storage.CommandTimeout)", span="72-78", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="JobServer.cs"];
m9_25 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", span="66-66", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(DbConnection, DbTransaction, string, string)", file="JobServer.cs"];
m9_55 [label="Entry HangFire.Server.JobServer.RemoveServer()", span="131-131", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_57 [label="var transaction = _redis.CreateTransaction()", span="106-106", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_59 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="111-117", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", color=red, community=0];
m9_61 [label="var queueName = queue", span="121-121", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", color=red, community=0];
m9_62 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName))", span="122-124", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", color=red, community=0];
m9_54 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="JobServer.cs"];
m9_64 [label="Exit HangFire.Server.JobServer.AnnounceServer()", span="104-104", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_56 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobServer.cs"];
m9_58 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="108-109", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_60 [label="_context.Queues", span="119-119", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", color=red, community=0];
m9_63 [label="transaction.Commit()", span="127-127", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_53 [label="Entry HangFire.Server.JobServer.AnnounceServer()", span="104-104", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_65 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="JobServer.cs"];
m9_17 [label="return DequeueUsingTransaction(queues, cancellationToken);", span="60-60", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_71 [label=fetchJobSqlTemplate, span="", cluster="Unk.AddItemToSet", file="JobServer.cs"];
m9_75 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobServer.cs"];
m9_78 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs"];
m9_95 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="JobServer.cs"];
m9_0 [label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="25-25", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_5 [label="pollInterval != pollInterval.Duration()", span="42-42", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_6 [label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="44-44", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_3 [label="concurrency <= 0", span="37-37", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", color=red, community=0];
m9_1 [label="queues == null", span="32-32", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", color=red, community=0];
m9_2 [label="throw new ArgumentNullException(''queues'');", span="34-34", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", color=red, community=0];
m9_4 [label="throw new ArgumentOutOfRangeException(''concurrency'', ''Concurrency value can not be negative or zero.'');", span="39-39", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", color=red, community=0];
m9_7 [label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="47-47", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_13 [label="queues.Length == 0", span="53-53", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_15 [label="_options.SlidingInvisibilityTimeout.HasValue", span="55-55", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_34 [label="cancellationToken.ThrowIfCancellationRequested()", span="99-99", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_43 [label="Entry HangFire.Server.JobManager.Dispose()", span="44-44", cluster="HangFire.Server.JobManager.Dispose()", file="JobServer.cs"];
m9_8 [label="_context = new ServerContext(\r\n                serverName,\r\n                queues.ToList(),\r\n                concurrency,\r\n                pollInterval,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="49-55", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=red, community=0, file="JobServer.cs"];
m9_9 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JobServer.cs"];
m9_10 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="50-50", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_11 [label="queues == null", span="52-52", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_35 [label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    fetchedJob = connection\r\n                        .Query<FetchedJob>(\r\n                            fetchJobSqlTemplate,\r\n                            new { queues = queues, timeout = _options.SlidingInvisibilityTimeout.Value.Negate().TotalSeconds })\r\n                        .SingleOrDefault();\r\n                })", span="101-108", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_37 [label="return new SqlServerTimeoutJob(\r\n                        _storage,\r\n                        fetchedJob.Id,\r\n                        fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                        fetchedJob.Queue);", span="112-116", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs", color=green, community=0];
m9_38 [label="WaitHandle.WaitAny(new[] { cancellationToken.WaitHandle, NewItemInQueueEvent }, _options.QueuePollInterval)", span="119-119", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs", color=green, community=0];
m9_39 [label="cancellationToken.ThrowIfCancellationRequested()", span="120-120", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_40 [label=true, span="121-121", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_41 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", span="81-81", cluster="Hangfire.SqlServer.SqlServerJobQueue.DequeueUsingSlidingInvisibilityTimeout(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_42 [label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23", cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobServer.cs"];
m9_76 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServer.cs"];
m9_20 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobServer.cs"];
m9_36 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="JobServer.cs"];
m9_33 [label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", span="24-24", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="JobServer.cs"];
m9_29 [label="_manager = new JobManager(_context)", span="73-73", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", color=red, community=0];
m9_31 [label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="75-75", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_32 [label="Exit HangFire.Server.JobServer.StartServer()", span="71-71", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_28 [label="Entry HangFire.Server.JobServer.StartServer()", span="71-71", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_30 [label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_context.PollInterval))", span="74-74", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", color=red, community=0];
m9_91 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="JobServer.cs"];
m9_18 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="50-50", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_14 [label="throw new ArgumentException(''Queue array must be non-empty.'', nameof(queues));", span="53-53", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobServer.cs"];
m9_93 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="139-141", cluster="lambda expression", file="JobServer.cs"];
m9_68 [label="Entry SqlServerTransactionJob.cstr", span="", cluster="SqlServerTransactionJob.cstr", file="JobServer.cs"];
m9_72 [label="Entry lambda expression", span="111-117", cluster="lambda expression", file="JobServer.cs"];
m9_81 [label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName)", span="122-124", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m9_80 [label="Entry lambda expression", span="122-124", cluster="lambda expression", file="JobServer.cs"];
m9_69 [label="Hangfire.SqlServer.SqlServerJobQueue", span="", cluster="lambda expression", file="JobServer.cs"];
m9_70 [label="string[]", span="", cluster="lambda expression", file="JobServer.cs"];
m9_73 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="111-117", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m9_74 [label="Exit lambda expression", span="111-117", cluster="lambda expression", file="JobServer.cs"];
m9_82 [label="Exit lambda expression", span="122-124", cluster="lambda expression", file="JobServer.cs"];
m9_88 [label="Entry lambda expression", span="135-137", cluster="lambda expression", file="JobServer.cs"];
m9_92 [label="Entry lambda expression", span="139-141", cluster="lambda expression", file="JobServer.cs"];
m9_89 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="135-137", cluster="lambda expression", file="JobServer.cs"];
m9_90 [label="Exit lambda expression", span="135-137", cluster="lambda expression", file="JobServer.cs"];
m9_94 [label="Exit lambda expression", span="139-141", cluster="lambda expression", file="JobServer.cs"];
m9_67 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobServer.cs"];
m9_85 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="139-141", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_83 [label="var transaction = _redis.CreateTransaction()", span="133-133", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_84 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="135-137", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_86 [label="transaction.Commit()", span="143-143", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_87 [label="Exit HangFire.Server.JobServer.RemoveServer()", span="131-131", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_96 [label="HangFire.Server.JobServer", span="", file="JobServer.cs"];
m9_97 [label=queueName, span="", file="JobServer.cs"];
m10_132 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_134 [label="throw new ArgumentNullException(nameof(key));", span="241-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_137 [label="return _storage.UseConnection(connection => connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout));", span="244-247", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_133 [label="key == null", span="241-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_135 [label="toScore < fromScore", span="242-242", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_136 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="242-242", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_138 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobState.cs"];
m10_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobState.cs"];
m10_262 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="420-420", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobState.cs"];
m10_264 [label="throw new ArgumentNullException(nameof(key));", span="422-422", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobState.cs"];
m10_265 [label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="424-424", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobState.cs"];
m10_266 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="426-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobState.cs"];
m10_263 [label="key == null", span="422-422", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobState.cs"];
m10_267 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="420-420", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobState.cs"];
m10_84 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobState.cs"];
m10_82 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="JobState.cs"];
m10_173 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="291-291", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_175 [label="throw new ArgumentNullException(nameof(serverId));", span="293-293", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_177 [label="throw new ArgumentNullException(nameof(context));", span="294-294", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_179 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="303-313", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_174 [label="serverId == null", span="293-293", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_176 [label="context == null", span="294-294", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_178 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="296-301", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_180 [label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="291-291", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobState.cs"];
m10_15 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="51-51", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_17 [label="throw new ArgumentNullException(nameof(queues));", span="53-53", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_18 [label="var providers = queues\r\n                .Select(queue => _storage.QueueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="55-58", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_16 [label="queues == null || queues.Length == 0", span="53-53", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_19 [label="providers.Length != 1", span="60-60", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_21 [label="var persistentQueue = providers[0].GetJobQueue()", span="66-66", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_20 [label="throw new InvalidOperationException(\r\n                    $''Multiple provider instances registered for queues: {String.Join('', '', queues)}. You should choose only one type of persistent queues per server instance.'');", span="62-63", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_22 [label="return persistentQueue.Dequeue(queues, cancellationToken);", span="67-67", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_23 [label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="51-51", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobState.cs"];
m10_161 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="JobState.cs"];
m10_34 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="JobState.cs"];
m10_294 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="459-459", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobState.cs"];
m10_296 [label="throw new ArgumentNullException(nameof(key));", span="461-461", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobState.cs"];
m10_297 [label="string query = \r\n$@''select min([ExpireAt]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="463-465", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobState.cs"];
m10_298 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="467-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobState.cs"];
m10_295 [label="key == null", span="461-461", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobState.cs"];
m10_299 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="459-459", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobState.cs"];
m10_193 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="329-329", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobState.cs"];
m10_195 [label="throw new ArgumentNullException(nameof(serverId));", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobState.cs"];
m10_196 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="333-339", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobState.cs"];
m10_194 [label="serverId == null", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobState.cs"];
m10_197 [label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="329-329", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobState.cs"];
m10_221 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="365-365", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobState.cs"];
m10_223 [label="throw new ArgumentNullException(nameof(key));", span="367-367", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobState.cs"];
m10_224 [label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num\r\n	from [{_storage.SchemaName}].[Set] with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="369-374", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobState.cs"];
m10_225 [label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="376-378", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobState.cs"];
m10_222 [label="key == null", span="367-367", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobState.cs"];
m10_226 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="365-365", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobState.cs"];
m10_166 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JobState.cs"];
m10_315 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="492-492", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobState.cs"];
m10_317 [label="throw new ArgumentNullException(nameof(key));", span="494-494", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobState.cs"];
m10_318 [label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="496-499", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobState.cs"];
m10_319 [label="return _storage.UseConnection(connection => connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList());", span="501-501", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobState.cs"];
m10_316 [label="key == null", span="494-494", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobState.cs"];
m10_320 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="492-492", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobState.cs"];
m10_253 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="411-411", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobState.cs"];
m10_255 [label="throw new ArgumentNullException(nameof(key));", span="413-413", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobState.cs"];
m10_256 [label="string query = $@''select count([Id]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="415-415", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobState.cs"];
m10_257 [label="return _storage.UseConnection(connection => connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="417-417", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobState.cs"];
m10_254 [label="key == null", span="413-413", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobState.cs"];
m10_258 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="411-411", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobState.cs"];
m10_100 [label="Entry Hangfire.Storage.StateData.StateData()", span="23-23", cluster="Hangfire.Storage.StateData.StateData()", file="JobState.cs"];
m10_181 [label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="JobState.cs"];
m10_63 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="124-124", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobState.cs"];
m10_65 [label="throw new ArgumentNullException(nameof(id));", span="126-126", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobState.cs"];
m10_66 [label="string sql =\r\n$@''select InvocationData, StateName, Arguments, CreatedAt from [{_storage.SchemaName}].Job with (readcommittedlock) where Id = @id''", span="128-129", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobState.cs"];
m10_67 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="131-161", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobState.cs"];
m10_64 [label="id == null", span="126-126", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobState.cs"];
m10_68 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="124-124", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobState.cs"];
m10_156 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="275-275", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobState.cs"];
m10_158 [label="throw new ArgumentNullException(nameof(key));", span="277-277", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobState.cs"];
m10_159 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="279-288", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobState.cs"];
m10_157 [label="key == null", span="277-277", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobState.cs"];
m10_160 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="275-275", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobState.cs"];
m10_11 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="46-46", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobState.cs"];
m10_12 [label="return new SqlServerDistributedLock(_storage, $''{_storage.SchemaName}:{resource}'', timeout);", span="48-48", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobState.cs"];
m10_13 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="46-46", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobState.cs"];
m10_59 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobState.cs"];
m10_83 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="JobState.cs"];
m10_151 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", span="194-194", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", file="JobState.cs"];
m10_101 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_103 [label="throw new ArgumentNullException(nameof(id));", span="197-197", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_105 [label="throw new ArgumentNullException(nameof(name));", span="198-198", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_106 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="200-210", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_102 [label="id == null", span="197-197", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_104 [label="name == null", span="198-198", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_107 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobState.cs"];
m10_211 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="JobState.cs"];
m10_139 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JobState.cs"];
m10_28 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JobState.cs"];
m10_243 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobState.cs"];
m10_44 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobState.cs"];
m10_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JobState.cs"];
m10_231 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="381-381", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobState.cs"];
m10_233 [label="throw new ArgumentNullException(nameof(key));", span="383-383", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobState.cs"];
m10_234 [label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key''", span="385-385", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobState.cs"];
m10_235 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="387-393", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobState.cs"];
m10_232 [label="key == null", span="383-383", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobState.cs"];
m10_236 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="381-381", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobState.cs"];
m10_244 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="396-396", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobState.cs"];
m10_246 [label="throw new ArgumentNullException(nameof(key));", span="398-398", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobState.cs"];
m10_247 [label="string query = \r\n$@''select sum(s.[Value]) from (select sum([Value]) as [Value] from [{_storage.SchemaName}].Counter with (readcommittedlock)\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from [{_storage.SchemaName}].AggregatedCounter with (readcommittedlock)\r\nwhere [Key] = @key) as s''", span="400-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobState.cs"];
m10_248 [label="return _storage.UseConnection(connection => \r\n                connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0);", span="407-408", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobState.cs"];
m10_245 [label="key == null", span="398-398", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobState.cs"];
m10_249 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="396-396", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobState.cs"];
m10_26 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JobState.cs"];
m10_61 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JobState.cs"];
m10_60 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JobState.cs"];
m10_185 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="316-316", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobState.cs"];
m10_187 [label="throw new ArgumentNullException(nameof(serverId));", span="318-318", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobState.cs"];
m10_188 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="320-326", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobState.cs"];
m10_186 [label="serverId == null", span="318-318", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobState.cs"];
m10_189 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="316-316", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobState.cs"];
m10_112 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="213-213", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_114 [label="throw new ArgumentNullException(nameof(id));", span="215-215", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_116 [label="throw new ArgumentNullException(nameof(name));", span="216-216", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_117 [label="return _storage.UseConnection(connection => connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout));", span="218-221", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_113 [label="id == null", span="215-215", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_115 [label="name == null", span="216-216", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_118 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="213-213", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobState.cs"];
m10_99 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="JobState.cs"];
m10_58 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="JobState.cs"];
m10_14 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="60-60", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobState.cs"];
m10_27 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobState.cs"];
m10_86 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="164-164", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobState.cs"];
m10_88 [label="throw new ArgumentNullException(nameof(jobId));", span="166-166", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobState.cs"];
m10_89 [label="string sql = \r\n$@''select s.Name, s.Reason, s.Data\r\nfrom [{_storage.SchemaName}].State s with (readcommittedlock)\r\ninner join [{_storage.SchemaName}].Job j with (readcommittedlock) on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="168-172", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobState.cs"];
m10_90 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="174-192", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobState.cs"];
m10_87 [label="jobId == null", span="166-166", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobState.cs"];
m10_91 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="164-164", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobState.cs"];
m10_306 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="476-476", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobState.cs"];
m10_308 [label="throw new ArgumentNullException(nameof(key));", span="478-478", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobState.cs"];
m10_309 [label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from [{_storage.SchemaName}].List with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="480-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobState.cs"];
m10_310 [label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="487-489", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobState.cs"];
m10_307 [label="key == null", span="478-478", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobState.cs"];
m10_311 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="476-476", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobState.cs"];
m10_10 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="42-42", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="JobState.cs"];
m10_206 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="JobState.cs"];
m10_35 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="70-70", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_37 [label="throw new ArgumentNullException(nameof(job));", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_39 [label="throw new ArgumentNullException(nameof(parameters));", span="77-77", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_40 [label="string createJobSql =\r\n$@''insert into [{_storage.SchemaName}].Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\noutput inserted.Id\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt)''", span="79-82", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_42 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString();\r\n\r\n                if (parameters.Count > 0)\r\n                {\r\n                    var parameterArray = new object[parameters.Count];\r\n                    int parameterIndex = 0;\r\n                    foreach (var parameter in parameters)\r\n                    {\r\n                        parameterArray[parameterIndex++] = new\r\n                        {\r\n                            jobId = long.Parse(jobId),\r\n                            name = parameter.Key,\r\n                            value = parameter.Value\r\n                        };\r\n                    }\r\n\r\n                    string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)'';\r\n\r\n                    connection.Execute(insertParameterSql, parameterArray, commandTimeout: _storage.CommandTimeout);\r\n                }\r\n\r\n                return jobId;\r\n            });", span="86-121", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_36 [label="job == null", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_38 [label="parameters == null", span="77-77", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_41 [label="var invocationData = InvocationData.Serialize(job)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_43 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="70-70", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobState.cs"];
m10_57 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobState.cs"];
m10_143 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_145 [label="throw new ArgumentNullException(nameof(key));", span="252-252", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_147 [label="throw new ArgumentNullException(nameof(keyValuePairs));", span="253-253", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_148 [label="string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="255-260", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_149 [label="_storage.UseTransaction((connection, transaction) =>\r\n            {\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    connection.Execute(\r\n                        sql, \r\n                        new { key = key, field = keyValuePair.Key, value = keyValuePair.Value }, \r\n                        transaction,\r\n                        commandTimeout: _storage.CommandTimeout);\r\n                }\r\n            })", span="262-272", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_144 [label="key == null", span="252-252", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_146 [label="keyValuePairs == null", span="253-253", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_150 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobState.cs"];
m10_321 [label="Entry lambda expression", span="501-501", cluster="lambda expression", file="JobState.cs"];
m10_32 [label="_storage.QueueProviders.GetProvider(queue)", span="56-56", cluster="lambda expression", file="JobState.cs"];
m10_47 [label="var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString()", span="88-97", cluster="lambda expression", file="JobState.cs"];
m10_53 [label="string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="113-115", cluster="lambda expression", file="JobState.cs"];
m10_54 [label="connection.Execute(insertParameterSql, parameterArray, commandTimeout: _storage.CommandTimeout)", span="117-117", cluster="lambda expression", file="JobState.cs"];
m10_70 [label="var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault()", span="133-134", cluster="lambda expression", file="JobState.cs"];
m10_93 [label="var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault()", span="176-176", cluster="lambda expression", file="JobState.cs"];
m10_110 [label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout)", span="202-209", cluster="lambda expression", file="JobState.cs"];
m10_120 [label="connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout)", span="218-221", cluster="lambda expression", file="JobState.cs"];
m10_128 [label="var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)", span="230-233", cluster="lambda expression", file="JobState.cs"];
m10_141 [label="connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout)", span="244-247", cluster="lambda expression", file="JobState.cs"];
m10_154 [label="connection.Execute(\r\n                        sql, \r\n                        new { key = key, field = keyValuePair.Key, value = keyValuePair.Value }, \r\n                        transaction,\r\n                        commandTimeout: _storage.CommandTimeout)", span="266-270", cluster="lambda expression", file="JobState.cs"];
m10_163 [label="var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="281-285", cluster="lambda expression", file="JobState.cs"];
m10_183 [label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout)", span="305-312", cluster="lambda expression", file="JobState.cs"];
m10_191 [label="connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="322-325", cluster="lambda expression", file="JobState.cs"];
m10_199 [label="connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="335-338", cluster="lambda expression", file="JobState.cs"];
m10_209 [label="connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout)", span="349-352", cluster="lambda expression", file="JobState.cs"];
m10_218 [label="connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First()", span="359-362", cluster="lambda expression", file="JobState.cs"];
m10_228 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="376-378", cluster="lambda expression", file="JobState.cs"];
m10_238 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="389-389", cluster="lambda expression", file="JobState.cs"];
m10_251 [label="connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0", span="408-408", cluster="lambda expression", file="JobState.cs"];
m10_260 [label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="417-417", cluster="lambda expression", file="JobState.cs"];
m10_269 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="428-428", cluster="lambda expression", file="JobState.cs"];
m10_283 [label="connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout)", span="444-445", cluster="lambda expression", file="JobState.cs"];
m10_292 [label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="456-456", cluster="lambda expression", file="JobState.cs"];
m10_301 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="469-469", cluster="lambda expression", file="JobState.cs"];
m10_313 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="487-489", cluster="lambda expression", file="JobState.cs"];
m10_322 [label="connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList()", span="501-501", cluster="lambda expression", file="JobState.cs"];
m10_31 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="JobState.cs"];
m10_33 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="JobState.cs"];
m10_46 [label="Entry lambda expression", span="86-121", cluster="lambda expression", file="JobState.cs"];
m10_48 [label="parameters.Count > 0", span="99-99", cluster="lambda expression", file="JobState.cs"];
m10_52 [label="parameterArray[parameterIndex++] = new\r\n                        {\r\n                            jobId = long.Parse(jobId),\r\n                            name = parameter.Key,\r\n                            value = parameter.Value\r\n                        }", span="105-110", cluster="lambda expression", file="JobState.cs"];
m10_55 [label="return jobId;", span="120-120", cluster="lambda expression", file="JobState.cs"];
m10_51 [label=parameters, span="103-103", cluster="lambda expression", file="JobState.cs"];
m10_49 [label="var parameterArray = new object[parameters.Count]", span="101-101", cluster="lambda expression", file="JobState.cs"];
m10_69 [label="Entry lambda expression", span="131-161", cluster="lambda expression", file="JobState.cs"];
m10_71 [label="jobData == null", span="136-136", cluster="lambda expression", file="JobState.cs"];
m10_73 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="139-139", cluster="lambda expression", file="JobState.cs"];
m10_74 [label="invocationData.Arguments = jobData.Arguments", span="140-140", cluster="lambda expression", file="JobState.cs"];
m10_80 [label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="154-160", cluster="lambda expression", file="JobState.cs"];
m10_92 [label="Entry lambda expression", span="174-192", cluster="lambda expression", file="JobState.cs"];
m10_94 [label="sqlState == null", span="177-177", cluster="lambda expression", file="JobState.cs"];
m10_96 [label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="182-184", cluster="lambda expression", file="JobState.cs"];
m10_97 [label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="186-191", cluster="lambda expression", file="JobState.cs"];
m10_109 [label="Entry lambda expression", span="200-210", cluster="lambda expression", file="JobState.cs"];
m10_111 [label="Exit lambda expression", span="200-210", cluster="lambda expression", file="JobState.cs"];
m10_119 [label="Entry lambda expression", span="218-221", cluster="lambda expression", file="JobState.cs"];
m10_121 [label="Exit lambda expression", span="218-221", cluster="lambda expression", file="JobState.cs"];
m10_127 [label="Entry lambda expression", span="228-236", cluster="lambda expression", file="JobState.cs"];
m10_129 [label="return new HashSet<string>(result);", span="235-235", cluster="lambda expression", file="JobState.cs"];
m10_140 [label="Entry lambda expression", span="244-247", cluster="lambda expression", file="JobState.cs"];
m10_142 [label="Exit lambda expression", span="244-247", cluster="lambda expression", file="JobState.cs"];
m10_152 [label="Entry lambda expression", span="262-272", cluster="lambda expression", file="JobState.cs"];
m10_153 [label=keyValuePairs, span="264-264", cluster="lambda expression", file="JobState.cs"];
m10_162 [label="Entry lambda expression", span="279-288", cluster="lambda expression", file="JobState.cs"];
m10_164 [label="return result.Count != 0 ? result : null;", span="287-287", cluster="lambda expression", file="JobState.cs"];
m10_167 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="JobState.cs"];
m10_170 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="JobState.cs"];
m10_182 [label="Entry lambda expression", span="303-313", cluster="lambda expression", file="JobState.cs"];
m10_184 [label="Exit lambda expression", span="303-313", cluster="lambda expression", file="JobState.cs"];
m10_190 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="JobState.cs"];
m10_192 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="JobState.cs"];
m10_198 [label="Entry lambda expression", span="333-339", cluster="lambda expression", file="JobState.cs"];
m10_200 [label="Exit lambda expression", span="333-339", cluster="lambda expression", file="JobState.cs"];
m10_208 [label="Entry lambda expression", span="349-352", cluster="lambda expression", file="JobState.cs"];
m10_210 [label="Exit lambda expression", span="349-352", cluster="lambda expression", file="JobState.cs"];
m10_217 [label="Entry lambda expression", span="359-362", cluster="lambda expression", file="JobState.cs"];
m10_219 [label="Exit lambda expression", span="359-362", cluster="lambda expression", file="JobState.cs"];
m10_227 [label="Entry lambda expression", span="376-378", cluster="lambda expression", file="JobState.cs"];
m10_229 [label="Exit lambda expression", span="376-378", cluster="lambda expression", file="JobState.cs"];
m10_237 [label="Entry lambda expression", span="387-393", cluster="lambda expression", file="JobState.cs"];
m10_239 [label="!result.HasValue", span="390-390", cluster="lambda expression", file="JobState.cs"];
m10_241 [label="return result.Value - DateTime.UtcNow;", span="392-392", cluster="lambda expression", file="JobState.cs"];
m10_250 [label="Entry lambda expression", span="407-408", cluster="lambda expression", file="JobState.cs"];
m10_252 [label="Exit lambda expression", span="407-408", cluster="lambda expression", file="JobState.cs"];
m10_259 [label="Entry lambda expression", span="417-417", cluster="lambda expression", file="JobState.cs"];
m10_261 [label="Exit lambda expression", span="417-417", cluster="lambda expression", file="JobState.cs"];
m10_268 [label="Entry lambda expression", span="426-432", cluster="lambda expression", file="JobState.cs"];
m10_270 [label="!result.HasValue", span="429-429", cluster="lambda expression", file="JobState.cs"];
m10_272 [label="return result.Value - DateTime.UtcNow;", span="431-431", cluster="lambda expression", file="JobState.cs"];
m10_282 [label="Entry lambda expression", span="444-445", cluster="lambda expression", file="JobState.cs"];
m10_284 [label="Exit lambda expression", span="444-445", cluster="lambda expression", file="JobState.cs"];
m10_291 [label="Entry lambda expression", span="456-456", cluster="lambda expression", file="JobState.cs"];
m10_293 [label="Exit lambda expression", span="456-456", cluster="lambda expression", file="JobState.cs"];
m10_300 [label="Entry lambda expression", span="467-473", cluster="lambda expression", file="JobState.cs"];
m10_302 [label="!result.HasValue", span="470-470", cluster="lambda expression", file="JobState.cs"];
m10_304 [label="return result.Value - DateTime.UtcNow;", span="472-472", cluster="lambda expression", file="JobState.cs"];
m10_312 [label="Entry lambda expression", span="487-489", cluster="lambda expression", file="JobState.cs"];
m10_314 [label="Exit lambda expression", span="487-489", cluster="lambda expression", file="JobState.cs"];
m10_323 [label="Exit lambda expression", span="501-501", cluster="lambda expression", file="JobState.cs"];
m10_56 [label="Exit lambda expression", span="86-121", cluster="lambda expression", file="JobState.cs"];
m10_50 [label="int parameterIndex = 0", span="102-102", cluster="lambda expression", file="JobState.cs"];
m10_81 [label="Exit lambda expression", span="131-161", cluster="lambda expression", file="JobState.cs"];
m10_72 [label="return null;", span="136-136", cluster="lambda expression", file="JobState.cs"];
m10_77 [label="job = invocationData.Deserialize()", span="147-147", cluster="lambda expression", file="JobState.cs"];
m10_75 [label="Job job = null", span="142-142", cluster="lambda expression", file="JobState.cs"];
m10_79 [label="loadException = ex", span="151-151", cluster="lambda expression", file="JobState.cs"];
m10_98 [label="Exit lambda expression", span="174-192", cluster="lambda expression", file="JobState.cs"];
m10_95 [label="return null;", span="179-179", cluster="lambda expression", file="JobState.cs"];
m10_130 [label="Exit lambda expression", span="228-236", cluster="lambda expression", file="JobState.cs"];
m10_155 [label="Exit lambda expression", span="262-272", cluster="lambda expression", file="JobState.cs"];
m10_165 [label="Exit lambda expression", span="279-288", cluster="lambda expression", file="JobState.cs"];
m10_169 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="JobState.cs"];
m10_168 [label="x.Field", span="285-285", cluster="lambda expression", file="JobState.cs"];
m10_172 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="JobState.cs"];
m10_171 [label="x.Value", span="285-285", cluster="lambda expression", file="JobState.cs"];
m10_242 [label="Exit lambda expression", span="387-393", cluster="lambda expression", file="JobState.cs"];
m10_240 [label="return TimeSpan.FromSeconds(-1);", span="390-390", cluster="lambda expression", file="JobState.cs"];
m10_273 [label="Exit lambda expression", span="426-432", cluster="lambda expression", file="JobState.cs"];
m10_271 [label="return TimeSpan.FromSeconds(-1);", span="429-429", cluster="lambda expression", file="JobState.cs"];
m10_303 [label="return TimeSpan.FromSeconds(-1);", span="470-470", cluster="lambda expression", file="JobState.cs"];
m10_76 [label="JobLoadException loadException = null", span="143-143", cluster="lambda expression", file="JobState.cs"];
m10_78 [label=JobLoadException, span="149-149", cluster="lambda expression", file="JobState.cs"];
m10_305 [label="Exit lambda expression", span="467-473", cluster="lambda expression", file="JobState.cs"];
m10_25 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="JobState.cs"];
m10_274 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_276 [label="throw new ArgumentNullException(nameof(key));", span="437-437", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_278 [label="throw new ArgumentNullException(nameof(name));", span="438-438", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_279 [label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].Hash with (readcommittedlock)\r\nwhere [Key] = @key and [Field] = @field''", span="440-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_280 [label="return _storage.UseConnection(connection => connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout));", span="444-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_275 [label="key == null", span="437-437", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_277 [label="name == null", span="438-438", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_281 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobState.cs"];
m10_220 [label="Entry Unk.First", span="", cluster="Unk.First", file="JobState.cs"];
m10_7 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobState.cs"];
m10_8 [label="return new SqlServerWriteOnlyTransaction(_storage);", span="43-43", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobState.cs"];
m10_9 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobState.cs"];
m10_85 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="JobState.cs"];
m10_24 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobState.cs"];
m10_30 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="JobState.cs"];
m10_212 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="355-355", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobState.cs"];
m10_214 [label="throw new ArgumentNullException(nameof(key));", span="357-357", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobState.cs"];
m10_215 [label="return _storage.UseConnection(connection => connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First());", span="359-362", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobState.cs"];
m10_213 [label="key == null", span="357-357", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobState.cs"];
m10_216 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="355-355", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobState.cs"];
m10_0 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="35-35", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobState.cs"];
m10_1 [label="storage == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="JobState.cs"];
m10_2 [label="throw new ArgumentNullException(nameof(storage));", span="37-37", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="JobState.cs"];
m10_3 [label="_storage = storage", span="38-38", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="JobState.cs"];
m10_4 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="35-35", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobState.cs"];
m10_207 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JobState.cs"];
m10_108 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", span="170-170", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", file="JobState.cs"];
m10_230 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobState.cs"];
m10_62 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="JobState.cs"];
m10_29 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="JobState.cs"];
m10_131 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="JobState.cs"];
m10_122 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="224-224", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobState.cs"];
m10_124 [label="throw new ArgumentNullException(nameof(key));", span="226-226", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobState.cs"];
m10_125 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="228-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobState.cs"];
m10_123 [label="key == null", span="226-226", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobState.cs"];
m10_126 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="224-224", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobState.cs"];
m10_285 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="448-448", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobState.cs"];
m10_287 [label="throw new ArgumentNullException(nameof(key));", span="450-450", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobState.cs"];
m10_288 [label="string query = \r\n$@''select count([Id]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="452-454", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobState.cs"];
m10_289 [label="return _storage.UseConnection(connection => connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="456-456", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobState.cs"];
m10_286 [label="key == null", span="450-450", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobState.cs"];
m10_290 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="448-448", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobState.cs"];
m10_45 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", span="179-179", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="JobState.cs"];
m10_201 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="342-342", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobState.cs"];
m10_203 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', nameof(timeOut));", span="346-346", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobState.cs"];
m10_204 [label="return _storage.UseConnection(connection => connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout));", span="349-352", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobState.cs"];
m10_202 [label="timeOut.Duration() != timeOut", span="344-344", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobState.cs"];
m10_205 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="342-342", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobState.cs"];
m10_324 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="JobState.cs"];
m10_325 [label="System.DateTime", span="", file="JobState.cs"];
m10_326 [label="System.TimeSpan", span="", file="JobState.cs"];
m10_327 [label=createJobSql, span="", file="JobState.cs"];
m10_328 [label=invocationData, span="", file="JobState.cs"];
m10_330 [label=string, span="", file="JobState.cs"];
m10_331 [label=sql, span="", file="JobState.cs"];
m10_332 [label=string, span="", file="JobState.cs"];
m10_333 [label=sql, span="", file="JobState.cs"];
m10_334 [label=string, span="", file="JobState.cs"];
m10_335 [label=string, span="", file="JobState.cs"];
m10_336 [label=string, span="", file="JobState.cs"];
m10_337 [label=string, span="", file="JobState.cs"];
m10_338 [label=string, span="", file="JobState.cs"];
m10_339 [label=string, span="", file="JobState.cs"];
m10_340 [label=string, span="", file="JobState.cs"];
m10_341 [label=double, span="", file="JobState.cs"];
m10_342 [label=double, span="", file="JobState.cs"];
m10_344 [label=string, span="", file="JobState.cs"];
m10_345 [label=sql, span="", file="JobState.cs"];
m10_346 [label=string, span="", file="JobState.cs"];
m10_347 [label=string, span="", file="JobState.cs"];
m10_348 [label=data, span="", file="JobState.cs"];
m10_349 [label=string, span="", file="JobState.cs"];
m10_350 [label=string, span="", file="JobState.cs"];
m10_351 [label="System.TimeSpan", span="", file="JobState.cs"];
m10_352 [label=string, span="", file="JobState.cs"];
m10_353 [label=string, span="", file="JobState.cs"];
m10_354 [label=int, span="", file="JobState.cs"];
m10_355 [label=int, span="", file="JobState.cs"];
m10_356 [label=query, span="", file="JobState.cs"];
m10_357 [label=string, span="", file="JobState.cs"];
m10_358 [label=query, span="", file="JobState.cs"];
m10_359 [label=string, span="", file="JobState.cs"];
m10_360 [label=query, span="", file="JobState.cs"];
m10_361 [label=string, span="", file="JobState.cs"];
m10_362 [label=query, span="", file="JobState.cs"];
m10_363 [label=string, span="", file="JobState.cs"];
m10_364 [label=query, span="", file="JobState.cs"];
m10_365 [label=string, span="", file="JobState.cs"];
m10_366 [label=string, span="", file="JobState.cs"];
m10_367 [label=query, span="", file="JobState.cs"];
m10_368 [label=string, span="", file="JobState.cs"];
m10_369 [label=query, span="", file="JobState.cs"];
m10_370 [label=string, span="", file="JobState.cs"];
m10_371 [label=query, span="", file="JobState.cs"];
m10_372 [label=string, span="", file="JobState.cs"];
m10_373 [label=int, span="", file="JobState.cs"];
m10_374 [label=int, span="", file="JobState.cs"];
m10_375 [label=query, span="", file="JobState.cs"];
m10_376 [label=string, span="", file="JobState.cs"];
m10_377 [label=query, span="", file="JobState.cs"];
m10_329 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="JobState.cs"];
m10_343 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="JobState.cs"];
m13_10 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="ProcessingState.cs"];
m13_6 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ProcessingState.cs"];
m13_8 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ProcessingState.cs"];
m13_0 [label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="ProcessingState.cs"];
m13_1 [label="Handlers = new List<StateHandler>()", span="25-25", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="ProcessingState.cs"];
m13_2 [label="Handlers.Add(new SucceededState.Handler())", span="26-26", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="ProcessingState.cs"];
m13_3 [label="Handlers.Add(new ScheduledState.Handler())", span="27-27", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="ProcessingState.cs"];
m13_4 [label="Handlers.Add(new EnqueuedState.Handler())", span="28-28", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="ProcessingState.cs"];
m13_5 [label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="ProcessingState.cs"];
m13_7 [label="Entry HangFire.States.SucceededState.Handler.Handler()", span="52-52", cluster="HangFire.States.SucceededState.Handler.Handler()", file="ProcessingState.cs"];
m13_9 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="52-52", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="ProcessingState.cs"];
m14_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingStateDescriptor.cs"];
m14_6 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ProcessingStateDescriptor.cs"];
m14_7 [label="Entry lambda expression", span="11-12", cluster="lambda expression", file="ProcessingStateDescriptor.cs"];
m14_8 [label="x.RemoveItemFromSortedSet(\r\n                ''hangfire:processing'', jobId)", span="11-12", cluster="lambda expression", color=red, community=1, file="ProcessingStateDescriptor.cs"];
m14_9 [label="Exit lambda expression", span="11-12", cluster="lambda expression", file="ProcessingStateDescriptor.cs"];
m14_0 [label="Entry HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", file="ProcessingStateDescriptor.cs"];
m14_1 [label="transaction == null", span="9-9", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ProcessingStateDescriptor.cs"];
m14_3 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                ''hangfire:processing'', jobId))", span="11-12", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=1, file="ProcessingStateDescriptor.cs"];
m14_2 [label="throw new ArgumentNullException(''transaction'');", span="9-9", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ProcessingStateDescriptor.cs"];
m14_4 [label="Exit HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", file="ProcessingStateDescriptor.cs"];
m14_10 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="ProcessingStateDescriptor.cs"];
m14_11 [label=string, span="", file="ProcessingStateDescriptor.cs"];
m15_13 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="Program.cs"];
m15_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Program.cs"];
m15_9 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="38-38", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="Program.cs"];
m15_15 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="Program.cs"];
m15_16 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="28-30", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="Program.cs"];
m15_17 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="Program.cs"];
m15_14 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="Program.cs"];
m15_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="Program.cs"];
m15_7 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="21-23", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="Program.cs"];
m15_8 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="Program.cs"];
m15_24 [label="Entry lambda expression", span="35-37", cluster="lambda expression", file="Program.cs"];
m15_31 [label="Entry lambda expression", span="42-45", cluster="lambda expression", file="Program.cs"];
m15_32 [label="x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="42-45", cluster="lambda expression", color=green, community=0, file="Program.cs"];
m15_33 [label="Exit lambda expression", span="42-45", cluster="lambda expression", file="Program.cs"];
m15_25 [label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="35-37", cluster="lambda expression", file="Program.cs"];
m15_11 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="21-23", cluster="lambda expression", file="Program.cs"];
m15_19 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="28-30", cluster="lambda expression", file="Program.cs"];
m15_10 [label="Entry lambda expression", span="21-23", cluster="lambda expression", file="Program.cs"];
m15_18 [label="Entry lambda expression", span="28-30", cluster="lambda expression", file="Program.cs"];
m15_26 [label="Exit lambda expression", span="35-37", cluster="lambda expression", file="Program.cs"];
m15_12 [label="Exit lambda expression", span="21-23", cluster="lambda expression", file="Program.cs"];
m15_20 [label="Exit lambda expression", span="28-30", cluster="lambda expression", file="Program.cs"];
m15_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="Program.cs"];
m15_1 [label="transaction == null", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="Program.cs"];
m15_28 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="Program.cs"];
m15_29 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="42-45", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="Program.cs"];
m15_30 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="Program.cs"];
m15_3 [label="_transaction = transaction", span="16-16", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="Program.cs"];
m15_2 [label="throw new ArgumentNullException(''transaction'');", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="Program.cs"];
m15_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="Program.cs"];
m15_21 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="Program.cs"];
m15_22 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="35-37", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="Program.cs"];
m15_23 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="Program.cs"];
m15_34 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", span="", file="Program.cs"];
m15_41 [label=string, span="", file="Program.cs"];
m15_42 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="Program.cs"];
m15_38 [label=string, span="", file="Program.cs"];
m15_39 [label=string, span="", file="Program.cs"];
m15_40 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="Program.cs"];
m15_35 [label=string, span="", file="Program.cs"];
m15_36 [label="System.TimeSpan", span="", file="Program.cs"];
m15_37 [label=string, span="", file="Program.cs"];
m16_15 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledState.cs"];
m16_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs"];
m16_8 [label="Entry HangFire.States.ScheduledState.Apply(IRedisTransaction)", span="29-29", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="ScheduledState.cs"];
m16_9 [label="transaction == null", span="31-31", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="ScheduledState.cs"];
m16_12 [label="transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', JobId, timestamp))", span="35-36", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="ScheduledState.cs"];
m16_10 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="ScheduledState.cs"];
m16_11 [label="var timestamp = JobHelper.ToTimestamp(EnqueueAt)", span="33-33", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="ScheduledState.cs"];
m16_13 [label="Exit HangFire.States.ScheduledState.Apply(IRedisTransaction)", span="29-29", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="ScheduledState.cs"];
m16_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="ScheduledState.cs"];
m16_1 [label="EnqueueAt = enqueueAt", span="13-13", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="ScheduledState.cs"];
m16_2 [label="Exit HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="ScheduledState.cs"];
m16_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ScheduledState.cs"];
m16_16 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ScheduledState.cs"];
m16_20 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="ScheduledState.cs"];
m16_3 [label="Entry HangFire.States.ScheduledState.GetProperties()", span="20-20", cluster="HangFire.States.ScheduledState.GetProperties()", file="ScheduledState.cs"];
m16_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="22-26", cluster="HangFire.States.ScheduledState.GetProperties()", file="ScheduledState.cs"];
m16_5 [label="Exit HangFire.States.ScheduledState.GetProperties()", span="20-20", cluster="HangFire.States.ScheduledState.GetProperties()", file="ScheduledState.cs"];
m16_17 [label="Entry lambda expression", span="35-36", cluster="lambda expression", file="ScheduledState.cs"];
m16_18 [label="x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', JobId, timestamp)", span="35-36", cluster="lambda expression", file="ScheduledState.cs"];
m16_19 [label="Exit lambda expression", span="35-36", cluster="lambda expression", file="ScheduledState.cs"];
m16_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledState.cs"];
m16_21 [label="HangFire.States.ScheduledState", span="", file="ScheduledState.cs"];
m16_22 [label=timestamp, span="", file="ScheduledState.cs"];
m18_0 [label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="7-7", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ServerContext.cs"];
m18_1 [label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="7-7", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ServerContext.cs"];
m18_2 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="12-12", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m18_3 [label="ServerName = serverName", span="20-20", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m18_4 [label="Queues = queues", span="21-21", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", color=red, community=0, file="ServerContext.cs"];
m18_5 [label="WorkersCount = workersCount", span="22-22", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", color=red, community=0, file="ServerContext.cs"];
m18_6 [label="PollInterval = pollInterval", span="23-23", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", color=red, community=0, file="ServerContext.cs"];
m18_7 [label="Activator = activator", span="25-25", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m18_8 [label="Performer = performer", span="26-26", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m18_9 [label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="12-12", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m18_10 [label="HangFire.Server.ServerContext", span="", file="ServerContext.cs"];
m19_0 [label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="SucceededState.cs"];
m19_1 [label="Exit HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="SucceededState.cs"];
m20_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededStateDescriptor.cs"];
m20_17 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="SucceededStateDescriptor.cs"];
m20_16 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SucceededStateDescriptor.cs"];
m20_8 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SucceededStateDescriptor.cs"];
m20_18 [label="Entry lambda expression", span="14-15", cluster="lambda expression", file="SucceededStateDescriptor.cs"];
m20_14 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}'', jobId))", span="12-13", cluster="lambda expression", color=red, community=1, file="SucceededStateDescriptor.cs"];
m20_19 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="14-15", cluster="lambda expression", color=red, community=1, file="SucceededStateDescriptor.cs"];
m20_9 [label="Entry lambda expression", span="11-11", cluster="lambda expression", file="SucceededStateDescriptor.cs"];
m20_13 [label="Entry lambda expression", span="12-13", cluster="lambda expression", file="SucceededStateDescriptor.cs"];
m20_10 [label="x.DecrementValue(''hangfire:stats:succeeded'')", span="11-11", cluster="lambda expression", color=red, community=0, file="SucceededStateDescriptor.cs"];
m20_11 [label="Exit lambda expression", span="11-11", cluster="lambda expression", file="SucceededStateDescriptor.cs"];
m20_15 [label="Exit lambda expression", span="12-13", cluster="lambda expression", file="SucceededStateDescriptor.cs"];
m20_20 [label="Exit lambda expression", span="14-15", cluster="lambda expression", file="SucceededStateDescriptor.cs"];
m20_12 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="SucceededStateDescriptor.cs"];
m20_0 [label="Entry HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="SucceededStateDescriptor.cs"];
m20_1 [label="transaction == null", span="9-9", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="SucceededStateDescriptor.cs"];
m20_3 [label="transaction.QueueCommand(x => x.DecrementValue(''hangfire:stats:succeeded''))", span="11-11", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="SucceededStateDescriptor.cs"];
m20_4 [label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}'', jobId)))", span="12-13", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=1, file="SucceededStateDescriptor.cs"];
m20_5 [label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(''hangfire:job:{0}:history'', jobId)))", span="14-15", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=1, file="SucceededStateDescriptor.cs"];
m20_2 [label="throw new ArgumentNullException(''transaction'');", span="9-9", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="SucceededStateDescriptor.cs"];
m20_6 [label="Exit HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.SucceededStateDescriptor.Unapply(IRedisTransaction, string)", file="SucceededStateDescriptor.cs"];
m20_21 [label=string, span="", file="SucceededStateDescriptor.cs"];
m21_66 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", span="10-10", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", file="Worker.cs"];
m21_26 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="Worker.cs"];
m21_44 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="Worker.cs"];
m21_68 [label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="Worker.cs"];
m21_45 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="Worker.cs"];
m21_10 [label="!basePath.EndsWith(''/'', StringComparison.OrdinalIgnoreCase)", span="37-37", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_18 [label="_jobIsReady.Set()", span="76-76", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_27 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs"];
m21_9 [label="var basePath = sb.ToString()", span="36-36", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_7 [label="sbIndex--", span="33-33", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs", color=red, community=0];
m21_14 [label="Entry StringBuilder.cstr", span="", cluster="StringBuilder.cstr", file="Worker.cs"];
m21_20 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="Worker.cs"];
m21_0 [label="Entry HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", span="24-24", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_2 [label="var pathInfo = request.PathInfo", span="27-27", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", color=green, community=0, file="Worker.cs"];
m21_1 [label="var sb = new StringBuilder(request.Path)", span="26-26", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_3 [label="var pathInfoIndex = pathInfo.Length - 1", span="28-28", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs", color=red, community=0];
m21_4 [label="var sbIndex = sb.Length - 1", span="29-29", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs", color=red, community=0];
m21_5 [label="pathInfoIndex >= 0 && sb[sbIndex].Equals(pathInfo[pathInfoIndex])", span="30-30", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_6 [label="sb.Remove(sbIndex, 1)", span="32-32", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_19 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="69-69", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_17 [label="_jobPayload = payload", span="73-73", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_8 [label="pathInfoIndex--", span="34-34", cluster="HangFire.Web.LinkHelper.LinkTo(HttpRequestBase, string)", file="Worker.cs"];
m21_42 [label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="Worker.cs"];
m21_29 [label="Entry HangFire.Server.Worker.DoWork()", span="88-88", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_31 [label="_pool.NotifyReady(this)", span="94-94", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_32 [label="_jobIsReady.Wait(_cts.Token)", span="95-95", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_33 [label=_jobLock, span="97-97", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_34 [label="PerformJob(_jobPayload)", span="99-99", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_35 [label="_jobIsReady.Reset()", span="100-100", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_38 [label="Crashed = true", span="109-109", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_39 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="110-113", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_30 [label=true, span="92-92", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_37 [label=Exception, span="107-107", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_36 [label=OperationCanceledException, span="104-104", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_40 [label="Exit HangFire.Server.Worker.DoWork()", span="88-88", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_71 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="Worker.cs"];
m21_72 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="90-90", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="Worker.cs"];
m21_64 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="Worker.cs"];
m21_12 [label="_cts.Cancel()", span="48-48", cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs"];
m21_11 [label="Entry HangFire.Server.Worker.SendStop()", span="46-46", cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs"];
m21_13 [label="Exit HangFire.Server.Worker.SendStop()", span="46-46", cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs"];
m21_67 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="Worker.cs"];
m21_46 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="Worker.cs"];
m21_70 [label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="Worker.cs"];
m21_65 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Worker.cs"];
m21_41 [label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="81-81", cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="Worker.cs"];
m21_43 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="118-118", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_49 [label="return;", span="127-127", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m21_48 [label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                    EnqueuedState.Name)", span="122-125", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_52 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _context.Activator, payload)", span="141-142", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_53 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="144-145", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_54 [label="_context.Performer.PerformJob(performContext)", span="147-147", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_57 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="153-155", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_47 [label=Redis, span="120-120", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_50 [label="Exception exception = null", span="136-136", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_62 [label="JobFetcher.RemoveFromFetchedQueue(\r\n                    Redis, payload.Id, payload.Queue)", span="187-188", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_51 [label="ServerJobDescriptor jobDescriptor = null", span="138-138", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_55 [label=Exception, span="149-149", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_58 [label=Redis, span="165-165", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_56 [label="exception = ex", span="151-151", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_60 [label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="169-172", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_61 [label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="176-179", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_59 [label="exception == null", span="167-167", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_63 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="118-118", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_16 [label=_jobLock, span="71-71", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_21 [label="Entry HangFire.Server.Worker.Dispose()", span="79-79", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_23 [label="_cts.Dispose()", span="83-83", cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="Worker.cs"];
m21_22 [label="_thread.Join()", span="81-81", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_24 [label="_jobIsReady.Dispose()", span="84-84", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_25 [label="Exit HangFire.Server.Worker.Dispose()", span="79-79", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_69 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="Worker.cs"];
m21_15 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="69-69", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_28 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="Worker.cs"];
m21_73 [label="HangFire.Server.Worker", span="", file="Worker.cs"];
m22_0 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="8-8", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs"];
m22_1 [label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="8-8", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs"];
m22_2 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerContext.cs"];
m22_3 [label="WorkerNumber = workerNumber", span="16-16", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerContext.cs"];
m22_4 [label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerContext.cs"];
m22_5 [label="HangFire.Server.WorkerContext", span="", file="WorkerContext.cs"];
m23_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="WorkerPool.cs"];
m23_3 [label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="WorkerPool.cs"];
m23_4 [label="BinaryExpressionFingerprint other = obj as BinaryExpressionFingerprint", span="31-31", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", color=red, community=0, file="WorkerPool.cs"];
m23_5 [label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", color=red, community=0, file="WorkerPool.cs"];
m23_6 [label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="WorkerPool.cs"];
m23_8 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="WorkerPool.cs"];
m23_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="WorkerPool.cs"];
m23_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="WorkerPool.cs"];
m23_9 [label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="WorkerPool.cs"];
m23_10 [label="combiner.AddObject(Method)", span="39-39", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", color=red, community=0, file="WorkerPool.cs"];
m23_11 [label="base.AddToHashCodeCombiner(combiner)", span="40-40", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", color=red, community=0, file="WorkerPool.cs"];
m23_12 [label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="WorkerPool.cs"];
m23_0 [label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="WorkerPool.cs"];
m23_1 [label="Method = method", span="23-23", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", color=red, community=0, file="WorkerPool.cs"];
m23_2 [label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="WorkerPool.cs"];
m23_15 [label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", span="", file="WorkerPool.cs"];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d4  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d3  [key=0, style=solid];
d2 -> d5  [key=2, style=dotted];
d3 -> d0  [key=0, style=bold, color=blue];
d7 -> d4  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d14 -> d5  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d44 -> d5  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d47  [key=2, style=dotted];
d45 -> d5  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d47  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d10  [key=2, style=dotted];
d12 -> d14  [key=1, style=dashed, color=darkseagreen4, label=stringResult];
d12 -> d13  [key=0, style=solid];
d12 -> d17  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d17  [key=2, style=dotted];
d13 -> d15  [key=1, style=dashed, color=darkseagreen4, label=intResult];
d15 -> d16  [key=0, style=solid];
d15 -> d10  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d46 -> d43  [key=0, style=bold, color=blue];
d9 -> d6  [key=0, style=bold, color=blue];
d11 -> d12  [key=0, style=solid];
d16 -> d11  [key=0, style=bold, color=blue];
d49 -> d47  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d37  [key=2, style=dotted];
d20 -> d10  [key=2, style=dotted];
d20 -> d21  [key=0, style=solid];
d24 -> d10  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d29 -> d10  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d34 -> d10  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=2, style=dotted];
d40 -> d10  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d50 -> d10  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d19 -> d17  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d19 -> d34  [key=3, color=darkorchid, style=bold, label="Property variable Hangfire.JobStorage Storage"];
d52 -> d49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d52 -> d39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
d48 -> d49  [key=0, style=solid];
d21 -> d18  [key=0, style=bold, color=blue];
d23 -> d24  [key=0, style=solid];
d23 -> d26  [key=2, style=dotted];
d25 -> d22  [key=0, style=bold, color=blue];
d28 -> d29  [key=0, style=solid];
d28 -> d31  [key=2, style=dotted];
d30 -> d27  [key=0, style=bold, color=blue];
d33 -> d34  [key=0, style=solid];
d33 -> d36  [key=2, style=dotted];
d35 -> d32  [key=0, style=bold, color=blue];
d39 -> d40  [key=0, style=solid];
d39 -> d37  [key=2, style=dotted];
d39 -> d42  [key=2, style=dotted];
d41 -> d38  [key=0, style=bold, color=blue];
d51 -> d48  [key=0, style=bold, color=blue];
d18 -> d19  [key=0, style=solid];
d18 -> d28  [key=3, color=darkorchid, style=bold, label="Property variable string DashboardPath"];
d22 -> d23  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_148 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_148 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_148 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_151  [key=0, style=solid];
m0_150 -> m0_154  [key=0, style=solid];
m0_150 -> m0_5  [key=2, style=dotted];
m0_150 -> m0_6  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_83  [key=2, style=dotted];
m0_153 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_152 -> m0_154  [key=0, style=solid];
m0_152 -> m0_155  [key=2, style=dotted];
m0_154 -> m0_148  [key=0, style=bold, color=blue];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_194 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m0_194 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m0_194 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m0_194 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_194 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_197  [key=0, style=solid];
m0_196 -> m0_201  [key=0, style=solid];
m0_196 -> m0_5  [key=2, style=dotted];
m0_196 -> m0_6  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_199  [key=0, style=solid];
m0_198 -> m0_201  [key=0, style=solid];
m0_198 -> m0_5  [key=2, style=dotted];
m0_198 -> m0_6  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_202  [key=2, style=dotted];
m0_199 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_123  [key=2, style=dotted];
m0_200 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_201 -> m0_194  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_24 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_24 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=0, style=solid];
m0_25 -> m0_1  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_4  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_2  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_3  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_10  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_26 -> m0_32  [key=0, style=solid];
m0_26 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_6  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_33  [key=2, style=dotted];
m0_27 -> m0_34  [key=2, style=dotted];
m0_27 -> m0_35  [key=2, style=dotted];
m0_27 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_27 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=providers];
m0_29 -> m0_32  [key=0, style=solid];
m0_29 -> m0_36  [key=2, style=dotted];
m0_29 -> m0_37  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_39  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_38  [key=2, style=dotted];
m0_32 -> m0_24  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_214 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_214 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_217  [key=0, style=solid];
m0_216 -> m0_218  [key=0, style=solid];
m0_216 -> m0_5  [key=2, style=dotted];
m0_216 -> m0_6  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_123  [key=2, style=dotted];
m0_217 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_218 -> m0_214  [key=0, style=bold, color=blue];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_178 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_178 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_181  [key=0, style=solid];
m0_180 -> m0_182  [key=0, style=solid];
m0_180 -> m0_5  [key=2, style=dotted];
m0_180 -> m0_6  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_54  [key=2, style=dotted];
m0_181 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_182 -> m0_178  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_327 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_327 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=0, style=solid];
m0_329 -> m0_332  [key=0, style=solid];
m0_329 -> m0_5  [key=2, style=dotted];
m0_329 -> m0_6  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_83  [key=2, style=dotted];
m0_331 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_332 -> m0_327  [key=0, style=bold, color=blue];
m0_23 -> m0_345  [key=0, style=solid];
m0_23 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_23 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_23 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_23 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_23 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_23 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_14  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_347  [key=0, style=solid];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_354  [key=0, style=solid];
m0_348 -> m0_359  [key=2, style=dotted];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_353  [key=0, style=solid];
m0_349 -> m0_360  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_361  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_362  [key=2, style=dotted];
m0_353 -> m0_363  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_364  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_365  [key=2, style=dotted];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_357  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_358  [key=2, style=dotted];
m0_347 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=lockId];
m0_347 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label=lockId];
m0_347 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label=lockId];
m0_350 -> m0_351  [key=0, style=solid];
m0_352 -> m0_356  [key=0, style=solid];
m0_356 -> m0_23  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_297  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_295 -> m0_298  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_295 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_295 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_295 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_298  [key=0, style=solid];
m0_297 -> m0_302  [key=0, style=solid];
m0_297 -> m0_5  [key=2, style=dotted];
m0_297 -> m0_6  [key=2, style=dotted];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_300  [key=0, style=solid];
m0_299 -> m0_302  [key=0, style=solid];
m0_299 -> m0_5  [key=2, style=dotted];
m0_299 -> m0_6  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_83  [key=2, style=dotted];
m0_301 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_302 -> m0_295  [key=0, style=bold, color=blue];
m0_222 -> m0_223  [key=0, style=solid];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_225  [key=0, style=solid];
m0_223 -> m0_227  [key=2, style=dotted];
m0_223 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_224 -> m0_226  [key=0, style=solid];
m0_224 -> m0_228  [key=2, style=dotted];
m0_224 -> m0_6  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_123  [key=2, style=dotted];
m0_225 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_225 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_226 -> m0_222  [key=0, style=bold, color=blue];
m0_365 -> m0_382  [key=0, style=solid];
m0_365 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_365 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m0_382 -> m0_383  [key=0, style=solid];
m0_383 -> m0_384  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_385 -> m0_365  [key=0, style=bold, color=blue];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_315 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_315 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_318  [key=0, style=solid];
m0_317 -> m0_320  [key=0, style=solid];
m0_317 -> m0_5  [key=2, style=dotted];
m0_317 -> m0_6  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_83  [key=2, style=dotted];
m0_319 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_320 -> m0_315  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=0, style=solid];
m0_8 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=2, style=dotted];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_13  [key=2, style=dotted, color=green];
m0_11 -> m0_7  [key=0, style=bold, color=blue];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_274 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_274 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_277  [key=0, style=solid];
m0_276 -> m0_279  [key=0, style=solid];
m0_276 -> m0_5  [key=2, style=dotted];
m0_276 -> m0_6  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_83  [key=2, style=dotted];
m0_278 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_279 -> m0_274  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_4  [key=1, style=dashed, color=green, label="params string[]"];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_264  [key=2, style=dotted, color=green];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_265 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_265 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_268  [key=0, style=solid];
m0_267 -> m0_270  [key=0, style=solid];
m0_267 -> m0_5  [key=2, style=dotted];
m0_267 -> m0_6  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_83  [key=2, style=dotted];
m0_269 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_270 -> m0_265  [key=0, style=bold, color=blue];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_206 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_206 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_209  [key=0, style=solid];
m0_208 -> m0_210  [key=0, style=solid];
m0_208 -> m0_5  [key=2, style=dotted];
m0_208 -> m0_6  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_123  [key=2, style=dotted];
m0_209 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_210 -> m0_206  [key=0, style=bold, color=blue];
m0_342 -> m0_343  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=0, style=solid];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=2, style=dotted];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_68  [key=2, style=dotted];
m0_56 -> m0_69  [key=2, style=dotted];
m0_56 -> m0_70  [key=2, style=dotted];
m0_56 -> m0_71  [key=2, style=dotted];
m0_56 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_56 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_66  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m0_62 -> m0_63  [key=0, style=solid];
m0_61 -> m0_60  [key=0, style=solid];
m0_61 -> m0_73  [key=2, style=dotted];
m0_61 -> m0_74  [key=2, style=dotted];
m0_61 -> m0_75  [key=2, style=dotted];
m0_61 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m0_66 -> m0_67  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=insertParameterSql];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_72  [key=2, style=dotted];
m0_59 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_59 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_59 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_59 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_59 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_76  [key=2, style=dotted];
m0_67 -> m0_55  [key=0, style=bold, color=blue];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_97  [key=2, style=dotted];
m0_85 -> m0_70  [key=2, style=dotted];
m0_85 -> m0_98  [key=2, style=dotted];
m0_85 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m0_85 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m0_85 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m0_84 -> m0_85  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_88  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_70  [key=2, style=dotted];
m0_88 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m0_89 -> m0_90  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_100  [key=2, style=dotted];
m0_87 -> m0_96  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=0, style=solid];
m0_92 -> m0_99  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_96 -> m0_84  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_97  [key=2, style=dotted];
m0_108 -> m0_70  [key=2, style=dotted];
m0_108 -> m0_98  [key=2, style=dotted];
m0_108 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m0_108 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m0_107 -> m0_108  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_114  [key=2, style=dotted];
m0_111 -> m0_70  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_115  [key=2, style=dotted];
m0_110 -> m0_113  [key=0, style=solid];
m0_113 -> m0_107  [key=0, style=bold, color=blue];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_97  [key=2, style=dotted];
m0_125 -> m0_127  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_126 -> m0_124  [key=0, style=bold, color=blue];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_97  [key=2, style=dotted];
m0_136 -> m0_70  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_137 -> m0_135  [key=0, style=bold, color=blue];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_70  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [key=2, style=dotted];
m0_146 -> m0_143  [key=0, style=bold, color=blue];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_70  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_158 -> m0_156  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_172  [key=0, style=solid];
m0_171 -> m0_170  [key=0, style=solid];
m0_171 -> m0_73  [key=2, style=dotted];
m0_171 -> m0_75  [key=2, style=dotted];
m0_171 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m0_168 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=DbTransaction];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_72  [key=2, style=dotted];
m0_169 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_169 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_169 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_169 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_169 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_169 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label=commandBatch];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_76  [key=2, style=dotted];
m0_177 -> m0_168  [key=0, style=bold, color=blue];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_70  [key=2, style=dotted];
m0_184 -> m0_187  [key=2, style=dotted];
m0_184 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_184 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_183 -> m0_184  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_186 -> m0_183  [key=0, style=bold, color=blue];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_188  [key=0, style=bold, color=blue];
m0_192 -> m0_193  [key=0, style=solid];
m0_193 -> m0_191  [key=0, style=bold, color=blue];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_68  [key=2, style=dotted];
m0_204 -> m0_127  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_205 -> m0_203  [key=0, style=bold, color=blue];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_127  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_213 -> m0_211  [key=0, style=bold, color=blue];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_127  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_221 -> m0_219  [key=0, style=bold, color=blue];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_232  [key=2, style=dotted];
m0_230 -> m0_69  [key=2, style=dotted];
m0_230 -> m0_127  [key=2, style=dotted];
m0_230 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_231 -> m0_229  [key=0, style=bold, color=blue];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_70  [key=2, style=dotted];
m0_239 -> m0_241  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_240 -> m0_238  [key=0, style=bold, color=blue];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_70  [key=2, style=dotted];
m0_249 -> m0_251  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_250 -> m0_248  [key=0, style=bold, color=blue];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_70  [key=2, style=dotted];
m0_259 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_258 -> m0_259  [key=0, style=solid];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_262  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_261 -> m0_263  [key=0, style=solid];
m0_261 -> m0_264  [key=2, style=dotted];
m0_263 -> m0_258  [key=0, style=bold, color=blue];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_70  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_273 -> m0_271  [key=0, style=bold, color=blue];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_70  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_282 -> m0_280  [key=0, style=bold, color=blue];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_70  [key=2, style=dotted];
m0_290 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_289 -> m0_290  [key=0, style=solid];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_293  [key=0, style=solid];
m0_293 -> m0_294  [key=0, style=solid];
m0_292 -> m0_294  [key=0, style=solid];
m0_292 -> m0_264  [key=2, style=dotted];
m0_294 -> m0_289  [key=0, style=bold, color=blue];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_70  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_305 -> m0_303  [key=0, style=bold, color=blue];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_70  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_314 -> m0_312  [key=0, style=bold, color=blue];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_70  [key=2, style=dotted];
m0_322 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_321 -> m0_322  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_325  [key=0, style=solid];
m0_325 -> m0_326  [key=0, style=solid];
m0_324 -> m0_326  [key=0, style=solid];
m0_324 -> m0_264  [key=2, style=dotted];
m0_326 -> m0_321  [key=0, style=bold, color=blue];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_70  [key=2, style=dotted];
m0_334 -> m0_251  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_335 -> m0_333  [key=0, style=bold, color=blue];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_70  [key=2, style=dotted];
m0_343 -> m0_251  [key=2, style=dotted];
m0_344 -> m0_342  [key=0, style=bold, color=blue];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_159 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m0_159 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m0_159 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_159 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m0_159 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_162  [key=0, style=solid];
m0_161 -> m0_166  [key=0, style=solid];
m0_161 -> m0_5  [key=2, style=dotted];
m0_161 -> m0_6  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_164  [key=0, style=solid];
m0_163 -> m0_166  [key=0, style=solid];
m0_163 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_6  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=2, style=dotted];
m0_165 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=sql];
m0_166 -> m0_159  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_18  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
m0_14 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_283 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_283 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_286  [key=0, style=solid];
m0_285 -> m0_288  [key=0, style=solid];
m0_285 -> m0_5  [key=2, style=dotted];
m0_285 -> m0_6  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_83  [key=2, style=dotted];
m0_287 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_288 -> m0_283  [key=0, style=bold, color=blue];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_242 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_242 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_245  [key=0, style=solid];
m0_244 -> m0_247  [key=0, style=solid];
m0_244 -> m0_5  [key=2, style=dotted];
m0_244 -> m0_6  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_83  [key=2, style=dotted];
m0_246 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_247 -> m0_242  [key=0, style=bold, color=blue];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_77 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_77 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=0, style=solid];
m0_79 -> m0_82  [key=0, style=solid];
m0_79 -> m0_5  [key=2, style=dotted];
m0_79 -> m0_6  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=2, style=dotted];
m0_81 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=sql];
m0_82 -> m0_77  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_14  [key=0, style=bold, color=blue];
m0_386 -> m0_387  [key=0, style=solid];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_361  [key=2, style=dotted];
m0_388 -> m0_386  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_21  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m0_44 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_44 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_44 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m0_44 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_44 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_44 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_44 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=0, style=solid];
m0_46 -> m0_52  [key=0, style=solid];
m0_46 -> m0_5  [key=2, style=dotted];
m0_46 -> m0_6  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=0, style=solid];
m0_48 -> m0_52  [key=0, style=solid];
m0_48 -> m0_5  [key=2, style=dotted];
m0_48 -> m0_6  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_53  [key=2, style=dotted];
m0_50 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_54  [key=2, style=dotted];
m0_51 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m0_49 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m0_52 -> m0_44  [key=0, style=bold, color=blue];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_138 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_138 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=0, style=solid];
m0_140 -> m0_5  [key=2, style=dotted];
m0_140 -> m0_6  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_83  [key=2, style=dotted];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_142 -> m0_138  [key=0, style=bold, color=blue];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_336 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_336 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_339  [key=0, style=solid];
m0_338 -> m0_341  [key=0, style=solid];
m0_338 -> m0_5  [key=2, style=dotted];
m0_338 -> m0_6  [key=2, style=dotted];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_83  [key=2, style=dotted];
m0_340 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_341 -> m0_336  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_116 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_116 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_116 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_116 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=0, style=solid];
m0_118 -> m0_122  [key=0, style=solid];
m0_118 -> m0_5  [key=2, style=dotted];
m0_118 -> m0_6  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=0, style=solid];
m0_120 -> m0_5  [key=2, style=dotted];
m0_120 -> m0_6  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [key=2, style=dotted];
m0_121 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_122 -> m0_116  [key=0, style=bold, color=blue];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_252 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_252 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_255  [key=0, style=solid];
m0_254 -> m0_257  [key=0, style=solid];
m0_254 -> m0_5  [key=2, style=dotted];
m0_254 -> m0_6  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_83  [key=2, style=dotted];
m0_256 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_257 -> m0_252  [key=0, style=bold, color=blue];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_128 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_128 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_128 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_128 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [key=0, style=solid];
m0_130 -> m0_134  [key=0, style=solid];
m0_130 -> m0_5  [key=2, style=dotted];
m0_130 -> m0_6  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_133  [key=0, style=solid];
m0_132 -> m0_134  [key=0, style=solid];
m0_132 -> m0_5  [key=2, style=dotted];
m0_132 -> m0_6  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_83  [key=2, style=dotted];
m0_133 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_134 -> m0_128  [key=0, style=bold, color=blue];
m0_361 -> m0_366  [key=0, style=solid];
m0_361 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_361 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_361 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_361 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_370  [key=0, style=solid];
m0_366 -> m0_359  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_370  [key=0, style=solid];
m0_367 -> m0_377  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_370  [key=0, style=solid];
m0_368 -> m0_378  [key=2, style=dotted];
m0_368 -> m0_379  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_380  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_376  [key=0, style=solid];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_373  [key=0, style=solid];
m0_370 -> m0_376  [key=0, style=solid];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_381  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_376  [key=0, style=solid];
m0_375 -> m0_376  [key=0, style=solid];
m0_376 -> m0_361  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_101 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_101 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=0, style=solid];
m0_103 -> m0_106  [key=0, style=solid];
m0_103 -> m0_5  [key=2, style=dotted];
m0_103 -> m0_6  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_83  [key=2, style=dotted];
m0_105 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=sql];
m0_106 -> m0_101  [key=0, style=bold, color=blue];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_233 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_233 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_236  [key=0, style=solid];
m0_235 -> m0_237  [key=0, style=solid];
m0_235 -> m0_5  [key=2, style=dotted];
m0_235 -> m0_6  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_83  [key=2, style=dotted];
m0_236 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_237 -> m0_233  [key=0, style=bold, color=blue];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_308  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_306 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_306 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_309  [key=0, style=solid];
m0_308 -> m0_311  [key=0, style=solid];
m0_308 -> m0_5  [key=2, style=dotted];
m0_308 -> m0_6  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_83  [key=2, style=dotted];
m0_310 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_311 -> m0_306  [key=0, style=bold, color=blue];
m0_389 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_245  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_286  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_300  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_346  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_389 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m0_390 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_391 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_392 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m0_393 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m0_394 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_394 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_395 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_396 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=sql];
m0_397 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_398 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=sql];
m0_399 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_400 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_401 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_402 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_403 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_404 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_405 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_406 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_407 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_408 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m0_409 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_410 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=sql];
m0_411 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_412 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_413 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_414 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_415 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_416 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_417 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_418 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_419 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_420 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_421 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_422 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_423 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_424 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_425 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_426 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_427 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_428 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_429 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_430 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_431 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_432 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_433 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_434 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_435 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_436 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_437 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_438 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_439 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_440 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_441 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_442 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=query];
m0_443 -> m0_382  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m0_443 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m0_443 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m0_443 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_5  [key=2, style=dotted, color=green];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_10 -> m3_8  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_4  [key=1, style=dashed, color=red, label="System.Exception"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid, color=red];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_2 -> m5_5  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid, color=red];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_8 -> m5_11  [key=2, style=dotted];
m5_8 -> m5_12  [key=2, style=dotted];
m5_8 -> m5_13  [key=2, style=dotted];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_14 -> m5_3  [key=1, style=dashed, color=red, label="Hangfire.States.FailedState"];
m5_14 -> m5_4  [key=1, style=dashed, color=red, label="Hangfire.States.FailedState"];
m5_14 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.FailedState"];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=2, style=dotted];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> d26  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid, color=red];
m8_5 -> m8_7  [key=2, style=dotted, color=red];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_7  [key=2, style=dotted];
m8_9 -> m8_12  [key=2, style=dotted];
m8_10 -> m8_8  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid, color=green];
m8_29 -> m8_30  [key=0, style=solid, color=green];
m8_29 -> m8_43  [key=2, style=dotted, color=green];
m8_30 -> m8_31  [key=0, style=solid, color=green];
m8_30 -> m8_44  [key=2, style=dotted, color=green];
m8_31 -> m8_32  [key=0, style=solid, color=green];
m8_31 -> m8_39  [key=0, style=solid, color=green];
m8_31 -> m8_40  [key=0, style=solid, color=green];
m8_31 -> m8_42  [key=0, style=solid, color=green];
m8_38 -> m8_31  [key=0, style=solid, color=green];
m8_38 -> m8_48  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid, color=green];
m8_32 -> m8_45  [key=2, style=dotted, color=green];
m8_32 -> m8_38  [key=1, style=dashed, color=green, label=worker];
m8_39 -> m8_42  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid, color=green];
m8_33 -> m8_34  [key=0, style=solid, color=green];
m8_37 -> m8_33  [key=0, style=solid, color=green];
m8_37 -> m8_38  [key=0, style=solid, color=green];
m8_34 -> m8_37  [key=1, style=dashed, color=green, label=jobId];
m8_34 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_46  [key=2, style=dotted];
m8_35 -> m8_37  [key=0, style=solid, color=green];
m8_35 -> m8_36  [key=0, style=solid, color=green];
m8_36 -> m8_37  [key=0, style=solid, color=green];
m8_36 -> m8_47  [key=2, style=dotted, color=green];
m8_41 -> m8_42  [key=0, style=solid, color=green];
m8_41 -> m8_49  [key=2, style=dotted, color=green];
m8_41 -> m8_50  [key=2, style=dotted, color=green];
m8_41 -> m8_51  [key=2, style=dotted, color=green];
m8_42 -> m8_28  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid, color=green];
m8_2 -> m8_5  [key=2, style=dotted, color=green];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m8_3 -> m8_4  [key=0, style=solid, color=green];
m8_3 -> m8_6  [key=2, style=dotted, color=green];
m8_7 -> m8_8  [key=0, style=solid];
m8_11 -> m8_7  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid, color=green];
m8_18 -> m8_24  [key=2, style=dotted, color=green];
m8_17 -> m8_18  [key=0, style=solid, color=green];
m8_17 -> m8_20  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid, color=green];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_25  [key=2, style=dotted];
m8_15 -> m8_17  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_7  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_26  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_27  [key=2, style=dotted];
m8_23 -> m8_14  [key=0, style=bold, color=blue];
m8_52 -> m8_1  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_2  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_3  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_18  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_19  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_29  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_30  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_32  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_36  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_41  [key=1, style=dashed, color=green, label="HangFire.Server.JobManager"];
m8_52 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m8_52 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobManager"];
m9_12 -> m9_18  [key=0, style=solid];
m9_12 -> m9_9  [key=2, style=dotted];
m9_12 -> m9_12  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_53  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_28  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_54  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_37  [key=2, style=dotted];
m9_48 -> m9_74  [key=0, style=solid];
m9_48 -> m9_50  [key=2, style=dotted];
m9_48 -> m9_51  [key=2, style=dotted];
m9_48 -> m9_52  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_52  [key=0, style=solid];
m9_49 -> m9_55  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_56  [key=2, style=dotted];
m9_52 -> m9_44  [key=0, style=bold, color=blue];
m9_16 -> m9_18  [key=0, style=solid];
m9_16 -> m9_20  [key=2, style=dotted];
m9_21 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_21 -> m9_53  [key=0, style=solid];
m9_21 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_22 -> m9_23  [key=0, style=solid, color=green];
m9_22 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m9_23 -> m9_24  [key=0, style=solid, color=green];
m9_23 -> m9_26  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_27  [key=2, style=dotted];
m9_24 -> m9_26  [key=2, style=dotted];
m9_25 -> m9_22  [key=0, style=bold, color=blue];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m9_55 -> m9_83  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_66  [key=2, style=dotted];
m9_57 -> m9_59  [key=1, style=dashed, color=red, label=transaction];
m9_57 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label=connection];
m9_57 -> m9_65  [key=2, style=dotted];
m9_57 -> m9_62  [key=1, style=dashed, color=red, label=transaction];
m9_57 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_59 -> m9_60  [key=0, style=solid, color=red];
m9_59 -> m9_50  [key=2, style=dotted];
m9_59 -> m9_51  [key=2, style=dotted];
m9_59 -> m9_52  [key=2, style=dotted];
m9_59 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m9_59 -> m9_66  [key=2, style=dotted, color=red];
m9_59 -> m9_72  [key=1, style=dashed, color=red, label="lambda expression"];
m9_61 -> m9_45  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid, color=red];
m9_61 -> m9_65  [key=0, style=solid];
m9_61 -> m9_68  [key=2, style=dotted];
m9_61 -> m9_81  [key=1, style=dashed, color=red, label=queueName];
m9_61 -> m9_60  [key=3, color=red, style=bold, label="Local variable string queueName"];
m9_62 -> m9_46  [key=2, style=dotted];
m9_62 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_60  [key=0, style=solid, color=red];
m9_62 -> m9_66  [key=2, style=dotted, color=red];
m9_62 -> m9_80  [key=1, style=dashed, color=red, label="lambda expression"];
m9_54 -> m9_55  [key=0, style=solid];
m9_64 -> m9_55  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_53  [key=0, style=bold, color=blue];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_56 -> m9_42  [key=2, style=dotted];
m9_56 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_58 -> m9_59  [key=0, style=solid, color=red];
m9_58 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_58 -> m9_67  [key=2, style=dotted];
m9_58 -> m9_66  [key=2, style=dotted];
m9_58 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_60 -> m9_61  [key=0, style=solid, color=red];
m9_60 -> m9_62  [key=0, style=solid];
m9_60 -> m9_63  [key=0, style=solid, color=red];
m9_63 -> m9_42  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_63 -> m9_67  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_57  [key=0, style=solid];
m9_65 -> m9_21  [key=0, style=bold, color=blue];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_21  [key=2, style=dotted];
m9_71 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m9_0 -> m9_1  [key=0, style=solid, color=red];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m9_0 -> m9_3  [key=1, style=dashed, color=red, label=int];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m9_0 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_8  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_5 -> m9_14  [key=2, style=dotted];
m9_5 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_5 -> m9_8  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_11  [key=0, style=solid];
m9_6 -> m9_13  [key=2, style=dotted];
m9_3 -> m9_5  [key=0, style=solid, color=red];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_1 -> m9_3  [key=0, style=solid, color=red];
m9_1 -> m9_2  [key=0, style=solid, color=red];
m9_2 -> m9_7  [key=0, style=solid];
m9_2 -> m9_9  [key=2, style=dotted];
m9_2 -> m9_12  [key=2, style=dotted, color=red];
m9_2 -> m9_11  [key=0, style=solid, color=red];
m9_4 -> m9_7  [key=0, style=solid];
m9_4 -> m9_9  [key=2, style=dotted];
m9_4 -> m9_12  [key=2, style=dotted];
m9_4 -> m9_11  [key=0, style=solid, color=red];
m9_4 -> m9_13  [key=2, style=dotted, color=red];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_7 -> m9_15  [key=2, style=dotted];
m9_7 -> m9_16  [key=2, style=dotted];
m9_13 -> m9_15  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_34 -> m9_38  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m9_34 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_42  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid, color=red];
m9_8 -> m9_17  [key=2, style=dotted, color=red];
m9_8 -> m9_18  [key=2, style=dotted, color=red];
m9_8 -> m9_19  [key=2, style=dotted, color=red];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_20  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_21  [key=2, style=dotted];
m9_10 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_10 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_10 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_10 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_10 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_11 -> m9_0  [key=0, style=bold, color=blue];
m9_11 -> m9_13  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_35 -> m9_37  [key=1, style=dashed, color=green, label=fetchedJob];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_43  [key=2, style=dotted];
m9_35 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_41  [key=0, style=solid, color=green];
m9_37 -> m9_44  [key=2, style=dotted, color=green];
m9_37 -> m9_45  [key=2, style=dotted, color=green];
m9_38 -> m9_39  [key=0, style=solid, color=green];
m9_38 -> m9_42  [key=2, style=dotted];
m9_38 -> m9_38  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m9_38 -> m9_46  [key=2, style=dotted, color=green];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_42  [key=2, style=dotted];
m9_39 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_43  [key=2, style=dotted];
m9_40 -> m9_33  [key=0, style=solid];
m9_41 -> m9_37  [key=0, style=bold, color=blue];
m9_41 -> m9_20  [key=0, style=bold, color=blue];
m9_20 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_20 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_20 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_20 -> m9_28  [key=0, style=solid];
m9_20 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_20 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_20 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_36 -> m9_38  [key=0, style=solid, color=green];
m9_36 -> m9_37  [key=0, style=solid, color=green];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m9_33 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m9_29 -> m9_41  [key=0, style=solid];
m9_29 -> m9_12  [key=2, style=dotted];
m9_29 -> m9_9  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid, color=red];
m9_29 -> m9_33  [key=2, style=dotted, color=red];
m9_31 -> m9_41  [key=0, style=solid];
m9_31 -> m9_19  [key=2, style=dotted];
m9_31 -> m9_9  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_34  [key=2, style=dotted];
m9_31 -> m9_36  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_28  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid, color=red];
m9_28 -> m9_30  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid, color=red];
m9_30 -> m9_32  [key=0, style=solid];
m9_30 -> m9_34  [key=2, style=dotted, color=red];
m9_30 -> m9_35  [key=2, style=dotted, color=red];
m9_18 -> m9_10  [key=0, style=bold, color=blue];
m9_14 -> m9_18  [key=0, style=solid];
m9_14 -> m9_9  [key=2, style=dotted];
m9_14 -> m9_19  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_75  [key=2, style=dotted];
m9_93 -> m9_95  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_72 -> m9_73  [key=0, style=solid, color=red];
m9_72 -> m9_48  [key=0, style=solid];
m9_81 -> m9_82  [key=0, style=solid, color=red];
m9_81 -> m9_75  [key=2, style=dotted, color=red];
m9_81 -> m9_71  [key=2, style=dotted, color=red];
m9_80 -> m9_81  [key=0, style=solid, color=red];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_71  [key=2, style=dotted];
m9_69 -> m9_23  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_38  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_37  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_69 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m9_70 -> m9_68  [key=0, style=bold, color=blue];
m9_70 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_73 -> m9_74  [key=0, style=solid, color=red];
m9_73 -> m9_75  [key=2, style=dotted, color=red];
m9_73 -> m9_76  [key=2, style=dotted, color=red];
m9_73 -> d37  [key=2, style=dotted, color=red];
m9_73 -> m9_78  [key=2, style=dotted, color=red];
m9_73 -> m9_79  [key=2, style=dotted, color=red];
m9_74 -> m9_72  [key=0, style=bold, color=blue];
m9_82 -> m9_80  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_91  [key=2, style=dotted];
m9_90 -> m9_88  [key=0, style=bold, color=blue];
m9_94 -> m9_92  [key=0, style=bold, color=blue];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_66  [key=2, style=dotted];
m9_85 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_65  [key=2, style=dotted];
m9_83 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_83 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_66  [key=2, style=dotted];
m9_84 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_67  [key=2, style=dotted];
m9_87 -> m9_55  [key=0, style=bold, color=blue];
m9_96 -> m9_8  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_29  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_30  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_59  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_73  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_60  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_62  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_81  [key=1, style=dashed, color=red, label="HangFire.Server.JobServer"];
m9_96 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_96 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_97 -> m9_81  [key=1, style=dashed, color=red, label=queueName];
m10_132 -> m10_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_132 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_132 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_132 -> m10_133  [key=0, style=solid];
m10_132 -> m10_135  [key=1, style=dashed, color=darkseagreen4, label=double];
m10_134 -> m10_5  [key=2, style=dotted];
m10_134 -> m10_6  [key=2, style=dotted];
m10_134 -> m10_138  [key=0, style=solid];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_45  [key=2, style=dotted];
m10_137 -> m10_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_135  [key=0, style=solid];
m10_135 -> m10_137  [key=0, style=solid];
m10_135 -> m10_136  [key=0, style=solid];
m10_136 -> m10_138  [key=0, style=solid];
m10_136 -> m10_139  [key=2, style=dotted];
m10_138 -> m10_132  [key=0, style=bold, color=blue];
m10_262 -> m10_264  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_262 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_262 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_262 -> m10_263  [key=0, style=solid];
m10_264 -> m10_5  [key=2, style=dotted];
m10_264 -> m10_6  [key=2, style=dotted];
m10_264 -> m10_267  [key=0, style=solid];
m10_265 -> m10_266  [key=0, style=solid];
m10_265 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_266 -> m10_267  [key=0, style=solid];
m10_266 -> m10_45  [key=2, style=dotted];
m10_266 -> m10_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_265  [key=0, style=solid];
m10_267 -> m10_262  [key=0, style=bold, color=blue];
m10_173 -> m10_175  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_173 -> m10_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m10_173 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_173 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_173 -> m10_174  [key=0, style=solid];
m10_173 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m10_173 -> m10_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m10_175 -> m10_5  [key=2, style=dotted];
m10_175 -> m10_6  [key=2, style=dotted];
m10_175 -> m10_180  [key=0, style=solid];
m10_177 -> m10_5  [key=2, style=dotted];
m10_177 -> m10_6  [key=2, style=dotted];
m10_177 -> m10_180  [key=0, style=solid];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_108  [key=2, style=dotted];
m10_179 -> m10_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_176  [key=0, style=solid];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_178  [key=0, style=solid];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=data];
m10_178 -> m10_181  [key=2, style=dotted];
m10_180 -> m10_173  [key=0, style=bold, color=blue];
m10_15 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_15 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_15 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_17 -> m10_5  [key=2, style=dotted];
m10_17 -> m10_6  [key=2, style=dotted];
m10_17 -> m10_23  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_24  [key=2, style=dotted];
m10_18 -> m10_25  [key=2, style=dotted];
m10_18 -> m10_26  [key=2, style=dotted];
m10_18 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_18 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=providers];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [key=0, style=solid];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_29  [key=2, style=dotted];
m10_20 -> m10_23  [key=0, style=solid];
m10_20 -> m10_27  [key=2, style=dotted];
m10_20 -> m10_28  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_30  [key=2, style=dotted];
m10_23 -> m10_15  [key=0, style=bold, color=blue];
m10_294 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_294 -> m10_298  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_294 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_294 -> m10_295  [key=0, style=solid];
m10_296 -> m10_5  [key=2, style=dotted];
m10_296 -> m10_6  [key=2, style=dotted];
m10_296 -> m10_299  [key=0, style=solid];
m10_297 -> m10_298  [key=0, style=solid];
m10_297 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_298 -> m10_299  [key=0, style=solid];
m10_298 -> m10_45  [key=2, style=dotted];
m10_298 -> m10_300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_295 -> m10_296  [key=0, style=solid];
m10_295 -> m10_297  [key=0, style=solid];
m10_299 -> m10_294  [key=0, style=bold, color=blue];
m10_193 -> m10_195  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_193 -> m10_196  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_193 -> m10_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_193 -> m10_194  [key=0, style=solid];
m10_195 -> m10_5  [key=2, style=dotted];
m10_195 -> m10_6  [key=2, style=dotted];
m10_195 -> m10_197  [key=0, style=solid];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_108  [key=2, style=dotted];
m10_196 -> m10_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_194 -> m10_195  [key=0, style=solid];
m10_194 -> m10_196  [key=0, style=solid];
m10_197 -> m10_193  [key=0, style=bold, color=blue];
m10_221 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_221 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_221 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_221 -> m10_222  [key=0, style=solid];
m10_223 -> m10_5  [key=2, style=dotted];
m10_223 -> m10_6  [key=2, style=dotted];
m10_223 -> m10_226  [key=0, style=solid];
m10_224 -> m10_225  [key=0, style=solid];
m10_224 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_45  [key=2, style=dotted];
m10_225 -> m10_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_222 -> m10_223  [key=0, style=solid];
m10_222 -> m10_224  [key=0, style=solid];
m10_226 -> m10_221  [key=0, style=bold, color=blue];
m10_315 -> m10_317  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_315 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_315 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_315 -> m10_316  [key=0, style=solid];
m10_317 -> m10_5  [key=2, style=dotted];
m10_317 -> m10_6  [key=2, style=dotted];
m10_317 -> m10_320  [key=0, style=solid];
m10_318 -> m10_319  [key=0, style=solid];
m10_318 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_319 -> m10_320  [key=0, style=solid];
m10_319 -> m10_45  [key=2, style=dotted];
m10_319 -> m10_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_316 -> m10_317  [key=0, style=solid];
m10_316 -> m10_318  [key=0, style=solid];
m10_320 -> m10_315  [key=0, style=bold, color=blue];
m10_253 -> m10_255  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_253 -> m10_257  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_253 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_253 -> m10_254  [key=0, style=solid];
m10_255 -> m10_5  [key=2, style=dotted];
m10_255 -> m10_6  [key=2, style=dotted];
m10_255 -> m10_258  [key=0, style=solid];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_45  [key=2, style=dotted];
m10_257 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_256  [key=0, style=solid];
m10_258 -> m10_253  [key=0, style=bold, color=blue];
m10_63 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_63 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_63 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_63 -> m10_64  [key=0, style=solid];
m10_65 -> m10_5  [key=2, style=dotted];
m10_65 -> m10_6  [key=2, style=dotted];
m10_65 -> m10_68  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_45  [key=2, style=dotted];
m10_67 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=0, style=solid];
m10_68 -> m10_63  [key=0, style=bold, color=blue];
m10_156 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_156 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_156 -> m10_163  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_156 -> m10_157  [key=0, style=solid];
m10_158 -> m10_5  [key=2, style=dotted];
m10_158 -> m10_6  [key=2, style=dotted];
m10_158 -> m10_160  [key=0, style=solid];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_161  [key=2, style=dotted];
m10_159 -> m10_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_157 -> m10_158  [key=0, style=solid];
m10_157 -> m10_159  [key=0, style=solid];
m10_160 -> m10_156  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=2, style=dotted];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_101 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_101 -> m10_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_101 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_101 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_103 -> m10_5  [key=2, style=dotted];
m10_103 -> m10_6  [key=2, style=dotted];
m10_103 -> m10_107  [key=0, style=solid];
m10_105 -> m10_5  [key=2, style=dotted];
m10_105 -> m10_6  [key=2, style=dotted];
m10_105 -> m10_107  [key=0, style=solid];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_108  [key=2, style=dotted];
m10_106 -> m10_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_104  [key=0, style=solid];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_106  [key=0, style=solid];
m10_107 -> m10_101  [key=0, style=bold, color=blue];
m10_231 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_231 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_231 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_231 -> m10_232  [key=0, style=solid];
m10_233 -> m10_5  [key=2, style=dotted];
m10_233 -> m10_6  [key=2, style=dotted];
m10_233 -> m10_236  [key=0, style=solid];
m10_234 -> m10_235  [key=0, style=solid];
m10_234 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_45  [key=2, style=dotted];
m10_235 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_232 -> m10_233  [key=0, style=solid];
m10_232 -> m10_234  [key=0, style=solid];
m10_236 -> m10_231  [key=0, style=bold, color=blue];
m10_244 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_244 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_244 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_244 -> m10_245  [key=0, style=solid];
m10_246 -> m10_5  [key=2, style=dotted];
m10_246 -> m10_6  [key=2, style=dotted];
m10_246 -> m10_249  [key=0, style=solid];
m10_247 -> m10_248  [key=0, style=solid];
m10_247 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_45  [key=2, style=dotted];
m10_248 -> m10_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_247  [key=0, style=solid];
m10_249 -> m10_244  [key=0, style=bold, color=blue];
m10_185 -> m10_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_185 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_185 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_185 -> m10_186  [key=0, style=solid];
m10_187 -> m10_5  [key=2, style=dotted];
m10_187 -> m10_6  [key=2, style=dotted];
m10_187 -> m10_189  [key=0, style=solid];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_108  [key=2, style=dotted];
m10_188 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_188  [key=0, style=solid];
m10_189 -> m10_185  [key=0, style=bold, color=blue];
m10_112 -> m10_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_112 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_112 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_112 -> m10_120  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_114 -> m10_5  [key=2, style=dotted];
m10_114 -> m10_6  [key=2, style=dotted];
m10_114 -> m10_118  [key=0, style=solid];
m10_116 -> m10_5  [key=2, style=dotted];
m10_116 -> m10_6  [key=2, style=dotted];
m10_116 -> m10_118  [key=0, style=solid];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_45  [key=2, style=dotted];
m10_117 -> m10_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_115  [key=0, style=solid];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_117  [key=0, style=solid];
m10_118 -> m10_112  [key=0, style=bold, color=blue];
m10_86 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_86 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_86 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_86 -> m10_87  [key=0, style=solid];
m10_88 -> m10_5  [key=2, style=dotted];
m10_88 -> m10_6  [key=2, style=dotted];
m10_88 -> m10_91  [key=0, style=solid];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_45  [key=2, style=dotted];
m10_90 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_89  [key=0, style=solid];
m10_91 -> m10_86  [key=0, style=bold, color=blue];
m10_306 -> m10_308  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_306 -> m10_310  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_306 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_306 -> m10_307  [key=0, style=solid];
m10_308 -> m10_5  [key=2, style=dotted];
m10_308 -> m10_6  [key=2, style=dotted];
m10_308 -> m10_311  [key=0, style=solid];
m10_309 -> m10_310  [key=0, style=solid];
m10_309 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_45  [key=2, style=dotted];
m10_310 -> m10_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_309  [key=0, style=solid];
m10_311 -> m10_306  [key=0, style=bold, color=blue];
m10_35 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m10_35 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_35 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_35 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_35 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m10_35 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_35 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_35 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_37 -> m10_5  [key=2, style=dotted];
m10_37 -> m10_6  [key=2, style=dotted];
m10_37 -> m10_43  [key=0, style=solid];
m10_39 -> m10_5  [key=2, style=dotted];
m10_39 -> m10_6  [key=2, style=dotted];
m10_39 -> m10_43  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m10_40 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_45  [key=2, style=dotted];
m10_42 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=0, style=solid];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=0, style=solid];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m10_41 -> m10_44  [key=2, style=dotted];
m10_43 -> m10_35  [key=0, style=bold, color=blue];
m10_143 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_143 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m10_143 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_143 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_146  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m10_143 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m10_145 -> m10_5  [key=2, style=dotted];
m10_145 -> m10_6  [key=2, style=dotted];
m10_145 -> m10_150  [key=0, style=solid];
m10_147 -> m10_5  [key=2, style=dotted];
m10_147 -> m10_6  [key=2, style=dotted];
m10_147 -> m10_150  [key=0, style=solid];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_151  [key=2, style=dotted];
m10_149 -> m10_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_146  [key=0, style=solid];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_148  [key=0, style=solid];
m10_150 -> m10_143  [key=0, style=bold, color=blue];
m10_321 -> m10_322  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_34  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_57  [key=2, style=dotted];
m10_47 -> m10_58  [key=2, style=dotted];
m10_47 -> m10_59  [key=2, style=dotted];
m10_47 -> m10_60  [key=2, style=dotted];
m10_47 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m10_47 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_62  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_82  [key=2, style=dotted];
m10_70 -> m10_59  [key=2, style=dotted];
m10_70 -> m10_83  [key=2, style=dotted];
m10_70 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m10_70 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m10_70 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_82  [key=2, style=dotted];
m10_93 -> m10_59  [key=2, style=dotted];
m10_93 -> m10_83  [key=2, style=dotted];
m10_93 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m10_93 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_82  [key=2, style=dotted];
m10_110 -> m10_62  [key=2, style=dotted];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_82  [key=2, style=dotted];
m10_120 -> m10_59  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_59  [key=2, style=dotted];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_59  [key=2, style=dotted];
m10_154 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m10_154 -> m10_153  [key=0, style=solid];
m10_154 -> m10_62  [key=2, style=dotted];
m10_163 -> m10_164  [key=0, style=solid];
m10_163 -> m10_59  [key=2, style=dotted];
m10_163 -> m10_166  [key=2, style=dotted];
m10_163 -> m10_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_163 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_57  [key=2, style=dotted];
m10_183 -> m10_62  [key=2, style=dotted];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_62  [key=2, style=dotted];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_62  [key=2, style=dotted];
m10_209 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_211  [key=2, style=dotted];
m10_209 -> m10_58  [key=2, style=dotted];
m10_209 -> m10_62  [key=2, style=dotted];
m10_218 -> m10_219  [key=0, style=solid];
m10_218 -> m10_59  [key=2, style=dotted];
m10_218 -> m10_220  [key=2, style=dotted];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_59  [key=2, style=dotted];
m10_228 -> m10_230  [key=2, style=dotted];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_59  [key=2, style=dotted];
m10_238 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_251 -> m10_252  [key=0, style=solid];
m10_251 -> m10_59  [key=2, style=dotted];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_59  [key=2, style=dotted];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_59  [key=2, style=dotted];
m10_269 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_283 -> m10_284  [key=0, style=solid];
m10_283 -> m10_59  [key=2, style=dotted];
m10_292 -> m10_293  [key=0, style=solid];
m10_292 -> m10_59  [key=2, style=dotted];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_59  [key=2, style=dotted];
m10_301 -> m10_304  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_59  [key=2, style=dotted];
m10_313 -> m10_230  [key=2, style=dotted];
m10_322 -> m10_323  [key=0, style=solid];
m10_322 -> m10_59  [key=2, style=dotted];
m10_322 -> m10_230  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_33 -> m10_31  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_55  [key=0, style=solid];
m10_52 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m10_52 -> m10_51  [key=0, style=solid];
m10_52 -> m10_61  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_51 -> m10_53  [key=0, style=solid];
m10_51 -> m10_52  [key=0, style=solid];
m10_49 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m10_49 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m10_49 -> m10_50  [key=0, style=solid];
m10_69 -> m10_70  [key=0, style=solid];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_73  [key=0, style=solid];
m10_73 -> m10_59  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m10_74 -> m10_75  [key=0, style=solid];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_85  [key=2, style=dotted];
m10_92 -> m10_93  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_96  [key=0, style=solid];
m10_96 -> m10_59  [key=2, style=dotted];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_99  [key=2, style=dotted];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_100  [key=2, style=dotted];
m10_109 -> m10_110  [key=0, style=solid];
m10_111 -> m10_109  [key=0, style=bold, color=blue];
m10_119 -> m10_120  [key=0, style=solid];
m10_121 -> m10_119  [key=0, style=bold, color=blue];
m10_127 -> m10_128  [key=0, style=solid];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_131  [key=2, style=dotted];
m10_140 -> m10_141  [key=0, style=solid];
m10_142 -> m10_140  [key=0, style=bold, color=blue];
m10_152 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m10_152 -> m10_153  [key=0, style=solid];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_155  [key=0, style=solid];
m10_162 -> m10_163  [key=0, style=solid];
m10_164 -> m10_165  [key=0, style=solid];
m10_167 -> m10_168  [key=0, style=solid];
m10_170 -> m10_171  [key=0, style=solid];
m10_182 -> m10_183  [key=0, style=solid];
m10_184 -> m10_182  [key=0, style=bold, color=blue];
m10_190 -> m10_191  [key=0, style=solid];
m10_192 -> m10_190  [key=0, style=bold, color=blue];
m10_198 -> m10_199  [key=0, style=solid];
m10_200 -> m10_198  [key=0, style=bold, color=blue];
m10_208 -> m10_209  [key=0, style=solid];
m10_210 -> m10_208  [key=0, style=bold, color=blue];
m10_217 -> m10_218  [key=0, style=solid];
m10_219 -> m10_217  [key=0, style=bold, color=blue];
m10_227 -> m10_228  [key=0, style=solid];
m10_229 -> m10_227  [key=0, style=bold, color=blue];
m10_237 -> m10_238  [key=0, style=solid];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_241  [key=0, style=solid];
m10_241 -> m10_242  [key=0, style=solid];
m10_250 -> m10_251  [key=0, style=solid];
m10_252 -> m10_250  [key=0, style=bold, color=blue];
m10_259 -> m10_260  [key=0, style=solid];
m10_261 -> m10_259  [key=0, style=bold, color=blue];
m10_268 -> m10_269  [key=0, style=solid];
m10_270 -> m10_271  [key=0, style=solid];
m10_270 -> m10_272  [key=0, style=solid];
m10_272 -> m10_273  [key=0, style=solid];
m10_282 -> m10_283  [key=0, style=solid];
m10_284 -> m10_282  [key=0, style=bold, color=blue];
m10_291 -> m10_292  [key=0, style=solid];
m10_293 -> m10_291  [key=0, style=bold, color=blue];
m10_300 -> m10_301  [key=0, style=solid];
m10_302 -> m10_303  [key=0, style=solid];
m10_302 -> m10_304  [key=0, style=solid];
m10_304 -> m10_305  [key=0, style=solid];
m10_312 -> m10_313  [key=0, style=solid];
m10_314 -> m10_312  [key=0, style=bold, color=blue];
m10_323 -> m10_321  [key=0, style=bold, color=blue];
m10_56 -> m10_46  [key=0, style=bold, color=blue];
m10_50 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m10_50 -> m10_51  [key=0, style=solid];
m10_81 -> m10_69  [key=0, style=bold, color=blue];
m10_72 -> m10_81  [key=0, style=solid];
m10_77 -> m10_80  [key=0, style=solid];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_84  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_98 -> m10_92  [key=0, style=bold, color=blue];
m10_95 -> m10_98  [key=0, style=solid];
m10_130 -> m10_127  [key=0, style=bold, color=blue];
m10_155 -> m10_152  [key=0, style=bold, color=blue];
m10_165 -> m10_162  [key=0, style=bold, color=blue];
m10_169 -> m10_167  [key=0, style=bold, color=blue];
m10_168 -> m10_169  [key=0, style=solid];
m10_172 -> m10_170  [key=0, style=bold, color=blue];
m10_171 -> m10_172  [key=0, style=solid];
m10_242 -> m10_237  [key=0, style=bold, color=blue];
m10_240 -> m10_242  [key=0, style=solid];
m10_240 -> m10_243  [key=2, style=dotted];
m10_273 -> m10_268  [key=0, style=bold, color=blue];
m10_271 -> m10_273  [key=0, style=solid];
m10_271 -> m10_243  [key=2, style=dotted];
m10_303 -> m10_305  [key=0, style=solid];
m10_303 -> m10_243  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_305 -> m10_300  [key=0, style=bold, color=blue];
m10_274 -> m10_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_274 -> m10_278  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_274 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_274 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_274 -> m10_275  [key=0, style=solid];
m10_274 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_276 -> m10_5  [key=2, style=dotted];
m10_276 -> m10_6  [key=2, style=dotted];
m10_276 -> m10_281  [key=0, style=solid];
m10_278 -> m10_5  [key=2, style=dotted];
m10_278 -> m10_6  [key=2, style=dotted];
m10_278 -> m10_281  [key=0, style=solid];
m10_279 -> m10_280  [key=0, style=solid];
m10_279 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_280 -> m10_281  [key=0, style=solid];
m10_280 -> m10_45  [key=2, style=dotted];
m10_280 -> m10_282  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_275 -> m10_276  [key=0, style=solid];
m10_275 -> m10_277  [key=0, style=solid];
m10_277 -> m10_278  [key=0, style=solid];
m10_277 -> m10_279  [key=0, style=solid];
m10_281 -> m10_274  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_212 -> m10_214  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_212 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_212 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_212 -> m10_213  [key=0, style=solid];
m10_214 -> m10_5  [key=2, style=dotted];
m10_214 -> m10_6  [key=2, style=dotted];
m10_214 -> m10_216  [key=0, style=solid];
m10_215 -> m10_216  [key=0, style=solid];
m10_215 -> m10_45  [key=2, style=dotted];
m10_215 -> m10_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_215  [key=0, style=solid];
m10_216 -> m10_212  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_0 -> m10_2  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m10_0 -> m10_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_1 -> m10_3  [key=0, style=solid, color=green];
m10_2 -> m10_4  [key=0, style=solid, color=green];
m10_2 -> m10_5  [key=2, style=dotted, color=green];
m10_2 -> m10_6  [key=2, style=dotted, color=green];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_122 -> m10_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_122 -> m10_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_122 -> m10_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_122 -> m10_123  [key=0, style=solid];
m10_124 -> m10_5  [key=2, style=dotted];
m10_124 -> m10_6  [key=2, style=dotted];
m10_124 -> m10_126  [key=0, style=solid];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_45  [key=2, style=dotted];
m10_125 -> m10_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_125  [key=0, style=solid];
m10_126 -> m10_122  [key=0, style=bold, color=blue];
m10_285 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_285 -> m10_289  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_285 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_285 -> m10_286  [key=0, style=solid];
m10_287 -> m10_5  [key=2, style=dotted];
m10_287 -> m10_6  [key=2, style=dotted];
m10_287 -> m10_290  [key=0, style=solid];
m10_288 -> m10_289  [key=0, style=solid];
m10_288 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_289 -> m10_290  [key=0, style=solid];
m10_289 -> m10_45  [key=2, style=dotted];
m10_289 -> m10_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_286 -> m10_287  [key=0, style=solid];
m10_286 -> m10_288  [key=0, style=solid];
m10_290 -> m10_285  [key=0, style=bold, color=blue];
m10_201 -> m10_202  [key=0, style=solid];
m10_203 -> m10_6  [key=2, style=dotted];
m10_203 -> m10_205  [key=0, style=solid];
m10_203 -> m10_207  [key=2, style=dotted];
m10_204 -> m10_205  [key=0, style=solid];
m10_204 -> m10_108  [key=2, style=dotted];
m10_204 -> m10_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_204 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_202 -> m10_203  [key=0, style=solid];
m10_202 -> m10_204  [key=0, style=solid];
m10_202 -> m10_202  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_202 -> m10_206  [key=2, style=dotted];
m10_205 -> m10_201  [key=0, style=bold, color=blue];
m10_324 -> m10_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_289  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_297  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_298  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_309  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_310  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_318  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_324 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m10_325 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m10_326 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_327 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m10_328 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m10_330 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_331 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_332 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_333 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_334 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_335 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_336 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_337 -> m10_120  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_338 -> m10_120  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_339 -> m10_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_340 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_341 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label=double];
m10_342 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label=double];
m10_344 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_345 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_346 -> m10_163  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_347 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_348 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=data];
m10_349 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_350 -> m10_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_351 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_352 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_353 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_354 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_355 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_356 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_357 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_358 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_359 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_360 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_361 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_362 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_363 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_364 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_365 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_366 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_367 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_368 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_369 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_370 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_371 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_372 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_373 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_374 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_375 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_376 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_377 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_329 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_329 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_329 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_343 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_7  [key=2, style=dotted];
m13_2 -> m13_8  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_9  [key=2, style=dotted];
m13_3 -> m13_8  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_10  [key=2, style=dotted];
m13_4 -> m13_8  [key=2, style=dotted];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m14_7 -> m14_8  [key=0, style=solid, color=red];
m14_8 -> m14_9  [key=0, style=solid, color=red];
m14_8 -> m14_10  [key=2, style=dotted, color=red];
m14_9 -> m14_7  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_0 -> m14_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m14_0 -> m14_8  [key=1, style=dashed, color=red, label=string];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_1 -> m14_3  [key=0, style=solid, color=red];
m14_3 -> m14_4  [key=0, style=solid, color=red];
m14_3 -> m14_6  [key=2, style=dotted, color=red];
m14_3 -> m14_7  [key=1, style=dashed, color=red, label="lambda expression"];
m14_2 -> m14_4  [key=0, style=solid, color=red];
m14_2 -> m14_5  [key=2, style=dotted, color=red];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_11 -> m14_8  [key=1, style=dashed, color=red, label=string];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_16 -> m15_9  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_17 -> m15_15  [key=0, style=bold, color=blue];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_7 -> m15_9  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_8 -> m15_6  [key=0, style=bold, color=blue];
m15_24 -> m15_25  [key=0, style=solid];
m15_31 -> m15_32  [key=0, style=solid, color=green];
m15_32 -> m15_33  [key=0, style=solid, color=green];
m15_32 -> d4  [key=2, style=dotted, color=green];
m15_32 -> m15_14  [key=2, style=dotted, color=green];
m15_33 -> m15_31  [key=0, style=bold, color=blue];
m15_25 -> d4  [key=2, style=dotted];
m15_25 -> m15_14  [key=2, style=dotted];
m15_25 -> m15_26  [key=0, style=solid];
m15_11 -> m15_14  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_13  [key=2, style=dotted];
m15_19 -> m15_14  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_18 -> m15_19  [key=0, style=solid];
m15_26 -> m15_24  [key=0, style=bold, color=blue];
m15_12 -> m15_10  [key=0, style=bold, color=blue];
m15_20 -> m15_18  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction"];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m15_1 -> m15_3  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid, color=green];
m15_28 -> m15_32  [key=1, style=dashed, color=green, label=string];
m15_29 -> m15_30  [key=0, style=solid, color=green];
m15_29 -> m15_9  [key=2, style=dotted, color=green];
m15_29 -> m15_31  [key=1, style=dashed, color=green, label="lambda expression"];
m15_30 -> m15_28  [key=0, style=bold, color=blue];
m15_3 -> m15_4  [key=0, style=solid];
m15_2 -> m15_4  [key=0, style=solid];
m15_2 -> m15_5  [key=2, style=dotted];
m15_4 -> m15_0  [key=0, style=bold, color=blue];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_22 -> m15_9  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_23 -> m15_21  [key=0, style=bold, color=blue];
m15_34 -> m15_29  [key=1, style=dashed, color=green, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob"];
m15_34 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob"];
m15_34 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob"];
m15_34 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob"];
m15_34 -> m15_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob"];
m15_41 -> m15_32  [key=1, style=dashed, color=green, label=string];
m15_42 -> m15_32  [key=1, style=dashed, color=green, label="System.Collections.Generic.Dictionary<string, string>"];
m15_38 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_39 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_40 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m15_35 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_36 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_37 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=0, style=solid];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_16  [key=2, style=dotted];
m16_12 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_10 -> m16_13  [key=0, style=solid];
m16_10 -> m16_14  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_15  [key=2, style=dotted];
m16_11 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m16_13 -> m16_8  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_6  [key=2, style=dotted];
m16_4 -> m16_7  [key=2, style=dotted];
m16_5 -> m16_3  [key=0, style=bold, color=blue];
m16_17 -> m16_18  [key=0, style=solid];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_20  [key=2, style=dotted];
m16_19 -> m16_17  [key=0, style=bold, color=blue];
m16_21 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m16_21 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m16_21 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m16_21 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m16_21 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m16_22 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_4  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
m18_2 -> m18_5  [key=1, style=dashed, color=red, label=int];
m18_2 -> m18_6  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m18_2 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m18_2 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPerformer"];
m18_3 -> m18_4  [key=0, style=solid, color=red];
m18_4 -> m18_5  [key=0, style=solid, color=red];
m18_5 -> m18_6  [key=0, style=solid, color=red];
m18_6 -> m18_7  [key=0, style=solid, color=red];
m18_7 -> m18_8  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_2  [key=0, style=bold, color=blue];
m18_10 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m18_10 -> m18_4  [key=1, style=dashed, color=red, label="HangFire.Server.ServerContext"];
m18_10 -> m18_5  [key=1, style=dashed, color=red, label="HangFire.Server.ServerContext"];
m18_10 -> m18_6  [key=1, style=dashed, color=red, label="HangFire.Server.ServerContext"];
m18_10 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m18_10 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m20_18 -> m20_19  [key=0, style=solid, color=red];
m20_14 -> m20_15  [key=0, style=solid, color=red];
m20_14 -> m20_16  [key=2, style=dotted, color=red];
m20_14 -> m20_17  [key=2, style=dotted, color=red];
m20_19 -> m20_20  [key=0, style=solid, color=red];
m20_19 -> m20_16  [key=2, style=dotted, color=red];
m20_19 -> m20_17  [key=2, style=dotted, color=red];
m20_9 -> m20_10  [key=0, style=solid, color=red];
m20_13 -> m20_14  [key=0, style=solid, color=red];
m20_10 -> m20_11  [key=0, style=solid, color=red];
m20_10 -> m20_12  [key=2, style=dotted, color=red];
m20_11 -> m20_9  [key=0, style=bold, color=blue];
m20_15 -> m20_13  [key=0, style=bold, color=blue];
m20_20 -> m20_18  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid, color=red];
m20_0 -> m20_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m20_0 -> m20_4  [key=1, style=dashed, color=red, label=IRedisTransaction];
m20_0 -> m20_14  [key=1, style=dashed, color=red, label=string];
m20_0 -> m20_5  [key=1, style=dashed, color=red, label=IRedisTransaction];
m20_0 -> m20_19  [key=1, style=dashed, color=red, label=string];
m20_1 -> m20_2  [key=0, style=solid, color=red];
m20_1 -> m20_3  [key=0, style=solid, color=red];
m20_3 -> m20_4  [key=0, style=solid, color=red];
m20_3 -> m20_8  [key=2, style=dotted, color=red];
m20_3 -> m20_9  [key=1, style=dashed, color=red, label="lambda expression"];
m20_4 -> m20_5  [key=0, style=solid, color=red];
m20_4 -> m20_8  [key=2, style=dotted, color=red];
m20_4 -> m20_13  [key=1, style=dashed, color=red, label="lambda expression"];
m20_5 -> m20_6  [key=0, style=solid, color=red];
m20_5 -> m20_8  [key=2, style=dotted, color=red];
m20_5 -> m20_18  [key=1, style=dashed, color=red, label="lambda expression"];
m20_2 -> m20_6  [key=0, style=solid, color=red];
m20_2 -> m20_7  [key=2, style=dotted, color=red];
m20_6 -> m20_0  [key=0, style=bold, color=blue];
m20_21 -> m20_14  [key=1, style=dashed, color=red, label=string];
m20_21 -> m20_19  [key=1, style=dashed, color=red, label=string];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_12  [key=0, style=solid];
m21_10 -> m21_18  [key=2, style=dotted];
m21_18 -> m21_19  [key=0, style=solid];
m21_18 -> m21_20  [key=2, style=dotted];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_17  [key=2, style=dotted];
m21_9 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label=basePath];
m21_9 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=basePath];
m21_7 -> m21_8  [key=0, style=solid, color=red];
m21_7 -> m21_7  [key=1, style=dashed, color=red, label=sbIndex];
m21_0 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label=HttpRequestBase];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2 -> m21_3  [key=0, style=solid, color=red];
m21_2 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label=pathInfo];
m21_1 -> m21_2  [key=0, style=solid, color=green];
m21_1 -> m21_14  [key=2, style=dotted];
m21_1 -> m21_4  [key=1, style=dashed, color=red, label=sb];
m21_1 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label=sb];
m21_1 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label=sb];
m21_1 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label=sb];
m21_3 -> m21_4  [key=0, style=solid, color=red];
m21_3 -> m21_7  [key=2, style=dotted];
m21_3 -> m21_8  [key=2, style=dotted];
m21_3 -> m21_5  [key=1, style=dashed, color=red, label=pathInfoIndex];
m21_4 -> m21_5  [key=0, style=solid, color=red];
m21_4 -> m21_9  [key=2, style=dotted];
m21_4 -> m21_7  [key=2, style=dotted];
m21_4 -> m21_6  [key=1, style=dashed, color=red, label=sbIndex];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_10  [key=2, style=dotted];
m21_5 -> m21_9  [key=0, style=solid];
m21_5 -> m21_15  [key=2, style=dotted];
m21_6 -> m21_0  [key=0, style=bold, color=blue];
m21_6 -> m21_7  [key=0, style=solid, color=red];
m21_6 -> m21_16  [key=2, style=dotted];
m21_19 -> m21_15  [key=0, style=bold, color=blue];
m21_17 -> m21_18  [key=0, style=solid];
m21_8 -> m21_5  [key=0, style=solid];
m21_8 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label=pathInfoIndex];
m21_29 -> m21_30  [key=0, style=solid];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_41  [key=2, style=dotted];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_42  [key=2, style=dotted];
m21_33 -> m21_34  [key=0, style=solid];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_43  [key=2, style=dotted];
m21_35 -> m21_30  [key=0, style=solid];
m21_35 -> m21_44  [key=2, style=dotted];
m21_38 -> m21_39  [key=0, style=solid];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_45  [key=2, style=dotted];
m21_39 -> m21_46  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_36  [key=0, style=solid];
m21_30 -> m21_37  [key=0, style=solid];
m21_30 -> m21_40  [key=0, style=solid];
m21_37 -> m21_38  [key=0, style=solid];
m21_36 -> m21_40  [key=0, style=solid];
m21_40 -> m21_29  [key=0, style=bold, color=blue];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_19  [key=2, style=dotted];
m21_12 -> m21_14  [key=2, style=dotted];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label=basePath];
m21_13 -> m21_0  [key=0, style=bold, color=blue];
m21_13 -> m21_11  [key=0, style=bold, color=blue];
m21_67 -> m21_0  [key=3, color=darkorchid, style=bold, label="Field variable HangFire.Server.WorkerPool _pool"];
m21_43 -> m21_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_43 -> m21_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_43 -> m21_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_43 -> m21_47  [key=0, style=solid];
m21_43 -> m21_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_43 -> m21_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_43 -> m21_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_49 -> m21_63  [key=0, style=solid, color=green];
m21_48 -> m21_49  [key=0, style=solid, color=green];
m21_48 -> m21_50  [key=0, style=solid];
m21_48 -> m21_64  [key=2, style=dotted];
m21_48 -> m21_65  [key=2, style=dotted];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_66  [key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_67  [key=2, style=dotted];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_58  [key=0, style=solid];
m21_54 -> m21_68  [key=2, style=dotted];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_7  [key=2, style=dotted];
m21_57 -> m21_69  [key=2, style=dotted];
m21_47 -> m21_48  [key=0, style=solid];
m21_50 -> m21_50  [key=3, color=darkorchid, style=bold, label="Local variable System.Exception exception"];
m21_50 -> m21_51  [key=0, style=solid];
m21_50 -> m21_55  [key=3, color=darkorchid, style=bold, label="Local variable System.Exception exception"];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_72  [key=2, style=dotted];
m21_51 -> m21_52  [key=0, style=solid];
m21_51 -> m21_50  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Server.ServerJobDescriptor jobDescriptor"];
m21_55 -> m21_56  [key=0, style=solid];
m21_58 -> m21_59  [key=0, style=solid];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_59  [key=1, style=dashed, color=darkseagreen4, label=exception];
m21_56 -> m21_61  [key=1, style=dashed, color=darkseagreen4, label=exception];
m21_60 -> m21_65  [key=2, style=dotted];
m21_60 -> m21_62  [key=0, style=solid];
m21_60 -> m21_70  [key=2, style=dotted];
m21_61 -> m21_65  [key=2, style=dotted];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_71  [key=2, style=dotted];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_61  [key=0, style=solid];
m21_63 -> m21_43  [key=0, style=bold, color=blue];
m21_16 -> m21_17  [key=0, style=solid];
m21_21 -> m21_22  [key=0, style=solid];
m21_23 -> m21_24  [key=0, style=solid, color=green];
m21_23 -> m21_27  [key=2, style=dotted, color=green];
m21_22 -> m21_23  [key=0, style=solid, color=green];
m21_22 -> m21_26  [key=2, style=dotted];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_28  [key=2, style=dotted];
m21_25 -> m21_21  [key=0, style=bold, color=blue];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_73 -> m21_2  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m21_73 -> m21_23  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m21_73 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_73 -> m21_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_2  [key=0, style=bold, color=blue];
m22_5 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m23_3 -> m23_4  [key=0, style=solid, color=red];
m23_4 -> m23_5  [key=0, style=solid, color=red];
m23_5 -> m23_6  [key=0, style=solid, color=red];
m23_5 -> m23_7  [key=2, style=dotted, color=red];
m23_5 -> m23_8  [key=2, style=dotted, color=red];
m23_6 -> m23_3  [key=0, style=bold, color=blue];
m23_9 -> m23_10  [key=0, style=solid, color=red];
m23_9 -> m23_11  [key=1, style=dashed, color=red, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m23_10 -> m23_11  [key=0, style=solid, color=red];
m23_10 -> m23_13  [key=2, style=dotted, color=red];
m23_11 -> m23_12  [key=0, style=solid, color=red];
m23_11 -> m23_14  [key=2, style=dotted, color=red];
m23_12 -> m23_9  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_15 -> m23_1  [key=1, style=dashed, color=red, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m23_15 -> m23_5  [key=1, style=dashed, color=red, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m23_15 -> m23_10  [key=1, style=dashed, color=red, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m23_15 -> m23_11  [key=1, style=dashed, color=red, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
}
