digraph  {
n48 [label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", span=""];
n0 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()"];
n1 [label="_connection = new Mock<IStorageConnection>()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()"];
n2 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()"];
n3 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr"];
n4 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()"];
n5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, JobId, Queue))", span="22-23", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()"];
n6 [label="Assert.Equal(''connection'', exception.ParamName)", span="25-25", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0];
n8 [label="Entry Unk.>", span="", cluster="Unk.>"];
n10 [label="Entry lambda expression", span="23-23", cluster="lambda expression"];
n7 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()"];
n9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n11 [label="new SqlServerProcessingJob(null, JobId, Queue)", span="23-23", cluster="lambda expression"];
n12 [label="Exit lambda expression", span="23-23", cluster="lambda expression"];
n13 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)"];
n14 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()"];
n15 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, null, Queue))", span="31-32", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()"];
n16 [label="Assert.Equal(''jobId'', exception.ParamName)", span="34-34", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()"];
n18 [label="Entry lambda expression", span="32-32", cluster="lambda expression"];
n17 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()"];
n19 [label="new SqlServerProcessingJob(_connection.Object, null, Queue)", span="32-32", cluster="lambda expression"];
n20 [label="Exit lambda expression", span="32-32", cluster="lambda expression"];
n21 [label="Entry SqlServerProcessingJob.cstr", span="", cluster="SqlServerProcessingJob.cstr"];
n22 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()"];
n23 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, JobId, null))", span="40-41", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()"];
n24 [label="Assert.Equal(''queue'', exception.ParamName)", span="43-43", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()"];
n26 [label="Entry lambda expression", span="41-41", cluster="lambda expression"];
n25 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()"];
n27 [label="new SqlServerProcessingJob(_connection.Object, JobId, null)", span="41-41", cluster="lambda expression"];
n28 [label="Exit lambda expression", span="41-41", cluster="lambda expression"];
n29 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()"];
n30 [label="var processingJob = CreateProcessingJob()", span="49-49", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()"];
n31 [label="Assert.Equal(JobId, processingJob.JobId)", span="51-51", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()"];
n34 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()"];
n32 [label="Assert.Equal(Queue, processingJob.Queue)", span="52-52", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()"];
n33 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()"];
n35 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()"];
n36 [label="var processingJob = CreateProcessingJob()", span="58-58", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()"];
n37 [label="processingJob.Dispose()", span="60-60", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()"];
n38 [label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", span="62-62", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()"];
n40 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()"];
n39 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()"];
n41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify"];
n42 [label="Entry lambda expression", span="62-62", cluster="lambda expression"];
n43 [label="x.DeleteJobFromQueue(JobId, Queue)", span="62-62", cluster="lambda expression"];
n44 [label="Exit lambda expression", span="62-62", cluster="lambda expression"];
n45 [label="Entry Unk.DeleteJobFromQueue", span="", cluster="Unk.DeleteJobFromQueue"];
n46 [label="return new SqlServerProcessingJob(_connection.Object, JobId, Queue);", span="67-67", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()"];
n47 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()"];
d20 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="78-78", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0];
d19 [label=_jobWasCreated, span="76-76", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)"];
d22 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)"];
d25 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
d30 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="100-102", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=green, community=0];
d39 [label="HangFire.Client.ClientJobDescriptor", span=""];
d27 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="96-96", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)"];
d28 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)"];
d31 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="96-96", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)"];
d32 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)"];
d33 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="33-33", cluster="HangFire.JobHelper.FromJson<T>(string)"];
d17 [label="String.IsNullOrWhiteSpace(name)", span="74-74", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)"];
d21 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="81-81", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)"];
d18 [label="throw new ArgumentNullException(''name'');", span="74-74", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)"];
d16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)"];
d6 [label="_stateMachine = new StateMachine(redis)", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d7 [label="JobId = jobId", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d8 [label="Type = type", span="37-37", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d9 [label="State = state", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d10 [label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="40-40", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d11 [label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="41-41", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d35 [label="_jobWasCreated = true", span="107-107", cluster="HangFire.Client.ClientJobDescriptor.Create()"];
d36 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="108-108", cluster="HangFire.Client.ClientJobDescriptor.Create()"];
d29 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)"];
d23 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)"];
d15 [label="Entry HangFire.JobHelper.ToJson(object)", span="28-28", cluster="HangFire.JobHelper.ToJson(object)"];
d26 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)"];
d24 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d5 [label="Debug.Assert(state != null)", span="32-32", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)"];
d12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d34 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()"];
d37 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()"];
d38 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d1 [label="Debug.Assert(redis != null)", span="28-28", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d2 [label="Debug.Assert(jobId != null)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d3 [label="Debug.Assert(type != null)", span="30-30", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d4 [label="Debug.Assert(arguments != null)", span="31-31", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)"];
d13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)"];
m0_72 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_73 [label="var context = CreateContext()", span="93-93", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_74 [label="var contextCopy = new CreateContext(context)", span="94-94", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_75 [label="Assert.Same(context.JobId, contextCopy.JobId)", span="96-96", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_76 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobServer.cs"];
m0_9 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobServer.cs"];
m0_167 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="BackgroundJobServer.cs"];
m0_168 [label="var context = CreateContext()", span="228-228", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="BackgroundJobServer.cs"];
m0_169 [label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="BackgroundJobServer.cs"];
m0_170 [label="context.CreateJob()", span="231-231", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="BackgroundJobServer.cs"];
m0_171 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="BackgroundJobServer.cs"];
m0_172 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="BackgroundJobServer.cs"];
m0_63 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="BackgroundJobServer.cs"];
m0_0 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_1 [label="_job = Job.FromExpression(() => Method())", span="21-21", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_2 [label="_state = new Mock<IState>()", span="22-22", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_3 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_4 [label="_stateMachine = new Mock<IStateMachine>()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_6 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_7 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="BackgroundJobServer.cs"];
m0_33 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs"];
m0_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs"];
m0_35 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs"];
m0_36 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobServer.cs"];
m0_86 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="BackgroundJobServer.cs"];
m0_87 [label="var context = CreateContext()", span="112-112", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="BackgroundJobServer.cs"];
m0_88 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="BackgroundJobServer.cs"];
m0_89 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="BackgroundJobServer.cs"];
m0_147 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="BackgroundJobServer.cs"];
m0_148 [label="var context = CreateContext()", span="202-202", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="BackgroundJobServer.cs"];
m0_149 [label="context.CreateJob()", span="204-204", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="BackgroundJobServer.cs"];
m0_150 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="BackgroundJobServer.cs"];
m0_151 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="BackgroundJobServer.cs"];
m0_47 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs"];
m0_48 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null))", span="61-63", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs"];
m0_49 [label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs"];
m0_50 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs"];
m0_179 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundJobServer.cs"];
m0_90 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="BackgroundJobServer.cs"];
m0_24 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs"];
m0_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object))", span="34-35", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs"];
m0_26 [label="Assert.Equal(''connection'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs"];
m0_27 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs"];
m0_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobServer.cs"];
m0_120 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="BackgroundJobServer.cs"];
m0_121 [label="var context = CreateContext()", span="157-157", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="BackgroundJobServer.cs"];
m0_122 [label="context.SetJobParameter(''name1'', ''value1'')", span="159-159", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="BackgroundJobServer.cs"];
m0_123 [label="context.SetJobParameter(''name2'', ''value2'')", span="160-160", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="BackgroundJobServer.cs"];
m0_124 [label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="BackgroundJobServer.cs"];
m0_125 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="BackgroundJobServer.cs"];
m0_206 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="BackgroundJobServer.cs"];
m0_207 [label="var context = CreateContext()", span="279-279", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="BackgroundJobServer.cs"];
m0_208 [label="context.CreateJob()", span="280-280", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="BackgroundJobServer.cs"];
m0_209 [label="var contextCopy = new CreateContext(context)", span="282-282", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="BackgroundJobServer.cs"];
m0_210 [label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="BackgroundJobServer.cs"];
m0_211 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="BackgroundJobServer.cs"];
m0_62 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="BackgroundJobServer.cs"];
m0_216 [label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="BackgroundJobServer.cs"];
m0_217 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="BackgroundJobServer.cs"];
m0_115 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="BackgroundJobServer.cs"];
m0_116 [label="var context = CreateContext()", span="148-148", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="BackgroundJobServer.cs"];
m0_117 [label="context.SetJobParameter(''name'', ''value'')", span="149-149", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="BackgroundJobServer.cs"];
m0_118 [label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="BackgroundJobServer.cs"];
m0_119 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="BackgroundJobServer.cs"];
m0_196 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_197 [label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_198 [label="var context = CreateContext()", span="268-268", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_199 [label="context.CreateJob()", span="269-269", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_200 [label="var contextCopy = new CreateContext(context)", span="271-271", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_201 [label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_202 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="BackgroundJobServer.cs"];
m0_110 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="BackgroundJobServer.cs"];
m0_111 [label="var context = CreateContext()", span="139-139", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="BackgroundJobServer.cs"];
m0_112 [label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="BackgroundJobServer.cs"];
m0_113 [label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="BackgroundJobServer.cs"];
m0_114 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="BackgroundJobServer.cs"];
m0_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobServer.cs"];
m0_54 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_55 [label="var context = CreateContext()", span="71-71", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_56 [label="Assert.Same(_connection.Object, context.Connection)", span="73-73", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_57 [label="Assert.Same(_job, context.Job)", span="74-74", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_58 [label="Assert.Same(_state.Object, context.InitialState)", span="75-75", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_59 [label="Assert.NotNull(context.Items)", span="77-77", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_60 [label="Assert.Null(context.JobId)", span="78-78", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_61 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="BackgroundJobServer.cs"];
m0_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobServer.cs"];
m0_71 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="BackgroundJobServer.cs"];
m0_18 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="BackgroundJobServer.cs"];
m0_215 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="BackgroundJobServer.cs"];
m0_65 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="BackgroundJobServer.cs"];
m0_66 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_67 [label="var context = CreateContext()", span="84-84", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_68 [label="var contextCopy = new CreateContext(context)", span="85-85", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_69 [label="Assert.Same(context.Items, contextCopy.Items)", span="87-87", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_70 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_157 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="BackgroundJobServer.cs"];
m0_212 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_15 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_19 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_16 [label="Method()", span="21-21", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_17 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_20 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_21 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_29 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_30 [label="new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object)", span="35-35", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_31 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_37 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_38 [label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_39 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_44 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_45 [label="new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object)", span="53-53", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_46 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_51 [label="Entry lambda expression", span="62-63", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_52 [label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_53 [label="Exit lambda expression", span="62-63", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_83 [label="context.SetJobParameter(null, null)", span="104-104", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_82 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_84 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_92 [label="context.SetJobParameter(''name'', null)", span="115-115", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_91 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_93 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_100 [label="context.SetJobParameter(''name'', null)", span="125-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_99 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_101 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_107 [label="context.GetJobParameter<int>(null)", span="133-133", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_106 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_108 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_138 [label="context.GetJobParameter<int>(''name'')", span="184-184", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_137 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_139 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_155 [label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_154 [label="Entry lambda expression", span="206-209", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_156 [label="Exit lambda expression", span="206-209", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_165 [label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_164 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_166 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_173 [label="Entry lambda expression", span="233-237", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_174 [label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_175 [label="Exit lambda expression", span="233-237", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_176 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_177 [label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_178 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_186 [label="context.SetJobParameter(''name'', ''value'')", span="247-247", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_185 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_187 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_194 [label="context.GetJobParameter<string>(''name'')", span="258-258", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_193 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_195 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_203 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_204 [label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_205 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_213 [label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_214 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="BackgroundJobServer.cs"];
m0_32 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="BackgroundJobServer.cs"];
m0_152 [label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="BackgroundJobServer.cs"];
m0_85 [label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundJobServer.cs"];
m0_153 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobServer.cs"];
m0_126 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="BackgroundJobServer.cs"];
m0_127 [label="var context = CreateContext()", span="168-168", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="BackgroundJobServer.cs"];
m0_128 [label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="BackgroundJobServer.cs"];
m0_129 [label="context.SetJobParameter(''name'', ''newValue'')", span="171-171", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="BackgroundJobServer.cs"];
m0_130 [label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="BackgroundJobServer.cs"];
m0_131 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="BackgroundJobServer.cs"];
m0_132 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServer.cs"];
m0_133 [label="var context = CreateContext()", span="179-179", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServer.cs"];
m0_134 [label="context.SetJobParameter(''name'', ''value'')", span="181-181", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServer.cs"];
m0_135 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServer.cs"];
m0_136 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServer.cs"];
m0_158 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="BackgroundJobServer.cs"];
m0_159 [label="var context = CreateContext()", span="215-215", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="BackgroundJobServer.cs"];
m0_160 [label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="BackgroundJobServer.cs"];
m0_161 [label="context.CreateJob()", span="220-220", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="BackgroundJobServer.cs"];
m0_162 [label="Assert.Equal(''id'', context.JobId)", span="222-222", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="BackgroundJobServer.cs"];
m0_163 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="BackgroundJobServer.cs"];
m0_180 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_181 [label="var context = CreateContext()", span="243-243", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_182 [label="context.CreateJob()", span="244-244", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_183 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_184 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_94 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="BackgroundJobServer.cs"];
m0_95 [label="var context = CreateContext()", span="121-121", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="BackgroundJobServer.cs"];
m0_96 [label="context.SetJobParameter(''name'', null)", span="122-122", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="BackgroundJobServer.cs"];
m0_97 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="124-125", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="BackgroundJobServer.cs"];
m0_98 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="BackgroundJobServer.cs"];
m0_188 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_189 [label="var context = CreateContext()", span="253-253", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_190 [label="context.CreateJob()", span="255-255", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_191 [label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_192 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="BackgroundJobServer.cs"];
m0_109 [label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundJobServer.cs"];
m0_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="BackgroundJobServer.cs"];
m0_77 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_78 [label="var context = CreateContext()", span="102-102", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="103-104", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_80 [label="Assert.Equal(''name'', exception.ParamName)", span="106-106", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_81 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_140 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_141 [label="var context = CreateContext()", span="190-190", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_142 [label="context.SetJobParameter(''name'', ''value'')", span="191-191", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_143 [label="var contextCopy = new CreateContext(context)", span="192-192", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_144 [label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_145 [label="Assert.Equal(''value'', value)", span="196-196", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_146 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="BackgroundJobServer.cs"];
m0_23 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobServer.cs"];
m0_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobServer.cs"];
m0_40 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs"];
m0_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs"];
m0_42 [label="Assert.Equal(''job'', exception.ParamName)", span="55-55", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="BackgroundJobServer.cs"];
m0_43 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs"];
m0_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobServer.cs"];
m0_8 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobServer.cs"];
m0_102 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_103 [label="var context = CreateContext()", span="131-131", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_104 [label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<int>(null))", span="132-133", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_105 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="BackgroundJobServer.cs"];
m0_218 [label="Hangfire.Core.Tests.Client.CreateContextFacts", span="", file="BackgroundJobServer.cs"];
m0_219 [label=context, span="", file="BackgroundJobServer.cs"];
m0_220 [label=context, span="", file="BackgroundJobServer.cs"];
m0_221 [label=context, span="", file="BackgroundJobServer.cs"];
m0_222 [label=context, span="", file="BackgroundJobServer.cs"];
m0_223 [label=context, span="", file="BackgroundJobServer.cs"];
m0_224 [label=context, span="", file="BackgroundJobServer.cs"];
m0_225 [label=context, span="", file="BackgroundJobServer.cs"];
m0_226 [label=context, span="", file="BackgroundJobServer.cs"];
m0_227 [label=context, span="", file="BackgroundJobServer.cs"];
m0_228 [label=contextCopy, span="", file="BackgroundJobServer.cs"];
m2_26 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="73-73", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_27 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_28 [label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="76-76", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_29 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="77-77", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_30 [label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="81-85", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_31 [label=Exception, span="87-87", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_32 [label="_exception = ex", span="89-89", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_33 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="73-73", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="Command.cs"];
m2_0 [label="Entry lambda expression", span="26-40", cluster="lambda expression", file="Command.cs"];
m2_1 [label="var connection = JobStorage.Current.GetConnection()", span="28-28", cluster="lambda expression", file="Command.cs"];
m2_2 [label="var stateMachine = new StateMachine(connection)", span="32-32", cluster="lambda expression", file="Command.cs"];
m2_9 [label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.Common.States.State, string[])", span="86-86", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.Common.States.State, string[])", file="Command.cs"];
m2_19 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="Command.cs"];
m2_20 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="Command.cs"];
m2_21 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="Command.cs"];
m2_76 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="98-98", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="Command.cs"];
m2_116 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="Command.cs"];
m2_95 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="Command.cs"];
m2_50 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="Command.cs"];
m2_86 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="Command.cs"];
m2_22 [label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12", cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="Command.cs"];
m2_34 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="Command.cs"];
m2_7 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="36-36", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="Command.cs"];
m2_66 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="Command.cs"];
m2_67 [label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="Command.cs"];
m2_68 [label=Exception, span="126-126", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="Command.cs"];
m2_69 [label="_exception = ex", span="128-128", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="Command.cs"];
m2_70 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="Command.cs"];
m2_136 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="229-229", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="Command.cs"];
m2_137 [label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="231-231", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="Command.cs"];
m2_138 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="229-229", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="Command.cs"];
m2_108 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Command.cs"];
m2_128 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="217-217", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_129 [label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="219-219", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_131 [label="i < table.RowCount", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_132 [label="var method = table.Rows[i][''Method'']", span="223-223", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_130 [label="var i = 0", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_133 [label="Assert.AreEqual(method, _clientFilterResults[i])", span="224-224", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_134 [label="i++", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_135 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="217-217", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="Command.cs"];
m2_13 [label="var state = new EnqueuedState{\r\n                        Reason = ''Scheduled job has been enqueued by a user''\r\n                    }", span="48-50", cluster="lambda expression", file="Command.cs"];
m2_14 [label="return stateMachine.TryToChangeState(jobId, state, new [] { ScheduledState.StateName });", span="52-52", cluster="lambda expression", file="Command.cs", color=green, community=0];
m2_15 [label="Exit lambda expression", span="43-54", cluster="lambda expression", file="Command.cs"];
m2_46 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="Command.cs"];
m2_47 [label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="Command.cs"];
m2_48 [label="When(''I create a job'')", span="97-97", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="Command.cs"];
m2_49 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="Command.cs"];
m2_139 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="Command.cs"];
m2_10 [label="Entry lambda expression", span="43-54", cluster="lambda expression", file="Command.cs"];
m2_11 [label="var connection = JobStorage.Current.GetConnection()", span="45-45", cluster="lambda expression", file="Command.cs"];
m2_12 [label="var stateMachine = new StateMachine(connection)", span="47-47", cluster="lambda expression", file="Command.cs"];
m2_8 [label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="Command.cs"];
m2_5 [label="Exit lambda expression", span="26-40", cluster="lambda expression", file="Command.cs"];
m2_6 [label="Entry HangFire.JobStorage.GetConnection()", span="45-45", cluster="HangFire.JobStorage.GetConnection()", color=red, community=0, file="Command.cs"];
m2_90 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="Command.cs"];
m2_107 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Command.cs"];
m2_58 [label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="Command.cs"];
m2_59 [label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="Command.cs"];
m2_60 [label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="Command.cs"];
m2_71 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="Command.cs"];
m2_72 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="137-137", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="Command.cs"];
m2_73 [label=Exception, span="139-139", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="Command.cs"];
m2_74 [label="_exception = ex", span="141-141", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="Command.cs"];
m2_75 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="Command.cs"];
m2_91 [label="Entry HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="Command.cs"];
m2_92 [label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="173-173", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="Command.cs"];
m2_93 [label="DictionaryAssert.ContainsFollowingItems(table, job)", span="174-174", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="Command.cs"];
m2_94 [label="Exit HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="Command.cs"];
m2_151 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="Command.cs"];
m2_77 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="Command.cs"];
m2_78 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(JobClientSteps), null, null)", span="150-150", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="Command.cs"];
m2_79 [label=Exception, span="152-152", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="Command.cs"];
m2_80 [label="_exception = ex", span="154-154", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="Command.cs"];
m2_81 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="Command.cs"];
m2_3 [label="var state = new EnqueuedState\r\n                    {\r\n                        Reason = ''The job has been retried by a user''\r\n                    }", span="33-36", cluster="lambda expression", file="Command.cs"];
m2_109 [label="Entry HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="Command.cs"];
m2_110 [label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="196-198", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="Command.cs"];
m2_111 [label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="Command.cs"];
m2_45 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="Command.cs"];
m2_97 [label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_98 [label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_99 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_100 [label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_102 [label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_101 [label=_arguments, span="186-186", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_103 [label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_104 [label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="Command.cs"];
m2_16 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="Command.cs"];
m2_17 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="Command.cs"];
m2_18 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="Command.cs"];
m2_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Command.cs"];
m2_51 [label="Entry Unk.When", span="", cluster="Unk.When", file="Command.cs"];
m2_124 [label="Entry HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="209-209", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="Command.cs"];
m2_125 [label="Assert.IsNotNull(_exception)", span="211-211", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="Command.cs"];
m2_126 [label="Assert.IsInstanceOfType(_exception, typeof(CreateJobFailedException))", span="212-212", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="Command.cs"];
m2_127 [label="Exit HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="209-209", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="Command.cs"];
m2_35 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="Command.cs"];
m2_123 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="Command.cs"];
m2_87 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="Command.cs"];
m2_88 [label="Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="167-167", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="Command.cs"];
m2_89 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="Command.cs"];
m2_122 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="Command.cs"];
m2_23 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="Command.cs"];
m2_24 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="Command.cs"];
m2_25 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="Command.cs"];
m2_82 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="Command.cs"];
m2_83 [label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="Command.cs"];
m2_84 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="Command.cs"];
m2_39 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="Command.cs"];
m2_42 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="Command.cs"];
m2_40 [label="x.StateName", span="76-76", cluster="lambda expression", file="Command.cs"];
m2_41 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="Command.cs"];
m2_43 [label="x.GetProperties()", span="77-77", cluster="lambda expression", file="Command.cs"];
m2_44 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="Command.cs"];
m2_52 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="Command.cs"];
m2_55 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="Command.cs"];
m2_53 [label="x[''Name'']", span="96-96", cluster="lambda expression", file="Command.cs"];
m2_54 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="Command.cs"];
m2_56 [label="x[''Value'']", span="96-96", cluster="lambda expression", file="Command.cs"];
m2_57 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="Command.cs"];
m2_113 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="Command.cs"];
m2_114 [label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="197-197", cluster="lambda expression", file="Command.cs"];
m2_115 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="Command.cs"];
m2_4 [label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="Command.cs"];
m2_121 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="Command.cs"];
m2_117 [label="Entry HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="202-202", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="Command.cs"];
m2_118 [label="Assert.IsNotNull(_exception)", span="204-204", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="Command.cs"];
m2_119 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="205-205", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="Command.cs"];
m2_120 [label="Exit HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="202-202", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="Command.cs"];
m2_140 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="236-236", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_141 [label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="238-238", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_143 [label="i < table.RowCount", span="240-240", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_144 [label="var filter = table.Rows[i][''Filter'']", span="242-242", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_142 [label="var i = 0", span="240-240", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_145 [label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="243-243", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_146 [label="i++", span="240-240", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_147 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="236-236", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="Command.cs"];
m2_112 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="Command.cs"];
m2_105 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="Command.cs"];
m2_148 [label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="248-248", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="Command.cs"];
m2_149 [label="Assert.IsNull(_exception)", span="250-250", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="Command.cs"];
m2_150 [label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="248-248", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="Command.cs"];
m2_96 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="Command.cs"];
m2_36 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="Command.cs"];
m2_38 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="Command.cs"];
m2_61 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="Command.cs"];
m2_62 [label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="Command.cs"];
m2_63 [label=Exception, span="113-113", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="Command.cs"];
m2_64 [label="_exception = ex", span="115-115", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="Command.cs"];
m2_65 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="Command.cs"];
m2_85 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="Command.cs"];
m2_152 [label="HangFire.Tests.JobClientSteps", span="", file="Command.cs"];
m3_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs"];
m3_35 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="CreateContext.cs"];
m3_23 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_24 [label="String.IsNullOrWhiteSpace(name)", span="97-97", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_28 [label="var serializedValue = JobHelper.ToJson(value)", span="104-104", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_29 [label="!_parameters.ContainsKey(name)", span="106-106", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_30 [label="_parameters.Add(name, serializedValue)", span="108-108", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_31 [label="_parameters[name] = serializedValue", span="112-112", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_25 [label="throw new ArgumentNullException(''name'');", span="97-97", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_26 [label=_jobWasCreated, span="99-99", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="101-101", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_32 [label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs"];
m3_0 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m3_1 [label="Items = context.Items", span="40-40", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m3_2 [label="_jobWasCreated = context._jobWasCreated", span="41-41", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m3_3 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m3_43 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="CreateContext.cs"];
m3_38 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m3_39 [label="String.IsNullOrWhiteSpace(name)", span="130-130", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m3_41 [label="return _parameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_parameters[name])\r\n                : default(T);", span="132-134", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m3_40 [label="throw new ArgumentNullException(''name'');", span="130-130", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m3_42 [label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs"];
m3_33 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="CreateContext.cs"];
m3_48 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_4 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_5 [label="connection == null", span="50-50", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_7 [label="jobMethod == null", span="51-51", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="CreateContext.cs"];
m3_9 [label="arguments == null", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="CreateContext.cs"];
m3_11 [label="initialState == null", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_13 [label="Connection = connection", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_14 [label="JobMethod = jobMethod", span="56-56", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="CreateContext.cs"];
m3_15 [label="Arguments = arguments", span="57-57", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="CreateContext.cs"];
m3_16 [label="InitialState = initialState", span="58-58", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_18 [label="_stateMachine = new StateMachine(connection)", span="61-61", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_6 [label="throw new ArgumentNullException(''connection'');", span="50-50", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_8 [label="throw new ArgumentNullException(''jobMethod'');", span="51-51", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="CreateContext.cs"];
m3_10 [label="throw new ArgumentNullException(''arguments'');", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="CreateContext.cs"];
m3_12 [label="throw new ArgumentNullException(''initialState'');", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_17 [label="Items = new Dictionary<string, object>()", span="59-59", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_19 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="CreateContext.cs"];
m3_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="CreateContext.cs"];
m3_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CreateContext.cs"];
m3_44 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="137-137", cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m3_45 [label="JobId = _stateMachine.CreateInState(JobMethod, Arguments, _parameters, InitialState)", span="139-139", cluster="HangFire.Client.CreateContext.CreateJob()", color=red, community=0, file="CreateContext.cs"];
m3_46 [label="_jobWasCreated = true", span="140-140", cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m3_47 [label="Exit HangFire.Client.CreateContext.CreateJob()", span="137-137", cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs"];
m3_22 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="CreateContext.cs"];
m3_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CreateContext.cs"];
m3_49 [label="HangFire.Client.CreateContext", span="", file="CreateContext.cs"];
m5_58 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="DequeuedJobsPage.generated.cs"];
m5_62 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="DequeuedJobsPage.generated.cs"];
m5_61 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DequeuedJobsPage.generated.cs"];
m5_52 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="DequeuedJobsPage.generated.cs"];
m5_50 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="DequeuedJobsPage.generated.cs"];
m5_45 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DequeuedJobsPage.generated.cs"];
m5_0 [label="Entry HangFire.Web.Pages.DequeuedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_1 [label="WriteLiteral(''\r\n'')", span="66-66", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_2 [label="Layout = new LayoutPage\r\n        {\r\n            Title = Queue.ToUpperInvariant(),\r\n            Subtitle = ''Dequeued jobs'',\r\n            Breadcrumbs = new Dictionary<string, string>\r\n                {\r\n                    { ''Queues'', Request.LinkTo(''/queues'') },\r\n                    { Queue.ToUpperInvariant(), Request.LinkTo(''/queues/'' + Queue) }\r\n                },\r\n            BreadcrumbsTitle = ''Dequeued jobs'',    \r\n        }", span="80-90", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_3 [label="int from, perPage", span="92-92", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="94-94", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="95-95", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_9 [label="pager = new Pager(from, perPage, monitor.DequeuedCount(Queue))\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/queues/dequeued/'' + Queue)\r\n        }", span="102-105", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_6 [label="Pager pager", span="97-97", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_7 [label="JobList<DequeuedJobDto> dequeuedJobs", span="98-98", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="100-100", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_10 [label="dequeuedJobs = monitor\r\n            .DequeuedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="107-108", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_12 [label="pager.TotalPageCount == 0", span="120-120", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_14 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="140-140", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_43 [label="Write(RenderPartial(new Paginator(pager)))", span="331-331", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_11 [label="WriteLiteral(''\r\n'')", span="115-115", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_16 [label=dequeuedJobs, span="169-169", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        The queue is empty.\r\n    </div>\r\n'')", span="126-126", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_15 [label="WriteLiteral(@''    <table class=''''table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>State</th>\r\n                <th>Job type</th>\r\n                <th>Created</th>\r\n                <th>Fetched</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="153-164", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_17 [label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a href=\'''' +\r\n'''')", span="175-176", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_42 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="319-319", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_18 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="181-181", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_19 [label="WriteLiteral(''\''>'')", span="186-186", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_20 [label="Write(HtmlHelper.JobId(job.Key))", span="191-191", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_21 [label="WriteLiteral(''</a>\r\n                    </td>\r\n                    <td>\r\n                      '' +\r\n''  <span class=\''label label-default\'' style=\'''')", span="196-197", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_22 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="202-202", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_23 [label="WriteLiteral(''\''>\r\n                            '')", span="207-207", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_24 [label="Write(job.Value.State)", span="212-212", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_25 [label="WriteLiteral(''</span>\r\n                    </td>\r\n                    <td>'')", span="217-217", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_26 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="222-222", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", color=red, community=0, file="DequeuedJobsPage.generated.cs"];
m5_27 [label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="227-227", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_28 [label="job.Value.CreatedAt.HasValue", span="232-232", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_29 [label="WriteLiteral(''                            <span data-moment=\'''')", span="238-238", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_34 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="268-268", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_30 [label="Write(JobHelper.ToStringTimestamp(job.Value.CreatedAt.Value))", span="243-243", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_35 [label="job.Value.FetchedAt.HasValue", span="273-273", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_31 [label="WriteLiteral(''\''>\r\n                                '')", span="248-248", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_32 [label="Write(job.Value.CreatedAt)", span="253-253", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_33 [label="WriteLiteral('' \r\n                            </span>\r\n'')", span="258-258", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_36 [label="WriteLiteral(''                            <span data-moment=\'''')", span="279-279", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_41 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="309-309", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_37 [label="Write(JobHelper.ToStringTimestamp(job.Value.FetchedAt.Value))", span="284-284", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_38 [label="WriteLiteral(''\''>\r\n                                '')", span="289-289", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_39 [label="Write(job.Value.FetchedAt)", span="294-294", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_40 [label="WriteLiteral(''\r\n                            </span>\r\n'')", span="299-299", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_44 [label="Exit HangFire.Web.Pages.DequeuedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.DequeuedJobsPage.Execute()", file="DequeuedJobsPage.generated.cs"];
m5_47 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="DequeuedJobsPage.generated.cs"];
m5_56 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="DequeuedJobsPage.generated.cs"];
m5_48 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsPage.generated.cs"];
m5_54 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="13-13", cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="DequeuedJobsPage.generated.cs"];
m5_53 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="22-22", cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="DequeuedJobsPage.generated.cs"];
m5_55 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="DequeuedJobsPage.generated.cs"];
m5_63 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsPage.generated.cs"];
m5_57 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="DequeuedJobsPage.generated.cs"];
m5_59 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="DequeuedJobsPage.generated.cs"];
m5_51 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="DequeuedJobsPage.generated.cs"];
m5_46 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DequeuedJobsPage.generated.cs"];
m5_49 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="DequeuedJobsPage.generated.cs"];
m5_64 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="DequeuedJobsPage.generated.cs"];
m5_65 [label="HangFire.Web.Pages.DequeuedJobsPage", span="", file="DequeuedJobsPage.generated.cs"];
m7_0 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="EnqueuedJobDto.cs"];
m7_1 [label="InEnqueuedState = true", span="9-9", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="EnqueuedJobDto.cs"];
m7_2 [label="Exit HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="EnqueuedJobDto.cs"];
m7_3 [label="HangFire.Storage.Monitoring.EnqueuedJobDto", span="", file="EnqueuedJobDto.cs"];
m8_72 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_73 [label="var context = CreateContext()", span="93-93", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_74 [label="var contextCopy = new CreateContext(context)", span="94-94", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_75 [label="Assert.Same(context.JobId, contextCopy.JobId)", span="96-96", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_76 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="EnqueuedJobsPage.generated.cs"];
m8_9 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="EnqueuedJobsPage.generated.cs"];
m8_167 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="EnqueuedJobsPage.generated.cs"];
m8_168 [label="var context = CreateContext()", span="228-228", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="EnqueuedJobsPage.generated.cs"];
m8_169 [label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="EnqueuedJobsPage.generated.cs"];
m8_170 [label="context.CreateJob()", span="231-231", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="EnqueuedJobsPage.generated.cs"];
m8_171 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="EnqueuedJobsPage.generated.cs"];
m8_172 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="EnqueuedJobsPage.generated.cs"];
m8_63 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="EnqueuedJobsPage.generated.cs"];
m8_0 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_1 [label="_job = Job.FromExpression(() => Method())", span="21-21", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_2 [label="_state = new Mock<IState>()", span="22-22", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_3 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_4 [label="_stateMachine = new Mock<IStateMachine>()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_6 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_7 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="EnqueuedJobsPage.generated.cs"];
m8_33 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_35 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_36 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_86 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="EnqueuedJobsPage.generated.cs"];
m8_87 [label="var context = CreateContext()", span="112-112", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="EnqueuedJobsPage.generated.cs"];
m8_88 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="EnqueuedJobsPage.generated.cs"];
m8_89 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="EnqueuedJobsPage.generated.cs"];
m8_147 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="EnqueuedJobsPage.generated.cs"];
m8_148 [label="var context = CreateContext()", span="202-202", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="EnqueuedJobsPage.generated.cs"];
m8_149 [label="context.CreateJob()", span="204-204", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="EnqueuedJobsPage.generated.cs"];
m8_150 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="EnqueuedJobsPage.generated.cs"];
m8_151 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="EnqueuedJobsPage.generated.cs"];
m8_47 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_48 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null))", span="61-63", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_49 [label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_50 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_179 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="EnqueuedJobsPage.generated.cs"];
m8_90 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="EnqueuedJobsPage.generated.cs"];
m8_24 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object))", span="34-35", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_26 [label="Assert.Equal(''connection'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_27 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="EnqueuedJobsPage.generated.cs"];
m8_120 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="EnqueuedJobsPage.generated.cs"];
m8_121 [label="var context = CreateContext()", span="157-157", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="EnqueuedJobsPage.generated.cs"];
m8_122 [label="context.SetJobParameter(''name1'', ''value1'')", span="159-159", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="EnqueuedJobsPage.generated.cs"];
m8_123 [label="context.SetJobParameter(''name2'', ''value2'')", span="160-160", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="EnqueuedJobsPage.generated.cs"];
m8_124 [label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="EnqueuedJobsPage.generated.cs"];
m8_125 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="EnqueuedJobsPage.generated.cs"];
m8_206 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="EnqueuedJobsPage.generated.cs"];
m8_207 [label="var context = CreateContext()", span="279-279", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="EnqueuedJobsPage.generated.cs"];
m8_208 [label="context.CreateJob()", span="280-280", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="EnqueuedJobsPage.generated.cs"];
m8_209 [label="var contextCopy = new CreateContext(context)", span="282-282", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="EnqueuedJobsPage.generated.cs"];
m8_210 [label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="EnqueuedJobsPage.generated.cs"];
m8_211 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="EnqueuedJobsPage.generated.cs"];
m8_62 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="EnqueuedJobsPage.generated.cs"];
m8_216 [label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="EnqueuedJobsPage.generated.cs"];
m8_217 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="EnqueuedJobsPage.generated.cs"];
m8_115 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="EnqueuedJobsPage.generated.cs"];
m8_116 [label="var context = CreateContext()", span="148-148", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="EnqueuedJobsPage.generated.cs"];
m8_117 [label="context.SetJobParameter(''name'', ''value'')", span="149-149", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="EnqueuedJobsPage.generated.cs"];
m8_118 [label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="EnqueuedJobsPage.generated.cs"];
m8_119 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="EnqueuedJobsPage.generated.cs"];
m8_196 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_197 [label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_198 [label="var context = CreateContext()", span="268-268", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_199 [label="context.CreateJob()", span="269-269", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_200 [label="var contextCopy = new CreateContext(context)", span="271-271", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_201 [label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_202 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="EnqueuedJobsPage.generated.cs"];
m8_110 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="EnqueuedJobsPage.generated.cs"];
m8_111 [label="var context = CreateContext()", span="139-139", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="EnqueuedJobsPage.generated.cs"];
m8_112 [label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="EnqueuedJobsPage.generated.cs"];
m8_113 [label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="EnqueuedJobsPage.generated.cs"];
m8_114 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="EnqueuedJobsPage.generated.cs"];
m8_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="EnqueuedJobsPage.generated.cs"];
m8_54 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_55 [label="var context = CreateContext()", span="71-71", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_56 [label="Assert.Same(_connection.Object, context.Connection)", span="73-73", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_57 [label="Assert.Same(_job, context.Job)", span="74-74", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_58 [label="Assert.Same(_state.Object, context.InitialState)", span="75-75", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_59 [label="Assert.NotNull(context.Items)", span="77-77", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_60 [label="Assert.Null(context.JobId)", span="78-78", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_61 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="EnqueuedJobsPage.generated.cs"];
m8_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="EnqueuedJobsPage.generated.cs"];
m8_71 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="EnqueuedJobsPage.generated.cs"];
m8_18 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="EnqueuedJobsPage.generated.cs"];
m8_215 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="EnqueuedJobsPage.generated.cs"];
m8_65 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="EnqueuedJobsPage.generated.cs"];
m8_66 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_67 [label="var context = CreateContext()", span="84-84", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_68 [label="var contextCopy = new CreateContext(context)", span="85-85", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_69 [label="Assert.Same(context.Items, contextCopy.Items)", span="87-87", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_70 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_157 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="EnqueuedJobsPage.generated.cs"];
m8_212 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_15 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_19 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_16 [label="Method()", span="21-21", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_17 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_20 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_21 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_29 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_30 [label="new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object)", span="35-35", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_31 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_37 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_38 [label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_39 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_44 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_45 [label="new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object)", span="53-53", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_46 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_51 [label="Entry lambda expression", span="62-63", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_52 [label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_53 [label="Exit lambda expression", span="62-63", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_83 [label="context.SetJobParameter(null, null)", span="104-104", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_82 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_84 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_92 [label="context.SetJobParameter(''name'', null)", span="115-115", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_91 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_93 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_100 [label="context.SetJobParameter(''name'', null)", span="125-125", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_99 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_101 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_107 [label="context.GetJobParameter<int>(null)", span="133-133", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_106 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_108 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_138 [label="context.GetJobParameter<int>(''name'')", span="184-184", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_137 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_139 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_155 [label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_154 [label="Entry lambda expression", span="206-209", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_156 [label="Exit lambda expression", span="206-209", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_165 [label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_164 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_166 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_173 [label="Entry lambda expression", span="233-237", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_174 [label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_175 [label="Exit lambda expression", span="233-237", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_176 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_177 [label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_178 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_186 [label="context.SetJobParameter(''name'', ''value'')", span="247-247", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_185 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_187 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_194 [label="context.GetJobParameter<string>(''name'')", span="258-258", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_193 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_195 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_203 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_204 [label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_205 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_213 [label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_214 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="EnqueuedJobsPage.generated.cs"];
m8_32 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="EnqueuedJobsPage.generated.cs"];
m8_152 [label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="EnqueuedJobsPage.generated.cs"];
m8_85 [label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedJobsPage.generated.cs"];
m8_153 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="EnqueuedJobsPage.generated.cs"];
m8_126 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="EnqueuedJobsPage.generated.cs"];
m8_127 [label="var context = CreateContext()", span="168-168", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="EnqueuedJobsPage.generated.cs"];
m8_128 [label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="EnqueuedJobsPage.generated.cs"];
m8_129 [label="context.SetJobParameter(''name'', ''newValue'')", span="171-171", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="EnqueuedJobsPage.generated.cs"];
m8_130 [label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="EnqueuedJobsPage.generated.cs"];
m8_131 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="EnqueuedJobsPage.generated.cs"];
m8_132 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="EnqueuedJobsPage.generated.cs"];
m8_133 [label="var context = CreateContext()", span="179-179", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="EnqueuedJobsPage.generated.cs"];
m8_134 [label="context.SetJobParameter(''name'', ''value'')", span="181-181", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="EnqueuedJobsPage.generated.cs"];
m8_135 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="EnqueuedJobsPage.generated.cs"];
m8_136 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="EnqueuedJobsPage.generated.cs"];
m8_158 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="EnqueuedJobsPage.generated.cs"];
m8_159 [label="var context = CreateContext()", span="215-215", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="EnqueuedJobsPage.generated.cs"];
m8_160 [label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="EnqueuedJobsPage.generated.cs"];
m8_161 [label="context.CreateJob()", span="220-220", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="EnqueuedJobsPage.generated.cs"];
m8_162 [label="Assert.Equal(''id'', context.JobId)", span="222-222", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="EnqueuedJobsPage.generated.cs"];
m8_163 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="EnqueuedJobsPage.generated.cs"];
m8_180 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_181 [label="var context = CreateContext()", span="243-243", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_182 [label="context.CreateJob()", span="244-244", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_183 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_184 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_94 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="EnqueuedJobsPage.generated.cs"];
m8_95 [label="var context = CreateContext()", span="121-121", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="EnqueuedJobsPage.generated.cs"];
m8_96 [label="context.SetJobParameter(''name'', null)", span="122-122", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="EnqueuedJobsPage.generated.cs"];
m8_97 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="124-125", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="EnqueuedJobsPage.generated.cs"];
m8_98 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="EnqueuedJobsPage.generated.cs"];
m8_188 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_189 [label="var context = CreateContext()", span="253-253", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_190 [label="context.CreateJob()", span="255-255", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_191 [label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_192 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="EnqueuedJobsPage.generated.cs"];
m8_109 [label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedJobsPage.generated.cs"];
m8_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="EnqueuedJobsPage.generated.cs"];
m8_77 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_78 [label="var context = CreateContext()", span="102-102", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="103-104", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_80 [label="Assert.Equal(''name'', exception.ParamName)", span="106-106", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_81 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_140 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_141 [label="var context = CreateContext()", span="190-190", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_142 [label="context.SetJobParameter(''name'', ''value'')", span="191-191", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_143 [label="var contextCopy = new CreateContext(context)", span="192-192", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_144 [label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_145 [label="Assert.Equal(''value'', value)", span="196-196", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_146 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="EnqueuedJobsPage.generated.cs"];
m8_23 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="EnqueuedJobsPage.generated.cs"];
m8_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="EnqueuedJobsPage.generated.cs"];
m8_40 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_42 [label="Assert.Equal(''job'', exception.ParamName)", span="55-55", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_43 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="EnqueuedJobsPage.generated.cs"];
m8_8 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs"];
m8_102 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_103 [label="var context = CreateContext()", span="131-131", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_104 [label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<int>(null))", span="132-133", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_105 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="EnqueuedJobsPage.generated.cs"];
m8_218 [label="Hangfire.Core.Tests.Client.CreateContextFacts", span="", file="EnqueuedJobsPage.generated.cs"];
m8_219 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_220 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_221 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_222 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_223 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_224 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_225 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_226 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_227 [label=context, span="", file="EnqueuedJobsPage.generated.cs"];
m8_228 [label=contextCopy, span="", file="EnqueuedJobsPage.generated.cs"];
m9_11 [label="Entry HangFire.States.EnqueuedState.Serialize()", span="40-40", cluster="HangFire.States.EnqueuedState.Serialize()", file="EnqueuedStateFacts.cs"];
m9_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedStateFacts.cs"];
m9_0 [label="Entry HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", span="9-9", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", file="EnqueuedStateFacts.cs"];
m9_1 [label="var state = new EnqueuedState()", span="11-11", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", file="EnqueuedStateFacts.cs"];
m9_2 [label="Assert.Equal(EnqueuedState.StateName, state.Name)", span="12-12", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", color=green, community=0, file="EnqueuedStateFacts.cs"];
m9_3 [label="Exit HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", span="9-9", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", file="EnqueuedStateFacts.cs"];
m9_4 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="26-26", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateFacts.cs"];
m9_12 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="EnqueuedStateFacts.cs"];
m9_6 [label="Entry HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", span="16-16", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", file="EnqueuedStateFacts.cs"];
m9_8 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                state.Serialize())", span="20-25", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="EnqueuedStateFacts.cs"];
m9_7 [label="var state = new EnqueuedState()", span="18-18", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", file="EnqueuedStateFacts.cs"];
m9_9 [label="Exit HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", span="16-16", cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", file="EnqueuedStateFacts.cs"];
m10_17 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedStateHandlerFacts.cs"];
m10_47 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="EnqueuedStateHandlerFacts.cs"];
m10_46 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_39 [label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_42 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_41 [label="throw new ArgumentNullException(''name'');", span="131-131", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_40 [label="String.IsNullOrWhiteSpace(name)", span="131-131", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_44 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_43 [label=Exception, span="139-139", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_45 [label="Exit Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_48 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_0 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="EnqueuedStateHandlerFacts.cs"];
m10_1 [label="Items = context.Items", span="39-39", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_2 [label="_parameters = context._parameters", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_3 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="EnqueuedStateHandlerFacts.cs"];
m10_34 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="EnqueuedStateHandlerFacts.cs"];
m10_38 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="EnqueuedStateHandlerFacts.cs"];
m10_36 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="EnqueuedStateHandlerFacts.cs"];
m10_4 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="43-43", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="EnqueuedStateHandlerFacts.cs"];
m10_5 [label="connection == null", span="48-48", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_6 [label="throw new ArgumentNullException(''connection'');", span="48-48", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_7 [label="job == null", span="49-49", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_8 [label="throw new ArgumentNullException(''job'');", span="49-49", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_9 [label="initialState == null", span="50-50", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_10 [label="throw new ArgumentNullException(''initialState'');", span="50-50", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_11 [label="Connection = connection", span="52-52", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_12 [label="Job = job", span="53-53", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_13 [label="InitialState = initialState", span="54-54", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_14 [label="Items = new Dictionary<string, object>()", span="56-56", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="EnqueuedStateHandlerFacts.cs"];
m10_15 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="43-43", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="EnqueuedStateHandlerFacts.cs"];
m10_35 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedStateHandlerFacts.cs"];
m10_24 [label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_27 [label=_jobWasCreated, span="100-100", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_30 [label="!_parameters.ContainsKey(name)", span="107-107", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_31 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_32 [label="_parameters[name] = serializedValue", span="113-113", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_26 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_25 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_28 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_29 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_33 [label="Exit Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedStateHandlerFacts.cs"];
m10_49 [label="Hangfire.Client.CreateContext", span="", file="EnqueuedStateHandlerFacts.cs"];
m11_0 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobDto.cs"];
m11_1 [label="InFailedState = true", span="9-9", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobDto.cs"];
m11_2 [label="Exit HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobDto.cs"];
m11_3 [label="HangFire.Storage.Monitoring.FailedJobDto", span="", file="FailedJobDto.cs"];
m12_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs"];
m12_0 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m12_1 [label="exception == null", span="30-30", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m12_3 [label="_exception = exception", span="31-31", cluster="HangFire.States.FailedState.FailedState(System.Exception)", color=red, community=0, file="FailedState.cs"];
m12_2 [label="throw new ArgumentNullException(''exception'');", span="30-30", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m12_4 [label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m12_12 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedState.cs"];
m12_11 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="FailedState.cs"];
m12_10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs"];
m12_6 [label="Entry HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36", cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="FailedState.cs"];
m12_7 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', _exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', _exception.Message },\r\n                    { ''ExceptionDetails'', _exception.ToString() }\r\n                };", span="38-44", cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", color=red, community=0, file="FailedState.cs"];
m12_8 [label="Exit HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36", cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="FailedState.cs"];
m12_13 [label="HangFire.States.FailedState", span="", file="FailedState.cs"];
m13_10 [label="Assert.Equal(FailedState.StateName, state.Name)", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", color=green, community=0];
m13_11 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m13_7 [label="Exit HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31", cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="FailedStateFacts.cs"];
m13_22 [label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="43-43", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="FailedStateFacts.cs"];
m13_23 [label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="43-43", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="FailedStateFacts.cs"];
m13_12 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="36-36", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="FailedStateFacts.cs"];
m13_8 [label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="33-33", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="FailedStateFacts.cs"];
m13_9 [label="Exit HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="33-33", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="FailedStateFacts.cs"];
m13_18 [label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="41-41", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="FailedStateFacts.cs"];
m13_2 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m13_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="FailedStateFacts.cs"];
m13_14 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m13_15 [label="var state = new FailedState(new Exception(''Message''))", span="26-26", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m13_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="FailedStateFacts.cs"];
m13_20 [label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="42-42", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="FailedStateFacts.cs"];
m13_0 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m13_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m13_19 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedStateFacts.cs"];
m13_16 [label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="39-39", cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="FailedStateFacts.cs"];
m13_17 [label="Exit HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="39-39", cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="FailedStateFacts.cs"];
m13_13 [label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="36-36", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="FailedStateFacts.cs"];
m13_4 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="FailedStateFacts.cs"];
m13_5 [label="Exit HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="FailedStateFacts.cs"];
m13_21 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs"];
m13_24 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FailedStateFacts.cs"];
m13_25 [label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FailedStateFacts.cs"];
m14_22 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="FailedStateHandler.cs"];
m14_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="FailedStateHandler.cs"];
m14_24 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="FailedStateHandler.cs"];
m14_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="FailedStateHandler.cs"];
m14_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="FailedStateHandler.cs"];
m14_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="FailedStateHandler.cs"];
m14_36 [label="Entry HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", span="85-85", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_37 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Failed\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_38 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_40 [label="testRunner.Then(''the state name is equal to \'Failed\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_41 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_42 [label="Exit HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", span="85-85", cluster="HangFire.Tests.States.FailedStateFeature.StateNameIsFailed()", file="FailedStateHandler.cs"];
m14_35 [label="Entry Unk.And", span="", cluster="Unk.And", file="FailedStateHandler.cs"];
m14_0 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedStateHandler.cs"];
m14_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedStateHandler.cs"];
m14_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Failed state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedStateHandler.cs"];
m14_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedStateHandler.cs"];
m14_4 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedStateHandler.cs"];
m14_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="FailedStateHandler.cs"];
m14_18 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="FailedStateHandler.cs"];
m14_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="FailedStateHandler.cs"];
m14_20 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="FailedStateHandler.cs"];
m14_26 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="FailedStateHandler.cs"];
m14_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="FailedStateHandler.cs"];
m14_28 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="FailedStateHandler.cs"];
m14_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="FailedStateHandler.cs"];
m14_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="FailedStateHandler.cs"];
m14_67 [label="Entry Unk.When", span="", cluster="Unk.When", file="FailedStateHandler.cs"];
m14_59 [label="Entry HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_60 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="137-137", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_61 [label="this.ScenarioSetup(scenarioInfo)", span="139-139", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_62 [label="this.FeatureBackground()", span="141-141", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_63 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="143-143", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_64 [label="testRunner.Then(''the job should be added to the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="145-145", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_65 [label="this.ScenarioCleanup()", span="147-147", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_66 [label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedStateHandler.cs"];
m14_58 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="FailedStateHandler.cs"];
m14_68 [label="Entry HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the failed set'', ((string[])(null)))", span="156-156", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_70 [label="this.ScenarioSetup(scenarioInfo)", span="158-158", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_71 [label="this.FeatureBackground()", span="160-160", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_72 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="162-162", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_73 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_74 [label="testRunner.Then(''the job should be removed from the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="166-166", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_75 [label="this.ScenarioCleanup()", span="168-168", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_76 [label="Exit HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedStateHandler.cs"];
m14_43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="FailedStateHandler.cs"];
m14_45 [label="Entry HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_49 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_50 [label="table1.AddRow(new string[] {\r\n                        ''FailedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_51 [label="table1.AddRow(new string[] {\r\n                        ''ExceptionType'',\r\n                        ''System.InvalidOperationException''})", span="116-118", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_52 [label="table1.AddRow(new string[] {\r\n                        ''ExceptionMessage'',\r\n                        ''Hello''})", span="119-121", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_53 [label="table1.AddRow(new string[] {\r\n                        ''ExceptionDetails'',\r\n                        ''<Non-empty>''})", span="122-124", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_54 [label="testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="126-126", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_55 [label="this.ScenarioCleanup()", span="128-128", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_56 [label="Exit HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.FailedStateFeature.ItHasTheCorrectPropertiesSet()", file="FailedStateHandler.cs"];
m14_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="FailedStateHandler.cs"];
m14_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="FailedStateHandler.cs"];
m14_9 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedStateHandler.cs"];
m14_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedStateHandler.cs"];
m14_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedStateHandler.cs"];
m14_12 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedStateHandler.cs"];
m14_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="FailedStateHandler.cs"];
m14_57 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="FailedStateHandler.cs"];
m14_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="FailedStateHandler.cs"];
m14_30 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedStateHandler.cs"];
m14_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedStateHandler.cs"];
m14_32 [label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedStateHandler.cs"];
m14_33 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedStateHandler.cs"];
m14_14 [label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="FailedStateHandler.cs"];
m14_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="FailedStateHandler.cs"];
m14_16 [label="HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="FailedStateHandler.cs"];
m14_17 [label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="FailedStateHandler.cs"];
m14_77 [label="HangFire.Tests.States.FailedStateFeature", span="", file="FailedStateHandler.cs"];
m15_35 [label="Entry Hangfire.IStackTraceFormatter<T>.Line(T)", span="66-66", cluster="Hangfire.IStackTraceFormatter<T>.Line(T)", file="GlobalJobFilterCollection.cs"];
m15_36 [label="Exit Hangfire.IStackTraceFormatter<T>.Line(T)", span="66-66", cluster="Hangfire.IStackTraceFormatter<T>.Line(T)", file="GlobalJobFilterCollection.cs"];
m15_27 [label="Entry Hangfire.IStackTraceFormatter<T>.Method(T)", span="62-62", cluster="Hangfire.IStackTraceFormatter<T>.Method(T)", file="GlobalJobFilterCollection.cs"];
m15_28 [label="Exit Hangfire.IStackTraceFormatter<T>.Method(T)", span="62-62", cluster="Hangfire.IStackTraceFormatter<T>.Method(T)", file="GlobalJobFilterCollection.cs"];
m15_50 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="GlobalJobFilterCollection.cs"];
m15_29 [label="Entry Hangfire.IStackTraceFormatter<T>.ParameterType(T)", span="63-63", cluster="Hangfire.IStackTraceFormatter<T>.ParameterType(T)", file="GlobalJobFilterCollection.cs"];
m15_30 [label="Exit Hangfire.IStackTraceFormatter<T>.ParameterType(T)", span="63-63", cluster="Hangfire.IStackTraceFormatter<T>.ParameterType(T)", file="GlobalJobFilterCollection.cs"];
m15_14 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", span="49-49", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="GlobalJobFilterCollection.cs"];
m15_15 [label="return  BeforeParameterName + markup + AfterParameterName;", span="49-49", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="GlobalJobFilterCollection.cs"];
m15_16 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", span="49-49", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="GlobalJobFilterCollection.cs"];
m15_41 [label="Entry string.Concat(System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Concat(System.Collections.Generic.IEnumerable<string>)", file="GlobalJobFilterCollection.cs"];
m15_11 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", span="48-48", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="GlobalJobFilterCollection.cs"];
m15_12 [label="return  BeforeParameterType + markup + AfterParameterType;", span="48-48", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="GlobalJobFilterCollection.cs"];
m15_13 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", span="48-48", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="GlobalJobFilterCollection.cs"];
m15_4 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="GlobalJobFilterCollection.cs"];
m15_40 [label="Entry Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", span="82-82", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="GlobalJobFilterCollection.cs"];
m15_42 [label="Debug.Assert(text != null)", span="84-84", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="GlobalJobFilterCollection.cs"];
m15_43 [label="var frames = StackTraceParser.Parse\r\n                (\r\n                    text,\r\n                    (idx, len, txt) => new\r\n                    {\r\n                        Index   = idx,\r\n                        End     = idx + len,\r\n                        Text    = txt,\r\n                        Markup  = formatter.Text(txt),\r\n                    },\r\n                    (t, m) => new\r\n                    {\r\n                        Type   = new { t.Index, t.End, Markup = formatter.Type(t.Markup)   },\r\n                        Method = new { m.Index, m.End, Markup = formatter.Method(m.Markup) }\r\n                    },\r\n                    (t, n) => new\r\n                    {\r\n                        Type = new { t.Index, t.End, Markup = formatter.ParameterType(t.Markup) },\r\n                        Name = new { n.Index, n.End, Markup = formatter.ParameterName(n.Markup) }\r\n                    },\r\n                    (p, ps) => new { List = p, Parameters = ps.ToArray() },\r\n                    (f, l) => new\r\n                    {\r\n                        File = f.Text.Length > 0\r\n                             ? new { f.Index, f.End, Markup = formatter.File(f.Markup) }\r\n                             : null,\r\n                        Line = l.Text.Length > 0\r\n                             ? new { l.Index, l.End, Markup = formatter.Line(l.Markup) }\r\n                             : null,\r\n                    },\r\n                    (f, tm, p, fl) =>\r\n                        from tokens in new[]\r\n                        {\r\n                            new[]\r\n                            {\r\n                                new { f.Index, End = f.Index, Markup = formatter.BeforeFrame },\r\n                                tm.Type,\r\n                                tm.Method,\r\n                                new { p.List.Index, End = p.List.Index, Markup = formatter.BeforeParameters },\r\n                            },\r\n                            from pe in p.Parameters\r\n                            from e in new[] { pe.Type, pe.Name }\r\n                            select e,\r\n                            new[]\r\n                            {\r\n                                new { Index = p.List.End, p.List.End, Markup = formatter.AfterParameters },\r\n                                fl.File,\r\n                                fl.Line,\r\n                                new { Index = f.End, f.End, Markup = formatter.AfterFrame },\r\n                            },\r\n                        }\r\n                        from token in tokens\r\n                        where token != null\r\n                        select token\r\n                )", span="86-140", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", color=red, community=0, file="GlobalJobFilterCollection.cs"];
m15_44 [label="return\r\n                from token in Enumerable.Repeat(new { Index = 0, End = 0, Markup = default(T) }, 1)\r\n                                        .Concat(from tokens in frames from token in tokens select token)\r\n                                        .Pairwise((prev, curr) => new { Previous = prev, Current = curr })\r\n                from m in new[]\r\n                {\r\n                    formatter.Text(text.Substring(token.Previous.End, token.Current.Index - token.Previous.End)),\r\n                    token.Current.Markup,\r\n                }\r\n                select m;", span="142-151", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="GlobalJobFilterCollection.cs"];
m15_45 [label="Exit Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", span="82-82", cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="GlobalJobFilterCollection.cs"];
m15_5 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", span="46-46", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="GlobalJobFilterCollection.cs"];
m15_6 [label="return  BeforeType          + markup + AfterType;", span="46-46", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="GlobalJobFilterCollection.cs"];
m15_7 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", span="46-46", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="GlobalJobFilterCollection.cs"];
m15_25 [label="Entry Hangfire.IStackTraceFormatter<T>.Type(T)", span="61-61", cluster="Hangfire.IStackTraceFormatter<T>.Type(T)", file="GlobalJobFilterCollection.cs"];
m15_26 [label="Exit Hangfire.IStackTraceFormatter<T>.Type(T)", span="61-61", cluster="Hangfire.IStackTraceFormatter<T>.Type(T)", file="GlobalJobFilterCollection.cs"];
m15_47 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="GlobalJobFilterCollection.cs"];
m15_51 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="GlobalJobFilterCollection.cs"];
m15_3 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="GlobalJobFilterCollection.cs"];
m15_71 [label="Entry lambda expression", span="145-145", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_53 [label="new\r\n                    {\r\n                        Index   = idx,\r\n                        End     = idx + len,\r\n                        Text    = txt,\r\n                        Markup  = formatter.Text(txt),\r\n                    }", span="89-95", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_56 [label="new\r\n                    {\r\n                        Type   = new { t.Index, t.End, Markup = formatter.Type(t.Markup)   },\r\n                        Method = new { m.Index, m.End, Markup = formatter.Method(m.Markup) }\r\n                    }", span="96-100", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_59 [label="new\r\n                    {\r\n                        Type = new { t.Index, t.End, Markup = formatter.ParameterType(t.Markup) },\r\n                        Name = new { n.Index, n.End, Markup = formatter.ParameterName(n.Markup) }\r\n                    }", span="101-105", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_66 [label="new\r\n                    {\r\n                        File = f.Text.Length > 0\r\n                             ? new { f.Index, f.End, Markup = formatter.File(f.Markup) }\r\n                             : null,\r\n                        Line = l.Text.Length > 0\r\n                             ? new { l.Index, l.End, Markup = formatter.Line(l.Markup) }\r\n                             : null,\r\n                    }", span="107-115", cluster="lambda expression", color=red, community=0, file="GlobalJobFilterCollection.cs"];
m15_69 [label="from tokens in new[]\r\n                        {\r\n                            new[]\r\n                            {\r\n                                new { f.Index, End = f.Index, Markup = formatter.BeforeFrame },\r\n                                tm.Type,\r\n                                tm.Method,\r\n                                new { p.List.Index, End = p.List.Index, Markup = formatter.BeforeParameters },\r\n                            },\r\n                            from pe in p.Parameters\r\n                            from e in new[] { pe.Type, pe.Name }\r\n                            select e,\r\n                            new[]\r\n                            {\r\n                                new { Index = p.List.End, p.List.End, Markup = formatter.AfterParameters },\r\n                                fl.File,\r\n                                fl.Line,\r\n                                new { Index = f.End, f.End, Markup = formatter.AfterFrame },\r\n                            },\r\n                        }\r\n                        from token in tokens\r\n                        where token != null\r\n                        select token", span="117-139", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_52 [label="Entry lambda expression", span="89-95", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_55 [label="Entry lambda expression", span="96-100", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_58 [label="Entry lambda expression", span="101-105", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_61 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_65 [label="Entry lambda expression", span="107-115", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_68 [label="Entry lambda expression", span="116-139", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_54 [label="Exit lambda expression", span="89-95", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_57 [label="Exit lambda expression", span="96-100", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_60 [label="Exit lambda expression", span="101-105", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_62 [label="new { List = p, Parameters = ps.ToArray() }", span="106-106", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_63 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_67 [label="Exit lambda expression", span="107-115", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_70 [label="Exit lambda expression", span="116-139", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_72 [label="new { Previous = prev, Current = curr }", span="145-145", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_73 [label="Exit lambda expression", span="145-145", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m15_0 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", span="45-45", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="GlobalJobFilterCollection.cs"];
m15_1 [label="return  string.IsNullOrEmpty(text) ? string.Empty : WebUtility.HtmlEncode(text);", span="45-45", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="GlobalJobFilterCollection.cs"];
m15_2 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", span="45-45", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="GlobalJobFilterCollection.cs"];
m15_33 [label="Entry Hangfire.IStackTraceFormatter<T>.File(T)", span="65-65", cluster="Hangfire.IStackTraceFormatter<T>.File(T)", file="GlobalJobFilterCollection.cs"];
m15_34 [label="Exit Hangfire.IStackTraceFormatter<T>.File(T)", span="65-65", cluster="Hangfire.IStackTraceFormatter<T>.File(T)", file="GlobalJobFilterCollection.cs"];
m15_49 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="GlobalJobFilterCollection.cs"];
m15_23 [label="Entry Hangfire.IStackTraceFormatter<T>.Text(string)", span="60-60", cluster="Hangfire.IStackTraceFormatter<T>.Text(string)", file="GlobalJobFilterCollection.cs"];
m15_24 [label="Exit Hangfire.IStackTraceFormatter<T>.Text(string)", span="60-60", cluster="Hangfire.IStackTraceFormatter<T>.Text(string)", file="GlobalJobFilterCollection.cs"];
m15_17 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", span="50-50", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="GlobalJobFilterCollection.cs"];
m15_18 [label="return  BeforeFile          + markup + AfterFile;", span="50-50", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="GlobalJobFilterCollection.cs"];
m15_19 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", span="50-50", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="GlobalJobFilterCollection.cs"];
m15_48 [label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0", cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="GlobalJobFilterCollection.cs"];
m15_20 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", span="51-51", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="GlobalJobFilterCollection.cs"];
m15_21 [label="return  BeforeLine          + markup + AfterLine;", span="51-51", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="GlobalJobFilterCollection.cs"];
m15_22 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", span="51-51", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="GlobalJobFilterCollection.cs"];
m15_37 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="GlobalJobFilterCollection.cs"];
m15_38 [label="return string.Concat(Format(text, formatter ?? DefaultStackTraceHtmlFragments));", span="79-79", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="GlobalJobFilterCollection.cs"];
m15_39 [label="Exit Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="GlobalJobFilterCollection.cs"];
m15_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="GlobalJobFilterCollection.cs"];
m15_8 [label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", span="47-47", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="GlobalJobFilterCollection.cs"];
m15_9 [label="return  BeforeMethod        + markup + AfterMethod;", span="47-47", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="GlobalJobFilterCollection.cs"];
m15_10 [label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", span="47-47", cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="GlobalJobFilterCollection.cs"];
m15_31 [label="Entry Hangfire.IStackTraceFormatter<T>.ParameterName(T)", span="64-64", cluster="Hangfire.IStackTraceFormatter<T>.ParameterName(T)", file="GlobalJobFilterCollection.cs"];
m15_32 [label="Exit Hangfire.IStackTraceFormatter<T>.ParameterName(T)", span="64-64", cluster="Hangfire.IStackTraceFormatter<T>.ParameterName(T)", file="GlobalJobFilterCollection.cs"];
m15_74 [label="Hangfire.StackTraceHtmlFragments", span="", file="GlobalJobFilterCollection.cs"];
m15_75 [label="Hangfire.IStackTraceFormatter<T>", span="", file="GlobalJobFilterCollection.cs"];
m16_8 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="88-88", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="GlobalStateHandlerCollection.cs"];
m16_6 [label="Entry HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="18-18", cluster="HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="GlobalStateHandlerCollection.cs"];
m16_9 [label="handler == null", span="20-20", cluster="HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_11 [label="Handlers.Add(handler)", span="21-21", cluster="HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_10 [label="throw new ArgumentNullException(''handler'');", span="20-20", cluster="HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_12 [label="Exit HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="18-18", cluster="HangFire.States.GlobalStateHandlerCollection.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="GlobalStateHandlerCollection.cs"];
m16_14 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="GlobalStateHandlerCollection.cs"];
m16_0 [label="Entry HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", span="11-11", cluster="HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", file="GlobalStateHandlerCollection.cs"];
m16_1 [label="RegisterHandler(new SucceededState.Handler())", span="13-13", cluster="HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_2 [label="RegisterHandler(new ScheduledState.Handler())", span="14-14", cluster="HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_3 [label="RegisterHandler(new EnqueuedState.Handler())", span="15-15", cluster="HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_4 [label="Exit HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", span="11-11", cluster="HangFire.States.GlobalStateHandlerCollection.GlobalStateHandlerCollection()", file="GlobalStateHandlerCollection.cs"];
m16_15 [label="Entry HangFire.States.GlobalStateHandlerCollection.GetHandlers()", span="24-24", cluster="HangFire.States.GlobalStateHandlerCollection.GetHandlers()", file="GlobalStateHandlerCollection.cs"];
m16_16 [label="return Handlers;", span="26-26", cluster="HangFire.States.GlobalStateHandlerCollection.GetHandlers()", color=red, community=0, file="GlobalStateHandlerCollection.cs"];
m16_17 [label="Exit HangFire.States.GlobalStateHandlerCollection.GetHandlers()", span="24-24", cluster="HangFire.States.GlobalStateHandlerCollection.GetHandlers()", file="GlobalStateHandlerCollection.cs"];
m16_7 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="45-45", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="GlobalStateHandlerCollection.cs"];
m16_5 [label="Entry HangFire.States.SucceededState.Handler.Handler()", span="38-38", cluster="HangFire.States.SucceededState.Handler.Handler()", file="GlobalStateHandlerCollection.cs"];
m17_10 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="49-49", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="GlobalStateHandlers.cs"];
m17_6 [label="Entry HangFire.Common.States.StateHandlerCollection.StateHandlerCollection()", span="6-6", cluster="HangFire.Common.States.StateHandlerCollection.StateHandlerCollection()", file="GlobalStateHandlers.cs"];
m17_0 [label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="7-7", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m17_1 [label="Handlers = new StateHandlerCollection()", span="9-9", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs"];
m17_2 [label="Handlers.AddHandler(new SucceededState.Handler())", span="10-10", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs"];
m17_3 [label="Handlers.AddHandler(new ScheduledState.Handler())", span="11-11", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs"];
m17_4 [label="Handlers.AddHandler(new EnqueuedState.Handler())", span="12-12", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs"];
m17_5 [label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="7-7", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m17_8 [label="Entry Unk.AddHandler", span="", cluster="Unk.AddHandler", file="GlobalStateHandlers.cs"];
m17_7 [label="Entry HangFire.States.SucceededState.Handler.Handler()", span="53-53", cluster="HangFire.States.SucceededState.Handler.Handler()", file="GlobalStateHandlers.cs"];
m17_9 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="48-48", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="GlobalStateHandlers.cs"];
m18_21 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="HangFireConfig.cs"];
m18_28 [label="Entry HangFire.Server.WorkerManager.ToString()", span="57-57", cluster="HangFire.Server.WorkerManager.ToString()", file="HangFireConfig.cs"];
m18_29 [label="return ''Worker Manager'';", span="59-59", cluster="HangFire.Server.WorkerManager.ToString()", file="HangFireConfig.cs"];
m18_30 [label="Exit HangFire.Server.WorkerManager.ToString()", span="57-57", cluster="HangFire.Server.WorkerManager.ToString()", file="HangFireConfig.cs"];
m18_22 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_9 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="HangFireConfig.cs"];
m18_24 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="HangFireConfig.cs"];
m18_26 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="HangFireConfig.cs"];
m18_23 [label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="62-62", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="HangFireConfig.cs"];
m18_31 [label="return new ServerComponentRunner(\r\n                new Worker(context),\r\n                new ServerComponentRunnerOptions { LowerLogVerbosity = true });", span="64-66", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="HangFireConfig.cs"];
m18_32 [label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="62-62", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="HangFireConfig.cs"];
m18_35 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="HangFireConfig.cs"];
m18_0 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_1 [label="sharedContext == null", span="32-32", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_3 [label="workerCount <= 0", span="33-33", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_5 [label="_sharedContext = sharedContext", span="35-35", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_6 [label="_workerCount = workerCount", span="36-36", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_2 [label="throw new ArgumentNullException(''sharedContext'');", span="32-32", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_4 [label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="33-33", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_7 [label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="HangFireConfig.cs"];
m18_27 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="HangFireConfig.cs"];
m18_33 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="HangFireConfig.cs"];
m18_34 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="HangFireConfig.cs"];
m18_25 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="HangFireConfig.cs"];
m18_10 [label="Entry HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="39-39", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_11 [label="var workerRunners = new List<IServerComponentRunner>(_workerCount)", span="41-41", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_19 [label="cancellationToken.WaitHandle.WaitOne()", span="53-53", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_12 [label="var i = 1", span="42-42", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_15 [label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="47-47", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_17 [label="var runners = new ServerComponentRunnerCollection(workerRunners)", span="50-50", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_13 [label="i <= _workerCount", span="42-42", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_14 [label="var workerContext = new WorkerContext(_sharedContext, i)", span="44-44", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_16 [label="i++", span="42-42", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_18 [label="runners.Start()", span="52-52", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_20 [label="Exit HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="39-39", cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="HangFireConfig.cs"];
m18_36 [label="HangFire.Server.WorkerManager", span="", file="HangFireConfig.cs"];
m19_6 [label="Entry Hangfire.Common.ExpressionUtil.ExpressionFingerprint.Equals(Hangfire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32", cluster="Hangfire.Common.ExpressionUtil.ExpressionFingerprint.Equals(Hangfire.Common.ExpressionUtil.ExpressionFingerprint)", file="HtmlHelper.cs"];
m19_0 [label="Entry Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17", cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="HtmlHelper.cs"];
m19_1 [label="Exit Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17", cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="HtmlHelper.cs"];
m19_2 [label="Entry Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24", cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="HtmlHelper.cs"];
m19_3 [label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="26-26", cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="HtmlHelper.cs"];
m19_4 [label="return (other != null)\r\n                   && Equals(other);", span="27-28", cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="HtmlHelper.cs"];
m19_5 [label="Exit Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24", cluster="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="HtmlHelper.cs"];
m19_7 [label="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint", span="", file="HtmlHelper.cs"];
m20_0 [label="Entry HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="24-24", cluster="HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="IJobClient.cs"];
m20_1 [label="Exit HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="24-24", cluster="HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="IJobClient.cs"];
m21_0 [label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="IJobFilterProvider.cs"];
m21_1 [label="Exit HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="IJobFilterProvider.cs"];
m22_0 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="InvocationData.cs"];
m22_1 [label="Type = type", span="7-7", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", color=green, community=0, file="InvocationData.cs"];
m22_2 [label="Method = method", span="8-8", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", color=green, community=0, file="InvocationData.cs"];
m22_3 [label="ParameterTypes = parameterTypes", span="9-9", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", color=green, community=0, file="InvocationData.cs"];
m22_4 [label="Exit HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="InvocationData.cs"];
m23_37 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="101-101", cluster="Hangfire.BackgroundJobServer.Dispose()", file="IWriteOnlyTransaction.cs"];
m23_38 [label="_bootstrapSupervisor.Dispose()", span="103-103", cluster="Hangfire.BackgroundJobServer.Dispose()", file="IWriteOnlyTransaction.cs"];
m23_39 [label="Logger.Info(''Hangfire Server stopped.'')", span="104-104", cluster="Hangfire.BackgroundJobServer.Dispose()", file="IWriteOnlyTransaction.cs"];
m23_40 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="101-101", cluster="Hangfire.BackgroundJobServer.Dispose()", file="IWriteOnlyTransaction.cs"];
m23_57 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="IWriteOnlyTransaction.cs"];
m23_4 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="IWriteOnlyTransaction.cs"];
m23_5 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="IWriteOnlyTransaction.cs"];
m23_19 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="IWriteOnlyTransaction.cs"];
m23_0 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="IWriteOnlyTransaction.cs"];
m23_1 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="IWriteOnlyTransaction.cs"];
m23_58 [label="Entry Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_63 [label="var stateMachineFactory = new StateMachineFactory(_storage)", span="141-141", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_65 [label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="150-150", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_66 [label="yield return new ServerHeartbeat(_storage, _serverId);", span="151-151", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_67 [label="yield return new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval);", span="152-152", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_68 [label="yield return new ServerWatchdog(_storage, _options.ServerWatchdogOptions);", span="153-153", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_69 [label="yield return new RecurringJobScheduler(\r\n                _storage, \r\n                new BackgroundJobClient(_storage, stateMachineFactory),\r\n                new ScheduleInstantFactory(),\r\n                new EveryMinuteThrottler());", span="155-159", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_64 [label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="142-148", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_70 [label="Exit Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="IWriteOnlyTransaction.cs"];
m23_21 [label="Entry Hangfire.BackgroundJobServer.Start()", span="85-85", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_22 [label="Logger.Info(''Starting Hangfire Server...'')", span="87-87", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_23 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="88-88", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_24 [label="_storage.WriteOptionsToLog(Logger)", span="90-90", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_25 [label="_options.WriteToLog(Logger)", span="91-91", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_26 [label="_bootstrapSupervisor.Start()", span="93-93", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_27 [label="Exit Hangfire.BackgroundJobServer.Start()", span="85-85", cluster="Hangfire.BackgroundJobServer.Start()", file="IWriteOnlyTransaction.cs"];
m23_75 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", span="28-28", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", file="IWriteOnlyTransaction.cs"];
m23_71 [label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_81 [label="Entry Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", span="21-21", cluster="Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", file="IWriteOnlyTransaction.cs"];
m23_49 [label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", span="41-41", cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", file="IWriteOnlyTransaction.cs"];
m23_48 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="IWriteOnlyTransaction.cs"];
m23_18 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="IWriteOnlyTransaction.cs"];
m23_47 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="IWriteOnlyTransaction.cs"];
m23_60 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="IWriteOnlyTransaction.cs"];
m23_85 [label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", span="36-36", cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", file="IWriteOnlyTransaction.cs"];
m23_86 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="IWriteOnlyTransaction.cs"];
m23_50 [label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="IWriteOnlyTransaction.cs"];
m23_30 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="IWriteOnlyTransaction.cs"];
m23_62 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="IWriteOnlyTransaction.cs"];
m23_46 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18", cluster="Hangfire.Server.ServerContext.ServerContext()", file="IWriteOnlyTransaction.cs"];
m23_79 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="IWriteOnlyTransaction.cs"];
m23_20 [label="Entry Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="IWriteOnlyTransaction.cs"];
m23_42 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="109-113", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="IWriteOnlyTransaction.cs"];
m23_43 [label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerSupervisor>(GetSupervisors))", span="115-119", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="IWriteOnlyTransaction.cs"];
m23_44 [label="return new ServerSupervisor(\r\n                bootstrapper, \r\n                new ServerSupervisorOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="121-126", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="IWriteOnlyTransaction.cs"];
m23_45 [label="Exit Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107", cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="IWriteOnlyTransaction.cs"];
m23_31 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="IWriteOnlyTransaction.cs"];
m23_78 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="IWriteOnlyTransaction.cs"];
m23_74 [label="Entry Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27", cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="IWriteOnlyTransaction.cs"];
m23_77 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="IWriteOnlyTransaction.cs"];
m23_80 [label="Entry Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", span="21-21", cluster="Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", file="IWriteOnlyTransaction.cs"];
m23_29 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="IWriteOnlyTransaction.cs"];
m23_82 [label="Entry Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="IWriteOnlyTransaction.cs"];
m23_83 [label="return new ServerSupervisor(new AutomaticRetryServerComponentWrapper(component));", span="164-164", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="IWriteOnlyTransaction.cs"];
m23_84 [label="Exit Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162", cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="IWriteOnlyTransaction.cs"];
m23_33 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="96-96", cluster="Hangfire.BackgroundJobServer.Stop()", file="IWriteOnlyTransaction.cs"];
m23_34 [label="_bootstrapSupervisor.Stop()", span="98-98", cluster="Hangfire.BackgroundJobServer.Stop()", file="IWriteOnlyTransaction.cs"];
m23_35 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="96-96", cluster="Hangfire.BackgroundJobServer.Stop()", file="IWriteOnlyTransaction.cs"];
m23_17 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="IWriteOnlyTransaction.cs"];
m23_72 [label="Entry Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", span="23-23", cluster="Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", file="IWriteOnlyTransaction.cs"];
m23_32 [label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22", cluster="Hangfire.Server.IServerSupervisor.Start()", file="IWriteOnlyTransaction.cs"];
m23_59 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="IWriteOnlyTransaction.cs"];
m23_28 [label="Entry Hangfire.Logging.ILog.Info(string)", span="201-201", cluster="Hangfire.Logging.ILog.Info(string)", file="IWriteOnlyTransaction.cs"];
m23_51 [label="Entry Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="IWriteOnlyTransaction.cs"];
m23_52 [label="var supervisors = new List<IServerSupervisor>()", span="131-131", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="IWriteOnlyTransaction.cs"];
m23_53 [label="supervisors.AddRange(GetCommonComponents().Select(CreateSupervisor))", span="133-133", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="IWriteOnlyTransaction.cs"];
m23_54 [label="supervisors.AddRange(_storage.GetComponents().Select(CreateSupervisor))", span="134-134", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="IWriteOnlyTransaction.cs"];
m23_55 [label="return new ServerSupervisorCollection(supervisors);", span="136-136", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="IWriteOnlyTransaction.cs"];
m23_56 [label="Exit Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129", cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="IWriteOnlyTransaction.cs"];
m23_76 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_36 [label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23", cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IWriteOnlyTransaction.cs"];
m23_61 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()", file="IWriteOnlyTransaction.cs"];
m23_73 [label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28", cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="IWriteOnlyTransaction.cs"];
m23_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_7 [label="options == null", span="73-73", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_9 [label="storage == null", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_11 [label="_options = options", span="76-76", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_12 [label="_storage = storage", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_8 [label="throw new ArgumentNullException(''options'');", span="73-73", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_10 [label="throw new ArgumentNullException(''storage'');", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_13 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_14 [label="_bootstrapSupervisor = GetBootstrapSupervisor()", span="82-82", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_15 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_41 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="IWriteOnlyTransaction.cs"];
m23_2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="IWriteOnlyTransaction.cs"];
m23_87 [label="Hangfire.BackgroundJobServer", span="", file="IWriteOnlyTransaction.cs"];
m27_25 [label="Entry HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", span="100-100", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_32 [label=parameters, span="102-102", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_33 [label="parameter.IsOut", span="108-108", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_35 [label="parameter.ParameterType.IsByRef", span="114-114", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_34 [label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="110-111", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_36 [label="throw new ArgumentException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="116-117", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_37 [label="Exit HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", span="100-100", cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs"];
m27_39 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JobClient.cs"];
m27_27 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="50-50", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs"];
m27_38 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="JobClient.cs"];
m27_28 [label="Entry HangFire.Client.JobClient.Dispose()", span="95-95", cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs"];
m27_29 [label="_connection.Dispose()", span="97-97", cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs"];
m27_30 [label="Exit HangFire.Client.JobClient.Dispose()", span="95-95", cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs"];
m27_26 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_24 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="JobClient.cs"];
m27_0 [label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", file="JobClient.cs"];
m27_1 [label="Exit HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", file="JobClient.cs"];
m27_2 [label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", span="50-50", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_3 [label="connection == null", span="52-52", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_5 [label="jobCreator == null", span="53-53", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_7 [label="_connection = connection", span="55-55", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_8 [label="_jobCreator = jobCreator", span="56-56", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_4 [label="throw new ArgumentNullException(''connection'');", span="52-52", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_6 [label="throw new ArgumentNullException(''jobCreator'');", span="53-53", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_9 [label="Exit HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", span="50-50", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs"];
m27_31 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="JobClient.cs"];
m27_11 [label="Entry HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_12 [label="method == null", span="77-77", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="JobClient.cs"];
m27_14 [label="arguments == null", span="78-78", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="JobClient.cs"];
m27_16 [label="state == null", span="79-79", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_18 [label="var parameters = method.Method.GetParameters()", span="81-81", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="JobClient.cs"];
m27_20 [label="var context = new CreateContext(_connection, method, arguments, state)", span="85-85", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="JobClient.cs"];
m27_13 [label="throw new ArgumentNullException(''method'');", span="77-77", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="JobClient.cs"];
m27_15 [label="throw new ArgumentNullException(''arguments'');", span="78-78", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=red, community=0, file="JobClient.cs"];
m27_17 [label="throw new ArgumentNullException(''state'');", span="79-79", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_19 [label="ValidateMethodParameters(parameters)", span="83-83", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_21 [label="_jobCreator.CreateJob(context)", span="86-86", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_22 [label="return context.JobId;", span="88-88", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_23 [label="Exit HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs"];
m27_40 [label="HangFire.Client.JobClient", span="", file="JobClient.cs"];
m28_0 [label="Entry Hangfire.Dashboard.Resources.Strings.Strings()", span="33-33", cluster="Hangfire.Dashboard.Resources.Strings.Strings()", file="JobClientSteps.cs"];
m28_1 [label="Exit Hangfire.Dashboard.Resources.Strings.Strings()", span="33-33", cluster="Hangfire.Dashboard.Resources.Strings.Strings()", file="JobClientSteps.cs"];
m29_33 [label="Entry HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="44-44", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", file="JobClientTests.cs"];
m29_34 [label="Assert.Throws<ArgumentNullException>(\r\n                () => _client.CreateJob(null, new string[0], _stateMock.Object))", span="46-47", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", color=red, community=0, file="JobClientTests.cs"];
m29_35 [label="Exit HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="44-44", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", file="JobClientTests.cs"];
m29_56 [label="Entry HangFire.Core.Tests.Client.JobClientTests.Method()", span="70-70", cluster="HangFire.Core.Tests.Client.JobClientTests.Method()", file="JobClientTests.cs"];
m29_57 [label="Exit HangFire.Core.Tests.Client.JobClientTests.Method()", span="70-70", cluster="HangFire.Core.Tests.Client.JobClientTests.Method()", file="JobClientTests.cs"];
m29_14 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="JobClientTests.cs"];
m29_16 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="JobClientTests.cs"];
m29_58 [label="Entry HangFire.Core.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", span="74-74", cluster="HangFire.Core.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", file="JobClientTests.cs"];
m29_59 [label="Exit HangFire.Core.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", span="74-74", cluster="HangFire.Core.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", file="JobClientTests.cs"];
m29_40 [label="Entry HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="51-51", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="JobClientTests.cs"];
m29_41 [label="Assert.Throws<ArgumentNullException>(\r\n                () => _client.CreateJob(_method, null, _stateMock.Object))", span="53-54", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", color=red, community=1, file="JobClientTests.cs"];
m29_42 [label="Exit HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="51-51", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="JobClientTests.cs"];
m29_15 [label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48", cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="JobClientTests.cs"];
m29_13 [label="Entry JobClient.cstr", span="", cluster="JobClient.cstr", file="JobClientTests.cs"];
m29_60 [label="Entry HangFire.Core.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", span="78-78", cluster="HangFire.Core.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", file="JobClientTests.cs"];
m29_61 [label="a = ''hello''", span="80-80", cluster="HangFire.Core.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", file="JobClientTests.cs"];
m29_62 [label="Exit HangFire.Core.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", span="78-78", cluster="HangFire.Core.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", file="JobClientTests.cs"];
m29_53 [label="Entry HangFire.Core.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", span="65-65", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", file="JobClientTests.cs"];
m29_54 [label="_client.CreateJob(_method, new[] { ''hello'', ''3'' }, _stateMock.Object)", span="67-67", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", color=red, community=0, file="JobClientTests.cs"];
m29_55 [label="Exit HangFire.Core.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", span="65-65", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", file="JobClientTests.cs"];
m29_12 [label="Entry Mock<JobCreator>.cstr", span="", cluster="Mock<JobCreator>.cstr", file="JobClientTests.cs"];
m29_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobClientTests.cs"];
m29_49 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="JobClientTests.cs"];
m29_17 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="JobClientTests.cs"];
m29_18 [label="x.Storage", span="21-21", cluster="lambda expression", file="JobClientTests.cs"];
m29_19 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="JobClientTests.cs"];
m29_24 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="JobClientTests.cs"];
m29_25 [label="new JobClient(null, _creatorMock.Object)", span="33-33", cluster="lambda expression", file="JobClientTests.cs"];
m29_26 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="JobClientTests.cs"];
m29_30 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="JobClientTests.cs"];
m29_31 [label="new JobClient(_connectionMock.Object, null)", span="40-40", cluster="lambda expression", file="JobClientTests.cs"];
m29_32 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="JobClientTests.cs"];
m29_36 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JobClientTests.cs"];
m29_37 [label="_client.CreateJob(null, new string[0], _stateMock.Object)", span="47-47", cluster="lambda expression", color=red, community=0, file="JobClientTests.cs"];
m29_38 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JobClientTests.cs"];
m29_43 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="JobClientTests.cs"];
m29_44 [label="_client.CreateJob(_method, null, _stateMock.Object)", span="54-54", cluster="lambda expression", color=red, community=0, file="JobClientTests.cs"];
m29_45 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="JobClientTests.cs"];
m29_50 [label="_client.CreateJob(_method, new string[0], null)", span="61-61", cluster="lambda expression", color=red, community=0, file="JobClientTests.cs"];
m29_51 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="JobClientTests.cs"];
m29_52 [label="Entry HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClientTests.cs"];
m29_27 [label="Entry HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="37-37", cluster="HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="JobClientTests.cs"];
m29_28 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new JobClient(_connectionMock.Object, null))", span="39-40", cluster="HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="JobClientTests.cs"];
m29_29 [label="Exit HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="37-37", cluster="HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="JobClientTests.cs"];
m29_0 [label="Entry HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", span="18-18", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", file="JobClientTests.cs"];
m29_1 [label="_connectionMock = new Mock<IStorageConnection>()", span="20-20", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", file="JobClientTests.cs"];
m29_2 [label="_connectionMock.Setup(x => x.Storage).Returns(new Mock<JobStorage>().Object)", span="21-21", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", file="JobClientTests.cs"];
m29_3 [label="_creatorMock = new Mock<JobCreator>()", span="23-23", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", file="JobClientTests.cs"];
m29_4 [label="_client = new JobClient(_connectionMock.Object, _creatorMock.Object)", span="24-24", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", file="JobClientTests.cs"];
m29_5 [label="_stateMock = new Mock<JobState>()", span="25-25", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", color=red, community=0, file="JobClientTests.cs"];
m29_6 [label="_method = new JobMethod(typeof(JobClientTests), typeof(JobClientTests).GetMethod(''Method''))", span="26-26", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", color=red, community=0, file="JobClientTests.cs"];
m29_7 [label="Exit HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", span="18-18", cluster="HangFire.Core.Tests.Client.JobClientTests.JobClientTests()", file="JobClientTests.cs"];
m29_20 [label="Entry HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", file="JobClientTests.cs"];
m29_21 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new JobClient(null, _creatorMock.Object))", span="32-33", cluster="HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", file="JobClientTests.cs"];
m29_22 [label="Exit HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", file="JobClientTests.cs"];
m29_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobClientTests.cs"];
m29_39 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobClientTests.cs"];
m29_46 [label="Entry HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="58-58", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClientTests.cs"];
m29_47 [label="Assert.Throws<ArgumentNullException>(\r\n                () => _client.CreateJob(_method, new string[0], null))", span="60-61", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="JobClientTests.cs"];
m29_48 [label="Exit HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="58-58", cluster="HangFire.Core.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClientTests.cs"];
m29_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobClientTests.cs"];
m29_10 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="JobClientTests.cs"];
m29_63 [label="HangFire.Core.Tests.Client.JobClientTests", span="", file="JobClientTests.cs"];
m30_79 [label="Entry HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="27-27", cluster="HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="JobCreator.cs"];
m30_42 [label=Exception, span="139-139", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="JobCreator.cs"];
m30_33 [label="Exit HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", span="68-68", cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="JobCreator.cs"];
m30_47 [label="return new CreatedContext(context, false, null);", span="81-81", cluster="lambda expression", file="JobCreator.cs"];
m30_30 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_53 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="JobCreator.cs"];
m30_6 [label="filters == null", span="43-43", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", file="JobCreator.cs", color=green, community=0];
m30_7 [label="throw new ArgumentNullException(''filters'');", span="43-43", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="JobCreator.cs"];
m30_9 [label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", file="JobCreator.cs"];
m30_11 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="JobCreator.cs"];
m30_13 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="JobCreator.cs"];
m30_15 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="JobCreator.cs"];
m30_16 [label="new JobFilter(f, JobFilterScope.Type, null)", span="45-45", cluster="lambda expression", file="JobCreator.cs", color=green, community=0];
m30_17 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="JobCreator.cs"];
m30_18 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="JobCreator.cs"];
m30_8 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="45-45", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="JobCreator.cs"];
m30_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="JobCreator.cs"];
m30_12 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="45-45", cluster="lambda expression", file="JobCreator.cs", color=green, community=0];
m30_14 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobCreator.cs"];
m30_19 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="48-48", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m30_20 [label="var filterInfo = GetFilters(context.Job.MethodData)", span="50-50", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", color=green, community=0];
m30_35 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobCreator.cs"];
m30_44 [label="Exit Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="JobCreator.cs"];
m30_49 [label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149", cluster="Hangfire.Client.CreateContext.CreateJob()", file="JobCreator.cs"];
m30_5 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobCreator.cs"];
m30_43 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="JobCreator.cs"];
m30_34 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="47-47", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobCreator.cs"];
m30_73 [label="Entry HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="27-27", cluster="HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="JobCreator.cs"];
m30_56 [label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", span="90-90", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_59 [label="return new CreatedContext(\r\n                    preContext, true, null);", span="98-99", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_65 [label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="111-112", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_57 [label="filter.OnCreating(preContext)", span="95-95", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_58 [label="preContext.Canceled", span="96-96", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_62 [label="postContext = continuation()", span="106-106", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_66 [label="filter.OnCreated(postContext)", span="114-114", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_70 [label="filter.OnCreated(postContext)", span="124-124", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_61 [label="CreatedContext postContext", span="103-103", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_64 [label="wasError = true", span="110-110", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_67 [label="!postContext.ExceptionHandled", span="116-116", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_71 [label="return postContext;", span="127-127", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_68 [label="throw;", span="118-118", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_60 [label="var wasError = false", span="102-102", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_63 [label=Exception, span="108-108", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_69 [label="!wasError", span="122-122", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_72 [label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", span="90-90", cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs"];
m30_22 [label=Exception, span="56-56", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m30_46 [label="context.CreateJob()", span="80-80", cluster="lambda expression", file="JobCreator.cs"];
m30_45 [label="Entry lambda expression", span="78-82", cluster="lambda expression", file="JobCreator.cs"];
m30_0 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobCreator.cs"];
m30_1 [label="Items = context.Items", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobCreator.cs"];
m30_2 [label="JobId = context.JobId", span="41-41", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobCreator.cs"];
m30_3 [label="_jobWasCreated = context._jobWasCreated", span="42-42", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", color=red, community=0, file="JobCreator.cs"];
m30_4 [label="_parameters = context._parameters", span="43-43", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobCreator.cs"];
m30_21 [label="CreateWithFilters(context, filterInfo.ClientFilters)", span="54-54", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m30_24 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_23 [label="Entry Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_25 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_26 [label=_jobWasCreated, span="100-100", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_75 [label="Entry HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="33-33", cluster="HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="JobCreator.cs"];
m30_36 [label="var preContext = new CreatingContext(context)", span="77-77", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs"];
m30_54 [label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23", cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="JobCreator.cs"];
m30_48 [label="Entry Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="JobCreator.cs"];
m30_51 [label="_jobWasCreated = true", span="152-152", cluster="Hangfire.Client.CreateContext.CreateJob()", file="JobCreator.cs"];
m30_55 [label="Hangfire.Client.CreateContext", span="", cluster="lambda expression", file="JobCreator.cs"];
m30_52 [label="Exit Hangfire.Client.CreateContext.CreateJob()", span="147-147", cluster="Hangfire.Client.CreateContext.CreateJob()", file="JobCreator.cs"];
m30_50 [label="Entry HangFire.Client.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs"];
m30_28 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", file="JobCreator.cs"];
m30_32 [label="Exit Hangfire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="Hangfire.Client.CreateContext.SetJobParameter(string, object)", color=green, community=0, file="JobCreator.cs"];
m30_29 [label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="73-73", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs"];
m30_31 [label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="130-130", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m30_76 [label="filters.Reverse()", span="133-133", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m30_77 [label="filter.OnClientException(context)", span="135-135", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m30_78 [label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="130-130", cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs"];
m30_38 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="84-85", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs"];
m30_39 [label="thunk()", span="87-87", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs"];
m30_41 [label="Entry HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs"];
m30_40 [label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="73-73", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs"];
m30_37 [label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                context.CreateJob();\r\n                return new CreatedContext(context, false, null);\r\n            }", span="78-82", cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs"];
m30_74 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs"];
m30_80 [label="HangFire.Client.JobCreator", span="", file="JobCreator.cs"];
m30_81 [label="System.Collections.Generic.IEnumerable<object>", span="", file="JobCreator.cs"];
m30_82 [label="HangFire.Client.CreateContext", span="", file="JobCreator.cs"];
m30_83 [label=preContext, span="", file="JobCreator.cs"];
m30_84 [label="System.Func<HangFire.Client.Filters.CreatedContext>", span="", file="JobCreator.cs"];
m30_85 [label="HangFire.Client.Filters.IClientFilter", span="", file="JobCreator.cs"];
m33_30 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="JobFilterAttributeFilterProvider.cs"];
m33_0 [label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider()", span="32-32", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider()", file="JobFilterAttributeFilterProvider.cs"];
m33_1 [label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider()", span="32-32", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider()", file="JobFilterAttributeFilterProvider.cs"];
m33_39 [label="Entry HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", span="49-49", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="JobFilterAttributeFilterProvider.cs"];
m33_41 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    ''hangfire:succeeded'', jobId))", span="53-54", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_40 [label="transaction.QueueCommand(x => x.DecrementValue(''hangfire:stats:succeeded''))", span="51-51", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="JobFilterAttributeFilterProvider.cs"];
m33_42 [label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}'', jobId)))", span="56-57", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_43 [label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId)))", span="58-59", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_44 [label="transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId)))", span="60-61", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_45 [label="Exit HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", span="49-49", cluster="HangFire.States.SucceededState.Descriptor.Unapply(IRedisTransaction, string)", file="JobFilterAttributeFilterProvider.cs"];
m33_7 [label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", span="47-47", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_8 [label="Entry HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", span="134-134", cluster="HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", file="JobFilterAttributeFilterProvider.cs"];
m33_9 [label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", span="53-53", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_10 [label="return method.GetMethodFilterAttributes(_cacheAttributeInstances);", span="56-56", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", color=red, community=0];
m33_11 [label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", span="53-53", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_12 [label="Entry HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", span="141-141", cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobFilterAttributeFilterProvider.cs"];
m33_13 [label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="59-59", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_14 [label="var typeFilters = GetJobTypeAttributes(method)\r\n                .Select(attr => new JobFilter(attr, JobFilterScope.Type, null))", span="61-62", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", color=red, community=2];
m33_5 [label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", span="47-47", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_6 [label="return method.GetTypeFilterAttributes(_cacheAttributeInstances);", span="50-50", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", color=red, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_19 [label="Entry Unk.Union", span="", cluster="Unk.Union", file="JobFilterAttributeFilterProvider.cs"];
m33_2 [label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", span="42-42", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", file="JobFilterAttributeFilterProvider.cs"];
m33_3 [label="_cacheAttributeInstances = cacheAttributeInstances", span="44-44", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", file="JobFilterAttributeFilterProvider.cs"];
m33_4 [label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", span="42-42", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", file="JobFilterAttributeFilterProvider.cs"];
m33_38 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="JobFilterAttributeFilterProvider.cs"];
m33_20 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobFilterAttributeFilterProvider.cs"];
m33_24 [label="Entry lambda expression", span="37-39", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_35 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_21 [label="Entry lambda expression", span="33-35", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_25 [label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                _jobExpirationTimeout)", span="37-39", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_22 [label="x.ExpireEntryIn(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                _jobExpirationTimeout)", span="33-35", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_23 [label="Exit lambda expression", span="33-35", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_26 [label="Exit lambda expression", span="37-39", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_27 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_50 [label="Entry lambda expression", span="53-54", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_51 [label="x.RemoveItemFromList(\r\n                    ''hangfire:succeeded'', jobId)", span="53-54", cluster="lambda expression", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_52 [label="Exit lambda expression", span="53-54", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_54 [label="Entry lambda expression", span="56-57", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_55 [label="((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}'', jobId))", span="56-57", cluster="lambda expression", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_56 [label="Exit lambda expression", span="56-57", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_58 [label="Entry lambda expression", span="58-59", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_59 [label="((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="58-59", cluster="lambda expression", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_60 [label="Exit lambda expression", span="58-59", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_61 [label="Entry lambda expression", span="60-61", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_62 [label="((IRedisNativeClient)x).Persist(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId))", span="60-61", cluster="lambda expression", color=green, community=0, file="JobFilterAttributeFilterProvider.cs"];
m33_63 [label="Exit lambda expression", span="60-61", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_46 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_17 [label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="59-59", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_48 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_47 [label="x.DecrementValue(''hangfire:stats:succeeded'')", span="51-51", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_16 [label="return typeFilters.Union(methodFilters).ToList();", span="67-67", cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs"];
m33_31 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_18 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobFilterAttributeFilterProvider.cs"];
m33_28 [label="HangFire.Common.Filters.JobFilterAttributeFilterProvider", span="", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_29 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_33 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_32 [label="x.TrimList(''hangfire:succeeded'', 0, 99)", span="42-42", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_36 [label="x.IncrementValue(''hangfire:stats:succeeded'')", span="44-44", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_37 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs"];
m33_53 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="JobFilterAttributeFilterProvider.cs"];
m33_15 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", color=red, community=2, file="JobFilterAttributeFilterProvider.cs"];
m33_57 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="JobFilterAttributeFilterProvider.cs"];
m33_49 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="JobFilterAttributeFilterProvider.cs"];
m33_34 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="JobFilterAttributeFilterProvider.cs"];
m33_66 [label=string, span="", file="JobFilterAttributeFilterProvider.cs"];
m33_64 [label="HangFire.States.SucceededState", span="", file="JobFilterAttributeFilterProvider.cs"];
m33_65 [label=string, span="", file="JobFilterAttributeFilterProvider.cs"];
m34_2 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterInfo.cs"];
m34_3 [label="var list = filters.Select(f => f.Instance).ToList()", span="49-49", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_4 [label="_clientFilters.AddRange(list.OfType<IClientFilter>())", span="51-51", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_5 [label="_serverFilters.AddRange(list.OfType<IServerFilter>())", span="52-52", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_6 [label="_stateChangingFilters.AddRange(list.OfType<IStateChangingFilter>())", span="54-54", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_7 [label="_stateChangedFilters.AddRange(list.OfType<IStateChangedFilter>())", span="55-55", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_8 [label="_clientExceptionFilters.AddRange(list.OfType<IClientExceptionFilter>())", span="57-57", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_9 [label="_serverExceptionFilters.AddRange(list.OfType<IServerExceptionFilter>())", span="58-58", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs"];
m34_10 [label="Exit HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterInfo.cs"];
m34_12 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobFilterInfo.cs"];
m34_14 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="JobFilterInfo.cs"];
m34_15 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="JobFilterInfo.cs"];
m34_16 [label="f.Instance", span="49-49", cluster="lambda expression", color=green, community=0, file="JobFilterInfo.cs"];
m34_17 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="JobFilterInfo.cs"];
m34_0 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", span="111-111", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", file="JobFilterInfo.cs"];
m34_1 [label="Exit HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", span="111-111", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", file="JobFilterInfo.cs"];
m34_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobFilterInfo.cs"];
m34_18 [label="HangFire.Common.Filters.JobFilterInfo", span="", file="JobFilterInfo.cs"];
m35_76 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobFilterProviderCollection.cs"];
m35_16 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="98-98", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_17 [label="String.IsNullOrEmpty(id)", span="101-101", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_19 [label="type == null", span="102-102", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_21 [label="state == null", span="103-103", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_23 [label="args == null", span="104-104", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_25 [label="!typeof(BackgroundJob).IsAssignableFrom(type)", span="106-106", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_26 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit the '{1}' type.'', type, typeof(BackgroundJob)),\r\n                    ''type'');", span="108-110", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_27 [label="var jobParameters = CreateJobParameters(type, args)", span="115-115", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_28 [label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, id, jobParameters, state))", span="117-118", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_18 [label="throw new ArgumentNullException(''id'');", span="101-101", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_20 [label="throw new ArgumentNullException(''type'');", span="102-102", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_22 [label="throw new ArgumentNullException(''state'');", span="103-103", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_24 [label="throw new ArgumentNullException(''args'');", span="104-104", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_29 [label="_jobCreator.CreateJob(context)", span="120-120", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_30 [label=Exception, span="122-122", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_31 [label="throw new CreateJobFailedException(\r\n                    ''Job creation was failed. See the inner exception for details.'', \r\n                    ex);", span="124-126", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_32 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="98-98", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_36 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobFilterProviderCollection.cs"];
m35_73 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JobFilterProviderCollection.cs"];
m35_42 [label="Entry HangFire.Client.JobClient.Dispose()", span="134-134", cluster="HangFire.Client.JobClient.Dispose()", file="JobFilterProviderCollection.cs"];
m35_43 [label="_redis.Dispose()", span="136-136", cluster="HangFire.Client.JobClient.Dispose()", file="JobFilterProviderCollection.cs"];
m35_44 [label="Exit HangFire.Client.JobClient.Dispose()", span="134-134", cluster="HangFire.Client.JobClient.Dispose()", file="JobFilterProviderCollection.cs"];
m35_37 [label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="139-139", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_46 [label="var job = new Dictionary<string, string>()", span="142-142", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_47 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="143-143", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_48 [label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="144-144", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_49 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="145-145", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_50 [label="return job;", span="147-147", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_51 [label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="139-139", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobFilterProviderCollection.cs"];
m35_34 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JobFilterProviderCollection.cs"];
m35_71 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JobFilterProviderCollection.cs"];
m35_53 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="JobFilterProviderCollection.cs"];
m35_54 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFilterProviderCollection.cs"];
m35_69 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="JobFilterProviderCollection.cs"];
m35_0 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="22-22", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobFilterProviderCollection.cs"];
m35_1 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="22-22", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobFilterProviderCollection.cs"];
m35_2 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="31-31", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_3 [label="redisManager == null", span="33-33", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_5 [label="jobCreator == null", span="34-34", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_7 [label="_redis = redisManager.GetClient()", span="36-36", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_8 [label="_jobCreator = jobCreator", span="37-37", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_4 [label="throw new ArgumentNullException(''redisManager'');", span="33-33", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_6 [label="throw new ArgumentNullException(''jobCreator'');", span="34-34", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_9 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="31-31", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobFilterProviderCollection.cs"];
m35_72 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobFilterProviderCollection.cs"];
m35_75 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JobFilterProviderCollection.cs"];
m35_11 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="JobFilterProviderCollection.cs"];
m35_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFilterProviderCollection.cs"];
m35_74 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobFilterProviderCollection.cs"];
m35_70 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="JobFilterProviderCollection.cs"];
m35_33 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobFilterProviderCollection.cs"];
m35_45 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobFilterProviderCollection.cs"];
m35_40 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobFilterProviderCollection.cs"];
m35_41 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="18-18", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="JobFilterProviderCollection.cs"];
m35_15 [label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="150-150", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_55 [label="var result = new Dictionary<string, string>()", span="152-152", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_56 [label="obj == null", span="153-153", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_58 [label="TypeDescriptor.GetProperties(obj)", span="155-155", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_59 [label="var propertyValue = descriptor.GetValue(obj)", span="157-157", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_57 [label="return result;", span="153-153", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_66 [label="result.Add(descriptor.Name, value)", span="180-180", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_67 [label="return result;", span="183-183", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_65 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string using the '{2}'. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType,\r\n                                converter.GetType()),\r\n                            ex);", span="170-176", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_60 [label="string value = null", span="158-158", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_61 [label="propertyValue != null", span="160-160", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_62 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="162-162", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_63 [label="value = converter.ConvertToInvariantString(propertyValue)", span="166-166", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_64 [label=Exception, span="168-168", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_68 [label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="150-150", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobFilterProviderCollection.cs"];
m35_39 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="14-14", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="JobFilterProviderCollection.cs"];
m35_35 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JobFilterProviderCollection.cs"];
m35_12 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="65-65", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobFilterProviderCollection.cs"];
m35_13 [label="CreateJob(id, type, state, PropertiesToDictionary(args))", span="68-68", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobFilterProviderCollection.cs"];
m35_14 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="65-65", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobFilterProviderCollection.cs"];
m35_38 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="JobFilterProviderCollection.cs"];
m35_77 [label="HangFire.Client.JobClient", span="", file="JobFilterProviderCollection.cs"];
m38_56 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="JobMethod.cs"];
m38_57 [label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18", cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="JobMethod.cs"];
m38_6 [label="Pager pager", span="97-97", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_7 [label="JobList<FetchedJobDto> fetchedJobs", span="98-98", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="JobMethod.cs"];
m38_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="100-100", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="JobMethod.cs"];
m38_10 [label="fetchedJobs = monitor\r\n            .FetchedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="107-108", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_9 [label="pager = new Pager(from, perPage, monitor.FetchedCount(Queue))\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/queues/fetched/'' + Queue)\r\n        }", span="102-105", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="JobMethod.cs"];
m38_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        The queue is empty.\r\n    </div>\r\n'')", span="126-126", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_11 [label="WriteLiteral(''\r\n'')", span="115-115", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_12 [label="pager.TotalPageCount == 0", span="120-120", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_14 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="138-140", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs", color=green, community=0];
m38_27 [label="Write(HtmlHelper.JobId(job.Key))", span="239-239", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_28 [label="WriteLiteral(''</a>\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <span class=\''label label-default\'' style=\'''')", span="244-245", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="JobMethod.cs"];
m38_29 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="250-250", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="JobMethod.cs"];
m38_30 [label="WriteLiteral(''\''>\r\n                                '')", span="255-255", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_16 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                Requeue jobs\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="150-157", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs", color=green, community=0];
m38_58 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobMethod.cs"];
m38_59 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobMethod.cs"];
m38_63 [label=string, span="", cluster="string.Format(string, object)", file="JobMethod.cs"];
m38_54 [label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };", span="115-119", cluster="lambda expression", file="JobMethod.cs"];
m38_48 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobMethod.cs"];
m38_49 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="JobMethod.cs"];
m38_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobMethod.cs"];
m38_51 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="JobMethod.cs"];
m38_52 [label="Entry lambda expression", span="111-120", cluster="lambda expression", file="JobMethod.cs"];
m38_47 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="JobMethod.cs"];
m38_34 [label="WriteLiteral(''\''>\r\n                                '')", span="276-276", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobMethod.cs"];
m38_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="JobMethod.cs"];
m38_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobMethod.cs"];
m38_3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="JobMethod.cs"];
m38_4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="JobMethod.cs"];
m38_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="95-95", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="JobMethod.cs"];
m38_19 [label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52", cluster="lambda expression", file="JobMethod.cs"];
m38_45 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="JobMethod.cs"];
m38_15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", color=green, community=0, file="JobMethod.cs"];
m38_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobMethod.cs"];
m38_18 [label="Entry lambda expression", span="50-53", cluster="lambda expression", color=green, community=0, file="JobMethod.cs"];
m38_20 [label="Exit lambda expression", span="50-53", cluster="lambda expression", file="JobMethod.cs"];
m38_22 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobMethod.cs"];
m38_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobMethod.cs"];
m38_24 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="JobMethod.cs"];
m38_25 [label="(string) x.Queue", span="52-52", cluster="lambda expression", file="JobMethod.cs"];
m38_26 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="JobMethod.cs"];
m38_31 [label="Entry lambda expression", span="73-81", cluster="lambda expression", file="JobMethod.cs"];
m38_32 [label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80", cluster="lambda expression", file="JobMethod.cs", color=red, community=0];
m38_33 [label="Exit lambda expression", span="73-81", cluster="lambda expression", file="JobMethod.cs"];
m38_35 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="JobMethod.cs"];
m38_36 [label="x.Id", span="79-79", cluster="lambda expression", file="JobMethod.cs"];
m38_38 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="JobMethod.cs"];
m38_39 [label="string fetchedJobsSql = @''\r\nselect r.Id from (\r\n  select j.Id, jq.FetchedAt, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  where jq.Queue = @queue and jq.FetchedAt is not null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="86-93", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="JobMethod.cs", color=red, community=0];
m38_40 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="95-103", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="JobMethod.cs", color=red, community=0];
m38_41 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="JobMethod.cs"];
m38_42 [label="Entry lambda expression", span="95-103", cluster="lambda expression", file="JobMethod.cs"];
m38_43 [label="return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="97-102", cluster="lambda expression", file="JobMethod.cs", color=red, community=0];
m38_44 [label="Exit lambda expression", span="95-103", cluster="lambda expression", file="JobMethod.cs"];
m38_21 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="JobMethod.cs"];
m38_37 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="JobMethod.cs"];
m38_46 [label="x.Id", span="101-101", cluster="lambda expression", file="JobMethod.cs", color=red, community=0];
m38_60 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="JobMethod.cs"];
m38_62 [label=sqlQuery, span="", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobMethod.cs"];
m38_53 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobMethod.cs"];
m38_55 [label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="JobMethod.cs"];
m38_65 [label=int, span="", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobMethod.cs"];
m38_61 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span="", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobMethod.cs"];
m38_64 [label=int, span="", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobMethod.cs"];
m38_66 [label=sqlQuery, span="", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobMethod.cs"];
m38_67 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="JobMethod.cs"];
m38_68 [label=int, span="", file="JobMethod.cs"];
m38_69 [label=int, span="", file="JobMethod.cs"];
m38_70 [label=fetchedJobsSql, span="", file="JobMethod.cs"];
m38_71 [label=string, span="", file="JobMethod.cs"];
m38_72 [label=sqlQuery, span="", file="JobMethod.cs"];
m39_25 [label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="32-32", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="JobMethodCallRenderer.cs"];
m39_0 [label="Entry HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs"];
m39_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs"];
m39_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Scheduled state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethodCallRenderer.cs"];
m39_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobMethodCallRenderer.cs"];
m39_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="JobMethodCallRenderer.cs"];
m39_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobMethodCallRenderer.cs"];
m39_11 [label="var state = new Mock<IState>()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobMethodCallRenderer.cs"];
m39_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobMethodCallRenderer.cs"];
m39_12 [label="var createContext = new CreateContext(connection.Object, job, state.Object)", span="26-26", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobMethodCallRenderer.cs"];
m39_66 [label="Entry HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", span="148-148", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_68 [label="this.ScenarioSetup(scenarioInfo)", span="152-152", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_69 [label="this.FeatureBackground()", span="154-154", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_73 [label="this.ScenarioCleanup()", span="162-162", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_67 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should remove the job from the schedule'', ((string[])(null)))", span="150-150", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_70 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_72 [label="testRunner.Then(''the schedule does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="160-160", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_71 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="158-158", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_74 [label="Exit HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", span="148-148", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSchedule()", file="JobMethodCallRenderer.cs"];
m39_57 [label="Entry HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", span="129-129", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_59 [label="this.ScenarioSetup(scenarioInfo)", span="133-133", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_60 [label="this.FeatureBackground()", span="135-135", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_63 [label="this.ScenarioCleanup()", span="141-141", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should add the job to the schedule at tomorrow'', ((string[])(null)))", span="131-131", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_61 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_62 [label="testRunner.Then(''the schedule contains the job that will be enqueued tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_64 [label="Exit HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", span="129-129", cluster="HangFire.Tests.States.ScheduledStateFeature.AfterApplyingItShouldAddTheJobToTheScheduleAtTomorrow()", file="JobMethodCallRenderer.cs"];
m39_35 [label="Entry Unk.And", span="", cluster="Unk.And", file="JobMethodCallRenderer.cs"];
m39_5 [label="new CreatingContext(null)", span="16-16", cluster="lambda expression", file="JobMethodCallRenderer.cs"];
m39_24 [label="Exit HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethodCallRenderer.cs"];
m39_20 [label="Entry Unk.False", span="", cluster="Unk.False", file="JobMethodCallRenderer.cs"];
m39_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobMethodCallRenderer.cs"];
m39_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="JobMethodCallRenderer.cs"];
m39_30 [label="Entry HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", file="JobMethodCallRenderer.cs"];
m39_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", file="JobMethodCallRenderer.cs"];
m39_32 [label="testRunner.And(''the Scheduled state with the date set to tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", file="JobMethodCallRenderer.cs"];
m39_33 [label="Exit HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.ScheduledStateFeature.FeatureBackground()", file="JobMethodCallRenderer.cs"];
m39_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobMethodCallRenderer.cs"];
m39_13 [label="var context = new CreatingContext(createContext)", span="27-27", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobMethodCallRenderer.cs"];
m39_14 [label="Assert.False(context.Canceled)", span="29-29", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="JobMethodCallRenderer.cs", color=red, community=0];
m39_15 [label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="JobMethodCallRenderer.cs"];
m39_16 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobMethodCallRenderer.cs"];
m39_17 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobMethodCallRenderer.cs"];
m39_65 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobMethodCallRenderer.cs"];
m39_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="JobMethodCallRenderer.cs"];
m39_36 [label="Entry HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", span="85-85", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", file="JobMethodCallRenderer.cs"];
m39_38 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", color=green, community=0, file="JobMethodCallRenderer.cs"];
m39_37 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Scheduled\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", file="JobMethodCallRenderer.cs"];
m39_39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", file="JobMethodCallRenderer.cs"];
m39_41 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", file="JobMethodCallRenderer.cs"];
m39_40 [label="testRunner.Then(''the state name is equal to \'Scheduled\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", file="JobMethodCallRenderer.cs"];
m39_42 [label="Exit HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", span="85-85", cluster="HangFire.Tests.States.ScheduledStateFeature.StateNameIsScheduled()", file="JobMethodCallRenderer.cs"];
m39_21 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="JobMethodCallRenderer.cs"];
m39_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobMethodCallRenderer.cs"];
m39_22 [label="Entry HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethodCallRenderer.cs"];
m39_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethodCallRenderer.cs"];
m39_19 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="JobMethodCallRenderer.cs"];
m39_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobMethodCallRenderer.cs"];
m39_43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobMethodCallRenderer.cs"];
m39_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobMethodCallRenderer.cs"];
m39_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobMethodCallRenderer.cs"];
m39_26 [label="Entry HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", file="JobMethodCallRenderer.cs"];
m39_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", file="JobMethodCallRenderer.cs"];
m39_28 [label="Exit HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.ScheduledStateFeature.ScenarioCleanup()", file="JobMethodCallRenderer.cs"];
m39_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="JobMethodCallRenderer.cs"];
m39_45 [label="Entry HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_53 [label="this.ScenarioCleanup()", span="122-122", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_49 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_52 [label="testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="120-120", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_50 [label="table1.AddRow(new string[] {\r\n                        ''ScheduledAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_51 [label="table1.AddRow(new string[] {\r\n                        ''EnqueueAt'',\r\n                        ''<Tomorrow timestamp>''})", span="116-118", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_54 [label="Exit HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.ScheduledStateFeature.ItHasTheCorrectPropertiesSet()", file="JobMethodCallRenderer.cs"];
m39_75 [label="HangFire.Tests.States.ScheduledStateFeature", span="", file="JobMethodCallRenderer.cs"];
m41_12 [label="Entry HangFire.Storage.ProcessingJob.Dispose()", span="39-39", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="JobPerformer.cs"];
m41_13 [label="_connection.DeleteJobFromQueue(JobId, Queue)", span="41-41", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="JobPerformer.cs"];
m41_14 [label="Exit HangFire.Storage.ProcessingJob.Dispose()", span="39-39", cluster="HangFire.Storage.ProcessingJob.Dispose()", file="JobPerformer.cs"];
m41_0 [label="Entry HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_1 [label="connection == null", span="26-26", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_3 [label="jobId == null", span="27-27", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=red, community=0, file="JobPerformer.cs"];
m41_5 [label="queue == null", span="28-28", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_7 [label="_connection = connection", span="30-30", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_8 [label="JobId = jobId", span="32-32", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_9 [label="Queue = queue", span="33-33", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_2 [label="throw new ArgumentNullException(''connection'');", span="26-26", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_4 [label="throw new ArgumentNullException(''jobId'');", span="27-27", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=red, community=0, file="JobPerformer.cs"];
m41_6 [label="throw new ArgumentNullException(''queue'');", span="28-28", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_10 [label="Exit HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24", cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="JobPerformer.cs"];
m41_15 [label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31", cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="JobPerformer.cs"];
m41_16 [label="HangFire.Storage.ProcessingJob", span="", file="JobPerformer.cs"];
m42_9 [label="Entry Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", span="28-28", cluster="Hangfire.Dashboard.OwinDashboardRequest.OwinDashboardRequest(System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_0 [label="Entry Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", span="24-24", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_1 [label="environment == null", span="30-30", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_2 [label="throw new ArgumentNullException(nameof(environment));", span="30-30", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_3 [label="Environment = environment", span="32-32", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_4 [label="Request = new OwinDashboardRequest(environment)", span="33-33", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_5 [label="Response = new OwinDashboardResponse(environment)", span="34-34", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_6 [label="Exit Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", span="24-24", cluster="Hangfire.Dashboard.OwinDashboardContext.OwinDashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions, System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_8 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JobState.cs"];
m42_10 [label="Entry Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29", cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="JobState.cs"];
m42_11 [label="Hangfire.Dashboard.OwinDashboardContext", span="", file="JobState.cs"];
m43_0 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs"];
m43_1 [label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs"];
m43_2 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs"];
m43_3 [label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs"];
m44_40 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="JobSteps.cs"];
m44_5 [label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs"];
m44_6 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="26-26", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs"];
m44_7 [label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs"];
m44_0 [label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="18-18", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs"];
m44_1 [label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="20-20", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs"];
m44_2 [label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="18-18", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs"];
m44_17 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="JobSteps.cs"];
m44_18 [label="GivenTheJobOfTheTypeWithTheFollowingArguments(JobSteps.DefaultJobId, type, args)", span="44-44", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="JobSteps.cs"];
m44_19 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="JobSteps.cs"];
m44_29 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="JobSteps.cs"];
m44_8 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobSteps.cs"];
m44_27 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JobSteps.cs"];
m44_46 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="94-97", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs"];
m44_45 [label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs"];
m44_47 [label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs"];
m44_25 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="JobSteps.cs"];
m44_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobSteps.cs"];
m44_12 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs"];
m44_13 [label="GivenTheJobOfTheTypeWithTheFollowingArguments(jobId, type, new Table(''Name'', ''Value''))", span="38-38", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs"];
m44_14 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs"];
m44_9 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs"];
m44_10 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="32-32", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs"];
m44_11 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs"];
m44_15 [label="Entry Table.cstr", span="", cluster="Table.cstr", file="JobSteps.cs"];
m44_26 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobSteps.cs"];
m44_24 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="JobSteps.cs"];
m44_41 [label="Entry HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="JobSteps.cs"];
m44_42 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', typeof(TestJob).AssemblyQualifiedName },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', String.Empty }\r\n                    })", span="81-88", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="JobSteps.cs"];
m44_43 [label="Exit HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="JobSteps.cs"];
m44_28 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="JobSteps.cs"];
m44_33 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="JobSteps.cs"];
m44_30 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="JobSteps.cs"];
m44_31 [label="x[''Name'']", span="64-64", cluster="lambda expression", file="JobSteps.cs"];
m44_32 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="JobSteps.cs"];
m44_34 [label="x[''Value'']", span="64-64", cluster="lambda expression", file="JobSteps.cs"];
m44_35 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="JobSteps.cs"];
m44_21 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="54-57", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs"];
m44_16 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs"];
m44_20 [label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="50-52", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs"];
m44_22 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(args.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="59-66", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", color=red, community=0, file="JobSteps.cs"];
m44_23 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs"];
m44_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobSteps.cs"];
m44_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobSteps.cs"];
m44_52 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="JobSteps.cs"];
m44_36 [label="Entry HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs"];
m44_37 [label="GivenAJobOfTheTypeWithTheFollowingArguments(typeof(CustomJob).AssemblyQualifiedName, table)", span="72-72", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs"];
m44_38 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', QueueSteps.DefaultQueue),\r\n                DefaultJobId)", span="73-75", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs"];
m44_39 [label="Exit HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs"];
m44_48 [label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs"];
m44_49 [label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="106-108", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs"];
m44_50 [label="Assert.Equal(state, jobState)", span="110-110", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs"];
m44_51 [label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs"];
m44_54 [label="HangFire.Tests.JobSteps", span="", file="JobSteps.cs"];
m46_25 [label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="20-20", cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="PerformContext.cs"];
m46_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs"];
m46_20 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="PerformContext.cs"];
m46_17 [label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs"];
m46_18 [label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="66-66", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs"];
m46_19 [label="Exit HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs"];
m46_26 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="PerformContext.cs"];
m46_9 [label="throw new ArgumentNullException(''jobMethod'');", span="44-44", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", color=red, community=0];
m46_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_4 [label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs", color=green, community=0];
m46_6 [label="PrepareSchemaIfNecessary = true", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_8 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", color=red, community=0, file="PerformContext.cs"];
m46_10 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="PerformContext.cs"];
m46_11 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m46_12 [label="JobMethod = jobMethod", span="48-48", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", color=red, community=0, file="PerformContext.cs"];
m46_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_7 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_13 [label="Items = new Dictionary<string, object>()", span="49-49", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m46_14 [label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m46_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_1 [label="TransactionIsolationLevel = null", span="27-27", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PerformContext.cs"];
m46_22 [label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs"];
m46_23 [label="return JobHelper.FromJson<T>(Connection.GetJobParameter(JobId, name));", span="71-71", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs"];
m46_24 [label="Exit HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs"];
m46_21 [label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="19-19", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="PerformContext.cs"];
m46_27 [label="HangFire.Server.Performing.PerformContext", span="", file="PerformContext.cs"];
m47_0 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ProcessingJobDto.cs"];
m47_1 [label="InProcessingState = true", span="9-9", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ProcessingJobDto.cs"];
m47_2 [label="Exit HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ProcessingJobDto.cs"];
m47_3 [label="HangFire.Storage.Monitoring.ProcessingJobDto", span="", file="ProcessingJobDto.cs"];
m48_124 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="138-138", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_125 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="140-143", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_126 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n            })", span="145-165", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_127 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="138-138", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_48 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ProcessingJobsPage.generated.cs"];
m48_247 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="346-346", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_248 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="348-354", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_249 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="346-346", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_29 [label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="207-207", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", color=green, community=0];
m48_30 [label="WriteLiteral(''\''>\r\n                            '')", span="212-212", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_31 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="217-217", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", color=green, community=0];
m48_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingJobsPage.generated.cs"];
m48_45 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero)", span="58-61", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_441 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ProcessingJobsPage.generated.cs"];
m48_289 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="412-412", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_290 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="414-420", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_291 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="412-412", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_347 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="488-488", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ProcessingJobsPage.generated.cs"];
m48_348 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="490-515", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ProcessingJobsPage.generated.cs"];
m48_349 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="488-488", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ProcessingJobsPage.generated.cs"];
m48_91 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="ProcessingJobsPage.generated.cs"];
m48_64 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="83-83", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ProcessingJobsPage.generated.cs"];
m48_65 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(ConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''Hello'', job.Arguments[0]);\r\n\r\n                Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="85-117", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ProcessingJobsPage.generated.cs"];
m48_66 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="83-83", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ProcessingJobsPage.generated.cs"];
m48_385 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="ProcessingJobsPage.generated.cs"];
m48_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero))", span="72-76", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_257 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ProcessingJobsPage.generated.cs"];
m48_57 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero)", span="73-76", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_299 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ProcessingJobsPage.generated.cs"];
m48_375 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="526-526", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ProcessingJobsPage.generated.cs"];
m48_376 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="528-532", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ProcessingJobsPage.generated.cs"];
m48_377 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="534-542", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ProcessingJobsPage.generated.cs"];
m48_378 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="526-526", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ProcessingJobsPage.generated.cs"];
m48_279 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="388-388", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ProcessingJobsPage.generated.cs"];
m48_280 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="390-392", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ProcessingJobsPage.generated.cs"];
m48_281 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    }); \r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(2, count);\r\n            })", span="394-408", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ProcessingJobsPage.generated.cs"];
m48_282 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="388-388", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ProcessingJobsPage.generated.cs"];
m48_278 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ProcessingJobsPage.generated.cs"];
m48_18 [label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="145-145", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_93 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="ProcessingJobsPage.generated.cs"];
m48_46 [label="Exit lambda expression", span="58-61", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_62 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_316 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="443-443", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ProcessingJobsPage.generated.cs"];
m48_317 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="445-451", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ProcessingJobsPage.generated.cs"];
m48_318 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="453-460", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ProcessingJobsPage.generated.cs"];
m48_319 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="443-443", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ProcessingJobsPage.generated.cs"];
m48_268 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="370-370", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ProcessingJobsPage.generated.cs"];
m48_269 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="372-374", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ProcessingJobsPage.generated.cs"];
m48_270 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' });\r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="376-384", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ProcessingJobsPage.generated.cs"];
m48_271 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="370-370", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ProcessingJobsPage.generated.cs"];
m48_336 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ProcessingJobsPage.generated.cs"];
m48_92 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="ProcessingJobsPage.generated.cs"];
m48_396 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="553-553", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ProcessingJobsPage.generated.cs"];
m48_397 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="555-559", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ProcessingJobsPage.generated.cs"];
m48_398 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="561-572", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ProcessingJobsPage.generated.cs"];
m48_399 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="553-553", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ProcessingJobsPage.generated.cs"];
m48_58 [label="Exit lambda expression", span="73-76", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_209 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="288-288", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_210 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="290-296", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_211 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="288-288", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_49 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="68-68", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_115 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ProcessingJobsPage.generated.cs"];
m48_154 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="194-194", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_155 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="196-202", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ProcessingJobsPage.generated.cs"];
m48_156 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="194-194", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_27 [label="Write(HtmlHelper.QueueLabel(job.Value.Method))", span="197-197", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", color=green, community=0];
m48_140 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="ProcessingJobsPage.generated.cs"];
m48_54 [label="Assert.Equal(''parameters'', exception.ParamName)", span="78-78", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_94 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="ProcessingJobsPage.generated.cs"];
m48_386 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="546-546", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_387 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="548-549", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_388 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="546-546", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_423 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ProcessingJobsPage.generated.cs"];
m48_335 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="ProcessingJobsPage.generated.cs"];
m48_428 [label="Entry lambda expression", span="589-603", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_6 [label="Pager pager", span="69-69", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_7 [label="JobList<ProcessingJobDto> processingJobs", span="70-70", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="72-72", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_15 [label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Job type</th>\r\n                <th>Server</th>\r\n  '' +\r\n''              <th>Started</th>\r\n            </tr>\r\n        </thead>\r\n        <tb'' +\r\n''ody>\r\n'')", span="126-129", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_16 [label=processingJobs, span="134-134", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_17 [label="WriteLiteral(''                <tr class=\'''')", span="140-140", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_23 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="170-170", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_24 [label="!job.Value.InProcessingState", span="175-175", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_25 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="181-182", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_26 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n                        '')", span="192-192", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_32 [label="WriteLiteral(''\r\n                        </span>\r\n                    </td>\r\n                   '' +\r\n'' <td>\r\n                        '')", span="222-223", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_33 [label="Write(job.Value.ServerName)", span="228-228", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_34 [label="WriteLiteral(''\r\n                    </td>\r\n                    <td>\r\n'')", span="233-233", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_35 [label="job.Value.StartedAt.HasValue", span="238-238", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_40 [label="WriteLiteral(''\r\n                            </span>\r\n'')", span="264-264", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_41 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="274-274", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_42 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="284-284", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_44 [label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_43 [label="Write(RenderPartial(new Paginator(pager)))", span="296-296", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_52 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="15-15", cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="ProcessingJobsPage.generated.cs"];
m48_56 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ProcessingJobsPage.generated.cs"];
m48_55 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ProcessingJobsPage.generated.cs"];
m48_60 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="ProcessingJobsPage.generated.cs"];
m48_61 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingJobsPage.generated.cs"];
m48_68 [label="Entry lambda expression", span="85-117", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_69 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1))", span="87-90", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_72 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="95-95", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_83 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="110-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_70 [label="Assert.NotNull(jobId)", span="92-92", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_97 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_71 [label="Assert.NotEmpty(jobId)", span="93-93", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_73 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="96-96", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_74 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="97-97", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_75 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="98-98", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_76 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="100-100", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_77 [label="invocationData.Arguments = sqlJob.Arguments", span="101-101", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_82 [label="Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1))", span="108-108", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_78 [label="var job = invocationData.Deserialize()", span="103-103", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_79 [label="Assert.Equal(typeof(ConnectionFacts), job.Type)", span="104-104", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_80 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="105-105", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_81 [label="Assert.Equal(''Hello'', job.Arguments[0])", span="106-106", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_84 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="115-115", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_100 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_103 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_85 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="116-116", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_86 [label="Exit lambda expression", span="85-117", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_98 [label="SampleMethod(''Hello'')", span="88-88", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_99 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_101 [label="(string) x.Name", span="113-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_102 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_104 [label="(string) x.Value", span="113-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_105 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_109 [label="Entry lambda expression", span="123-124", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_110 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="123-124", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_113 [label="connection.GetJobData(null)", span="124-124", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_111 [label="Exit lambda expression", span="123-124", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_112 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_114 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_119 [label="Entry lambda expression", span="130-134", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_120 [label="var result = connection.GetJobData(''1'')", span="132-132", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_121 [label="Assert.Null(result)", span="133-133", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_122 [label="Exit lambda expression", span="130-134", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_130 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="149-156", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_128 [label="Entry lambda expression", span="145-165", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_129 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="147-147", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_131 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="158-158", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_141 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_132 [label="Assert.NotNull(result)", span="160-160", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_133 [label="Assert.NotNull(result.Job)", span="161-161", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_134 [label="Assert.Equal(''Succeeded'', result.State)", span="162-162", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_135 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="163-163", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_136 [label="Assert.Null(result.LoadException)", span="164-164", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_137 [label="Exit lambda expression", span="145-165", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_142 [label="SampleMethod(''wrong'')", span="147-147", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_143 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_149 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="178-185", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_148 [label="Entry lambda expression", span="176-190", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_150 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="187-187", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_151 [label="Assert.NotNull(result.LoadException)", span="189-189", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_152 [label="Exit lambda expression", span="176-190", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_157 [label="Entry lambda expression", span="196-202", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_158 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="198-199", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_162 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="199-199", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_159 [label="Assert.Equal(''id'', exception.ParamName)", span="201-201", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_161 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_160 [label="Exit lambda expression", span="196-202", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_163 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_168 [label="Entry lambda expression", span="208-214", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_169 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="210-211", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_173 [label="connection.SetJobParameter(''1'', null, ''value'')", span="211-211", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_170 [label="Assert.Equal(''name'', exception.ParamName)", span="213-213", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_172 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_171 [label="Exit lambda expression", span="208-214", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_174 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_180 [label="var job = sql.Query(arrangeSql).Single()", span="227-227", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_179 [label="Entry lambda expression", span="225-237", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_182 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="230-230", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_183 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="232-234", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_181 [label="string jobId = job.Id.ToString()", span="228-228", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_184 [label="Assert.Equal(''Value'', parameter.Value)", span="236-236", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_185 [label="Exit lambda expression", span="225-237", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_191 [label="var job = sql.Query(arrangeSql).Single()", span="250-250", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_190 [label="Entry lambda expression", span="248-261", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_193 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="253-253", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_194 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="254-254", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_195 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="256-258", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_192 [label="string jobId = job.Id.ToString()", span="251-251", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_196 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="260-260", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_197 [label="Exit lambda expression", span="248-261", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_203 [label="var job = sql.Query(arrangeSql).Single()", span="274-274", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_202 [label="Entry lambda expression", span="272-284", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_205 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="277-277", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_206 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="279-281", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_204 [label="string jobId = job.Id.ToString()", span="275-275", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_207 [label="Assert.Equal((string) null, parameter.Value)", span="283-283", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_208 [label="Exit lambda expression", span="272-284", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_212 [label="Entry lambda expression", span="290-296", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_213 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="292-293", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_217 [label="connection.GetJobParameter(null, ''hello'')", span="293-293", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_214 [label="Assert.Equal(''id'', exception.ParamName)", span="295-295", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_216 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_215 [label="Exit lambda expression", span="290-296", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_218 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_223 [label="Entry lambda expression", span="302-308", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_224 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="304-305", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_228 [label="connection.GetJobParameter(''1'', null)", span="305-305", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_225 [label="Assert.Equal(''name'', exception.ParamName)", span="307-307", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_227 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_226 [label="Exit lambda expression", span="302-308", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_229 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_233 [label="Entry lambda expression", span="314-318", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_234 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="316-316", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_235 [label="Assert.Null(value)", span="317-317", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_236 [label="Exit lambda expression", span="314-318", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_242 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="335-337", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_241 [label="Entry lambda expression", span="333-342", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_243 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="339-339", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_244 [label="Assert.Equal(''value'', value)", span="341-341", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_245 [label="Exit lambda expression", span="333-342", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_250 [label="Entry lambda expression", span="348-354", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_251 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''))", span="350-351", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_255 [label="connection.DeleteJobFromQueue(null, ''default'')", span="351-351", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_252 [label="Assert.Equal(''id'', exception.ParamName)", span="353-353", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_254 [label="Entry lambda expression", span="351-351", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_253 [label="Exit lambda expression", span="348-354", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_256 [label="Exit lambda expression", span="351-351", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_261 [label="Entry lambda expression", span="360-366", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_262 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null))", span="362-363", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_266 [label="connection.DeleteJobFromQueue(''1'', null)", span="363-363", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_263 [label="Assert.Equal(''queue'', exception.ParamName)", span="365-365", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_265 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_264 [label="Exit lambda expression", span="360-366", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_267 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_273 [label="sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' })", span="378-378", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_272 [label="Entry lambda expression", span="376-384", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_274 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="380-380", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_275 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="382-382", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_276 [label="Assert.Equal(0, count)", span="383-383", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_277 [label="Exit lambda expression", span="376-384", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_284 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    })", span="396-402", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_283 [label="Entry lambda expression", span="394-408", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_285 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="404-404", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_286 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="406-406", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_287 [label="Assert.Equal(2, count)", span="407-407", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_288 [label="Exit lambda expression", span="394-408", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_292 [label="Entry lambda expression", span="414-420", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_293 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="416-417", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_297 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="417-417", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_294 [label="Assert.Equal(''key'', exception.ParamName)", span="419-419", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_296 [label="Entry lambda expression", span="417-417", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_295 [label="Exit lambda expression", span="414-420", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_298 [label="Exit lambda expression", span="417-417", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_303 [label="Entry lambda expression", span="426-427", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_304 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="426-427", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_307 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="427-427", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_305 [label="Exit lambda expression", span="426-427", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_306 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_308 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_312 [label="Entry lambda expression", span="433-439", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_313 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="435-436", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_314 [label="Assert.Null(result)", span="438-438", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_315 [label="Exit lambda expression", span="433-439", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_321 [label="sql.Execute(arrangeSql)", span="455-455", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_320 [label="Entry lambda expression", span="453-460", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_322 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="457-457", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_323 [label="Assert.Equal(''-1.0'', result)", span="459-459", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_324 [label="Exit lambda expression", span="453-460", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_328 [label="Entry lambda expression", span="466-472", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_329 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="468-469", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_333 [label="connection.AnnounceServer(null, new ServerContext())", span="469-469", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_330 [label="Assert.Equal(''serverId'', exception.ParamName)", span="471-471", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_332 [label="Entry lambda expression", span="469-469", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_331 [label="Exit lambda expression", span="466-472", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_334 [label="Exit lambda expression", span="469-469", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_340 [label="Entry lambda expression", span="478-484", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_341 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="480-481", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_345 [label="connection.AnnounceServer(''server'', null)", span="481-481", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_342 [label="Assert.Equal(''context'', exception.ParamName)", span="483-483", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_344 [label="Entry lambda expression", span="481-481", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_343 [label="Exit lambda expression", span="478-484", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_346 [label="Exit lambda expression", span="481-481", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_350 [label="Entry lambda expression", span="490-515", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_351 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="492-496", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_352 [label="connection.AnnounceServer(''server'', context1)", span="497-497", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_353 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="499-499", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_358 [label="connection.AnnounceServer(''server'', context2)", span="511-511", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_359 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="512-512", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_354 [label="Assert.Equal(''server'', server.Id)", span="500-500", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_355 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="501-503", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_356 [label="Assert.NotNull(server.LastHeartbeat)", span="504-504", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_357 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="506-510", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_360 [label="Assert.Equal(''server'', sameServer.Id)", span="513-513", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_361 [label="Assert.Contains(''1000'', sameServer.Data)", span="514-514", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_362 [label="Exit lambda expression", span="490-515", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_368 [label="Entry lambda expression", span="521-522", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_369 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="521-522", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_372 [label="connection.RemoveServer(null)", span="522-522", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_370 [label="Exit lambda expression", span="521-522", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_371 [label="Entry lambda expression", span="522-522", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_373 [label="Exit lambda expression", span="522-522", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_380 [label="sql.Execute(arrangeSql)", span="536-536", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_379 [label="Entry lambda expression", span="534-542", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_381 [label="connection.RemoveServer(''Server1'')", span="538-538", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_382 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="540-540", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_383 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="541-541", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_384 [label="Exit lambda expression", span="534-542", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_389 [label="Entry lambda expression", span="548-549", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_390 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="548-549", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_393 [label="connection.Heartbeat(null)", span="549-549", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_391 [label="Exit lambda expression", span="548-549", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_392 [label="Entry lambda expression", span="549-549", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_394 [label="Exit lambda expression", span="549-549", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_401 [label="sql.Execute(arrangeSql)", span="563-563", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_400 [label="Entry lambda expression", span="561-572", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_402 [label="connection.Heartbeat(''server1'')", span="565-565", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_403 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="567-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_404 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="570-570", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_407 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_410 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_405 [label="Assert.Equal(2012, servers[''server2''].Year)", span="571-571", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_406 [label="Exit lambda expression", span="561-572", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_408 [label="(string)x.Id", span="568-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_409 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_411 [label="(DateTime)x.LastHeartbeat", span="568-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_412 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_416 [label="Entry lambda expression", span="578-579", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_417 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="578-579", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_420 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="579-579", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_418 [label="Exit lambda expression", span="578-579", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_419 [label="Entry lambda expression", span="579-579", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_421 [label="Exit lambda expression", span="579-579", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_429 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="591-597", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_430 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="599-599", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_431 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="601-601", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_432 [label="Assert.Equal(''server2'', liveServer.Id)", span="602-602", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_433 [label="Exit lambda expression", span="589-603", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m48_67 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="ProcessingJobsPage.generated.cs"];
m48_198 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="265-265", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ProcessingJobsPage.generated.cs"];
m48_199 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="267-270", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ProcessingJobsPage.generated.cs"];
m48_200 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="272-284", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ProcessingJobsPage.generated.cs"];
m48_201 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="265-265", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ProcessingJobsPage.generated.cs"];
m48_164 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ProcessingJobsPage.generated.cs"];
m48_10 [label="processingJobs = monitor\r\n            .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-80", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_59 [label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45", cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="ProcessingJobsPage.generated.cs"];
m48_51 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="68-68", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_106 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="121-121", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_107 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="123-124", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_108 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="121-121", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_365 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="519-519", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_366 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="521-522", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_367 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="519-519", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_186 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="241-241", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ProcessingJobsPage.generated.cs"];
m48_187 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="243-246", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ProcessingJobsPage.generated.cs"];
m48_188 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="248-261", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ProcessingJobsPage.generated.cs"];
m48_189 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="241-241", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ProcessingJobsPage.generated.cs"];
m48_219 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ProcessingJobsPage.generated.cs"];
m48_22 [label="Write(HtmlHelper.JobId(job.Key))", span="165-165", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_19 [label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="150-150", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_20 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="155-155", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_21 [label="WriteLiteral(''\''>\r\n                            '')", span="160-160", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_325 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="464-464", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_326 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="466-472", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_327 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="464-464", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_230 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="312-312", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_231 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="314-318", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_232 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="312-312", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_300 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="424-424", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ProcessingJobsPage.generated.cs"];
m48_301 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="426-427", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ProcessingJobsPage.generated.cs"];
m48_302 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="424-424", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ProcessingJobsPage.generated.cs"];
m48_50 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="24-24", cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="ProcessingJobsPage.generated.cs"];
m48_89 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="ProcessingJobsPage.generated.cs"];
m48_446 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ProcessingJobsPage.generated.cs"];
m48_0 [label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_1 [label="WriteLiteral(''\r\n'')", span="51-51", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_2 [label="Layout = new LayoutPage { Title = ''Processing Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_28 [label="WriteLiteral(''\r\n                        <span title=\'''')", span="202-202", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_424 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="583-583", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ProcessingJobsPage.generated.cs"];
m48_425 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="585-587", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ProcessingJobsPage.generated.cs"];
m48_426 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="589-603", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ProcessingJobsPage.generated.cs"];
m48_427 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="583-583", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ProcessingJobsPage.generated.cs"];
m48_413 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="576-576", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ProcessingJobsPage.generated.cs"];
m48_414 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="578-579", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ProcessingJobsPage.generated.cs"];
m48_415 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="576-576", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ProcessingJobsPage.generated.cs"];
m48_123 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ProcessingJobsPage.generated.cs"];
m48_175 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="218-218", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_176 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="220-223", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_177 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="225-237", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_178 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="218-218", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ProcessingJobsPage.generated.cs"];
m48_11 [label="WriteLiteral(''\r\n'')", span="87-87", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_12 [label="pager.TotalPageCount == 0", span="92-92", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No jobs are being processed right now'' +\r\n''.\r\n    </div>\r\n'')", span="98-99", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_14 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="113-113", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_63 [label="HangFire.Web.Pages.ProcessingJobsPage", span="", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="ProcessingJobsPage.generated.cs"];
m48_447 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="624-624", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="ProcessingJobsPage.generated.cs"];
m48_309 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="431-431", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ProcessingJobsPage.generated.cs"];
m48_310 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="433-439", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ProcessingJobsPage.generated.cs"];
m48_311 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="431-431", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ProcessingJobsPage.generated.cs"];
m48_434 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="ProcessingJobsPage.generated.cs"];
m48_36 [label="WriteLiteral(''                            <span data-moment=\'''')", span="244-244", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_88 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="ProcessingJobsPage.generated.cs"];
m48_374 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ProcessingJobsPage.generated.cs"];
m48_138 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="ProcessingJobsPage.generated.cs"];
m48_337 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="476-476", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_338 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="478-484", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_339 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="476-476", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_153 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ProcessingJobsPage.generated.cs"];
m48_363 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="ProcessingJobsPage.generated.cs"];
m48_422 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="ProcessingJobsPage.generated.cs"];
m48_96 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ProcessingJobsPage.generated.cs"];
m48_435 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="ProcessingJobsPage.generated.cs"];
m48_442 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="615-615", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_443 [label="var connection = new SqlServerConnection(\r\n                ConnectionUtils.CreateConnection(), new SqlServerStorageOptions())", span="617-618", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_444 [label="action(connection)", span="620-620", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_445 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="615-615", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_9 [label="pager = new Pager(from, perPage, monitor.ProcessingCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/processing'')\r\n        }", span="74-77", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_436 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="606-606", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_437 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="608-608", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_439 [label="action(sqlConnection, connection)", span="611-611", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_438 [label="var connection = new SqlServerConnection(sqlConnection, new SqlServerStorageOptions())", span="609-609", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_440 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="606-606", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ProcessingJobsPage.generated.cs"];
m48_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_258 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="358-358", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_259 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null));\r\n\r\n                Assert.Equal(''queue'', exception.ParamName);\r\n            })", span="360-366", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_260 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="358-358", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_237 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="322-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_238 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="324-331", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_239 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="333-342", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_240 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="322-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ProcessingJobsPage.generated.cs"];
m48_144 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="169-169", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ProcessingJobsPage.generated.cs"];
m48_145 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="171-174", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ProcessingJobsPage.generated.cs"];
m48_146 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="176-190", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ProcessingJobsPage.generated.cs"];
m48_147 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="169-169", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ProcessingJobsPage.generated.cs"];
m48_87 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ProcessingJobsPage.generated.cs"];
m48_246 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ProcessingJobsPage.generated.cs"];
m48_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m48_37 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_38 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="55-64", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_39 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_165 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="206-206", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_166 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="208-214", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_167 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="206-206", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_116 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="128-128", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ProcessingJobsPage.generated.cs"];
m48_117 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="130-134", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ProcessingJobsPage.generated.cs"];
m48_118 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="128-128", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ProcessingJobsPage.generated.cs"];
m48_364 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ProcessingJobsPage.generated.cs"];
m48_220 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="300-300", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_221 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="302-308", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_222 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="300-300", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ProcessingJobsPage.generated.cs"];
m48_139 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="ProcessingJobsPage.generated.cs"];
m48_90 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ProcessingJobsPage.generated.cs"];
m48_95 [label="Entry Unk.True", span="", cluster="Unk.True", file="ProcessingJobsPage.generated.cs"];
m48_395 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ProcessingJobsPage.generated.cs"];
m48_448 [label="HangFire.SqlServer.Tests.ConnectionFacts", span="", file="ProcessingJobsPage.generated.cs"];
m48_449 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_450 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_451 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_452 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_453 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_454 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_455 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_456 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_457 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_458 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_459 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_460 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_461 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_462 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_463 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_464 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_465 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_466 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_467 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_468 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_469 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_470 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_471 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_472 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_473 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_474 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m48_475 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ProcessingJobsPage.generated.cs"];
m48_476 [label=arrangeSql, span="", file="ProcessingJobsPage.generated.cs"];
m49_7 [label="Entry HangFire.States.ProcessingState.GetData(HangFire.Common.JobMethod)", span="36-36", cluster="HangFire.States.ProcessingState.GetData(HangFire.Common.JobMethod)", file="ProcessingState.cs"];
m49_8 [label="Entry HangFire.States.ProcessingState.Serialize()", span="40-40", cluster="HangFire.States.ProcessingState.Serialize()", color=red, community=0, file="ProcessingState.cs"];
m49_9 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="42-46", cluster="HangFire.States.ProcessingState.Serialize()", file="ProcessingState.cs", color=green, community=0];
m49_10 [label="Exit HangFire.States.ProcessingState.Serialize()", span="40-40", cluster="HangFire.States.ProcessingState.Serialize()", file="ProcessingState.cs"];
m49_5 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs"];
m49_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m49_1 [label="String.IsNullOrWhiteSpace(serverName)", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs"];
m49_3 [label="ServerName = serverName", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs"];
m49_2 [label="throw new ArgumentNullException(''serverName'');", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs"];
m49_4 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs"];
m49_11 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs"];
m49_12 [label="HangFire.States.ProcessingState", span="", file="ProcessingState.cs"];
m50_8 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ProcessingStateFacts.cs"];
m50_9 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(String.Empty))", span="19-20", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ProcessingStateFacts.cs"];
m50_10 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ProcessingStateFacts.cs"];
m50_19 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m50_20 [label="var state = new ProcessingState(''Server1'')", span="33-33", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m50_21 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ServerName'', ''Server1'' },\r\n                },\r\n                state.Serialize())", span="35-41", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="ProcessingStateFacts.cs"];
m50_22 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ServerName'', ''Server1'' },\r\n                },\r\n                data)", span="36-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="ProcessingStateFacts.cs"];
m50_23 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.GetStateData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m50_24 [label="Entry HangFire.States.ProcessingState.Serialize()", span="40-40", cluster="HangFire.States.ProcessingState.Serialize()", file="ProcessingStateFacts.cs"];
m50_25 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingStateFacts.cs"];
m50_26 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs"];
m50_14 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m50_15 [label="var state = new ProcessingState(''Server1'')", span="26-26", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m50_16 [label="Assert.Equal(ProcessingState.StateName, state.Name)", span="27-27", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", color=green, community=0, file="ProcessingStateFacts.cs"];
m50_17 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m50_18 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ProcessingStateFacts.cs"];
m50_7 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingStateFacts.cs"];
m50_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m50_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m50_5 [label="new ProcessingState(null)", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m50_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m50_12 [label="new ProcessingState(String.Empty)", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m50_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m50_0 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m50_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", span="12-13", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m50_2 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m51_36 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="75-75", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ProcessingStateHandler.cs"];
m51_37 [label="var body = Encoding.UTF8.GetBytes(jobId)", span="77-77", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ProcessingStateHandler.cs"];
m51_40 [label="_channel.BasicPublish('''', queue, properties, body)", span="81-81", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ProcessingStateHandler.cs"];
m51_38 [label="var properties = _channel.CreateBasicProperties()", span="78-78", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ProcessingStateHandler.cs"];
m51_39 [label="properties.SetPersistent(true)", span="79-79", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ProcessingStateHandler.cs"];
m51_41 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="75-75", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="ProcessingStateHandler.cs"];
m51_45 [label="Entry Unk.BasicPublish", span="", cluster="Unk.BasicPublish", file="ProcessingStateHandler.cs"];
m51_73 [label="Entry Unk.CreateModel", span="", cluster="Unk.CreateModel", file="ProcessingStateHandler.cs"];
m51_56 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="ProcessingStateHandler.cs"];
m51_14 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="99-99", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_58 [label=ConsumerLock, span="101-101", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_59 [label="_channel != null && _channel.IsOpen && _connection.IsOpen", span="103-103", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_60 [label="return;", span="103-103", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_61 [label="_channel != null && _channel.IsOpen", span="105-105", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_62 [label="_channel.Abort()", span="105-105", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_63 [label="!_connection.IsOpen", span="106-106", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_64 [label="_connection = _factory.CreateConnection()", span="106-106", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_65 [label="_channel = _connection.CreateModel()", span="108-108", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_66 [label="_channel.BasicQos(0, 1, false)", span="109-109", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_67 [label="var properties = _channel.CreateBasicProperties()", span="111-111", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_68 [label="properties.SetPersistent(true)", span="112-112", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_69 [label=_queues, span="115-115", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_70 [label="_channel.QueueDeclare(queue, true, false, false, null)", span="116-116", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_71 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", span="99-99", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.CreateChannel()", file="ProcessingStateHandler.cs"];
m51_95 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="ProcessingStateHandler.cs"];
m51_94 [label="Entry QueueingBasicConsumer.cstr", span="", cluster="QueueingBasicConsumer.cstr", file="ProcessingStateHandler.cs"];
m51_75 [label="Entry Unk.QueueDeclare", span="", cluster="Unk.QueueDeclare", file="ProcessingStateHandler.cs"];
m51_35 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="ProcessingStateHandler.cs"];
m51_32 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ProcessingStateHandler.cs"];
m51_13 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="ProcessingStateHandler.cs"];
m51_57 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ProcessingStateHandler.cs"];
m51_12 [label="Entry Unk.CreateConnection", span="", cluster="Unk.CreateConnection", file="ProcessingStateHandler.cs"];
m51_46 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", span="84-84", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_47 [label="_channel != null", span="86-86", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_48 [label="_channel.IsOpen", span="88-88", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_51 [label="_connection != null", span="92-92", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_49 [label="_channel.Close()", span="88-88", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_50 [label="_channel.Dispose()", span="89-89", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_52 [label="_connection.IsOpen", span="94-94", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_53 [label="_connection.Close()", span="94-94", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_54 [label="_connection.Dispose()", span="95-95", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_55 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", span="84-84", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dispose()", file="ProcessingStateHandler.cs"];
m51_33 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="120-120", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_76 [label="QueueingBasicConsumer consumer", span="122-122", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_77 [label="cancellationToken.ThrowIfCancellationRequested()", span="124-124", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_78 [label="!_consumers.TryGetValue(queue, out consumer)", span="126-126", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_80 [label="!_consumers.TryGetValue(queue, out consumer)", span="131-131", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_82 [label="_consumers.AddOrUpdate(queue, consumer, (dq, dc) => consumer)", span="134-134", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_83 [label="_channel.BasicConsume(queue, false, ''Hangfire.RabbitMq.'' + Thread.CurrentThread.Name, consumer)", span="135-135", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_88 [label="_consumers.AddOrUpdate(queue, newConsumer, (dq, dc) => newConsumer)", span="150-150", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_89 [label="_channel.BasicConsume(queue, false, ''Hangfire.RabbitMq.'' + Thread.CurrentThread.Name, newConsumer)", span="151-151", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_79 [label=ConsumerLock, span="129-129", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_84 [label="consumer.Model.IsClosed", span="142-142", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_86 [label="consumer.Model.IsClosed", span="146-146", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_91 [label="return consumer;", span="158-158", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_81 [label="consumer = new QueueingBasicConsumer(_channel)", span="133-133", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_85 [label=ConsumerLock, span="144-144", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_87 [label="var newConsumer = new QueueingBasicConsumer(_channel)", span="149-149", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_90 [label="consumer = newConsumer", span="152-152", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_92 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", span="120-120", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.GetConsumerForQueue(string, System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_34 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="ProcessingStateHandler.cs"];
m51_100 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="ProcessingStateHandler.cs"];
m51_98 [label=consumer, span="134-134", cluster="lambda expression", file="ProcessingStateHandler.cs"];
m51_97 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="ProcessingStateHandler.cs"];
m51_101 [label=newConsumer, span="150-150", cluster="lambda expression", file="ProcessingStateHandler.cs"];
m51_99 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="ProcessingStateHandler.cs"];
m51_102 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="ProcessingStateHandler.cs"];
m51_15 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_16 [label="BasicDeliverEventArgs message", span="44-44", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_18 [label="queueIndex = (queueIndex + 1) % queues.Length", span="49-49", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_19 [label="var queueName = queues[queueIndex]", span="50-50", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_20 [label="cancellationToken.ThrowIfCancellationRequested()", span="52-52", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_17 [label="var queueIndex = 0", span="45-45", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_21 [label="var consumer = GetConsumerForQueue(queueName, cancellationToken)", span="56-56", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_22 [label="consumer.Queue.Dequeue(SyncReceiveTimeout, out message)", span="57-57", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_23 [label="global::RabbitMQ.Client.Exceptions.AlreadyClosedException", span="59-59", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_26 [label="System.IO.EndOfStreamException", span="64-64", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_29 [label="message == null", span="70-70", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_24 [label="CreateChannel()", span="61-61", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_25 [label="message = null", span="62-62", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_27 [label="CreateChannel()", span="66-66", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_28 [label="message = null", span="67-67", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_30 [label="return new RabbitMqFetchedJob(message, ref _channel);", span="72-72", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_31 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ProcessingStateHandler.cs"];
m51_43 [label="Entry Unk.CreateBasicProperties", span="", cluster="Unk.CreateBasicProperties", file="ProcessingStateHandler.cs"];
m51_42 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="ProcessingStateHandler.cs"];
m51_44 [label="Entry Unk.SetPersistent", span="", cluster="Unk.SetPersistent", file="ProcessingStateHandler.cs"];
m51_0 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_1 [label="queues == null", span="23-23", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_3 [label="factory == null", span="24-24", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_5 [label="_queues = queues", span="26-26", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_6 [label="_factory = factory", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", color=red, community=0, file="ProcessingStateHandler.cs"];
m51_7 [label="_connection = factory.CreateConnection()", span="28-28", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_2 [label="throw new ArgumentNullException(''queues'');", span="23-23", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_4 [label="throw new ArgumentNullException(''factory'');", span="24-24", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_8 [label="_consumers = new ConcurrentDictionary<string, QueueingBasicConsumer>()", span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_9 [label="CreateChannel()", span="31-31", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_10 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="ProcessingStateHandler.cs"];
m51_93 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ProcessingStateHandler.cs"];
m51_96 [label="Entry Unk.BasicConsume", span="", cluster="Unk.BasicConsume", file="ProcessingStateHandler.cs"];
m51_72 [label="Entry Unk.Abort", span="", cluster="Unk.Abort", file="ProcessingStateHandler.cs"];
m51_74 [label="Entry Unk.BasicQos", span="", cluster="Unk.BasicQos", file="ProcessingStateHandler.cs"];
m51_103 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue", span="", file="ProcessingStateHandler.cs"];
m51_104 [label=consumer, span="", file="ProcessingStateHandler.cs"];
m51_105 [label=newConsumer, span="", file="ProcessingStateHandler.cs"];
m52_82 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="Program.cs"];
m52_0 [label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="Program.cs"];
m52_10 [label="server.Start()", span="38-38", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="Program.cs"];
m52_4 [label="Entry Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="53-53", cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="Program.cs"];
m52_9 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", color=green, community=0, file="Program.cs"];
m52_11 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Program.cs"];
m52_7 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="57-57", cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="Program.cs"];
m52_8 [label="Exit Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="53-53", cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="Program.cs"];
m52_3 [label="Exit Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="Program.cs"];
m52_5 [label="String.IsNullOrWhiteSpace(name)", span="55-55", cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="Program.cs"];
m52_12 [label="Hangfire.Client.CreatedContext", span="", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_21 [label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="59-59", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_6 [label="throw new ArgumentNullException(''name'');", span="55-55", cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="Program.cs"];
m52_22 [label="var workCount = int.Parse(command.Substring(7))", span="63-63", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_30 [label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="76-76", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_31 [label="var workCount = int.Parse(command.Substring(6))", span="78-78", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_36 [label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="85-85", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_37 [label="var workCount = int.Parse(command.Substring(5))", span="87-87", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_42 [label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="94-94", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_43 [label="var seconds = int.Parse(command.Substring(2))", span="96-96", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_46 [label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="101-101", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_49 [label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="107-107", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_50 [label="var workCount = int.Parse(command.Substring(5))", span="111-111", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_55 [label="Console.WriteLine(''Press Enter to exit...'')", span="133-133", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_2 [label="Exception = exception", span="33-33", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="Program.cs"];
m52_44 [label="var number = count++", span="97-97", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_13 [label="var i = 0", span="46-46", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_14 [label="i < workCount", span="46-46", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_18 [label="Console.WriteLine(''Jobs enqueued.'')", span="51-51", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_20 [label="Console.WriteLine(ex.Message)", span="55-55", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_52 [label="Console.WriteLine(''Jobs enqueued.'')", span="123-123", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_54 [label="Console.WriteLine(ex.Message)", span="127-127", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_56 [label="Console.ReadLine()", span="134-134", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_23 [label="var i = 0", span="64-64", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_24 [label="i < workCount", span="64-64", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_27 [label="Console.WriteLine(''Jobs enqueued.'')", span="68-68", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_29 [label="Console.WriteLine(ex.Message)", span="72-72", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_32 [label="var i = 0", span="79-79", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_33 [label="i < workCount", span="79-79", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_38 [label="var i = 0", span="88-88", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_39 [label="i < workCount", span="88-88", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_45 [label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="98-98", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_47 [label="BackgroundJob.Enqueue<Services>(x => x.Recurring())", span="103-103", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_48 [label="Console.WriteLine(''Recurring job added'')", span="104-104", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_51 [label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="112-122", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_1 [label="Canceled = canceled", span="32-32", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="Program.cs"];
m52_15 [label="var number = i", span="48-48", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_17 [label="i++", span="46-46", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_19 [label=Exception, span="53-53", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_53 [label=Exception, span="125-125", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_26 [label="i++", span="64-64", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_25 [label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="66-66", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_28 [label=Exception, span="70-70", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_35 [label="i++", span="79-79", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_34 [label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="81-81", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_41 [label="i++", span="88-88", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_40 [label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="90-90", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_16 [label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="49-49", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_57 [label="Exit ConsoleSample.Program.Main()", span="13-13", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m52_61 [label="Entry HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", span="56-56", cluster="HangFire.Common.Filters.GlobalJobFilterCollection.Add(object)", file="Program.cs"];
m52_108 [label="Entry ConsoleSample.Services.EmptyCritical()", span="17-17", cluster="ConsoleSample.Services.EmptyCritical()", file="Program.cs"];
m52_60 [label="Entry HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28", cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="Program.cs"];
m52_86 [label="Entry ConsoleSample.Services.Error()", span="22-22", cluster="ConsoleSample.Services.Error()", file="Program.cs"];
m52_73 [label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="138-138", cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="Program.cs"];
m52_69 [label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="97-97", cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="Program.cs"];
m52_68 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="Program.cs"];
m52_72 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs"];
m52_62 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Program.cs"];
m52_78 [label="Entry ConsoleSample.Services.Random(int)", span="35-35", cluster="ConsoleSample.Services.Random(int)", file="Program.cs"];
m52_91 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="Program.cs"];
m52_66 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs"];
m52_92 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="52-52", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="Program.cs"];
m52_63 [label="Entry System.Console.ReadLine()", span="0-0", cluster="System.Console.ReadLine()", file="Program.cs"];
m52_99 [label="Entry ConsoleSample.Services.Recurring()", span="29-29", cluster="ConsoleSample.Services.Recurring()", file="Program.cs"];
m52_109 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="Program.cs"];
m52_94 [label="x.Random(number)", span="98-98", cluster="lambda expression", file="Program.cs"];
m52_93 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="Program.cs"];
m52_96 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="Program.cs"];
m52_100 [label="Entry lambda expression", span="112-122", cluster="lambda expression", file="Program.cs"];
m52_95 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="Program.cs"];
m52_76 [label="x.Random(number)", span="49-49", cluster="lambda expression", file="Program.cs"];
m52_79 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="Program.cs"];
m52_83 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="Program.cs"];
m52_87 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="Program.cs"];
m52_102 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="116-116", cluster="lambda expression", file="Program.cs"];
m52_103 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="120-120", cluster="lambda expression", file="Program.cs"];
m52_98 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="Program.cs"];
m52_97 [label="x.Recurring()", span="103-103", cluster="lambda expression", file="Program.cs"];
m52_104 [label="Exit lambda expression", span="112-122", cluster="lambda expression", file="Program.cs"];
m52_101 [label="i % 2 == 0", span="114-114", cluster="lambda expression", file="Program.cs"];
m52_75 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="Program.cs"];
m52_77 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="Program.cs"];
m52_81 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="Program.cs"];
m52_80 [label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66", cluster="lambda expression", file="Program.cs"];
m52_85 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="Program.cs"];
m52_84 [label="x.Error()", span="81-81", cluster="lambda expression", file="Program.cs"];
m52_89 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="Program.cs"];
m52_88 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90", cluster="lambda expression", file="Program.cs"];
m52_105 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="Program.cs"];
m52_107 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="Program.cs"];
m52_106 [label="x.EmptyCritical()", span="116-116", cluster="lambda expression", file="Program.cs"];
m52_110 [label="x.EmptyDefault()", span="120-120", cluster="lambda expression", file="Program.cs"];
m52_111 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="Program.cs"];
m52_64 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="Program.cs"];
m52_74 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Program.cs"];
m52_90 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="Program.cs"];
m52_65 [label="Entry HangFire.BackgroundJobServer.Start()", span="93-93", cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs"];
m52_59 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="Program.cs"];
m52_71 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="75-75", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="Program.cs"];
m52_70 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m52_58 [label="Entry ConsoleLogFactory.cstr", span="", cluster="ConsoleLogFactory.cstr", file="Program.cs"];
m52_112 [label="Entry ConsoleSample.Services.EmptyDefault()", span="12-12", cluster="ConsoleSample.Services.EmptyDefault()", file="Program.cs"];
m52_67 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Program.cs"];
m52_114 [label=number, span="", file="Program.cs"];
m52_113 [label=number, span="", file="Program.cs"];
m53_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="QueueAttribute.cs"];
m53_114 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_116 [label="this.ScenarioSetup(scenarioInfo)", span="277-277", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_115 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_123 [label="this.ScenarioCleanup()", span="295-295", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_117 [label="this.FeatureBackground()", span="279-279", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_122 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_118 [label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_121 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_119 [label="table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_120 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_124 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", file="QueueAttribute.cs"];
m53_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="QueueAttribute.cs"];
m53_26 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="QueueAttribute.cs"];
m53_27 [label="testRunner.CollectScenarioErrors()", span="69-69", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", color=green, community=0, file="QueueAttribute.cs"];
m53_28 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="QueueAttribute.cs"];
m53_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="QueueAttribute.cs"];
m53_0 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="QueueAttribute.cs"];
m53_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="QueueAttribute.cs"];
m53_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="QueueAttribute.cs"];
m53_184 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_186 [label="this.ScenarioSetup(scenarioInfo)", span="441-441", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_185 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters should be executed depending on their order'', ((string[])(null)))", span="439-439", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_197 [label="this.ScenarioCleanup()", span="464-464", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_187 [label="this.FeatureBackground()", span="443-443", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_196 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_188 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_195 [label="testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_189 [label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_191 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="451-451", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_192 [label="TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_194 [label="table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_190 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="449-449", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_193 [label="table11.AddRow(new string[] {\r\n                        ''first''})", span="455-456", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_198 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_80 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_82 [label="this.ScenarioSetup(scenarioInfo)", span="184-184", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_81 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_89 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_83 [label="this.FeatureBackground()", span="186-186", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_88 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_84 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_87 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_85 [label="table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", span="191-193", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_86 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_90 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_52 [label="Entry Unk.And", span="", cluster="Unk.And", file="QueueAttribute.cs"];
m53_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="QueueAttribute.cs"];
m53_68 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_70 [label="this.ScenarioSetup(scenarioInfo)", span="152-152", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_78 [label="this.ScenarioCleanup()", span="173-173", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_71 [label="this.FeatureBackground()", span="154-154", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_77 [label="testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_72 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_76 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_73 [label="table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="159-161", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_74 [label="table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_75 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_79 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", file="QueueAttribute.cs"];
m53_91 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_93 [label="this.ScenarioSetup(scenarioInfo)", span="215-215", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_92 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_101 [label="this.ScenarioCleanup()", span="235-235", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_94 [label="this.FeatureBackground()", span="217-217", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_100 [label="testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_95 [label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_99 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_96 [label="table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_97 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_98 [label="testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="229-229", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_102 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", file="QueueAttribute.cs"];
m53_141 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_143 [label="this.ScenarioSetup(scenarioInfo)", span="342-342", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_142 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_153 [label="this.ScenarioCleanup()", span="363-363", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_144 [label="this.FeatureBackground()", span="344-344", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_152 [label="testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_145 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_148 [label="TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_151 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_146 [label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_147 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_149 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_150 [label="table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_154 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="QueueAttribute.cs"];
m53_22 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="QueueAttribute.cs"];
m53_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=green, community=0, file="QueueAttribute.cs"];
m53_24 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="QueueAttribute.cs"];
m53_173 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_175 [label="this.ScenarioSetup(scenarioInfo)", span="416-416", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_174 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_182 [label="this.ScenarioCleanup()", span="430-430", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_176 [label="this.FeatureBackground()", span="418-418", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_181 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_177 [label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_180 [label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_178 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="422-422", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_179 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="424-424", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_183 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="QueueAttribute.cs"];
m53_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="QueueAttribute.cs"];
m53_48 [label="Entry Unk.When", span="", cluster="Unk.When", file="QueueAttribute.cs"];
m53_50 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="QueueAttribute.cs"];
m53_34 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", color=green, community=0, file="QueueAttribute.cs"];
m53_36 [label="this.ScenarioSetup(scenarioInfo)", span="88-88", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_45 [label="this.ScenarioCleanup()", span="107-107", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_37 [label="this.FeatureBackground()", span="90-90", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_44 [label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_38 [label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_43 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_39 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_40 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_42 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_41 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_46 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", file="QueueAttribute.cs"];
m53_47 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="QueueAttribute.cs"];
m53_155 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_157 [label="this.ScenarioSetup(scenarioInfo)", span="374-374", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_156 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_171 [label="this.ScenarioCleanup()", span="403-403", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_158 [label="this.FeatureBackground()", span="376-376", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_170 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_159 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_169 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_160 [label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_161 [label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_163 [label="TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_168 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_162 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_164 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_165 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_166 [label="table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_167 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_172 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_51 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="QueueAttribute.cs"];
m53_33 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="QueueAttribute.cs"];
m53_53 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_55 [label="this.ScenarioSetup(scenarioInfo)", span="118-118", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_54 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_66 [label="this.ScenarioCleanup()", span="141-141", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_56 [label="this.FeatureBackground()", span="120-120", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_65 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_57 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_60 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_64 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_58 [label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_59 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_61 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="130-131", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_62 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_63 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_67 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", file="QueueAttribute.cs"];
m53_3 [label="HangFire.QueueAttribute", span="", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="QueueAttribute.cs"];
m53_4 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="QueueAttribute.cs"];
m53_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="QueueAttribute.cs"];
m53_49 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="QueueAttribute.cs"];
m53_30 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="QueueAttribute.cs"];
m53_31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="QueueAttribute.cs"];
m53_32 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="QueueAttribute.cs"];
m53_125 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_127 [label="this.ScenarioSetup(scenarioInfo)", span="306-306", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_126 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_139 [label="this.ScenarioCleanup()", span="331-331", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_128 [label="this.FeatureBackground()", span="308-308", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_138 [label="testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_129 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_134 [label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_137 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_130 [label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_131 [label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_133 [label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_135 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_136 [label="table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_132 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_140 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", file="QueueAttribute.cs"];
m53_103 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_105 [label="this.ScenarioSetup(scenarioInfo)", span="248-248", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_104 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_112 [label="this.ScenarioCleanup()", span="266-266", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_106 [label="this.FeatureBackground()", span="250-250", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_111 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_107 [label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_110 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_108 [label="table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_109 [label="testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_113 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", file="QueueAttribute.cs"];
m53_14 [label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="QueueAttribute.cs"];
m53_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", color=green, community=0, file="QueueAttribute.cs"];
m53_16 [label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="QueueAttribute.cs"];
m53_17 [label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="QueueAttribute.cs"];
m53_199 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_201 [label="this.ScenarioSetup(scenarioInfo)", span="477-477", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_200 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_214 [label="this.ScenarioCleanup()", span="504-504", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_202 [label="this.FeatureBackground()", span="479-479", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_213 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_203 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_212 [label="testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_204 [label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_205 [label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_207 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="489-489", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_208 [label="TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_211 [label="table12.AddRow(new string[] {\r\n                        ''third''})", span="497-498", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_206 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="487-487", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_209 [label="table12.AddRow(new string[] {\r\n                        ''first''})", span="493-494", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_210 [label="table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_215 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", file="QueueAttribute.cs"];
m53_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="QueueAttribute.cs"];
m53_18 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="57-57", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="QueueAttribute.cs"];
m53_19 [label="testRunner.OnScenarioEnd()", span="59-59", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", color=green, community=0, file="QueueAttribute.cs"];
m53_20 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="57-57", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="QueueAttribute.cs"];
m53_216 [label="HangFire.Tests.ClientFiltersFeature", span="", file="QueueAttribute.cs"];
m54_54 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="QueuesPage.generated.cs"];
m54_49 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="QueuesPage.generated.cs"];
m54_52 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="7-7", cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="QueuesPage.generated.cs"];
m54_57 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="QueuesPage.generated.cs"];
m54_0 [label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_1 [label="WriteLiteral(''\r\n'')", span="61-61", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_2 [label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_3 [label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_4 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_5 [label="queues = monitor.Queues()", span="80-80", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_6 [label="WriteLiteral(''\r\n'')", span="87-87", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_7 [label="queues.Count == 0", span="92-92", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_10 [label=queues, span="126-126", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_8 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="98-99", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_9 [label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_11 [label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_47 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="370-370", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_12 [label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_14 [label="Write(queue.Name)", span="148-148", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_16 [label="Write(queue.Length)", span="159-159", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_18 [label="Write(Request.LinkTo(''/queues/dequeued/'' + queue.Name))", span="169-169", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_20 [label="Write(queue.Dequeued)", span="179-179", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_22 [label="queue.FirstJobs.Count == 0", span="195-195", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_25 [label="queue.FirstJobs", span="227-227", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_13 [label="WriteLiteral(''\''>\r\n                            '')", span="143-143", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_15 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_17 [label="WriteLiteral(''</td>\r\n                    <td>\r\n                        <a href=\'''')", span="164-164", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_19 [label="WriteLiteral(''\''>\r\n                            '')", span="174-174", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_21 [label="WriteLiteral(''    \r\n                        </a>\r\n                    </td>\r\n                  '' +\r\n''  <td>'')", span="187-188", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_23 [label="WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="201-201", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_24 [label="WriteLiteral(@''                        <table class=''''table table-condensed table-bordered table-inner''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Job type</th>\r\n                                    <th>Enqueued</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n'')", span="213-222", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_26 [label="WriteLiteral(''                                    <tr class=\'''')", span="233-233", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_45 [label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="350-350", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_27 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="238-238", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_28 [label="WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <a href=\'''')", span="243-244", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_29 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="249-249", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_30 [label="WriteLiteral(''\''>'')", span="254-254", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_31 [label="Write(HtmlHelper.JobId(job.Key))", span="259-259", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_32 [label="WriteLiteral(''</a>\r\n'')", span="264-264", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_33 [label="!job.Value.InEnqueuedState", span="269-269", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_34 [label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="275-277", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_35 [label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="287-288", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_36 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="293-293", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m54_37 [label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="298-298", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_38 [label="job.Value.EnqueuedAt.HasValue", span="303-303", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_39 [label="WriteLiteral(''                                                <span data-moment=\'''')", span="309-309", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_44 [label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="339-340", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_40 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="314-314", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_41 [label="WriteLiteral(''\''>\r\n                                                    '')", span="319-319", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_42 [label="Write(job.Value.EnqueuedAt)", span="324-324", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_43 [label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="329-329", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_46 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="360-360", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_48 [label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m54_51 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="QueuesPage.generated.cs"];
m54_50 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="QueuesPage.generated.cs"];
m54_53 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="QueuesPage.generated.cs"];
m54_58 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="QueuesPage.generated.cs"];
m54_56 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="QueuesPage.generated.cs"];
m54_55 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="QueuesPage.generated.cs"];
m54_59 [label="HangFire.Web.Pages.QueuesPage", span="", file="QueuesPage.generated.cs"];
m55_0 [label="Entry HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", span="25-25", cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs"];
m55_1 [label="RepeatInterval = intervalInSeconds", span="27-27", cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs"];
m55_2 [label="Exit HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", span="25-25", cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs"];
m55_3 [label="Entry HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="32-32", cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs"];
m55_4 [label="context.CandidateState.Name == SucceededState.StateName", span="34-34", cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="RecurringAttribute.cs"];
m55_6 [label="context.CandidateState = new ScheduledState(scheduleAt)\r\n                {\r\n                    Reason = ''Scheduled as a recurring job''\r\n                }", span="37-40", cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs"];
m55_5 [label="var scheduleAt = DateTime.UtcNow.AddSeconds(RepeatInterval)", span="36-36", cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs"];
m55_7 [label="Exit HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="32-32", cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs"];
m55_8 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="RecurringAttribute.cs"];
m55_9 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="RecurringAttribute.cs"];
m55_10 [label="HangFire.Filters.RecurringAttribute", span="", file="RecurringAttribute.cs"];
m56_4 [label="Entry HangFire.Redis.RedisConnection.Dispose()", span="23-23", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m56_5 [label="_redis.Dispose()", span="25-25", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m56_6 [label="Exit HangFire.Redis.RedisConnection.Dispose()", span="23-23", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m56_103 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs"];
m56_161 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs"];
m56_16 [label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_47 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisConnection.cs"];
m56_13 [label="Entry HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="33-33", cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_14 [label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="35-35", cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_15 [label="Exit HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="33-33", cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_22 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="RedisConnection.cs"];
m56_65 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisConnection.cs"];
m56_160 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="RedisConnection.cs"];
m56_128 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="187-187", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_129 [label="var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="189-189", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_140 [label="utcNow > maxTime.Add(timeOut)", span="220-220", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_130 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="190-190", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_133 [label=serverNames, span="196-196", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_131 [label="var utcNow = DateTime.UtcNow", span="192-192", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_135 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="200-208", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_138 [label=heartbeats, span="215-215", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_132 [label="var pipeline = _redis.CreatePipeline()", span="194-194", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_136 [label="pipeline.Flush()", span="211-211", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_134 [label="var name = serverName", span="198-198", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_137 [label="var removedServerCount = 0", span="214-214", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_142 [label="removedServerCount++", span="223-223", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_143 [label="return removedServerCount;", span="227-227", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_139 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="217-218", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_141 [label="RemoveServer(_redis, heartbeat.Key)", span="222-222", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_144 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="187-187", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m56_72 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisConnection.cs"];
m56_98 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisConnection.cs"];
m56_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisConnection.cs"];
m56_176 [label="Entry Unk.RemoveEntryFromHash", span="", cluster="Unk.RemoveEntryFromHash", file="RedisConnection.cs"];
m56_126 [label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="181-184", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m56_125 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="179-179", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m56_127 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="179-179", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m56_124 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="RedisConnection.cs"];
m56_114 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="171-173", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m56_111 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="163-163", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m56_112 [label="var transaction = redis.CreateTransaction()", span="165-165", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m56_113 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="167-169", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m56_115 [label="transaction.Commit()", span="175-175", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m56_116 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="163-163", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m56_81 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="124-124", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="RedisConnection.cs"];
m56_82 [label="return _redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="126-128", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="RedisConnection.cs"];
m56_83 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="124-124", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="RedisConnection.cs"];
m56_8 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="28-28", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m56_9 [label="return new RedisWriteOnlyTransaction(_redis.CreateTransaction());", span="30-30", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m56_10 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="28-28", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m56_0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs"];
m56_1 [label="_redis = redis", span="17-17", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs"];
m56_2 [label="Storage = storage", span="18-18", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs"];
m56_3 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs"];
m56_17 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RedisConnection.cs"];
m56_51 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="RedisConnection.cs"];
m56_73 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="112-112", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs"];
m56_74 [label="return _redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="114-116", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs"];
m56_75 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="112-112", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs"];
m56_38 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="RedisConnection.cs"];
m56_147 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="RedisConnection.cs"];
m56_11 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs"];
m56_162 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RedisConnection.cs"];
m56_52 [label="Entry HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", span="76-76", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_53 [label="var jobData = _redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="78-79", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_54 [label="jobData.Count == 0", span="81-81", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_57 [label="jobData.ContainsKey(''Type'')", span="84-84", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_58 [label="invocationData.Type = jobData[''Type'']", span="86-86", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=red, community=0, file="RedisConnection.cs"];
m56_59 [label="jobData.ContainsKey(''Method'')", span="88-88", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_60 [label="invocationData.Method = jobData[''Method'']", span="90-90", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=red, community=0, file="RedisConnection.cs"];
m56_61 [label="jobData.ContainsKey(''ParameterTypes'')", span="92-92", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_62 [label="invocationData.ParameterTypes = jobData[''ParameterTypes'']", span="94-94", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=red, community=0, file="RedisConnection.cs"];
m56_63 [label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = invocationData,\r\n                State = jobData.ContainsKey(''State'') ? jobData[''State''] : null,\r\n            };", span="97-101", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_55 [label="return null;", span="81-81", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_56 [label="var invocationData = new InvocationData()", span="83-83", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=red, community=0, file="RedisConnection.cs"];
m56_64 [label="Exit HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", span="76-76", cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs"];
m56_150 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs"];
m56_102 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnection.cs"];
m56_166 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="245-247", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_80 [label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="230-230", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_163 [label="var transaction = redis.CreateTransaction()", span="235-235", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_164 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="237-240", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_165 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="242-244", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_167 [label="transaction.Commit()", span="249-249", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_168 [label="Exit HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="230-230", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m56_159 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs"];
m56_107 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RedisConnection.cs"];
m56_7 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisConnection.cs"];
m56_86 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="131-131", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_87 [label="var transaction = _redis.CreateTransaction()", span="133-133", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_88 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="135-136", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_89 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="138-144", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_90 [label=queues, span="146-146", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_92 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="149-151", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_93 [label="transaction.Commit()", span="154-154", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_91 [label="var queue1 = queue", span="148-148", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_94 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="131-131", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m56_120 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs"];
m56_148 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs"];
m56_108 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="158-158", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m56_109 [label="RemoveServer(_redis, serverId)", span="160-160", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m56_110 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="158-158", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m56_33 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="65-67", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_24 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="45-45", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_25 [label="var jobId = Guid.NewGuid().ToString()", span="51-51", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_26 [label="parameters.Add(''Type'', invocationData.Type)", span="53-53", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m56_27 [label="parameters.Add(''Method'', invocationData.Method)", span="54-54", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m56_28 [label="parameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="55-55", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m56_29 [label="parameters.Add(''Arguments'', JobHelper.ToJson(arguments))", span="56-56", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m56_30 [label="parameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="57-57", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m56_32 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters))", span="61-63", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m56_35 [label="return jobId;", span="73-73", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_31 [label="var transaction = _redis.CreateTransaction()", span="59-59", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_34 [label="transaction.Commit()", span="70-70", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_36 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="45-45", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m56_149 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="RedisConnection.cs"];
m56_177 [label="Entry lambda expression", span="245-247", cluster="lambda expression", file="RedisConnection.cs"];
m56_45 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="61-63", cluster="lambda expression", color=red, community=0, file="RedisConnection.cs"];
m56_49 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="65-67", cluster="lambda expression", file="RedisConnection.cs"];
m56_44 [label="Entry lambda expression", span="61-63", cluster="lambda expression", file="RedisConnection.cs"];
m56_48 [label="Entry lambda expression", span="65-67", cluster="lambda expression", file="RedisConnection.cs"];
m56_46 [label="Exit lambda expression", span="61-63", cluster="lambda expression", file="RedisConnection.cs"];
m56_50 [label="Exit lambda expression", span="65-67", cluster="lambda expression", file="RedisConnection.cs"];
m56_96 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="135-136", cluster="lambda expression", file="RedisConnection.cs"];
m56_100 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="138-144", cluster="lambda expression", file="RedisConnection.cs"];
m56_105 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="149-151", cluster="lambda expression", file="RedisConnection.cs"];
m56_95 [label="Entry lambda expression", span="135-136", cluster="lambda expression", file="RedisConnection.cs"];
m56_99 [label="Entry lambda expression", span="138-144", cluster="lambda expression", file="RedisConnection.cs"];
m56_104 [label="Entry lambda expression", span="149-151", cluster="lambda expression", file="RedisConnection.cs"];
m56_97 [label="Exit lambda expression", span="135-136", cluster="lambda expression", file="RedisConnection.cs"];
m56_101 [label="Exit lambda expression", span="138-144", cluster="lambda expression", file="RedisConnection.cs"];
m56_106 [label="Exit lambda expression", span="149-151", cluster="lambda expression", file="RedisConnection.cs"];
m56_118 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="167-169", cluster="lambda expression", file="RedisConnection.cs"];
m56_122 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="171-173", cluster="lambda expression", file="RedisConnection.cs"];
m56_117 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="RedisConnection.cs"];
m56_121 [label="Entry lambda expression", span="171-173", cluster="lambda expression", file="RedisConnection.cs"];
m56_119 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="RedisConnection.cs"];
m56_123 [label="Exit lambda expression", span="171-173", cluster="lambda expression", file="RedisConnection.cs"];
m56_157 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="204-208", cluster="lambda expression", file="RedisConnection.cs"];
m56_152 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="201-203", cluster="lambda expression", file="RedisConnection.cs"];
m56_151 [label="Entry lambda expression", span="201-203", cluster="lambda expression", file="RedisConnection.cs"];
m56_156 [label="Entry lambda expression", span="204-208", cluster="lambda expression", file="RedisConnection.cs"];
m56_153 [label="Exit lambda expression", span="201-203", cluster="lambda expression", file="RedisConnection.cs"];
m56_158 [label="Exit lambda expression", span="204-208", cluster="lambda expression", file="RedisConnection.cs"];
m56_170 [label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="237-240", cluster="lambda expression", file="RedisConnection.cs"];
m56_174 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="242-244", cluster="lambda expression", file="RedisConnection.cs"];
m56_178 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="245-247", cluster="lambda expression", file="RedisConnection.cs"];
m56_169 [label="Entry lambda expression", span="237-240", cluster="lambda expression", file="RedisConnection.cs"];
m56_173 [label="Entry lambda expression", span="242-244", cluster="lambda expression", file="RedisConnection.cs"];
m56_171 [label="Exit lambda expression", span="237-240", cluster="lambda expression", file="RedisConnection.cs"];
m56_175 [label="Exit lambda expression", span="242-244", cluster="lambda expression", file="RedisConnection.cs"];
m56_179 [label="Exit lambda expression", span="245-247", cluster="lambda expression", file="RedisConnection.cs"];
m56_41 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs"];
m56_85 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="RedisConnection.cs"];
m56_18 [label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="38-38", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m56_19 [label="return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="40-42", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m56_20 [label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="38-38", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m56_146 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="RedisConnection.cs"];
m56_70 [label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="106-109", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs"];
m56_69 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="104-104", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs"];
m56_71 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="104-104", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs"];
m56_172 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="RedisConnection.cs"];
m56_37 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="RedisConnection.cs"];
m56_40 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisConnection.cs"];
m56_43 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisConnection.cs"];
m56_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RedisConnection.cs"];
m56_77 [label="Entry HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", span="119-119", cluster="HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", file="RedisConnection.cs"];
m56_78 [label="RedisConnection.RemoveFromDequeuedList(_redis, payload.Queue, payload.Id)", span="121-121", cluster="HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", file="RedisConnection.cs"];
m56_79 [label="Exit HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", span="119-119", cluster="HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", file="RedisConnection.cs"];
m56_145 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs"];
m56_155 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="RedisConnection.cs"];
m56_154 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RedisConnection.cs"];
m56_42 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisConnection.cs"];
m56_84 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisConnection.cs"];
m56_66 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisConnection.cs"];
m56_68 [label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2", cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="RedisConnection.cs"];
m56_23 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="RedisConnection.cs"];
m56_12 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="RedisConnection.cs"];
m56_67 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="RedisConnection.cs"];
m56_180 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnection.cs"];
m56_181 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="RedisConnection.cs"];
m56_182 [label=jobId, span="", file="RedisConnection.cs"];
m56_183 [label="System.TimeSpan", span="", file="RedisConnection.cs"];
m56_184 [label=string, span="", file="RedisConnection.cs"];
m56_185 [label=int, span="", file="RedisConnection.cs"];
m56_186 [label=queue1, span="", file="RedisConnection.cs"];
m56_187 [label=string, span="", file="RedisConnection.cs"];
m56_188 [label=name, span="", file="RedisConnection.cs"];
m56_189 [label=heartbeats, span="", file="RedisConnection.cs"];
m56_190 [label=string, span="", file="RedisConnection.cs"];
m56_191 [label=string, span="", file="RedisConnection.cs"];
m57_32 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisJobFetcher.cs"];
m57_33 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="RedisJobFetcher.cs"];
m57_40 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisJobFetcher.cs"];
m57_0 [label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisJobFetcher.cs"];
m57_1 [label="_redis = redis", span="22-22", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisJobFetcher.cs"];
m57_2 [label="_queueNames = queueNames.ToList()", span="23-23", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisJobFetcher.cs"];
m57_3 [label="_fetchTimeout = fetchTimeout", span="24-24", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisJobFetcher.cs"];
m57_4 [label="Exit HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisJobFetcher.cs"];
m57_38 [label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="79-82", cluster="lambda expression", file="RedisJobFetcher.cs", color=red, community=0];
m57_45 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="RedisJobFetcher.cs"];
m57_5 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RedisJobFetcher.cs"];
m57_34 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisJobFetcher.cs"];
m57_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="RedisJobFetcher.cs"];
m57_41 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", color=green, community=0, file="RedisJobFetcher.cs"];
m57_43 [label="x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' })", span="87-89", cluster="lambda expression", color=red, community=0, file="RedisJobFetcher.cs"];
m57_47 [label="invocationData.Type = x[0]", span="92-92", cluster="lambda expression", color=red, community=0, file="RedisJobFetcher.cs"];
m57_48 [label="invocationData.Method = x[2]", span="93-93", cluster="lambda expression", color=red, community=0, file="RedisJobFetcher.cs"];
m57_49 [label="invocationData.ParameterTypes = x[4]", span="94-94", cluster="lambda expression", color=red, community=0, file="RedisJobFetcher.cs"];
m57_37 [label="Entry lambda expression", span="79-82", cluster="lambda expression", file="RedisJobFetcher.cs"];
m57_42 [label="Entry lambda expression", span="87-89", cluster="lambda expression", file="RedisJobFetcher.cs"];
m57_46 [label="x.GetValuesFromHash(\r\n                        RedisStorage.Prefix + String.Format(''job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' })", span="89-91", cluster="lambda expression", file="RedisJobFetcher.cs", color=green, community=0];
m57_39 [label="Exit lambda expression", span="79-82", cluster="lambda expression", file="RedisJobFetcher.cs"];
m57_44 [label="Exit lambda expression", span="87-89", cluster="lambda expression", file="RedisJobFetcher.cs"];
m57_50 [label="type = x[0]", span="94-94", cluster="lambda expression", file="RedisJobFetcher.cs", color=green, community=0];
m57_51 [label="method = x[2]", span="95-95", cluster="lambda expression", file="RedisJobFetcher.cs", color=green, community=0];
m57_52 [label="Exit lambda expression", span="90-97", cluster="lambda expression", color=green, community=0, file="RedisJobFetcher.cs"];
m57_36 [label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23", cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="RedisJobFetcher.cs"];
m57_29 [label="return new JobPayload(jobId, queueName, invocationData)\r\n            {\r\n                Args = args,\r\n                Arguments = arguments\r\n            };", span="110-114", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_35 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="RedisJobFetcher.cs"];
m57_30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="RedisJobFetcher.cs"];
m57_28 [label="var invocationData = new InvocationData(type, method, parameterTypes)", span="108-108", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs", color=green, community=0];
m57_25 [label="pipeline.Flush()", span="99-99", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="RedisJobFetcher.cs"];
m57_6 [label="Entry HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_7 [label="string jobId", span="29-29", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_10 [label="cancellationToken.ThrowIfCancellationRequested()", span="35-35", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_8 [label="string queueName", span="30-30", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_9 [label="var queueIndex = 0", span="31-31", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_11 [label="queueIndex = (queueIndex + 1) % _queueNames.Count", span="37-37", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_12 [label="queueName = _queueNames[queueIndex]", span="38-38", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_15 [label="queueIndex == 0", span="43-43", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_13 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="40-40", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="RedisJobFetcher.cs"];
m57_14 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="41-41", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="RedisJobFetcher.cs"];
m57_26 [label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        RedisStorage.Prefix + String.Format(''job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' }),\r\n                    x =>\r\n                    {\r\n                        type = x[0];\r\n                        method = x[2];\r\n                        parameterTypes = x[4];\r\n                        args = x[1];\r\n                        arguments = x[3];\r\n                    })", span="88-99", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs", color=green, community=0];
m57_16 [label="jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        _fetchTimeout)", span="45-48", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_17 [label="jobId = _redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="52-53", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_18 [label="jobId == null", span="56-56", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_23 [label="string args = null", span="77-77", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="RedisJobFetcher.cs"];
m57_24 [label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' }),\r\n                    x =>\r\n                    {\r\n                        invocationData.Type = x[0];\r\n                        invocationData.Method = x[2];\r\n                        invocationData.ParameterTypes = x[4];\r\n                        args = x[1];\r\n                        arguments = x[3];\r\n                    })", span="86-97", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="RedisJobFetcher.cs"];
m57_19 [label="string type = null", span="73-73", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="RedisJobFetcher.cs"];
m57_20 [label="string method = null", span="74-74", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs", color=green, community=0];
m57_21 [label="string parameterTypes = null", span="75-75", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs", color=green, community=0];
m57_22 [label="string arguments = null", span="76-76", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_27 [label="Exit HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisJobFetcher.cs"];
m57_53 [label="HangFire.Redis.RedisJobFetcher", span="", file="RedisJobFetcher.cs"];
m57_54 [label=jobId, span="", file="RedisJobFetcher.cs"];
m57_55 [label=invocationData, span="", file="RedisJobFetcher.cs"];
m58_26 [label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="RedisMonitoringApi.cs"];
m58_27 [label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="RedisMonitoringApi.cs"];
m58_0 [label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="RedisMonitoringApi.cs"];
m58_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="RedisMonitoringApi.cs"];
m58_2 [label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="RedisMonitoringApi.cs"];
m58_19 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="RedisMonitoringApi.cs"];
m58_20 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="RedisMonitoringApi.cs"];
m58_22 [label="Entry Unk.False", span="", cluster="Unk.False", file="RedisMonitoringApi.cs"];
m58_7 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="RedisMonitoringApi.cs"];
m58_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="RedisMonitoringApi.cs"];
m58_23 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m58_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m58_5 [label="new CreatingContext(null)", span="16-16", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m58_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m58_24 [label="TestMethod()", span="23-23", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m58_25 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m58_21 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="RedisMonitoringApi.cs"];
m58_8 [label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_13 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_11 [label="var state = new Mock<IState>()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_12 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_14 [label="var context = new CreatingContext(createContext)", span="29-29", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_15 [label="Assert.False(context.Canceled)", span="31-31", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_16 [label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="RedisMonitoringApi.cs"];
m58_18 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RedisMonitoringApi.cs"];
m59_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="RedisStorage.cs"];
m59_1 [label="EnqueueAt = enqueueAt", span="13-13", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="RedisStorage.cs"];
m59_2 [label="Exit HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="RedisStorage.cs"];
m59_15 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="RedisStorage.cs"];
m59_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisStorage.cs"];
m59_16 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisStorage.cs"];
m59_20 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisStorage.cs"];
m59_26 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="RedisStorage.cs"];
m59_18 [label="x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', jobId, timestamp)", span="35-36", cluster="lambda expression", file="RedisStorage.cs"];
m59_17 [label="Entry lambda expression", span="35-36", cluster="lambda expression", file="RedisStorage.cs"];
m59_19 [label="Exit lambda expression", span="35-36", cluster="lambda expression", file="RedisStorage.cs"];
m59_27 [label="x.RemoveItemFromSortedSet(''hangfire:schedule'', jobId)", span="45-45", cluster="lambda expression", file="RedisStorage.cs"];
m59_28 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="RedisStorage.cs"];
m59_3 [label="Entry HangFire.States.ScheduledState.GetProperties()", span="20-20", cluster="HangFire.States.ScheduledState.GetProperties()", file="RedisStorage.cs"];
m59_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="22-26", cluster="HangFire.States.ScheduledState.GetProperties()", file="RedisStorage.cs"];
m59_5 [label="Exit HangFire.States.ScheduledState.GetProperties()", span="20-20", cluster="HangFire.States.ScheduledState.GetProperties()", file="RedisStorage.cs"];
m59_8 [label="Entry HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_9 [label="transaction == null", span="31-31", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_12 [label="transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', jobId, timestamp))", span="35-36", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_10 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_11 [label="var timestamp = JobHelper.ToTimestamp(EnqueueAt)", span="33-33", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_13 [label="Exit HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_29 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="RedisStorage.cs"];
m59_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisStorage.cs"];
m59_21 [label="Entry HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", span="41-41", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_22 [label="transaction == null", span="43-43", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_24 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:schedule'', jobId))", span="45-45", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_23 [label="throw new ArgumentNullException(''transaction'');", span="43-43", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_25 [label="Exit HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", span="41-41", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="RedisStorage.cs"];
m59_30 [label="HangFire.States.ScheduledState", span="", file="RedisStorage.cs"];
m59_31 [label=string, span="", file="RedisStorage.cs"];
m59_32 [label=timestamp, span="", file="RedisStorage.cs"];
m59_33 [label=string, span="", file="RedisStorage.cs"];
m60_0 [label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="RedisWriteOnlyTransaction.cs"];
m60_1 [label="JobId = jobId", span="8-8", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="RedisWriteOnlyTransaction.cs"];
m60_2 [label="Exit HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="RedisWriteOnlyTransaction.cs"];
m60_3 [label="HangFire.Web.Pages.JobDetailsPage", span="", file="RedisWriteOnlyTransaction.cs"];
m61_12 [label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="RetryAttribute.cs"];
m61_15 [label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="RetryAttribute.cs"];
m61_0 [label="Entry HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28", cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs"];
m61_1 [label="Attempts = DefaultRetryAttempts", span="30-30", cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs"];
m61_2 [label="Exit HangFire.Filters.RetryAttribute.RetryAttribute()", span="28-28", cluster="HangFire.Filters.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs"];
m61_16 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="RetryAttribute.cs"];
m61_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RetryAttribute.cs"];
m61_14 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="RetryAttribute.cs"];
m61_23 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="RetryAttribute.cs"];
m61_21 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="RetryAttribute.cs"];
m61_24 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="RetryAttribute.cs"];
m61_13 [label="Entry HangFire.Filters.RetryAttribute.SecondsToDelay(long)", span="72-72", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="RetryAttribute.cs"];
m61_18 [label="var random = new Random()", span="74-74", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="RetryAttribute.cs"];
m61_19 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="75-76", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="RetryAttribute.cs"];
m61_20 [label="Exit HangFire.Filters.RetryAttribute.SecondsToDelay(long)", span="72-72", cluster="HangFire.Filters.RetryAttribute.SecondsToDelay(long)", file="RetryAttribute.cs"];
m61_22 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="RetryAttribute.cs"];
m61_3 [label="Entry HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="46-46", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_4 [label="context.CandidateState.Name != FailedState.StateName", span="48-48", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="RetryAttribute.cs"];
m61_6 [label="var retryCount = context.GetJobParameter<int>(''RetryCount'')", span="54-54", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_9 [label="context.SetJobParameter(''RetryCount'', retryCount + 1)", span="60-60", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_10 [label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryCount + 1, Attempts)\r\n                }", span="64-67", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_5 [label="return;", span="51-51", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_7 [label="retryCount < Attempts", span="56-56", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_8 [label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="58-58", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_11 [label="Exit HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="46-46", cluster="HangFire.Filters.RetryAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RetryAttribute.cs"];
m61_25 [label="HangFire.Filters.RetryAttribute", span="", file="RetryAttribute.cs"];
m62_56 [label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="136-139", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_163 [label="Entry Metric.cstr", span="", cluster="Metric.cstr", file="ScheduledJobsPage.generated.cs"];
m62_133 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_134 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="240-243", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_135 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_26 [label="WriteLiteral(''                </td>\r\n                <td data-moment=\'''')", span="190-190", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_27 [label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt))", span="195-195", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_29 [label="Write(job.Value.ScheduledAt)", span="205-205", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_28 [label="WriteLiteral(''\''>'')", span="200-200", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_30 [label="WriteLiteral(''</td>\r\n                <td>\r\n                    '')", span="210-210", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_31 [label="Write(HtmlHelper.QueueLabel(job.Value.Method))", span="215-215", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m62_32 [label="WriteLiteral(''\r\n                    <span title=\'''')", span="220-220", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_61 [label="builder.Length != 0", span="152-152", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_23 [label="WriteLiteral(''\r\n                    </a>\r\n'')", span="168-168", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_119 [label="_existingConnection != null", span="219-219", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ScheduledJobsPage.generated.cs"];
m62_120 [label="return _existingConnection;", span="221-221", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ScheduledJobsPage.generated.cs"];
m62_121 [label="var connection = new SqlConnection(_connectionString)", span="224-224", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ScheduledJobsPage.generated.cs"];
m62_122 [label="connection.Open()", span="225-225", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m62_123 [label="return connection;", span="227-227", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ScheduledJobsPage.generated.cs"];
m62_124 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="ScheduledJobsPage.generated.cs"];
m62_145 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="ScheduledJobsPage.generated.cs"];
m62_127 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ScheduledJobsPage.generated.cs"];
m62_128 [label="connection != null && !ReferenceEquals(connection, _existingConnection)", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ScheduledJobsPage.generated.cs"];
m62_129 [label="connection.Dispose()", span="234-234", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ScheduledJobsPage.generated.cs"];
m62_130 [label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="ScheduledJobsPage.generated.cs"];
m62_142 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="ScheduledJobsPage.generated.cs"];
m62_155 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="ScheduledJobsPage.generated.cs"];
m62_76 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ScheduledJobsPage.generated.cs"];
m62_72 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ScheduledJobsPage.generated.cs"];
m62_42 [label="WriteLiteral(''    </table>\r\n'')", span="283-283", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_43 [label="Write(RenderPartial(new Paginator(pager)))", span="295-295", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_44 [label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_45 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs"];
m62_59 [label="parts.ContainsKey(alias)", span="145-145", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_33 [label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="225-225", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m62_22 [label="Write(HtmlHelper.JobId(job.Key))", span="163-163", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_49 [label="logger.Info(''Using the following options for SQL Server job storage:'')", span="126-126", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="ScheduledJobsPage.generated.cs"];
m62_75 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="ScheduledJobsPage.generated.cs"];
m62_47 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ScheduledJobsPage.generated.cs"];
m62_161 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledJobsPage.generated.cs"];
m62_73 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ScheduledJobsPage.generated.cs"];
m62_103 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ScheduledJobsPage.generated.cs"];
m62_38 [label="WriteLiteral(''                        <button class=\''btn btn-default btn-sm\'' data-ajax=\'''')", span="251-251", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_39 [label="Write(Request.LinkTo(''/schedule/enqueue/'' + job.Key))", span="256-256", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_40 [label="WriteLiteral(''\'' data-loading-text=\''Enqueueing...\''>\r\n                            <span class=\''gl'' +\r\n''yphicon glyphicon-play\''></span>\r\n                            Enqueue now\r\n      '' +\r\n''                  </button>\r\n'')", span="261-263", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_21 [label="WriteLiteral(''\''>\r\n                        '')", span="158-158", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_48 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs"];
m62_50 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="20-20", cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs"];
m62_51 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs"];
m62_126 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="ScheduledJobsPage.generated.cs"];
m62_83 [label="Entry Unk.Trim", span="", cluster="Unk.Trim", file="ScheduledJobsPage.generated.cs"];
m62_131 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="ScheduledJobsPage.generated.cs"];
m62_125 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="ScheduledJobsPage.generated.cs"];
m62_90 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ScheduledJobsPage.generated.cs"];
m62_91 [label="UseConnection(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="175-179", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ScheduledJobsPage.generated.cs"];
m62_92 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ScheduledJobsPage.generated.cs"];
m62_20 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="153-153", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_146 [label="var connectionStringSetting = ConfigurationManager.ConnectionStrings[connectionStringName]", span="259-259", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="ScheduledJobsPage.generated.cs"];
m62_147 [label="return connectionStringSetting != null;", span="261-261", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="ScheduledJobsPage.generated.cs"];
m62_148 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="ScheduledJobsPage.generated.cs"];
m62_98 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ScheduledJobsPage.generated.cs"];
m62_104 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="ScheduledJobsPage.generated.cs"];
m62_105 [label="UseTransaction(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            }, null)", span="199-203", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="ScheduledJobsPage.generated.cs"];
m62_106 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="ScheduledJobsPage.generated.cs"];
m62_136 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="ScheduledJobsPage.generated.cs"];
m62_0 [label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_1 [label="WriteLiteral(''\r\n'')", span="51-51", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_164 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="ScheduledJobsPage.generated.cs"];
m62_54 [label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_141 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_118 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="ScheduledJobsPage.generated.cs"];
m62_24 [label="!job.Value.InScheduledState", span="173-173", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_132 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ScheduledJobsPage.generated.cs"];
m62_34 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs"];
m62_35 [label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="110-110", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m62_36 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs"];
m62_37 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="ScheduledJobsPage.generated.cs"];
m62_2 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_4 [label="throw new ArgumentNullException(''nameOrConnectionString'');", span="59-59", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_5 [label="options == null", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_9 [label="_connectionString = nameOrConnectionString", span="66-66", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_11 [label="_connectionString = ConfigurationManager.ConnectionStrings[nameOrConnectionString].ConnectionString", span="70-70", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_13 [label="options.PrepareSchemaIfNecessary", span="79-79", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_14 [label="var connection = CreateAndOpenConnection()", span="81-81", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_15 [label="SqlServerObjectsInstaller.Install(connection)", span="83-83", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_17 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_18 [label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="143-143", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m62_19 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="ScheduledJobsPage.generated.cs"];
m62_25 [label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ScheduledJobsPage.generated.cs"];
m62_41 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="ScheduledJobsPage.generated.cs"];
m62_3 [label="nameOrConnectionString == null", span="59-59", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_6 [label="throw new ArgumentNullException(''options'');", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_8 [label="IsConnectionString(nameOrConnectionString)", span="64-64", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_10 [label="IsConnectionStringInConfiguration(nameOrConnectionString)", span="68-68", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_12 [label="throw new ArgumentException(\r\n                    string.Format(''Could not find connection string with name '{0}' in application config file'',\r\n                                  nameOrConnectionString));", span="74-76", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_16 [label="InitializeQueueProviders()", span="87-87", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_7 [label="_options = options", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="ScheduledJobsPage.generated.cs"];
m62_60 [label="builder.Append(parts[alias])", span="147-147", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_53 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs"];
m62_70 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="ScheduledJobsPage.generated.cs"];
m62_137 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="ScheduledJobsPage.generated.cs"];
m62_46 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs"];
m62_171 [label="Entry lambda expression", span="294-305", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_77 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_80 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_84 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_87 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_78 [label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="137-137", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_79 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_81 [label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="138-138", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_82 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_85 [label="x.Key", span="139-139", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_86 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_88 [label="x.Value", span="139-139", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_89 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_95 [label="action(connection)", span="177-177", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_94 [label="Entry lambda expression", span="175-179", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_96 [label="return true;", span="178-178", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_97 [label="Exit lambda expression", span="175-179", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_109 [label="action(connection)", span="201-201", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_108 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_110 [label="return true;", span="202-202", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_111 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_149 [label="Entry lambda expression", span="267-284", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_150 [label="var sqlStorage = page.Storage as SqlServerStorage", span="269-269", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_151 [label="sqlStorage == null", span="270-270", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_153 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="272-283", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_152 [label="return new Metric(''???'');", span="270-270", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_154 [label="Exit lambda expression", span="267-284", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_156 [label="Entry lambda expression", span="272-283", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_157 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="274-276", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_158 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="278-280", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_159 [label="return new Metric(value.ToString(''N0''));", span="282-282", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_160 [label="Exit lambda expression", span="272-283", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_165 [label="Entry lambda expression", span="289-306", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_166 [label="var sqlStorage = page.Storage as SqlServerStorage", span="291-291", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_167 [label="sqlStorage == null", span="292-292", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_169 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="294-305", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_168 [label="return new Metric(''???'');", span="292-292", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_170 [label="Exit lambda expression", span="289-306", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_172 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="296-298", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_173 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="300-302", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_174 [label="return new Metric(value.ToString(''N0''));", span="304-304", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_175 [label="Exit lambda expression", span="294-305", cluster="lambda expression", file="ScheduledJobsPage.generated.cs"];
m62_58 [label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="143-143", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_138 [label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="248-248", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ScheduledJobsPage.generated.cs"];
m62_139 [label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ScheduledJobsPage.generated.cs"];
m62_140 [label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="ScheduledJobsPage.generated.cs"];
m62_55 [label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="132-132", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_71 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ScheduledJobsPage.generated.cs"];
m62_57 [label="var builder = new StringBuilder()", span="141-141", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_52 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="16-16", cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs"];
m62_66 [label="return builder.Length != 0\r\n                    ? String.Format(''SQL Server: {0}'', builder)\r\n                    : canNotParseMessage;", span="163-165", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_68 [label="return canNotParseMessage;", span="169-169", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_64 [label="parts.ContainsKey(alias)", span="156-156", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_65 [label="builder.Append(parts[alias])", span="158-158", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_62 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs"];
m62_63 [label="HangFire.Web.Pages.ScheduledJobsPage", span="", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_67 [label=Exception, span="167-167", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_69 [label="Exit Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="ScheduledJobsPage.generated.cs"];
m62_162 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ScheduledJobsPage.generated.cs"];
m62_93 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="ScheduledJobsPage.generated.cs"];
m62_99 [label="SqlConnection connection = null", span="184-184", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="ScheduledJobsPage.generated.cs"];
m62_101 [label="return func(connection);", span="189-189", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="ScheduledJobsPage.generated.cs"];
m62_100 [label="connection = CreateAndOpenConnection()", span="188-188", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="ScheduledJobsPage.generated.cs"];
m62_102 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="ScheduledJobsPage.generated.cs"];
m62_143 [label="return nameOrConnectionString.Contains('';'');", span="254-254", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="ScheduledJobsPage.generated.cs"];
m62_144 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="ScheduledJobsPage.generated.cs"];
m62_107 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_112 [label="var transaction = CreateTransaction(isolationLevel ?? _options.TransactionIsolationLevel)", span="208-208", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_113 [label="var result = UseConnection(func)", span="210-210", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_114 [label="transaction.Complete()", span="211-211", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_115 [label="return result;", span="213-213", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_116 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="ScheduledJobsPage.generated.cs"];
m62_117 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="ScheduledJobsPage.generated.cs"];
m62_74 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ScheduledJobsPage.generated.cs"];
m62_176 [label="Hangfire.SqlServer.SqlServerStorage", span="", file="ScheduledJobsPage.generated.cs"];
m62_177 [label="System.Action<SqlConnection>", span="", file="ScheduledJobsPage.generated.cs"];
m62_178 [label="System.Action<SqlConnection>", span="", file="ScheduledJobsPage.generated.cs"];
m63_3 [label="Entry HangFire.States.EnqueuedState.GetProperties()", span="20-20", cluster="HangFire.States.EnqueuedState.GetProperties()", file="ScheduledState.cs"];
m63_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', Queue }\r\n                };", span="22-26", cluster="HangFire.States.EnqueuedState.GetProperties()", color=green, community=0, file="ScheduledState.cs"];
m63_5 [label="Exit HangFire.States.EnqueuedState.GetProperties()", span="20-20", cluster="HangFire.States.EnqueuedState.GetProperties()", file="ScheduledState.cs"];
m63_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs"];
m63_24 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="ScheduledState.cs"];
m63_0 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="ScheduledState.cs"];
m63_1 [label="Queue = queue", span="13-13", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="ScheduledState.cs"];
m63_2 [label="Exit HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="ScheduledState.cs"];
m63_14 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="ScheduledState.cs"];
m63_19 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="ScheduledState.cs"];
m63_16 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ScheduledState.cs"];
m63_17 [label="x.AddItemToSet(''hangfire:queues'', Queue)", span="33-33", cluster="lambda expression", file="ScheduledState.cs"];
m63_18 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ScheduledState.cs"];
m63_23 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ScheduledState.cs"];
m63_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs"];
m63_13 [label="Exit HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="ScheduledState.cs"];
m63_20 [label="HangFire.States.ScheduledState", span="", cluster="lambda expression", file="ScheduledState.cs"];
m63_21 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), jobId)", span="34-35", cluster="lambda expression", color=green, community=0, file="ScheduledState.cs"];
m63_22 [label="Exit lambda expression", span="34-35", cluster="lambda expression", file="ScheduledState.cs"];
m63_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledState.cs"];
m63_8 [label="Entry HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="ScheduledState.cs"];
m63_9 [label="transaction == null", span="31-31", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", color=green, community=0, file="ScheduledState.cs"];
m63_11 [label="transaction.QueueCommand(x => x.AddItemToSet(''hangfire:queues'', Queue))", span="33-33", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="ScheduledState.cs"];
m63_10 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", color=green, community=0, file="ScheduledState.cs"];
m63_12 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), jobId))", span="34-35", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="ScheduledState.cs", color=green, community=0];
m63_25 [label="HangFire.States.EnqueuedState", span="", file="ScheduledState.cs"];
m63_26 [label=string, span="", file="ScheduledState.cs"];
m64_5 [label="Entry Unk.MapRoute", span="", cluster="Unk.MapRoute", file="ScheduledStateFacts.cs"];
m64_4 [label="Entry Unk.IgnoreRoute", span="", cluster="Unk.IgnoreRoute", file="ScheduledStateFacts.cs"];
m64_0 [label="Entry HangFire.Sample.RouteConfig.RegisterRoutes(RouteCollection)", span="11-11", cluster="HangFire.Sample.RouteConfig.RegisterRoutes(RouteCollection)", file="ScheduledStateFacts.cs"];
m64_1 [label="routes.IgnoreRoute(''{resource}.axd/{*pathInfo}'')", span="13-13", cluster="HangFire.Sample.RouteConfig.RegisterRoutes(RouteCollection)", color=red, community=0, file="ScheduledStateFacts.cs"];
m64_2 [label="routes.MapRoute(\r\n                name: ''Default'',\r\n                url: ''{controller}/{action}/{id}'',\r\n                defaults: new { controller = ''Home'', action = ''Index'', id = UrlParameter.Optional }\r\n            )", span="15-19", cluster="HangFire.Sample.RouteConfig.RegisterRoutes(RouteCollection)", file="ScheduledStateFacts.cs"];
m64_3 [label="Exit HangFire.Sample.RouteConfig.RegisterRoutes(RouteCollection)", span="11-11", cluster="HangFire.Sample.RouteConfig.RegisterRoutes(RouteCollection)", file="ScheduledStateFacts.cs"];
m65_0 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_1 [label="id == null", span="27-27", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_3 [label="Id = id", span="29-29", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_4 [label="Job = job", span="30-30", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_5 [label="CreatedAt = createdAt", span="31-31", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_2 [label="throw new ArgumentNullException(''id'');", span="27-27", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_6 [label="Exit Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="ScheduleDto.cs"];
m65_8 [label="Hangfire.BackgroundJob", span="", file="ScheduleDto.cs"];
m66_4 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="SchedulePoller.cs"];
m66_5 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="SchedulePoller.cs"];
m66_44 [label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24", cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs"];
m66_30 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs"];
m66_34 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_35 [label="jobId == null", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_37 [label="state == null", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_41 [label="return stateMachine.TryToChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", span="110-110", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_36 [label="throw new ArgumentNullException(''jobId'');", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_38 [label="throw new ArgumentNullException(''state'');", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_39 [label="var connection = _storage.GetConnection()", span="107-107", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_40 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="109-109", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_42 [label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SchedulePoller.cs"];
m66_0 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="SchedulePoller.cs"];
m66_1 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="SchedulePoller.cs"];
m66_6 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_7 [label="storage == null", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_9 [label="stateMachineFactory == null", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_11 [label="process == null", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_13 [label="_storage = storage", span="74-74", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_14 [label="_stateMachineFactory = stateMachineFactory", span="75-75", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_15 [label="_process = process", span="76-76", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_8 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_12 [label="throw new ArgumentNullException(''process'');", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_16 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SchedulePoller.cs"];
m66_33 [label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="SchedulePoller.cs"];
m66_32 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="SchedulePoller.cs"];
m66_31 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_43 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs"];
m66_18 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_19 [label="job == null", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_21 [label="state == null", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_24 [label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_20 [label="throw new ArgumentNullException(''job'');", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_22 [label="throw new ArgumentNullException(''state'');", span="83-83", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_23 [label="var connection = _storage.GetConnection()", span="87-87", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_25 [label="_process.Run(context)", span="90-90", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_26 [label="return context.JobId;", span="92-92", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_27 [label=Exception, span="95-95", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="97-97", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_29 [label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SchedulePoller.cs"];
m66_2 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="SchedulePoller.cs"];
m66_3 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="SchedulePoller.cs"];
m66_45 [label="Hangfire.BackgroundJobClient", span="", file="SchedulePoller.cs"];
m68_52 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="123-123", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m68_53 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="125-128", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m68_54 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="123-123", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m68_58 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="137-137", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs"];
m68_59 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="139-142", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs"];
m68_60 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="137-137", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs"];
m68_66 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlServerConnection.cs"];
m68_15 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", span="43-43", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerConnection.cs"];
m68_65 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs"];
m68_20 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerConnection.cs"];
m68_76 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs"];
m68_35 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnection.cs"];
m68_12 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34", cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs"];
m68_8 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="29-29", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m68_9 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", file="SqlServerConnection.cs"];
m68_10 [label="return new SqlServerJobQueue(_storage, _options);", span="40-40", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", file="SqlServerConnection.cs"];
m68_61 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="145-145", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs"];
m68_63 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="154-160", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs"];
m68_62 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="147-152", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs"];
m68_64 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="145-145", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs"];
m68_39 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs"];
m68_40 [label="string sql = @''\r\nselect InvocationData, StateName \r\nfrom HangFire.Job\r\nwhere id = @id''", span="93-96", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="SqlServerConnection.cs"];
m68_41 [label="var job = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="98-99", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=1, file="SqlServerConnection.cs"];
m68_42 [label="job == null", span="101-101", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs"];
m68_44 [label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="103-103", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs"];
m68_45 [label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.StateName,\r\n            };", span="105-109", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="SqlServerConnection.cs"];
m68_43 [label="return null;", span="101-101", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs"];
m68_46 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs"];
m68_13 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", span="43-43", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerConnection.cs"];
m68_14 [label="return new SqlServerJobQueueMonitoringApi(_storage);", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerConnection.cs"];
m68_37 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnection.cs"];
m68_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs"];
m68_1 [label="_connection = connection", span="18-18", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs"];
m68_3 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs"];
m68_5 [label="_connection.Dispose()", span="26-26", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m68_6 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m68_2 [label="Storage = storage", span="19-19", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs"];
m68_4 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m68_7 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m68_34 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs"];
m68_73 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="177-177", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m68_74 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="179-181", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m68_75 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="177-177", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m68_19 [label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="28-28", cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="SqlServerConnection.cs"];
m68_49 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m68_50 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="114-120", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m68_51 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m68_11 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue()", file="SqlServerConnection.cs"];
m68_33 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m68_16 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m68_17 [label="Hangfire.SqlServer.SqlServerJobQueueProvider", span="", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m68_18 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="39-39", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m68_36 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerConnection.cs"];
m68_67 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="163-163", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m68_68 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="165-167", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m68_69 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="163-163", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m68_38 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m68_21 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_22 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="52-55", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs"];
m68_23 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="57-65", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_24 [label="parameters.Count > 0", span="67-67", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_25 [label="var parameterArray = new object[parameters.Count]", span="69-69", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_27 [label=parameters, span="71-71", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_28 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="73-78", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_31 [label="return jobId;", span="88-88", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_30 [label="_connection.Execute(insertParameterSql, parameterArray)", span="85-85", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_26 [label="int parameterIndex = 0", span="70-70", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_29 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="81-83", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_32 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m68_70 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="170-170", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m68_71 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="172-174", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m68_72 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="170-170", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m68_55 [label="Entry HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs"];
m68_56 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="133-134", cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs"];
m68_57 [label="Exit HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs"];
m68_47 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs"];
m68_48 [label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2", cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="SqlServerConnection.cs"];
m68_77 [label="HangFire.SqlServer.SqlServerConnection", span="", file="SqlServerConnection.cs"];
m69_24 [label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.States.IStateMachine)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.States.IStateMachine)", file="SqlServerFetcher.cs"];
m69_53 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="SqlServerFetcher.cs"];
m69_54 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="SqlServerFetcher.cs"];
m69_49 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerFetcher.cs"];
m69_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="SqlServerFetcher.cs"];
m69_55 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerFetcher.cs"];
m69_9 [label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_10 [label="job == null", span="45-45", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_12 [label="parameters == null", span="46-46", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_14 [label="state == null", span="47-47", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_17 [label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                createdAt,\r\n                TimeSpan.FromHours(1))", span="50-54", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_18 [label="var context = new StateContext(jobId, job, createdAt, this)", span="56-56", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_19 [label="_stateChangeProcess.ChangeState(context, state, null)", span="57-57", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_11 [label="throw new ArgumentNullException(''job'');", span="45-45", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_13 [label="throw new ArgumentNullException(''parameters'');", span="46-46", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_15 [label="throw new ArgumentNullException(''state'');", span="47-47", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_16 [label="var createdAt = DateTime.UtcNow", span="49-49", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_20 [label="return jobId;", span="59-59", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_21 [label="Exit Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SqlServerFetcher.cs"];
m69_0 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_1 [label="connection == null", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_3 [label="stateChangeProcess == null", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_5 [label="_connection = connection", span="36-36", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_6 [label="_stateChangeProcess = stateChangeProcess", span="37-37", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_2 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_4 [label="throw new ArgumentNullException(''stateChangeProcess'');", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_7 [label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="SqlServerFetcher.cs"];
m69_22 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SqlServerFetcher.cs"];
m69_51 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="SqlServerFetcher.cs"];
m69_23 [label="Entry Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30", cluster="Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerFetcher.cs"];
m69_50 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="25-25", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="SqlServerFetcher.cs"];
m69_26 [label="Entry Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_27 [label="jobId == null", span="65-65", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", color=red, community=0, file="SqlServerFetcher.cs"];
m69_29 [label="toState == null", span="66-66", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_31 [label="fromStates != null && fromStates.Length == 0", span="67-67", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_33 [label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="78-78", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_34 [label="var jobData = _connection.GetJobData(jobId)", span="80-80", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_37 [label="fromStates != null && !fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="89-89", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_42 [label="!toState.IgnoreJobLoadException", span="107-107", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_43 [label="toState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state of a job to '{0}': target method was not found.'',\r\n                                toState.Name)\r\n                        }", span="109-114", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_45 [label="var context = new StateContext(jobId, jobData.Job, jobData.CreatedAt, this)", span="120-120", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_46 [label="var stateChanged = _stateChangeProcess.ChangeState(context, toState, jobData.State)", span="121-121", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_28 [label="throw new ArgumentNullException(''jobId'');", span="65-65", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", color=red, community=0, file="SqlServerFetcher.cs"];
m69_30 [label="throw new ArgumentNullException(''toState'');", span="66-66", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_32 [label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="69-69", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_35 [label="jobData == null", span="82-82", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_40 [label="jobData.EnsureLoaded()", span="98-98", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_36 [label="return false;", span="86-86", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_38 [label="return false;", span="91-91", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_39 [label="bool loadSucceeded = true", span="94-94", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_47 [label="return loadSucceeded && stateChanged;", span="123-123", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_41 [label=JobLoadException, span="100-100", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_44 [label="loadSucceeded = false", span="116-116", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_48 [label="Exit Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="SqlServerFetcher.cs"];
m69_25 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="SqlServerFetcher.cs"];
m69_56 [label="Hangfire.States.StateMachine", span="", file="SqlServerFetcher.cs"];
m70_26 [label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_47 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", span="92-92", cluster="HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_48 [label="return _runners.Remove(item);", span="94-94", cluster="HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_49 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", span="92-92", cluster="HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_6 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="SqlServerMonitoringApi.cs"];
m70_50 [label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Remove(T)", file="SqlServerMonitoringApi.cs"];
m70_43 [label="Entry HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87", cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="SqlServerMonitoringApi.cs"];
m70_44 [label="_runners.CopyTo(array, arrayIndex)", span="89-89", cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="SqlServerMonitoringApi.cs"];
m70_45 [label="Exit HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87", cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="SqlServerMonitoringApi.cs"];
m70_12 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44", cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="SqlServerMonitoringApi.cs"];
m70_13 [label=_runners, span="46-46", cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="SqlServerMonitoringApi.cs"];
m70_14 [label="runner.Stop()", span="48-48", cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="SqlServerMonitoringApi.cs"];
m70_15 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44", cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="SqlServerMonitoringApi.cs"];
m70_27 [label="Entry HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67", cluster="HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_28 [label="return ((IEnumerable) _runners).GetEnumerator();", span="69-69", cluster="HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_29 [label="Exit HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67", cluster="HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_30 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_11 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="SqlServerMonitoringApi.cs"];
m70_42 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="SqlServerMonitoringApi.cs"];
m70_39 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", span="82-82", cluster="HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_40 [label="return _runners.Contains(item);", span="84-84", cluster="HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_41 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", span="82-82", cluster="HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_16 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="SqlServerMonitoringApi.cs"];
m70_7 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="SqlServerMonitoringApi.cs"];
m70_8 [label=_runners, span="38-38", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="SqlServerMonitoringApi.cs"];
m70_9 [label="runner.Start()", span="40-40", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="SqlServerMonitoringApi.cs"];
m70_10 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="SqlServerMonitoringApi.cs"];
m70_31 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", span="72-72", cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_32 [label="_runners.Add(item)", span="74-74", cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_33 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", span="72-72", cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="SqlServerMonitoringApi.cs"];
m70_35 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77", cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="SqlServerMonitoringApi.cs"];
m70_36 [label="_runners.Clear()", span="79-79", cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="SqlServerMonitoringApi.cs"];
m70_37 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77", cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="SqlServerMonitoringApi.cs"];
m70_0 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerMonitoringApi.cs"];
m70_1 [label="runners == null", span="28-28", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerMonitoringApi.cs"];
m70_3 [label="_runners = new List<IServerComponentRunner>(runners)", span="30-30", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerMonitoringApi.cs"];
m70_2 [label="throw new ArgumentNullException(''runners'');", span="28-28", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerMonitoringApi.cs"];
m70_4 [label="Exit HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerMonitoringApi.cs"];
m70_34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs"];
m70_17 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerMonitoringApi.cs"];
m70_18 [label="Stop()", span="54-54", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerMonitoringApi.cs"];
m70_19 [label=_runners, span="56-56", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerMonitoringApi.cs"];
m70_20 [label="runner.Dispose()", span="58-58", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerMonitoringApi.cs"];
m70_21 [label="Exit HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerMonitoringApi.cs"];
m70_22 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="SqlServerMonitoringApi.cs"];
m70_23 [label="Entry HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", span="62-62", cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_24 [label="return _runners.GetEnumerator();", span="64-64", cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_25 [label="Exit HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", span="62-62", cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="SqlServerMonitoringApi.cs"];
m70_46 [label="Entry System.Collections.Generic.List<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.List<T>.CopyTo(T[], int)", file="SqlServerMonitoringApi.cs"];
m70_38 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="SqlServerMonitoringApi.cs"];
m70_51 [label="HangFire.Server.ServerComponentRunnerCollection", span="", file="SqlServerMonitoringApi.cs"];
m71_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="SqlServerStorage.cs"];
m71_1 [label="EnqueueAt = enqueueAt", span="13-13", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="SqlServerStorage.cs"];
m71_2 [label="Exit HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="SqlServerStorage.cs"];
m71_15 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m71_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerStorage.cs"];
m71_16 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SqlServerStorage.cs"];
m71_20 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="SqlServerStorage.cs"];
m71_26 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="SqlServerStorage.cs"];
m71_18 [label="x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', jobId, timestamp)", span="35-36", cluster="lambda expression", file="SqlServerStorage.cs"];
m71_17 [label="Entry lambda expression", span="35-36", cluster="lambda expression", file="SqlServerStorage.cs"];
m71_19 [label="Exit lambda expression", span="35-36", cluster="lambda expression", file="SqlServerStorage.cs"];
m71_27 [label="x.RemoveItemFromSortedSet(''hangfire:schedule'', jobId)", span="45-45", cluster="lambda expression", file="SqlServerStorage.cs"];
m71_28 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="SqlServerStorage.cs"];
m71_3 [label="Entry HangFire.States.ScheduledState.GetProperties()", span="20-20", cluster="HangFire.States.ScheduledState.GetProperties()", file="SqlServerStorage.cs"];
m71_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="22-26", cluster="HangFire.States.ScheduledState.GetProperties()", file="SqlServerStorage.cs"];
m71_5 [label="Exit HangFire.States.ScheduledState.GetProperties()", span="20-20", cluster="HangFire.States.ScheduledState.GetProperties()", file="SqlServerStorage.cs"];
m71_8 [label="Entry HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_9 [label="transaction == null", span="31-31", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_12 [label="transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', jobId, timestamp))", span="35-36", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_10 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_11 [label="var timestamp = JobHelper.ToTimestamp(EnqueueAt)", span="33-33", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_13 [label="Exit HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_29 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="SqlServerStorage.cs"];
m71_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m71_21 [label="Entry HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", span="41-41", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_22 [label="transaction == null", span="43-43", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_24 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:schedule'', jobId))", span="45-45", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_23 [label="throw new ArgumentNullException(''transaction'');", span="43-43", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_25 [label="Exit HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", span="41-41", cluster="HangFire.States.ScheduledState.Descriptor.Unapply(IRedisTransaction, string)", file="SqlServerStorage.cs"];
m71_30 [label="HangFire.States.ScheduledState", span="", file="SqlServerStorage.cs"];
m71_31 [label=string, span="", file="SqlServerStorage.cs"];
m71_32 [label=timestamp, span="", file="SqlServerStorage.cs"];
m71_33 [label=string, span="", file="SqlServerStorage.cs"];
m72_84 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="128-128", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_85 [label="AddToSet(key, value, 0.0)", span="130-130", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_86 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="128-128", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_100 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="154-154", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_101 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="156-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_102 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="154-154", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_41 [label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs"];
m72_87 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="133-133", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m72_88 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="135-140", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m72_89 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="142-144", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m72_90 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="133-133", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m72_66 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="107-107", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_67 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="109-111", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_68 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="107-107", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_147 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs"];
m72_36 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs"];
m72_37 [label="var stateData = state.GetData(method)", span="64-64", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_38 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state.StateName, data = JobHelper.ToJson(stateData), id = jobId }))", span="65-67", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_39 [label="AppendJobHistory(jobId, state, method)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_40 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs"];
m72_112 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="168-168", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m72_113 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="170-173", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m72_114 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="175-177", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m72_115 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="168-168", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m72_24 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="231-231", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m72_145 [label="_commandQueue.Enqueue(action)", span="233-233", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m72_146 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="231-231", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m72_18 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m72_19 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs"];
m72_16 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m72_78 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="121-121", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_79 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="123-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_80 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="121-121", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_72 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_73 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="116-118", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_74 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_20 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs"];
m72_28 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_94 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="147-147", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_95 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="149-151", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_96 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="147-147", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_21 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_22 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="50-52", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_23 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_106 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="161-161", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_107 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="163-165", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_108 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="161-161", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_8 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="29-29", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_9 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="31-33", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_10 [label="_connection.EnlistTransaction(Transaction.Current)", span="35-35", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_13 [label="transaction.Complete()", span="42-42", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_11 [label=_commandQueue, span="37-37", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_12 [label="command(_connection)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_14 [label="return true;", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_15 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="29-29", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m72_17 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m72_139 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="224-224", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_140 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="226-228", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_141 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="224-224", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m72_142 [label="Entry lambda expression", span="226-228", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_26 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="50-52", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_25 [label="Entry lambda expression", span="50-52", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_27 [label="Exit lambda expression", span="50-52", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_34 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="57-59", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_33 [label="Entry lambda expression", span="57-59", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_35 [label="Exit lambda expression", span="57-59", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_44 [label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state.StateName, data = JobHelper.ToJson(stateData), id = jobId })", span="65-67", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_43 [label="Entry lambda expression", span="65-67", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_45 [label="Exit lambda expression", span="65-67", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_51 [label="x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, StateName, Reason, CreatedAt, Data) ''\r\n                + @''values (@jobId, @stateName, @reason, @createdAt, @data)'',\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    stateName = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(stateData)\r\n                })", span="76-86", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_50 [label="Entry lambda expression", span="76-86", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_52 [label="Exit lambda expression", span="76-86", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_58 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="95-97", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_57 [label="Entry lambda expression", span="95-97", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_59 [label="Exit lambda expression", span="95-97", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_64 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="102-104", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_63 [label="Entry lambda expression", span="102-104", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_65 [label="Exit lambda expression", span="102-104", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_70 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="109-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_69 [label="Entry lambda expression", span="109-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_71 [label="Exit lambda expression", span="109-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_76 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="116-118", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_75 [label="Entry lambda expression", span="116-118", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_77 [label="Exit lambda expression", span="116-118", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_82 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="123-125", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_81 [label="Entry lambda expression", span="123-125", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_83 [label="Exit lambda expression", span="123-125", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_92 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="142-144", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_91 [label="Entry lambda expression", span="142-144", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_93 [label="Exit lambda expression", span="142-144", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_98 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="149-151", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_97 [label="Entry lambda expression", span="149-151", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_99 [label="Exit lambda expression", span="149-151", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_104 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="156-158", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_103 [label="Entry lambda expression", span="156-158", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_105 [label="Exit lambda expression", span="156-158", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_110 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="163-165", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_109 [label="Entry lambda expression", span="163-165", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_111 [label="Exit lambda expression", span="163-165", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_117 [label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="175-177", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_116 [label="Entry lambda expression", span="175-177", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_118 [label="Exit lambda expression", span="175-177", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_125 [label="var affectedRows = x.Execute(updateSql, new { key })", span="193-193", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_127 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="197-197", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_124 [label="Entry lambda expression", span="191-199", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_126 [label="affectedRows == 0", span="195-195", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_128 [label="Exit lambda expression", span="191-199", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_135 [label="var affectedRows = x.Execute(updateSql, new { key })", span="215-215", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_137 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="219-219", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_134 [label="Entry lambda expression", span="213-221", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_136 [label="affectedRows == 0", span="217-217", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_138 [label="Exit lambda expression", span="213-221", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_143 [label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="226-228", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_144 [label="Exit lambda expression", span="226-228", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m72_129 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="202-202", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_130 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="204-209", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_132 [label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="213-221", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_131 [label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="210-211", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_133 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="202-202", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_0 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="18-18", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m72_1 [label="connection == null", span="20-20", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m72_3 [label="_connection = connection", span="22-22", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m72_2 [label="throw new ArgumentNullException(''connection'');", span="20-20", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m72_4 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="18-18", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m72_119 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="180-180", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_120 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="182-187", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_122 [label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="191-199", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_121 [label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="188-189", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_123 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="180-180", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_46 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs"];
m72_29 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs"];
m72_53 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="89-89", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_54 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="91-93", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_55 [label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="95-97", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_56 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="89-89", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_60 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="100-100", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_61 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="102-104", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_62 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="100-100", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_30 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_31 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="57-59", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_32 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m72_42 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="72-72", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs"];
m72_47 [label="var stateData = state.GetData(method)", span="74-74", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_48 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, StateName, Reason, CreatedAt, Data) ''\r\n                + @''values (@jobId, @stateName, @reason, @createdAt, @data)'',\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    stateName = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(stateData)\r\n                }))", span="76-86", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m72_49 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="72-72", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs"];
m72_6 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="25-25", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m72_7 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="25-25", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m72_148 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_149 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_150 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_151 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_152 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_153 [label="HangFire.Common.States.JobState", span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_154 [label=stateData, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_155 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_156 [label="HangFire.Common.States.JobState", span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_157 [label=stateData, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_158 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_159 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_160 [label=enqueueJobSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_161 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_162 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_163 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_164 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_165 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_166 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_167 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_168 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_169 [label=double, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_170 [label=addSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_171 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_172 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_173 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_174 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_175 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_176 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_177 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_178 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_179 [label=trimSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_180 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_181 [label=updateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_182 [label=insertSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_183 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_184 [label=updateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_185 [label=insertSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_186 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m72_187 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m74_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="StateApplyingContextFacts.cs"];
m74_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StateApplyingContextFacts.cs"];
m74_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="StateApplyingContextFacts.cs"];
m74_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="StateApplyingContextFacts.cs"];
m74_17 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="StateApplyingContextFacts.cs"];
m74_327 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="StateApplyingContextFacts.cs"];
m74_185 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateApplyingContextFacts.cs"];
m74_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_192 [label="process.Run(_context.Object)", span="195-195", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_191 [label="var process = CreateProcess()", span="192-192", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_194 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="StateApplyingContextFacts.cs"];
m74_13 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="StateApplyingContextFacts.cs"];
m74_164 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="StateApplyingContextFacts.cs"];
m74_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_168 [label="var process = CreateProcess()", span="169-169", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_169 [label="process.Run(_context.Object)", span="172-172", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_172 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="StateApplyingContextFacts.cs"];
m74_298 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_305 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_308 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="StateApplyingContextFacts.cs"];
m74_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="StateApplyingContextFacts.cs"];
m74_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="StateApplyingContextFacts.cs"];
m74_97 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateApplyingContextFacts.cs"];
m74_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_102 [label="var process = CreateProcess()", span="111-111", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_104 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="StateApplyingContextFacts.cs"];
m74_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="StateApplyingContextFacts.cs"];
m74_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateApplyingContextFacts.cs"];
m74_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="StateApplyingContextFacts.cs"];
m74_23 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="StateApplyingContextFacts.cs"];
m74_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="StateApplyingContextFacts.cs"];
m74_329 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="StateApplyingContextFacts.cs"];
m74_140 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateApplyingContextFacts.cs"];
m74_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_149 [label="var process = CreateProcess()", span="151-151", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_150 [label="process.Run(_context.Object)", span="154-154", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_151 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="StateApplyingContextFacts.cs"];
m74_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="StateApplyingContextFacts.cs"];
m74_274 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_280 [label="var process = CreateProcess()", span="278-278", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_282 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="StateApplyingContextFacts.cs"];
m74_53 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="StateApplyingContextFacts.cs"];
m74_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_57 [label="var process = CreateProcess()", span="67-67", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_60 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="StateApplyingContextFacts.cs"];
m74_228 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="StateApplyingContextFacts.cs"];
m74_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="StateApplyingContextFacts.cs"];
m74_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_233 [label="var process = CreateProcess()", span="232-232", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="StateApplyingContextFacts.cs"];
m74_236 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="StateApplyingContextFacts.cs"];
m74_251 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_258 [label="var process = CreateProcess()", span="256-256", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_261 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="StateApplyingContextFacts.cs"];
m74_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StateApplyingContextFacts.cs"];
m74_207 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="StateApplyingContextFacts.cs"];
m74_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_211 [label="var process = CreateProcess()", span="211-211", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_215 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="StateApplyingContextFacts.cs"];
m74_0 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="StateApplyingContextFacts.cs"];
m74_1 [label="var connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_2 [label="var job = Job.FromExpression(() => TestMethod())", span="20-20", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_3 [label="var state = new Mock<IState>()", span="21-21", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_5 [label="_filters = new List<object>()", span="24-24", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_7 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="StateApplyingContextFacts.cs"];
m74_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="StateApplyingContextFacts.cs"];
m74_29 [label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="StateApplyingContextFacts.cs"];
m74_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateApplyingContextFacts.cs"];
m74_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="StateApplyingContextFacts.cs"];
m74_73 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateApplyingContextFacts.cs"];
m74_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_81 [label="var process = CreateProcess()", span="91-91", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_83 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="StateApplyingContextFacts.cs"];
m74_330 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="StateApplyingContextFacts.cs"];
m74_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_15 [label="TestMethod()", span="20-20", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_205 [label="context.Canceled", span="198-198", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="StateApplyingContextFacts.cs"];
m74_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateApplyingContextFacts.cs"];
m74_30 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="StateApplyingContextFacts.cs"];
m74_31 [label="var process = CreateProcess()", span="43-43", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_32 [label="process.Run(_context.Object)", span="45-45", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_34 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="StateApplyingContextFacts.cs"];
m74_41 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="StateApplyingContextFacts.cs"];
m74_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_43 [label="var process = CreateProcess()", span="54-54", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_45 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="StateApplyingContextFacts.cs"];
m74_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="StateApplyingContextFacts.cs"];
m74_18 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="StateApplyingContextFacts.cs"];
m74_19 [label="var process = CreateProcess()", span="32-32", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_22 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="StateApplyingContextFacts.cs"];
m74_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="StateApplyingContextFacts.cs"];
m74_119 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="StateApplyingContextFacts.cs"];
m74_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_125 [label="var process = CreateProcess()", span="128-128", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_126 [label="process.Run(_context.Object)", span="131-131", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=green, community=0, file="StateApplyingContextFacts.cs"];
m74_127 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="StateApplyingContextFacts.cs"];
m74_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="StateApplyingContextFacts.cs"];
m74_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="StateApplyingContextFacts.cs"];
m74_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateApplyingContextFacts.cs"];
m74_9 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateApplyingContextFacts.cs"];
m74_331 [label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span="", file="StateApplyingContextFacts.cs"];
m74_332 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_333 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_334 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_335 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_336 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_337 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_339 [label=exception, span="", file="StateApplyingContextFacts.cs"];
m74_338 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_340 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_343 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_344 [label=process, span="", file="StateApplyingContextFacts.cs"];
m74_341 [label=exception, span="", file="StateApplyingContextFacts.cs"];
m74_342 [label=exception, span="", file="StateApplyingContextFacts.cs"];
m75_18 [label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="20-20", cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="StateChangingContext.cs"];
m75_15 [label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs"];
m75_16 [label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="64-65", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs"];
m75_17 [label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs"];
m75_10 [label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs"];
m75_11 [label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="59-59", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs"];
m75_12 [label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs"];
m75_13 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateChangingContext.cs"];
m75_19 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateChangingContext.cs"];
m75_0 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_1 [label="candidateState == null", span="32-32", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_3 [label="connection == null", span="33-33", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_5 [label="CandidateState = candidateState", span="35-35", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_6 [label="CurrentState = currentState", span="36-36", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_7 [label="Connection = connection", span="37-37", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_2 [label="throw new ArgumentNullException(''candidateState'');", span="32-32", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_4 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_8 [label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m75_14 [label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="19-19", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="StateChangingContext.cs"];
m75_20 [label="HangFire.Common.States.StateChangingContext", span="", file="StateChangingContext.cs"];
m77_2 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateContext.cs"];
m77_3 [label="JobId = jobId", span="29-29", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateContext.cs"];
m77_4 [label="JobMethod = jobMethod", span="30-30", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", color=red, community=0, file="StateContext.cs"];
m77_5 [label="Exit HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateContext.cs"];
m77_0 [label="Entry HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", span="22-22", cluster="HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", file="StateContext.cs"];
m77_1 [label="Exit HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", span="22-22", cluster="HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", file="StateContext.cs"];
m77_6 [label="HangFire.Common.States.StateContext", span="", file="StateContext.cs"];
m78_0 [label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateContextFacts.cs"];
m78_1 [label="Canceled = canceled", span="14-14", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", color=green, community=0, file="StateContextFacts.cs"];
m78_2 [label="Exception = exception", span="15-15", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", color=green, community=0, file="StateContextFacts.cs"];
m78_3 [label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateContextFacts.cs"];
m78_4 [label="HangFire.Filters.CreatedContext", span="", file="StateContextFacts.cs"];
m79_7 [label="Entry HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs"];
m79_8 [label="var stateMock = new Mock<State>()", span="20-20", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=green, community=0, file="StateFacts.cs"];
m79_9 [label="stateMock.CallBase = true", span="21-21", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=green, community=0, file="StateFacts.cs"];
m79_10 [label="Assert.Empty(stateMock.Object.Serialize())", span="23-23", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=green, community=0, file="StateFacts.cs"];
m79_11 [label="Exit HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs"];
m79_5 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="StateFacts.cs"];
m79_6 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateFacts.cs"];
m79_13 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="StateFacts.cs"];
m79_12 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize", file="StateFacts.cs"];
m79_0 [label="Entry HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs"];
m79_1 [label="var stateMock = new Mock<State>()", span="11-11", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=green, community=0, file="StateFacts.cs"];
m79_2 [label="stateMock.CallBase = true", span="12-12", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=green, community=0, file="StateFacts.cs"];
m79_3 [label="Assert.False(stateMock.Object.ExpireJobOnApply)", span="14-14", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=green, community=0, file="StateFacts.cs"];
m79_4 [label="Exit HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs"];
m80_15 [label="Entry HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", span="24-24", cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs"];
m80_16 [label="stateName == null || !_handlers.ContainsKey(stateName)", span="26-26", cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_17 [label="return Enumerable.Empty<StateHandler>();", span="28-28", cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_18 [label="return _handlers[stateName].ToArray();", span="31-31", cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_19 [label="Exit HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", span="24-24", cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs"];
m80_20 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateHandlerCollection.cs"];
m80_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StateHandlerCollection.cs"];
m80_10 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateHandlerCollection.cs"];
m80_22 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="StateHandlerCollection.cs"];
m80_14 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StateHandlerCollection.cs"];
m80_0 [label="Entry HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", span="11-11", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", file="StateHandlerCollection.cs"];
m80_1 [label="handler == null", span="13-13", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_2 [label="throw new ArgumentNullException(''handler'');", span="13-13", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_3 [label="handler.StateName == null", span="14-14", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_4 [label="throw new ArgumentException(''The StateName property of the given state handler must be non null.'', ''handler'');", span="14-14", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_5 [label="!_handlers.ContainsKey(handler.StateName)", span="16-16", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_6 [label="_handlers.Add(handler.StateName, new List<StateHandler>())", span="18-18", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_7 [label="_handlers[handler.StateName].Add(handler)", span="21-21", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs"];
m80_8 [label="Exit HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", span="11-11", cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", file="StateHandlerCollection.cs"];
m80_21 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateHandlerCollection.cs"];
m80_11 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="StateHandlerCollection.cs"];
m80_13 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StateHandlerCollection.cs"];
m80_23 [label="HangFire.Common.States.StateHandlerCollection", span="", file="StateHandlerCollection.cs"];
m81_0 [label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateHandlerCollectionFacts.cs"];
m81_1 [label="Canceled = canceled", span="14-14", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", color=green, community=0, file="StateHandlerCollectionFacts.cs"];
m81_2 [label="Exception = exception", span="15-15", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", color=green, community=0, file="StateHandlerCollectionFacts.cs"];
m81_3 [label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateHandlerCollectionFacts.cs"];
m81_4 [label="HangFire.Filters.CreatedContext", span="", file="StateHandlerCollectionFacts.cs"];
m82_117 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="183-192", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m82_366 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="StateMachine.cs"];
m82_112 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="193-193", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", color=red, community=0];
m82_351 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StateMachine.cs"];
m82_46 [label="Entry lambda expression", span="84-89", cluster="lambda expression", file="StateMachine.cs"];
m82_82 [label=servers, span="128-128", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m82_17 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="53-53", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateMachine.cs", color=green, community=0];
m82_107 [label="Exit lambda expression", span="165-178", cluster="lambda expression", color=red, community=0, file="StateMachine.cs"];
m82_109 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="170-178", cluster="lambda expression", color=green, community=0, file="StateMachine.cs"];
m82_111 [label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", color=red, community=0, file="StateMachine.cs"];
m82_113 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", color=red, community=0, file="StateMachine.cs"];
m82_108 [label="Entry lambda expression", span="170-178", cluster="lambda expression", color=red, community=0, file="StateMachine.cs"];
m82_110 [label="Exit lambda expression", span="170-178", cluster="lambda expression", color=red, community=0, file="StateMachine.cs"];
m82_114 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="183-192", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="StateMachine.cs", color=green, community=0];
m82_45 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs"];
m82_354 [label="return DeserializeJobs(jobs, selector);", span="511-511", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_352 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="497-504", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_353 [label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="506-509", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_355 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="490-490", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_89 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", span="28-28", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateChangingContext)", file="StateMachine.cs"];
m82_367 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="StateMachine.cs"];
m82_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", color=red, community=0];
m82_28 [label="throw new ArgumentNullException(''method'');", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", color=red, community=0];
m82_29 [label="parameters == null", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs"];
m82_140 [label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="StateMachine.cs"];
m82_100 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateMachine.cs"];
m82_356 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="514-514", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_361 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="527-527", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_358 [label=jobs, span="520-520", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_360 [label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="523-525", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_362 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="529-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_357 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="518-518", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_359 [label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="522-522", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_363 [label="return new JobList<TDto>(result);", span="533-533", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_364 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="514-514", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateMachine.cs"];
m82_14 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="461-461", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateMachine.cs"];
m82_339 [label="var sqlQuery = _jobListLimit.HasValue\r\n                ? @''select count(j.Id) from (select top (@limit) Id from HangFire.Job where StateName = @state) as j''\r\n                : @''select count(Id) from HangFire.Job where StateName = @state''", span="463-465", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateMachine.cs"];
m82_340 [label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit })\r\n                 .Single()", span="467-470", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateMachine.cs"];
m82_341 [label="return count;", span="472-472", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateMachine.cs"];
m82_342 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="461-461", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateMachine.cs"];
m82_227 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="StateMachine.cs"];
m82_228 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="302-303", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="StateMachine.cs"];
m82_229 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="StateMachine.cs"];
m82_15 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateMachine.cs"];
m82_379 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="StateMachine.cs"];
m82_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs"];
m82_327 [label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="431-431", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="StateMachine.cs"];
m82_328 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="429-429", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="StateMachine.cs"];
m82_239 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="StateMachine.cs"];
m82_186 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="StateMachine.cs"];
m82_187 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="248-249", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="StateMachine.cs"];
m82_188 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="StateMachine.cs"];
m82_334 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="StateMachine.cs"];
m82_233 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateMachine.cs"];
m82_234 [label="string sql = @''\r\nselect count(Id) from HangFire.Job where StateName = N'Enqueued';\r\nselect count(Id) from HangFire.Job where StateName = N'Failed';\r\nselect count(Id) from HangFire.Job where StateName = N'Processing';\r\nselect count(Id) from HangFire.Job where StateName = N'Scheduled';\r\nselect count(Id) from HangFire.Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="308-325", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateMachine.cs"];
m82_235 [label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    stats.Enqueued = multi.Read<int>().Single();\r\n                    stats.Failed = multi.Read<int>().Single();\r\n                    stats.Processing = multi.Read<int>().Single();\r\n                    stats.Scheduled = multi.Read<int>().Single();\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="327-345", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateMachine.cs"];
m82_236 [label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="347-349", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateMachine.cs"];
m82_237 [label="return statistics;", span="351-351", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateMachine.cs"];
m82_238 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateMachine.cs"];
m82_174 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="StateMachine.cs"];
m82_169 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateMachine.cs"];
m82_170 [label="var queueApi = GetQueueApi(queue)", span="234-234", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateMachine.cs"];
m82_172 [label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="237-237", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateMachine.cs"];
m82_171 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="235-235", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateMachine.cs"];
m82_173 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateMachine.cs"];
m82_185 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_268 [label="return GetTimelineStats(connection, keyMaps);", span="368-368", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_267 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="366-366", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_260 [label="var endDate = DateTime.UtcNow", span="358-358", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_261 [label="var dates = new List<DateTime>()", span="359-359", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_263 [label="i < 24", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_264 [label="dates.Add(endDate)", span="362-362", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_265 [label="endDate = endDate.AddHours(-1)", span="363-363", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_262 [label="var i = 0", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_266 [label="i++", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_269 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs"];
m82_91 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="StateMachine.cs"];
m82_92 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="147-160", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="StateMachine.cs", color=green, community=0];
m82_93 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="StateMachine.cs"];
m82_94 [label="Entry lambda expression", span="147-160", cluster="lambda expression", file="StateMachine.cs"];
m82_96 [label="Exit lambda expression", span="147-160", cluster="lambda expression", color=red, community=0, file="StateMachine.cs"];
m82_95 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="147-160", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m82_97 [label="Entry lambda expression", span="152-160", cluster="lambda expression", file="StateMachine.cs"];
m82_98 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="152-160", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m82_48 [label="Exit lambda expression", span="84-89", cluster="lambda expression", file="StateMachine.cs"];
m82_312 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="StateMachine.cs"];
m82_51 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StateMachine.cs"];
m82_86 [label="Exit lambda expression", span="120-142", cluster="lambda expression", color=red, community=0, file="StateMachine.cs"];
m82_87 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", color=red, community=0, file="StateMachine.cs"];
m82_88 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="156-156", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs"];
m82_81 [label="var result = new List<ServerDto>()", span="126-126", cluster="lambda expression", file="StateMachine.cs"];
m82_158 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="StateMachine.cs"];
m82_380 [label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="StateMachine.cs"];
m82_259 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="StateMachine.cs"];
m82_164 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="StateMachine.cs"];
m82_144 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="StateMachine.cs"];
m82_106 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="165-178", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m82_368 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="StateMachine.cs"];
m82_26 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateMachine.cs"];
m82_31 [label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="69-69", cluster="lambda expression", file="StateMachine.cs"];
m82_33 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", color=red, community=2, file="StateMachine.cs"];
m82_34 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="74-75", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", color=green, community=0, file="StateMachine.cs"];
m82_35 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", color=red, community=0, file="StateMachine.cs"];
m82_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs"];
m82_37 [label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="75-75", cluster="lambda expression", color=green, community=0, file="StateMachine.cs"];
m82_30 [label="throw new ArgumentNullException(''parameters'');", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs"];
m82_32 [label="throw new ArgumentNullException(''state'');", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs"];
m82_40 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="80-89", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="StateMachine.cs", color=green, community=0];
m82_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs"];
m82_39 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=red, community=0, file="StateMachine.cs"];
m82_41 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="StateMachine.cs"];
m82_329 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="StateMachine.cs"];
m82_123 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_124 [label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="197-201", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="StateMachine.cs"];
m82_125 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="203-203", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_126 [label=tuples, span="205-205", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_129 [label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="210-210", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_130 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="212-218", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_131 [label="return result;", span="221-221", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_127 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="207-207", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_128 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="208-208", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_132 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateMachine.cs"];
m82_136 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="StateMachine.cs"];
m82_290 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="StateMachine.cs"];
m82_220 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="StateMachine.cs"];
m82_350 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StateMachine.cs"];
m82_0 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="StateMachine.cs"];
m82_1 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", color=green, community=0, file="StateMachine.cs"];
m82_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="StateMachine.cs"];
m82_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateMachine.cs"];
m82_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", color=red, community=0];
m82_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", color=red, community=0];
m82_115 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs"];
m82_271 [label="Entry Unk.GetTimelineStats", span="", cluster="Unk.GetTimelineStats", file="StateMachine.cs"];
m82_219 [label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="StateMachine.cs"];
m82_319 [label="Entry lambda expression", span="404-404", cluster="lambda expression", file="StateMachine.cs"];
m82_19 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", color=red, community=0, file="StateMachine.cs"];
m82_18 [label="return counters.EnqueuedCount ?? 0;", span="55-55", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateMachine.cs"];
m82_20 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="421-421", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateMachine.cs"];
m82_22 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateMachine.cs"];
m82_23 [label="var queueApi = GetQueueApi(queue)", span="60-60", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", color=red, community=0, file="StateMachine.cs"];
m82_24 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="61-61", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateMachine.cs", color=green, community=0];
m82_52 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="StateMachine.cs"];
m82_53 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="94-103", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", color=green, community=0, file="StateMachine.cs"];
m82_54 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="StateMachine.cs"];
m82_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateMachine.cs"];
m82_42 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="StateMachine.cs"];
m82_43 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", color=green, community=0, file="StateMachine.cs"];
m82_44 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="StateMachine.cs"];
m82_47 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="181-181", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", color=green, community=0, file="StateMachine.cs"];
m82_55 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_56 [label="String.IsNullOrWhiteSpace(jobId)", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m82_57 [label="throw new ArgumentNullException(''jobId'');", span="101-101", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_58 [label="state == null", span="102-102", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_59 [label="throw new ArgumentNullException(''state'');", span="102-102", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m82_60 [label="_connection.AcquireJobLock(jobId)", span="104-104", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_72 [label="jobMethod == null", span="144-144", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_73 [label="return ApplyState(stateChangingContext, Enumerable.Empty<IStateChangedFilter>());", span="146-146", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m82_74 [label="var filterInfo = GetFilters(jobMethod)", span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_79 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="22-22", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="StateMachine.cs"];
m82_80 [label="Entry HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", span="23-23", cluster="HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", file="StateMachine.cs"];
m82_84 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", color=green, community=0, file="StateMachine.cs"];
m82_83 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs"];
m82_85 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", color=green, community=0, file="StateMachine.cs"];
m82_99 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StateMachine.cs"];
m82_105 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="StateMachine.cs"];
m82_116 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs"];
m82_118 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs"];
m82_119 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs"];
m82_141 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="StateMachine.cs"];
m82_145 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="StateMachine.cs"];
m82_149 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="StateMachine.cs"];
m82_152 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="StateMachine.cs"];
m82_142 [label="x.GetJobQueueMonitoringApi()", span="198-198", cluster="lambda expression", color=green, community=0, file="StateMachine.cs"];
m82_143 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="StateMachine.cs"];
m82_66 [label="JobMethod jobMethod = null", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_156 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="210-210", cluster="lambda expression", file="StateMachine.cs"];
m82_166 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="229-229", cluster="lambda expression", file="StateMachine.cs"];
m82_176 [label="FetchedJobs(connection, fetchedJobIds)", span="237-237", cluster="lambda expression", file="StateMachine.cs"];
m82_183 [label="GetHourlyTimelineStats(connection, ''succeeded'')", span="243-243", cluster="lambda expression", file="StateMachine.cs"];
m82_190 [label="GetHourlyTimelineStats(connection, ''failed'')", span="249-249", cluster="lambda expression", file="StateMachine.cs"];
m82_203 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="282-289", cluster="lambda expression", file="StateMachine.cs"];
m82_225 [label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="297-297", cluster="lambda expression", file="StateMachine.cs"];
m82_231 [label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="303-303", cluster="lambda expression", file="StateMachine.cs"];
m82_197 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="262-262", cluster="lambda expression", file="StateMachine.cs"];
m82_195 [label="Entry lambda expression", span="254-291", cluster="lambda expression", file="StateMachine.cs"];
m82_243 [label="var multi = connection.QueryMultiple(sql)", span="330-330", cluster="lambda expression", file="StateMachine.cs"];
m82_292 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="383-383", cluster="lambda expression", file="StateMachine.cs"];
m82_198 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="264-264", cluster="lambda expression", file="StateMachine.cs"];
m82_201 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_202 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="268-280", cluster="lambda expression", file="StateMachine.cs"];
m82_217 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="271-279", cluster="lambda expression", file="StateMachine.cs"];
m82_244 [label="stats.Enqueued = multi.Read<int>().Single()", span="332-332", cluster="lambda expression", file="StateMachine.cs"];
m82_245 [label="stats.Failed = multi.Read<int>().Single()", span="333-333", cluster="lambda expression", file="StateMachine.cs"];
m82_246 [label="stats.Processing = multi.Read<int>().Single()", span="334-334", cluster="lambda expression", file="StateMachine.cs"];
m82_247 [label="stats.Scheduled = multi.Read<int>().Single()", span="335-335", cluster="lambda expression", file="StateMachine.cs"];
m82_248 [label="stats.Servers = multi.Read<int>().Single()", span="337-337", cluster="lambda expression", file="StateMachine.cs"];
m82_249 [label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="339-339", cluster="lambda expression", file="StateMachine.cs"];
m82_250 [label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340", cluster="lambda expression", file="StateMachine.cs"];
m82_251 [label="stats.Recurring = multi.Read<int>().Single()", span="342-342", cluster="lambda expression", file="StateMachine.cs"];
m82_120 [label="HangFire.States.StateMachine", span="", cluster="lambda expression", file="StateMachine.cs"];
m82_336 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="451-458", cluster="lambda expression", file="StateMachine.cs"];
m82_121 [label="System.Collections.Generic.IEnumerable<object>", span="", cluster="lambda expression", file="StateMachine.cs"];
m82_147 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="StateMachine.cs"];
m82_146 [label="x.GetQueues()", span="199-199", cluster="lambda expression", file="StateMachine.cs"];
m82_151 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="StateMachine.cs"];
m82_150 [label="new { Monitoring = monitoring, Queue = queue }", span="199-199", cluster="lambda expression", file="StateMachine.cs"];
m82_154 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="StateMachine.cs"];
m82_153 [label="x.Queue", span="200-200", cluster="lambda expression", file="StateMachine.cs"];
m82_257 [label="x.GetJobQueueMonitoringApi().GetQueues()", span="348-348", cluster="lambda expression", file="StateMachine.cs"];
m82_65 [label="return false;", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_67 [label="jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_155 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="StateMachine.cs"];
m82_157 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="StateMachine.cs"];
m82_165 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="StateMachine.cs"];
m82_167 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="StateMachine.cs"];
m82_175 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="StateMachine.cs"];
m82_177 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="StateMachine.cs"];
m82_182 [label="Entry lambda expression", span="242-243", cluster="lambda expression", file="StateMachine.cs"];
m82_184 [label="Exit lambda expression", span="242-243", cluster="lambda expression", file="StateMachine.cs"];
m82_189 [label="Entry lambda expression", span="248-249", cluster="lambda expression", file="StateMachine.cs"];
m82_191 [label="Exit lambda expression", span="248-249", cluster="lambda expression", file="StateMachine.cs"];
m82_204 [label="Exit lambda expression", span="254-291", cluster="lambda expression", file="StateMachine.cs"];
m82_224 [label="Entry lambda expression", span="296-297", cluster="lambda expression", file="StateMachine.cs"];
m82_226 [label="Exit lambda expression", span="296-297", cluster="lambda expression", file="StateMachine.cs"];
m82_230 [label="Entry lambda expression", span="302-303", cluster="lambda expression", file="StateMachine.cs"];
m82_232 [label="Exit lambda expression", span="302-303", cluster="lambda expression", file="StateMachine.cs"];
m82_241 [label="Entry lambda expression", span="327-345", cluster="lambda expression", file="StateMachine.cs"];
m82_256 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="StateMachine.cs"];
m82_335 [label="Entry lambda expression", span="451-458", cluster="lambda expression", file="StateMachine.cs"];
m82_196 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="257-260", cluster="lambda expression", file="StateMachine.cs"];
m82_242 [label="var stats = new StatisticsDto()", span="329-329", cluster="lambda expression", file="StateMachine.cs"];
m82_291 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="StateMachine.cs"];
m82_294 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="StateMachine.cs"];
m82_293 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="StateMachine.cs"];
m82_199 [label="job == null", span="265-265", cluster="lambda expression", file="StateMachine.cs"];
m82_210 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_213 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_216 [label="Entry lambda expression", span="271-279", cluster="lambda expression", file="StateMachine.cs"];
m82_218 [label="Exit lambda expression", span="271-279", cluster="lambda expression", file="StateMachine.cs"];
m82_252 [label="return stats;", span="344-344", cluster="lambda expression", file="StateMachine.cs"];
m82_337 [label="Exit lambda expression", span="451-458", cluster="lambda expression", file="StateMachine.cs"];
m82_258 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="StateMachine.cs"];
m82_273 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="366-366", cluster="lambda expression", file="StateMachine.cs"];
m82_200 [label="return null;", span="265-265", cluster="lambda expression", file="StateMachine.cs"];
m82_253 [label="Exit lambda expression", span="327-345", cluster="lambda expression", file="StateMachine.cs"];
m82_272 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="StateMachine.cs"];
m82_277 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="StateMachine.cs"];
m82_296 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="StateMachine.cs"];
m82_295 [label=x, span="383-383", cluster="lambda expression", file="StateMachine.cs"];
m82_212 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_211 [label="x.Name", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_215 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_214 [label="x.Value", span="267-267", cluster="lambda expression", file="StateMachine.cs"];
m82_274 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="StateMachine.cs"];
m82_279 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="StateMachine.cs"];
m82_278 [label=x, span="366-366", cluster="lambda expression", file="StateMachine.cs"];
m82_316 [label="Entry lambda expression", span="404-404", cluster="lambda expression", file="StateMachine.cs"];
m82_318 [label="Exit lambda expression", span="404-404", cluster="lambda expression", file="StateMachine.cs"];
m82_317 [label="(string)x.Key", span="404-404", cluster="lambda expression", file="StateMachine.cs"];
m82_320 [label="(long)x.Count", span="404-404", cluster="lambda expression", file="StateMachine.cs"];
m82_321 [label="Exit lambda expression", span="404-404", cluster="lambda expression", file="StateMachine.cs"];
m82_103 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="165-178", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", color=green, community=0, file="StateMachine.cs"];
m82_104 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="StateMachine.cs"];
m82_315 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="StateMachine.cs"];
m82_25 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", color=green, community=0, file="StateMachine.cs"];
m82_369 [label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="StateMachine.cs"];
m82_7 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", color=red, community=0, file="StateMachine.cs"];
m82_8 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="46-47", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", color=green, community=0, file="StateMachine.cs"];
m82_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateMachine.cs"];
m82_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="StateMachine.cs"];
m82_9 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="StateMachine.cs"];
m82_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs"];
m82_61 [label="var jobData = _connection.GetJobStateAndInvocationData(jobId)", span="106-106", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_275 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="StateMachine.cs"];
m82_102 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs"];
m82_78 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachine.cs"];
m82_137 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="StateMachine.cs"];
m82_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StateMachine.cs"];
m82_122 [label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="StateMachine.cs"];
m82_178 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="536-536", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_374 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="555-561", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_371 [label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="546-549", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_372 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="551-551", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_373 [label=jobs, span="553-553", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_370 [label="string fetchedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="540-544", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_375 [label="return new JobList<FetchedJobDto>(result);", span="564-564", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_376 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="536-536", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_378 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="StateMachine.cs"];
m82_192 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="StateMachine.cs"];
m82_193 [label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="254-291", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="StateMachine.cs"];
m82_194 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="StateMachine.cs"];
m82_311 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="StateMachine.cs"];
m82_168 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="434-434", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_332 [label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="449-458", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_331 [label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="444-447", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_330 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="438-442", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_333 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="434-434", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateMachine.cs"];
m82_313 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StateMachine.cs"];
m82_90 [label="Entry HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="42-42", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs"];
m82_221 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="StateMachine.cs"];
m82_222 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="296-297", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="StateMachine.cs"];
m82_223 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="StateMachine.cs"];
m82_101 [label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84", cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="StateMachine.cs"];
m82_338 [label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="StateMachine.cs"];
m82_377 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="StateMachine.cs"];
m82_270 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="StateMachine.cs"];
m82_343 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="475-475", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_344 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="477-477", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_345 [label="data.Arguments = arguments", span="478-478", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_346 [label="return data.Deserialize();", span="482-482", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_348 [label="return null;", span="486-486", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_347 [label=JobLoadException, span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_349 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="475-475", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateMachine.cs"];
m82_75 [label="InvokeStateChangingFilters(stateChangingContext, filterInfo.StateChangingFilters)", span="150-150", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_76 [label="return ApplyState(stateChangingContext, filterInfo.StateChangedFilters);", span="152-152", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m82_77 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_205 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="StateMachine.cs"];
m82_322 [label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateMachine.cs"];
m82_323 [label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="424-424", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateMachine.cs"];
m82_324 [label="return monitoringApi;", span="426-426", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateMachine.cs"];
m82_325 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="421-421", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateMachine.cs"];
m82_16 [label="var queueApi = GetQueueApi(queue)", span="52-52", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateMachine.cs", color=green, community=0];
m82_208 [label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="StateMachine.cs"];
m82_69 [label="state = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            state.StateName, jobId)\r\n                    }", span="132-137", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=2];
m82_70 [label="var context = new StateContext(jobId, jobMethod)", span="140-140", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs"];
m82_71 [label="var stateChangingContext = \r\n                    new StateChangingContext(context, state, jobData.State, _connection)", span="141-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_179 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="StateMachine.cs"];
m82_180 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="242-243", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="StateMachine.cs"];
m82_181 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="StateMachine.cs"];
m82_326 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="StateMachine.cs"];
m82_134 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="StateMachine.cs"];
m82_207 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="StateMachine.cs"];
m82_49 [label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="StateMachine.cs"];
m82_138 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="StateMachine.cs"];
m82_135 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="StateMachine.cs"];
m82_139 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="StateMachine.cs"];
m82_148 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="StateMachine.cs"];
m82_62 [label="jobData == null", span="108-108", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_63 [label="return false;", span="111-111", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_64 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(jobData.State)", span="114-114", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", color=red, community=0];
m82_314 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachine.cs"];
m82_68 [label=JobLoadException, span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs"];
m82_288 [label="return GetTimelineStats(connection, keyMaps);", span="385-385", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_280 [label="var endDate = DateTime.UtcNow.Date", span="375-375", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_287 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="383-383", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_281 [label="var dates = new List<DateTime>()", span="376-376", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_284 [label="dates.Add(endDate)", span="379-379", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_285 [label="endDate = endDate.AddDays(-1)", span="380-380", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_283 [label="i < 7", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_282 [label="var i = 0", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_286 [label="i++", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_289 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateMachine.cs"];
m82_254 [label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="StateMachine.cs"];
m82_297 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_299 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="401-404", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_298 [label="string sqlQuery = @''\r\nselect s.[Key], sum(s.[Value]) as [Count] from (\r\n    select [Key], sum([Value]) as [Value] from HangFire.Counter \r\n	group by [Key]\r\n	having [Key] in @keys\r\n    union all\r\n    select [Key], [Value] from HangFire.AggregatedCounter \r\n	where [Key] in @keys\r\n) as s group by [Key];''", span="391-399", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_300 [label="keyMaps.Keys", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_301 [label="!valuesMap.ContainsKey(key)", span="408-408", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_302 [label="valuesMap.Add(key, 0)", span="408-408", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_306 [label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="414-414", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_305 [label="i < keyMaps.Count", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_307 [label="result.Add(keyMaps.ElementAt(i).Value, value)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_303 [label="var result = new Dictionary<DateTime, long>()", span="411-411", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_304 [label="var i = 0", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_308 [label="i++", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_309 [label="return result;", span="418-418", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_310 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateMachine.cs"];
m82_240 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="StateMachine.cs"];
m82_365 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="StateMachine.cs"];
m82_255 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StateMachine.cs"];
m82_159 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateMachine.cs"];
m82_160 [label="var queueApi = GetQueueApi(queue)", span="226-226", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateMachine.cs"];
m82_162 [label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="229-229", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateMachine.cs"];
m82_161 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="227-227", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateMachine.cs"];
m82_163 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateMachine.cs"];
m82_206 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StateMachine.cs"];
m82_209 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="StateMachine.cs"];
m82_381 [label="Hangfire.SqlServer.SqlServerMonitoringApi", span="", file="StateMachine.cs"];
m82_382 [label=int, span="", file="StateMachine.cs"];
m82_383 [label=int, span="", file="StateMachine.cs"];
m82_384 [label=int, span="", file="StateMachine.cs"];
m82_385 [label=int, span="", file="StateMachine.cs"];
m82_386 [label=int, span="", file="StateMachine.cs"];
m82_387 [label=int, span="", file="StateMachine.cs"];
m82_388 [label=int, span="", file="StateMachine.cs"];
m82_389 [label=int, span="", file="StateMachine.cs"];
m82_390 [label=int, span="", file="StateMachine.cs"];
m82_391 [label=int, span="", file="StateMachine.cs"];
m82_392 [label=enqueuedJobIds, span="", file="StateMachine.cs"];
m82_393 [label=enqueuedJobIds, span="", file="StateMachine.cs"];
m82_394 [label=fetchedJobIds, span="", file="StateMachine.cs"];
m82_395 [label=string, span="", file="StateMachine.cs"];
m82_396 [label=sql, span="", file="StateMachine.cs"];
m82_398 [label=string, span="", file="StateMachine.cs"];
m82_397 [label=string, span="", file="StateMachine.cs"];
m84_0 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="StateSteps.cs"];
m84_1 [label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="StateSteps.cs"];
m84_2 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="StateSteps.cs"];
m84_3 [label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="StateSteps.cs"];
m85_15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StatisticsHistoryFilterAttribute.cs"];
m85_57 [label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18", cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="StatisticsHistoryFilterAttribute.cs"];
m85_6 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_7 [label="string sqlQuery = @''select distinct(Queue) from HangFire.JobQueue''", span="44-44", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_8 [label=_cacheLock, span="46-46", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_10 [label="var result = UseTransaction(connection =>\r\n                    {\r\n                        return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();\r\n                    })", span="50-53", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_9 [label="_queuesCache.Count == 0 || _cacheUpdated.Add(QueuesCacheTimeout) < DateTime.UtcNow", span="48-48", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", color=red, community=0, file="StatisticsHistoryFilterAttribute.cs"];
m85_13 [label="return _queuesCache.ToList();", span="59-59", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_11 [label="_queuesCache = result", span="55-55", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_12 [label="_cacheUpdated = DateTime.UtcNow", span="56-56", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_14 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="StatisticsHistoryFilterAttribute.cs"];
m85_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="StatisticsHistoryFilterAttribute.cs"];
m85_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="StatisticsHistoryFilterAttribute.cs"];
m85_3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="StatisticsHistoryFilterAttribute.cs"];
m85_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="StatisticsHistoryFilterAttribute.cs"];
m85_4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="StatisticsHistoryFilterAttribute.cs"];
m85_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="StatisticsHistoryFilterAttribute.cs"];
m85_56 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StatisticsHistoryFilterAttribute.cs"];
m85_38 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="86-86", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_39 [label="string fetchedJobsSql = @''\r\nselect r.Id from (\r\n  select j.Id, jq.FetchedAt, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  where jq.Queue = @queue and jq.FetchedAt is not null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="88-95", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_40 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="97-105", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_41 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="86-86", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="StatisticsHistoryFilterAttribute.cs"];
m85_27 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_28 [label="string sqlQuery = @''\r\nselect r.Id from (\r\n  select j.Id, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  left join HangFire.State s on s.Id = j.StateId\r\n  where jq.Queue = @queue and jq.FetchedAt is null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="65-73", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_29 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="75-83", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_30 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="StatisticsHistoryFilterAttribute.cs"];
m85_48 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="108-108", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="StatisticsHistoryFilterAttribute.cs"];
m85_49 [label="string sqlQuery = @''\r\nselect sum(Enqueued) as EnqueuedCount, sum(Fetched) as FetchedCount \r\nfrom (\r\n    select \r\n	    case when FetchedAt is null then 1 else 0 end as Enqueued,\r\n	    case when FetchedAt is not null then 1 else 0 end as Fetched\r\n    from HangFire.JobQueue\r\n    where Queue = @queue\r\n) q''", span="110-118", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="StatisticsHistoryFilterAttribute.cs"];
m85_50 [label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };\r\n            });", span="120-129", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="StatisticsHistoryFilterAttribute.cs"];
m85_51 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="108-108", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="StatisticsHistoryFilterAttribute.cs"];
m85_16 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="132-132", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="StatisticsHistoryFilterAttribute.cs"];
m85_58 [label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="134-134", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="StatisticsHistoryFilterAttribute.cs"];
m85_59 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="132-132", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="StatisticsHistoryFilterAttribute.cs"];
m85_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="StatisticsHistoryFilterAttribute.cs"];
m85_21 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="StatisticsHistoryFilterAttribute.cs"];
m85_60 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="StatisticsHistoryFilterAttribute.cs"];
m85_52 [label="Entry lambda expression", span="120-129", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_19 [label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_18 [label="Entry lambda expression", span="50-53", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_20 [label="Exit lambda expression", span="50-53", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_24 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_25 [label="(string) x.Queue", span="52-52", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_26 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_32 [label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="77-82", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_31 [label="Entry lambda expression", span="75-83", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_33 [label="Exit lambda expression", span="75-83", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_35 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_36 [label="x.Id", span="81-81", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_37 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_43 [label="return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="99-104", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_42 [label="Entry lambda expression", span="97-105", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_44 [label="Exit lambda expression", span="97-105", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_45 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_46 [label="x.Id", span="103-103", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_47 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_53 [label="var result = connection.Query(sqlQuery, new { queue = queue }).Single()", span="122-122", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_54 [label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };", span="124-128", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_55 [label="Exit lambda expression", span="120-129", cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs"];
m85_22 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StatisticsHistoryFilterAttribute.cs"];
m85_61 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_62 [label=sqlQuery, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_63 [label=string, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_64 [label=int, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_65 [label=int, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_66 [label=sqlQuery, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_67 [label=string, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_68 [label=int, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_69 [label=int, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_70 [label=fetchedJobsSql, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_71 [label=string, span="", file="StatisticsHistoryFilterAttribute.cs"];
m85_72 [label=sqlQuery, span="", file="StatisticsHistoryFilterAttribute.cs"];
m87_59 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="SucceededJobs1.generated.cs"];
m87_50 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="SucceededJobs1.generated.cs"];
m87_48 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededJobs1.generated.cs"];
m87_62 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="95-95", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededJobs1.generated.cs"];
m87_64 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="SucceededJobs1.generated.cs"];
m87_61 [label="Entry HangFire.Common.JobMethod.GetQueue()", span="107-107", cluster="HangFire.Common.JobMethod.GetQueue()", file="SucceededJobs1.generated.cs"];
m87_51 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="SucceededJobs1.generated.cs"];
m87_49 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SucceededJobs1.generated.cs"];
m87_56 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs"];
m87_55 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="17-17", cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="SucceededJobs1.generated.cs"];
m87_58 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="SucceededJobs1.generated.cs"];
m87_63 [label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45", cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="SucceededJobs1.generated.cs"];
m87_54 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="SucceededJobs1.generated.cs"];
m87_0 [label="Entry HangFire.Web.Pages.SucceededJobs.Execute()", span="59-59", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_1 [label="WriteLiteral(''\r\n'')", span="63-63", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_2 [label="Layout = new LayoutPage { Title = ''Succeeded Jobs'' }", span="76-76", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_3 [label="int from, perPage", span="78-78", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="80-80", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="81-81", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_9 [label="pager = new Pager(from, perPage, monitor.SucceededListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/succeeded'')\r\n        }", span="88-91", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_6 [label="Pager pager", span="83-83", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_7 [label="JobList<SucceededJobDto> succeededJobs", span="84-84", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="86-86", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_10 [label="succeededJobs = monitor\r\n            .SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="93-94", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_12 [label="pager.TotalPageCount == 0", span="106-106", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_14 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="127-127", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_46 [label="Write(RenderPartial(new Paginator(pager)))", span="336-336", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_11 [label="WriteLiteral(''\r\n'')", span="101-101", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_16 [label=succeededJobs, span="147-147", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No succeeded jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="112-113", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_15 [label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Job type</th>\r\n                <th>Succeeded</th>\r'' +\r\n''\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="140-142", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_17 [label="WriteLiteral(''                <tr class=\'''')", span="153-153", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_45 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="324-324", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_18 [label="Write(job.Value != null && !job.Value.InSucceededState ? ''obsolete-data'' : null)", span="158-158", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_19 [label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="163-163", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_20 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="168-168", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_21 [label="WriteLiteral(''\''>\r\n                            '')", span="173-173", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_22 [label="Write(HtmlHelper.JobId(job.Key))", span="178-178", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_23 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="183-183", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_24 [label="job.Value != null && !job.Value.InSucceededState", span="188-188", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_25 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="194-195", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_26 [label="WriteLiteral(''                    </td>\r\n\r\n'')", span="205-205", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_27 [label="job.Value == null", span="210-210", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_28 [label="WriteLiteral(''                        <td colspan=\''3\''><em>Job was expired.</em>\r\n              '' +\r\n''          </td>\r\n'')", span="216-217", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_29 [label="WriteLiteral(''                        <td>\r\n                            '')", span="229-229", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_30 [label="Write(HtmlHelper.QueueLabel(job.Value.Method.GetQueue()))", span="234-234", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=red, community=0, file="SucceededJobs1.generated.cs"];
m87_31 [label="WriteLiteral(''\r\n                            <span title=\'''')", span="239-239", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_32 [label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="244-244", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=red, community=0, file="SucceededJobs1.generated.cs"];
m87_33 [label="WriteLiteral(''\''>\r\n                                '')", span="249-249", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_34 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="254-254", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=red, community=0, file="SucceededJobs1.generated.cs"];
m87_35 [label="WriteLiteral(''    \r\n                            </span>\r\n                        </td>\r\n'')", span="259-259", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_37 [label="job.Value.SucceededAt.HasValue", span="268-268", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_36 [label="WriteLiteral(''                        <td>\r\n'')", span="263-263", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_38 [label="WriteLiteral(''                                <span  data-moment=\'''')", span="274-274", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_43 [label="WriteLiteral(''                        </td>\r\n'')", span="304-304", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_39 [label="Write(JobHelper.ToStringTimestamp(job.Value.SucceededAt.Value))", span="279-279", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_40 [label="WriteLiteral(''\''>\r\n                                    '')", span="284-284", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_41 [label="Write(job.Value.SucceededAt)", span="289-289", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_42 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="294-294", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_44 [label="WriteLiteral(''                </tr>\r\n'')", span="314-314", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_47 [label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="59-59", cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs"];
m87_66 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs"];
m87_57 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SucceededJobs1.generated.cs"];
m87_65 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededJobs1.generated.cs"];
m87_52 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededJobs1.generated.cs"];
m87_60 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededJobs1.generated.cs"];
m87_53 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="26-26", cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="SucceededJobs1.generated.cs"];
m87_67 [label="HangFire.Web.Pages.SucceededJobs", span="", file="SucceededJobs1.generated.cs"];
m88_46 [label="Entry HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="112-112", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_54 [label="_startPageIndex > 2", span="114-114", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_55 [label="var index = _startPageIndex - 1", span="116-116", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_56 [label="index < 1", span="117-117", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_58 [label="var item = new Item(index, false, ItemType.MorePage)", span="118-118", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_59 [label="results.Add(item)", span="119-119", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_57 [label="index = 1", span="117-117", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_60 [label="Exit HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="112-112", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_0 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededState.cs"];
m88_1 [label="FromRecord = from >= 0 ? from : 0", span="31-31", cluster="HangFire.Web.Pager.Pager(int, int, long)", color=green, community=0, file="SucceededState.cs"];
m88_3 [label="TotalRecordCount = total", span="33-33", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededState.cs", color=green, community=0];
m88_5 [label="TotalPageCount = (int)Math.Ceiling((double)TotalRecordCount / RecordsPerPage)", span="35-35", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededState.cs", color=green, community=0];
m88_6 [label="PagerItems = GenerateItems()", span="37-37", cluster="HangFire.Web.Pager.Pager(int, int, long)", color=green, community=0, file="SucceededState.cs"];
m88_2 [label="RecordsPerPage = perPage > 0 ? perPage : DefaultRecordsPerPage", span="32-32", cluster="HangFire.Web.Pager.Pager(int, int, long)", color=green, community=0, file="SucceededState.cs"];
m88_4 [label="CurrentPage = FromRecord / RecordsPerPage + 1", span="34-34", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededState.cs", color=green, community=0];
m88_7 [label="Exit HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededState.cs"];
m88_42 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SucceededState.cs"];
m88_44 [label="Entry HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", span="151-151", cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="SucceededState.cs"];
m88_77 [label="PageIndex = pageIndex", span="153-153", cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="SucceededState.cs"];
m88_78 [label="Disabled = disabled", span="154-154", cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="SucceededState.cs"];
m88_79 [label="Type = type", span="155-155", cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="SucceededState.cs"];
m88_80 [label="Exit HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", span="151-151", cluster="HangFire.Web.Pager.Item.Item(int, bool, HangFire.Web.Pager.ItemType)", file="SucceededState.cs"];
m88_43 [label="Entry HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="106-106", cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_50 [label="var item = new Item(CurrentPage - 1, CurrentPage == 1, ItemType.PrevPage)", span="108-108", cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_51 [label="results.Add(item)", span="109-109", cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_52 [label="Exit HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="106-106", cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_53 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SucceededState.cs"];
m88_48 [label="Entry HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="123-123", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_61 [label="_endPageIndex < TotalPageCount - 1", span="125-125", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_62 [label="var index = _startPageIndex + PageItemsCount", span="127-127", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_63 [label="index > TotalPageCount", span="128-128", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_64 [label="index = TotalPageCount", span="128-128", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_65 [label="var item = new Item(index, false, ItemType.MorePage)", span="129-129", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_66 [label="results.Add(item)", span="130-130", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_67 [label="Exit HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="123-123", cluster="HangFire.Web.Pager.AddMoreAfter(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_45 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SucceededState.cs"];
m88_10 [label="Entry HangFire.Web.Pager.PageUrl(int)", span="51-51", cluster="HangFire.Web.Pager.PageUrl(int)", file="SucceededState.cs"];
m88_11 [label="page < 1 || page > TotalPageCount", span="53-53", cluster="HangFire.Web.Pager.PageUrl(int)", color=green, community=0, file="SucceededState.cs"];
m88_12 [label="return ''#'';", span="53-53", cluster="HangFire.Web.Pager.PageUrl(int)", color=green, community=0, file="SucceededState.cs"];
m88_13 [label="return BasePageUrl + ''?from='' + ((page - 1) * RecordsPerPage) + ''&count='' + RecordsPerPage;", span="55-55", cluster="HangFire.Web.Pager.PageUrl(int)", file="SucceededState.cs"];
m88_14 [label="Exit HangFire.Web.Pager.PageUrl(int)", span="51-51", cluster="HangFire.Web.Pager.PageUrl(int)", file="SucceededState.cs"];
m88_15 [label="Entry HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="SucceededState.cs"];
m88_18 [label="return BasePageUrl + ''?from=0&count='' + perPage;", span="61-61", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="SucceededState.cs"];
m88_16 [label="perPage <= 0", span="60-60", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="SucceededState.cs"];
m88_17 [label="return ''#'';", span="60-60", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="SucceededState.cs"];
m88_19 [label="Exit HangFire.Web.Pager.RecordsPerPageUrl(int)", span="58-58", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="SucceededState.cs"];
m88_49 [label="Entry HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="143-143", cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_74 [label="var item = new Item(CurrentPage + 1, CurrentPage >= TotalPageCount, ItemType.NextPage)", span="145-145", cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_75 [label="results.Add(item)", span="146-146", cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_76 [label="Exit HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="143-143", cluster="HangFire.Web.Pager.AddNext(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_9 [label="HangFire.Storage.ProcessingJob", span="", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_22 [label="_startPageIndex = TotalPageCount + 1 - PageItemsCount", span="69-69", cluster="HangFire.Web.Pager.GenerateItems()", color=green, community=0, file="SucceededState.cs"];
m88_21 [label="_startPageIndex + PageItemsCount > TotalPageCount", span="68-68", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_23 [label="_startPageIndex < 1", span="70-70", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_20 [label="_startPageIndex = CurrentPage - (PageItemsCount / 2)", span="67-67", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_24 [label="_startPageIndex = 1", span="71-71", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_25 [label="_endPageIndex = _startPageIndex + PageItemsCount - 1", span="74-74", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_26 [label="_endPageIndex > TotalPageCount", span="75-75", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_27 [label="_endPageIndex = TotalPageCount", span="76-76", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_29 [label="TotalPageCount == 0", span="79-79", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_31 [label="AddPrevious(pagerItems)", span="81-81", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_32 [label="_startPageIndex > 1", span="84-84", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_34 [label="AddMoreBefore(pagerItems)", span="88-88", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_35 [label="AddPageNumbers(pagerItems)", span="91-91", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_36 [label="AddMoreAfter(pagerItems)", span="94-94", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_37 [label="_endPageIndex < TotalPageCount", span="97-97", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_38 [label="pagerItems.Add(new Item(TotalPageCount, false, ItemType.Page))", span="98-98", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_39 [label="AddNext(pagerItems)", span="101-101", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_28 [label="var pagerItems = new List<Item>()", span="78-78", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_30 [label="return pagerItems;", span="79-79", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_33 [label="pagerItems.Add(new Item(1, false, ItemType.Page))", span="85-85", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_40 [label="return pagerItems;", span="103-103", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_41 [label="Exit HangFire.Web.Pager.GenerateItems()", span="64-64", cluster="HangFire.Web.Pager.GenerateItems()", file="SucceededState.cs"];
m88_47 [label="Entry HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="134-134", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_68 [label="var pageIndex = _startPageIndex", span="136-136", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_69 [label="pageIndex <= _endPageIndex", span="136-136", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_70 [label="var item = new Item(pageIndex, false, ItemType.Page)", span="138-138", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_72 [label="pageIndex++", span="136-136", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_71 [label="results.Add(item)", span="139-139", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_73 [label="Exit HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="134-134", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SucceededState.cs"];
m88_8 [label="Entry System.Math.Ceiling(double)", span="0-0", cluster="System.Math.Ceiling(double)", file="SucceededState.cs"];
m88_81 [label="HangFire.Web.Pager", span="", file="SucceededState.cs"];
m88_82 [label="HangFire.Web.Pager.Item", span="", file="SucceededState.cs"];
m90_6 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16", cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m90_7 [label="var state = new SucceededState()", span="18-18", cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m90_8 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                state.Serialize())", span="20-25", cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="SucceededStateFacts.cs"];
m90_9 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                data)", span="21-26", cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", color=red, community=0, file="SucceededStateFacts.cs"];
m90_10 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16", cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m90_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededStateFacts.cs"];
m90_11 [label="Entry HangFire.States.SucceededState.Serialize()", span="45-45", cluster="HangFire.States.SucceededState.Serialize()", file="SucceededStateFacts.cs"];
m90_13 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="29-29", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m90_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededStateFacts.cs"];
m90_0 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m90_1 [label="var state = new SucceededState()", span="11-11", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m90_2 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="12-12", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", color=green, community=0, file="SucceededStateFacts.cs"];
m90_3 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m90_14 [label="var state = new SucceededState()", span="31-31", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=green, community=0, file="SucceededStateFacts.cs"];
m90_15 [label="Assert.True(state.ExpireJobOnApply)", span="32-32", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=green, community=0, file="SucceededStateFacts.cs"];
m90_16 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="29-29", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m90_4 [label="Entry HangFire.States.SucceededState.SucceededState()", span="24-24", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs"];
m91_9 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="31-31", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededStateHandler.cs"];
m91_0 [label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_1 [label="transaction.InsertToList(''succeeded'', context.JobId)", span="11-11", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_2 [label="transaction.TrimList(''succeeded'', 0, 99)", span="12-12", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_3 [label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_5 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="32-32", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededStateHandler.cs"];
m91_6 [label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="15-15", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_7 [label="transaction.RemoveFromList(''succeeded'', context.JobId)", span="18-18", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_8 [label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="15-15", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededStateHandler.cs"];
m91_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs"];
m92_14 [label="Entry HangFire.Server.Worker.ToString()", span="59-59", cluster="HangFire.Server.Worker.ToString()", file="SucceededStateHandlerFacts.cs"];
m92_15 [label="return ''Worker #'' + _context.WorkerNumber;", span="61-61", cluster="HangFire.Server.Worker.ToString()", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_16 [label="Exit HangFire.Server.Worker.ToString()", span="59-59", cluster="HangFire.Server.Worker.ToString()", file="SucceededStateHandlerFacts.cs"];
m92_13 [label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="64-64", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_17 [label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="69-69", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_19 [label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="72-75", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_22 [label="var jobData = connection.GetJobData(jobId)", span="89-89", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_24 [label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="92-92", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_25 [label="process.Run(performContext, jobData.Job)", span="94-94", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_31 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="115-115", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_18 [label="var processingState = new ProcessingState(_context.ServerId)", span="70-70", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_20 [label="return;", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_21 [label="IState state", span="85-85", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_23 [label="jobData.EnsureLoaded()", span="90-90", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_26 [label="state = new SucceededState()", span="96-96", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_27 [label=JobPerformanceException, span="98-98", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_29 [label=Exception, span="105-105", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_28 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="100-103", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_30 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="107-110", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_32 [label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="64-64", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SucceededStateHandlerFacts.cs"];
m92_33 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="SucceededStateHandlerFacts.cs"];
m92_41 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="SucceededStateHandlerFacts.cs"];
m92_12 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SucceededStateHandlerFacts.cs"];
m92_38 [label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35", cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="SucceededStateHandlerFacts.cs"];
m92_35 [label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="SucceededStateHandlerFacts.cs"];
m92_37 [label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27", cluster="HangFire.Storage.JobData.EnsureLoaded()", file="SucceededStateHandlerFacts.cs"];
m92_6 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SucceededStateHandlerFacts.cs"];
m92_7 [label="var connection = _context.Storage.GetConnection()", span="36-36", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SucceededStateHandlerFacts.cs"];
m92_8 [label="var nextJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="38-38", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_9 [label="ProcessJob(nextJob.JobId, connection, _context.PerformanceProcess)", span="42-42", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_10 [label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SucceededStateHandlerFacts.cs"];
m92_39 [label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20", cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="SucceededStateHandlerFacts.cs"];
m92_36 [label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="SucceededStateHandlerFacts.cs"];
m92_34 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="SucceededStateHandlerFacts.cs"];
m92_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="SucceededStateHandlerFacts.cs"];
m92_1 [label="context == null", span="29-29", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_3 [label="_context = context", span="31-31", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="SucceededStateHandlerFacts.cs"];
m92_2 [label="throw new ArgumentNullException(''context'');", span="29-29", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", color=red, community=0, file="SucceededStateHandlerFacts.cs"];
m92_4 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="SucceededStateHandlerFacts.cs"];
m92_40 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateHandlerFacts.cs"];
m92_11 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="SucceededStateHandlerFacts.cs"];
m92_42 [label="HangFire.Server.Worker", span="", file="SucceededStateHandlerFacts.cs"];
m93_11 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="TestStateChangingFilter.cs"];
m93_5 [label="Entry HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs"];
m93_6 [label="Assert.NotNull(context)", span="23-23", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs"];
m93_9 [label="context.CandidateState = _changeState", span="29-29", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs"];
m93_7 [label="_results.Add(_name)", span="25-25", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs"];
m93_8 [label="_changeState != null", span="27-27", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs"];
m93_10 [label="Exit HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21", cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs"];
m93_0 [label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs"];
m93_1 [label="_name = name", span="16-16", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs"];
m93_2 [label="_results = results", span="17-17", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs"];
m93_3 [label="_changeState = changeState", span="18-18", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs"];
m93_4 [label="Exit HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs"];
m93_12 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TestStateChangingFilter.cs"];
m93_13 [label="HangFire.Tests.TestStateChangingFilter", span="", file="TestStateChangingFilter.cs"];
m94_40 [label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151", cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="Worker.cs"];
m94_54 [label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="11-11", cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="Worker.cs"];
m94_26 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="Worker.cs"];
m94_91 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m94_85 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="Worker.cs"];
m94_41 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="Worker.cs"];
m94_83 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="Worker.cs"];
m94_12 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="Worker.cs"];
m94_84 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="Worker.cs"];
m94_27 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs"];
m94_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", span="43-43", cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs"];
m94_1 [label="_storage = storage", span="45-45", cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs"];
m94_2 [label="_context = context", span="46-46", cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs"];
m94_3 [label="_logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', context.WorkerNumber))", span="48-48", cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs"];
m94_4 [label="Exit HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", span="43-43", cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs"];
m94_82 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs"];
m94_5 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Worker.cs"];
m94_81 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="Worker.cs"];
m94_86 [label="Entry JobAsClassPerformStrategy.cstr", span="", cluster="JobAsClassPerformStrategy.cstr", file="Worker.cs"];
m94_17 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs"];
m94_13 [label="Entry HangFire.Server.Worker.Stop()", span="61-61", cluster="HangFire.Server.Worker.Stop()", file="Worker.cs"];
m94_14 [label="_stopSent = true", span="63-63", cluster="HangFire.Server.Worker.Stop()", file="Worker.cs"];
m94_15 [label="_cts.Cancel()", span="64-64", cluster="HangFire.Server.Worker.Stop()", file="Worker.cs"];
m94_16 [label="Exit HangFire.Server.Worker.Stop()", span="61-61", cluster="HangFire.Server.Worker.Stop()", file="Worker.cs"];
m94_57 [label="Entry HangFire.Storage.IStorageConnection.CompleteJob(HangFire.Server.JobPayload)", span="24-24", cluster="HangFire.Storage.IStorageConnection.CompleteJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m94_6 [label="Entry Unk.GetLogger", span="", cluster="Unk.GetLogger", file="Worker.cs"];
m94_88 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="Worker.cs"];
m94_28 [label="Entry HangFire.Server.Worker.DoWork()", span="84-84", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_29 [label="_logger.DebugFormat(''Worker #{0} has been started.'', _context.WorkerNumber)", span="88-88", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_30 [label=true, span="90-90", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_31 [label="_cts.Token.ThrowIfCancellationRequested()", span="92-92", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_33 [label=OperationCanceledException, span="123-123", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_35 [label=Exception, span="127-127", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_32 [label="JobServer.RetryOnException(\r\n                        () =>\r\n                        {\r\n                            using (var connection = _storage.GetConnection())\r\n                            {\r\n                                var fetcher = connection.CreateFetcher(_context.QueueNames);\r\n                                var payload = fetcher.DequeueJob(_cts.Token);\r\n\r\n                                if (payload == null)\r\n                                {\r\n                                    _cts.Cancel();\r\n                                    return;\r\n                                }\r\n\r\n                                PerformJob(connection, payload);\r\n\r\n                                // Checkpoint #4. The job was performed, and it is in the one\r\n                                // of the explicit states (Succeeded, Scheduled and so on).\r\n                                // It should not be re-queued, but we still need to remove its\r\n                                // processing information.\r\n\r\n                                connection.CompleteJob(payload);\r\n\r\n                                // Success point. No things must be done after previous command\r\n                                // was succeeded.\r\n                            }\r\n                        }, _cts.Token.WaitHandle)", span="94-120", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_34 [label="_logger.DebugFormat(''Worker #{0} has been stopped.'', _context.WorkerNumber)", span="125-125", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_36 [label="_logger.Fatal(\r\n                    String.Format(''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="129-131", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_37 [label="Exit HangFire.Server.Worker.DoWork()", span="84-84", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m94_89 [label="Entry HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", span="48-48", cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="Worker.cs"];
m94_55 [label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="22-22", cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="Worker.cs"];
m94_90 [label="Entry HangFire.States.SucceededState.SucceededState()", span="24-24", cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs"];
m94_39 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Worker.cs"];
m94_7 [label="Entry HangFire.Server.Worker.Start()", span="51-51", cluster="HangFire.Server.Worker.Start()", file="Worker.cs"];
m94_8 [label="_thread = new Thread(DoWork)\r\n            {\r\n                Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                IsBackground = true\r\n            }", span="53-57", cluster="HangFire.Server.Worker.Start()", file="Worker.cs"];
m94_9 [label="_thread.Start()", span="58-58", cluster="HangFire.Server.Worker.Start()", file="Worker.cs"];
m94_10 [label="Exit HangFire.Server.Worker.Start()", span="51-51", cluster="HangFire.Server.Worker.Start()", file="Worker.cs"];
m94_53 [label="Entry HangFire.JobStorage.GetConnection()", span="45-45", cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs"];
m94_87 [label="Entry JobAsMethodPerformStrategy.cstr", span="", cluster="JobAsMethodPerformStrategy.cstr", file="Worker.cs"];
m94_42 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="Worker.cs"];
m94_43 [label="Entry lambda expression", span="95-120", cluster="lambda expression", file="Worker.cs"];
m94_44 [label="var connection = _storage.GetConnection()", span="97-97", cluster="lambda expression", file="Worker.cs"];
m94_45 [label="var fetcher = connection.CreateFetcher(_context.QueueNames)", span="99-99", cluster="lambda expression", file="Worker.cs"];
m94_50 [label="PerformJob(connection, payload)", span="108-108", cluster="lambda expression", file="Worker.cs"];
m94_51 [label="connection.CompleteJob(payload)", span="115-115", cluster="lambda expression", file="Worker.cs"];
m94_46 [label="var payload = fetcher.DequeueJob(_cts.Token)", span="100-100", cluster="lambda expression", file="Worker.cs"];
m94_47 [label="payload == null", span="102-102", cluster="lambda expression", file="Worker.cs"];
m94_48 [label="_cts.Cancel()", span="104-104", cluster="lambda expression", file="Worker.cs"];
m94_49 [label="return;", span="105-105", cluster="lambda expression", file="Worker.cs"];
m94_52 [label="Exit lambda expression", span="95-120", cluster="lambda expression", file="Worker.cs"];
m94_38 [label="Entry Unk.DebugFormat", span="", cluster="Unk.DebugFormat", file="Worker.cs"];
m94_56 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", span="135-135", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_58 [label="payload == null", span="137-137", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_60 [label="var stateMachine = new StateMachine(connection)", span="142-142", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_62 [label="!stateMachine.TryToChangeState(\r\n                payload.Id, \r\n                processingState, \r\n                new [] { EnqueuedState.StateName, ProcessingState.StateName })", span="145-148", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=2, file="Worker.cs"];
m94_66 [label="var jobMethod = JobMethod.Deserialize(payload.InvocationData)", span="164-164", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_68 [label="var arguments = JobHelper.FromJson<Dictionary<string, string>>(\r\n                        payload.Args)", span="166-167", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_70 [label="var arguments = JobHelper.FromJson<string[]>(payload.Arguments)", span="174-174", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_72 [label="var performContext = new PerformContext(_context, connection, payload.Id, jobMethod)", span="183-183", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_79 [label="stateMachine.TryToChangeState(payload.Id, state, new [] { ProcessingState.StateName })", span="204-204", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_59 [label="return;", span="139-139", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_61 [label="var processingState = new ProcessingState(_context.ServerName)", span="144-144", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_63 [label="return;", span="147-147", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_64 [label="State state", span="158-158", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_65 [label="IJobPerformStrategy performStrategy", span="159-159", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_67 [label="jobMethod.OldFormat", span="165-165", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_69 [label="performStrategy = new JobAsClassPerformStrategy(\r\n                        jobMethod, arguments)", span="172-173", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_71 [label="performStrategy = new JobAsMethodPerformStrategy(\r\n                        jobMethod, arguments)", span="179-180", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_73 [label="_context.Performer.PerformJob(performContext, performStrategy)", span="181-181", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_74 [label="state = new SucceededState()", span="183-183", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_75 [label=JobPerformanceException, span="185-185", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_77 [label=Exception, span="192-192", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_76 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="187-190", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_78 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="197-200", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m94_80 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", span="135-135", cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs"];
m94_18 [label="Entry HangFire.Server.Worker.Dispose()", span="67-67", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_19 [label="!_stopSent", span="69-69", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_20 [label="Stop()", span="71-71", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_21 [label="_thread != null", span="74-74", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_22 [label="_thread.Join()", span="76-76", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_24 [label="_cts.Dispose()", span="80-80", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_23 [label="_thread = null", span="77-77", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_25 [label="Exit HangFire.Server.Worker.Dispose()", span="67-67", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m94_11 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Worker.cs"];
m94_92 [label="HangFire.Server.Worker", span="", file="Worker.cs"];
n48 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n48 -> n46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n8  [key=2, style=dotted];
n5 -> n10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n9  [key=2, style=dotted, color=red];
n10 -> n11  [key=0, style=solid];
n7 -> n4  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=2, style=dotted];
n12 -> n10  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n8  [key=2, style=dotted];
n15 -> n18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n16 -> n17  [key=0, style=solid];
n16 -> n9  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n17 -> n14  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n8  [key=2, style=dotted];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n24 -> n25  [key=0, style=solid];
n24 -> n9  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n25 -> n22  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n27 -> n21  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n34  [key=2, style=dotted];
n30 -> n32  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
n31 -> n32  [key=0, style=solid];
n31 -> n9  [key=2, style=dotted];
n34 -> n46  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n9  [key=2, style=dotted];
n33 -> n29  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n34  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n40  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=2, style=dotted];
n38 -> n42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n39 -> n35  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=2, style=dotted];
n44 -> n42  [key=0, style=bold, color=blue];
n46 -> n47  [key=0, style=solid];
n46 -> n21  [key=2, style=dotted];
n47 -> n34  [key=0, style=bold, color=blue];
d20 -> d22  [key=0, style=solid, color=green];
d20 -> d25  [key=2, style=dotted, color=green];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d21  [key=0, style=solid];
d22 -> d16  [key=0, style=bold, color=blue];
d30 -> d31  [key=0, style=solid, color=green];
d30 -> d32  [key=2, style=dotted, color=green];
d30 -> d33  [key=2, style=dotted, color=green];
d39 -> d30  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d39 -> d36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
d27 -> d30  [key=1, style=dashed, color=green, label=string];
d27 -> d28  [key=0, style=solid];
d28 -> d30  [key=0, style=solid, color=green];
d28 -> d29  [key=0, style=solid];
d28 -> d23  [key=2, style=dotted];
d31 -> d27  [key=0, style=bold, color=blue];
d17 -> d19  [key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d17 -> d23  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d15  [key=2, style=dotted];
d21 -> d26  [key=2, style=dotted];
d18 -> d22  [key=0, style=solid];
d18 -> d24  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d16 -> d21  [key=1, style=dashed, color=darkseagreen4, label=string];
d6 -> d7  [key=0, style=solid];
d6 -> d14  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d11 -> d15  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [key=2, style=dotted];
d29 -> d31  [key=0, style=solid];
d29 -> d24  [key=2, style=dotted];
d0 -> d6  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d0 -> d9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
d0 -> d10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d0 -> d11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
d5 -> d6  [key=0, style=solid];
d5 -> d13  [key=2, style=dotted];
d12 -> d0  [key=0, style=bold, color=blue];
d34 -> d35  [key=0, style=solid];
d37 -> d34  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d1 -> d13  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d2 -> d13  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d13  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d13  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_12  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_22  [key=2, style=dotted];
m0_34 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> n9  [key=2, style=dotted];
m0_36 -> m0_33  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_22  [key=2, style=dotted];
m0_48 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> n9  [key=2, style=dotted];
m0_50 -> m0_47  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_22  [key=2, style=dotted];
m0_25 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> n9  [key=2, style=dotted];
m0_27 -> m0_24  [key=0, style=bold, color=blue];
m0_62 -> m0_216  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_62  [key=2, style=dotted];
m0_55 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_55 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_55 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_55 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_63  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_64  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_65  [key=2, style=dotted];
m0_61 -> m0_54  [key=0, style=bold, color=blue];
m0_18 -> m0_215  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_23  [key=2, style=dotted];
m0_21 -> m0_19  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=2, style=dotted];
m0_31 -> m0_29  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_32  [key=2, style=dotted];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_32  [key=2, style=dotted];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_32  [key=2, style=dotted];
m0_53 -> m0_51  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid, color=red];
m0_41 -> m0_22  [key=2, style=dotted];
m0_41 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_42 -> m0_43  [key=0, style=solid, color=red];
m0_42 -> n9  [key=2, style=dotted, color=red];
m0_43 -> m0_40  [key=0, style=bold, color=blue];
m0_8 -> m0_62  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.Client.CreateContext context"];
m0_218 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_218 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_219 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_220 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_221 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_222 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_223 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_224 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_225 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_226 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_227 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_228 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_34  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_35  [key=2, style=dotted];
m2_28 -> m2_36  [key=2, style=dotted];
m2_28 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_29 -> m2_37  [key=2, style=dotted];
m2_29 -> m2_36  [key=2, style=dotted];
m2_29 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_38  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_26  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_4  [key=1, style=dashed, color=green, label=string];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_4  [key=1, style=dashed, color=green, label=stateMachine];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_9  [key=2, style=dotted];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=0, style=solid];
m2_67 -> m2_34  [key=2, style=dotted];
m2_67 -> m2_38  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_66  [key=0, style=bold, color=blue];
m2_136 -> m2_137  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=2, style=dotted];
m2_138 -> m2_136  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_128 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_107  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_135  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_130 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_130 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_107  [key=2, style=dotted];
m2_134 -> m2_131  [key=0, style=solid];
m2_134 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_135 -> m2_128  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid, color=green];
m2_13 -> m2_8  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid, color=green];
m2_14 -> m2_8  [key=2, style=dotted];
m2_14 -> m2_9  [key=2, style=dotted, color=green];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_15 -> m2_10  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=2, style=dotted];
m2_47 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_47 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_51  [key=2, style=dotted];
m2_49 -> m2_46  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_14  [key=1, style=dashed, color=green, label=string];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_8  [key=2, style=dotted];
m2_11 -> m2_9  [key=2, style=dotted];
m2_11 -> m2_6  [key=2, style=dotted];
m2_12 -> m2_10  [key=0, style=bold, color=blue];
m2_12 -> m2_14  [key=1, style=dashed, color=green, label=stateMachine];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid, color=red];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_6 -> m2_8  [key=2, style=dotted, color=red];
m2_6 -> m2_9  [key=2, style=dotted, color=red];
m2_58 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_8  [key=2, style=dotted];
m2_59 -> m2_9  [key=2, style=dotted];
m2_60 -> m2_58  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_75  [key=0, style=solid];
m2_72 -> m2_76  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_71  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=2, style=dotted];
m2_94 -> m2_91  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_81  [key=0, style=solid];
m2_78 -> m2_76  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_77  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_8  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=2, style=dotted];
m2_110 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_111 -> m2_109  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_105  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> n8  [key=2, style=dotted];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=args];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_107  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_108  [key=2, style=dotted];
m2_102 -> m2_86  [key=2, style=dotted];
m2_102 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=0, style=solid];
m2_103 -> m2_101  [key=0, style=solid];
m2_103 -> m2_107  [key=2, style=dotted];
m2_103 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_104 -> m2_97  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_8  [key=2, style=dotted];
m2_17 -> m2_9  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_121  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_123  [key=2, style=dotted];
m2_127 -> m2_124  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_85  [key=2, style=dotted];
m2_88 -> m2_90  [key=2, style=dotted];
m2_89 -> m2_87  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_22  [key=2, style=dotted];
m2_24 -> m2_9  [key=2, style=dotted];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=2, style=dotted];
m2_83 -> m2_86  [key=2, style=dotted];
m2_84 -> m2_82  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_52  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_55  [key=0, style=bold, color=blue];
m2_113 -> m2_114  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> n8  [key=2, style=dotted];
m2_114 -> m2_116  [key=2, style=dotted];
m2_115 -> m2_113  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_9  [key=2, style=dotted, color=green];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_121  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_122  [key=2, style=dotted];
m2_119 -> m2_123  [key=2, style=dotted];
m2_120 -> m2_117  [key=0, style=bold, color=blue];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_140 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_107  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_147  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_142 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_142 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_107  [key=2, style=dotted];
m2_146 -> m2_143  [key=0, style=solid];
m2_146 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_147 -> m2_140  [key=0, style=bold, color=blue];
m2_148 -> m2_149  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [key=2, style=dotted];
m2_150 -> m2_148  [key=0, style=bold, color=blue];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=0, style=solid];
m2_62 -> m2_34  [key=2, style=dotted];
m2_62 -> m2_38  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_61  [key=0, style=bold, color=blue];
m2_152 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_6  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_23 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_24 -> m3_33  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_35  [key=2, style=dotted];
m3_28 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m3_28 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_36  [key=2, style=dotted];
m3_30 -> m3_32  [key=0, style=solid];
m3_30 -> m3_37  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_25 -> m3_32  [key=0, style=solid];
m3_25 -> d24  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_27 -> m3_32  [key=0, style=solid];
m3_27 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_23  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=0, style=solid];
m3_39 -> m3_33  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_43  [key=2, style=dotted];
m3_40 -> m3_42  [key=0, style=solid];
m3_40 -> d24  [key=2, style=dotted];
m3_42 -> m3_38  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m3_4 -> m3_9  [key=1, style=dashed, color=red, label="string[]"];
m3_4 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m3_4 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m3_4 -> m3_14  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m3_4 -> m3_15  [key=1, style=dashed, color=red, label="string[]"];
m3_4 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m3_4 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid, color=red];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_7 -> m3_9  [key=0, style=solid, color=red];
m3_9 -> m3_10  [key=0, style=solid, color=red];
m3_9 -> m3_11  [key=0, style=solid, color=red];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid, color=red];
m3_14 -> m3_15  [key=0, style=solid, color=red];
m3_15 -> m3_16  [key=0, style=solid, color=red];
m3_16 -> m3_17  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_22  [key=2, style=dotted];
m3_6 -> m3_19  [key=0, style=solid];
m3_6 -> d24  [key=2, style=dotted];
m3_8 -> m3_19  [key=0, style=solid, color=red];
m3_8 -> d24  [key=2, style=dotted, color=red];
m3_10 -> m3_19  [key=0, style=solid, color=red];
m3_10 -> d24  [key=2, style=dotted, color=red];
m3_12 -> m3_19  [key=0, style=solid];
m3_12 -> d24  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_21  [key=2, style=dotted];
m3_19 -> m3_4  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid, color=red];
m3_45 -> m3_46  [key=0, style=solid, color=red];
m3_45 -> m3_48  [key=2, style=dotted, color=red];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_44  [key=0, style=bold, color=blue];
m3_49 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_14  [key=1, style=dashed, color=red, label="HangFire.Client.CreateContext"];
m3_49 -> m3_15  [key=1, style=dashed, color=red, label="HangFire.Client.CreateContext"];
m3_49 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_45  [key=1, style=dashed, color=red, label="HangFire.Client.CreateContext"];
m3_49 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_45  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_46  [key=2, style=dotted];
m5_2 -> m5_47  [key=2, style=dotted];
m5_2 -> m5_48  [key=2, style=dotted];
m5_2 -> m5_49  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_50  [key=2, style=dotted];
m5_4 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_50  [key=2, style=dotted];
m5_5 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_52  [key=2, style=dotted];
m5_9 -> m5_53  [key=2, style=dotted];
m5_9 -> m5_49  [key=2, style=dotted];
m5_9 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m5_9 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=pager];
m5_9 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=pager];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_51  [key=2, style=dotted];
m5_8 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_54  [key=2, style=dotted];
m5_10 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=dequeuedJobs];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_55  [key=2, style=dotted];
m5_14 -> m5_56  [key=2, style=dotted];
m5_14 -> m5_57  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_64  [key=2, style=dotted];
m5_43 -> m5_56  [key=2, style=dotted];
m5_43 -> m5_57  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_45  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_42  [key=0, style=solid];
m5_16 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_13 -> m5_44  [key=0, style=solid];
m5_13 -> m5_45  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_45  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_45  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_45  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_49  [key=2, style=dotted];
m5_18 -> m5_58  [key=2, style=dotted];
m5_18 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_18 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_45  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_59  [key=2, style=dotted];
m5_20 -> m5_57  [key=2, style=dotted];
m5_20 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_20 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_45  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> d32  [key=2, style=dotted];
m5_22 -> m5_61  [key=2, style=dotted];
m5_22 -> m5_58  [key=2, style=dotted];
m5_22 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_22 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_45  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_58  [key=2, style=dotted];
m5_24 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_24 -> m5_26  [key=1, style=dashed, color=red, label=job];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_25 -> m5_45  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid, color=red];
m5_26 -> m5_62  [key=2, style=dotted, color=red];
m5_26 -> m5_58  [key=2, style=dotted, color=red];
m5_26 -> m5_26  [key=1, style=dashed, color=red, label=job];
m5_26 -> m5_28  [key=1, style=dashed, color=red, label=job];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_45  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_34  [key=0, style=solid];
m5_28 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_28 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_28 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_45  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_45  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_63  [key=2, style=dotted];
m5_30 -> m5_58  [key=2, style=dotted];
m5_30 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_30 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_41  [key=0, style=solid];
m5_35 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_35 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_45  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_58  [key=2, style=dotted];
m5_32 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_32 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_45  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_45  [key=2, style=dotted];
m5_41 -> m5_16  [key=0, style=solid];
m5_41 -> m5_45  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_63  [key=2, style=dotted];
m5_37 -> m5_58  [key=2, style=dotted];
m5_37 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_37 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_45  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_58  [key=2, style=dotted];
m5_39 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_45  [key=2, style=dotted];
m5_44 -> m5_0  [key=0, style=bold, color=blue];
m5_65 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_26  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m5_65 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DequeuedJobsPage"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_3 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.EnqueuedJobDto"];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_62  [key=2, style=dotted];
m8_73 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_71  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_63  [key=2, style=dotted];
m8_76 -> m8_72  [key=0, style=bold, color=blue];
m8_167 -> m8_168  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_62  [key=2, style=dotted];
m8_168 -> m8_170  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_85  [key=2, style=dotted];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_152  [key=2, style=dotted];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_153  [key=2, style=dotted];
m8_171 -> m8_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_172 -> m8_167  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_8  [key=2, style=dotted];
m8_1 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_9  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_10  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_13  [key=2, style=dotted];
m8_6 -> m8_14  [key=2, style=dotted];
m8_6 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_7 -> m8_0  [key=0, style=bold, color=blue];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_22  [key=2, style=dotted];
m8_34 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> n9  [key=2, style=dotted];
m8_36 -> m8_33  [key=0, style=bold, color=blue];
m8_86 -> m8_87  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_62  [key=2, style=dotted];
m8_87 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [key=2, style=dotted];
m8_88 -> m8_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_89 -> m8_86  [key=0, style=bold, color=blue];
m8_147 -> m8_148  [key=0, style=solid];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_62  [key=2, style=dotted];
m8_148 -> m8_150  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_148 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_152  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_153  [key=2, style=dotted];
m8_150 -> m8_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_151 -> m8_147  [key=0, style=bold, color=blue];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_22  [key=2, style=dotted];
m8_48 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> n9  [key=2, style=dotted];
m8_50 -> m8_47  [key=0, style=bold, color=blue];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_3  [key=3, color=darkorchid, style=bold, label="Property variable string JobId"];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_22  [key=2, style=dotted];
m8_25 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> n9  [key=2, style=dotted];
m8_27 -> m8_24  [key=0, style=bold, color=blue];
m8_120 -> m8_121  [key=0, style=solid];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_62  [key=2, style=dotted];
m8_121 -> m8_123  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_121 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_85  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_85  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_109  [key=2, style=dotted];
m8_124 -> n9  [key=2, style=dotted];
m8_125 -> m8_120  [key=0, style=bold, color=blue];
m8_206 -> m8_207  [key=0, style=solid];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_62  [key=2, style=dotted];
m8_207 -> m8_209  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_152  [key=2, style=dotted];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_71  [key=2, style=dotted];
m8_209 -> m8_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_22  [key=2, style=dotted];
m8_210 -> m8_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_211 -> m8_206  [key=0, style=bold, color=blue];
m8_62 -> m8_216  [key=0, style=solid];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_32  [key=2, style=dotted];
m8_217 -> m8_62  [key=0, style=bold, color=blue];
m8_115 -> m8_116  [key=0, style=solid];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_62  [key=2, style=dotted];
m8_116 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_85  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_109  [key=2, style=dotted];
m8_118 -> n9  [key=2, style=dotted];
m8_119 -> m8_115  [key=0, style=bold, color=blue];
m8_196 -> m8_197  [key=0, style=solid];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_13  [key=2, style=dotted];
m8_197 -> m8_14  [key=2, style=dotted];
m8_197 -> m8_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_62  [key=2, style=dotted];
m8_198 -> m8_200  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_152  [key=2, style=dotted];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_71  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> n9  [key=2, style=dotted];
m8_202 -> m8_196  [key=0, style=bold, color=blue];
m8_110 -> m8_111  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_62  [key=2, style=dotted];
m8_111 -> m8_113  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_109  [key=2, style=dotted];
m8_112 -> n9  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_109  [key=2, style=dotted];
m8_113 -> n9  [key=2, style=dotted];
m8_114 -> m8_110  [key=0, style=bold, color=blue];
m8_54 -> m8_55  [key=0, style=solid];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_62  [key=2, style=dotted];
m8_55 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_55 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_55 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_55 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_63  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_63  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_63  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_64  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_65  [key=2, style=dotted];
m8_61 -> m8_54  [key=0, style=bold, color=blue];
m8_18 -> m8_215  [key=0, style=solid];
m8_215 -> m8_18  [key=0, style=bold, color=blue];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_62  [key=2, style=dotted];
m8_67 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_71  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_63  [key=2, style=dotted];
m8_70 -> m8_66  [key=0, style=bold, color=blue];
m8_212 -> m8_213  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_18  [key=2, style=dotted];
m8_17 -> m8_15  [key=0, style=bold, color=blue];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_22  [key=2, style=dotted];
m8_20 -> m8_23  [key=2, style=dotted];
m8_21 -> m8_19  [key=0, style=bold, color=blue];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=2, style=dotted];
m8_31 -> m8_29  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_32  [key=2, style=dotted];
m8_39 -> m8_37  [key=0, style=bold, color=blue];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_32  [key=2, style=dotted];
m8_46 -> m8_44  [key=0, style=bold, color=blue];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_32  [key=2, style=dotted];
m8_53 -> m8_51  [key=0, style=bold, color=blue];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_85  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_84 -> m8_82  [key=0, style=bold, color=blue];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_85  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_93 -> m8_91  [key=0, style=bold, color=blue];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_85  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_101 -> m8_99  [key=0, style=bold, color=blue];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_109  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_108 -> m8_106  [key=0, style=bold, color=blue];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_109  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_139 -> m8_137  [key=0, style=bold, color=blue];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_22  [key=2, style=dotted];
m8_155 -> m8_157  [key=2, style=dotted];
m8_154 -> m8_155  [key=0, style=solid];
m8_156 -> m8_154  [key=0, style=bold, color=blue];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_22  [key=2, style=dotted];
m8_165 -> m8_157  [key=2, style=dotted];
m8_164 -> m8_165  [key=0, style=solid];
m8_166 -> m8_164  [key=0, style=bold, color=blue];
m8_173 -> m8_174  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_22  [key=2, style=dotted];
m8_174 -> m8_157  [key=2, style=dotted];
m8_174 -> m8_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_175 -> m8_173  [key=0, style=bold, color=blue];
m8_176 -> m8_177  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_179  [key=2, style=dotted];
m8_178 -> m8_176  [key=0, style=bold, color=blue];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_85  [key=2, style=dotted];
m8_185 -> m8_186  [key=0, style=solid];
m8_187 -> m8_185  [key=0, style=bold, color=blue];
m8_194 -> m8_195  [key=0, style=solid];
m8_194 -> m8_109  [key=2, style=dotted];
m8_193 -> m8_194  [key=0, style=solid];
m8_195 -> m8_193  [key=0, style=bold, color=blue];
m8_203 -> m8_204  [key=0, style=solid];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_22  [key=2, style=dotted];
m8_204 -> m8_157  [key=2, style=dotted];
m8_205 -> m8_203  [key=0, style=bold, color=blue];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_85  [key=2, style=dotted];
m8_214 -> m8_212  [key=0, style=bold, color=blue];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_62  [key=2, style=dotted];
m8_127 -> m8_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_127 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_85  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_85  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_109  [key=2, style=dotted];
m8_130 -> n9  [key=2, style=dotted];
m8_131 -> m8_126  [key=0, style=bold, color=blue];
m8_132 -> m8_133  [key=0, style=solid];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_62  [key=2, style=dotted];
m8_133 -> m8_135  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_133 -> m8_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_85  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_22  [key=2, style=dotted];
m8_135 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_136 -> m8_132  [key=0, style=bold, color=blue];
m8_158 -> m8_159  [key=0, style=solid];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_62  [key=2, style=dotted];
m8_159 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_159 -> m8_161  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_159 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_13  [key=2, style=dotted];
m8_160 -> m8_14  [key=2, style=dotted];
m8_160 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_152  [key=2, style=dotted];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> n9  [key=2, style=dotted];
m8_163 -> m8_158  [key=0, style=bold, color=blue];
m8_180 -> m8_181  [key=0, style=solid];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_62  [key=2, style=dotted];
m8_181 -> m8_183  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_181 -> m8_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_152  [key=2, style=dotted];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_22  [key=2, style=dotted];
m8_183 -> m8_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_184 -> m8_180  [key=0, style=bold, color=blue];
m8_94 -> m8_95  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_62  [key=2, style=dotted];
m8_95 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_95 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_85  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_90  [key=2, style=dotted];
m8_97 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_98 -> m8_94  [key=0, style=bold, color=blue];
m8_188 -> m8_189  [key=0, style=solid];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_62  [key=2, style=dotted];
m8_189 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_189 -> m8_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_190 -> m8_191  [key=0, style=solid];
m8_190 -> m8_152  [key=2, style=dotted];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_90  [key=2, style=dotted];
m8_191 -> m8_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_192 -> m8_188  [key=0, style=bold, color=blue];
m8_77 -> m8_78  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_62  [key=2, style=dotted];
m8_78 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_22  [key=2, style=dotted];
m8_79 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> n9  [key=2, style=dotted];
m8_81 -> m8_77  [key=0, style=bold, color=blue];
m8_140 -> m8_141  [key=0, style=solid];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_62  [key=2, style=dotted];
m8_141 -> m8_143  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_142 -> m8_143  [key=0, style=solid];
m8_142 -> m8_85  [key=2, style=dotted];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_71  [key=2, style=dotted];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_109  [key=2, style=dotted];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> n9  [key=2, style=dotted];
m8_146 -> m8_140  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_22  [key=2, style=dotted];
m8_41 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> n9  [key=2, style=dotted];
m8_43 -> m8_40  [key=0, style=bold, color=blue];
m8_102 -> m8_103  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_62  [key=2, style=dotted];
m8_103 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_22  [key=2, style=dotted];
m8_104 -> m8_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_105 -> m8_102  [key=0, style=bold, color=blue];
m8_218 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_218 -> m8_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m8_219 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_220 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_221 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_222 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_223 -> m8_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_224 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_225 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_226 -> m8_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_227 -> m8_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m8_228 -> m8_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_4  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> n9  [key=2, style=dotted, color=green];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid, color=green];
m9_8 -> m9_10  [key=2, style=dotted, color=green];
m9_8 -> m9_11  [key=2, style=dotted, color=green];
m9_8 -> m9_12  [key=2, style=dotted, color=green];
m9_7 -> m9_8  [key=0, style=solid, color=green];
m9_7 -> m9_4  [key=2, style=dotted];
m9_9 -> m9_6  [key=0, style=bold, color=blue];
m10_39 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_42 -> m10_45  [key=0, style=solid];
m10_42 -> m10_37  [key=2, style=dotted];
m10_42 -> m10_46  [key=2, style=dotted];
m10_41 -> d24  [key=2, style=dotted];
m10_41 -> m10_45  [key=0, style=solid];
m10_40 -> m10_42  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_34  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_47  [key=2, style=dotted];
m10_44 -> m10_48  [key=2, style=dotted];
m10_43 -> m10_44  [key=0, style=solid];
m10_45 -> m10_39  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_0 -> m10_2  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_3 -> m10_0  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid, color=green];
m10_4 -> m10_7  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m10_4 -> m10_9  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
m10_4 -> m10_11  [key=1, style=dashed, color=green, label="Hangfire.Storage.IStorageConnection"];
m10_4 -> m10_12  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m10_4 -> m10_13  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_5 -> m10_7  [key=0, style=solid, color=green];
m10_6 -> m10_15  [key=0, style=solid, color=green];
m10_6 -> d24  [key=2, style=dotted, color=green];
m10_7 -> m10_8  [key=0, style=solid, color=green];
m10_7 -> m10_9  [key=0, style=solid, color=green];
m10_8 -> m10_15  [key=0, style=solid, color=green];
m10_8 -> d24  [key=2, style=dotted, color=green];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_15  [key=0, style=solid, color=green];
m10_10 -> d24  [key=2, style=dotted, color=green];
m10_11 -> m10_12  [key=0, style=solid, color=green];
m10_12 -> m10_13  [key=0, style=solid, color=green];
m10_13 -> m10_14  [key=0, style=solid, color=green];
m10_14 -> m10_15  [key=0, style=solid, color=green];
m10_14 -> m10_17  [key=2, style=dotted, color=green];
m10_15 -> m10_4  [key=0, style=bold, color=blue];
m10_24 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_24 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_24 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [key=0, style=solid];
m10_30 -> m10_37  [key=2, style=dotted];
m10_31 -> m10_33  [key=0, style=solid];
m10_31 -> m10_38  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_26 -> d24  [key=2, style=dotted];
m10_26 -> m10_33  [key=0, style=solid];
m10_25 -> m10_27  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_34  [key=2, style=dotted];
m10_28 -> m10_33  [key=0, style=solid];
m10_28 -> m10_35  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m10_29 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m10_29 -> m10_36  [key=2, style=dotted];
m10_33 -> m10_24  [key=0, style=bold, color=blue];
m10_49 -> m10_1  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_2  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_11  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_12  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_13  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_14  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m10_49 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_3 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.FailedJobDto"];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [key=1, style=dashed, color=red, label="System.Exception"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid, color=red];
m12_3 -> m12_4  [key=0, style=solid, color=red];
m12_2 -> m12_4  [key=0, style=solid];
m12_2 -> d24  [key=2, style=dotted];
m12_4 -> m12_0  [key=0, style=bold, color=blue];
m12_6 -> m12_7  [key=0, style=solid, color=red];
m12_7 -> m12_8  [key=0, style=solid, color=red];
m12_7 -> m12_9  [key=2, style=dotted, color=red];
m12_7 -> m12_10  [key=2, style=dotted, color=red];
m12_7 -> m12_11  [key=2, style=dotted, color=red];
m12_7 -> m12_12  [key=2, style=dotted, color=red];
m12_8 -> m12_6  [key=0, style=bold, color=blue];
m12_13 -> m12_3  [key=1, style=dashed, color=red, label="HangFire.States.FailedState"];
m12_13 -> m12_7  [key=1, style=dashed, color=red, label="HangFire.States.FailedState"];
m13_10 -> m13_11  [key=0, style=solid, color=green];
m13_10 -> n9  [key=2, style=dotted, color=green];
m13_11 -> m13_10  [key=0, style=bold, color=blue];
m13_11 -> m13_8  [key=0, style=bold, color=blue];
m13_7 -> m13_6  [key=0, style=bold, color=blue];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_22  [key=0, style=bold, color=blue];
m13_12 -> m13_13  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid, color=green];
m13_9 -> m13_7  [key=2, style=dotted];
m13_9 -> m13_12  [key=2, style=dotted];
m13_9 -> m13_8  [key=0, style=bold, color=blue];
m13_18 -> m13_19  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_14  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid, color=green];
m13_15 -> m13_7  [key=2, style=dotted];
m13_15 -> m13_18  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_4  [key=0, style=bold, color=blue];
m13_20 -> m13_21  [key=0, style=solid];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_1 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_19 -> m13_18  [key=0, style=bold, color=blue];
m13_16 -> m13_17  [key=0, style=solid, color=green];
m13_16 -> m13_19  [key=2, style=dotted, color=green];
m13_16 -> m13_20  [key=2, style=dotted, color=green];
m13_16 -> m13_21  [key=2, style=dotted, color=green];
m13_17 -> m13_14  [key=0, style=bold, color=blue];
m13_17 -> m13_16  [key=0, style=bold, color=blue];
m13_13 -> m13_12  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_7  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_4  [key=0, style=bold, color=blue];
m13_21 -> m13_20  [key=0, style=bold, color=blue];
m13_24 -> m13_25  [key=0, style=solid];
m13_25 -> m13_24  [key=0, style=bold, color=blue];
m14_22 -> m14_23  [key=0, style=solid];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=2, style=dotted];
m14_24 -> m14_22  [key=0, style=bold, color=blue];
m14_36 -> m14_37  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_43  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_22  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_30  [key=2, style=dotted];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_44  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_26  [key=2, style=dotted];
m14_42 -> m14_36  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_6  [key=2, style=dotted];
m14_2 -> m14_7  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_21  [key=2, style=dotted];
m14_20 -> m14_18  [key=0, style=bold, color=blue];
m14_26 -> m14_27  [key=0, style=solid];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [key=2, style=dotted];
m14_28 -> m14_26  [key=0, style=bold, color=blue];
m14_59 -> m14_60  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_43  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_22  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_30  [key=2, style=dotted];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_67  [key=2, style=dotted];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_44  [key=2, style=dotted];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_26  [key=2, style=dotted];
m14_66 -> m14_59  [key=0, style=bold, color=blue];
m14_68 -> m14_69  [key=0, style=solid];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_43  [key=2, style=dotted];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_22  [key=2, style=dotted];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_30  [key=2, style=dotted];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_67  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_35  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_44  [key=2, style=dotted];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_26  [key=2, style=dotted];
m14_76 -> m14_68  [key=0, style=bold, color=blue];
m14_45 -> m14_46  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_43  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_22  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_30  [key=2, style=dotted];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_57  [key=2, style=dotted];
m14_49 -> m14_51  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_49 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_49 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_49 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_58  [key=2, style=dotted];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_58  [key=2, style=dotted];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_58  [key=2, style=dotted];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_58  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_44  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_26  [key=2, style=dotted];
m14_56 -> m14_45  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_9  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_34  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_35  [key=2, style=dotted];
m14_33 -> m14_30  [key=0, style=bold, color=blue];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_17  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_0  [key=2, style=dotted];
m14_17 -> m14_14  [key=0, style=bold, color=blue];
m14_77 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m14_77 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_20  [key=3, color=darkorchid, style=bold, label="method methodReturn T Line"];
m15_35 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m15_36 -> m15_35  [key=0, style=bold, color=blue];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_8  [key=3, color=darkorchid, style=bold, label="method methodReturn T Method"];
m15_27 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m15_28 -> m15_27  [key=0, style=bold, color=blue];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_11  [key=3, color=darkorchid, style=bold, label="method methodReturn T ParameterType"];
m15_29 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m15_30 -> m15_29  [key=0, style=bold, color=blue];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_31  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_14  [key=0, style=bold, color=blue];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_29  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_11  [key=0, style=bold, color=blue];
m15_40 -> m15_42  [key=0, style=solid];
m15_40 -> m15_43  [key=1, style=dashed, color=red, label=string];
m15_40 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_40 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_40 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_40 -> m15_66  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m15_40 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_40 -> m15_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_40 -> m15_37  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m15_42 -> m15_43  [key=0, style=solid, color=red];
m15_42 -> d13  [key=2, style=dotted];
m15_43 -> m15_44  [key=0, style=solid, color=red];
m15_43 -> m15_47  [key=2, style=dotted, color=red];
m15_43 -> m15_52  [key=1, style=dashed, color=red, label="lambda expression"];
m15_43 -> m15_55  [key=1, style=dashed, color=red, label="lambda expression"];
m15_43 -> m15_58  [key=1, style=dashed, color=red, label="lambda expression"];
m15_43 -> m15_61  [key=1, style=dashed, color=red, label="lambda expression"];
m15_43 -> m15_65  [key=1, style=dashed, color=red, label="lambda expression"];
m15_43 -> m15_68  [key=1, style=dashed, color=red, label="lambda expression"];
m15_43 -> m15_43  [key=3, color=red, style=bold, label="Local variable string arrangeSql"];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_48  [key=2, style=dotted];
m15_44 -> m15_49  [key=2, style=dotted];
m15_44 -> m15_50  [key=2, style=dotted];
m15_44 -> m15_51  [key=2, style=dotted];
m15_44 -> m15_23  [key=2, style=dotted];
m15_44 -> m15_44  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m15_44 -> m15_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_45 -> m15_40  [key=0, style=bold, color=blue];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_25  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_5  [key=0, style=bold, color=blue];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_5  [key=3, color=darkorchid, style=bold, label="method methodReturn T Type"];
m15_25 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m15_26 -> m15_25  [key=0, style=bold, color=blue];
m15_71 -> m15_72  [key=0, style=solid];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_23  [key=2, style=dotted];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_25  [key=2, style=dotted];
m15_56 -> m15_27  [key=2, style=dotted];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_29  [key=2, style=dotted];
m15_59 -> m15_31  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid, color=red];
m15_66 -> m15_33  [key=2, style=dotted, color=red];
m15_66 -> m15_35  [key=2, style=dotted, color=red];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label=pe];
m15_52 -> m15_53  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_58 -> m15_59  [key=0, style=solid];
m15_61 -> m15_62  [key=0, style=solid];
m15_65 -> m15_66  [key=0, style=solid, color=red];
m15_68 -> m15_69  [key=0, style=solid];
m15_54 -> m15_52  [key=0, style=bold, color=blue];
m15_57 -> m15_55  [key=0, style=bold, color=blue];
m15_60 -> m15_58  [key=0, style=bold, color=blue];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_64  [key=2, style=dotted];
m15_63 -> m15_61  [key=0, style=bold, color=blue];
m15_67 -> m15_65  [key=0, style=bold, color=blue];
m15_70 -> m15_68  [key=0, style=bold, color=blue];
m15_72 -> m15_73  [key=0, style=solid];
m15_73 -> m15_71  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_23  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=2, style=dotted];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_17  [key=3, color=darkorchid, style=bold, label="method methodReturn T File"];
m15_33 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m15_34 -> m15_33  [key=0, style=bold, color=blue];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_0  [key=3, color=darkorchid, style=bold, label="method methodReturn T Text"];
m15_23 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable string text"];
m15_24 -> m15_23  [key=0, style=bold, color=blue];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_33  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m15_18 -> m15_19  [key=0, style=solid];
m15_19 -> m15_17  [key=0, style=bold, color=blue];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_35  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m15_21 -> m15_22  [key=0, style=solid];
m15_22 -> m15_20  [key=0, style=bold, color=blue];
m15_37 -> m15_38  [key=0, style=solid];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_40  [key=2, style=dotted];
m15_38 -> m15_41  [key=2, style=dotted];
m15_39 -> m15_37  [key=0, style=bold, color=blue];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_27  [key=3, color=darkorchid, style=bold, label="Parameter variable string markup"];
m15_9 -> m15_10  [key=0, style=solid];
m15_10 -> m15_8  [key=0, style=bold, color=blue];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_14  [key=3, color=darkorchid, style=bold, label="method methodReturn T ParameterName"];
m15_31 -> m15_43  [key=3, color=red, style=bold, label="Parameter variable T markup"];
m15_32 -> m15_31  [key=0, style=bold, color=blue];
m15_74 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.StackTraceHtmlFragments"];
m15_74 -> m15_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.StackTraceHtmlFragments"];
m15_74 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.StackTraceHtmlFragments"];
m15_74 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.StackTraceHtmlFragments"];
m15_74 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.StackTraceHtmlFragments"];
m15_74 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.StackTraceHtmlFragments"];
m15_75 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_75 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_75 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m15_75 -> m15_66  [key=1, style=dashed, color=red, label="Hangfire.IStackTraceFormatter<T>"];
m15_75 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IStackTraceFormatter<T>"];
m16_6 -> m16_9  [key=0, style=solid, color=red];
m16_6 -> m16_11  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobStateHandler"];
m16_9 -> m16_10  [key=0, style=solid, color=red];
m16_9 -> m16_11  [key=0, style=solid, color=red];
m16_11 -> m16_12  [key=0, style=solid, color=red];
m16_11 -> m16_14  [key=2, style=dotted, color=red];
m16_10 -> m16_12  [key=0, style=solid, color=red];
m16_10 -> d24  [key=2, style=dotted, color=red];
m16_12 -> m16_6  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid, color=red];
m16_1 -> m16_2  [key=0, style=solid, color=red];
m16_1 -> m16_5  [key=2, style=dotted, color=red];
m16_1 -> m16_6  [key=2, style=dotted, color=red];
m16_2 -> m16_3  [key=0, style=solid, color=red];
m16_2 -> m16_7  [key=2, style=dotted, color=red];
m16_2 -> m16_6  [key=2, style=dotted, color=red];
m16_3 -> m16_4  [key=0, style=solid, color=red];
m16_3 -> m16_8  [key=2, style=dotted, color=red];
m16_3 -> m16_6  [key=2, style=dotted, color=red];
m16_4 -> m16_0  [key=0, style=bold, color=blue];
m16_15 -> m16_16  [key=0, style=solid, color=red];
m16_16 -> m16_17  [key=0, style=solid, color=red];
m16_17 -> m16_15  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_6  [key=2, style=dotted, color=green];
m17_2 -> m17_3  [key=0, style=solid, color=green];
m17_2 -> m17_7  [key=2, style=dotted, color=green];
m17_2 -> m17_8  [key=2, style=dotted, color=green];
m17_3 -> m17_4  [key=0, style=solid, color=green];
m17_3 -> m17_9  [key=2, style=dotted, color=green];
m17_3 -> m17_8  [key=2, style=dotted, color=green];
m17_4 -> m17_5  [key=0, style=solid, color=green];
m17_4 -> m17_10  [key=2, style=dotted, color=green];
m17_4 -> m17_8  [key=2, style=dotted, color=green];
m17_5 -> m17_0  [key=0, style=bold, color=blue];
m18_28 -> m18_29  [key=0, style=solid];
m18_29 -> m18_30  [key=0, style=solid];
m18_30 -> m18_28  [key=0, style=bold, color=blue];
m18_23 -> m18_31  [key=0, style=solid];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_33  [key=2, style=dotted];
m18_31 -> m18_34  [key=2, style=dotted];
m18_31 -> m18_35  [key=2, style=dotted];
m18_32 -> m18_23  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m18_0 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SharedWorkerContext"];
m18_0 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_2 -> m18_7  [key=0, style=solid];
m18_2 -> d24  [key=2, style=dotted];
m18_4 -> m18_7  [key=0, style=solid];
m18_4 -> m18_9  [key=2, style=dotted];
m18_7 -> m18_0  [key=0, style=bold, color=blue];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_21  [key=2, style=dotted];
m18_11 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label=workerRunners];
m18_11 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label=workerRunners];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_27  [key=2, style=dotted];
m18_19 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_12 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_23  [key=2, style=dotted];
m18_15 -> m18_24  [key=2, style=dotted];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_25  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_17  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_22  [key=2, style=dotted];
m18_16 -> m18_13  [key=0, style=solid];
m18_16 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label=i];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_26  [key=2, style=dotted];
m18_20 -> m18_10  [key=0, style=bold, color=blue];
m18_36 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m18_36 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m18_36 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m18_36 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m18_36 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m18_36 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerManager"];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_6  [key=2, style=dotted];
m19_5 -> m19_2  [key=0, style=bold, color=blue];
m19_7 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.ExpressionUtil.LambdaExpressionFingerprint"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=green];
m22_0 -> m22_2  [key=1, style=dashed, color=green, label=string];
m22_0 -> m22_3  [key=1, style=dashed, color=green, label=string];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_2 -> m22_3  [key=0, style=solid, color=green];
m22_3 -> m22_4  [key=0, style=solid, color=green];
m22_4 -> m22_0  [key=0, style=bold, color=blue];
m23_37 -> m23_38  [key=0, style=solid];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_41  [key=2, style=dotted];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_28  [key=2, style=dotted];
m23_40 -> m23_37  [key=0, style=bold, color=blue];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_4  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m23_58 -> m23_63  [key=0, style=solid];
m23_58 -> m23_65  [key=0, style=bold, color=crimson];
m23_58 -> m23_66  [key=0, style=bold, color=crimson];
m23_58 -> m23_67  [key=0, style=bold, color=crimson];
m23_58 -> m23_68  [key=0, style=bold, color=crimson];
m23_58 -> m23_69  [key=0, style=bold, color=crimson];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_71  [key=2, style=dotted];
m23_63 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m23_63 -> m23_69  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m23_65 -> m23_66  [key=0, style=solid];
m23_65 -> m23_74  [key=2, style=dotted];
m23_66 -> m23_67  [key=0, style=solid];
m23_66 -> m23_75  [key=2, style=dotted];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_76  [key=2, style=dotted];
m23_68 -> m23_69  [key=0, style=solid];
m23_68 -> m23_77  [key=2, style=dotted];
m23_69 -> m23_70  [key=0, style=solid];
m23_69 -> m23_78  [key=2, style=dotted];
m23_69 -> m23_79  [key=2, style=dotted];
m23_69 -> m23_80  [key=2, style=dotted];
m23_69 -> m23_81  [key=2, style=dotted];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_72  [key=2, style=dotted];
m23_64 -> m23_73  [key=2, style=dotted];
m23_70 -> m23_58  [key=0, style=bold, color=blue];
m23_21 -> m23_22  [key=0, style=solid];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_28  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_29  [key=2, style=dotted];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_30  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_31  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_32  [key=2, style=dotted];
m23_27 -> m23_21  [key=0, style=bold, color=blue];
m23_20 -> m23_42  [key=0, style=solid];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_46  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_47  [key=2, style=dotted];
m23_43 -> m23_48  [key=2, style=dotted];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_49  [key=2, style=dotted];
m23_44 -> m23_50  [key=2, style=dotted];
m23_45 -> m23_20  [key=0, style=bold, color=blue];
m23_82 -> m23_83  [key=0, style=solid];
m23_83 -> m23_84  [key=0, style=solid];
m23_83 -> m23_85  [key=2, style=dotted];
m23_83 -> m23_86  [key=2, style=dotted];
m23_84 -> m23_82  [key=0, style=bold, color=blue];
m23_33 -> m23_34  [key=0, style=solid];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_36  [key=2, style=dotted];
m23_35 -> m23_33  [key=0, style=bold, color=blue];
m23_51 -> m23_52  [key=0, style=solid];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_57  [key=2, style=dotted];
m23_52 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label=supervisors];
m23_52 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label=supervisors];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_58  [key=2, style=dotted];
m23_53 -> m23_59  [key=2, style=dotted];
m23_53 -> m23_60  [key=2, style=dotted];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_61  [key=2, style=dotted];
m23_54 -> m23_59  [key=2, style=dotted];
m23_54 -> m23_60  [key=2, style=dotted];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_62  [key=2, style=dotted];
m23_56 -> m23_51  [key=0, style=bold, color=blue];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m23_6 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m23_6 -> m23_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_9  [key=0, style=solid];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_11  [key=0, style=solid];
m23_11 -> m23_12  [key=0, style=solid];
m23_12 -> m23_13  [key=0, style=solid];
m23_8 -> m23_15  [key=0, style=solid];
m23_8 -> d24  [key=2, style=dotted];
m23_10 -> m23_15  [key=0, style=solid];
m23_10 -> d24  [key=2, style=dotted];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_17  [key=2, style=dotted];
m23_13 -> m23_18  [key=2, style=dotted];
m23_13 -> m23_19  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_20  [key=2, style=dotted];
m23_15 -> m23_6  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_2  [key=0, style=bold, color=blue];
m23_87 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m23_87 -> m23_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m27_25 -> m27_32  [key=0, style=solid];
m27_25 -> m27_18  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo> parameters"];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_37  [key=0, style=solid];
m27_32 -> m27_35  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_35  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_32  [key=0, style=solid];
m27_34 -> m27_37  [key=0, style=solid];
m27_34 -> m27_38  [key=2, style=dotted];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_39  [key=2, style=dotted];
m27_37 -> m27_25  [key=0, style=bold, color=blue];
m27_28 -> m27_29  [key=0, style=solid];
m27_29 -> m27_30  [key=0, style=solid];
m27_29 -> m27_31  [key=2, style=dotted];
m27_30 -> m27_28  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [key=0, style=bold, color=blue];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m27_2 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m27_2 -> m27_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_5  [key=0, style=solid];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_7  [key=0, style=solid];
m27_7 -> m27_8  [key=0, style=solid];
m27_8 -> m27_9  [key=0, style=solid];
m27_4 -> m27_9  [key=0, style=solid];
m27_4 -> d24  [key=2, style=dotted];
m27_6 -> m27_9  [key=0, style=solid];
m27_6 -> d24  [key=2, style=dotted];
m27_9 -> m27_2  [key=0, style=bold, color=blue];
m27_11 -> m27_12  [key=0, style=solid, color=red];
m27_11 -> m27_14  [key=1, style=dashed, color=red, label="string[]"];
m27_11 -> m27_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m27_11 -> m27_18  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m27_11 -> m27_20  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m27_12 -> m27_13  [key=0, style=solid, color=red];
m27_12 -> m27_14  [key=0, style=solid, color=red];
m27_14 -> m27_15  [key=0, style=solid, color=red];
m27_14 -> m27_16  [key=0, style=solid, color=red];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_18  [key=0, style=solid, color=red];
m27_18 -> m27_19  [key=0, style=solid, color=red];
m27_18 -> m27_24  [key=2, style=dotted, color=red];
m27_20 -> m27_21  [key=0, style=solid, color=red];
m27_20 -> m27_26  [key=2, style=dotted, color=red];
m27_20 -> m27_22  [key=1, style=dashed, color=red, label=context];
m27_13 -> m27_23  [key=0, style=solid, color=red];
m27_13 -> d24  [key=2, style=dotted, color=red];
m27_15 -> m27_23  [key=0, style=solid, color=red];
m27_15 -> d24  [key=2, style=dotted, color=red];
m27_17 -> m27_23  [key=0, style=solid];
m27_17 -> d24  [key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid, color=red];
m27_19 -> m27_25  [key=2, style=dotted];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_27  [key=2, style=dotted];
m27_22 -> m27_23  [key=0, style=solid];
m27_23 -> m27_11  [key=0, style=bold, color=blue];
m27_40 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m27_40 -> m27_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m27_40 -> m27_20  [key=1, style=dashed, color=red, label="HangFire.Client.JobClient"];
m27_40 -> m27_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m27_40 -> m27_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [key=0, style=bold, color=blue];
m29_33 -> m29_34  [key=0, style=solid, color=red];
m29_34 -> m29_35  [key=0, style=solid, color=red];
m29_34 -> n8  [key=2, style=dotted, color=red];
m29_34 -> m29_36  [key=1, style=dashed, color=red, label="lambda expression"];
m29_35 -> m29_33  [key=0, style=bold, color=blue];
m29_56 -> m29_57  [key=0, style=solid];
m29_57 -> m29_56  [key=0, style=bold, color=blue];
m29_58 -> m29_59  [key=0, style=solid];
m29_59 -> m29_58  [key=0, style=bold, color=blue];
m29_40 -> m29_41  [key=0, style=solid, color=red];
m29_41 -> m29_42  [key=0, style=solid, color=red];
m29_41 -> n8  [key=2, style=dotted, color=red];
m29_41 -> m29_43  [key=1, style=dashed, color=red, label="lambda expression"];
m29_42 -> m29_40  [key=0, style=bold, color=blue];
m29_60 -> m29_61  [key=0, style=solid];
m29_61 -> m29_62  [key=0, style=solid];
m29_62 -> m29_60  [key=0, style=bold, color=blue];
m29_53 -> m29_54  [key=0, style=solid, color=red];
m29_54 -> m29_55  [key=0, style=solid, color=red];
m29_54 -> m29_39  [key=2, style=dotted, color=red];
m29_55 -> m29_53  [key=0, style=bold, color=blue];
m29_49 -> m29_50  [key=0, style=solid, color=red];
m29_17 -> m29_18  [key=0, style=solid];
m29_18 -> m29_19  [key=0, style=solid];
m29_19 -> m29_17  [key=0, style=bold, color=blue];
m29_24 -> m29_25  [key=0, style=solid];
m29_25 -> m29_26  [key=0, style=solid];
m29_25 -> m29_13  [key=2, style=dotted];
m29_26 -> m29_24  [key=0, style=bold, color=blue];
m29_30 -> m29_31  [key=0, style=solid];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_13  [key=2, style=dotted];
m29_32 -> m29_30  [key=0, style=bold, color=blue];
m29_36 -> m29_37  [key=0, style=solid, color=red];
m29_37 -> m29_38  [key=0, style=solid, color=red];
m29_37 -> m29_39  [key=2, style=dotted, color=red];
m29_38 -> m29_36  [key=0, style=bold, color=blue];
m29_43 -> m29_44  [key=0, style=solid, color=red];
m29_44 -> m29_45  [key=0, style=solid, color=red];
m29_44 -> m29_39  [key=2, style=dotted, color=red];
m29_45 -> m29_43  [key=0, style=bold, color=blue];
m29_50 -> m29_51  [key=0, style=solid, color=red];
m29_50 -> m29_52  [key=2, style=dotted, color=red];
m29_51 -> m29_49  [key=0, style=bold, color=blue];
m29_27 -> m29_28  [key=0, style=solid];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> n8  [key=2, style=dotted];
m29_28 -> m29_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_29 -> m29_27  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_8  [key=2, style=dotted];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_9  [key=2, style=dotted];
m29_2 -> m29_10  [key=2, style=dotted];
m29_2 -> m29_11  [key=2, style=dotted];
m29_2 -> m29_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_12  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid, color=red];
m29_4 -> m29_13  [key=2, style=dotted];
m29_5 -> m29_6  [key=0, style=solid, color=red];
m29_5 -> m29_14  [key=2, style=dotted, color=red];
m29_6 -> m29_7  [key=0, style=solid, color=red];
m29_6 -> m29_15  [key=2, style=dotted, color=red];
m29_6 -> m29_16  [key=2, style=dotted, color=red];
m29_7 -> m29_0  [key=0, style=bold, color=blue];
m29_20 -> m29_21  [key=0, style=solid];
m29_21 -> m29_22  [key=0, style=solid];
m29_21 -> n8  [key=2, style=dotted];
m29_21 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_22 -> m29_20  [key=0, style=bold, color=blue];
m29_46 -> m29_47  [key=0, style=solid, color=red];
m29_47 -> m29_48  [key=0, style=solid, color=red];
m29_47 -> n8  [key=2, style=dotted, color=red];
m29_47 -> m29_49  [key=1, style=dashed, color=red, label="lambda expression"];
m29_48 -> m29_46  [key=0, style=bold, color=blue];
m29_63 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_5  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_6  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_34  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_37  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_41  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_44  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_47  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_50  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m29_63 -> m29_54  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Client.JobClientTests"];
m30_42 -> m30_43  [key=0, style=solid];
m30_33 -> m30_28  [key=0, style=bold, color=blue];
m30_47 -> m30_48  [key=0, style=solid];
m30_47 -> m30_50  [key=2, style=dotted];
m30_30 -> m30_32  [key=0, style=solid];
m30_30 -> m30_37  [key=2, style=dotted];
m30_53 -> m30_54  [key=0, style=solid];
m30_6 -> m30_7  [key=0, style=solid, color=green];
m30_6 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m30_6 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m30_6 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m30_6 -> m30_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m30_6 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m30_6 -> m30_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m30_6 -> m30_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m30_6 -> m30_8  [key=0, style=solid, color=green];
m30_7 -> m30_8  [key=0, style=solid, color=red];
m30_7 -> m30_9  [key=0, style=solid, color=green];
m30_7 -> d24  [key=2, style=dotted, color=green];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_11  [key=0, style=solid];
m30_9 -> m30_5  [key=0, style=bold, color=blue];
m30_11 -> m30_12  [key=0, style=solid, color=green];
m30_11 -> m30_13  [key=0, style=solid];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_15  [key=0, style=solid];
m30_13 -> m30_11  [key=0, style=bold, color=blue];
m30_15 -> m30_16  [key=0, style=solid, color=green];
m30_16 -> m30_17  [key=0, style=solid, color=green];
m30_16 -> m30_18  [key=2, style=dotted, color=green];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_15  [key=0, style=bold, color=blue];
m30_18 -> m30_19  [key=0, style=solid];
m30_8 -> m30_20  [key=0, style=solid, color=red];
m30_8 -> d24  [key=2, style=dotted, color=red];
m30_8 -> m30_9  [key=0, style=solid, color=green];
m30_10 -> m30_20  [key=0, style=solid];
m30_10 -> d24  [key=2, style=dotted];
m30_12 -> m30_20  [key=0, style=solid];
m30_12 -> d24  [key=2, style=dotted];
m30_12 -> m30_13  [key=0, style=solid, color=green];
m30_12 -> m30_14  [key=2, style=dotted, color=green];
m30_12 -> m30_15  [key=1, style=dashed, color=green, label="lambda expression"];
m30_14 -> m30_20  [key=0, style=solid];
m30_14 -> d24  [key=2, style=dotted];
m30_19 -> m30_20  [key=0, style=solid, color=green];
m30_19 -> m30_22  [key=2, style=dotted];
m30_19 -> m30_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_19 -> m30_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_20 -> m30_6  [key=0, style=bold, color=blue];
m30_20 -> m30_21  [key=0, style=solid, color=green];
m30_20 -> m30_28  [key=2, style=dotted, color=green];
m30_20 -> m30_24  [key=1, style=dashed, color=green, label=filterInfo];
m30_44 -> m30_38  [key=0, style=bold, color=blue];
m30_49 -> m30_50  [key=0, style=solid];
m30_49 -> m30_53  [key=2, style=dotted];
m30_5 -> m30_6  [key=0, style=solid, color=green];
m30_5 -> m30_8  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<object>"];
m30_5 -> m30_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<object>"];
m30_5 -> m30_0  [key=0, style=bold, color=blue];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_46  [key=2, style=dotted];
m30_43 -> m30_47  [key=2, style=dotted];
m30_56 -> m30_57  [key=0, style=solid];
m30_56 -> m30_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m30_56 -> m30_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m30_56 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m30_56 -> m30_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m30_56 -> m30_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.IClientFilter"];
m30_56 -> m30_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.IClientFilter"];
m30_56 -> m30_61  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Client.Filters.CreatedContext InvokeClientFilter"];
m30_59 -> m30_50  [key=2, style=dotted];
m30_59 -> m30_72  [key=0, style=solid];
m30_65 -> m30_50  [key=2, style=dotted];
m30_65 -> m30_66  [key=0, style=solid];
m30_65 -> m30_67  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m30_65 -> m30_70  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m30_65 -> m30_71  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m30_57 -> m30_58  [key=0, style=solid];
m30_57 -> m30_73  [key=2, style=dotted];
m30_58 -> m30_59  [key=0, style=solid];
m30_58 -> m30_60  [key=0, style=solid];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_69  [key=0, style=solid];
m30_62 -> m30_74  [key=2, style=dotted];
m30_66 -> m30_67  [key=0, style=solid];
m30_66 -> m30_75  [key=2, style=dotted];
m30_70 -> m30_71  [key=0, style=solid];
m30_70 -> m30_75  [key=2, style=dotted];
m30_61 -> m30_62  [key=0, style=solid];
m30_64 -> m30_65  [key=0, style=solid];
m30_64 -> m30_69  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m30_67 -> m30_68  [key=0, style=solid];
m30_67 -> m30_69  [key=0, style=solid];
m30_71 -> m30_72  [key=0, style=solid];
m30_68 -> m30_72  [key=0, style=solid];
m30_60 -> m30_61  [key=0, style=solid];
m30_60 -> m30_60  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m30_63 -> m30_64  [key=0, style=solid];
m30_69 -> m30_70  [key=0, style=solid];
m30_69 -> m30_71  [key=0, style=solid];
m30_72 -> m30_56  [key=0, style=bold, color=blue];
m30_22 -> m30_23  [key=0, style=solid];
m30_46 -> m30_47  [key=0, style=solid];
m30_46 -> m30_49  [key=2, style=dotted];
m30_45 -> m30_46  [key=0, style=solid];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_0 -> m30_3  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m30_0 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_1 -> m30_2  [key=0, style=solid];
m30_2 -> m30_3  [key=0, style=solid, color=red];
m30_3 -> m30_4  [key=0, style=solid, color=red];
m30_4 -> m30_5  [key=0, style=solid];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_27  [key=0, style=solid];
m30_21 -> m30_29  [key=2, style=dotted];
m30_24 -> m30_25  [key=0, style=solid];
m30_24 -> m30_31  [key=2, style=dotted];
m30_24 -> m30_26  [key=0, style=solid];
m30_24 -> m30_33  [key=2, style=dotted];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_30  [key=2, style=dotted];
m30_23 -> m30_25  [key=1, style=dashed, color=darkseagreen4, label=exceptionContext];
m30_23 -> m30_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m30_23 -> m30_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_23 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_25 -> m30_27  [key=0, style=solid];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_32  [key=0, style=solid];
m30_25 -> d24  [key=2, style=dotted];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_28  [key=0, style=solid];
m30_27 -> m30_19  [key=0, style=bold, color=blue];
m30_27 -> m30_32  [key=0, style=solid];
m30_27 -> m30_34  [key=2, style=dotted];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_41  [key=2, style=dotted];
m30_36 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m30_36 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_56  [key=2, style=dotted];
m30_48 -> m30_45  [key=0, style=bold, color=blue];
m30_48 -> m30_49  [key=0, style=solid];
m30_51 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m30_51 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m30_51 -> m30_52  [key=0, style=solid];
m30_55 -> m30_53  [key=0, style=bold, color=blue];
m30_55 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_3  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_55 -> m30_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m30_52 -> m30_51  [key=0, style=bold, color=blue];
m30_52 -> m30_48  [key=0, style=bold, color=blue];
m30_50 -> m30_51  [key=0, style=solid];
m30_50 -> m30_54  [key=2, style=dotted];
m30_28 -> m30_32  [key=0, style=solid, color=green];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_35  [key=2, style=dotted];
m30_28 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m30_28 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m30_32 -> m30_33  [key=0, style=solid, color=green];
m30_32 -> m30_34  [key=2, style=dotted, color=green];
m30_32 -> m30_35  [key=2, style=dotted, color=green];
m30_32 -> m30_23  [key=0, style=bold, color=blue];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_31  [key=0, style=solid];
m30_29 -> m30_36  [key=2, style=dotted];
m30_29 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_29 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_29 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_29 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>"];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_76  [key=0, style=solid];
m30_31 -> m30_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.ClientExceptionContext"];
m30_76 -> m30_78  [key=0, style=solid];
m30_76 -> m30_77  [key=0, style=solid];
m30_76 -> m30_42  [key=2, style=dotted];
m30_77 -> m30_76  [key=0, style=solid];
m30_77 -> m30_79  [key=2, style=dotted];
m30_78 -> m30_31  [key=0, style=bold, color=blue];
m30_38 -> m30_39  [key=0, style=solid];
m30_38 -> m30_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_38 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_38 -> m30_42  [key=2, style=dotted];
m30_38 -> m30_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_39 -> m30_40  [key=0, style=solid];
m30_39 -> m30_41  [key=0, style=solid];
m30_39 -> m30_33  [key=2, style=dotted];
m30_39 -> m30_44  [key=2, style=dotted];
m30_41 -> m30_44  [key=0, style=solid];
m30_41 -> m30_36  [key=2, style=dotted];
m30_41 -> m30_45  [key=2, style=dotted];
m30_40 -> m30_44  [key=0, style=solid];
m30_40 -> d24  [key=2, style=dotted];
m30_40 -> m30_29  [key=0, style=bold, color=blue];
m30_37 -> m30_37  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<HangFire.Client.Filters.CreatedContext> continuation"];
m30_37 -> m30_38  [key=0, style=solid];
m30_80 -> m30_8  [key=1, style=dashed, color=green, label="HangFire.Client.JobCreator"];
m30_80 -> m30_20  [key=1, style=dashed, color=green, label="HangFire.Client.JobCreator"];
m30_80 -> m30_32  [key=1, style=dashed, color=green, label="HangFire.Client.JobCreator"];
m30_81 -> m30_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<object>"];
m30_82 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_82 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m30_83 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m30_84 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Client.Filters.CreatedContext>"];
m30_85 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.IClientFilter"];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_0  [key=0, style=bold, color=blue];
m33_39 -> m33_41  [key=1, style=dashed, color=green, label=IRedisTransaction];
m33_39 -> m33_51  [key=1, style=dashed, color=green, label=string];
m33_39 -> m33_42  [key=1, style=dashed, color=green, label=IRedisTransaction];
m33_39 -> m33_55  [key=1, style=dashed, color=green, label=string];
m33_39 -> m33_43  [key=1, style=dashed, color=green, label=IRedisTransaction];
m33_39 -> m33_59  [key=1, style=dashed, color=green, label=string];
m33_39 -> m33_44  [key=1, style=dashed, color=green, label=IRedisTransaction];
m33_39 -> m33_62  [key=1, style=dashed, color=green, label=string];
m33_39 -> m33_40  [key=0, style=solid];
m33_41 -> m33_42  [key=0, style=solid, color=green];
m33_41 -> m33_15  [key=2, style=dotted, color=green];
m33_41 -> m33_50  [key=1, style=dashed, color=green, label="lambda expression"];
m33_40 -> m33_41  [key=0, style=solid, color=green];
m33_40 -> m33_15  [key=2, style=dotted];
m33_40 -> m33_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_42 -> m33_43  [key=0, style=solid, color=green];
m33_42 -> m33_15  [key=2, style=dotted, color=green];
m33_42 -> m33_54  [key=1, style=dashed, color=green, label="lambda expression"];
m33_43 -> m33_44  [key=0, style=solid, color=green];
m33_43 -> m33_15  [key=2, style=dotted, color=green];
m33_43 -> m33_58  [key=1, style=dashed, color=green, label="lambda expression"];
m33_44 -> m33_45  [key=0, style=solid, color=green];
m33_44 -> m33_15  [key=2, style=dotted, color=green];
m33_44 -> m33_61  [key=1, style=dashed, color=green, label="lambda expression"];
m33_45 -> m33_39  [key=0, style=bold, color=blue];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m33_7 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m33_7 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m33_7 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m33_7 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m33_7 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_7 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_7 -> m33_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_7 -> m33_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_7 -> m33_5  [key=0, style=bold, color=blue];
m33_8 -> m33_15  [key=2, style=dotted];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_9 -> m33_15  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid, color=red];
m33_9 -> m33_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_10 -> m33_15  [key=2, style=dotted];
m33_10 -> m33_11  [key=0, style=solid, color=red];
m33_10 -> m33_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_10 -> m33_12  [key=2, style=dotted, color=red];
m33_11 -> m33_15  [key=2, style=dotted];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_11 -> m33_9  [key=0, style=bold, color=blue];
m33_12 -> m33_15  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_13 -> m33_15  [key=2, style=dotted];
m33_13 -> m33_14  [key=0, style=solid, color=red];
m33_13 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_14 -> m33_7  [key=0, style=bold, color=blue];
m33_14 -> m33_15  [key=0, style=solid, color=red];
m33_14 -> m33_5  [key=2, style=dotted, color=red];
m33_14 -> m33_18  [key=2, style=dotted, color=red];
m33_14 -> m33_21  [key=1, style=dashed, color=red, label="lambda expression"];
m33_14 -> m33_16  [key=1, style=dashed, color=red, label=typeFilters];
m33_5 -> m33_6  [key=0, style=solid, color=red];
m33_6 -> m33_7  [key=0, style=solid, color=red];
m33_6 -> m33_8  [key=2, style=dotted, color=red];
m33_2 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_2  [key=0, style=bold, color=blue];
m33_24 -> m33_25  [key=0, style=solid];
m33_35 -> m33_36  [key=0, style=solid];
m33_21 -> m33_22  [key=0, style=solid];
m33_25 -> m33_26  [key=0, style=solid];
m33_25 -> m33_19  [key=2, style=dotted];
m33_25 -> m33_20  [key=2, style=dotted];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_24  [key=2, style=dotted];
m33_22 -> m33_19  [key=2, style=dotted];
m33_22 -> m33_20  [key=2, style=dotted];
m33_23 -> m33_21  [key=0, style=bold, color=blue];
m33_26 -> m33_27  [key=0, style=solid];
m33_26 -> m33_24  [key=2, style=dotted];
m33_27 -> m33_25  [key=0, style=bold, color=blue];
m33_27 -> m33_28  [key=0, style=solid];
m33_50 -> m33_51  [key=0, style=solid, color=green];
m33_51 -> m33_52  [key=0, style=solid, color=green];
m33_51 -> m33_53  [key=2, style=dotted, color=green];
m33_52 -> m33_50  [key=0, style=bold, color=blue];
m33_54 -> m33_55  [key=0, style=solid, color=green];
m33_55 -> m33_56  [key=0, style=solid, color=green];
m33_55 -> m33_19  [key=2, style=dotted, color=green];
m33_55 -> m33_57  [key=2, style=dotted, color=green];
m33_56 -> m33_54  [key=0, style=bold, color=blue];
m33_58 -> m33_59  [key=0, style=solid, color=green];
m33_59 -> m33_60  [key=0, style=solid, color=green];
m33_59 -> m33_19  [key=2, style=dotted, color=green];
m33_59 -> m33_57  [key=2, style=dotted, color=green];
m33_60 -> m33_58  [key=0, style=bold, color=blue];
m33_61 -> m33_62  [key=0, style=solid, color=green];
m33_62 -> m33_63  [key=0, style=solid, color=green];
m33_62 -> m33_19  [key=2, style=dotted, color=green];
m33_62 -> m33_57  [key=2, style=dotted, color=green];
m33_63 -> m33_61  [key=0, style=bold, color=blue];
m33_46 -> m33_47  [key=0, style=solid];
m33_17 -> m33_19  [key=2, style=dotted];
m33_17 -> m33_18  [key=0, style=solid];
m33_17 -> m33_20  [key=2, style=dotted];
m33_17 -> m33_13  [key=0, style=bold, color=blue];
m33_48 -> m33_46  [key=0, style=bold, color=blue];
m33_47 -> m33_48  [key=0, style=solid];
m33_47 -> m33_49  [key=2, style=dotted];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_19  [key=2, style=dotted];
m33_16 -> m33_20  [key=2, style=dotted];
m33_31 -> m33_32  [key=0, style=solid];
m33_18 -> m33_16  [key=0, style=bold, color=blue];
m33_28 -> m33_29  [key=0, style=solid];
m33_28 -> m33_30  [key=2, style=dotted];
m33_28 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider"];
m33_28 -> m33_6  [key=1, style=dashed, color=red, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider"];
m33_28 -> m33_10  [key=1, style=dashed, color=red, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider"];
m33_28 -> m33_14  [key=1, style=dashed, color=red, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider"];
m33_28 -> m33_15  [key=1, style=dashed, color=red, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider"];
m33_29 -> m33_27  [key=0, style=bold, color=blue];
m33_33 -> m33_31  [key=0, style=bold, color=blue];
m33_32 -> m33_33  [key=0, style=solid];
m33_32 -> m33_34  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_38  [key=2, style=dotted];
m33_37 -> m33_35  [key=0, style=bold, color=blue];
m33_15 -> m33_16  [key=0, style=solid, color=red];
m33_15 -> m33_9  [key=2, style=dotted, color=red];
m33_15 -> m33_18  [key=2, style=dotted, color=red];
m33_15 -> m33_25  [key=1, style=dashed, color=red, label="lambda expression"];
m33_66 -> m33_51  [key=1, style=dashed, color=green, label=string];
m33_66 -> m33_55  [key=1, style=dashed, color=green, label=string];
m33_66 -> m33_59  [key=1, style=dashed, color=green, label=string];
m33_66 -> m33_62  [key=1, style=dashed, color=green, label=string];
m33_64 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m33_64 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m33_64 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m33_64 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m33_64 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m33_64 -> m33_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m33_65 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_65 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_65 -> m33_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_65 -> m33_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_3  [key=0, style=solid, color=green];
m34_3 -> m34_4  [key=0, style=solid, color=green];
m34_3 -> m34_11  [key=2, style=dotted, color=green];
m34_3 -> m34_12  [key=2, style=dotted, color=green];
m34_3 -> m34_15  [key=1, style=dashed, color=green, label="lambda expression"];
m34_3 -> m34_5  [key=1, style=dashed, color=green, label=list];
m34_3 -> m34_6  [key=1, style=dashed, color=green, label=list];
m34_3 -> m34_7  [key=1, style=dashed, color=green, label=list];
m34_3 -> m34_8  [key=1, style=dashed, color=green, label=list];
m34_3 -> m34_9  [key=1, style=dashed, color=green, label=list];
m34_4 -> m34_5  [key=0, style=solid, color=green];
m34_4 -> n8  [key=2, style=dotted, color=green];
m34_4 -> m34_14  [key=2, style=dotted, color=green];
m34_5 -> m34_6  [key=0, style=solid, color=green];
m34_5 -> n8  [key=2, style=dotted, color=green];
m34_5 -> m34_14  [key=2, style=dotted, color=green];
m34_6 -> m34_7  [key=0, style=solid, color=green];
m34_6 -> n8  [key=2, style=dotted, color=green];
m34_6 -> m34_14  [key=2, style=dotted, color=green];
m34_7 -> m34_8  [key=0, style=solid, color=green];
m34_7 -> n8  [key=2, style=dotted, color=green];
m34_7 -> m34_14  [key=2, style=dotted, color=green];
m34_8 -> m34_9  [key=0, style=solid, color=green];
m34_8 -> n8  [key=2, style=dotted, color=green];
m34_8 -> m34_14  [key=2, style=dotted, color=green];
m34_9 -> m34_10  [key=0, style=solid, color=green];
m34_9 -> n8  [key=2, style=dotted, color=green];
m34_9 -> m34_14  [key=2, style=dotted, color=green];
m34_10 -> m34_2  [key=0, style=bold, color=blue];
m34_15 -> m34_16  [key=0, style=solid, color=green];
m34_16 -> m34_17  [key=0, style=solid, color=green];
m34_17 -> m34_15  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_0  [key=0, style=bold, color=blue];
m34_18 -> m34_4  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterInfo"];
m34_18 -> m34_5  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterInfo"];
m34_18 -> m34_6  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterInfo"];
m34_18 -> m34_7  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterInfo"];
m34_18 -> m34_8  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterInfo"];
m34_18 -> m34_9  [key=1, style=dashed, color=green, label="HangFire.Common.Filters.JobFilterInfo"];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m35_16 -> m35_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m35_16 -> m35_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m35_16 -> m35_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m35_16 -> m35_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m35_16 -> m35_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m35_16 -> m35_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_19  [key=0, style=solid];
m35_17 -> m35_33  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_21  [key=0, style=solid];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_23  [key=0, style=solid];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_25  [key=0, style=solid];
m35_23 -> m35_26  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m35_23 -> m35_28  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_27  [key=0, style=solid];
m35_25 -> m35_34  [key=2, style=dotted];
m35_26 -> m35_32  [key=0, style=solid];
m35_26 -> m35_35  [key=2, style=dotted];
m35_26 -> m35_36  [key=2, style=dotted];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_37  [key=2, style=dotted];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_38  [key=2, style=dotted];
m35_28 -> m35_39  [key=2, style=dotted];
m35_18 -> m35_32  [key=0, style=solid];
m35_18 -> d24  [key=2, style=dotted];
m35_20 -> m35_32  [key=0, style=solid];
m35_20 -> d24  [key=2, style=dotted];
m35_22 -> m35_32  [key=0, style=solid];
m35_22 -> d24  [key=2, style=dotted];
m35_24 -> m35_32  [key=0, style=solid];
m35_24 -> d24  [key=2, style=dotted];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_32  [key=0, style=solid];
m35_29 -> m35_40  [key=2, style=dotted];
m35_30 -> m35_31  [key=0, style=solid];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_41  [key=2, style=dotted];
m35_32 -> m35_16  [key=0, style=bold, color=blue];
m35_42 -> m35_43  [key=0, style=solid];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_45  [key=2, style=dotted];
m35_44 -> m35_42  [key=0, style=bold, color=blue];
m35_37 -> m35_46  [key=0, style=solid];
m35_37 -> m35_47  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m35_37 -> m35_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m35_46 -> m35_47  [key=0, style=solid];
m35_46 -> m35_52  [key=2, style=dotted];
m35_46 -> m35_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_46 -> m35_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_46 -> m35_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_47 -> m35_48  [key=0, style=solid];
m35_48 -> m35_49  [key=0, style=solid];
m35_48 -> m35_53  [key=2, style=dotted];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_54  [key=2, style=dotted];
m35_50 -> m35_51  [key=0, style=solid];
m35_51 -> m35_37  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [key=0, style=bold, color=blue];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m35_2 -> m35_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m35_2 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_5  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_7  [key=0, style=solid];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_11  [key=2, style=dotted];
m35_8 -> m35_9  [key=0, style=solid];
m35_4 -> m35_9  [key=0, style=solid];
m35_4 -> d24  [key=2, style=dotted];
m35_6 -> m35_9  [key=0, style=solid];
m35_6 -> d24  [key=2, style=dotted];
m35_9 -> m35_2  [key=0, style=bold, color=blue];
m35_15 -> m35_55  [key=0, style=solid];
m35_15 -> m35_56  [key=1, style=dashed, color=darkseagreen4, label=object];
m35_15 -> m35_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m35_15 -> m35_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m35_55 -> m35_56  [key=0, style=solid];
m35_55 -> m35_52  [key=2, style=dotted];
m35_55 -> m35_57  [key=1, style=dashed, color=darkseagreen4, label=result];
m35_55 -> m35_66  [key=1, style=dashed, color=darkseagreen4, label=result];
m35_55 -> m35_67  [key=1, style=dashed, color=darkseagreen4, label=result];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_58  [key=0, style=solid];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_67  [key=0, style=solid];
m35_58 -> m35_69  [key=2, style=dotted];
m35_58 -> m35_65  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m35_58 -> m35_66  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_70  [key=2, style=dotted];
m35_59 -> m35_61  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m35_59 -> m35_62  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m35_59 -> m35_63  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m35_57 -> m35_68  [key=0, style=solid];
m35_66 -> m35_58  [key=0, style=solid];
m35_66 -> m35_76  [key=2, style=dotted];
m35_67 -> m35_68  [key=0, style=solid];
m35_65 -> m35_68  [key=0, style=solid];
m35_65 -> m35_74  [key=2, style=dotted];
m35_65 -> m35_71  [key=2, style=dotted];
m35_65 -> m35_75  [key=2, style=dotted];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_66  [key=1, style=dashed, color=darkseagreen4, label=value];
m35_60 -> m35_60  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m35_61 -> m35_62  [key=0, style=solid];
m35_61 -> m35_66  [key=0, style=solid];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_71  [key=2, style=dotted];
m35_62 -> m35_72  [key=2, style=dotted];
m35_62 -> m35_65  [key=1, style=dashed, color=darkseagreen4, label=converter];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_66  [key=0, style=solid];
m35_63 -> m35_73  [key=2, style=dotted];
m35_64 -> m35_65  [key=0, style=solid];
m35_68 -> m35_15  [key=0, style=bold, color=blue];
m35_39 -> m35_2  [key=3, color=darkorchid, style=bold, label="Field variable HangFire.Client.JobCreator _jobCreator"];
m35_12 -> m35_13  [key=0, style=solid];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_15  [key=2, style=dotted];
m35_13 -> m35_16  [key=2, style=dotted];
m35_14 -> m35_12  [key=0, style=bold, color=blue];
m35_77 -> m35_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m35_77 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m35_77 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m35_77 -> m35_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m35_77 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m35_77 -> m35_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m38_6 -> m38_7  [key=0, style=solid, color=red];
m38_7 -> m38_8  [key=0, style=solid, color=green];
m38_7 -> m38_10  [key=1, style=dashed, color=red, label=sqlQuery];
m38_7 -> m38_19  [key=1, style=dashed, color=red, label=sqlQuery];
m38_8 -> m38_9  [key=0, style=solid, color=green];
m38_8 -> m38_53  [key=2, style=dotted, color=green];
m38_8 -> m38_10  [key=1, style=dashed, color=green, label=monitor];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_16  [key=2, style=dotted];
m38_10 -> m38_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_10 -> m38_56  [key=2, style=dotted];
m38_10 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobs];
m38_9 -> m38_10  [key=0, style=solid, color=green];
m38_9 -> m38_13  [key=0, style=solid, color=red];
m38_9 -> m38_15  [key=2, style=dotted, color=red];
m38_9 -> m38_54  [key=2, style=dotted, color=green];
m38_9 -> m38_55  [key=2, style=dotted, color=green];
m38_9 -> m38_51  [key=2, style=dotted, color=green];
m38_9 -> m38_12  [key=1, style=dashed, color=green, label=pager];
m38_9 -> m38_19  [key=1, style=dashed, color=green, label=pager];
m38_9 -> m38_45  [key=1, style=dashed, color=green, label=pager];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_17  [key=2, style=dotted];
m38_13 -> m38_47  [key=2, style=dotted];
m38_13 -> m38_46  [key=0, style=solid];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_47  [key=2, style=dotted];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_14  [key=0, style=solid, color=green];
m38_14 -> m38_6  [key=0, style=bold, color=blue];
m38_14 -> m38_15  [key=0, style=solid, color=green];
m38_14 -> m38_47  [key=2, style=dotted, color=green];
m38_27 -> m38_28  [key=0, style=solid, color=red];
m38_27 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_27 -> m38_32  [key=1, style=dashed, color=red, label=string];
m38_27 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_27 -> m38_61  [key=2, style=dotted];
m38_27 -> m38_60  [key=2, style=dotted];
m38_28 -> m38_29  [key=0, style=solid, color=red];
m38_28 -> m38_32  [key=1, style=dashed, color=red, label=sqlQuery];
m38_28 -> m38_47  [key=2, style=dotted];
m38_29 -> m38_30  [key=0, style=solid, color=red];
m38_29 -> m38_16  [key=2, style=dotted, color=red];
m38_29 -> m38_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_29 -> m38_57  [key=2, style=dotted];
m38_29 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_29 -> m38_62  [key=2, style=dotted];
m38_29 -> m38_63  [key=2, style=dotted];
m38_30 -> m38_27  [key=0, style=bold, color=blue];
m38_30 -> m38_47  [key=2, style=dotted];
m38_30 -> m38_31  [key=0, style=solid];
m38_16 -> m38_58  [key=0, style=solid];
m38_16 -> m38_17  [key=0, style=solid, color=green];
m38_16 -> m38_47  [key=2, style=dotted, color=green];
m38_58 -> m38_59  [key=0, style=solid];
m38_58 -> m38_60  [key=2, style=dotted];
m38_59 -> m38_16  [key=0, style=bold, color=blue];
m38_63 -> m38_32  [key=1, style=dashed, color=red, label=string];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_57  [key=2, style=dotted];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_48 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_16  [key=2, style=dotted];
m38_50 -> m38_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_51 -> m38_48  [key=0, style=bold, color=blue];
m38_52 -> m38_53  [key=0, style=solid];
m38_47 -> m38_45  [key=0, style=bold, color=blue];
m38_34 -> m38_47  [key=2, style=dotted];
m38_34 -> m38_35  [key=0, style=solid];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorage"];
m38_2 -> m38_3  [key=0, style=solid, color=green];
m38_2 -> m38_48  [key=2, style=dotted, color=green];
m38_2 -> m38_49  [key=2, style=dotted, color=green];
m38_2 -> m38_50  [key=2, style=dotted, color=green];
m38_2 -> m38_51  [key=2, style=dotted, color=green];
m38_2 -> m38_4  [key=3, color=green, style=bold, label="Property variable bool OldFormat"];
m38_2 -> d24  [key=2, style=dotted];
m38_1 -> m38_2  [key=0, style=solid, color=green];
m38_1 -> m38_47  [key=2, style=dotted];
m38_1 -> m38_3  [key=0, style=solid, color=red];
m38_3 -> m38_4  [key=0, style=solid, color=red];
m38_4 -> m38_9  [key=1, style=dashed, color=green, label=from];
m38_4 -> m38_4  [key=3, color=darkorchid, style=bold, label="Local variable bool oldFormat"];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_52  [key=2, style=dotted];
m38_4 -> m38_0  [key=0, style=bold, color=blue];
m38_5 -> m38_9  [key=1, style=dashed, color=green, label=perPage];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_52  [key=2, style=dotted];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_58  [key=2, style=dotted];
m38_19 -> m38_59  [key=2, style=dotted];
m38_19 -> m38_60  [key=2, style=dotted];
m38_19 -> m38_21  [key=2, style=dotted];
m38_19 -> m38_22  [key=2, style=dotted];
m38_19 -> m38_23  [key=2, style=dotted];
m38_19 -> m38_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_45 -> m38_46  [key=0, style=solid, color=red];
m38_45 -> m38_66  [key=2, style=dotted];
m38_45 -> m38_59  [key=2, style=dotted];
m38_45 -> m38_60  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid, color=green];
m38_15 -> m38_51  [key=2, style=dotted, color=green];
m38_15 -> m38_57  [key=2, style=dotted, color=green];
m38_17 -> m38_18  [key=0, style=solid, color=green];
m38_17 -> m38_51  [key=2, style=dotted];
m38_17 -> m38_57  [key=2, style=dotted];
m38_18 -> m38_19  [key=0, style=solid, color=green];
m38_18 -> m38_47  [key=2, style=dotted, color=green];
m38_20 -> m38_47  [key=2, style=dotted];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_18  [key=0, style=bold, color=blue];
m38_22 -> m38_47  [key=2, style=dotted];
m38_22 -> m38_23  [key=0, style=solid];
m38_23 -> m38_57  [key=2, style=dotted];
m38_23 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_24 -> m38_47  [key=2, style=dotted];
m38_24 -> m38_25  [key=0, style=solid];
m38_25 -> m38_51  [key=2, style=dotted];
m38_25 -> m38_57  [key=2, style=dotted];
m38_25 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_26 -> m38_47  [key=2, style=dotted];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_24  [key=0, style=bold, color=blue];
m38_31 -> m38_57  [key=2, style=dotted];
m38_31 -> m38_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_31 -> m38_32  [key=0, style=solid, color=red];
m38_31 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_32 -> m38_47  [key=2, style=dotted];
m38_32 -> m38_33  [key=0, style=solid, color=red];
m38_32 -> m38_34  [key=2, style=dotted, color=red];
m38_32 -> m38_23  [key=2, style=dotted, color=red];
m38_32 -> m38_22  [key=2, style=dotted, color=red];
m38_32 -> m38_35  [key=1, style=dashed, color=red, label="lambda expression"];
m38_33 -> m38_51  [key=2, style=dotted];
m38_33 -> m38_57  [key=2, style=dotted];
m38_33 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_33 -> m38_31  [key=0, style=bold, color=blue];
m38_35 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_64  [key=2, style=dotted];
m38_35 -> m38_60  [key=2, style=dotted];
m38_35 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_36 -> m38_47  [key=2, style=dotted];
m38_36 -> m38_37  [key=0, style=solid];
m38_38 -> m38_47  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid, color=red];
m38_38 -> m38_40  [key=1, style=dashed, color=red, label=string];
m38_38 -> m38_43  [key=1, style=dashed, color=red, label=string];
m38_39 -> m38_57  [key=2, style=dotted];
m38_39 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_39 -> m38_40  [key=0, style=solid, color=red];
m38_39 -> m38_65  [key=2, style=dotted];
m38_39 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_39 -> m38_43  [key=1, style=dashed, color=red, label=fetchedJobsSql];
m38_40 -> m38_47  [key=2, style=dotted];
m38_40 -> m38_41  [key=0, style=solid, color=red];
m38_40 -> m38_16  [key=2, style=dotted, color=red];
m38_40 -> m38_42  [key=1, style=dashed, color=red, label="lambda expression"];
m38_41 -> m38_57  [key=2, style=dotted];
m38_41 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_41 -> m38_42  [key=0, style=solid];
m38_41 -> m38_38  [key=0, style=bold, color=blue];
m38_42 -> m38_47  [key=2, style=dotted];
m38_42 -> m38_43  [key=0, style=solid, color=red];
m38_43 -> m38_47  [key=2, style=dotted];
m38_43 -> m38_21  [key=0, style=solid];
m38_43 -> m38_44  [key=0, style=solid, color=red];
m38_43 -> m38_34  [key=2, style=dotted, color=red];
m38_43 -> m38_23  [key=2, style=dotted, color=red];
m38_43 -> m38_22  [key=2, style=dotted, color=red];
m38_43 -> m38_45  [key=1, style=dashed, color=red, label="lambda expression"];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_47  [key=2, style=dotted];
m38_44 -> m38_42  [key=0, style=bold, color=blue];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_21 -> m38_44  [key=0, style=solid];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_37 -> m38_43  [key=0, style=solid];
m38_37 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_37 -> m38_35  [key=0, style=bold, color=blue];
m38_46 -> m38_0  [key=0, style=bold, color=blue];
m38_46 -> m38_47  [key=0, style=solid, color=red];
m38_62 -> m38_19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_21  [key=2, style=dotted];
m38_53 -> m38_56  [key=2, style=dotted];
m38_55 -> m38_52  [key=0, style=bold, color=blue];
m38_65 -> m38_32  [key=1, style=dashed, color=red, label=int];
m38_61 -> m38_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_8  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_9  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_29  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_40  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_61 -> m38_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m38_64 -> m38_32  [key=1, style=dashed, color=red, label=int];
m38_66 -> m38_32  [key=1, style=dashed, color=red, label=sqlQuery];
m38_67 -> m38_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_2  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_67 -> m38_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m38_68 -> m38_43  [key=1, style=dashed, color=red, label=int];
m38_69 -> m38_43  [key=1, style=dashed, color=red, label=int];
m38_70 -> m38_43  [key=1, style=dashed, color=red, label=fetchedJobsSql];
m38_71 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_72 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m39_25 -> m39_24  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid];
m39_0 -> m39_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> n8  [key=2, style=dotted];
m39_1 -> m39_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_1 -> m39_5  [key=2, style=dotted];
m39_2 -> m39_0  [key=0, style=bold, color=blue];
m39_2 -> m39_3  [key=0, style=solid, color=green];
m39_2 -> m39_6  [key=2, style=dotted];
m39_2 -> m39_7  [key=2, style=dotted];
m39_9 -> m39_10  [key=0, style=solid];
m39_9 -> m39_16  [key=2, style=dotted];
m39_9 -> m39_12  [key=1, style=dashed, color=darkseagreen4, label=connection];
m39_11 -> m39_12  [key=0, style=solid, color=green];
m39_11 -> m39_18  [key=2, style=dotted];
m39_10 -> m39_11  [key=0, style=solid, color=green];
m39_10 -> m39_13  [key=2, style=dotted];
m39_10 -> m39_17  [key=2, style=dotted];
m39_10 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_10 -> m39_12  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_12 -> m39_9  [key=0, style=bold, color=blue];
m39_12 -> m39_13  [key=0, style=solid];
m39_12 -> m39_19  [key=2, style=dotted];
m39_66 -> m39_67  [key=0, style=solid];
m39_68 -> m39_22  [key=2, style=dotted];
m39_68 -> m39_69  [key=0, style=solid];
m39_69 -> m39_70  [key=0, style=solid];
m39_69 -> m39_30  [key=2, style=dotted];
m39_73 -> m39_74  [key=0, style=solid];
m39_73 -> m39_26  [key=2, style=dotted];
m39_67 -> m39_68  [key=0, style=solid];
m39_67 -> m39_43  [key=2, style=dotted];
m39_70 -> m39_71  [key=0, style=solid];
m39_70 -> m39_65  [key=2, style=dotted];
m39_72 -> m39_73  [key=0, style=solid];
m39_72 -> m39_44  [key=2, style=dotted];
m39_71 -> m39_72  [key=0, style=solid];
m39_71 -> m39_35  [key=2, style=dotted];
m39_74 -> m39_66  [key=0, style=bold, color=blue];
m39_57 -> m39_58  [key=0, style=solid];
m39_59 -> m39_22  [key=2, style=dotted];
m39_59 -> m39_60  [key=0, style=solid];
m39_60 -> m39_61  [key=0, style=solid];
m39_60 -> m39_30  [key=2, style=dotted];
m39_63 -> m39_64  [key=0, style=solid];
m39_63 -> m39_26  [key=2, style=dotted];
m39_58 -> m39_59  [key=0, style=solid];
m39_58 -> m39_43  [key=2, style=dotted];
m39_61 -> m39_62  [key=0, style=solid];
m39_61 -> m39_65  [key=2, style=dotted];
m39_62 -> m39_63  [key=0, style=solid];
m39_62 -> m39_44  [key=2, style=dotted];
m39_64 -> m39_57  [key=0, style=bold, color=blue];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_7  [key=2, style=dotted];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> m39_22  [key=0, style=bold, color=blue];
m39_3 -> m39_4  [key=0, style=solid, color=green];
m39_3 -> m39_8  [key=2, style=dotted, color=green];
m39_4 -> m39_0  [key=0, style=bold, color=blue];
m39_4 -> m39_5  [key=0, style=solid];
m39_30 -> m39_31  [key=0, style=solid];
m39_31 -> m39_32  [key=0, style=solid];
m39_31 -> m39_34  [key=2, style=dotted];
m39_32 -> m39_33  [key=0, style=solid];
m39_32 -> m39_35  [key=2, style=dotted];
m39_33 -> m39_30  [key=0, style=bold, color=blue];
m39_13 -> m39_14  [key=0, style=solid, color=red];
m39_13 -> m39_7  [key=2, style=dotted];
m39_14 -> m39_15  [key=0, style=solid, color=red];
m39_14 -> m39_20  [key=2, style=dotted, color=red];
m39_15 -> m39_16  [key=0, style=solid, color=green];
m39_15 -> m39_17  [key=0, style=solid, color=green];
m39_15 -> m39_8  [key=0, style=bold, color=blue];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_0  [key=2, style=dotted];
m39_17 -> m39_14  [key=0, style=bold, color=blue];
m39_36 -> m39_37  [key=0, style=solid];
m39_38 -> m39_39  [key=0, style=solid, color=green];
m39_38 -> m39_22  [key=2, style=dotted, color=green];
m39_37 -> m39_38  [key=0, style=solid, color=green];
m39_37 -> m39_43  [key=2, style=dotted];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> m39_30  [key=2, style=dotted];
m39_41 -> m39_42  [key=0, style=solid];
m39_41 -> m39_26  [key=2, style=dotted];
m39_40 -> m39_41  [key=0, style=solid];
m39_40 -> m39_44  [key=2, style=dotted];
m39_42 -> m39_36  [key=0, style=bold, color=blue];
m39_21 -> m39_22  [key=0, style=solid];
m39_6 -> m39_4  [key=0, style=bold, color=blue];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_24  [key=2, style=dotted];
m39_22 -> m39_37  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m39_22 -> m39_46  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m39_22 -> m39_58  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m39_22 -> m39_67  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m39_23 -> m39_21  [key=0, style=bold, color=blue];
m39_23 -> m39_24  [key=0, style=solid];
m39_23 -> m39_25  [key=2, style=dotted];
m39_8 -> m39_9  [key=0, style=solid];
m39_26 -> m39_27  [key=0, style=solid];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_29  [key=2, style=dotted];
m39_28 -> m39_26  [key=0, style=bold, color=blue];
m39_45 -> m39_46  [key=0, style=solid];
m39_47 -> m39_22  [key=2, style=dotted];
m39_47 -> m39_48  [key=0, style=solid];
m39_48 -> m39_49  [key=0, style=solid];
m39_48 -> m39_30  [key=2, style=dotted];
m39_53 -> m39_54  [key=0, style=solid];
m39_53 -> m39_26  [key=2, style=dotted];
m39_46 -> m39_47  [key=0, style=solid];
m39_46 -> m39_43  [key=2, style=dotted];
m39_49 -> m39_50  [key=0, style=solid];
m39_49 -> m39_55  [key=2, style=dotted];
m39_49 -> m39_51  [key=1, style=dashed, color=darkseagreen4, label=table1];
m39_49 -> m39_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m39_52 -> m39_53  [key=0, style=solid];
m39_52 -> m39_44  [key=2, style=dotted];
m39_50 -> m39_51  [key=0, style=solid];
m39_50 -> m39_56  [key=2, style=dotted];
m39_51 -> m39_52  [key=0, style=solid];
m39_51 -> m39_56  [key=2, style=dotted];
m39_54 -> m39_45  [key=0, style=bold, color=blue];
m39_75 -> m39_38  [key=1, style=dashed, color=green, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m39_75 -> m39_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.ScheduledStateFeature"];
m41_12 -> m41_13  [key=0, style=solid];
m41_13 -> m41_14  [key=0, style=solid];
m41_13 -> m41_15  [key=2, style=dotted];
m41_14 -> m41_12  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_0 -> m41_3  [key=1, style=dashed, color=red, label=string];
m41_0 -> m41_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_0 -> m41_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m41_0 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_0 -> m41_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_3  [key=0, style=solid, color=red];
m41_3 -> m41_4  [key=0, style=solid, color=red];
m41_3 -> m41_5  [key=0, style=solid, color=red];
m41_3 -> m41_12  [key=3, color=red, style=bold, label="Field variable System.Func<HangFire.Common.JobMethod, System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>> _getFiltersThunk"];
m41_5 -> m41_6  [key=0, style=solid];
m41_5 -> m41_7  [key=0, style=solid];
m41_7 -> m41_8  [key=0, style=solid];
m41_8 -> m41_9  [key=0, style=solid];
m41_9 -> m41_10  [key=0, style=solid];
m41_2 -> m41_10  [key=0, style=solid];
m41_2 -> d24  [key=2, style=dotted];
m41_4 -> m41_10  [key=0, style=solid, color=red];
m41_4 -> d24  [key=2, style=dotted, color=red];
m41_6 -> m41_10  [key=0, style=solid];
m41_6 -> d24  [key=2, style=dotted];
m41_10 -> m41_0  [key=0, style=bold, color=blue];
m41_16 -> m41_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m41_16 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m41_16 -> m41_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m41_16 -> m41_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m42_0 -> m42_1  [key=0, style=solid];
m42_0 -> m42_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m42_0 -> m42_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m42_0 -> m42_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m42_0 -> m42_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_3  [key=0, style=solid];
m42_2 -> m42_6  [key=0, style=solid];
m42_2 -> d24  [key=2, style=dotted];
m42_2 -> m42_8  [key=2, style=dotted];
m42_3 -> m42_4  [key=0, style=solid];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_9  [key=2, style=dotted];
m42_5 -> m42_6  [key=0, style=solid];
m42_5 -> m42_10  [key=2, style=dotted];
m42_6 -> m42_0  [key=0, style=bold, color=blue];
m42_11 -> m42_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.OwinDashboardContext"];
m42_11 -> m42_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.OwinDashboardContext"];
m42_11 -> m42_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.OwinDashboardContext"];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_0  [key=0, style=bold, color=blue];
m43_2 -> m43_3  [key=0, style=solid];
m43_3 -> m43_2  [key=0, style=bold, color=blue];
m44_5 -> m44_6  [key=0, style=solid];
m44_6 -> m44_7  [key=0, style=solid];
m44_6 -> m44_8  [key=2, style=dotted];
m44_6 -> m44_4  [key=2, style=dotted];
m44_7 -> m44_5  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> m44_3  [key=2, style=dotted];
m44_1 -> m44_4  [key=2, style=dotted];
m44_2 -> m44_0  [key=0, style=bold, color=blue];
m44_17 -> m44_18  [key=0, style=solid];
m44_17 -> m44_36  [key=3, color=darkorchid, style=bold, label="Parameter variable Table args"];
m44_18 -> m44_19  [key=0, style=solid];
m44_18 -> m44_16  [key=2, style=dotted];
m44_19 -> m44_17  [key=0, style=bold, color=blue];
m44_46 -> m44_47  [key=0, style=solid];
m44_46 -> m44_3  [key=2, style=dotted];
m44_46 -> m44_25  [key=2, style=dotted];
m44_45 -> m44_46  [key=0, style=solid];
m44_47 -> m44_45  [key=0, style=bold, color=blue];
m44_12 -> m44_13  [key=0, style=solid];
m44_13 -> m44_14  [key=0, style=solid];
m44_13 -> m44_15  [key=2, style=dotted];
m44_13 -> m44_16  [key=2, style=dotted];
m44_14 -> m44_12  [key=0, style=bold, color=blue];
m44_9 -> m44_10  [key=0, style=solid];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_8  [key=2, style=dotted];
m44_10 -> m44_4  [key=2, style=dotted];
m44_11 -> m44_9  [key=0, style=bold, color=blue];
m44_41 -> m44_42  [key=0, style=solid];
m44_42 -> m44_43  [key=0, style=solid];
m44_42 -> m44_3  [key=2, style=dotted];
m44_42 -> m44_26  [key=2, style=dotted];
m44_42 -> m44_44  [key=2, style=dotted];
m44_42 -> m44_29  [key=2, style=dotted];
m44_43 -> m44_41  [key=0, style=bold, color=blue];
m44_33 -> m44_34  [key=0, style=solid];
m44_30 -> m44_31  [key=0, style=solid];
m44_31 -> m44_32  [key=0, style=solid];
m44_32 -> m44_30  [key=0, style=bold, color=blue];
m44_34 -> m44_35  [key=0, style=solid];
m44_35 -> m44_33  [key=0, style=bold, color=blue];
m44_21 -> m44_22  [key=0, style=solid, color=red];
m44_21 -> m44_3  [key=2, style=dotted];
m44_21 -> m44_25  [key=2, style=dotted];
m44_16 -> m44_20  [key=0, style=solid];
m44_16 -> m44_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_16 -> m44_22  [key=1, style=dashed, color=red, label=string];
m44_16 -> m44_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m44_16 -> m44_17  [key=3, color=darkorchid, style=bold, label="Parameter variable Table args"];
m44_20 -> m44_21  [key=0, style=solid];
m44_20 -> m44_3  [key=2, style=dotted];
m44_20 -> m44_24  [key=2, style=dotted];
m44_22 -> m44_23  [key=0, style=solid, color=red];
m44_22 -> m44_3  [key=2, style=dotted, color=red];
m44_22 -> m44_26  [key=2, style=dotted, color=red];
m44_22 -> m44_27  [key=2, style=dotted, color=red];
m44_22 -> m44_28  [key=2, style=dotted, color=red];
m44_22 -> m44_29  [key=2, style=dotted, color=red];
m44_22 -> m44_30  [key=1, style=dashed, color=red, label="lambda expression"];
m44_22 -> m44_33  [key=1, style=dashed, color=red, label="lambda expression"];
m44_23 -> m44_16  [key=0, style=bold, color=blue];
m44_36 -> m44_37  [key=0, style=solid];
m44_37 -> m44_38  [key=0, style=solid];
m44_37 -> m44_17  [key=2, style=dotted];
m44_38 -> m44_39  [key=0, style=solid];
m44_38 -> m44_3  [key=2, style=dotted];
m44_38 -> m44_40  [key=2, style=dotted];
m44_39 -> m44_36  [key=0, style=bold, color=blue];
m44_48 -> m44_49  [key=0, style=solid];
m44_48 -> m44_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_49 -> m44_50  [key=0, style=solid];
m44_49 -> m44_3  [key=2, style=dotted];
m44_49 -> m44_52  [key=2, style=dotted];
m44_50 -> m44_51  [key=0, style=solid];
m44_50 -> n9  [key=2, style=dotted];
m44_51 -> m44_48  [key=0, style=bold, color=blue];
m44_54 -> m44_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m44_54 -> m44_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m44_54 -> m44_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m46_17 -> m46_18  [key=0, style=solid];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_20  [key=2, style=dotted];
m46_18 -> m46_21  [key=2, style=dotted];
m46_19 -> m46_17  [key=0, style=bold, color=blue];
m46_9 -> m46_14  [key=0, style=solid, color=red];
m46_9 -> d24  [key=2, style=dotted, color=red];
m46_3 -> m46_4  [key=0, style=solid, color=green];
m46_3 -> m46_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_3 -> m46_8  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m46_3 -> m46_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m46_3 -> m46_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_3 -> m46_12  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m46_3 -> m46_9  [key=2, style=dotted];
m46_4 -> m46_5  [key=0, style=solid, color=green];
m46_4 -> m46_6  [key=0, style=solid];
m46_4 -> m46_10  [key=2, style=dotted, color=green];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_8  [key=0, style=solid, color=red];
m46_8 -> m46_9  [key=0, style=solid, color=red];
m46_8 -> m46_10  [key=0, style=solid, color=red];
m46_10 -> m46_11  [key=0, style=solid];
m46_11 -> m46_12  [key=0, style=solid, color=red];
m46_11 -> m46_4  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m46_11 -> m46_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m46_11 -> m46_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m46_11 -> m46_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m46_11 -> m46_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m46_11 -> m46_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m46_12 -> m46_13  [key=0, style=solid, color=red];
m46_5 -> m46_14  [key=0, style=solid];
m46_5 -> d24  [key=2, style=dotted];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_9  [key=2, style=dotted];
m46_7 -> m46_14  [key=0, style=solid];
m46_7 -> d24  [key=2, style=dotted];
m46_7 -> m46_0  [key=0, style=bold, color=blue];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_16  [key=2, style=dotted];
m46_14 -> m46_3  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_2 -> m46_3  [key=0, style=solid];
m46_2 -> m46_8  [key=2, style=dotted];
m46_22 -> m46_23  [key=0, style=solid];
m46_23 -> m46_24  [key=0, style=solid];
m46_23 -> m46_25  [key=2, style=dotted];
m46_23 -> m46_26  [key=2, style=dotted];
m46_24 -> m46_22  [key=0, style=bold, color=blue];
m46_27 -> m46_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m46_27 -> m46_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m46_27 -> m46_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m46_27 -> m46_12  [key=1, style=dashed, color=red, label="HangFire.Server.Performing.PerformContext"];
m46_27 -> m46_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m46_27 -> m46_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m46_27 -> m46_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_2 -> m47_0  [key=0, style=bold, color=blue];
m47_3 -> m47_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.ProcessingJobDto"];
m48_124 -> m48_125  [key=0, style=solid];
m48_125 -> m48_126  [key=0, style=solid];
m48_125 -> m48_130  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_126 -> m48_127  [key=0, style=solid];
m48_126 -> m48_67  [key=2, style=dotted];
m48_126 -> m48_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_127 -> m48_124  [key=0, style=bold, color=blue];
m48_247 -> m48_248  [key=0, style=solid];
m48_248 -> m48_249  [key=0, style=solid];
m48_248 -> m48_22  [key=2, style=dotted];
m48_248 -> m48_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_249 -> m48_247  [key=0, style=bold, color=blue];
m48_29 -> m48_30  [key=0, style=solid, color=green];
m48_29 -> m48_29  [key=1, style=dashed, color=green, label=job];
m48_29 -> m48_59  [key=2, style=dotted, color=green];
m48_29 -> m48_56  [key=2, style=dotted, color=green];
m48_29 -> m48_31  [key=1, style=dashed, color=green, label=job];
m48_30 -> m48_31  [key=0, style=solid, color=green];
m48_30 -> m48_22  [key=2, style=dotted];
m48_30 -> m48_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_30 -> m48_45  [key=2, style=dotted];
m48_31 -> m48_29  [key=0, style=bold, color=blue];
m48_31 -> m48_31  [key=1, style=dashed, color=green, label=job];
m48_31 -> m48_32  [key=0, style=solid, color=green];
m48_31 -> m48_60  [key=2, style=dotted, color=green];
m48_31 -> m48_56  [key=2, style=dotted, color=green];
m48_31 -> m48_33  [key=1, style=dashed, color=green, label=job];
m48_45 -> m48_46  [key=0, style=solid];
m48_45 -> m48_47  [key=2, style=dotted];
m48_45 -> m48_48  [key=2, style=dotted];
m48_289 -> m48_290  [key=0, style=solid];
m48_290 -> m48_291  [key=0, style=solid];
m48_290 -> m48_22  [key=2, style=dotted];
m48_290 -> m48_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_291 -> m48_289  [key=0, style=bold, color=blue];
m48_347 -> m48_348  [key=0, style=solid];
m48_348 -> m48_349  [key=0, style=solid];
m48_348 -> m48_67  [key=2, style=dotted];
m48_348 -> m48_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_349 -> m48_347  [key=0, style=bold, color=blue];
m48_64 -> m48_65  [key=0, style=solid];
m48_65 -> m48_66  [key=0, style=solid];
m48_65 -> m48_67  [key=2, style=dotted];
m48_65 -> m48_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_66 -> m48_64  [key=0, style=bold, color=blue];
m48_53 -> m48_54  [key=0, style=solid];
m48_53 -> m48_4  [key=2, style=dotted];
m48_53 -> m48_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_57 -> m48_58  [key=0, style=solid];
m48_57 -> m48_59  [key=2, style=dotted];
m48_57 -> m48_48  [key=2, style=dotted];
m48_57 -> m48_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_375 -> m48_376  [key=0, style=solid];
m48_376 -> m48_377  [key=0, style=solid];
m48_376 -> m48_380  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_377 -> m48_378  [key=0, style=solid];
m48_377 -> m48_67  [key=2, style=dotted];
m48_377 -> m48_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_378 -> m48_375  [key=0, style=bold, color=blue];
m48_279 -> m48_280  [key=0, style=solid];
m48_280 -> m48_281  [key=0, style=solid];
m48_280 -> m48_284  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_281 -> m48_282  [key=0, style=solid];
m48_281 -> m48_67  [key=2, style=dotted];
m48_281 -> m48_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_282 -> m48_279  [key=0, style=bold, color=blue];
m48_18 -> m48_56  [key=2, style=dotted];
m48_18 -> m48_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_18 -> m48_19  [key=0, style=solid];
m48_18 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_46 -> m48_44  [key=0, style=bold, color=blue];
m48_62 -> m48_60  [key=0, style=bold, color=blue];
m48_316 -> m48_317  [key=0, style=solid];
m48_317 -> m48_318  [key=0, style=solid];
m48_317 -> m48_321  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_318 -> m48_319  [key=0, style=solid];
m48_318 -> m48_67  [key=2, style=dotted];
m48_318 -> m48_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_319 -> m48_316  [key=0, style=bold, color=blue];
m48_268 -> m48_269  [key=0, style=solid];
m48_269 -> m48_270  [key=0, style=solid];
m48_269 -> m48_273  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_270 -> m48_271  [key=0, style=solid];
m48_270 -> m48_67  [key=2, style=dotted];
m48_270 -> m48_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_271 -> m48_268  [key=0, style=bold, color=blue];
m48_396 -> m48_397  [key=0, style=solid];
m48_397 -> m48_398  [key=0, style=solid];
m48_397 -> m48_401  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_398 -> m48_399  [key=0, style=solid];
m48_398 -> m48_67  [key=2, style=dotted];
m48_398 -> m48_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_399 -> m48_396  [key=0, style=bold, color=blue];
m48_58 -> m48_56  [key=0, style=bold, color=blue];
m48_209 -> m48_210  [key=0, style=solid];
m48_210 -> m48_211  [key=0, style=solid];
m48_210 -> m48_22  [key=2, style=dotted];
m48_210 -> m48_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_211 -> m48_209  [key=0, style=bold, color=blue];
m48_49 -> m48_50  [key=0, style=solid];
m48_154 -> m48_155  [key=0, style=solid, color=red];
m48_155 -> m48_156  [key=0, style=solid, color=red];
m48_155 -> m48_22  [key=2, style=dotted, color=red];
m48_155 -> m48_157  [key=1, style=dashed, color=red, label="lambda expression"];
m48_156 -> m48_154  [key=0, style=bold, color=blue];
m48_27 -> m48_27  [key=1, style=dashed, color=green, label=job];
m48_27 -> m48_28  [key=0, style=solid, color=green];
m48_27 -> m48_58  [key=2, style=dotted, color=green];
m48_27 -> m48_55  [key=2, style=dotted, color=green];
m48_27 -> m48_29  [key=1, style=dashed, color=green, label=job];
m48_54 -> m48_55  [key=0, style=solid];
m48_54 -> n9  [key=2, style=dotted];
m48_386 -> m48_387  [key=0, style=solid];
m48_387 -> m48_388  [key=0, style=solid];
m48_387 -> m48_22  [key=2, style=dotted];
m48_387 -> m48_389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_388 -> m48_386  [key=0, style=bold, color=blue];
m48_428 -> m48_429  [key=0, style=solid];
m48_428 -> m48_430  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_428 -> m48_431  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_6 -> m48_7  [key=0, style=solid];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_9  [key=2, style=dotted];
m48_7 -> m48_10  [key=2, style=dotted];
m48_8 -> m48_6  [key=0, style=bold, color=blue];
m48_8 -> m48_9  [key=0, style=solid];
m48_8 -> m48_48  [key=2, style=dotted];
m48_8 -> m48_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m48_15 -> m48_16  [key=0, style=solid];
m48_15 -> m48_45  [key=2, style=dotted];
m48_16 -> m48_17  [key=0, style=solid];
m48_16 -> m48_9  [key=2, style=dotted];
m48_16 -> m48_18  [key=2, style=dotted];
m48_16 -> m48_42  [key=0, style=solid];
m48_17 -> m48_15  [key=0, style=bold, color=blue];
m48_17 -> m48_18  [key=0, style=solid];
m48_17 -> m48_45  [key=2, style=dotted];
m48_23 -> m48_24  [key=0, style=solid];
m48_23 -> m48_45  [key=2, style=dotted];
m48_24 -> m48_25  [key=0, style=solid];
m48_24 -> m48_27  [key=2, style=dotted];
m48_24 -> m48_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_24 -> m48_26  [key=0, style=solid];
m48_25 -> m48_26  [key=0, style=solid];
m48_25 -> m48_28  [key=2, style=dotted];
m48_25 -> m48_45  [key=2, style=dotted];
m48_26 -> m48_23  [key=0, style=bold, color=blue];
m48_26 -> m48_27  [key=0, style=solid, color=green];
m48_26 -> m48_45  [key=2, style=dotted];
m48_32 -> m48_33  [key=0, style=solid];
m48_32 -> m48_45  [key=2, style=dotted];
m48_33 -> m48_34  [key=0, style=solid];
m48_33 -> m48_36  [key=2, style=dotted];
m48_33 -> m48_56  [key=2, style=dotted];
m48_33 -> m48_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_33 -> m48_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_34 -> m48_35  [key=0, style=solid];
m48_34 -> m48_28  [key=2, style=dotted];
m48_34 -> m48_45  [key=2, style=dotted];
m48_35 -> m48_32  [key=0, style=bold, color=blue];
m48_35 -> m48_36  [key=0, style=solid];
m48_35 -> m48_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_35 -> m48_41  [key=0, style=solid];
m48_35 -> m48_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_40 -> m48_41  [key=0, style=solid];
m48_40 -> m48_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_41 -> m48_42  [key=0, style=solid];
m48_41 -> m48_4  [key=2, style=dotted];
m48_41 -> m48_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_41 -> m48_16  [key=0, style=solid];
m48_41 -> m48_45  [key=2, style=dotted];
m48_42 -> m48_43  [key=0, style=solid];
m48_42 -> n9  [key=2, style=dotted];
m48_42 -> m48_45  [key=2, style=dotted];
m48_44 -> m48_45  [key=0, style=solid];
m48_44 -> m48_0  [key=0, style=bold, color=blue];
m48_43 -> m48_40  [key=0, style=bold, color=blue];
m48_43 -> m48_55  [key=2, style=dotted];
m48_43 -> m48_44  [key=0, style=solid];
m48_43 -> m48_62  [key=2, style=dotted];
m48_43 -> m48_54  [key=2, style=dotted];
m48_52 -> m48_53  [key=0, style=solid];
m48_52 -> m48_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_56 -> m48_57  [key=0, style=solid];
m48_55 -> m48_52  [key=0, style=bold, color=blue];
m48_60 -> m48_61  [key=0, style=solid];
m48_61 -> m48_62  [key=0, style=solid];
m48_61 -> m48_63  [key=2, style=dotted];
m48_68 -> m48_69  [key=0, style=solid];
m48_68 -> m48_72  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_68 -> m48_83  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_69 -> m48_70  [key=0, style=solid];
m48_69 -> m48_59  [key=2, style=dotted];
m48_69 -> m48_47  [key=2, style=dotted];
m48_69 -> m48_87  [key=2, style=dotted];
m48_69 -> m48_48  [key=2, style=dotted];
m48_69 -> m48_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_69 -> m48_71  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_69 -> m48_73  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_69 -> m48_83  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_72 -> m48_73  [key=0, style=solid];
m48_72 -> m48_89  [key=2, style=dotted];
m48_72 -> m48_90  [key=2, style=dotted];
m48_72 -> m48_74  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m48_72 -> m48_75  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m48_72 -> m48_76  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m48_72 -> m48_77  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m48_72 -> m48_82  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m48_83 -> m48_84  [key=0, style=solid];
m48_83 -> m48_89  [key=2, style=dotted];
m48_83 -> m48_96  [key=2, style=dotted];
m48_83 -> m48_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_83 -> m48_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_83 -> m48_85  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m48_70 -> m48_71  [key=0, style=solid];
m48_70 -> m48_28  [key=2, style=dotted];
m48_97 -> m48_98  [key=0, style=solid];
m48_71 -> m48_72  [key=0, style=solid];
m48_71 -> m48_88  [key=2, style=dotted];
m48_73 -> m48_74  [key=0, style=solid];
m48_73 -> m48_91  [key=2, style=dotted];
m48_73 -> n9  [key=2, style=dotted];
m48_74 -> m48_75  [key=0, style=solid];
m48_74 -> n9  [key=2, style=dotted];
m48_75 -> m48_76  [key=0, style=solid];
m48_75 -> n9  [key=2, style=dotted];
m48_76 -> m48_77  [key=0, style=solid];
m48_76 -> m48_92  [key=2, style=dotted];
m48_76 -> m48_78  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m48_77 -> m48_78  [key=0, style=solid];
m48_82 -> m48_83  [key=0, style=solid];
m48_82 -> m48_94  [key=2, style=dotted];
m48_82 -> m48_95  [key=2, style=dotted];
m48_78 -> m48_79  [key=0, style=solid];
m48_78 -> m48_93  [key=2, style=dotted];
m48_78 -> m48_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_78 -> m48_81  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_79 -> m48_80  [key=0, style=solid];
m48_79 -> n9  [key=2, style=dotted];
m48_80 -> m48_81  [key=0, style=solid];
m48_80 -> n9  [key=2, style=dotted];
m48_81 -> m48_82  [key=0, style=solid];
m48_81 -> n9  [key=2, style=dotted];
m48_84 -> m48_85  [key=0, style=solid];
m48_84 -> n9  [key=2, style=dotted];
m48_100 -> m48_101  [key=0, style=solid];
m48_103 -> m48_104  [key=0, style=solid];
m48_85 -> m48_86  [key=0, style=solid];
m48_85 -> n9  [key=2, style=dotted];
m48_86 -> m48_68  [key=0, style=bold, color=blue];
m48_98 -> m48_99  [key=0, style=solid];
m48_98 -> m48_63  [key=2, style=dotted];
m48_99 -> m48_97  [key=0, style=bold, color=blue];
m48_101 -> m48_102  [key=0, style=solid];
m48_102 -> m48_100  [key=0, style=bold, color=blue];
m48_104 -> m48_105  [key=0, style=solid];
m48_105 -> m48_103  [key=0, style=bold, color=blue];
m48_109 -> m48_110  [key=0, style=solid];
m48_109 -> m48_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_110 -> m48_111  [key=0, style=solid];
m48_110 -> m48_4  [key=2, style=dotted];
m48_110 -> m48_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_113 -> m48_114  [key=0, style=solid];
m48_113 -> m48_115  [key=2, style=dotted];
m48_111 -> m48_109  [key=0, style=bold, color=blue];
m48_112 -> m48_113  [key=0, style=solid];
m48_114 -> m48_112  [key=0, style=bold, color=blue];
m48_119 -> m48_120  [key=0, style=solid];
m48_120 -> m48_121  [key=0, style=solid];
m48_120 -> m48_115  [key=2, style=dotted];
m48_121 -> m48_122  [key=0, style=solid];
m48_121 -> m48_123  [key=2, style=dotted];
m48_122 -> m48_119  [key=0, style=bold, color=blue];
m48_130 -> m48_131  [key=0, style=solid];
m48_130 -> m48_138  [key=2, style=dotted];
m48_130 -> m48_139  [key=2, style=dotted];
m48_130 -> m48_89  [key=2, style=dotted];
m48_130 -> m48_90  [key=2, style=dotted];
m48_128 -> m48_129  [key=0, style=solid];
m48_128 -> m48_130  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_128 -> m48_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_129 -> m48_130  [key=0, style=solid];
m48_129 -> m48_59  [key=2, style=dotted];
m48_129 -> m48_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_131 -> m48_132  [key=0, style=solid];
m48_131 -> m48_140  [key=2, style=dotted];
m48_131 -> m48_115  [key=2, style=dotted];
m48_131 -> m48_133  [key=1, style=dashed, color=darkseagreen4, label=result];
m48_131 -> m48_134  [key=1, style=dashed, color=darkseagreen4, label=result];
m48_131 -> m48_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m48_131 -> m48_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m48_141 -> m48_142  [key=0, style=solid];
m48_132 -> m48_133  [key=0, style=solid];
m48_132 -> m48_28  [key=2, style=dotted];
m48_133 -> m48_134  [key=0, style=solid];
m48_133 -> m48_28  [key=2, style=dotted];
m48_134 -> m48_135  [key=0, style=solid];
m48_134 -> n9  [key=2, style=dotted];
m48_135 -> m48_136  [key=0, style=solid];
m48_135 -> n9  [key=2, style=dotted];
m48_136 -> m48_137  [key=0, style=solid];
m48_136 -> m48_123  [key=2, style=dotted];
m48_137 -> m48_128  [key=0, style=bold, color=blue];
m48_142 -> m48_143  [key=0, style=solid];
m48_142 -> m48_63  [key=2, style=dotted];
m48_143 -> m48_141  [key=0, style=bold, color=blue];
m48_149 -> m48_150  [key=0, style=solid];
m48_149 -> m48_153  [key=2, style=dotted];
m48_149 -> m48_139  [key=2, style=dotted];
m48_149 -> m48_89  [key=2, style=dotted];
m48_149 -> m48_90  [key=2, style=dotted];
m48_148 -> m48_149  [key=0, style=solid];
m48_148 -> m48_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_150 -> m48_151  [key=0, style=solid];
m48_150 -> m48_140  [key=2, style=dotted];
m48_150 -> m48_115  [key=2, style=dotted];
m48_151 -> m48_152  [key=0, style=solid];
m48_151 -> m48_28  [key=2, style=dotted];
m48_152 -> m48_148  [key=0, style=bold, color=blue];
m48_157 -> m48_158  [key=0, style=solid];
m48_157 -> m48_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_158 -> m48_159  [key=0, style=solid];
m48_158 -> m48_4  [key=2, style=dotted];
m48_158 -> m48_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_162 -> m48_163  [key=0, style=solid];
m48_162 -> m48_164  [key=2, style=dotted];
m48_159 -> m48_160  [key=0, style=solid];
m48_159 -> n9  [key=2, style=dotted];
m48_161 -> m48_162  [key=0, style=solid];
m48_160 -> m48_157  [key=0, style=bold, color=blue];
m48_163 -> m48_161  [key=0, style=bold, color=blue];
m48_168 -> m48_169  [key=0, style=solid];
m48_168 -> m48_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_169 -> m48_170  [key=0, style=solid];
m48_169 -> m48_4  [key=2, style=dotted];
m48_169 -> m48_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_173 -> m48_174  [key=0, style=solid];
m48_173 -> m48_164  [key=2, style=dotted];
m48_170 -> m48_171  [key=0, style=solid];
m48_170 -> n9  [key=2, style=dotted];
m48_172 -> m48_173  [key=0, style=solid];
m48_171 -> m48_168  [key=0, style=bold, color=blue];
m48_174 -> m48_172  [key=0, style=bold, color=blue];
m48_180 -> m48_181  [key=0, style=solid];
m48_180 -> m48_89  [key=2, style=dotted];
m48_180 -> m48_90  [key=2, style=dotted];
m48_179 -> m48_180  [key=0, style=solid];
m48_179 -> m48_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_179 -> m48_183  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_182 -> m48_183  [key=0, style=solid];
m48_182 -> m48_164  [key=2, style=dotted];
m48_183 -> m48_184  [key=0, style=solid];
m48_183 -> m48_89  [key=2, style=dotted];
m48_183 -> m48_90  [key=2, style=dotted];
m48_181 -> m48_182  [key=0, style=solid];
m48_181 -> m48_91  [key=2, style=dotted];
m48_181 -> m48_183  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_184 -> m48_185  [key=0, style=solid];
m48_184 -> n9  [key=2, style=dotted];
m48_185 -> m48_179  [key=0, style=bold, color=blue];
m48_191 -> m48_192  [key=0, style=solid];
m48_191 -> m48_89  [key=2, style=dotted];
m48_191 -> m48_90  [key=2, style=dotted];
m48_190 -> m48_191  [key=0, style=solid];
m48_190 -> m48_193  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_190 -> m48_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_190 -> m48_195  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_193 -> m48_194  [key=0, style=solid];
m48_193 -> m48_164  [key=2, style=dotted];
m48_194 -> m48_195  [key=0, style=solid];
m48_194 -> m48_164  [key=2, style=dotted];
m48_195 -> m48_196  [key=0, style=solid];
m48_195 -> m48_89  [key=2, style=dotted];
m48_195 -> m48_90  [key=2, style=dotted];
m48_192 -> m48_193  [key=0, style=solid];
m48_192 -> m48_91  [key=2, style=dotted];
m48_192 -> m48_194  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_192 -> m48_195  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_196 -> m48_197  [key=0, style=solid];
m48_196 -> n9  [key=2, style=dotted];
m48_197 -> m48_190  [key=0, style=bold, color=blue];
m48_203 -> m48_204  [key=0, style=solid];
m48_203 -> m48_89  [key=2, style=dotted];
m48_203 -> m48_90  [key=2, style=dotted];
m48_202 -> m48_203  [key=0, style=solid];
m48_202 -> m48_205  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_202 -> m48_206  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_205 -> m48_206  [key=0, style=solid];
m48_205 -> m48_164  [key=2, style=dotted];
m48_206 -> m48_207  [key=0, style=solid];
m48_206 -> m48_89  [key=2, style=dotted];
m48_206 -> m48_90  [key=2, style=dotted];
m48_204 -> m48_205  [key=0, style=solid];
m48_204 -> m48_91  [key=2, style=dotted];
m48_204 -> m48_206  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m48_207 -> m48_208  [key=0, style=solid];
m48_207 -> n9  [key=2, style=dotted];
m48_208 -> m48_202  [key=0, style=bold, color=blue];
m48_212 -> m48_213  [key=0, style=solid];
m48_212 -> m48_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_213 -> m48_214  [key=0, style=solid];
m48_213 -> m48_4  [key=2, style=dotted];
m48_213 -> m48_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_217 -> m48_218  [key=0, style=solid];
m48_217 -> m48_219  [key=2, style=dotted];
m48_214 -> m48_215  [key=0, style=solid];
m48_214 -> n9  [key=2, style=dotted];
m48_216 -> m48_217  [key=0, style=solid];
m48_215 -> m48_212  [key=0, style=bold, color=blue];
m48_218 -> m48_216  [key=0, style=bold, color=blue];
m48_223 -> m48_224  [key=0, style=solid];
m48_223 -> m48_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_224 -> m48_225  [key=0, style=solid];
m48_224 -> m48_4  [key=2, style=dotted];
m48_224 -> m48_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_228 -> m48_229  [key=0, style=solid];
m48_228 -> m48_219  [key=2, style=dotted];
m48_225 -> m48_226  [key=0, style=solid];
m48_225 -> n9  [key=2, style=dotted];
m48_227 -> m48_228  [key=0, style=solid];
m48_226 -> m48_223  [key=0, style=bold, color=blue];
m48_229 -> m48_227  [key=0, style=bold, color=blue];
m48_233 -> m48_234  [key=0, style=solid];
m48_234 -> m48_235  [key=0, style=solid];
m48_234 -> m48_219  [key=2, style=dotted];
m48_235 -> m48_236  [key=0, style=solid];
m48_235 -> m48_123  [key=2, style=dotted];
m48_236 -> m48_233  [key=0, style=bold, color=blue];
m48_242 -> m48_243  [key=0, style=solid];
m48_242 -> m48_4  [key=2, style=dotted];
m48_242 -> m48_90  [key=2, style=dotted];
m48_241 -> m48_242  [key=0, style=solid];
m48_241 -> m48_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_243 -> m48_244  [key=0, style=solid];
m48_243 -> m48_91  [key=2, style=dotted];
m48_243 -> m48_246  [key=2, style=dotted];
m48_244 -> m48_245  [key=0, style=solid];
m48_244 -> n9  [key=2, style=dotted];
m48_245 -> m48_241  [key=0, style=bold, color=blue];
m48_250 -> m48_251  [key=0, style=solid];
m48_250 -> m48_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_251 -> m48_252  [key=0, style=solid];
m48_251 -> m48_4  [key=2, style=dotted];
m48_251 -> m48_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_255 -> m48_256  [key=0, style=solid];
m48_255 -> m48_257  [key=2, style=dotted];
m48_252 -> m48_253  [key=0, style=solid];
m48_252 -> n9  [key=2, style=dotted];
m48_254 -> m48_255  [key=0, style=solid];
m48_253 -> m48_250  [key=0, style=bold, color=blue];
m48_256 -> m48_254  [key=0, style=bold, color=blue];
m48_261 -> m48_262  [key=0, style=solid];
m48_261 -> m48_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_262 -> m48_263  [key=0, style=solid];
m48_262 -> m48_4  [key=2, style=dotted];
m48_262 -> m48_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_266 -> m48_267  [key=0, style=solid];
m48_266 -> m48_257  [key=2, style=dotted];
m48_263 -> m48_264  [key=0, style=solid];
m48_263 -> n9  [key=2, style=dotted];
m48_265 -> m48_266  [key=0, style=solid];
m48_264 -> m48_261  [key=0, style=bold, color=blue];
m48_267 -> m48_265  [key=0, style=bold, color=blue];
m48_273 -> m48_274  [key=0, style=solid];
m48_273 -> m48_278  [key=2, style=dotted];
m48_272 -> m48_273  [key=0, style=solid];
m48_272 -> m48_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_272 -> m48_275  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_274 -> m48_275  [key=0, style=solid];
m48_274 -> m48_257  [key=2, style=dotted];
m48_275 -> m48_276  [key=0, style=solid];
m48_275 -> m48_4  [key=2, style=dotted];
m48_275 -> m48_90  [key=2, style=dotted];
m48_276 -> m48_277  [key=0, style=solid];
m48_276 -> n9  [key=2, style=dotted];
m48_277 -> m48_272  [key=0, style=bold, color=blue];
m48_284 -> m48_285  [key=0, style=solid];
m48_284 -> m48_278  [key=2, style=dotted];
m48_283 -> m48_284  [key=0, style=solid];
m48_283 -> m48_285  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_283 -> m48_286  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_285 -> m48_286  [key=0, style=solid];
m48_285 -> m48_257  [key=2, style=dotted];
m48_286 -> m48_287  [key=0, style=solid];
m48_286 -> m48_4  [key=2, style=dotted];
m48_286 -> m48_90  [key=2, style=dotted];
m48_287 -> m48_288  [key=0, style=solid];
m48_287 -> n9  [key=2, style=dotted];
m48_288 -> m48_283  [key=0, style=bold, color=blue];
m48_292 -> m48_293  [key=0, style=solid];
m48_292 -> m48_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_293 -> m48_294  [key=0, style=solid];
m48_293 -> m48_4  [key=2, style=dotted];
m48_293 -> m48_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_297 -> m48_298  [key=0, style=solid];
m48_297 -> m48_299  [key=2, style=dotted];
m48_294 -> m48_295  [key=0, style=solid];
m48_294 -> n9  [key=2, style=dotted];
m48_296 -> m48_297  [key=0, style=solid];
m48_295 -> m48_292  [key=0, style=bold, color=blue];
m48_298 -> m48_296  [key=0, style=bold, color=blue];
m48_303 -> m48_304  [key=0, style=solid];
m48_303 -> m48_307  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_304 -> m48_305  [key=0, style=solid];
m48_304 -> m48_4  [key=2, style=dotted];
m48_304 -> m48_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_307 -> m48_308  [key=0, style=solid];
m48_307 -> m48_299  [key=2, style=dotted];
m48_305 -> m48_303  [key=0, style=bold, color=blue];
m48_306 -> m48_307  [key=0, style=solid];
m48_308 -> m48_306  [key=0, style=bold, color=blue];
m48_312 -> m48_313  [key=0, style=solid];
m48_313 -> m48_314  [key=0, style=solid];
m48_313 -> m48_299  [key=2, style=dotted];
m48_314 -> m48_315  [key=0, style=solid];
m48_314 -> m48_123  [key=2, style=dotted];
m48_315 -> m48_312  [key=0, style=bold, color=blue];
m48_321 -> m48_322  [key=0, style=solid];
m48_321 -> m48_278  [key=2, style=dotted];
m48_320 -> m48_321  [key=0, style=solid];
m48_320 -> m48_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_322 -> m48_323  [key=0, style=solid];
m48_322 -> m48_299  [key=2, style=dotted];
m48_323 -> m48_324  [key=0, style=solid];
m48_323 -> n9  [key=2, style=dotted];
m48_324 -> m48_320  [key=0, style=bold, color=blue];
m48_328 -> m48_329  [key=0, style=solid];
m48_328 -> m48_333  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_329 -> m48_330  [key=0, style=solid];
m48_329 -> m48_4  [key=2, style=dotted];
m48_329 -> m48_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_333 -> m48_334  [key=0, style=solid];
m48_333 -> m48_335  [key=2, style=dotted];
m48_333 -> m48_336  [key=2, style=dotted];
m48_330 -> m48_331  [key=0, style=solid];
m48_330 -> n9  [key=2, style=dotted];
m48_332 -> m48_333  [key=0, style=solid];
m48_331 -> m48_328  [key=0, style=bold, color=blue];
m48_334 -> m48_332  [key=0, style=bold, color=blue];
m48_340 -> m48_341  [key=0, style=solid];
m48_340 -> m48_345  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_341 -> m48_342  [key=0, style=solid];
m48_341 -> m48_4  [key=2, style=dotted];
m48_341 -> m48_344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_345 -> m48_346  [key=0, style=solid];
m48_345 -> m48_336  [key=2, style=dotted];
m48_342 -> m48_343  [key=0, style=solid];
m48_342 -> n9  [key=2, style=dotted];
m48_344 -> m48_345  [key=0, style=solid];
m48_343 -> m48_340  [key=0, style=bold, color=blue];
m48_346 -> m48_344  [key=0, style=bold, color=blue];
m48_350 -> m48_351  [key=0, style=solid];
m48_350 -> m48_352  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_350 -> m48_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_350 -> m48_358  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_350 -> m48_359  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_351 -> m48_352  [key=0, style=solid];
m48_351 -> m48_335  [key=2, style=dotted];
m48_352 -> m48_353  [key=0, style=solid];
m48_352 -> m48_336  [key=2, style=dotted];
m48_353 -> m48_354  [key=0, style=solid];
m48_353 -> m48_89  [key=2, style=dotted];
m48_353 -> m48_90  [key=2, style=dotted];
m48_353 -> m48_355  [key=1, style=dashed, color=darkseagreen4, label=server];
m48_353 -> m48_356  [key=1, style=dashed, color=darkseagreen4, label=server];
m48_358 -> m48_359  [key=0, style=solid];
m48_358 -> m48_336  [key=2, style=dotted];
m48_359 -> m48_360  [key=0, style=solid];
m48_359 -> m48_89  [key=2, style=dotted];
m48_359 -> m48_90  [key=2, style=dotted];
m48_359 -> m48_361  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m48_354 -> m48_355  [key=0, style=solid];
m48_354 -> n9  [key=2, style=dotted];
m48_355 -> m48_356  [key=0, style=solid];
m48_355 -> m48_363  [key=2, style=dotted];
m48_355 -> m48_95  [key=2, style=dotted];
m48_356 -> m48_357  [key=0, style=solid];
m48_356 -> m48_28  [key=2, style=dotted];
m48_357 -> m48_358  [key=0, style=solid];
m48_357 -> m48_335  [key=2, style=dotted];
m48_360 -> m48_361  [key=0, style=solid];
m48_360 -> n9  [key=2, style=dotted];
m48_361 -> m48_362  [key=0, style=solid];
m48_361 -> m48_364  [key=2, style=dotted];
m48_362 -> m48_350  [key=0, style=bold, color=blue];
m48_368 -> m48_369  [key=0, style=solid];
m48_368 -> m48_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_369 -> m48_370  [key=0, style=solid];
m48_369 -> m48_4  [key=2, style=dotted];
m48_369 -> m48_371  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_372 -> m48_373  [key=0, style=solid];
m48_372 -> m48_374  [key=2, style=dotted];
m48_370 -> m48_368  [key=0, style=bold, color=blue];
m48_371 -> m48_372  [key=0, style=solid];
m48_373 -> m48_371  [key=0, style=bold, color=blue];
m48_380 -> m48_381  [key=0, style=solid];
m48_380 -> m48_278  [key=2, style=dotted];
m48_379 -> m48_380  [key=0, style=solid];
m48_379 -> m48_381  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_379 -> m48_382  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_381 -> m48_382  [key=0, style=solid];
m48_381 -> m48_374  [key=2, style=dotted];
m48_382 -> m48_383  [key=0, style=solid];
m48_382 -> m48_89  [key=2, style=dotted];
m48_382 -> m48_90  [key=2, style=dotted];
m48_383 -> m48_384  [key=0, style=solid];
m48_383 -> m48_385  [key=2, style=dotted];
m48_384 -> m48_379  [key=0, style=bold, color=blue];
m48_389 -> m48_390  [key=0, style=solid];
m48_389 -> m48_393  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_390 -> m48_391  [key=0, style=solid];
m48_390 -> m48_4  [key=2, style=dotted];
m48_390 -> m48_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_393 -> m48_394  [key=0, style=solid];
m48_393 -> m48_395  [key=2, style=dotted];
m48_391 -> m48_389  [key=0, style=bold, color=blue];
m48_392 -> m48_393  [key=0, style=solid];
m48_394 -> m48_392  [key=0, style=bold, color=blue];
m48_401 -> m48_402  [key=0, style=solid];
m48_401 -> m48_278  [key=2, style=dotted];
m48_400 -> m48_401  [key=0, style=solid];
m48_400 -> m48_402  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_400 -> m48_403  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m48_402 -> m48_403  [key=0, style=solid];
m48_402 -> m48_395  [key=2, style=dotted];
m48_403 -> m48_404  [key=0, style=solid];
m48_403 -> m48_89  [key=2, style=dotted];
m48_403 -> m48_96  [key=2, style=dotted];
m48_403 -> m48_407  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_403 -> m48_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_403 -> m48_405  [key=1, style=dashed, color=darkseagreen4, label=servers];
m48_404 -> m48_405  [key=0, style=solid];
m48_404 -> m48_385  [key=2, style=dotted];
m48_407 -> m48_408  [key=0, style=solid];
m48_410 -> m48_411  [key=0, style=solid];
m48_405 -> m48_406  [key=0, style=solid];
m48_405 -> n9  [key=2, style=dotted];
m48_406 -> m48_400  [key=0, style=bold, color=blue];
m48_408 -> m48_409  [key=0, style=solid];
m48_409 -> m48_407  [key=0, style=bold, color=blue];
m48_411 -> m48_412  [key=0, style=solid];
m48_412 -> m48_410  [key=0, style=bold, color=blue];
m48_416 -> m48_417  [key=0, style=solid];
m48_416 -> m48_420  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_417 -> m48_418  [key=0, style=solid];
m48_417 -> m48_4  [key=2, style=dotted];
m48_417 -> m48_419  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_420 -> m48_421  [key=0, style=solid];
m48_420 -> m48_422  [key=2, style=dotted];
m48_420 -> m48_423  [key=2, style=dotted];
m48_418 -> m48_416  [key=0, style=bold, color=blue];
m48_419 -> m48_420  [key=0, style=solid];
m48_421 -> m48_419  [key=0, style=bold, color=blue];
m48_429 -> m48_430  [key=0, style=solid];
m48_429 -> m48_94  [key=2, style=dotted];
m48_429 -> m48_434  [key=2, style=dotted];
m48_429 -> m48_278  [key=2, style=dotted];
m48_430 -> m48_431  [key=0, style=solid];
m48_430 -> m48_435  [key=2, style=dotted];
m48_430 -> m48_423  [key=2, style=dotted];
m48_431 -> m48_432  [key=0, style=solid];
m48_431 -> m48_89  [key=2, style=dotted];
m48_431 -> m48_90  [key=2, style=dotted];
m48_432 -> m48_433  [key=0, style=solid];
m48_432 -> n9  [key=2, style=dotted];
m48_433 -> m48_428  [key=0, style=bold, color=blue];
m48_198 -> m48_199  [key=0, style=solid];
m48_199 -> m48_200  [key=0, style=solid];
m48_199 -> m48_203  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_200 -> m48_201  [key=0, style=solid];
m48_200 -> m48_67  [key=2, style=dotted];
m48_200 -> m48_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_201 -> m48_198  [key=0, style=bold, color=blue];
m48_10 -> m48_11  [key=0, style=solid];
m48_10 -> m48_52  [key=2, style=dotted];
m48_10 -> m48_16  [key=1, style=dashed, color=darkseagreen4, label=processingJobs];
m48_51 -> m48_49  [key=0, style=bold, color=blue];
m48_106 -> m48_107  [key=0, style=solid];
m48_107 -> m48_108  [key=0, style=solid];
m48_107 -> m48_22  [key=2, style=dotted];
m48_107 -> m48_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_108 -> m48_106  [key=0, style=bold, color=blue];
m48_365 -> m48_366  [key=0, style=solid];
m48_366 -> m48_367  [key=0, style=solid];
m48_366 -> m48_22  [key=2, style=dotted];
m48_366 -> m48_368  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_367 -> m48_365  [key=0, style=bold, color=blue];
m48_186 -> m48_187  [key=0, style=solid];
m48_187 -> m48_188  [key=0, style=solid];
m48_187 -> m48_191  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_188 -> m48_189  [key=0, style=solid];
m48_188 -> m48_67  [key=2, style=dotted];
m48_188 -> m48_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_189 -> m48_186  [key=0, style=bold, color=blue];
m48_22 -> m48_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_22 -> m48_55  [key=2, style=dotted];
m48_22 -> m48_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_22 -> m48_23  [key=0, style=solid];
m48_22 -> m48_57  [key=2, style=dotted];
m48_19 -> m48_20  [key=0, style=solid];
m48_19 -> m48_45  [key=2, style=dotted];
m48_20 -> m48_21  [key=0, style=solid];
m48_20 -> m48_22  [key=2, style=dotted];
m48_20 -> m48_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_20 -> m48_56  [key=2, style=dotted];
m48_20 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_20 -> m48_51  [key=2, style=dotted];
m48_21 -> m48_19  [key=0, style=bold, color=blue];
m48_21 -> m48_22  [key=0, style=solid];
m48_21 -> m48_45  [key=2, style=dotted];
m48_325 -> m48_326  [key=0, style=solid];
m48_326 -> m48_327  [key=0, style=solid];
m48_326 -> m48_22  [key=2, style=dotted];
m48_326 -> m48_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_327 -> m48_325  [key=0, style=bold, color=blue];
m48_230 -> m48_231  [key=0, style=solid];
m48_231 -> m48_232  [key=0, style=solid];
m48_231 -> m48_22  [key=2, style=dotted];
m48_231 -> m48_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_232 -> m48_230  [key=0, style=bold, color=blue];
m48_300 -> m48_301  [key=0, style=solid];
m48_301 -> m48_302  [key=0, style=solid];
m48_301 -> m48_22  [key=2, style=dotted];
m48_301 -> m48_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_302 -> m48_300  [key=0, style=bold, color=blue];
m48_50 -> m48_51  [key=0, style=solid];
m48_50 -> m48_22  [key=2, style=dotted];
m48_50 -> m48_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_4  [key=2, style=dotted];
m48_1 -> m48_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_1 -> m48_45  [key=2, style=dotted];
m48_2 -> m48_3  [key=0, style=solid];
m48_2 -> n9  [key=2, style=dotted];
m48_2 -> m48_46  [key=2, style=dotted];
m48_3 -> m48_0  [key=0, style=bold, color=blue];
m48_3 -> m48_4  [key=0, style=solid];
m48_28 -> m48_29  [key=0, style=solid, color=green];
m48_28 -> m48_45  [key=2, style=dotted];
m48_424 -> m48_425  [key=0, style=solid];
m48_425 -> m48_426  [key=0, style=solid];
m48_425 -> m48_429  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_426 -> m48_427  [key=0, style=solid];
m48_426 -> m48_67  [key=2, style=dotted];
m48_426 -> m48_428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_427 -> m48_424  [key=0, style=bold, color=blue];
m48_413 -> m48_414  [key=0, style=solid];
m48_414 -> m48_415  [key=0, style=solid];
m48_414 -> m48_22  [key=2, style=dotted];
m48_414 -> m48_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_415 -> m48_413  [key=0, style=bold, color=blue];
m48_175 -> m48_176  [key=0, style=solid];
m48_176 -> m48_177  [key=0, style=solid];
m48_176 -> m48_180  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_177 -> m48_178  [key=0, style=solid];
m48_177 -> m48_67  [key=2, style=dotted];
m48_177 -> m48_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_178 -> m48_175  [key=0, style=bold, color=blue];
m48_11 -> m48_12  [key=0, style=solid];
m48_11 -> m48_45  [key=2, style=dotted];
m48_12 -> m48_13  [key=0, style=solid];
m48_12 -> m48_4  [key=2, style=dotted];
m48_12 -> m48_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_12 -> m48_14  [key=0, style=solid];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> n9  [key=2, style=dotted];
m48_13 -> m48_44  [key=0, style=solid];
m48_13 -> m48_45  [key=2, style=dotted];
m48_14 -> m48_11  [key=0, style=bold, color=blue];
m48_14 -> m48_55  [key=2, style=dotted];
m48_14 -> m48_15  [key=0, style=solid];
m48_14 -> m48_53  [key=2, style=dotted];
m48_14 -> m48_54  [key=2, style=dotted];
m48_63 -> m48_447  [key=0, style=solid];
m48_63 -> m48_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_63 -> m48_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m48_447 -> m48_63  [key=0, style=bold, color=blue];
m48_309 -> m48_310  [key=0, style=solid];
m48_310 -> m48_311  [key=0, style=solid];
m48_310 -> m48_22  [key=2, style=dotted];
m48_310 -> m48_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_311 -> m48_309  [key=0, style=bold, color=blue];
m48_36 -> m48_37  [key=0, style=solid];
m48_36 -> m48_45  [key=2, style=dotted];
m48_337 -> m48_338  [key=0, style=solid];
m48_338 -> m48_339  [key=0, style=solid];
m48_338 -> m48_22  [key=2, style=dotted];
m48_338 -> m48_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_339 -> m48_337  [key=0, style=bold, color=blue];
m48_442 -> m48_443  [key=0, style=solid];
m48_442 -> m48_444  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerConnection>"];
m48_443 -> m48_444  [key=0, style=solid];
m48_443 -> m48_9  [key=2, style=dotted];
m48_443 -> m48_18  [key=2, style=dotted];
m48_443 -> m48_10  [key=2, style=dotted];
m48_444 -> m48_445  [key=0, style=solid];
m48_444 -> m48_446  [key=2, style=dotted];
m48_445 -> m48_442  [key=0, style=bold, color=blue];
m48_9 -> m48_10  [key=0, style=solid];
m48_9 -> m48_49  [key=2, style=dotted];
m48_9 -> m48_50  [key=2, style=dotted];
m48_9 -> m48_51  [key=2, style=dotted];
m48_9 -> m48_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m48_9 -> m48_14  [key=1, style=dashed, color=darkseagreen4, label=pager];
m48_9 -> m48_43  [key=1, style=dashed, color=darkseagreen4, label=pager];
m48_436 -> m48_437  [key=0, style=solid];
m48_436 -> m48_439  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>"];
m48_437 -> m48_438  [key=0, style=solid];
m48_437 -> m48_18  [key=2, style=dotted];
m48_437 -> m48_439  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m48_439 -> m48_440  [key=0, style=solid];
m48_439 -> m48_441  [key=2, style=dotted];
m48_438 -> m48_439  [key=0, style=solid];
m48_438 -> m48_9  [key=2, style=dotted];
m48_438 -> m48_10  [key=2, style=dotted];
m48_440 -> m48_436  [key=0, style=bold, color=blue];
m48_4 -> m48_5  [key=0, style=solid];
m48_4 -> m48_47  [key=2, style=dotted];
m48_4 -> m48_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m48_258 -> m48_259  [key=0, style=solid];
m48_259 -> m48_260  [key=0, style=solid];
m48_259 -> m48_22  [key=2, style=dotted];
m48_259 -> m48_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_260 -> m48_258  [key=0, style=bold, color=blue];
m48_237 -> m48_238  [key=0, style=solid];
m48_238 -> m48_239  [key=0, style=solid];
m48_238 -> m48_242  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_239 -> m48_240  [key=0, style=solid];
m48_239 -> m48_67  [key=2, style=dotted];
m48_239 -> m48_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_240 -> m48_237  [key=0, style=bold, color=blue];
m48_144 -> m48_145  [key=0, style=solid];
m48_145 -> m48_146  [key=0, style=solid];
m48_145 -> m48_149  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_146 -> m48_147  [key=0, style=solid];
m48_146 -> m48_67  [key=2, style=dotted];
m48_146 -> m48_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_147 -> m48_144  [key=0, style=bold, color=blue];
m48_5 -> m48_6  [key=0, style=solid];
m48_5 -> m48_47  [key=2, style=dotted];
m48_5 -> m48_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m48_37 -> m48_56  [key=2, style=dotted];
m48_37 -> m48_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_37 -> m48_38  [key=0, style=solid];
m48_37 -> m48_61  [key=2, style=dotted];
m48_37 -> m48_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_38 -> m48_39  [key=0, style=solid];
m48_38 -> m48_45  [key=2, style=dotted];
m48_38 -> m48_22  [key=2, style=dotted];
m48_38 -> m48_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_39 -> m48_56  [key=2, style=dotted];
m48_39 -> m48_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m48_39 -> m48_40  [key=0, style=solid];
m48_39 -> m48_37  [key=0, style=bold, color=blue];
m48_165 -> m48_166  [key=0, style=solid];
m48_166 -> m48_167  [key=0, style=solid];
m48_166 -> m48_22  [key=2, style=dotted];
m48_166 -> m48_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_167 -> m48_165  [key=0, style=bold, color=blue];
m48_116 -> m48_117  [key=0, style=solid];
m48_117 -> m48_118  [key=0, style=solid];
m48_117 -> m48_22  [key=2, style=dotted];
m48_117 -> m48_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_118 -> m48_116  [key=0, style=bold, color=blue];
m48_220 -> m48_221  [key=0, style=solid];
m48_221 -> m48_222  [key=0, style=solid];
m48_221 -> m48_22  [key=2, style=dotted];
m48_221 -> m48_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_222 -> m48_220  [key=0, style=bold, color=blue];
m48_448 -> m48_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_155  [key=1, style=dashed, color=red, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_177  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_231  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_248  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_270  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_290  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_310  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_318  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_326  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_338  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_366  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_377  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_387  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_398  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_414  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_448 -> m48_426  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m48_449 -> m48_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_450 -> m48_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_451 -> m48_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_452 -> m48_130  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_453 -> m48_149  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_454 -> m48_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_455 -> m48_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_456 -> m48_180  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_457 -> m48_191  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_458 -> m48_203  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_459 -> m48_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_460 -> m48_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_461 -> m48_242  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_462 -> m48_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_463 -> m48_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_464 -> m48_273  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_465 -> m48_284  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_466 -> m48_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_467 -> m48_307  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_468 -> m48_321  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_469 -> m48_333  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_470 -> m48_345  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_471 -> m48_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_472 -> m48_380  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_473 -> m48_393  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_474 -> m48_401  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m48_475 -> m48_420  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m48_476 -> m48_429  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m49_7 -> m49_8  [key=0, style=solid, color=red];
m49_8 -> m49_9  [key=0, style=solid, color=green];
m49_8 -> m49_10  [key=2, style=dotted, color=red];
m49_8 -> m49_11  [key=2, style=dotted, color=red];
m49_9 -> m49_7  [key=0, style=bold, color=blue];
m49_9 -> m49_10  [key=0, style=solid, color=green];
m49_9 -> m49_11  [key=2, style=dotted, color=green];
m49_10 -> m49_8  [key=0, style=bold, color=blue];
m49_0 -> m49_1  [key=0, style=solid, color=green];
m49_0 -> m49_3  [key=1, style=dashed, color=green, label=string];
m49_1 -> m49_2  [key=0, style=solid, color=green];
m49_1 -> m49_3  [key=0, style=solid, color=green];
m49_1 -> m49_5  [key=2, style=dotted, color=green];
m49_3 -> m49_4  [key=0, style=solid, color=green];
m49_2 -> m49_4  [key=0, style=solid, color=green];
m49_2 -> d24  [key=2, style=dotted, color=green];
m49_4 -> m49_4  [key=0, style=solid, color=green];
m49_4 -> m49_0  [key=0, style=bold, color=blue];
m49_12 -> m49_3  [key=1, style=dashed, color=green, label="HangFire.States.ProcessingState"];
m49_12 -> m49_8  [key=1, style=dashed, color=red, label="HangFire.States.ProcessingState"];
m49_12 -> m49_4  [key=1, style=dashed, color=green, label="HangFire.States.ProcessingState"];
m49_12 -> m49_9  [key=1, style=dashed, color=green, label="HangFire.States.ProcessingState"];
m50_8 -> m50_9  [key=0, style=solid];
m50_9 -> m50_10  [key=0, style=solid];
m50_9 -> n8  [key=2, style=dotted];
m50_9 -> m50_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m50_10 -> m50_8  [key=0, style=bold, color=blue];
m50_19 -> m50_20  [key=0, style=solid];
m50_20 -> m50_21  [key=0, style=solid, color=green];
m50_20 -> m50_7  [key=2, style=dotted];
m50_21 -> m50_22  [key=0, style=solid, color=red];
m50_21 -> m50_24  [key=2, style=dotted, color=green];
m50_21 -> m50_23  [key=0, style=solid, color=green];
m50_21 -> m50_25  [key=2, style=dotted, color=green];
m50_21 -> m50_26  [key=2, style=dotted, color=green];
m50_22 -> m50_23  [key=0, style=solid, color=red];
m50_22 -> m50_25  [key=2, style=dotted, color=red];
m50_22 -> m50_26  [key=2, style=dotted, color=red];
m50_23 -> m50_19  [key=0, style=bold, color=blue];
m50_14 -> m50_15  [key=0, style=solid];
m50_15 -> m50_16  [key=0, style=solid, color=green];
m50_15 -> m50_7  [key=2, style=dotted];
m50_16 -> m50_17  [key=0, style=solid, color=green];
m50_16 -> m50_18  [key=2, style=dotted, color=green];
m50_17 -> m50_14  [key=0, style=bold, color=blue];
m50_11 -> m50_12  [key=0, style=solid];
m50_4 -> m50_5  [key=0, style=solid];
m50_5 -> m50_6  [key=0, style=solid];
m50_5 -> m50_7  [key=2, style=dotted];
m50_6 -> m50_4  [key=0, style=bold, color=blue];
m50_12 -> m50_13  [key=0, style=solid];
m50_12 -> m50_7  [key=2, style=dotted];
m50_13 -> m50_11  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> n8  [key=2, style=dotted];
m50_1 -> m50_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m50_2 -> m50_0  [key=0, style=bold, color=blue];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_42  [key=2, style=dotted];
m51_37 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=body];
m51_40 -> m51_41  [key=0, style=solid];
m51_40 -> m51_45  [key=2, style=dotted];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_43  [key=2, style=dotted];
m51_38 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=properties];
m51_39 -> m51_40  [key=0, style=solid];
m51_39 -> m51_44  [key=2, style=dotted];
m51_41 -> m51_36  [key=0, style=bold, color=blue];
m51_14 -> m51_58  [key=0, style=solid];
m51_58 -> m51_59  [key=0, style=solid];
m51_59 -> m51_60  [key=0, style=solid];
m51_59 -> m51_61  [key=0, style=solid];
m51_60 -> m51_71  [key=0, style=solid];
m51_61 -> m51_62  [key=0, style=solid];
m51_61 -> m51_63  [key=0, style=solid];
m51_62 -> m51_63  [key=0, style=solid];
m51_62 -> m51_72  [key=2, style=dotted];
m51_63 -> m51_64  [key=0, style=solid];
m51_63 -> m51_65  [key=0, style=solid];
m51_64 -> m51_65  [key=0, style=solid];
m51_64 -> m51_12  [key=2, style=dotted];
m51_65 -> m51_66  [key=0, style=solid];
m51_65 -> m51_73  [key=2, style=dotted];
m51_66 -> m51_67  [key=0, style=solid];
m51_66 -> m51_74  [key=2, style=dotted];
m51_67 -> m51_68  [key=0, style=solid];
m51_67 -> m51_43  [key=2, style=dotted];
m51_68 -> m51_69  [key=0, style=solid];
m51_68 -> m51_44  [key=2, style=dotted];
m51_69 -> m51_70  [key=0, style=solid];
m51_69 -> m51_71  [key=0, style=solid];
m51_70 -> m51_69  [key=0, style=solid];
m51_70 -> m51_75  [key=2, style=dotted];
m51_71 -> m51_14  [key=0, style=bold, color=blue];
m51_35 -> m51_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Collections.Generic.IEnumerable<string> _queues"];
m51_46 -> m51_47  [key=0, style=solid];
m51_47 -> m51_48  [key=0, style=solid];
m51_47 -> m51_51  [key=0, style=solid];
m51_48 -> m51_49  [key=0, style=solid];
m51_48 -> m51_50  [key=0, style=solid];
m51_51 -> m51_52  [key=0, style=solid];
m51_51 -> m51_55  [key=0, style=solid];
m51_49 -> m51_50  [key=0, style=solid];
m51_49 -> m51_56  [key=2, style=dotted];
m51_50 -> m51_51  [key=0, style=solid];
m51_50 -> m51_57  [key=2, style=dotted];
m51_52 -> m51_53  [key=0, style=solid];
m51_52 -> m51_54  [key=0, style=solid];
m51_53 -> m51_54  [key=0, style=solid];
m51_53 -> m51_56  [key=2, style=dotted];
m51_54 -> m51_55  [key=0, style=solid];
m51_54 -> m51_57  [key=2, style=dotted];
m51_55 -> m51_46  [key=0, style=bold, color=blue];
m51_33 -> m51_76  [key=0, style=solid];
m51_33 -> m51_77  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m51_33 -> m51_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_33 -> m51_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_33 -> m51_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_33 -> m51_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_33 -> m51_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_33 -> m51_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_33 -> m51_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m51_33 -> m51_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
m51_76 -> m51_77  [key=0, style=solid];
m51_76 -> m51_87  [key=3, color=darkorchid, style=bold, label="Local variable QueueingBasicConsumer consumer"];
m51_77 -> m51_78  [key=0, style=solid];
m51_77 -> m51_32  [key=2, style=dotted];
m51_77 -> m51_77  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m51_78 -> m51_79  [key=0, style=solid];
m51_78 -> m51_84  [key=0, style=solid];
m51_78 -> m51_93  [key=2, style=dotted];
m51_78 -> m51_86  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m51_78 -> m51_91  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m51_80 -> m51_81  [key=0, style=solid];
m51_80 -> m51_91  [key=0, style=solid];
m51_80 -> m51_93  [key=2, style=dotted];
m51_82 -> m51_83  [key=0, style=solid];
m51_82 -> m51_95  [key=2, style=dotted];
m51_82 -> m51_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_83 -> m51_91  [key=0, style=solid];
m51_83 -> m51_96  [key=2, style=dotted];
m51_88 -> m51_89  [key=0, style=solid];
m51_88 -> m51_95  [key=2, style=dotted];
m51_88 -> m51_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_89 -> m51_90  [key=0, style=solid];
m51_89 -> m51_96  [key=2, style=dotted];
m51_79 -> m51_80  [key=0, style=solid];
m51_84 -> m51_85  [key=0, style=solid];
m51_84 -> m51_91  [key=0, style=solid];
m51_86 -> m51_87  [key=0, style=solid];
m51_86 -> m51_91  [key=0, style=solid];
m51_91 -> m51_92  [key=0, style=solid];
m51_81 -> m51_82  [key=0, style=solid];
m51_81 -> m51_94  [key=2, style=dotted];
m51_81 -> m51_98  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m51_81 -> m51_83  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m51_81 -> m51_91  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m51_85 -> m51_86  [key=0, style=solid];
m51_87 -> m51_88  [key=0, style=solid];
m51_87 -> m51_94  [key=2, style=dotted];
m51_87 -> m51_101  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m51_87 -> m51_89  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m51_87 -> m51_90  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m51_90 -> m51_91  [key=0, style=solid];
m51_92 -> m51_33  [key=0, style=bold, color=blue];
m51_100 -> m51_101  [key=0, style=solid];
m51_98 -> m51_99  [key=0, style=solid];
m51_97 -> m51_98  [key=0, style=solid];
m51_101 -> m51_102  [key=0, style=solid];
m51_99 -> m51_97  [key=0, style=bold, color=blue];
m51_102 -> m51_100  [key=0, style=bold, color=blue];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m51_15 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m51_15 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m51_16 -> m51_17  [key=0, style=solid];
m51_18 -> m51_19  [key=0, style=solid];
m51_18 -> m51_18  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m51_19 -> m51_20  [key=0, style=solid];
m51_19 -> m51_21  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m51_20 -> m51_21  [key=0, style=solid];
m51_20 -> m51_32  [key=2, style=dotted];
m51_20 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_17  [key=3, color=darkorchid, style=bold, label="Local variable int queueIndex"];
m51_21 -> m51_22  [key=0, style=solid];
m51_21 -> m51_33  [key=2, style=dotted];
m51_22 -> m51_23  [key=0, style=solid];
m51_22 -> m51_26  [key=0, style=solid];
m51_22 -> m51_29  [key=0, style=solid];
m51_22 -> m51_34  [key=2, style=dotted];
m51_23 -> m51_24  [key=0, style=solid];
m51_26 -> m51_27  [key=0, style=solid];
m51_29 -> m51_17  [key=0, style=solid];
m51_29 -> m51_30  [key=0, style=solid];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_14  [key=2, style=dotted];
m51_25 -> m51_29  [key=0, style=solid];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_14  [key=2, style=dotted];
m51_28 -> m51_29  [key=0, style=solid];
m51_28 -> m51_30  [key=1, style=dashed, color=darkseagreen4, label=message];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_35  [key=2, style=dotted];
m51_31 -> m51_15  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_3  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m51_0 -> m51_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m51_0 -> m51_6  [key=1, style=dashed, color=red, label=ConnectionFactory];
m51_0 -> m51_7  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_3  [key=0, style=solid];
m51_3 -> m51_4  [key=0, style=solid];
m51_3 -> m51_5  [key=0, style=solid];
m51_5 -> m51_6  [key=0, style=solid, color=red];
m51_6 -> m51_7  [key=0, style=solid, color=red];
m51_7 -> m51_8  [key=0, style=solid];
m51_7 -> m51_12  [key=2, style=dotted];
m51_2 -> m51_10  [key=0, style=solid];
m51_2 -> d24  [key=2, style=dotted];
m51_4 -> m51_10  [key=0, style=solid];
m51_4 -> d24  [key=2, style=dotted];
m51_8 -> m51_9  [key=0, style=solid];
m51_8 -> m51_13  [key=2, style=dotted];
m51_9 -> m51_10  [key=0, style=solid];
m51_9 -> m51_14  [key=2, style=dotted];
m51_10 -> m51_0  [key=0, style=bold, color=blue];
m51_103 -> m51_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_6  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_103 -> m51_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue"];
m51_104 -> m51_98  [key=1, style=dashed, color=darkseagreen4, label=consumer];
m51_105 -> m51_101  [key=1, style=dashed, color=darkseagreen4, label=newConsumer];
m52_0 -> m52_1  [key=0, style=solid];
m52_0 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m52_10 -> m52_11  [key=0, style=solid, color=green];
m52_10 -> m52_65  [key=2, style=dotted, color=green];
m52_4 -> m52_10  [key=1, style=dashed, color=green, label=server];
m52_4 -> m52_5  [key=0, style=solid];
m52_4 -> m52_62  [key=2, style=dotted];
m52_9 -> m52_10  [key=0, style=solid, color=green];
m52_9 -> m52_11  [key=0, style=solid, color=green];
m52_9 -> m52_64  [key=2, style=dotted, color=green];
m52_11 -> m52_12  [key=0, style=solid];
m52_11 -> m52_21  [key=0, style=solid];
m52_11 -> m52_66  [key=2, style=dotted];
m52_7 -> m52_9  [key=1, style=dashed, color=green, label=command];
m52_7 -> m52_11  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_8  [key=0, style=solid];
m52_7 -> m52_63  [key=2, style=dotted];
m52_7 -> m52_12  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_21  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_22  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_30  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_31  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_36  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_37  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_42  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_43  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_46  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_49  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_7 -> m52_50  [key=1, style=dashed, color=darkseagreen4, label=command];
m52_8 -> m52_9  [key=0, style=solid, color=green];
m52_8 -> m52_55  [key=0, style=solid];
m52_8 -> m52_64  [key=2, style=dotted];
m52_8 -> m52_4  [key=0, style=bold, color=blue];
m52_3 -> m52_4  [key=0, style=solid];
m52_3 -> m52_60  [key=2, style=dotted];
m52_3 -> m52_61  [key=2, style=dotted];
m52_3 -> m52_0  [key=0, style=bold, color=blue];
m52_5 -> m52_6  [key=0, style=solid];
m52_5 -> m52_44  [key=1, style=dashed, color=darkseagreen4, label=count];
m52_5 -> m52_7  [key=0, style=solid];
m52_5 -> m52_9  [key=2, style=dotted];
m52_12 -> m52_13  [key=0, style=solid];
m52_12 -> m52_67  [key=2, style=dotted];
m52_12 -> m52_68  [key=2, style=dotted];
m52_12 -> m52_14  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m52_12 -> m52_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatedContext"];
m52_12 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatedContext"];
m52_21 -> m52_22  [key=0, style=solid];
m52_21 -> m52_30  [key=0, style=solid];
m52_21 -> m52_66  [key=2, style=dotted];
m52_6 -> m52_7  [key=0, style=solid];
m52_6 -> m52_55  [key=0, style=solid];
m52_6 -> m52_8  [key=0, style=solid];
m52_6 -> d24  [key=2, style=dotted];
m52_22 -> m52_23  [key=0, style=solid];
m52_22 -> m52_67  [key=2, style=dotted];
m52_22 -> m52_68  [key=2, style=dotted];
m52_22 -> m52_24  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m52_30 -> m52_66  [key=2, style=dotted];
m52_30 -> m52_31  [key=0, style=solid];
m52_30 -> m52_36  [key=0, style=solid];
m52_31 -> m52_32  [key=0, style=solid];
m52_31 -> m52_67  [key=2, style=dotted];
m52_31 -> m52_68  [key=2, style=dotted];
m52_31 -> m52_33  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m52_36 -> m52_66  [key=2, style=dotted];
m52_36 -> m52_37  [key=0, style=solid];
m52_36 -> m52_42  [key=0, style=solid];
m52_37 -> m52_38  [key=0, style=solid];
m52_37 -> m52_67  [key=2, style=dotted];
m52_37 -> m52_68  [key=2, style=dotted];
m52_37 -> m52_39  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m52_42 -> m52_66  [key=2, style=dotted];
m52_42 -> m52_43  [key=0, style=solid];
m52_42 -> m52_46  [key=0, style=solid];
m52_43 -> m52_44  [key=0, style=solid];
m52_43 -> m52_67  [key=2, style=dotted];
m52_43 -> m52_68  [key=2, style=dotted];
m52_43 -> m52_45  [key=1, style=dashed, color=darkseagreen4, label=seconds];
m52_46 -> m52_66  [key=2, style=dotted];
m52_46 -> m52_47  [key=0, style=solid];
m52_46 -> m52_49  [key=0, style=solid];
m52_49 -> m52_66  [key=2, style=dotted];
m52_49 -> m52_6  [key=0, style=solid];
m52_49 -> m52_50  [key=0, style=solid];
m52_50 -> m52_51  [key=0, style=solid];
m52_50 -> m52_67  [key=2, style=dotted];
m52_50 -> m52_68  [key=2, style=dotted];
m52_55 -> m52_56  [key=0, style=solid];
m52_55 -> m52_70  [key=2, style=dotted];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> m52_59  [key=2, style=dotted];
m52_44 -> m52_44  [key=1, style=dashed, color=darkseagreen4, label=count];
m52_44 -> m52_45  [key=0, style=solid];
m52_44 -> m52_94  [key=1, style=dashed, color=darkseagreen4, label=number];
m52_13 -> m52_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m52_13 -> m52_14  [key=0, style=solid];
m52_13 -> m52_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_13 -> m52_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_14 -> m52_15  [key=0, style=solid];
m52_14 -> m52_18  [key=0, style=solid];
m52_18 -> m52_21  [key=0, style=solid];
m52_18 -> m52_19  [key=0, style=solid];
m52_18 -> m52_70  [key=2, style=dotted];
m52_20 -> m52_21  [key=0, style=solid];
m52_20 -> m52_70  [key=2, style=dotted];
m52_52 -> m52_6  [key=0, style=solid];
m52_52 -> m52_53  [key=0, style=solid];
m52_52 -> m52_70  [key=2, style=dotted];
m52_54 -> m52_6  [key=0, style=solid];
m52_54 -> m52_70  [key=2, style=dotted];
m52_56 -> m52_63  [key=2, style=dotted];
m52_56 -> m52_57  [key=0, style=solid];
m52_23 -> m52_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m52_23 -> m52_24  [key=0, style=solid];
m52_23 -> m52_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_24 -> m52_25  [key=0, style=solid];
m52_24 -> m52_27  [key=0, style=solid];
m52_27 -> m52_30  [key=0, style=solid];
m52_27 -> m52_28  [key=0, style=solid];
m52_27 -> m52_70  [key=2, style=dotted];
m52_29 -> m52_30  [key=0, style=solid];
m52_29 -> m52_70  [key=2, style=dotted];
m52_32 -> m52_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m52_32 -> m52_33  [key=0, style=solid];
m52_32 -> m52_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_33 -> m52_36  [key=0, style=solid];
m52_33 -> m52_34  [key=0, style=solid];
m52_38 -> m52_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m52_38 -> m52_39  [key=0, style=solid];
m52_38 -> m52_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_39 -> m52_42  [key=0, style=solid];
m52_39 -> m52_40  [key=0, style=solid];
m52_45 -> m52_46  [key=0, style=solid];
m52_45 -> m52_72  [key=2, style=dotted];
m52_45 -> m52_73  [key=2, style=dotted];
m52_45 -> m52_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_47 -> m52_48  [key=0, style=solid];
m52_47 -> m52_69  [key=2, style=dotted];
m52_47 -> m52_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_48 -> m52_49  [key=0, style=solid];
m52_48 -> m52_70  [key=2, style=dotted];
m52_51 -> m52_52  [key=0, style=solid];
m52_51 -> m52_74  [key=2, style=dotted];
m52_51 -> m52_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_58  [key=2, style=dotted];
m52_15 -> m52_13  [key=3, color=darkorchid, style=bold, label="Local variable int number"];
m52_15 -> m52_16  [key=0, style=solid];
m52_15 -> m52_76  [key=1, style=dashed, color=darkseagreen4, label=number];
m52_17 -> m52_14  [key=0, style=solid];
m52_17 -> m52_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_19 -> m52_20  [key=0, style=solid];
m52_53 -> m52_54  [key=0, style=solid];
m52_26 -> m52_24  [key=0, style=solid];
m52_26 -> m52_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_25 -> m52_26  [key=0, style=solid];
m52_25 -> m52_71  [key=2, style=dotted];
m52_25 -> m52_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_28 -> m52_29  [key=0, style=solid];
m52_35 -> m52_33  [key=0, style=solid];
m52_35 -> m52_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_34 -> m52_35  [key=0, style=solid];
m52_34 -> m52_69  [key=2, style=dotted];
m52_34 -> m52_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_41 -> m52_39  [key=0, style=solid];
m52_41 -> m52_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m52_40 -> m52_41  [key=0, style=solid];
m52_40 -> m52_69  [key=2, style=dotted];
m52_40 -> m52_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_16 -> m52_17  [key=0, style=solid];
m52_16 -> m52_69  [key=2, style=dotted];
m52_16 -> m52_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_57 -> m52_0  [key=0, style=bold, color=blue];
m52_109 -> m52_110  [key=0, style=solid];
m52_94 -> m52_95  [key=0, style=solid];
m52_94 -> m52_78  [key=2, style=dotted];
m52_93 -> m52_94  [key=0, style=solid];
m52_96 -> m52_97  [key=0, style=solid];
m52_100 -> m52_101  [key=0, style=solid];
m52_95 -> m52_93  [key=0, style=bold, color=blue];
m52_76 -> m52_78  [key=2, style=dotted];
m52_76 -> m52_77  [key=0, style=solid];
m52_79 -> m52_80  [key=0, style=solid];
m52_83 -> m52_84  [key=0, style=solid];
m52_87 -> m52_88  [key=0, style=solid];
m52_102 -> m52_69  [key=2, style=dotted];
m52_102 -> m52_104  [key=0, style=solid];
m52_102 -> m52_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_103 -> m52_69  [key=2, style=dotted];
m52_103 -> m52_104  [key=0, style=solid];
m52_103 -> m52_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_98 -> m52_96  [key=0, style=bold, color=blue];
m52_97 -> m52_98  [key=0, style=solid];
m52_97 -> m52_99  [key=2, style=dotted];
m52_104 -> m52_100  [key=0, style=bold, color=blue];
m52_101 -> m52_102  [key=0, style=solid];
m52_101 -> m52_103  [key=0, style=solid];
m52_75 -> m52_76  [key=0, style=solid];
m52_77 -> m52_75  [key=0, style=bold, color=blue];
m52_81 -> m52_79  [key=0, style=bold, color=blue];
m52_80 -> m52_81  [key=0, style=solid];
m52_80 -> m52_82  [key=2, style=dotted];
m52_85 -> m52_83  [key=0, style=bold, color=blue];
m52_84 -> m52_85  [key=0, style=solid];
m52_84 -> m52_86  [key=2, style=dotted];
m52_89 -> m52_87  [key=0, style=bold, color=blue];
m52_88 -> m52_89  [key=0, style=solid];
m52_88 -> m52_90  [key=2, style=dotted];
m52_88 -> m52_91  [key=2, style=dotted];
m52_88 -> m52_92  [key=2, style=dotted];
m52_105 -> m52_106  [key=0, style=solid];
m52_107 -> m52_105  [key=0, style=bold, color=blue];
m52_106 -> m52_107  [key=0, style=solid];
m52_106 -> m52_108  [key=2, style=dotted];
m52_110 -> m52_111  [key=0, style=solid];
m52_110 -> m52_112  [key=2, style=dotted];
m52_111 -> m52_109  [key=0, style=bold, color=blue];
m52_59 -> m52_59  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m52_114 -> m52_94  [key=1, style=dashed, color=darkseagreen4, label=number];
m52_113 -> m52_76  [key=1, style=dashed, color=darkseagreen4, label=number];
m53_114 -> m53_115  [key=0, style=solid];
m53_116 -> m53_22  [key=2, style=dotted];
m53_116 -> m53_117  [key=0, style=solid];
m53_115 -> m53_47  [key=2, style=dotted];
m53_115 -> m53_116  [key=0, style=solid];
m53_123 -> m53_26  [key=2, style=dotted];
m53_123 -> m53_124  [key=0, style=solid];
m53_117 -> m53_118  [key=0, style=solid];
m53_117 -> m53_30  [key=2, style=dotted];
m53_122 -> m53_123  [key=0, style=solid];
m53_122 -> m53_51  [key=2, style=dotted];
m53_118 -> m53_119  [key=0, style=solid];
m53_118 -> m53_49  [key=2, style=dotted];
m53_118 -> m53_120  [key=1, style=dashed, color=darkseagreen4, label=table7];
m53_121 -> m53_122  [key=0, style=solid];
m53_121 -> m53_48  [key=2, style=dotted];
m53_119 -> m53_120  [key=0, style=solid];
m53_119 -> m53_50  [key=2, style=dotted];
m53_120 -> m53_121  [key=0, style=solid];
m53_120 -> m53_33  [key=2, style=dotted];
m53_124 -> m53_114  [key=0, style=bold, color=blue];
m53_26 -> m53_27  [key=0, style=solid, color=green];
m53_27 -> m53_28  [key=0, style=solid, color=green];
m53_27 -> m53_29  [key=2, style=dotted, color=green];
m53_28 -> m53_26  [key=0, style=bold, color=blue];
m53_0 -> m53_1  [key=0, style=solid, color=red];
m53_0 -> m53_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m53_1 -> m53_2  [key=0, style=solid, color=red];
m53_1 -> m53_5  [key=2, style=dotted];
m53_2 -> m53_0  [key=0, style=bold, color=blue];
m53_2 -> m53_3  [key=0, style=solid];
m53_2 -> m53_6  [key=2, style=dotted];
m53_2 -> m53_7  [key=2, style=dotted];
m53_184 -> m53_185  [key=0, style=solid];
m53_186 -> m53_22  [key=2, style=dotted];
m53_186 -> m53_187  [key=0, style=solid];
m53_185 -> m53_47  [key=2, style=dotted];
m53_185 -> m53_186  [key=0, style=solid];
m53_197 -> m53_26  [key=2, style=dotted];
m53_197 -> m53_198  [key=0, style=solid];
m53_187 -> m53_188  [key=0, style=solid];
m53_187 -> m53_30  [key=2, style=dotted];
m53_196 -> m53_197  [key=0, style=solid];
m53_196 -> m53_52  [key=2, style=dotted];
m53_188 -> m53_189  [key=0, style=solid];
m53_188 -> m53_33  [key=2, style=dotted];
m53_195 -> m53_196  [key=0, style=solid];
m53_195 -> m53_51  [key=2, style=dotted];
m53_189 -> m53_52  [key=2, style=dotted];
m53_189 -> m53_190  [key=0, style=solid];
m53_191 -> m53_52  [key=2, style=dotted];
m53_191 -> m53_192  [key=0, style=solid];
m53_192 -> m53_195  [key=1, style=dashed, color=darkseagreen4, label=table11];
m53_192 -> m53_49  [key=2, style=dotted];
m53_192 -> m53_193  [key=0, style=solid];
m53_192 -> m53_194  [key=1, style=dashed, color=darkseagreen4, label=table11];
m53_194 -> m53_195  [key=0, style=solid];
m53_194 -> m53_50  [key=2, style=dotted];
m53_190 -> m53_191  [key=0, style=solid];
m53_190 -> m53_48  [key=2, style=dotted];
m53_193 -> m53_50  [key=2, style=dotted];
m53_193 -> m53_194  [key=0, style=solid];
m53_198 -> m53_184  [key=0, style=bold, color=blue];
m53_80 -> m53_81  [key=0, style=solid];
m53_82 -> m53_22  [key=2, style=dotted];
m53_82 -> m53_83  [key=0, style=solid];
m53_81 -> m53_47  [key=2, style=dotted];
m53_81 -> m53_82  [key=0, style=solid];
m53_89 -> m53_26  [key=2, style=dotted];
m53_89 -> m53_90  [key=0, style=solid];
m53_83 -> m53_84  [key=0, style=solid];
m53_83 -> m53_30  [key=2, style=dotted];
m53_88 -> m53_89  [key=0, style=solid];
m53_88 -> m53_51  [key=2, style=dotted];
m53_84 -> m53_85  [key=0, style=solid];
m53_84 -> m53_49  [key=2, style=dotted];
m53_84 -> m53_86  [key=1, style=dashed, color=darkseagreen4, label=table4];
m53_87 -> m53_88  [key=0, style=solid];
m53_87 -> m53_48  [key=2, style=dotted];
m53_85 -> m53_86  [key=0, style=solid];
m53_85 -> m53_50  [key=2, style=dotted];
m53_86 -> m53_87  [key=0, style=solid];
m53_86 -> m53_33  [key=2, style=dotted];
m53_90 -> m53_80  [key=0, style=bold, color=blue];
m53_68 -> m53_69  [key=0, style=solid];
m53_70 -> m53_22  [key=2, style=dotted];
m53_70 -> m53_71  [key=0, style=solid];
m53_69 -> m53_47  [key=2, style=dotted];
m53_69 -> m53_70  [key=0, style=solid];
m53_78 -> m53_26  [key=2, style=dotted];
m53_78 -> m53_79  [key=0, style=solid];
m53_71 -> m53_72  [key=0, style=solid];
m53_71 -> m53_30  [key=2, style=dotted];
m53_77 -> m53_78  [key=0, style=solid];
m53_77 -> m53_51  [key=2, style=dotted];
m53_72 -> m53_73  [key=0, style=solid];
m53_72 -> m53_49  [key=2, style=dotted];
m53_72 -> m53_74  [key=1, style=dashed, color=darkseagreen4, label=table3];
m53_72 -> m53_75  [key=1, style=dashed, color=darkseagreen4, label=table3];
m53_76 -> m53_77  [key=0, style=solid];
m53_76 -> m53_48  [key=2, style=dotted];
m53_73 -> m53_74  [key=0, style=solid];
m53_73 -> m53_50  [key=2, style=dotted];
m53_74 -> m53_75  [key=0, style=solid];
m53_74 -> m53_50  [key=2, style=dotted];
m53_75 -> m53_76  [key=0, style=solid];
m53_75 -> m53_33  [key=2, style=dotted];
m53_79 -> m53_68  [key=0, style=bold, color=blue];
m53_91 -> m53_92  [key=0, style=solid];
m53_93 -> m53_22  [key=2, style=dotted];
m53_93 -> m53_94  [key=0, style=solid];
m53_92 -> m53_47  [key=2, style=dotted];
m53_92 -> m53_93  [key=0, style=solid];
m53_101 -> m53_26  [key=2, style=dotted];
m53_101 -> m53_102  [key=0, style=solid];
m53_94 -> m53_95  [key=0, style=solid];
m53_94 -> m53_30  [key=2, style=dotted];
m53_100 -> m53_101  [key=0, style=solid];
m53_100 -> m53_51  [key=2, style=dotted];
m53_95 -> m53_96  [key=0, style=solid];
m53_95 -> m53_49  [key=2, style=dotted];
m53_95 -> m53_97  [key=1, style=dashed, color=darkseagreen4, label=table5];
m53_99 -> m53_100  [key=0, style=solid];
m53_99 -> m53_48  [key=2, style=dotted];
m53_96 -> m53_97  [key=0, style=solid];
m53_96 -> m53_50  [key=2, style=dotted];
m53_97 -> m53_33  [key=2, style=dotted];
m53_97 -> m53_98  [key=0, style=solid];
m53_98 -> m53_52  [key=2, style=dotted];
m53_98 -> m53_99  [key=0, style=solid];
m53_102 -> m53_91  [key=0, style=bold, color=blue];
m53_141 -> m53_142  [key=0, style=solid];
m53_143 -> m53_22  [key=2, style=dotted];
m53_143 -> m53_144  [key=0, style=solid];
m53_142 -> m53_47  [key=2, style=dotted];
m53_142 -> m53_143  [key=0, style=solid];
m53_153 -> m53_26  [key=2, style=dotted];
m53_153 -> m53_154  [key=0, style=solid];
m53_144 -> m53_145  [key=0, style=solid];
m53_144 -> m53_30  [key=2, style=dotted];
m53_152 -> m53_153  [key=0, style=solid];
m53_152 -> m53_51  [key=2, style=dotted];
m53_145 -> m53_146  [key=0, style=solid];
m53_145 -> m53_33  [key=2, style=dotted];
m53_148 -> m53_152  [key=1, style=dashed, color=darkseagreen4, label=table9];
m53_148 -> m53_149  [key=0, style=solid];
m53_148 -> m53_49  [key=2, style=dotted];
m53_148 -> m53_150  [key=1, style=dashed, color=darkseagreen4, label=table9];
m53_148 -> m53_151  [key=1, style=dashed, color=darkseagreen4, label=table9];
m53_151 -> m53_152  [key=0, style=solid];
m53_151 -> m53_50  [key=2, style=dotted];
m53_146 -> m53_52  [key=2, style=dotted];
m53_146 -> m53_147  [key=0, style=solid];
m53_147 -> m53_148  [key=0, style=solid];
m53_147 -> m53_48  [key=2, style=dotted];
m53_149 -> m53_50  [key=2, style=dotted];
m53_149 -> m53_150  [key=0, style=solid];
m53_150 -> m53_151  [key=0, style=solid];
m53_150 -> m53_50  [key=2, style=dotted];
m53_154 -> m53_141  [key=0, style=bold, color=blue];
m53_22 -> m53_23  [key=0, style=solid, color=green];
m53_22 -> m53_35  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_54  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_69  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_81  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_92  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_104  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_115  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_126  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_142  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_156  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_174  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_185  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_22 -> m53_200  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m53_23 -> m53_24  [key=0, style=solid, color=green];
m53_23 -> m53_25  [key=2, style=dotted, color=green];
m53_24 -> m53_22  [key=0, style=bold, color=blue];
m53_173 -> m53_174  [key=0, style=solid];
m53_175 -> m53_22  [key=2, style=dotted];
m53_175 -> m53_176  [key=0, style=solid];
m53_174 -> m53_47  [key=2, style=dotted];
m53_174 -> m53_175  [key=0, style=solid];
m53_182 -> m53_26  [key=2, style=dotted];
m53_182 -> m53_183  [key=0, style=solid];
m53_176 -> m53_177  [key=0, style=solid];
m53_176 -> m53_30  [key=2, style=dotted];
m53_181 -> m53_182  [key=0, style=solid];
m53_181 -> m53_52  [key=2, style=dotted];
m53_177 -> m53_178  [key=0, style=solid];
m53_177 -> m53_33  [key=2, style=dotted];
m53_180 -> m53_181  [key=0, style=solid];
m53_180 -> m53_51  [key=2, style=dotted];
m53_178 -> m53_179  [key=0, style=solid];
m53_178 -> m53_48  [key=2, style=dotted];
m53_179 -> m53_52  [key=2, style=dotted];
m53_179 -> m53_180  [key=0, style=solid];
m53_183 -> m53_173  [key=0, style=bold, color=blue];
m53_34 -> m53_35  [key=0, style=solid, color=green];
m53_35 -> m53_36  [key=0, style=solid, color=green];
m53_35 -> m53_47  [key=2, style=dotted, color=green];
m53_36 -> m53_22  [key=2, style=dotted];
m53_36 -> m53_37  [key=0, style=solid];
m53_45 -> m53_26  [key=2, style=dotted];
m53_45 -> m53_46  [key=0, style=solid];
m53_37 -> m53_38  [key=0, style=solid];
m53_37 -> m53_30  [key=2, style=dotted];
m53_44 -> m53_45  [key=0, style=solid];
m53_44 -> m53_52  [key=2, style=dotted];
m53_38 -> m53_39  [key=0, style=solid];
m53_38 -> m53_33  [key=2, style=dotted];
m53_43 -> m53_44  [key=0, style=solid];
m53_43 -> m53_51  [key=2, style=dotted];
m53_39 -> m53_40  [key=0, style=solid];
m53_39 -> m53_48  [key=2, style=dotted];
m53_40 -> m53_43  [key=1, style=dashed, color=darkseagreen4, label=table1];
m53_40 -> m53_49  [key=2, style=dotted];
m53_40 -> m53_41  [key=0, style=solid];
m53_40 -> m53_42  [key=1, style=dashed, color=darkseagreen4, label=table1];
m53_42 -> m53_43  [key=0, style=solid];
m53_42 -> m53_50  [key=2, style=dotted];
m53_41 -> m53_42  [key=0, style=solid];
m53_41 -> m53_50  [key=2, style=dotted];
m53_46 -> m53_34  [key=0, style=bold, color=blue];
m53_155 -> m53_156  [key=0, style=solid];
m53_157 -> m53_22  [key=2, style=dotted];
m53_157 -> m53_158  [key=0, style=solid];
m53_156 -> m53_47  [key=2, style=dotted];
m53_156 -> m53_157  [key=0, style=solid];
m53_171 -> m53_26  [key=2, style=dotted];
m53_171 -> m53_172  [key=0, style=solid];
m53_158 -> m53_159  [key=0, style=solid];
m53_158 -> m53_30  [key=2, style=dotted];
m53_170 -> m53_171  [key=0, style=solid];
m53_170 -> m53_52  [key=2, style=dotted];
m53_159 -> m53_160  [key=0, style=solid];
m53_159 -> m53_33  [key=2, style=dotted];
m53_169 -> m53_170  [key=0, style=solid];
m53_169 -> m53_51  [key=2, style=dotted];
m53_160 -> m53_52  [key=2, style=dotted];
m53_160 -> m53_161  [key=0, style=solid];
m53_161 -> m53_52  [key=2, style=dotted];
m53_161 -> m53_162  [key=0, style=solid];
m53_163 -> m53_169  [key=1, style=dashed, color=darkseagreen4, label=table10];
m53_163 -> m53_49  [key=2, style=dotted];
m53_163 -> m53_164  [key=0, style=solid];
m53_163 -> m53_165  [key=1, style=dashed, color=darkseagreen4, label=table10];
m53_163 -> m53_166  [key=1, style=dashed, color=darkseagreen4, label=table10];
m53_163 -> m53_167  [key=1, style=dashed, color=darkseagreen4, label=table10];
m53_163 -> m53_168  [key=1, style=dashed, color=darkseagreen4, label=table10];
m53_168 -> m53_169  [key=0, style=solid];
m53_168 -> m53_50  [key=2, style=dotted];
m53_162 -> m53_48  [key=2, style=dotted];
m53_162 -> m53_163  [key=0, style=solid];
m53_164 -> m53_50  [key=2, style=dotted];
m53_164 -> m53_165  [key=0, style=solid];
m53_165 -> m53_50  [key=2, style=dotted];
m53_165 -> m53_166  [key=0, style=solid];
m53_166 -> m53_50  [key=2, style=dotted];
m53_166 -> m53_167  [key=0, style=solid];
m53_167 -> m53_50  [key=2, style=dotted];
m53_167 -> m53_168  [key=0, style=solid];
m53_172 -> m53_155  [key=0, style=bold, color=blue];
m53_53 -> m53_54  [key=0, style=solid];
m53_55 -> m53_22  [key=2, style=dotted];
m53_55 -> m53_56  [key=0, style=solid];
m53_54 -> m53_47  [key=2, style=dotted];
m53_54 -> m53_55  [key=0, style=solid];
m53_66 -> m53_26  [key=2, style=dotted];
m53_66 -> m53_67  [key=0, style=solid];
m53_56 -> m53_57  [key=0, style=solid];
m53_56 -> m53_30  [key=2, style=dotted];
m53_65 -> m53_66  [key=0, style=solid];
m53_65 -> m53_51  [key=2, style=dotted];
m53_57 -> m53_58  [key=0, style=solid];
m53_57 -> m53_33  [key=2, style=dotted];
m53_60 -> m53_65  [key=1, style=dashed, color=darkseagreen4, label=table2];
m53_60 -> m53_61  [key=0, style=solid];
m53_60 -> m53_49  [key=2, style=dotted];
m53_60 -> m53_62  [key=1, style=dashed, color=darkseagreen4, label=table2];
m53_60 -> m53_63  [key=1, style=dashed, color=darkseagreen4, label=table2];
m53_60 -> m53_64  [key=1, style=dashed, color=darkseagreen4, label=table2];
m53_64 -> m53_65  [key=0, style=solid];
m53_64 -> m53_50  [key=2, style=dotted];
m53_58 -> m53_52  [key=2, style=dotted];
m53_58 -> m53_59  [key=0, style=solid];
m53_59 -> m53_60  [key=0, style=solid];
m53_59 -> m53_48  [key=2, style=dotted];
m53_61 -> m53_62  [key=0, style=solid];
m53_61 -> m53_50  [key=2, style=dotted];
m53_62 -> m53_63  [key=0, style=solid];
m53_62 -> m53_50  [key=2, style=dotted];
m53_63 -> m53_64  [key=0, style=solid];
m53_63 -> m53_50  [key=2, style=dotted];
m53_67 -> m53_53  [key=0, style=bold, color=blue];
m53_3 -> m53_4  [key=0, style=solid];
m53_3 -> m53_8  [key=2, style=dotted];
m53_3 -> m53_1  [key=1, style=dashed, color=red, label="HangFire.QueueAttribute"];
m53_4 -> m53_0  [key=0, style=bold, color=blue];
m53_30 -> m53_31  [key=0, style=solid];
m53_31 -> m53_33  [key=2, style=dotted];
m53_31 -> m53_32  [key=0, style=solid];
m53_32 -> m53_30  [key=0, style=bold, color=blue];
m53_125 -> m53_126  [key=0, style=solid];
m53_127 -> m53_22  [key=2, style=dotted];
m53_127 -> m53_128  [key=0, style=solid];
m53_126 -> m53_47  [key=2, style=dotted];
m53_126 -> m53_127  [key=0, style=solid];
m53_139 -> m53_26  [key=2, style=dotted];
m53_139 -> m53_140  [key=0, style=solid];
m53_128 -> m53_129  [key=0, style=solid];
m53_128 -> m53_30  [key=2, style=dotted];
m53_138 -> m53_139  [key=0, style=solid];
m53_138 -> m53_52  [key=2, style=dotted];
m53_129 -> m53_130  [key=0, style=solid];
m53_129 -> m53_33  [key=2, style=dotted];
m53_134 -> m53_138  [key=1, style=dashed, color=darkseagreen4, label=table8];
m53_134 -> m53_135  [key=0, style=solid];
m53_134 -> m53_49  [key=2, style=dotted];
m53_134 -> m53_136  [key=1, style=dashed, color=darkseagreen4, label=table8];
m53_134 -> m53_137  [key=1, style=dashed, color=darkseagreen4, label=table8];
m53_137 -> m53_138  [key=0, style=solid];
m53_137 -> m53_50  [key=2, style=dotted];
m53_130 -> m53_52  [key=2, style=dotted];
m53_130 -> m53_131  [key=0, style=solid];
m53_131 -> m53_52  [key=2, style=dotted];
m53_131 -> m53_132  [key=0, style=solid];
m53_133 -> m53_51  [key=2, style=dotted];
m53_133 -> m53_134  [key=0, style=solid];
m53_135 -> m53_50  [key=2, style=dotted];
m53_135 -> m53_136  [key=0, style=solid];
m53_136 -> m53_137  [key=0, style=solid];
m53_136 -> m53_50  [key=2, style=dotted];
m53_132 -> m53_133  [key=0, style=solid];
m53_132 -> m53_48  [key=2, style=dotted];
m53_140 -> m53_125  [key=0, style=bold, color=blue];
m53_103 -> m53_104  [key=0, style=solid];
m53_105 -> m53_22  [key=2, style=dotted];
m53_105 -> m53_106  [key=0, style=solid];
m53_104 -> m53_47  [key=2, style=dotted];
m53_104 -> m53_105  [key=0, style=solid];
m53_112 -> m53_26  [key=2, style=dotted];
m53_112 -> m53_113  [key=0, style=solid];
m53_106 -> m53_107  [key=0, style=solid];
m53_106 -> m53_30  [key=2, style=dotted];
m53_111 -> m53_112  [key=0, style=solid];
m53_111 -> m53_51  [key=2, style=dotted];
m53_107 -> m53_108  [key=0, style=solid];
m53_107 -> m53_49  [key=2, style=dotted];
m53_107 -> m53_109  [key=1, style=dashed, color=darkseagreen4, label=table6];
m53_110 -> m53_111  [key=0, style=solid];
m53_110 -> m53_48  [key=2, style=dotted];
m53_108 -> m53_109  [key=0, style=solid];
m53_108 -> m53_50  [key=2, style=dotted];
m53_109 -> m53_110  [key=0, style=solid];
m53_109 -> m53_33  [key=2, style=dotted];
m53_113 -> m53_103  [key=0, style=bold, color=blue];
m53_14 -> m53_15  [key=0, style=solid, color=green];
m53_15 -> m53_16  [key=0, style=solid, color=green];
m53_15 -> m53_17  [key=0, style=solid, color=green];
m53_16 -> m53_17  [key=0, style=solid];
m53_16 -> m53_0  [key=2, style=dotted];
m53_17 -> m53_14  [key=0, style=bold, color=blue];
m53_199 -> m53_200  [key=0, style=solid];
m53_201 -> m53_22  [key=2, style=dotted];
m53_201 -> m53_202  [key=0, style=solid];
m53_200 -> m53_47  [key=2, style=dotted];
m53_200 -> m53_201  [key=0, style=solid];
m53_214 -> m53_26  [key=2, style=dotted];
m53_214 -> m53_215  [key=0, style=solid];
m53_202 -> m53_203  [key=0, style=solid];
m53_202 -> m53_30  [key=2, style=dotted];
m53_213 -> m53_214  [key=0, style=solid];
m53_213 -> m53_52  [key=2, style=dotted];
m53_203 -> m53_204  [key=0, style=solid];
m53_203 -> m53_33  [key=2, style=dotted];
m53_212 -> m53_213  [key=0, style=solid];
m53_212 -> m53_51  [key=2, style=dotted];
m53_204 -> m53_52  [key=2, style=dotted];
m53_204 -> m53_205  [key=0, style=solid];
m53_205 -> m53_52  [key=2, style=dotted];
m53_205 -> m53_206  [key=0, style=solid];
m53_207 -> m53_52  [key=2, style=dotted];
m53_207 -> m53_208  [key=0, style=solid];
m53_208 -> m53_212  [key=1, style=dashed, color=darkseagreen4, label=table12];
m53_208 -> m53_49  [key=2, style=dotted];
m53_208 -> m53_209  [key=0, style=solid];
m53_208 -> m53_210  [key=1, style=dashed, color=darkseagreen4, label=table12];
m53_208 -> m53_211  [key=1, style=dashed, color=darkseagreen4, label=table12];
m53_211 -> m53_212  [key=0, style=solid];
m53_211 -> m53_50  [key=2, style=dotted];
m53_206 -> m53_207  [key=0, style=solid];
m53_206 -> m53_48  [key=2, style=dotted];
m53_209 -> m53_50  [key=2, style=dotted];
m53_209 -> m53_210  [key=0, style=solid];
m53_210 -> m53_50  [key=2, style=dotted];
m53_210 -> m53_211  [key=0, style=solid];
m53_215 -> m53_199  [key=0, style=bold, color=blue];
m53_18 -> m53_19  [key=0, style=solid, color=green];
m53_19 -> m53_20  [key=0, style=solid, color=green];
m53_19 -> m53_21  [key=2, style=dotted, color=green];
m53_20 -> m53_18  [key=0, style=bold, color=blue];
m53_216 -> m53_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_201  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m53_216 -> m53_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
m54_0 -> m54_1  [key=0, style=solid];
m54_1 -> m54_2  [key=0, style=solid];
m54_1 -> m54_49  [key=2, style=dotted];
m54_2 -> m54_3  [key=0, style=solid];
m54_2 -> m54_50  [key=2, style=dotted];
m54_3 -> m54_4  [key=0, style=solid];
m54_4 -> m54_5  [key=0, style=solid];
m54_4 -> m54_51  [key=2, style=dotted];
m54_5 -> m54_6  [key=0, style=solid];
m54_5 -> m54_52  [key=2, style=dotted];
m54_5 -> m54_7  [key=1, style=dashed, color=darkseagreen4, label=queues];
m54_5 -> m54_10  [key=1, style=dashed, color=darkseagreen4, label=queues];
m54_6 -> m54_7  [key=0, style=solid];
m54_6 -> m54_49  [key=2, style=dotted];
m54_7 -> m54_8  [key=0, style=solid];
m54_7 -> m54_9  [key=0, style=solid];
m54_10 -> m54_11  [key=0, style=solid];
m54_10 -> m54_47  [key=0, style=solid];
m54_10 -> m54_12  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_10 -> m54_14  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_10 -> m54_16  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_10 -> m54_18  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_10 -> m54_20  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_10 -> m54_22  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_10 -> m54_25  [key=1, style=dashed, color=darkseagreen4, label=queue];
m54_8 -> m54_48  [key=0, style=solid];
m54_8 -> m54_49  [key=2, style=dotted];
m54_9 -> m54_10  [key=0, style=solid];
m54_9 -> m54_49  [key=2, style=dotted];
m54_11 -> m54_12  [key=0, style=solid];
m54_11 -> m54_49  [key=2, style=dotted];
m54_47 -> m54_48  [key=0, style=solid];
m54_47 -> m54_49  [key=2, style=dotted];
m54_12 -> m54_13  [key=0, style=solid];
m54_12 -> m54_53  [key=2, style=dotted];
m54_12 -> m54_54  [key=2, style=dotted];
m54_14 -> m54_15  [key=0, style=solid];
m54_14 -> m54_54  [key=2, style=dotted];
m54_16 -> m54_17  [key=0, style=solid];
m54_16 -> m54_54  [key=2, style=dotted];
m54_18 -> m54_19  [key=0, style=solid];
m54_18 -> m54_53  [key=2, style=dotted];
m54_18 -> m54_54  [key=2, style=dotted];
m54_20 -> m54_21  [key=0, style=solid];
m54_20 -> m54_54  [key=2, style=dotted];
m54_22 -> m54_23  [key=0, style=solid];
m54_22 -> m54_24  [key=0, style=solid];
m54_25 -> m54_26  [key=0, style=solid];
m54_25 -> m54_45  [key=0, style=solid];
m54_25 -> m54_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_13 -> m54_14  [key=0, style=solid];
m54_13 -> m54_49  [key=2, style=dotted];
m54_15 -> m54_16  [key=0, style=solid];
m54_15 -> m54_49  [key=2, style=dotted];
m54_17 -> m54_18  [key=0, style=solid];
m54_17 -> m54_49  [key=2, style=dotted];
m54_19 -> m54_20  [key=0, style=solid];
m54_19 -> m54_49  [key=2, style=dotted];
m54_21 -> m54_22  [key=0, style=solid];
m54_21 -> m54_49  [key=2, style=dotted];
m54_23 -> m54_46  [key=0, style=solid];
m54_23 -> m54_49  [key=2, style=dotted];
m54_24 -> m54_25  [key=0, style=solid];
m54_24 -> m54_49  [key=2, style=dotted];
m54_26 -> m54_27  [key=0, style=solid];
m54_26 -> m54_49  [key=2, style=dotted];
m54_45 -> m54_46  [key=0, style=solid];
m54_45 -> m54_49  [key=2, style=dotted];
m54_27 -> m54_28  [key=0, style=solid];
m54_27 -> m54_54  [key=2, style=dotted];
m54_27 -> m54_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_27 -> m54_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_28 -> m54_29  [key=0, style=solid];
m54_28 -> m54_49  [key=2, style=dotted];
m54_29 -> m54_30  [key=0, style=solid];
m54_29 -> m54_53  [key=2, style=dotted];
m54_29 -> m54_54  [key=2, style=dotted];
m54_29 -> m54_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_29 -> m54_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_30 -> m54_31  [key=0, style=solid];
m54_30 -> m54_49  [key=2, style=dotted];
m54_31 -> m54_32  [key=0, style=solid];
m54_31 -> m54_55  [key=2, style=dotted];
m54_31 -> m54_56  [key=2, style=dotted];
m54_31 -> m54_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_31 -> m54_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_32 -> m54_33  [key=0, style=solid];
m54_32 -> m54_49  [key=2, style=dotted];
m54_33 -> m54_34  [key=0, style=solid];
m54_33 -> m54_35  [key=0, style=solid];
m54_33 -> m54_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_33 -> m54_36  [key=1, style=dashed, color=red, label=job];
m54_34 -> m54_35  [key=0, style=solid];
m54_34 -> m54_49  [key=2, style=dotted];
m54_35 -> m54_36  [key=0, style=solid, color=red];
m54_35 -> m54_49  [key=2, style=dotted];
m54_36 -> m54_37  [key=0, style=solid, color=red];
m54_36 -> m54_57  [key=2, style=dotted, color=red];
m54_36 -> m54_54  [key=2, style=dotted, color=red];
m54_36 -> m54_36  [key=1, style=dashed, color=red, label=job];
m54_36 -> m54_38  [key=1, style=dashed, color=red, label=job];
m54_37 -> m54_38  [key=0, style=solid];
m54_37 -> m54_49  [key=2, style=dotted];
m54_38 -> m54_39  [key=0, style=solid];
m54_38 -> m54_44  [key=0, style=solid];
m54_38 -> m54_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_38 -> m54_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_39 -> m54_40  [key=0, style=solid];
m54_39 -> m54_49  [key=2, style=dotted];
m54_44 -> m54_25  [key=0, style=solid];
m54_44 -> m54_49  [key=2, style=dotted];
m54_40 -> m54_41  [key=0, style=solid];
m54_40 -> m54_58  [key=2, style=dotted];
m54_40 -> m54_54  [key=2, style=dotted];
m54_40 -> m54_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_40 -> m54_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_41 -> m54_42  [key=0, style=solid];
m54_41 -> m54_49  [key=2, style=dotted];
m54_42 -> m54_43  [key=0, style=solid];
m54_42 -> m54_54  [key=2, style=dotted];
m54_42 -> m54_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m54_43 -> m54_44  [key=0, style=solid];
m54_43 -> m54_49  [key=2, style=dotted];
m54_46 -> m54_10  [key=0, style=solid];
m54_46 -> m54_49  [key=2, style=dotted];
m54_48 -> m54_0  [key=0, style=bold, color=blue];
m54_59 -> m54_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_36  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m54_59 -> m54_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m55_0 -> m55_1  [key=0, style=solid];
m55_1 -> m55_2  [key=0, style=solid];
m55_2 -> m55_0  [key=0, style=bold, color=blue];
m55_3 -> m55_4  [key=0, style=solid, color=green];
m55_3 -> m55_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m55_4 -> m55_5  [key=0, style=solid, color=green];
m55_4 -> m55_7  [key=0, style=solid, color=green];
m55_6 -> m55_7  [key=0, style=solid];
m55_6 -> m55_9  [key=2, style=dotted];
m55_5 -> m55_6  [key=0, style=solid];
m55_5 -> m55_8  [key=2, style=dotted];
m55_7 -> m55_3  [key=0, style=bold, color=blue];
m55_10 -> m55_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RecurringAttribute"];
m55_10 -> m55_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RecurringAttribute"];
m56_4 -> m56_5  [key=0, style=solid];
m56_5 -> m56_6  [key=0, style=solid];
m56_5 -> m56_7  [key=2, style=dotted];
m56_6 -> m56_4  [key=0, style=bold, color=blue];
m56_13 -> m56_14  [key=0, style=solid];
m56_14 -> m56_15  [key=0, style=solid];
m56_14 -> m56_16  [key=2, style=dotted];
m56_14 -> m56_17  [key=2, style=dotted];
m56_15 -> m56_13  [key=0, style=bold, color=blue];
m56_128 -> m56_129  [key=0, style=solid];
m56_128 -> m56_140  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m56_128 -> m56_137  [key=3, color=darkorchid, style=bold, label="method methodReturn int RemoveTimedOutServers"];
m56_129 -> m56_130  [key=0, style=solid];
m56_129 -> m56_145  [key=2, style=dotted];
m56_129 -> m56_133  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m56_140 -> m56_141  [key=0, style=solid];
m56_140 -> m56_138  [key=0, style=solid];
m56_140 -> m56_150  [key=2, style=dotted];
m56_130 -> m56_131  [key=0, style=solid];
m56_130 -> m56_102  [key=2, style=dotted];
m56_130 -> m56_135  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m56_130 -> m56_157  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m56_130 -> m56_138  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m56_133 -> m56_134  [key=0, style=solid];
m56_133 -> m56_136  [key=0, style=solid];
m56_131 -> m56_132  [key=0, style=solid];
m56_131 -> m56_140  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m56_135 -> m56_133  [key=0, style=solid];
m56_135 -> m56_42  [key=2, style=dotted];
m56_135 -> m56_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_135 -> m56_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_138 -> m56_139  [key=0, style=solid];
m56_138 -> m56_143  [key=0, style=solid];
m56_132 -> m56_133  [key=0, style=solid];
m56_132 -> m56_146  [key=2, style=dotted];
m56_132 -> m56_135  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m56_132 -> m56_136  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m56_136 -> m56_137  [key=0, style=solid];
m56_136 -> m56_147  [key=2, style=dotted];
m56_134 -> m56_135  [key=0, style=solid];
m56_134 -> m56_152  [key=1, style=dashed, color=darkseagreen4, label=name];
m56_134 -> m56_157  [key=1, style=dashed, color=darkseagreen4, label=name];
m56_134 -> m56_133  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m56_137 -> m56_138  [key=0, style=solid];
m56_137 -> m56_142  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m56_137 -> m56_143  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m56_137 -> m56_137  [key=3, color=darkorchid, style=bold, label="Local variable int removedServerCount"];
m56_142 -> m56_138  [key=0, style=solid];
m56_142 -> m56_142  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m56_142 -> m56_143  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m56_143 -> m56_144  [key=0, style=solid];
m56_139 -> m56_140  [key=0, style=solid];
m56_139 -> m56_148  [key=2, style=dotted];
m56_139 -> m56_149  [key=2, style=dotted];
m56_139 -> m56_139  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m56_139 -> m56_141  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m56_141 -> m56_142  [key=0, style=solid];
m56_141 -> m56_111  [key=2, style=dotted];
m56_141 -> m56_141  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m56_144 -> m56_128  [key=0, style=bold, color=blue];
m56_126 -> m56_127  [key=0, style=solid];
m56_126 -> m56_21  [key=2, style=dotted];
m56_126 -> m56_41  [key=2, style=dotted];
m56_126 -> m56_72  [key=2, style=dotted];
m56_125 -> m56_126  [key=0, style=solid];
m56_127 -> m56_125  [key=0, style=bold, color=blue];
m56_114 -> m56_115  [key=0, style=solid];
m56_114 -> m56_42  [key=2, style=dotted];
m56_114 -> m56_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_111 -> m56_112  [key=0, style=solid];
m56_111 -> m56_113  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_111 -> m56_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_111 -> m56_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_111 -> m56_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_111 -> m56_108  [key=3, color=darkorchid, style=bold, label="Parameter variable string serverId"];
m56_112 -> m56_113  [key=0, style=solid];
m56_112 -> m56_12  [key=2, style=dotted];
m56_112 -> m56_114  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_112 -> m56_115  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_113 -> m56_114  [key=0, style=solid];
m56_113 -> m56_42  [key=2, style=dotted];
m56_113 -> m56_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_115 -> m56_116  [key=0, style=solid];
m56_115 -> m56_43  [key=2, style=dotted];
m56_116 -> m56_111  [key=0, style=bold, color=blue];
m56_81 -> m56_82  [key=0, style=solid];
m56_82 -> m56_83  [key=0, style=solid];
m56_82 -> m56_84  [key=2, style=dotted];
m56_82 -> m56_85  [key=2, style=dotted];
m56_83 -> m56_81  [key=0, style=bold, color=blue];
m56_8 -> m56_9  [key=0, style=solid];
m56_9 -> m56_10  [key=0, style=solid];
m56_9 -> m56_11  [key=2, style=dotted];
m56_9 -> m56_12  [key=2, style=dotted];
m56_10 -> m56_8  [key=0, style=bold, color=blue];
m56_0 -> m56_1  [key=0, style=solid];
m56_0 -> m56_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m56_1 -> m56_2  [key=0, style=solid];
m56_2 -> m56_3  [key=0, style=solid];
m56_3 -> m56_0  [key=0, style=bold, color=blue];
m56_73 -> m56_74  [key=0, style=solid];
m56_74 -> m56_75  [key=0, style=solid];
m56_74 -> m56_21  [key=2, style=dotted];
m56_74 -> m56_76  [key=2, style=dotted];
m56_75 -> m56_73  [key=0, style=bold, color=blue];
m56_52 -> m56_53  [key=0, style=solid];
m56_52 -> m56_54  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.StateAndInvocationData GetJobStateAndInvocationData"];
m56_53 -> m56_54  [key=0, style=solid];
m56_53 -> m56_21  [key=2, style=dotted];
m56_53 -> m56_65  [key=2, style=dotted];
m56_53 -> m56_57  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m56_53 -> m56_58  [key=1, style=dashed, color=red, label=jobData];
m56_53 -> m56_59  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m56_53 -> m56_60  [key=1, style=dashed, color=red, label=jobData];
m56_53 -> m56_61  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m56_53 -> m56_62  [key=1, style=dashed, color=red, label=jobData];
m56_53 -> m56_63  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m56_54 -> m56_55  [key=0, style=solid];
m56_54 -> m56_56  [key=0, style=solid, color=red];
m56_57 -> m56_58  [key=0, style=solid, color=red];
m56_57 -> m56_59  [key=0, style=solid];
m56_57 -> m56_67  [key=2, style=dotted];
m56_58 -> m56_59  [key=0, style=solid, color=red];
m56_59 -> m56_60  [key=0, style=solid, color=red];
m56_59 -> m56_61  [key=0, style=solid];
m56_59 -> m56_67  [key=2, style=dotted];
m56_60 -> m56_61  [key=0, style=solid, color=red];
m56_61 -> m56_62  [key=0, style=solid, color=red];
m56_61 -> m56_63  [key=0, style=solid];
m56_61 -> m56_67  [key=2, style=dotted];
m56_62 -> m56_63  [key=0, style=solid, color=red];
m56_63 -> m56_64  [key=0, style=solid];
m56_63 -> m56_68  [key=2, style=dotted];
m56_63 -> m56_67  [key=2, style=dotted];
m56_55 -> m56_64  [key=0, style=solid];
m56_56 -> m56_57  [key=0, style=solid, color=red];
m56_56 -> m56_66  [key=2, style=dotted, color=red];
m56_56 -> m56_58  [key=1, style=dashed, color=red, label=invocationData];
m56_56 -> m56_60  [key=1, style=dashed, color=red, label=invocationData];
m56_56 -> m56_62  [key=1, style=dashed, color=red, label=invocationData];
m56_56 -> m56_63  [key=1, style=dashed, color=red, label=invocationData];
m56_64 -> m56_52  [key=0, style=bold, color=blue];
m56_166 -> m56_167  [key=0, style=solid];
m56_166 -> m56_42  [key=2, style=dotted];
m56_166 -> m56_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_80 -> m56_163  [key=0, style=solid];
m56_80 -> m56_164  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_80 -> m56_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_80 -> m56_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_80 -> m56_174  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_80 -> m56_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_80 -> m56_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_163 -> m56_164  [key=0, style=solid];
m56_163 -> m56_12  [key=2, style=dotted];
m56_163 -> m56_165  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_163 -> m56_166  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_163 -> m56_167  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_164 -> m56_165  [key=0, style=solid];
m56_164 -> m56_42  [key=2, style=dotted];
m56_164 -> m56_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_165 -> m56_166  [key=0, style=solid];
m56_165 -> m56_42  [key=2, style=dotted];
m56_165 -> m56_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_167 -> m56_168  [key=0, style=solid];
m56_167 -> m56_43  [key=2, style=dotted];
m56_168 -> m56_80  [key=0, style=bold, color=blue];
m56_86 -> m56_87  [key=0, style=solid];
m56_86 -> m56_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_86 -> m56_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_86 -> m56_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_86 -> m56_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_86 -> m56_90  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m56_86 -> m56_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_86 -> m56_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_87 -> m56_88  [key=0, style=solid];
m56_87 -> m56_12  [key=2, style=dotted];
m56_87 -> m56_89  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_87 -> m56_92  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_87 -> m56_93  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_88 -> m56_89  [key=0, style=solid];
m56_88 -> m56_42  [key=2, style=dotted];
m56_88 -> m56_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_89 -> m56_90  [key=0, style=solid];
m56_89 -> m56_42  [key=2, style=dotted];
m56_89 -> m56_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_90 -> m56_91  [key=0, style=solid];
m56_90 -> m56_93  [key=0, style=solid];
m56_92 -> m56_90  [key=0, style=solid];
m56_92 -> m56_42  [key=2, style=dotted];
m56_92 -> m56_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_93 -> m56_94  [key=0, style=solid];
m56_93 -> m56_43  [key=2, style=dotted];
m56_91 -> m56_92  [key=0, style=solid];
m56_91 -> m56_105  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m56_91 -> m56_90  [key=3, color=darkorchid, style=bold, label="Local variable string queue1"];
m56_94 -> m56_86  [key=0, style=bold, color=blue];
m56_108 -> m56_109  [key=0, style=solid];
m56_109 -> m56_110  [key=0, style=solid];
m56_109 -> m56_111  [key=2, style=dotted];
m56_110 -> m56_108  [key=0, style=bold, color=blue];
m56_33 -> m56_34  [key=0, style=solid];
m56_33 -> m56_42  [key=2, style=dotted];
m56_33 -> m56_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_24 -> m56_25  [key=0, style=solid];
m56_24 -> m56_26  [key=1, style=dashed, color=red, label="HangFire.Storage.InvocationData"];
m56_24 -> m56_27  [key=1, style=dashed, color=red, label="HangFire.Storage.InvocationData"];
m56_24 -> m56_28  [key=1, style=dashed, color=red, label="HangFire.Storage.InvocationData"];
m56_24 -> m56_29  [key=1, style=dashed, color=red, label="string[]"];
m56_24 -> m56_30  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m56_24 -> m56_32  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m56_24 -> m56_45  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m56_24 -> m56_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m56_24 -> m56_49  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m56_25 -> m56_26  [key=0, style=solid, color=red];
m56_25 -> m56_37  [key=2, style=dotted];
m56_25 -> m56_38  [key=2, style=dotted];
m56_25 -> m56_32  [key=1, style=dashed, color=red, label=jobId];
m56_25 -> m56_45  [key=1, style=dashed, color=red, label=jobId];
m56_25 -> m56_33  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m56_25 -> m56_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m56_25 -> m56_35  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m56_26 -> m56_27  [key=0, style=solid, color=red];
m56_26 -> d26  [key=2, style=dotted, color=red];
m56_27 -> m56_28  [key=0, style=solid, color=red];
m56_27 -> d26  [key=2, style=dotted, color=red];
m56_28 -> m56_29  [key=0, style=solid, color=red];
m56_28 -> d26  [key=2, style=dotted, color=red];
m56_29 -> m56_30  [key=0, style=solid, color=red];
m56_29 -> m56_40  [key=2, style=dotted, color=red];
m56_29 -> d26  [key=2, style=dotted, color=red];
m56_30 -> m56_31  [key=0, style=solid, color=red];
m56_30 -> m56_41  [key=2, style=dotted, color=red];
m56_30 -> d26  [key=2, style=dotted, color=red];
m56_32 -> m56_33  [key=0, style=solid, color=red];
m56_32 -> m56_42  [key=2, style=dotted, color=red];
m56_32 -> m56_44  [key=1, style=dashed, color=red, label="lambda expression"];
m56_35 -> m56_36  [key=0, style=solid];
m56_31 -> m56_32  [key=0, style=solid, color=red];
m56_31 -> m56_12  [key=2, style=dotted];
m56_31 -> m56_33  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_31 -> m56_34  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m56_34 -> m56_35  [key=0, style=solid];
m56_34 -> m56_43  [key=2, style=dotted];
m56_36 -> m56_24  [key=0, style=bold, color=blue];
m56_177 -> m56_178  [key=0, style=solid];
m56_45 -> m56_46  [key=0, style=solid, color=red];
m56_45 -> m56_21  [key=2, style=dotted, color=red];
m56_45 -> m56_47  [key=2, style=dotted, color=red];
m56_49 -> m56_50  [key=0, style=solid];
m56_49 -> m56_21  [key=2, style=dotted];
m56_49 -> m56_51  [key=2, style=dotted];
m56_44 -> m56_45  [key=0, style=solid, color=red];
m56_48 -> m56_49  [key=0, style=solid];
m56_46 -> m56_44  [key=0, style=bold, color=blue];
m56_50 -> m56_48  [key=0, style=bold, color=blue];
m56_96 -> m56_97  [key=0, style=solid];
m56_96 -> m56_98  [key=2, style=dotted];
m56_100 -> m56_101  [key=0, style=solid];
m56_100 -> m56_21  [key=2, style=dotted];
m56_100 -> m56_102  [key=2, style=dotted];
m56_100 -> m56_103  [key=2, style=dotted];
m56_100 -> m56_41  [key=2, style=dotted];
m56_100 -> m56_47  [key=2, style=dotted];
m56_105 -> m56_106  [key=0, style=solid];
m56_105 -> m56_21  [key=2, style=dotted];
m56_105 -> m56_107  [key=2, style=dotted];
m56_95 -> m56_96  [key=0, style=solid];
m56_99 -> m56_100  [key=0, style=solid];
m56_104 -> m56_105  [key=0, style=solid];
m56_97 -> m56_95  [key=0, style=bold, color=blue];
m56_101 -> m56_99  [key=0, style=bold, color=blue];
m56_106 -> m56_104  [key=0, style=bold, color=blue];
m56_118 -> m56_119  [key=0, style=solid];
m56_118 -> m56_120  [key=2, style=dotted];
m56_122 -> m56_123  [key=0, style=solid];
m56_122 -> m56_21  [key=2, style=dotted];
m56_122 -> m56_124  [key=2, style=dotted];
m56_117 -> m56_118  [key=0, style=solid];
m56_121 -> m56_122  [key=0, style=solid];
m56_119 -> m56_117  [key=0, style=bold, color=blue];
m56_123 -> m56_121  [key=0, style=bold, color=blue];
m56_157 -> m56_158  [key=0, style=solid];
m56_157 -> m56_159  [key=2, style=dotted];
m56_157 -> m56_160  [key=2, style=dotted];
m56_157 -> m56_161  [key=2, style=dotted];
m56_157 -> m56_162  [key=2, style=dotted];
m56_152 -> m56_153  [key=0, style=solid];
m56_152 -> m56_154  [key=2, style=dotted];
m56_152 -> m56_155  [key=2, style=dotted];
m56_151 -> m56_152  [key=0, style=solid];
m56_156 -> m56_157  [key=0, style=solid];
m56_153 -> m56_151  [key=0, style=bold, color=blue];
m56_158 -> m56_156  [key=0, style=bold, color=blue];
m56_170 -> m56_171  [key=0, style=solid];
m56_170 -> m56_21  [key=2, style=dotted];
m56_170 -> m56_172  [key=2, style=dotted];
m56_174 -> m56_175  [key=0, style=solid];
m56_174 -> m56_21  [key=2, style=dotted];
m56_174 -> m56_176  [key=2, style=dotted];
m56_178 -> m56_179  [key=0, style=solid];
m56_178 -> m56_21  [key=2, style=dotted];
m56_178 -> m56_176  [key=2, style=dotted];
m56_169 -> m56_170  [key=0, style=solid];
m56_173 -> m56_174  [key=0, style=solid];
m56_171 -> m56_169  [key=0, style=bold, color=blue];
m56_175 -> m56_173  [key=0, style=bold, color=blue];
m56_179 -> m56_177  [key=0, style=bold, color=blue];
m56_18 -> m56_19  [key=0, style=solid];
m56_19 -> m56_20  [key=0, style=solid];
m56_19 -> m56_21  [key=2, style=dotted];
m56_19 -> m56_22  [key=2, style=dotted];
m56_19 -> m56_23  [key=2, style=dotted];
m56_20 -> m56_18  [key=0, style=bold, color=blue];
m56_70 -> m56_71  [key=0, style=solid];
m56_70 -> m56_21  [key=2, style=dotted];
m56_70 -> m56_72  [key=2, style=dotted];
m56_69 -> m56_70  [key=0, style=solid];
m56_71 -> m56_69  [key=0, style=bold, color=blue];
m56_77 -> m56_78  [key=0, style=solid];
m56_78 -> m56_79  [key=0, style=solid];
m56_78 -> m56_80  [key=2, style=dotted];
m56_79 -> m56_77  [key=0, style=bold, color=blue];
m56_180 -> m56_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_180 -> m56_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m56_181 -> m56_45  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m56_182 -> m56_45  [key=1, style=dashed, color=red, label=jobId];
m56_182 -> m56_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m56_183 -> m56_49  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m56_184 -> m56_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_184 -> m56_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_184 -> m56_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_185 -> m56_100  [key=1, style=dashed, color=darkseagreen4, label=int];
m56_186 -> m56_105  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m56_187 -> m56_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_187 -> m56_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_188 -> m56_152  [key=1, style=dashed, color=darkseagreen4, label=name];
m56_188 -> m56_157  [key=1, style=dashed, color=darkseagreen4, label=name];
m56_189 -> m56_157  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m56_190 -> m56_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_191 -> m56_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_191 -> m56_174  [key=1, style=dashed, color=darkseagreen4, label=string];
m56_191 -> m56_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m57_0 -> m57_1  [key=0, style=solid];
m57_0 -> m57_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m57_0 -> m57_3  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m57_1 -> m57_2  [key=0, style=solid];
m57_2 -> m57_3  [key=0, style=solid];
m57_2 -> m57_5  [key=2, style=dotted];
m57_3 -> m57_4  [key=0, style=solid];
m57_4 -> m57_0  [key=0, style=bold, color=blue];
m57_38 -> m57_39  [key=0, style=solid, color=red];
m57_38 -> m57_29  [key=2, style=dotted, color=red];
m57_38 -> m57_40  [key=2, style=dotted, color=red];
m57_38 -> m57_41  [key=2, style=dotted, color=red];
m57_41 -> m57_39  [key=0, style=solid, color=green];
m57_41 -> m57_29  [key=2, style=dotted, color=green];
m57_41 -> m57_40  [key=2, style=dotted, color=green];
m57_41 -> m57_41  [key=2, style=dotted, color=green];
m57_43 -> m57_44  [key=0, style=solid, color=red];
m57_43 -> m57_29  [key=2, style=dotted, color=red];
m57_43 -> m57_45  [key=2, style=dotted, color=red];
m57_47 -> m57_48  [key=0, style=solid, color=red];
m57_48 -> m57_49  [key=0, style=solid, color=red];
m57_49 -> m57_50  [key=0, style=solid, color=red];
m57_37 -> m57_38  [key=0, style=solid, color=red];
m57_37 -> m57_41  [key=0, style=solid, color=green];
m57_42 -> m57_43  [key=0, style=solid, color=red];
m57_42 -> m57_46  [key=0, style=solid, color=green];
m57_46 -> m57_47  [key=0, style=solid, color=red];
m57_46 -> m57_48  [key=1, style=dashed, color=red, label="?"];
m57_46 -> m57_49  [key=1, style=dashed, color=red, label="?"];
m57_46 -> m57_50  [key=1, style=dashed, color=darkseagreen4, label="?"];
m57_46 -> m57_51  [key=1, style=dashed, color=green, label="?"];
m57_46 -> m57_52  [key=1, style=dashed, color=green, label="?"];
m57_46 -> m57_44  [key=0, style=solid, color=green];
m57_46 -> m57_29  [key=2, style=dotted, color=green];
m57_46 -> m57_45  [key=2, style=dotted, color=green];
m57_39 -> m57_37  [key=0, style=bold, color=blue];
m57_44 -> m57_42  [key=0, style=bold, color=blue];
m57_50 -> m57_51  [key=0, style=solid, color=green];
m57_50 -> m57_52  [key=1, style=dashed, color=green, label=type];
m57_51 -> m57_52  [key=0, style=solid, color=green];
m57_52 -> m57_50  [key=0, style=solid, color=green];
m57_52 -> m57_52  [key=1, style=dashed, color=green, label=parameterTypes];
m57_52 -> m57_46  [key=0, style=bold, color=blue];
m57_29 -> m57_27  [key=0, style=solid];
m57_29 -> m57_36  [key=2, style=dotted];
m57_28 -> m57_29  [key=0, style=solid, color=green];
m57_28 -> m57_38  [key=2, style=dotted, color=green];
m57_25 -> m57_26  [key=0, style=solid, color=green];
m57_25 -> m57_34  [key=2, style=dotted, color=green];
m57_25 -> m57_37  [key=1, style=dashed, color=green, label="lambda expression"];
m57_25 -> m57_35  [key=2, style=dotted];
m57_6 -> m57_7  [key=0, style=solid];
m57_6 -> m57_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m57_7 -> m57_8  [key=0, style=solid];
m57_10 -> m57_11  [key=0, style=solid];
m57_10 -> m57_28  [key=2, style=dotted];
m57_10 -> m57_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m57_8 -> m57_9  [key=0, style=solid];
m57_9 -> m57_10  [key=0, style=solid];
m57_9 -> m57_11  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m57_9 -> m57_9  [key=3, color=darkorchid, style=bold, label="Local variable int queueIndex"];
m57_11 -> m57_12  [key=0, style=solid];
m57_11 -> m57_11  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m57_11 -> m57_15  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m57_12 -> m57_13  [key=0, style=solid, color=green];
m57_12 -> m57_14  [key=1, style=dashed, color=green, label=queueName];
m57_12 -> m57_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m57_12 -> m57_29  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m57_15 -> m57_16  [key=0, style=solid];
m57_15 -> m57_17  [key=0, style=solid];
m57_13 -> m57_14  [key=0, style=solid, color=green];
m57_13 -> m57_29  [key=2, style=dotted, color=green];
m57_13 -> m57_16  [key=1, style=dashed, color=green, label=queueKey];
m57_13 -> m57_17  [key=1, style=dashed, color=green, label=queueKey];
m57_14 -> m57_15  [key=0, style=solid, color=green];
m57_14 -> m57_29  [key=2, style=dotted, color=green];
m57_14 -> m57_16  [key=1, style=dashed, color=green, label=fetchedKey];
m57_14 -> m57_17  [key=1, style=dashed, color=green, label=fetchedKey];
m57_26 -> m57_27  [key=0, style=solid, color=green];
m57_26 -> m57_36  [key=2, style=dotted];
m57_26 -> m57_34  [key=2, style=dotted, color=green];
m57_26 -> m57_42  [key=1, style=dashed, color=green, label="lambda expression"];
m57_26 -> m57_46  [key=1, style=dashed, color=green, label="lambda expression"];
m57_26 -> m57_28  [key=1, style=dashed, color=green, label=type];
m57_26 -> m57_29  [key=1, style=dashed, color=green, label=arguments];
m57_16 -> m57_18  [key=0, style=solid];
m57_16 -> m57_30  [key=2, style=dotted];
m57_16 -> m57_23  [key=1, style=dashed, color=red, label=jobId];
m57_16 -> m57_38  [key=1, style=dashed, color=red, label=jobId];
m57_16 -> m57_24  [key=1, style=dashed, color=red, label=jobId];
m57_16 -> m57_43  [key=1, style=dashed, color=red, label=jobId];
m57_16 -> m57_26  [key=1, style=dashed, color=green, label=jobId];
m57_16 -> m57_25  [key=1, style=dashed, color=green, label=jobId];
m57_16 -> m57_41  [key=1, style=dashed, color=green, label=jobId];
m57_16 -> m57_46  [key=1, style=dashed, color=green, label=jobId];
m57_16 -> m57_29  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m57_17 -> m57_18  [key=0, style=solid];
m57_17 -> m57_31  [key=2, style=dotted];
m57_17 -> m57_23  [key=1, style=dashed, color=red, label=jobId];
m57_17 -> m57_38  [key=1, style=dashed, color=red, label=jobId];
m57_17 -> m57_24  [key=1, style=dashed, color=red, label=jobId];
m57_17 -> m57_43  [key=1, style=dashed, color=red, label=jobId];
m57_17 -> m57_26  [key=1, style=dashed, color=green, label=jobId];
m57_17 -> m57_25  [key=1, style=dashed, color=green, label=jobId];
m57_17 -> m57_41  [key=1, style=dashed, color=green, label=jobId];
m57_17 -> m57_46  [key=1, style=dashed, color=green, label=jobId];
m57_17 -> m57_29  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m57_18 -> m57_9  [key=0, style=solid];
m57_18 -> m57_19  [key=0, style=solid, color=green];
m57_23 -> m57_24  [key=0, style=solid, color=red];
m57_23 -> m57_34  [key=2, style=dotted, color=red];
m57_23 -> m57_37  [key=1, style=dashed, color=red, label="lambda expression"];
m57_23 -> m57_22  [key=0, style=solid];
m57_24 -> m57_25  [key=0, style=solid, color=red];
m57_24 -> m57_34  [key=2, style=dotted, color=red];
m57_24 -> m57_42  [key=1, style=dashed, color=red, label="lambda expression"];
m57_24 -> m57_46  [key=1, style=dashed, color=red, label="lambda expression"];
m57_24 -> m57_26  [key=1, style=dashed, color=red, label=arguments];
m57_19 -> m57_20  [key=0, style=solid, color=green];
m57_19 -> m57_32  [key=2, style=dotted, color=red];
m57_19 -> m57_24  [key=1, style=dashed, color=red, label=invocationData];
m57_19 -> m57_47  [key=1, style=dashed, color=red, label=invocationData];
m57_19 -> m57_48  [key=1, style=dashed, color=red, label=invocationData];
m57_19 -> m57_49  [key=1, style=dashed, color=red, label=invocationData];
m57_19 -> m57_26  [key=1, style=dashed, color=red, label=invocationData];
m57_20 -> m57_21  [key=0, style=solid, color=green];
m57_20 -> m57_20  [key=3, color=darkorchid, style=bold, label="Local variable string arguments"];
m57_21 -> m57_22  [key=0, style=solid, color=green];
m57_21 -> m57_20  [key=3, color=darkorchid, style=bold, label="Local variable string args"];
m57_22 -> m57_23  [key=0, style=solid, color=red];
m57_22 -> m57_33  [key=2, style=dotted];
m57_22 -> m57_24  [key=1, style=dashed, color=red, label=pipeline];
m57_22 -> m57_25  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m57_22 -> m57_26  [key=1, style=dashed, color=green, label=pipeline];
m57_22 -> m57_27  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m57_27 -> m57_28  [key=0, style=solid, color=green];
m57_27 -> m57_35  [key=2, style=dotted];
m57_27 -> m57_6  [key=0, style=bold, color=blue];
m57_53 -> m57_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_53 -> m57_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m57_54 -> m57_38  [key=1, style=dashed, color=red, label=jobId];
m57_54 -> m57_43  [key=1, style=dashed, color=red, label=jobId];
m57_54 -> m57_41  [key=1, style=dashed, color=green, label=jobId];
m57_54 -> m57_46  [key=1, style=dashed, color=green, label=jobId];
m57_55 -> m57_47  [key=1, style=dashed, color=red, label=invocationData];
m57_55 -> m57_48  [key=1, style=dashed, color=red, label=invocationData];
m57_55 -> m57_49  [key=1, style=dashed, color=red, label=invocationData];
m58_26 -> m58_27  [key=0, style=solid];
m58_27 -> m58_26  [key=0, style=bold, color=blue];
m58_0 -> m58_1  [key=0, style=solid];
m58_1 -> m58_2  [key=0, style=solid];
m58_1 -> n8  [key=2, style=dotted];
m58_1 -> m58_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m58_2 -> m58_0  [key=0, style=bold, color=blue];
m58_23 -> m58_24  [key=0, style=solid];
m58_4 -> m58_5  [key=0, style=solid];
m58_5 -> m58_6  [key=0, style=solid];
m58_5 -> m58_7  [key=2, style=dotted];
m58_6 -> m58_4  [key=0, style=bold, color=blue];
m58_24 -> m58_25  [key=0, style=solid];
m58_24 -> m58_26  [key=2, style=dotted];
m58_25 -> m58_23  [key=0, style=bold, color=blue];
m58_8 -> m58_9  [key=0, style=solid];
m58_9 -> m58_10  [key=0, style=solid];
m58_9 -> m58_17  [key=2, style=dotted];
m58_9 -> m58_13  [key=1, style=dashed, color=darkseagreen4, label=connection];
m58_10 -> m58_11  [key=0, style=solid];
m58_10 -> m58_18  [key=2, style=dotted];
m58_10 -> m58_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m58_10 -> m58_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m58_13 -> m58_14  [key=0, style=solid];
m58_13 -> m58_21  [key=2, style=dotted];
m58_11 -> m58_12  [key=0, style=solid];
m58_11 -> m58_19  [key=2, style=dotted];
m58_11 -> m58_13  [key=1, style=dashed, color=darkseagreen4, label=state];
m58_12 -> m58_13  [key=0, style=solid];
m58_12 -> m58_20  [key=2, style=dotted];
m58_14 -> m58_15  [key=0, style=solid];
m58_14 -> m58_7  [key=2, style=dotted];
m58_15 -> m58_16  [key=0, style=solid];
m58_15 -> m58_22  [key=2, style=dotted];
m58_16 -> m58_8  [key=0, style=bold, color=blue];
m59_0 -> m59_1  [key=0, style=solid];
m59_1 -> m59_2  [key=0, style=solid];
m59_2 -> m59_0  [key=0, style=bold, color=blue];
m59_26 -> m59_27  [key=0, style=solid];
m59_18 -> m59_19  [key=0, style=solid];
m59_18 -> m59_20  [key=2, style=dotted];
m59_17 -> m59_18  [key=0, style=solid];
m59_19 -> m59_17  [key=0, style=bold, color=blue];
m59_27 -> m59_28  [key=0, style=solid];
m59_27 -> m59_29  [key=2, style=dotted];
m59_28 -> m59_26  [key=0, style=bold, color=blue];
m59_3 -> m59_4  [key=0, style=solid];
m59_4 -> m59_5  [key=0, style=solid];
m59_4 -> m59_6  [key=2, style=dotted];
m59_4 -> m59_7  [key=2, style=dotted];
m59_5 -> m59_3  [key=0, style=bold, color=blue];
m59_8 -> m59_9  [key=0, style=solid];
m59_8 -> m59_12  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m59_8 -> m59_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m59_9 -> m59_10  [key=0, style=solid];
m59_9 -> m59_11  [key=0, style=solid];
m59_12 -> m59_13  [key=0, style=solid];
m59_12 -> m59_16  [key=2, style=dotted];
m59_12 -> m59_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m59_10 -> m59_13  [key=0, style=solid];
m59_10 -> d24  [key=2, style=dotted];
m59_11 -> m59_12  [key=0, style=solid];
m59_11 -> m59_15  [key=2, style=dotted];
m59_11 -> m59_18  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m59_13 -> m59_8  [key=0, style=bold, color=blue];
m59_21 -> m59_22  [key=0, style=solid];
m59_21 -> m59_24  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m59_21 -> m59_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m59_22 -> m59_23  [key=0, style=solid];
m59_22 -> m59_24  [key=0, style=solid];
m59_24 -> m59_25  [key=0, style=solid];
m59_24 -> m59_16  [key=2, style=dotted];
m59_24 -> m59_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m59_23 -> m59_25  [key=0, style=solid];
m59_23 -> d24  [key=2, style=dotted];
m59_25 -> m59_21  [key=0, style=bold, color=blue];
m59_30 -> m59_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m59_30 -> m59_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m59_30 -> m59_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m59_31 -> m59_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m59_32 -> m59_18  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m59_33 -> m59_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m60_0 -> m60_1  [key=0, style=solid];
m60_1 -> m60_2  [key=0, style=solid];
m60_2 -> m60_0  [key=0, style=bold, color=blue];
m60_3 -> m60_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m61_0 -> m61_1  [key=0, style=solid];
m61_1 -> m61_2  [key=0, style=solid];
m61_2 -> m61_0  [key=0, style=bold, color=blue];
m61_13 -> m61_18  [key=0, style=solid];
m61_13 -> m61_19  [key=1, style=dashed, color=darkseagreen4, label=long];
m61_13 -> m61_6  [key=3, color=darkorchid, style=bold, label="Parameter variable long retryCount"];
m61_18 -> m61_19  [key=0, style=solid];
m61_18 -> m61_21  [key=2, style=dotted];
m61_19 -> m61_20  [key=0, style=solid];
m61_19 -> m61_22  [key=2, style=dotted];
m61_19 -> m61_23  [key=2, style=dotted];
m61_19 -> m61_24  [key=2, style=dotted];
m61_20 -> m61_13  [key=0, style=bold, color=blue];
m61_3 -> m61_4  [key=0, style=solid, color=green];
m61_3 -> m61_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m61_3 -> m61_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m61_3 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m61_4 -> m61_5  [key=0, style=solid, color=green];
m61_4 -> m61_6  [key=0, style=solid, color=green];
m61_6 -> m61_7  [key=0, style=solid];
m61_6 -> m61_12  [key=2, style=dotted];
m61_6 -> m61_8  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m61_6 -> m61_9  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m61_6 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m61_9 -> m61_10  [key=0, style=solid];
m61_9 -> m61_15  [key=2, style=dotted];
m61_10 -> m61_11  [key=0, style=solid];
m61_10 -> m61_16  [key=2, style=dotted];
m61_10 -> m61_17  [key=2, style=dotted];
m61_5 -> m61_11  [key=0, style=solid];
m61_7 -> m61_8  [key=0, style=solid];
m61_7 -> m61_11  [key=0, style=solid];
m61_8 -> m61_9  [key=0, style=solid];
m61_8 -> m61_13  [key=2, style=dotted];
m61_8 -> m61_14  [key=2, style=dotted];
m61_8 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label=delay];
m61_11 -> m61_3  [key=0, style=bold, color=blue];
m61_25 -> m61_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RetryAttribute"];
m61_25 -> m61_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RetryAttribute"];
m61_25 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.RetryAttribute"];
m62_56 -> m62_57  [key=0, style=solid];
m62_56 -> m62_70  [key=2, style=dotted];
m62_56 -> m62_71  [key=2, style=dotted];
m62_56 -> m62_72  [key=2, style=dotted];
m62_56 -> m62_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_56 -> m62_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_56 -> m62_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_56 -> m62_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_56 -> m62_59  [key=1, style=dashed, color=darkseagreen4, label=parts];
m62_56 -> m62_60  [key=1, style=dashed, color=darkseagreen4, label=parts];
m62_56 -> m62_64  [key=1, style=dashed, color=darkseagreen4, label=parts];
m62_56 -> m62_65  [key=1, style=dashed, color=darkseagreen4, label=parts];
m62_133 -> m62_134  [key=0, style=solid];
m62_134 -> m62_135  [key=0, style=solid];
m62_134 -> m62_136  [key=2, style=dotted];
m62_134 -> m62_137  [key=2, style=dotted];
m62_135 -> m62_133  [key=0, style=bold, color=blue];
m62_26 -> m62_27  [key=0, style=solid];
m62_26 -> m62_29  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m62_26 -> m62_45  [key=2, style=dotted];
m62_27 -> m62_28  [key=0, style=solid];
m62_27 -> m62_29  [key=0, style=solid];
m62_27 -> m62_56  [key=2, style=dotted];
m62_27 -> m62_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_27 -> m62_58  [key=2, style=dotted];
m62_29 -> m62_30  [key=0, style=solid];
m62_29 -> m62_31  [key=1, style=dashed, color=green, label=job];
m62_29 -> m62_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_29 -> m62_56  [key=2, style=dotted];
m62_28 -> m62_32  [key=0, style=solid];
m62_28 -> d24  [key=2, style=dotted];
m62_28 -> m62_29  [key=0, style=solid];
m62_28 -> m62_45  [key=2, style=dotted];
m62_30 -> m62_31  [key=0, style=solid, color=green];
m62_30 -> m62_33  [key=2, style=dotted];
m62_30 -> m62_45  [key=2, style=dotted];
m62_31 -> m62_32  [key=0, style=solid, color=green];
m62_31 -> m62_25  [key=2, style=dotted];
m62_31 -> m62_31  [key=1, style=dashed, color=green, label=job];
m62_31 -> m62_59  [key=2, style=dotted, color=green];
m62_31 -> m62_55  [key=2, style=dotted, color=green];
m62_31 -> m62_33  [key=1, style=dashed, color=green, label=job];
m62_32 -> m62_26  [key=0, style=bold, color=blue];
m62_32 -> m62_33  [key=0, style=solid, color=green];
m62_32 -> m62_45  [key=2, style=dotted];
m62_61 -> m62_62  [key=0, style=solid];
m62_61 -> m62_63  [key=0, style=solid];
m62_23 -> m62_119  [key=0, style=solid];
m62_23 -> m62_24  [key=0, style=solid];
m62_23 -> m62_45  [key=2, style=dotted];
m62_119 -> m62_120  [key=0, style=solid];
m62_119 -> m62_121  [key=0, style=solid];
m62_120 -> m62_124  [key=0, style=solid];
m62_121 -> m62_122  [key=0, style=solid, color=red];
m62_121 -> m62_125  [key=2, style=dotted];
m62_121 -> m62_123  [key=1, style=dashed, color=darkseagreen4, label=connection];
m62_122 -> m62_123  [key=0, style=solid, color=red];
m62_122 -> m62_126  [key=2, style=dotted, color=red];
m62_123 -> m62_124  [key=0, style=solid];
m62_124 -> m62_23  [key=0, style=bold, color=blue];
m62_127 -> m62_128  [key=0, style=solid];
m62_127 -> m62_129  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m62_128 -> m62_129  [key=0, style=solid];
m62_128 -> m62_130  [key=0, style=solid];
m62_128 -> m62_131  [key=2, style=dotted];
m62_129 -> m62_130  [key=0, style=solid];
m62_129 -> m62_132  [key=2, style=dotted];
m62_130 -> m62_127  [key=0, style=bold, color=blue];
m62_42 -> m62_43  [key=0, style=solid];
m62_42 -> m62_44  [key=0, style=bold, color=crimson];
m62_42 -> m62_45  [key=2, style=dotted];
m62_43 -> m62_44  [key=0, style=solid];
m62_43 -> m62_46  [key=2, style=dotted];
m62_43 -> m62_55  [key=2, style=dotted];
m62_43 -> m62_62  [key=2, style=dotted];
m62_43 -> m62_54  [key=2, style=dotted];
m62_44 -> m62_45  [key=0, style=solid];
m62_44 -> m62_47  [key=2, style=dotted];
m62_44 -> m62_0  [key=0, style=bold, color=blue];
m62_45 -> m62_42  [key=0, style=bold, color=blue];
m62_59 -> m62_60  [key=0, style=solid];
m62_59 -> m62_58  [key=0, style=solid];
m62_59 -> m62_74  [key=2, style=dotted];
m62_33 -> m62_33  [key=1, style=dashed, color=green, label=job];
m62_33 -> m62_34  [key=0, style=solid, color=green];
m62_33 -> m62_60  [key=2, style=dotted, color=green];
m62_33 -> m62_56  [key=2, style=dotted, color=green];
m62_33 -> m62_35  [key=1, style=dashed, color=green, label=job];
m62_22 -> m62_55  [key=2, style=dotted];
m62_22 -> m62_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_22 -> m62_23  [key=0, style=solid];
m62_22 -> m62_57  [key=2, style=dotted];
m62_22 -> m62_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_49 -> m62_50  [key=0, style=solid];
m62_49 -> m62_52  [key=2, style=dotted];
m62_38 -> m62_39  [key=0, style=solid];
m62_38 -> m62_45  [key=2, style=dotted];
m62_39 -> m62_40  [key=0, style=solid];
m62_39 -> m62_41  [key=2, style=dotted];
m62_39 -> m62_56  [key=2, style=dotted];
m62_39 -> m62_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_39 -> m62_51  [key=2, style=dotted];
m62_40 -> m62_38  [key=0, style=bold, color=blue];
m62_40 -> m62_41  [key=0, style=solid];
m62_40 -> m62_45  [key=2, style=dotted];
m62_21 -> m62_22  [key=0, style=solid];
m62_21 -> m62_45  [key=2, style=dotted];
m62_48 -> m62_49  [key=0, style=solid];
m62_48 -> m62_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m62_50 -> m62_51  [key=0, style=solid];
m62_50 -> m62_53  [key=2, style=dotted];
m62_51 -> m62_48  [key=0, style=bold, color=blue];
m62_90 -> m62_91  [key=0, style=solid];
m62_90 -> m62_95  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m62_91 -> m62_92  [key=0, style=solid];
m62_91 -> m62_93  [key=2, style=dotted];
m62_91 -> m62_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_92 -> m62_90  [key=0, style=bold, color=blue];
m62_20 -> m62_146  [key=0, style=solid];
m62_20 -> m62_56  [key=2, style=dotted];
m62_20 -> m62_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_20 -> m62_21  [key=0, style=solid];
m62_20 -> m62_51  [key=2, style=dotted];
m62_20 -> m62_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_146 -> m62_147  [key=0, style=solid];
m62_147 -> m62_148  [key=0, style=solid];
m62_148 -> m62_20  [key=0, style=bold, color=blue];
m62_104 -> m62_105  [key=0, style=solid];
m62_104 -> m62_109  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m62_105 -> m62_106  [key=0, style=solid];
m62_105 -> m62_107  [key=2, style=dotted];
m62_105 -> m62_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_106 -> m62_104  [key=0, style=bold, color=blue];
m62_0 -> m62_1  [key=0, style=solid];
m62_1 -> m62_0  [key=0, style=bold, color=blue];
m62_1 -> m62_2  [key=0, style=solid];
m62_1 -> m62_45  [key=2, style=dotted];
m62_54 -> m62_55  [key=0, style=solid];
m62_24 -> m62_25  [key=0, style=solid];
m62_24 -> m62_26  [key=0, style=solid];
m62_24 -> m62_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_24 -> m62_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_34 -> m62_35  [key=0, style=solid, color=green];
m62_34 -> m62_45  [key=2, style=dotted];
m62_35 -> m62_35  [key=1, style=dashed, color=green, label=job];
m62_35 -> m62_36  [key=0, style=solid, color=green];
m62_35 -> m62_61  [key=2, style=dotted, color=green];
m62_35 -> m62_56  [key=2, style=dotted, color=green];
m62_35 -> m62_37  [key=1, style=dashed, color=green, label=job];
m62_36 -> m62_37  [key=0, style=solid];
m62_36 -> m62_45  [key=2, style=dotted];
m62_36 -> m62_34  [key=0, style=bold, color=blue];
m62_37 -> m62_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_37 -> m62_38  [key=0, style=solid];
m62_37 -> m62_41  [key=0, style=solid];
m62_37 -> m62_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_2 -> m62_3  [key=0, style=solid];
m62_2 -> m62_46  [key=2, style=dotted];
m62_2 -> m62_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m62_2 -> m62_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m62_2 -> m62_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m62_2 -> m62_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m62_2 -> m62_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m62_2 -> m62_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m62_2 -> m62_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m62_2 -> m62_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m62_4 -> m62_5  [key=0, style=solid];
m62_4 -> m62_47  [key=2, style=dotted];
m62_4 -> m62_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m62_4 -> m62_17  [key=0, style=solid];
m62_4 -> d24  [key=2, style=dotted];
m62_5 -> m62_6  [key=0, style=solid];
m62_5 -> m62_47  [key=2, style=dotted];
m62_5 -> m62_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m62_5 -> m62_7  [key=0, style=solid];
m62_9 -> m62_10  [key=0, style=solid];
m62_9 -> m62_49  [key=2, style=dotted];
m62_9 -> m62_50  [key=2, style=dotted];
m62_9 -> m62_51  [key=2, style=dotted];
m62_9 -> m62_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m62_9 -> m62_14  [key=1, style=dashed, color=darkseagreen4, label=pager];
m62_9 -> m62_43  [key=1, style=dashed, color=darkseagreen4, label=pager];
m62_9 -> m62_13  [key=0, style=solid];
m62_11 -> m62_12  [key=0, style=solid];
m62_11 -> m62_45  [key=2, style=dotted];
m62_11 -> m62_13  [key=0, style=solid];
m62_13 -> m62_44  [key=0, style=solid];
m62_13 -> m62_45  [key=2, style=dotted];
m62_13 -> m62_14  [key=0, style=solid];
m62_13 -> m62_16  [key=0, style=solid];
m62_14 -> m62_55  [key=2, style=dotted];
m62_14 -> m62_15  [key=0, style=solid];
m62_14 -> m62_53  [key=2, style=dotted];
m62_14 -> m62_54  [key=2, style=dotted];
m62_14 -> m62_23  [key=2, style=dotted];
m62_15 -> m62_16  [key=0, style=solid];
m62_15 -> m62_45  [key=2, style=dotted];
m62_15 -> m62_24  [key=2, style=dotted];
m62_17 -> m62_18  [key=0, style=solid];
m62_17 -> m62_45  [key=2, style=dotted];
m62_17 -> m62_2  [key=0, style=bold, color=blue];
m62_18 -> m62_56  [key=2, style=dotted];
m62_18 -> m62_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_18 -> m62_19  [key=0, style=solid];
m62_18 -> m62_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_19 -> m62_20  [key=0, style=solid];
m62_19 -> m62_45  [key=2, style=dotted];
m62_19 -> m62_143  [key=0, style=solid];
m62_25 -> m62_26  [key=0, style=solid];
m62_25 -> m62_45  [key=2, style=dotted];
m62_25 -> m62_138  [key=0, style=solid];
m62_41 -> m62_16  [key=0, style=solid];
m62_41 -> m62_45  [key=2, style=dotted];
m62_3 -> m62_4  [key=0, style=solid];
m62_3 -> m62_5  [key=0, style=solid];
m62_6 -> m62_7  [key=0, style=solid];
m62_6 -> m62_17  [key=0, style=solid];
m62_6 -> d24  [key=2, style=dotted];
m62_8 -> m62_9  [key=0, style=solid];
m62_8 -> m62_48  [key=2, style=dotted];
m62_8 -> m62_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m62_8 -> m62_19  [key=2, style=dotted];
m62_10 -> m62_11  [key=0, style=solid];
m62_10 -> m62_52  [key=2, style=dotted];
m62_10 -> m62_16  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m62_10 -> m62_12  [key=0, style=solid];
m62_10 -> m62_20  [key=2, style=dotted];
m62_12 -> m62_13  [key=0, style=solid];
m62_12 -> m62_14  [key=0, style=solid];
m62_12 -> m62_17  [key=0, style=solid];
m62_12 -> m62_21  [key=2, style=dotted];
m62_12 -> m62_22  [key=2, style=dotted];
m62_16 -> m62_17  [key=0, style=solid];
m62_16 -> m62_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m62_16 -> m62_42  [key=0, style=solid];
m62_16 -> m62_25  [key=2, style=dotted];
m62_7 -> m62_8  [key=0, style=solid];
m62_60 -> m62_61  [key=0, style=solid];
m62_60 -> m62_75  [key=2, style=dotted];
m62_171 -> m62_172  [key=0, style=solid];
m62_171 -> m62_173  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m62_77 -> m62_78  [key=0, style=solid];
m62_80 -> m62_81  [key=0, style=solid];
m62_84 -> m62_85  [key=0, style=solid];
m62_87 -> m62_88  [key=0, style=solid];
m62_78 -> m62_79  [key=0, style=solid];
m62_78 -> m62_70  [key=2, style=dotted];
m62_79 -> m62_77  [key=0, style=bold, color=blue];
m62_81 -> m62_82  [key=0, style=solid];
m62_81 -> m62_83  [key=2, style=dotted];
m62_82 -> m62_80  [key=0, style=bold, color=blue];
m62_85 -> m62_86  [key=0, style=solid];
m62_86 -> m62_84  [key=0, style=bold, color=blue];
m62_88 -> m62_89  [key=0, style=solid];
m62_89 -> m62_87  [key=0, style=bold, color=blue];
m62_95 -> m62_96  [key=0, style=solid];
m62_95 -> m62_98  [key=2, style=dotted];
m62_94 -> m62_95  [key=0, style=solid];
m62_96 -> m62_97  [key=0, style=solid];
m62_97 -> m62_94  [key=0, style=bold, color=blue];
m62_109 -> m62_110  [key=0, style=solid];
m62_109 -> m62_98  [key=2, style=dotted];
m62_108 -> m62_109  [key=0, style=solid];
m62_110 -> m62_111  [key=0, style=solid];
m62_111 -> m62_108  [key=0, style=bold, color=blue];
m62_149 -> m62_150  [key=0, style=solid];
m62_150 -> m62_151  [key=0, style=solid];
m62_150 -> m62_153  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m62_151 -> m62_152  [key=0, style=solid];
m62_151 -> m62_153  [key=0, style=solid];
m62_153 -> m62_154  [key=0, style=solid];
m62_153 -> m62_93  [key=2, style=dotted];
m62_153 -> m62_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_152 -> m62_154  [key=0, style=solid];
m62_152 -> m62_155  [key=2, style=dotted];
m62_154 -> m62_149  [key=0, style=bold, color=blue];
m62_156 -> m62_157  [key=0, style=solid];
m62_156 -> m62_158  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m62_157 -> m62_158  [key=0, style=solid];
m62_158 -> m62_159  [key=0, style=solid];
m62_158 -> m62_161  [key=2, style=dotted];
m62_158 -> m62_162  [key=2, style=dotted];
m62_159 -> m62_160  [key=0, style=solid];
m62_159 -> m62_163  [key=2, style=dotted];
m62_159 -> m62_164  [key=2, style=dotted];
m62_160 -> m62_156  [key=0, style=bold, color=blue];
m62_165 -> m62_166  [key=0, style=solid];
m62_166 -> m62_167  [key=0, style=solid];
m62_166 -> m62_169  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m62_167 -> m62_168  [key=0, style=solid];
m62_167 -> m62_169  [key=0, style=solid];
m62_169 -> m62_170  [key=0, style=solid];
m62_169 -> m62_93  [key=2, style=dotted];
m62_169 -> m62_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m62_168 -> m62_170  [key=0, style=solid];
m62_168 -> m62_155  [key=2, style=dotted];
m62_170 -> m62_165  [key=0, style=bold, color=blue];
m62_172 -> m62_173  [key=0, style=solid];
m62_173 -> m62_174  [key=0, style=solid];
m62_173 -> m62_161  [key=2, style=dotted];
m62_173 -> m62_162  [key=2, style=dotted];
m62_174 -> m62_175  [key=0, style=solid];
m62_174 -> m62_163  [key=2, style=dotted];
m62_174 -> m62_164  [key=2, style=dotted];
m62_175 -> m62_171  [key=0, style=bold, color=blue];
m62_58 -> m62_59  [key=0, style=solid];
m62_58 -> m62_61  [key=0, style=solid];
m62_58 -> m62_60  [key=1, style=dashed, color=darkseagreen4, label=alias];
m62_138 -> m62_139  [key=0, style=solid];
m62_138 -> m62_141  [key=2, style=dotted];
m62_139 -> m62_140  [key=0, style=solid];
m62_139 -> m62_142  [key=2, style=dotted];
m62_140 -> m62_25  [key=0, style=bold, color=blue];
m62_55 -> m62_56  [key=0, style=solid];
m62_55 -> m62_66  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m62_55 -> m62_68  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m62_57 -> m62_58  [key=0, style=solid];
m62_57 -> m62_73  [key=2, style=dotted];
m62_57 -> m62_60  [key=1, style=dashed, color=darkseagreen4, label=builder];
m62_57 -> m62_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m62_57 -> m62_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m62_57 -> m62_65  [key=1, style=dashed, color=darkseagreen4, label=builder];
m62_57 -> m62_66  [key=1, style=dashed, color=darkseagreen4, label=builder];
m62_66 -> m62_69  [key=0, style=solid];
m62_66 -> m62_22  [key=2, style=dotted];
m62_68 -> m62_69  [key=0, style=solid];
m62_64 -> m62_65  [key=0, style=solid];
m62_64 -> m62_63  [key=0, style=solid];
m62_64 -> m62_74  [key=2, style=dotted];
m62_65 -> m62_66  [key=0, style=solid];
m62_65 -> m62_75  [key=2, style=dotted];
m62_62 -> m62_63  [key=0, style=solid];
m62_62 -> m62_76  [key=2, style=dotted];
m62_63 -> m62_64  [key=0, style=solid];
m62_63 -> m62_66  [key=0, style=solid];
m62_63 -> m62_65  [key=1, style=dashed, color=darkseagreen4, label=alias];
m62_63 -> m62_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_35  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_63 -> m62_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m62_67 -> m62_68  [key=0, style=solid];
m62_69 -> m62_54  [key=0, style=bold, color=blue];
m62_93 -> m62_99  [key=0, style=solid];
m62_93 -> m62_101  [key=1, style=dashed, color=darkseagreen4, label="System.Func<SqlConnection, T>"];
m62_99 -> m62_100  [key=0, style=solid];
m62_101 -> m62_102  [key=0, style=solid];
m62_101 -> m62_103  [key=2, style=dotted];
m62_100 -> m62_101  [key=0, style=solid];
m62_100 -> m62_23  [key=2, style=dotted];
m62_102 -> m62_93  [key=0, style=bold, color=blue];
m62_143 -> m62_144  [key=0, style=solid];
m62_143 -> m62_145  [key=2, style=dotted];
m62_144 -> m62_19  [key=0, style=bold, color=blue];
m62_107 -> m62_112  [key=0, style=solid];
m62_107 -> m62_113  [key=1, style=dashed, color=darkseagreen4, label="System.Func<SqlConnection, T>"];
m62_112 -> m62_113  [key=0, style=solid];
m62_112 -> m62_117  [key=2, style=dotted];
m62_112 -> m62_114  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m62_113 -> m62_114  [key=0, style=solid];
m62_113 -> m62_93  [key=2, style=dotted];
m62_113 -> m62_115  [key=1, style=dashed, color=darkseagreen4, label=result];
m62_114 -> m62_115  [key=0, style=solid];
m62_114 -> m62_118  [key=2, style=dotted];
m62_115 -> m62_116  [key=0, style=solid];
m62_116 -> m62_107  [key=0, style=bold, color=blue];
m62_176 -> m62_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_176 -> m62_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m62_177 -> m62_95  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m62_178 -> m62_109  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m63_3 -> m63_4  [key=0, style=solid, color=green];
m63_4 -> m63_5  [key=0, style=solid, color=green];
m63_4 -> m63_6  [key=2, style=dotted, color=green];
m63_4 -> m63_7  [key=2, style=dotted, color=green];
m63_5 -> m63_3  [key=0, style=bold, color=blue];
m63_0 -> m63_1  [key=0, style=solid];
m63_1 -> m63_2  [key=0, style=solid];
m63_2 -> m63_0  [key=0, style=bold, color=blue];
m63_16 -> m63_17  [key=0, style=solid];
m63_17 -> m63_18  [key=0, style=solid];
m63_17 -> m63_19  [key=2, style=dotted];
m63_18 -> m63_16  [key=0, style=bold, color=blue];
m63_15 -> m63_15  [key=3, color=darkorchid, style=bold, label="Field variable string Name"];
m63_13 -> m63_8  [key=0, style=bold, color=blue];
m63_20 -> m63_21  [key=0, style=solid, color=green];
m63_20 -> m63_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m63_20 -> m63_4  [key=1, style=dashed, color=red, label="HangFire.States.ScheduledState"];
m63_21 -> m63_22  [key=0, style=solid, color=green];
m63_21 -> m63_23  [key=2, style=dotted, color=green];
m63_21 -> m63_24  [key=2, style=dotted, color=green];
m63_22 -> m63_20  [key=0, style=bold, color=blue];
m63_8 -> m63_9  [key=0, style=solid, color=green];
m63_8 -> m63_11  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m63_8 -> m63_12  [key=1, style=dashed, color=green, label=IRedisTransaction];
m63_8 -> m63_21  [key=1, style=dashed, color=green, label=string];
m63_9 -> m63_10  [key=0, style=solid, color=green];
m63_9 -> m63_13  [key=2, style=dotted, color=red];
m63_9 -> m63_11  [key=0, style=solid, color=green];
m63_11 -> m63_12  [key=0, style=solid, color=green];
m63_11 -> m63_15  [key=2, style=dotted];
m63_11 -> m63_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m63_10 -> m63_11  [key=0, style=solid, color=red];
m63_10 -> m63_14  [key=2, style=dotted, color=red];
m63_10 -> m63_13  [key=0, style=solid, color=green];
m63_10 -> d24  [key=2, style=dotted, color=green];
m63_12 -> m63_8  [key=0, style=bold, color=blue];
m63_12 -> m63_13  [key=0, style=solid, color=green];
m63_12 -> m63_15  [key=2, style=dotted, color=green];
m63_12 -> m63_20  [key=1, style=dashed, color=green, label="lambda expression"];
m63_25 -> m63_4  [key=1, style=dashed, color=green, label="HangFire.States.EnqueuedState"];
m63_25 -> m63_12  [key=1, style=dashed, color=green, label="HangFire.States.EnqueuedState"];
m63_25 -> m63_21  [key=1, style=dashed, color=green, label="HangFire.States.EnqueuedState"];
m63_25 -> m63_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m63_25 -> m63_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m63_25 -> m63_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m63_26 -> m63_21  [key=1, style=dashed, color=green, label=string];
m64_0 -> m64_1  [key=0, style=solid, color=red];
m64_0 -> m64_2  [key=1, style=dashed, color=darkseagreen4, label=RouteCollection];
m64_1 -> m64_2  [key=0, style=solid, color=red];
m64_1 -> m64_4  [key=2, style=dotted, color=red];
m64_2 -> m64_3  [key=0, style=solid];
m64_2 -> m64_5  [key=2, style=dotted];
m64_3 -> m64_0  [key=0, style=bold, color=blue];
m65_0 -> m65_1  [key=0, style=solid];
m65_0 -> m65_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_0 -> m65_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m65_0 -> m65_5  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m65_1 -> m65_2  [key=0, style=solid];
m65_1 -> m65_3  [key=0, style=solid];
m65_3 -> m65_4  [key=0, style=solid];
m65_4 -> m65_5  [key=0, style=solid];
m65_5 -> m65_6  [key=0, style=solid];
m65_2 -> m65_6  [key=0, style=solid];
m65_2 -> d24  [key=2, style=dotted];
m65_6 -> m65_0  [key=0, style=bold, color=blue];
m65_8 -> m65_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJob"];
m65_8 -> m65_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJob"];
m65_8 -> m65_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJob"];
m66_4 -> m66_5  [key=0, style=solid];
m66_5 -> m66_4  [key=0, style=bold, color=blue];
m66_34 -> m66_35  [key=0, style=solid];
m66_34 -> m66_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m66_34 -> m66_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m66_35 -> m66_36  [key=0, style=solid];
m66_35 -> m66_37  [key=0, style=solid];
m66_37 -> m66_38  [key=0, style=solid];
m66_37 -> m66_39  [key=0, style=solid];
m66_41 -> m66_42  [key=0, style=solid];
m66_41 -> m66_44  [key=2, style=dotted];
m66_36 -> m66_42  [key=0, style=solid];
m66_36 -> d24  [key=2, style=dotted];
m66_38 -> m66_42  [key=0, style=solid];
m66_38 -> d24  [key=2, style=dotted];
m66_39 -> m66_40  [key=0, style=solid];
m66_39 -> m66_30  [key=2, style=dotted];
m66_40 -> m66_41  [key=0, style=solid];
m66_40 -> m66_43  [key=2, style=dotted];
m66_42 -> m66_34  [key=0, style=bold, color=blue];
m66_0 -> m66_1  [key=0, style=solid];
m66_1 -> m66_0  [key=0, style=bold, color=blue];
m66_6 -> m66_7  [key=0, style=solid];
m66_6 -> m66_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m66_6 -> m66_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m66_6 -> m66_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m66_6 -> m66_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m66_6 -> m66_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m66_7 -> m66_8  [key=0, style=solid];
m66_7 -> m66_9  [key=0, style=solid];
m66_9 -> m66_10  [key=0, style=solid];
m66_9 -> m66_11  [key=0, style=solid];
m66_11 -> m66_12  [key=0, style=solid];
m66_11 -> m66_13  [key=0, style=solid];
m66_13 -> m66_14  [key=0, style=solid];
m66_14 -> m66_15  [key=0, style=solid];
m66_15 -> m66_16  [key=0, style=solid];
m66_8 -> m66_16  [key=0, style=solid];
m66_8 -> d24  [key=2, style=dotted];
m66_10 -> m66_16  [key=0, style=solid];
m66_10 -> d24  [key=2, style=dotted];
m66_12 -> m66_16  [key=0, style=solid];
m66_12 -> d24  [key=2, style=dotted];
m66_16 -> m66_6  [key=0, style=bold, color=blue];
m66_18 -> m66_19  [key=0, style=solid];
m66_18 -> m66_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m66_18 -> m66_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m66_19 -> m66_20  [key=0, style=solid];
m66_19 -> m66_21  [key=0, style=solid];
m66_21 -> m66_22  [key=0, style=solid];
m66_21 -> m66_23  [key=0, style=solid];
m66_24 -> m66_25  [key=0, style=solid];
m66_24 -> m66_31  [key=2, style=dotted];
m66_24 -> m66_26  [key=1, style=dashed, color=darkseagreen4, label=context];
m66_20 -> m66_29  [key=0, style=solid];
m66_20 -> d24  [key=2, style=dotted];
m66_22 -> m66_29  [key=0, style=solid];
m66_22 -> d24  [key=2, style=dotted];
m66_23 -> m66_24  [key=0, style=solid];
m66_23 -> m66_30  [key=2, style=dotted];
m66_25 -> m66_26  [key=0, style=solid];
m66_25 -> m66_32  [key=2, style=dotted];
m66_26 -> m66_29  [key=0, style=solid];
m66_27 -> m66_28  [key=0, style=solid];
m66_28 -> m66_29  [key=0, style=solid];
m66_28 -> m66_33  [key=2, style=dotted];
m66_29 -> m66_18  [key=0, style=bold, color=blue];
m66_2 -> m66_3  [key=0, style=solid];
m66_3 -> m66_2  [key=0, style=bold, color=blue];
m66_45 -> m66_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m66_45 -> m66_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m68_52 -> m68_53  [key=0, style=solid];
m68_53 -> m68_35  [key=2, style=dotted];
m68_53 -> m68_47  [key=2, style=dotted];
m68_53 -> m68_54  [key=0, style=solid];
m68_54 -> m68_52  [key=0, style=bold, color=blue];
m68_58 -> m68_59  [key=0, style=solid];
m68_59 -> m68_35  [key=2, style=dotted];
m68_59 -> m68_47  [key=2, style=dotted];
m68_59 -> m68_60  [key=0, style=solid];
m68_60 -> m68_58  [key=0, style=bold, color=blue];
m68_15 -> m68_13  [key=0, style=bold, color=blue];
m68_12 -> m68_13  [key=0, style=solid];
m68_8 -> m68_9  [key=0, style=solid];
m68_9 -> m68_10  [key=0, style=solid];
m68_9 -> m68_11  [key=2, style=dotted];
m68_10 -> m68_8  [key=0, style=bold, color=blue];
m68_10 -> m68_11  [key=0, style=solid];
m68_10 -> m68_12  [key=2, style=dotted];
m68_61 -> m68_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m68_61 -> m68_62  [key=0, style=solid];
m68_63 -> m68_33  [key=2, style=dotted];
m68_63 -> m68_64  [key=0, style=solid];
m68_63 -> m68_38  [key=2, style=dotted];
m68_62 -> m68_63  [key=0, style=solid];
m68_62 -> m68_65  [key=2, style=dotted];
m68_62 -> m68_66  [key=2, style=dotted];
m68_64 -> m68_61  [key=0, style=bold, color=blue];
m68_39 -> m68_40  [key=0, style=solid, color=green];
m68_39 -> m68_41  [key=1, style=dashed, color=green, label=string];
m68_39 -> m68_42  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.StateAndInvocationData GetJobStateAndInvocationData"];
m68_40 -> m68_40  [key=3, color=green, style=bold, label="Local variable string sql"];
m68_40 -> m68_41  [key=0, style=solid, color=green];
m68_41 -> m68_42  [key=0, style=solid, color=green];
m68_41 -> m68_35  [key=2, style=dotted, color=green];
m68_41 -> m68_47  [key=2, style=dotted, color=green];
m68_41 -> m68_44  [key=1, style=dashed, color=green, label=job];
m68_41 -> m68_45  [key=1, style=dashed, color=green, label=job];
m68_42 -> m68_43  [key=0, style=solid];
m68_42 -> m68_44  [key=0, style=solid];
m68_44 -> m68_45  [key=0, style=solid, color=green];
m68_44 -> m68_35  [key=2, style=dotted];
m68_45 -> m68_46  [key=0, style=solid, color=green];
m68_45 -> m68_48  [key=2, style=dotted, color=green];
m68_43 -> m68_46  [key=0, style=solid];
m68_46 -> m68_39  [key=0, style=bold, color=blue];
m68_13 -> m68_14  [key=0, style=solid];
m68_13 -> m68_15  [key=2, style=dotted];
m68_14 -> m68_12  [key=0, style=bold, color=blue];
m68_14 -> m68_15  [key=0, style=solid];
m68_14 -> m68_16  [key=2, style=dotted];
m68_0 -> m68_1  [key=0, style=solid];
m68_0 -> m68_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m68_0 -> m68_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m68_0 -> m68_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m68_0 -> m68_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m68_1 -> m68_2  [key=0, style=solid];
m68_1 -> m68_3  [key=0, style=solid];
m68_3 -> m68_4  [key=0, style=solid];
m68_3 -> m68_5  [key=0, style=solid];
m68_3 -> m68_0  [key=0, style=bold, color=blue];
m68_5 -> m68_6  [key=0, style=solid];
m68_5 -> m68_7  [key=2, style=dotted];
m68_6 -> m68_7  [key=0, style=solid];
m68_6 -> m68_4  [key=0, style=bold, color=blue];
m68_2 -> m68_7  [key=0, style=solid];
m68_2 -> d24  [key=2, style=dotted];
m68_2 -> m68_3  [key=0, style=solid];
m68_4 -> m68_7  [key=0, style=solid];
m68_4 -> d24  [key=2, style=dotted];
m68_4 -> m68_5  [key=0, style=solid];
m68_7 -> m68_0  [key=0, style=bold, color=blue];
m68_73 -> m68_74  [key=0, style=solid];
m68_74 -> m68_34  [key=2, style=dotted];
m68_74 -> m68_74  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m68_74 -> m68_75  [key=0, style=solid];
m68_74 -> m68_76  [key=2, style=dotted];
m68_74 -> m68_38  [key=2, style=dotted];
m68_75 -> m68_73  [key=0, style=bold, color=blue];
m68_49 -> m68_50  [key=0, style=solid];
m68_50 -> m68_51  [key=0, style=solid];
m68_50 -> m68_38  [key=2, style=dotted];
m68_51 -> m68_49  [key=0, style=bold, color=blue];
m68_11 -> m68_9  [key=0, style=bold, color=blue];
m68_16 -> m68_17  [key=0, style=solid];
m68_17 -> m68_18  [key=0, style=solid];
m68_17 -> m68_19  [key=2, style=dotted];
m68_17 -> m68_20  [key=2, style=dotted];
m68_17 -> m68_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m68_17 -> m68_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m68_17 -> m68_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m68_17 -> m68_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m68_18 -> m68_16  [key=0, style=bold, color=blue];
m68_67 -> m68_68  [key=0, style=solid];
m68_68 -> m68_69  [key=0, style=solid];
m68_68 -> m68_38  [key=2, style=dotted];
m68_69 -> m68_67  [key=0, style=bold, color=blue];
m68_21 -> m68_22  [key=0, style=solid, color=green];
m68_21 -> m68_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m68_21 -> m68_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m68_21 -> m68_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m68_21 -> m68_27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m68_22 -> m68_22  [key=3, color=green, style=bold, label="Local variable string createJobSql"];
m68_22 -> m68_23  [key=0, style=solid, color=green];
m68_23 -> m68_24  [key=0, style=solid];
m68_23 -> m68_33  [key=2, style=dotted];
m68_23 -> m68_34  [key=2, style=dotted];
m68_23 -> m68_35  [key=2, style=dotted];
m68_23 -> m68_36  [key=2, style=dotted];
m68_23 -> m68_37  [key=2, style=dotted];
m68_23 -> m68_28  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_23 -> m68_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m68_24 -> m68_25  [key=0, style=solid];
m68_24 -> m68_31  [key=0, style=solid];
m68_25 -> m68_26  [key=0, style=solid];
m68_25 -> m68_28  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m68_25 -> m68_30  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m68_27 -> m68_28  [key=0, style=solid];
m68_27 -> m68_29  [key=0, style=solid];
m68_28 -> m68_27  [key=0, style=solid];
m68_28 -> m68_28  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m68_31 -> m68_32  [key=0, style=solid];
m68_30 -> m68_31  [key=0, style=solid];
m68_30 -> m68_38  [key=2, style=dotted];
m68_26 -> m68_27  [key=0, style=solid];
m68_26 -> m68_28  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m68_26 -> m68_26  [key=3, color=darkorchid, style=bold, label="Local variable int parameterIndex"];
m68_29 -> m68_30  [key=0, style=solid];
m68_29 -> m68_29  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
m68_32 -> m68_21  [key=0, style=bold, color=blue];
m68_70 -> m68_71  [key=0, style=solid];
m68_71 -> m68_72  [key=0, style=solid];
m68_71 -> m68_38  [key=2, style=dotted];
m68_72 -> m68_70  [key=0, style=bold, color=blue];
m68_55 -> m68_56  [key=0, style=solid];
m68_56 -> m68_57  [key=0, style=solid];
m68_56 -> m68_38  [key=2, style=dotted];
m68_57 -> m68_55  [key=0, style=bold, color=blue];
m68_77 -> m68_41  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m68_77 -> m68_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m69_9 -> m69_10  [key=0, style=solid];
m69_9 -> m69_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m69_9 -> m69_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_9 -> m69_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m69_9 -> m69_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m69_9 -> m69_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_10 -> m69_11  [key=0, style=solid];
m69_10 -> m69_12  [key=0, style=solid];
m69_12 -> m69_13  [key=0, style=solid];
m69_12 -> m69_14  [key=0, style=solid];
m69_14 -> m69_15  [key=0, style=solid];
m69_14 -> m69_16  [key=0, style=solid];
m69_17 -> m69_18  [key=0, style=solid];
m69_17 -> m69_22  [key=2, style=dotted];
m69_17 -> m69_23  [key=2, style=dotted];
m69_17 -> m69_20  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m69_18 -> m69_19  [key=0, style=solid];
m69_18 -> m69_24  [key=2, style=dotted];
m69_19 -> m69_20  [key=0, style=solid];
m69_19 -> m69_25  [key=2, style=dotted];
m69_11 -> m69_21  [key=0, style=solid];
m69_11 -> d24  [key=2, style=dotted];
m69_13 -> m69_21  [key=0, style=solid];
m69_13 -> d24  [key=2, style=dotted];
m69_15 -> m69_21  [key=0, style=solid];
m69_15 -> d24  [key=2, style=dotted];
m69_16 -> m69_17  [key=0, style=solid];
m69_16 -> m69_18  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m69_20 -> m69_21  [key=0, style=solid];
m69_21 -> m69_9  [key=0, style=bold, color=blue];
m69_0 -> m69_1  [key=0, style=solid];
m69_0 -> m69_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m69_0 -> m69_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m69_0 -> m69_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m69_1 -> m69_2  [key=0, style=solid];
m69_1 -> m69_3  [key=0, style=solid];
m69_3 -> m69_4  [key=0, style=solid];
m69_3 -> m69_5  [key=0, style=solid];
m69_5 -> m69_6  [key=0, style=solid];
m69_6 -> m69_7  [key=0, style=solid];
m69_2 -> m69_7  [key=0, style=solid];
m69_2 -> d24  [key=2, style=dotted];
m69_4 -> m69_7  [key=0, style=solid];
m69_4 -> d24  [key=2, style=dotted];
m69_7 -> m69_0  [key=0, style=bold, color=blue];
m69_26 -> m69_27  [key=0, style=solid, color=red];
m69_26 -> m69_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_26 -> m69_31  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m69_26 -> m69_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m69_26 -> m69_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m69_26 -> m69_37  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m69_26 -> m69_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_26 -> m69_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_26 -> m69_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m69_26 -> m69_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_27 -> m69_28  [key=0, style=solid, color=red];
m69_27 -> m69_29  [key=0, style=solid, color=red];
m69_29 -> m69_30  [key=0, style=solid];
m69_29 -> m69_31  [key=0, style=solid];
m69_31 -> m69_32  [key=0, style=solid];
m69_31 -> m69_33  [key=0, style=solid];
m69_33 -> m69_34  [key=0, style=solid];
m69_33 -> m69_50  [key=2, style=dotted];
m69_34 -> m69_35  [key=0, style=solid];
m69_34 -> m69_51  [key=2, style=dotted];
m69_34 -> m69_37  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m69_34 -> m69_40  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m69_34 -> m69_45  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m69_34 -> m69_46  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m69_37 -> m69_38  [key=0, style=solid];
m69_37 -> m69_39  [key=0, style=solid];
m69_37 -> m69_52  [key=2, style=dotted];
m69_42 -> m69_43  [key=0, style=solid];
m69_42 -> m69_45  [key=0, style=solid];
m69_43 -> m69_44  [key=0, style=solid];
m69_43 -> m69_54  [key=2, style=dotted];
m69_43 -> m69_55  [key=2, style=dotted];
m69_43 -> m69_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_43 -> m69_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m69_45 -> m69_46  [key=0, style=solid];
m69_45 -> m69_24  [key=2, style=dotted];
m69_46 -> m69_47  [key=0, style=solid];
m69_46 -> m69_25  [key=2, style=dotted];
m69_28 -> m69_48  [key=0, style=solid, color=red];
m69_28 -> d24  [key=2, style=dotted, color=red];
m69_30 -> m69_48  [key=0, style=solid];
m69_30 -> d24  [key=2, style=dotted];
m69_32 -> m69_48  [key=0, style=solid];
m69_32 -> m69_49  [key=2, style=dotted];
m69_35 -> m69_36  [key=0, style=solid];
m69_35 -> m69_37  [key=0, style=solid];
m69_40 -> m69_41  [key=0, style=solid];
m69_40 -> m69_45  [key=0, style=solid];
m69_40 -> m69_53  [key=2, style=dotted];
m69_36 -> m69_48  [key=0, style=solid];
m69_38 -> m69_48  [key=0, style=solid];
m69_39 -> m69_40  [key=0, style=solid];
m69_39 -> m69_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m69_47 -> m69_48  [key=0, style=solid];
m69_41 -> m69_42  [key=0, style=solid];
m69_44 -> m69_45  [key=0, style=solid];
m69_44 -> m69_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m69_48 -> m69_26  [key=0, style=bold, color=blue];
m69_56 -> m69_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m69_56 -> m69_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m70_47 -> m70_48  [key=0, style=solid];
m70_48 -> m70_49  [key=0, style=solid];
m70_48 -> m70_50  [key=2, style=dotted];
m70_49 -> m70_47  [key=0, style=bold, color=blue];
m70_43 -> m70_44  [key=0, style=solid];
m70_44 -> m70_45  [key=0, style=solid];
m70_44 -> m70_46  [key=2, style=dotted];
m70_45 -> m70_43  [key=0, style=bold, color=blue];
m70_12 -> m70_13  [key=0, style=solid];
m70_13 -> m70_14  [key=0, style=solid];
m70_13 -> m70_15  [key=0, style=solid];
m70_14 -> m70_13  [key=0, style=solid];
m70_14 -> m70_16  [key=2, style=dotted];
m70_15 -> m70_12  [key=0, style=bold, color=blue];
m70_27 -> m70_28  [key=0, style=solid];
m70_28 -> m70_29  [key=0, style=solid];
m70_28 -> m70_30  [key=2, style=dotted];
m70_29 -> m70_27  [key=0, style=bold, color=blue];
m70_39 -> m70_40  [key=0, style=solid];
m70_40 -> m70_41  [key=0, style=solid];
m70_40 -> m70_42  [key=2, style=dotted];
m70_41 -> m70_39  [key=0, style=bold, color=blue];
m70_7 -> m70_8  [key=0, style=solid];
m70_8 -> m70_9  [key=0, style=solid];
m70_8 -> m70_10  [key=0, style=solid];
m70_9 -> m70_8  [key=0, style=solid];
m70_9 -> m70_11  [key=2, style=dotted];
m70_10 -> m70_7  [key=0, style=bold, color=blue];
m70_31 -> m70_32  [key=0, style=solid];
m70_32 -> m70_33  [key=0, style=solid];
m70_32 -> m70_34  [key=2, style=dotted];
m70_33 -> m70_31  [key=0, style=bold, color=blue];
m70_35 -> m70_36  [key=0, style=solid];
m70_36 -> m70_37  [key=0, style=solid];
m70_36 -> m70_38  [key=2, style=dotted];
m70_37 -> m70_35  [key=0, style=bold, color=blue];
m70_0 -> m70_1  [key=0, style=solid];
m70_0 -> m70_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>"];
m70_1 -> m70_2  [key=0, style=solid];
m70_1 -> m70_3  [key=0, style=solid];
m70_3 -> m70_4  [key=0, style=solid];
m70_3 -> m70_6  [key=2, style=dotted];
m70_2 -> m70_4  [key=0, style=solid];
m70_2 -> d24  [key=2, style=dotted];
m70_4 -> m70_0  [key=0, style=bold, color=blue];
m70_17 -> m70_18  [key=0, style=solid];
m70_18 -> m70_19  [key=0, style=solid];
m70_18 -> m70_12  [key=2, style=dotted];
m70_19 -> m70_20  [key=0, style=solid];
m70_19 -> m70_21  [key=0, style=solid];
m70_20 -> m70_19  [key=0, style=solid];
m70_20 -> m70_22  [key=2, style=dotted];
m70_21 -> m70_17  [key=0, style=bold, color=blue];
m70_23 -> m70_24  [key=0, style=solid];
m70_24 -> m70_25  [key=0, style=solid];
m70_24 -> m70_26  [key=2, style=dotted];
m70_24 -> m70_28  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m70_25 -> m70_23  [key=0, style=bold, color=blue];
m70_51 -> m70_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m70_51 -> m70_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerComponentRunnerCollection"];
m71_0 -> m71_1  [key=0, style=solid];
m71_1 -> m71_2  [key=0, style=solid];
m71_2 -> m71_0  [key=0, style=bold, color=blue];
m71_26 -> m71_27  [key=0, style=solid];
m71_18 -> m71_19  [key=0, style=solid];
m71_18 -> m71_20  [key=2, style=dotted];
m71_17 -> m71_18  [key=0, style=solid];
m71_19 -> m71_17  [key=0, style=bold, color=blue];
m71_27 -> m71_28  [key=0, style=solid];
m71_27 -> m71_29  [key=2, style=dotted];
m71_28 -> m71_26  [key=0, style=bold, color=blue];
m71_3 -> m71_4  [key=0, style=solid];
m71_4 -> m71_5  [key=0, style=solid];
m71_4 -> m71_6  [key=2, style=dotted];
m71_4 -> m71_7  [key=2, style=dotted];
m71_5 -> m71_3  [key=0, style=bold, color=blue];
m71_8 -> m71_9  [key=0, style=solid];
m71_8 -> m71_12  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m71_8 -> m71_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m71_9 -> m71_10  [key=0, style=solid];
m71_9 -> m71_11  [key=0, style=solid];
m71_12 -> m71_13  [key=0, style=solid];
m71_12 -> m71_16  [key=2, style=dotted];
m71_12 -> m71_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m71_10 -> m71_13  [key=0, style=solid];
m71_10 -> d24  [key=2, style=dotted];
m71_11 -> m71_12  [key=0, style=solid];
m71_11 -> m71_15  [key=2, style=dotted];
m71_11 -> m71_18  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m71_13 -> m71_8  [key=0, style=bold, color=blue];
m71_21 -> m71_22  [key=0, style=solid];
m71_21 -> m71_24  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m71_21 -> m71_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m71_22 -> m71_23  [key=0, style=solid];
m71_22 -> m71_24  [key=0, style=solid];
m71_24 -> m71_25  [key=0, style=solid];
m71_24 -> m71_16  [key=2, style=dotted];
m71_24 -> m71_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m71_23 -> m71_25  [key=0, style=solid];
m71_23 -> d24  [key=2, style=dotted];
m71_25 -> m71_21  [key=0, style=bold, color=blue];
m71_30 -> m71_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m71_30 -> m71_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m71_30 -> m71_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m71_31 -> m71_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m71_32 -> m71_18  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m71_33 -> m71_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_84 -> m72_85  [key=0, style=solid];
m72_85 -> m72_86  [key=0, style=solid];
m72_85 -> m72_87  [key=2, style=dotted];
m72_86 -> m72_84  [key=0, style=bold, color=blue];
m72_100 -> m72_101  [key=0, style=solid];
m72_100 -> m72_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_101 -> m72_102  [key=0, style=solid];
m72_101 -> m72_24  [key=2, style=dotted];
m72_101 -> m72_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_102 -> m72_100  [key=0, style=bold, color=blue];
m72_87 -> m72_88  [key=0, style=solid];
m72_87 -> m72_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_87 -> m72_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_87 -> m72_84  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m72_87 -> m72_85  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m72_88 -> m72_89  [key=0, style=solid];
m72_88 -> m72_92  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m72_88 -> m72_88  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m72_89 -> m72_90  [key=0, style=solid];
m72_89 -> m72_24  [key=2, style=dotted];
m72_89 -> m72_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_90 -> m72_87  [key=0, style=bold, color=blue];
m72_66 -> m72_67  [key=0, style=solid];
m72_66 -> m72_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_67 -> m72_68  [key=0, style=solid];
m72_67 -> m72_24  [key=2, style=dotted];
m72_67 -> m72_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_68 -> m72_66  [key=0, style=bold, color=blue];
m72_36 -> m72_37  [key=0, style=solid, color=red];
m72_36 -> m72_38  [key=1, style=dashed, color=red, label=string];
m72_36 -> m72_44  [key=1, style=dashed, color=red, label=string];
m72_36 -> m72_39  [key=1, style=dashed, color=red, label=string];
m72_37 -> m72_38  [key=0, style=solid, color=red];
m72_37 -> m72_41  [key=2, style=dotted, color=red];
m72_37 -> m72_44  [key=1, style=dashed, color=red, label=stateData];
m72_38 -> m72_39  [key=0, style=solid, color=red];
m72_38 -> m72_24  [key=2, style=dotted, color=red];
m72_38 -> m72_43  [key=1, style=dashed, color=red, label="lambda expression"];
m72_39 -> m72_40  [key=0, style=solid, color=red];
m72_39 -> m72_42  [key=2, style=dotted, color=red];
m72_40 -> m72_36  [key=0, style=bold, color=blue];
m72_112 -> m72_113  [key=0, style=solid];
m72_112 -> m72_114  [key=1, style=dashed, color=darkseagreen4, label=int];
m72_112 -> m72_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m72_113 -> m72_114  [key=0, style=solid];
m72_113 -> m72_117  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m72_113 -> m72_113  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m72_114 -> m72_115  [key=0, style=solid];
m72_114 -> m72_24  [key=2, style=dotted];
m72_114 -> m72_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_115 -> m72_112  [key=0, style=bold, color=blue];
m72_24 -> m72_145  [key=0, style=solid];
m72_24 -> m72_22  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_31  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_38  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_48  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_55  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_67  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_73  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_79  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_89  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_95  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_101  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_107  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_114  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_122  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_132  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_24 -> m72_140  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m72_145 -> m72_146  [key=0, style=solid];
m72_145 -> m72_147  [key=2, style=dotted];
m72_146 -> m72_24  [key=0, style=bold, color=blue];
m72_78 -> m72_79  [key=0, style=solid];
m72_78 -> m72_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_79 -> m72_80  [key=0, style=solid];
m72_79 -> m72_24  [key=2, style=dotted];
m72_79 -> m72_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_80 -> m72_78  [key=0, style=bold, color=blue];
m72_72 -> m72_73  [key=0, style=solid];
m72_72 -> m72_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_73 -> m72_74  [key=0, style=solid];
m72_73 -> m72_24  [key=2, style=dotted];
m72_73 -> m72_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_74 -> m72_72  [key=0, style=bold, color=blue];
m72_94 -> m72_95  [key=0, style=solid];
m72_94 -> m72_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_95 -> m72_96  [key=0, style=solid];
m72_95 -> m72_24  [key=2, style=dotted];
m72_95 -> m72_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_96 -> m72_94  [key=0, style=bold, color=blue];
m72_21 -> m72_22  [key=0, style=solid];
m72_21 -> m72_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_22 -> m72_23  [key=0, style=solid];
m72_22 -> m72_24  [key=2, style=dotted];
m72_22 -> m72_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_23 -> m72_21  [key=0, style=bold, color=blue];
m72_106 -> m72_107  [key=0, style=solid];
m72_106 -> m72_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_107 -> m72_108  [key=0, style=solid];
m72_107 -> m72_24  [key=2, style=dotted];
m72_107 -> m72_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_108 -> m72_106  [key=0, style=bold, color=blue];
m72_8 -> m72_9  [key=0, style=solid];
m72_8 -> m72_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Commit"];
m72_9 -> m72_10  [key=0, style=solid];
m72_9 -> m72_16  [key=2, style=dotted];
m72_9 -> m72_17  [key=2, style=dotted];
m72_9 -> m72_13  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m72_10 -> m72_11  [key=0, style=solid];
m72_10 -> m72_18  [key=2, style=dotted];
m72_13 -> m72_14  [key=0, style=solid];
m72_13 -> m72_20  [key=2, style=dotted];
m72_11 -> m72_12  [key=0, style=solid];
m72_11 -> m72_13  [key=0, style=solid];
m72_12 -> m72_11  [key=0, style=solid];
m72_12 -> m72_19  [key=2, style=dotted];
m72_14 -> m72_15  [key=0, style=solid];
m72_15 -> m72_8  [key=0, style=bold, color=blue];
m72_139 -> m72_140  [key=0, style=solid];
m72_139 -> m72_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_140 -> m72_141  [key=0, style=solid];
m72_140 -> m72_24  [key=2, style=dotted];
m72_140 -> m72_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_141 -> m72_139  [key=0, style=bold, color=blue];
m72_142 -> m72_143  [key=0, style=solid];
m72_26 -> m72_27  [key=0, style=solid];
m72_26 -> m72_28  [key=2, style=dotted];
m72_26 -> m72_29  [key=2, style=dotted];
m72_25 -> m72_26  [key=0, style=solid];
m72_27 -> m72_25  [key=0, style=bold, color=blue];
m72_34 -> m72_35  [key=0, style=solid];
m72_34 -> m72_29  [key=2, style=dotted];
m72_33 -> m72_34  [key=0, style=solid];
m72_35 -> m72_33  [key=0, style=bold, color=blue];
m72_44 -> m72_45  [key=0, style=solid, color=red];
m72_44 -> m72_46  [key=2, style=dotted, color=red];
m72_44 -> m72_29  [key=2, style=dotted, color=red];
m72_43 -> m72_44  [key=0, style=solid, color=red];
m72_45 -> m72_43  [key=0, style=bold, color=blue];
m72_51 -> m72_52  [key=0, style=solid, color=red];
m72_51 -> m72_46  [key=2, style=dotted, color=red];
m72_51 -> m72_29  [key=2, style=dotted, color=red];
m72_50 -> m72_51  [key=0, style=solid, color=red];
m72_52 -> m72_50  [key=0, style=bold, color=blue];
m72_58 -> m72_59  [key=0, style=solid];
m72_58 -> m72_29  [key=2, style=dotted];
m72_57 -> m72_58  [key=0, style=solid];
m72_59 -> m72_57  [key=0, style=bold, color=blue];
m72_64 -> m72_65  [key=0, style=solid];
m72_64 -> m72_29  [key=2, style=dotted];
m72_63 -> m72_64  [key=0, style=solid];
m72_65 -> m72_63  [key=0, style=bold, color=blue];
m72_70 -> m72_71  [key=0, style=solid];
m72_70 -> m72_28  [key=2, style=dotted];
m72_70 -> m72_29  [key=2, style=dotted];
m72_69 -> m72_70  [key=0, style=solid];
m72_71 -> m72_69  [key=0, style=bold, color=blue];
m72_76 -> m72_77  [key=0, style=solid];
m72_76 -> m72_29  [key=2, style=dotted];
m72_75 -> m72_76  [key=0, style=solid];
m72_77 -> m72_75  [key=0, style=bold, color=blue];
m72_82 -> m72_83  [key=0, style=solid];
m72_82 -> m72_28  [key=2, style=dotted];
m72_82 -> m72_29  [key=2, style=dotted];
m72_81 -> m72_82  [key=0, style=solid];
m72_83 -> m72_81  [key=0, style=bold, color=blue];
m72_92 -> m72_93  [key=0, style=solid];
m72_92 -> m72_29  [key=2, style=dotted];
m72_91 -> m72_92  [key=0, style=solid];
m72_93 -> m72_91  [key=0, style=bold, color=blue];
m72_98 -> m72_99  [key=0, style=solid];
m72_98 -> m72_29  [key=2, style=dotted];
m72_97 -> m72_98  [key=0, style=solid];
m72_99 -> m72_97  [key=0, style=bold, color=blue];
m72_104 -> m72_105  [key=0, style=solid];
m72_104 -> m72_29  [key=2, style=dotted];
m72_103 -> m72_104  [key=0, style=solid];
m72_105 -> m72_103  [key=0, style=bold, color=blue];
m72_110 -> m72_111  [key=0, style=solid];
m72_110 -> m72_29  [key=2, style=dotted];
m72_109 -> m72_110  [key=0, style=solid];
m72_111 -> m72_109  [key=0, style=bold, color=blue];
m72_117 -> m72_118  [key=0, style=solid];
m72_117 -> m72_29  [key=2, style=dotted];
m72_116 -> m72_117  [key=0, style=solid];
m72_118 -> m72_116  [key=0, style=bold, color=blue];
m72_125 -> m72_126  [key=0, style=solid];
m72_125 -> m72_29  [key=2, style=dotted];
m72_127 -> m72_128  [key=0, style=solid];
m72_127 -> m72_29  [key=2, style=dotted];
m72_124 -> m72_125  [key=0, style=solid];
m72_124 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m72_126 -> m72_127  [key=0, style=solid];
m72_126 -> m72_128  [key=0, style=solid];
m72_128 -> m72_124  [key=0, style=bold, color=blue];
m72_135 -> m72_136  [key=0, style=solid];
m72_135 -> m72_29  [key=2, style=dotted];
m72_137 -> m72_138  [key=0, style=solid];
m72_137 -> m72_29  [key=2, style=dotted];
m72_134 -> m72_135  [key=0, style=solid];
m72_134 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m72_136 -> m72_137  [key=0, style=solid];
m72_136 -> m72_138  [key=0, style=solid];
m72_138 -> m72_134  [key=0, style=bold, color=blue];
m72_143 -> m72_144  [key=0, style=solid];
m72_143 -> m72_28  [key=2, style=dotted];
m72_143 -> m72_29  [key=2, style=dotted];
m72_144 -> m72_142  [key=0, style=bold, color=blue];
m72_129 -> m72_130  [key=0, style=solid];
m72_129 -> m72_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_129 -> m72_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_129 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_130 -> m72_131  [key=0, style=solid];
m72_130 -> m72_132  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m72_130 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m72_130 -> m72_120  [key=3, color=darkorchid, style=bold, label="Local variable string insertSql"];
m72_132 -> m72_133  [key=0, style=solid];
m72_132 -> m72_24  [key=2, style=dotted];
m72_132 -> m72_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_131 -> m72_132  [key=0, style=solid];
m72_131 -> m72_135  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_131 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_131 -> m72_131  [key=3, color=darkorchid, style=bold, label="Local variable string updateSql"];
m72_133 -> m72_129  [key=0, style=bold, color=blue];
m72_0 -> m72_1  [key=0, style=solid];
m72_0 -> m72_3  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m72_1 -> m72_2  [key=0, style=solid];
m72_1 -> m72_3  [key=0, style=solid];
m72_3 -> m72_4  [key=0, style=solid];
m72_2 -> m72_4  [key=0, style=solid];
m72_2 -> d24  [key=2, style=dotted];
m72_4 -> m72_0  [key=0, style=bold, color=blue];
m72_119 -> m72_120  [key=0, style=solid];
m72_119 -> m72_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_119 -> m72_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_119 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_120 -> m72_121  [key=0, style=solid];
m72_120 -> m72_122  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m72_120 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m72_120 -> m72_120  [key=3, color=darkorchid, style=bold, label="Local variable string insertSql"];
m72_122 -> m72_123  [key=0, style=solid];
m72_122 -> m72_24  [key=2, style=dotted];
m72_122 -> m72_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_121 -> m72_122  [key=0, style=solid];
m72_121 -> m72_125  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_121 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_121 -> m72_121  [key=3, color=darkorchid, style=bold, label="Local variable string updateSql"];
m72_123 -> m72_119  [key=0, style=bold, color=blue];
m72_53 -> m72_54  [key=0, style=solid];
m72_53 -> m72_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_53 -> m72_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_54 -> m72_55  [key=0, style=solid];
m72_54 -> m72_58  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m72_54 -> m72_54  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m72_55 -> m72_56  [key=0, style=solid];
m72_55 -> m72_24  [key=2, style=dotted];
m72_55 -> m72_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_56 -> m72_53  [key=0, style=bold, color=blue];
m72_60 -> m72_61  [key=0, style=solid];
m72_60 -> m72_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_61 -> m72_62  [key=0, style=solid];
m72_61 -> m72_24  [key=2, style=dotted];
m72_61 -> m72_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_62 -> m72_60  [key=0, style=bold, color=blue];
m72_30 -> m72_31  [key=0, style=solid];
m72_30 -> m72_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_31 -> m72_32  [key=0, style=solid];
m72_31 -> m72_24  [key=2, style=dotted];
m72_31 -> m72_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m72_32 -> m72_30  [key=0, style=bold, color=blue];
m72_42 -> m72_47  [key=0, style=solid, color=red];
m72_42 -> m72_48  [key=1, style=dashed, color=red, label=string];
m72_42 -> m72_51  [key=1, style=dashed, color=red, label=string];
m72_42 -> m72_36  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Common.JobMethod method"];
m72_47 -> m72_48  [key=0, style=solid, color=red];
m72_47 -> m72_41  [key=2, style=dotted, color=red];
m72_47 -> m72_51  [key=1, style=dashed, color=red, label=stateData];
m72_48 -> m72_49  [key=0, style=solid, color=red];
m72_48 -> m72_24  [key=2, style=dotted, color=red];
m72_48 -> m72_50  [key=1, style=dashed, color=red, label="lambda expression"];
m72_49 -> m72_42  [key=0, style=bold, color=blue];
m72_6 -> m72_7  [key=0, style=solid];
m72_7 -> m72_6  [key=0, style=bold, color=blue];
m72_148 -> m72_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_38  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_39  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_48  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_148 -> m72_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m72_149 -> m72_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_150 -> m72_26  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m72_151 -> m72_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_152 -> m72_44  [key=1, style=dashed, color=red, label=string];
m72_153 -> m72_44  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobState"];
m72_154 -> m72_44  [key=1, style=dashed, color=red, label=stateData];
m72_155 -> m72_51  [key=1, style=dashed, color=red, label=string];
m72_156 -> m72_51  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobState"];
m72_157 -> m72_51  [key=1, style=dashed, color=red, label=stateData];
m72_158 -> m72_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_159 -> m72_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_160 -> m72_58  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m72_161 -> m72_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_162 -> m72_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_163 -> m72_70  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m72_164 -> m72_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_165 -> m72_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_166 -> m72_82  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m72_167 -> m72_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_168 -> m72_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_169 -> m72_92  [key=1, style=dashed, color=darkseagreen4, label=double];
m72_170 -> m72_92  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m72_171 -> m72_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_172 -> m72_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_173 -> m72_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_174 -> m72_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_175 -> m72_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_176 -> m72_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_177 -> m72_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m72_178 -> m72_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m72_179 -> m72_117  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m72_180 -> m72_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_180 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_181 -> m72_125  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_181 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_182 -> m72_127  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m72_183 -> m72_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_183 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_184 -> m72_135  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_184 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m72_185 -> m72_137  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m72_186 -> m72_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m72_187 -> m72_143  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m74_17 -> m74_327  [key=0, style=solid];
m74_327 -> m74_17  [key=0, style=bold, color=blue];
m74_185 -> m74_186  [key=0, style=solid, color=green];
m74_186 -> m74_187  [key=0, style=solid, color=green];
m74_186 -> m74_128  [key=2, style=dotted, color=green];
m74_186 -> m74_188  [key=1, style=dashed, color=green, label=outerFilter];
m74_186 -> m74_193  [key=1, style=dashed, color=green, label=outerFilter];
m74_187 -> m74_188  [key=0, style=solid, color=green];
m74_187 -> m74_128  [key=2, style=dotted, color=green];
m74_187 -> m74_189  [key=1, style=dashed, color=green, label=innerFilter];
m74_187 -> m74_190  [key=1, style=dashed, color=green, label=innerFilter];
m74_188 -> m74_189  [key=0, style=solid, color=green];
m74_188 -> m74_62  [key=2, style=dotted, color=green];
m74_193 -> m74_194  [key=0, style=solid, color=green];
m74_193 -> m74_36  [key=2, style=dotted, color=green];
m74_193 -> m74_201  [key=1, style=dashed, color=green, label="lambda expression"];
m74_189 -> m74_190  [key=0, style=solid, color=green];
m74_189 -> m74_62  [key=2, style=dotted, color=green];
m74_190 -> m74_191  [key=0, style=solid, color=green];
m74_190 -> m74_46  [key=2, style=dotted, color=green];
m74_190 -> m74_105  [key=2, style=dotted, color=green];
m74_190 -> m74_195  [key=1, style=dashed, color=green, label="lambda expression"];
m74_190 -> m74_198  [key=1, style=dashed, color=green, label="lambda expression"];
m74_192 -> m74_193  [key=0, style=solid, color=green];
m74_192 -> m74_35  [key=2, style=dotted, color=green];
m74_191 -> m74_192  [key=0, style=solid, color=green];
m74_191 -> m74_23  [key=2, style=dotted, color=green];
m74_194 -> m74_185  [key=0, style=bold, color=blue];
m74_164 -> m74_165  [key=0, style=solid, color=green];
m74_165 -> m74_166  [key=0, style=solid, color=green];
m74_165 -> m74_128  [key=2, style=dotted, color=green];
m74_165 -> m74_167  [key=1, style=dashed, color=green, label=filter];
m74_165 -> m74_171  [key=1, style=dashed, color=green, label=filter];
m74_166 -> m74_167  [key=0, style=solid, color=green];
m74_166 -> m74_62  [key=2, style=dotted, color=green];
m74_167 -> m74_168  [key=0, style=solid, color=green];
m74_167 -> m74_46  [key=2, style=dotted, color=green];
m74_167 -> m74_105  [key=2, style=dotted, color=green];
m74_167 -> m74_173  [key=1, style=dashed, color=green, label="lambda expression"];
m74_167 -> m74_176  [key=1, style=dashed, color=green, label="lambda expression"];
m74_171 -> m74_172  [key=0, style=solid, color=green];
m74_171 -> m74_36  [key=2, style=dotted, color=green];
m74_171 -> m74_182  [key=1, style=dashed, color=green, label="lambda expression"];
m74_168 -> m74_169  [key=0, style=solid, color=green];
m74_168 -> m74_23  [key=2, style=dotted, color=green];
m74_170 -> m74_171  [key=0, style=solid, color=green];
m74_170 -> m74_36  [key=2, style=dotted, color=green];
m74_170 -> m74_179  [key=1, style=dashed, color=green, label="lambda expression"];
m74_169 -> m74_170  [key=0, style=solid, color=green];
m74_169 -> m74_35  [key=2, style=dotted, color=green];
m74_172 -> m74_164  [key=0, style=bold, color=blue];
m74_298 -> m74_299  [key=0, style=solid];
m74_301 -> m74_62  [key=2, style=dotted];
m74_301 -> m74_302  [key=0, style=solid];
m74_302 -> m74_62  [key=2, style=dotted];
m74_302 -> m74_303  [key=0, style=solid];
m74_303 -> m74_24  [key=2, style=dotted];
m74_303 -> m74_46  [key=2, style=dotted];
m74_303 -> m74_304  [key=0, style=solid];
m74_303 -> m74_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_305 -> m74_23  [key=2, style=dotted];
m74_305 -> m74_306  [key=0, style=solid];
m74_305 -> m74_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_306 -> m74_106  [key=2, style=dotted];
m74_306 -> m74_307  [key=0, style=solid];
m74_306 -> m74_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_307 -> m74_36  [key=2, style=dotted];
m74_307 -> m74_308  [key=0, style=solid];
m74_307 -> m74_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_304 -> m74_46  [key=2, style=dotted];
m74_304 -> m74_105  [key=2, style=dotted];
m74_304 -> m74_305  [key=0, style=solid];
m74_304 -> m74_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_304 -> m74_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_299 -> m74_128  [key=2, style=dotted];
m74_299 -> m74_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m74_299 -> m74_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m74_299 -> m74_300  [key=0, style=solid];
m74_300 -> m74_128  [key=2, style=dotted];
m74_300 -> m74_301  [key=0, style=solid];
m74_300 -> m74_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m74_300 -> m74_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m74_308 -> m74_298  [key=0, style=bold, color=blue];
m74_97 -> m74_98  [key=0, style=solid, color=green];
m74_98 -> m74_99  [key=0, style=solid, color=green];
m74_98 -> m74_46  [key=2, style=dotted, color=green];
m74_98 -> m74_24  [key=2, style=dotted, color=green];
m74_98 -> m74_107  [key=1, style=dashed, color=green, label="lambda expression"];
m74_99 -> m74_100  [key=0, style=solid, color=green];
m74_99 -> m74_61  [key=2, style=dotted, color=green];
m74_99 -> m74_101  [key=1, style=dashed, color=green, label=filter];
m74_100 -> m74_101  [key=0, style=solid, color=green];
m74_100 -> m74_46  [key=2, style=dotted, color=green];
m74_100 -> m74_105  [key=2, style=dotted, color=green];
m74_100 -> m74_110  [key=1, style=dashed, color=green, label="lambda expression"];
m74_100 -> m74_113  [key=1, style=dashed, color=green, label="lambda expression"];
m74_101 -> m74_102  [key=0, style=solid, color=green];
m74_101 -> m74_62  [key=2, style=dotted, color=green];
m74_102 -> m74_103  [key=0, style=solid, color=green];
m74_102 -> m74_23  [key=2, style=dotted, color=green];
m74_102 -> m74_117  [key=1, style=dashed, color=green, label=process];
m74_103 -> m74_104  [key=0, style=solid, color=green];
m74_103 -> m74_106  [key=2, style=dotted, color=green];
m74_103 -> m74_116  [key=1, style=dashed, color=green, label="lambda expression"];
m74_104 -> m74_97  [key=0, style=bold, color=blue];
m74_23 -> m74_328  [key=0, style=solid];
m74_328 -> m74_329  [key=0, style=solid];
m74_328 -> m74_330  [key=2, style=dotted];
m74_329 -> m74_23  [key=0, style=bold, color=blue];
m74_140 -> m74_141  [key=0, style=solid, color=green];
m74_141 -> m74_142  [key=0, style=solid, color=green];
m74_141 -> m74_128  [key=2, style=dotted, color=green];
m74_141 -> m74_143  [key=1, style=dashed, color=green, label=outerFilter];
m74_141 -> m74_145  [key=1, style=dashed, color=green, label=outerFilter];
m74_141 -> m74_148  [key=1, style=dashed, color=green, label=outerFilter];
m74_142 -> m74_143  [key=0, style=solid, color=green];
m74_142 -> m74_128  [key=2, style=dotted, color=green];
m74_142 -> m74_144  [key=1, style=dashed, color=green, label=innerFilter];
m74_142 -> m74_146  [key=1, style=dashed, color=green, label=innerFilter];
m74_142 -> m74_147  [key=1, style=dashed, color=green, label=innerFilter];
m74_143 -> m74_144  [key=0, style=solid, color=green];
m74_143 -> m74_62  [key=2, style=dotted, color=green];
m74_145 -> m74_146  [key=0, style=solid, color=green];
m74_145 -> m74_46  [key=2, style=dotted, color=green];
m74_145 -> m74_84  [key=2, style=dotted, color=green];
m74_145 -> m74_152  [key=1, style=dashed, color=green, label="lambda expression"];
m74_148 -> m74_149  [key=0, style=solid, color=green];
m74_148 -> m74_46  [key=2, style=dotted, color=green];
m74_148 -> m74_84  [key=2, style=dotted, color=green];
m74_148 -> m74_161  [key=1, style=dashed, color=green, label="lambda expression"];
m74_144 -> m74_145  [key=0, style=solid, color=green];
m74_144 -> m74_62  [key=2, style=dotted, color=green];
m74_146 -> m74_147  [key=0, style=solid, color=green];
m74_146 -> m74_46  [key=2, style=dotted, color=green];
m74_146 -> m74_84  [key=2, style=dotted, color=green];
m74_146 -> m74_155  [key=1, style=dashed, color=green, label="lambda expression"];
m74_147 -> m74_148  [key=0, style=solid, color=green];
m74_147 -> m74_46  [key=2, style=dotted, color=green];
m74_147 -> m74_84  [key=2, style=dotted, color=green];
m74_147 -> m74_158  [key=1, style=dashed, color=green, label="lambda expression"];
m74_149 -> m74_150  [key=0, style=solid, color=green];
m74_149 -> m74_23  [key=2, style=dotted, color=green];
m74_149 -> m74_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m74_150 -> m74_151  [key=0, style=solid, color=green];
m74_150 -> m74_35  [key=2, style=dotted, color=green];
m74_151 -> m74_140  [key=0, style=bold, color=blue];
m74_274 -> m74_275  [key=0, style=solid];
m74_276 -> m74_62  [key=2, style=dotted];
m74_276 -> m74_277  [key=0, style=solid];
m74_278 -> m74_46  [key=2, style=dotted];
m74_278 -> m74_238  [key=2, style=dotted];
m74_278 -> m74_279  [key=0, style=solid];
m74_278 -> m74_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_280 -> m74_23  [key=2, style=dotted];
m74_280 -> m74_281  [key=0, style=solid];
m74_280 -> m74_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_281 -> m74_106  [key=2, style=dotted];
m74_281 -> m74_282  [key=0, style=solid];
m74_281 -> m74_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_279 -> m74_46  [key=2, style=dotted];
m74_279 -> m74_105  [key=2, style=dotted];
m74_279 -> m74_280  [key=0, style=solid];
m74_279 -> m74_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_279 -> m74_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_275 -> m74_128  [key=2, style=dotted];
m74_275 -> m74_276  [key=0, style=solid];
m74_275 -> m74_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m74_277 -> m74_237  [key=2, style=dotted];
m74_277 -> m74_278  [key=0, style=solid];
m74_277 -> m74_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_277 -> m74_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_277 -> m74_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_282 -> m74_274  [key=0, style=bold, color=blue];
m74_53 -> m74_54  [key=0, style=solid, color=green];
m74_54 -> m74_55  [key=0, style=solid, color=green];
m74_54 -> m74_61  [key=2, style=dotted, color=green];
m74_54 -> m74_59  [key=1, style=dashed, color=green, label=filter];
m74_55 -> m74_56  [key=0, style=solid, color=green];
m74_55 -> m74_62  [key=2, style=dotted, color=green];
m74_59 -> m74_60  [key=0, style=solid, color=green];
m74_59 -> m74_36  [key=2, style=dotted, color=green];
m74_59 -> m74_69  [key=1, style=dashed, color=green, label="lambda expression"];
m74_56 -> m74_57  [key=0, style=solid, color=green];
m74_56 -> m74_46  [key=2, style=dotted, color=green];
m74_56 -> m74_24  [key=2, style=dotted, color=green];
m74_56 -> m74_63  [key=1, style=dashed, color=green, label="lambda expression"];
m74_58 -> m74_59  [key=0, style=solid, color=green];
m74_58 -> m74_24  [key=2, style=dotted, color=green];
m74_58 -> m74_66  [key=1, style=dashed, color=green, label="lambda expression"];
m74_57 -> m74_58  [key=0, style=solid, color=green];
m74_57 -> m74_23  [key=2, style=dotted, color=green];
m74_57 -> m74_67  [key=1, style=dashed, color=green, label=process];
m74_60 -> m74_53  [key=0, style=bold, color=blue];
m74_228 -> m74_229  [key=0, style=solid, color=green];
m74_229 -> m74_230  [key=0, style=solid, color=green];
m74_229 -> m74_128  [key=2, style=dotted, color=green];
m74_229 -> m74_235  [key=1, style=dashed, color=green, label=filter];
m74_230 -> m74_231  [key=0, style=solid, color=green];
m74_230 -> m74_62  [key=2, style=dotted, color=green];
m74_235 -> m74_36  [key=2, style=dotted];
m74_235 -> m74_236  [key=0, style=solid];
m74_235 -> m74_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_231 -> m74_232  [key=0, style=solid, color=green];
m74_231 -> m74_237  [key=2, style=dotted, color=green];
m74_231 -> m74_235  [key=1, style=dashed, color=green, label=exception];
m74_231 -> m74_246  [key=1, style=dashed, color=green, label=exception];
m74_231 -> m74_249  [key=1, style=dashed, color=green, label=exception];
m74_232 -> m74_233  [key=0, style=solid, color=green];
m74_232 -> m74_46  [key=2, style=dotted, color=green];
m74_232 -> m74_238  [key=2, style=dotted, color=green];
m74_232 -> m74_239  [key=1, style=dashed, color=green, label="lambda expression"];
m74_233 -> m74_234  [key=0, style=solid, color=green];
m74_233 -> m74_23  [key=2, style=dotted, color=green];
m74_233 -> m74_243  [key=1, style=dashed, color=green, label=process];
m74_234 -> m74_24  [key=2, style=dotted];
m74_234 -> m74_235  [key=0, style=solid];
m74_234 -> m74_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_236 -> m74_228  [key=0, style=bold, color=blue];
m74_251 -> m74_252  [key=0, style=solid];
m74_254 -> m74_62  [key=2, style=dotted];
m74_254 -> m74_255  [key=0, style=solid];
m74_255 -> m74_62  [key=2, style=dotted];
m74_255 -> m74_256  [key=0, style=solid];
m74_257 -> m74_46  [key=2, style=dotted];
m74_257 -> m74_238  [key=2, style=dotted];
m74_257 -> m74_258  [key=0, style=solid];
m74_257 -> m74_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_258 -> m74_23  [key=2, style=dotted];
m74_258 -> m74_259  [key=0, style=solid];
m74_258 -> m74_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_259 -> m74_24  [key=2, style=dotted];
m74_259 -> m74_260  [key=0, style=solid];
m74_259 -> m74_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_260 -> m74_36  [key=2, style=dotted];
m74_260 -> m74_261  [key=0, style=solid];
m74_260 -> m74_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_252 -> m74_128  [key=2, style=dotted];
m74_252 -> m74_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m74_252 -> m74_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m74_252 -> m74_253  [key=0, style=solid];
m74_253 -> m74_128  [key=2, style=dotted];
m74_253 -> m74_254  [key=0, style=solid];
m74_253 -> m74_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m74_256 -> m74_237  [key=2, style=dotted];
m74_256 -> m74_257  [key=0, style=solid];
m74_256 -> m74_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_256 -> m74_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_256 -> m74_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_261 -> m74_251  [key=0, style=bold, color=blue];
m74_207 -> m74_208  [key=0, style=solid, color=green];
m74_214 -> m74_215  [key=0, style=solid, color=green];
m74_214 -> m74_36  [key=2, style=dotted, color=green];
m74_214 -> m74_225  [key=1, style=dashed, color=green, label="lambda expression"];
m74_208 -> m74_209  [key=0, style=solid, color=green];
m74_208 -> m74_128  [key=2, style=dotted, color=green];
m74_208 -> m74_210  [key=1, style=dashed, color=green, label=filter];
m74_208 -> m74_214  [key=1, style=dashed, color=green, label=filter];
m74_209 -> m74_210  [key=0, style=solid, color=green];
m74_209 -> m74_62  [key=2, style=dotted, color=green];
m74_210 -> m74_211  [key=0, style=solid, color=green];
m74_210 -> m74_46  [key=2, style=dotted, color=green];
m74_210 -> m74_24  [key=2, style=dotted, color=green];
m74_210 -> m74_216  [key=1, style=dashed, color=green, label="lambda expression"];
m74_211 -> m74_212  [key=0, style=solid, color=green];
m74_211 -> m74_23  [key=2, style=dotted, color=green];
m74_211 -> m74_220  [key=1, style=dashed, color=green, label=process];
m74_213 -> m74_214  [key=0, style=solid, color=green];
m74_213 -> m74_36  [key=2, style=dotted, color=green];
m74_213 -> m74_222  [key=1, style=dashed, color=green, label="lambda expression"];
m74_212 -> m74_213  [key=0, style=solid, color=green];
m74_212 -> m74_24  [key=2, style=dotted, color=green];
m74_212 -> m74_219  [key=1, style=dashed, color=green, label="lambda expression"];
m74_215 -> m74_207  [key=0, style=bold, color=blue];
m74_0 -> m74_1  [key=0, style=solid, color=green];
m74_1 -> m74_1  [key=3, color=green, style=bold, label="Field variable string NewState"];
m74_1 -> m74_2  [key=0, style=solid, color=green];
m74_1 -> m74_8  [key=2, style=dotted, color=green];
m74_1 -> m74_6  [key=1, style=dashed, color=green, label=connection];
m74_2 -> m74_3  [key=0, style=solid, color=green];
m74_2 -> m74_9  [key=2, style=dotted, color=green];
m74_2 -> m74_14  [key=1, style=dashed, color=green, label="lambda expression"];
m74_2 -> m74_6  [key=1, style=dashed, color=green, label=job];
m74_6 -> m74_7  [key=0, style=solid, color=green];
m74_6 -> m74_13  [key=2, style=dotted, color=green];
m74_3 -> m74_6  [key=1, style=dashed, color=green, label=state];
m74_3 -> m74_4  [key=0, style=solid, color=green];
m74_3 -> m74_10  [key=2, style=dotted, color=green];
m74_4 -> m74_6  [key=1, style=dashed, color=green, label=stateMachineFactory];
m74_4 -> m74_5  [key=0, style=solid, color=green];
m74_4 -> m74_11  [key=2, style=dotted, color=green];
m74_5 -> m74_6  [key=0, style=solid, color=green];
m74_5 -> m74_12  [key=2, style=dotted, color=green];
m74_7 -> m74_0  [key=0, style=bold, color=blue];
m74_73 -> m74_74  [key=0, style=solid, color=green];
m74_74 -> m74_75  [key=0, style=solid, color=green];
m74_74 -> m74_61  [key=2, style=dotted, color=green];
m74_74 -> m74_77  [key=1, style=dashed, color=green, label=filter1];
m74_74 -> m74_78  [key=1, style=dashed, color=green, label=filter1];
m74_75 -> m74_76  [key=0, style=solid, color=green];
m74_75 -> m74_61  [key=2, style=dotted, color=green];
m74_75 -> m74_79  [key=1, style=dashed, color=green, label=filter2];
m74_77 -> m74_78  [key=0, style=solid, color=green];
m74_77 -> m74_46  [key=2, style=dotted, color=green];
m74_77 -> m74_84  [key=2, style=dotted, color=green];
m74_77 -> m74_88  [key=1, style=dashed, color=green, label="lambda expression"];
m74_78 -> m74_79  [key=0, style=solid, color=green];
m74_78 -> m74_62  [key=2, style=dotted, color=green];
m74_78 -> m74_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m74_76 -> m74_77  [key=0, style=solid, color=green];
m74_76 -> m74_46  [key=2, style=dotted, color=green];
m74_76 -> m74_84  [key=2, style=dotted, color=green];
m74_76 -> m74_85  [key=1, style=dashed, color=green, label="lambda expression"];
m74_79 -> m74_80  [key=0, style=solid, color=green];
m74_79 -> m74_62  [key=2, style=dotted, color=green];
m74_80 -> m74_81  [key=0, style=solid, color=green];
m74_80 -> m74_46  [key=2, style=dotted, color=green];
m74_80 -> m74_24  [key=2, style=dotted, color=green];
m74_80 -> m74_91  [key=1, style=dashed, color=green, label="lambda expression"];
m74_81 -> m74_82  [key=0, style=solid, color=green];
m74_81 -> m74_23  [key=2, style=dotted, color=green];
m74_81 -> m74_95  [key=1, style=dashed, color=green, label=process];
m74_82 -> m74_83  [key=0, style=solid, color=green];
m74_82 -> m74_24  [key=2, style=dotted, color=green];
m74_82 -> m74_94  [key=1, style=dashed, color=green, label="lambda expression"];
m74_83 -> m74_73  [key=0, style=bold, color=blue];
m74_315 -> m74_316  [key=0, style=solid];
m74_14 -> m74_15  [key=0, style=solid, color=green];
m74_15 -> m74_16  [key=0, style=solid, color=green];
m74_15 -> m74_17  [key=2, style=dotted, color=green];
m74_16 -> m74_14  [key=0, style=bold, color=blue];
m74_27 -> m74_28  [key=0, style=solid, color=green];
m74_27 -> m74_29  [key=2, style=dotted, color=green];
m74_26 -> m74_27  [key=0, style=solid, color=green];
m74_28 -> m74_26  [key=0, style=bold, color=blue];
m74_37 -> m74_38  [key=0, style=solid, color=green];
m74_38 -> m74_39  [key=0, style=solid, color=green];
m74_38 -> m74_40  [key=2, style=dotted, color=green];
m74_39 -> m74_37  [key=0, style=bold, color=blue];
m74_47 -> m74_48  [key=0, style=solid, color=green];
m74_51 -> m74_52  [key=0, style=solid, color=green];
m74_51 -> m74_35  [key=2, style=dotted, color=green];
m74_50 -> m74_51  [key=0, style=solid, color=green];
m74_52 -> m74_50  [key=0, style=bold, color=blue];
m74_48 -> m74_49  [key=0, style=solid, color=green];
m74_48 -> m74_40  [key=2, style=dotted, color=green];
m74_49 -> m74_47  [key=0, style=bold, color=blue];
m74_69 -> m74_70  [key=0, style=solid, color=green];
m74_63 -> m74_64  [key=0, style=solid, color=green];
m74_67 -> m74_68  [key=0, style=solid, color=green];
m74_67 -> m74_35  [key=2, style=dotted, color=green];
m74_66 -> m74_67  [key=0, style=solid, color=green];
m74_68 -> m74_66  [key=0, style=bold, color=blue];
m74_64 -> m74_65  [key=0, style=solid, color=green];
m74_64 -> m74_40  [key=2, style=dotted, color=green];
m74_65 -> m74_63  [key=0, style=bold, color=blue];
m74_70 -> m74_71  [key=0, style=solid, color=green];
m74_70 -> m74_24  [key=2, style=dotted, color=green];
m74_70 -> m74_72  [key=2, style=dotted, color=green];
m74_71 -> m74_69  [key=0, style=bold, color=blue];
m74_88 -> m74_89  [key=0, style=solid, color=green];
m74_85 -> m74_86  [key=0, style=solid, color=green];
m74_91 -> m74_92  [key=0, style=solid, color=green];
m74_95 -> m74_96  [key=0, style=solid, color=green];
m74_95 -> m74_35  [key=2, style=dotted, color=green];
m74_94 -> m74_95  [key=0, style=solid, color=green];
m74_96 -> m74_94  [key=0, style=bold, color=blue];
m74_86 -> m74_87  [key=0, style=solid, color=green];
m74_86 -> m74_24  [key=2, style=dotted, color=green];
m74_86 -> m74_72  [key=2, style=dotted, color=green];
m74_87 -> m74_85  [key=0, style=bold, color=blue];
m74_89 -> m74_90  [key=0, style=solid, color=green];
m74_89 -> m74_24  [key=2, style=dotted, color=green];
m74_89 -> m74_72  [key=2, style=dotted, color=green];
m74_90 -> m74_88  [key=0, style=bold, color=blue];
m74_92 -> m74_93  [key=0, style=solid, color=green];
m74_92 -> m74_40  [key=2, style=dotted, color=green];
m74_93 -> m74_91  [key=0, style=bold, color=blue];
m74_107 -> m74_108  [key=0, style=solid, color=green];
m74_110 -> m74_111  [key=0, style=solid, color=green];
m74_113 -> m74_114  [key=0, style=solid, color=green];
m74_117 -> m74_118  [key=0, style=solid, color=green];
m74_117 -> m74_35  [key=2, style=dotted, color=green];
m74_116 -> m74_117  [key=0, style=solid, color=green];
m74_118 -> m74_116  [key=0, style=bold, color=blue];
m74_108 -> m74_109  [key=0, style=solid, color=green];
m74_108 -> m74_40  [key=2, style=dotted, color=green];
m74_109 -> m74_107  [key=0, style=bold, color=blue];
m74_111 -> m74_112  [key=0, style=solid, color=green];
m74_111 -> m74_24  [key=2, style=dotted, color=green];
m74_111 -> m74_72  [key=2, style=dotted, color=green];
m74_112 -> m74_110  [key=0, style=bold, color=blue];
m74_114 -> m74_115  [key=0, style=solid, color=green];
m74_115 -> m74_113  [key=0, style=bold, color=blue];
m74_129 -> m74_130  [key=0, style=solid, color=green];
m74_136 -> m74_137  [key=0, style=solid, color=green];
m74_133 -> m74_134  [key=0, style=solid, color=green];
m74_130 -> m74_131  [key=0, style=solid, color=green];
m74_130 -> m74_24  [key=2, style=dotted, color=green];
m74_130 -> m74_132  [key=2, style=dotted, color=green];
m74_131 -> m74_129  [key=0, style=bold, color=blue];
m74_134 -> m74_135  [key=0, style=solid, color=green];
m74_134 -> m74_40  [key=2, style=dotted, color=green];
m74_135 -> m74_133  [key=0, style=bold, color=blue];
m74_137 -> m74_138  [key=0, style=solid, color=green];
m74_137 -> m74_24  [key=2, style=dotted, color=green];
m74_137 -> m74_139  [key=2, style=dotted, color=green];
m74_138 -> m74_136  [key=0, style=bold, color=blue];
m74_152 -> m74_153  [key=0, style=solid, color=green];
m74_161 -> m74_162  [key=0, style=solid, color=green];
m74_155 -> m74_156  [key=0, style=solid, color=green];
m74_158 -> m74_159  [key=0, style=solid, color=green];
m74_153 -> m74_154  [key=0, style=solid, color=green];
m74_153 -> m74_24  [key=2, style=dotted, color=green];
m74_153 -> m74_132  [key=2, style=dotted, color=green];
m74_154 -> m74_152  [key=0, style=bold, color=blue];
m74_156 -> m74_157  [key=0, style=solid, color=green];
m74_156 -> m74_24  [key=2, style=dotted, color=green];
m74_156 -> m74_132  [key=2, style=dotted, color=green];
m74_157 -> m74_155  [key=0, style=bold, color=blue];
m74_159 -> m74_160  [key=0, style=solid, color=green];
m74_159 -> m74_24  [key=2, style=dotted, color=green];
m74_159 -> m74_139  [key=2, style=dotted, color=green];
m74_160 -> m74_158  [key=0, style=bold, color=blue];
m74_162 -> m74_163  [key=0, style=solid, color=green];
m74_162 -> m74_24  [key=2, style=dotted, color=green];
m74_162 -> m74_139  [key=2, style=dotted, color=green];
m74_163 -> m74_161  [key=0, style=bold, color=blue];
m74_173 -> m74_174  [key=0, style=solid, color=green];
m74_176 -> m74_177  [key=0, style=solid, color=green];
m74_182 -> m74_183  [key=0, style=solid, color=green];
m74_179 -> m74_180  [key=0, style=solid, color=green];
m74_174 -> m74_175  [key=0, style=solid, color=green];
m74_174 -> m74_24  [key=2, style=dotted, color=green];
m74_174 -> m74_132  [key=2, style=dotted, color=green];
m74_175 -> m74_173  [key=0, style=bold, color=blue];
m74_177 -> m74_178  [key=0, style=solid, color=green];
m74_178 -> m74_176  [key=0, style=bold, color=blue];
m74_180 -> m74_181  [key=0, style=solid, color=green];
m74_180 -> m74_40  [key=2, style=dotted, color=green];
m74_181 -> m74_179  [key=0, style=bold, color=blue];
m74_183 -> m74_184  [key=0, style=solid, color=green];
m74_183 -> m74_24  [key=2, style=dotted, color=green];
m74_183 -> m74_139  [key=2, style=dotted, color=green];
m74_184 -> m74_182  [key=0, style=bold, color=blue];
m74_201 -> m74_202  [key=0, style=solid, color=green];
m74_195 -> m74_196  [key=0, style=solid, color=green];
m74_198 -> m74_199  [key=0, style=solid, color=green];
m74_196 -> m74_197  [key=0, style=solid, color=green];
m74_196 -> m74_24  [key=2, style=dotted, color=green];
m74_196 -> m74_132  [key=2, style=dotted, color=green];
m74_197 -> m74_195  [key=0, style=bold, color=blue];
m74_199 -> m74_200  [key=0, style=solid, color=green];
m74_200 -> m74_198  [key=0, style=bold, color=blue];
m74_202 -> m74_203  [key=0, style=solid, color=green];
m74_202 -> m74_24  [key=2, style=dotted, color=green];
m74_202 -> m74_139  [key=2, style=dotted, color=green];
m74_202 -> m74_204  [key=1, style=dashed, color=green, label="lambda expression"];
m74_203 -> m74_201  [key=0, style=bold, color=blue];
m74_204 -> m74_205  [key=0, style=solid, color=green];
m74_205 -> m74_206  [key=0, style=solid, color=green];
m74_206 -> m74_204  [key=0, style=bold, color=blue];
m74_216 -> m74_217  [key=0, style=solid, color=green];
m74_225 -> m74_226  [key=0, style=solid, color=green];
m74_220 -> m74_221  [key=0, style=solid, color=green];
m74_220 -> m74_35  [key=2, style=dotted, color=green];
m74_219 -> m74_220  [key=0, style=solid, color=green];
m74_221 -> m74_219  [key=0, style=bold, color=blue];
m74_222 -> m74_223  [key=0, style=solid, color=green];
m74_217 -> m74_218  [key=0, style=solid, color=green];
m74_217 -> m74_24  [key=2, style=dotted, color=green];
m74_217 -> m74_132  [key=2, style=dotted, color=green];
m74_218 -> m74_216  [key=0, style=bold, color=blue];
m74_223 -> m74_224  [key=0, style=solid, color=green];
m74_223 -> m74_40  [key=2, style=dotted, color=green];
m74_224 -> m74_222  [key=0, style=bold, color=blue];
m74_226 -> m74_227  [key=0, style=solid, color=green];
m74_226 -> m74_24  [key=2, style=dotted, color=green];
m74_226 -> m74_139  [key=2, style=dotted, color=green];
m74_227 -> m74_225  [key=0, style=bold, color=blue];
m74_246 -> m74_24  [key=2, style=dotted];
m74_246 -> m74_139  [key=2, style=dotted];
m74_246 -> m74_247  [key=0, style=solid];
m74_246 -> m74_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_249 -> m74_250  [key=0, style=solid];
m74_239 -> m74_240  [key=0, style=solid, color=green];
m74_243 -> m74_35  [key=2, style=dotted];
m74_243 -> m74_244  [key=0, style=solid];
m74_240 -> m74_241  [key=0, style=solid, color=green];
m74_240 -> m74_40  [key=2, style=dotted, color=green];
m74_241 -> m74_239  [key=0, style=bold, color=blue];
m74_266 -> m74_35  [key=2, style=dotted];
m74_266 -> m74_267  [key=0, style=solid];
m74_296 -> m74_35  [key=2, style=dotted];
m74_296 -> m74_297  [key=0, style=solid];
m74_319 -> m74_35  [key=2, style=dotted];
m74_319 -> m74_320  [key=0, style=solid];
m74_269 -> m74_24  [key=2, style=dotted];
m74_269 -> m74_139  [key=2, style=dotted];
m74_269 -> m74_270  [key=0, style=solid];
m74_269 -> m74_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_287 -> m74_24  [key=2, style=dotted];
m74_287 -> m74_139  [key=2, style=dotted];
m74_287 -> m74_288  [key=0, style=solid];
m74_287 -> m74_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_313 -> m74_24  [key=2, style=dotted];
m74_313 -> m74_139  [key=2, style=dotted];
m74_313 -> m74_314  [key=0, style=solid];
m74_322 -> m74_24  [key=2, style=dotted];
m74_322 -> m74_139  [key=2, style=dotted];
m74_322 -> m74_323  [key=0, style=solid];
m74_322 -> m74_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m74_263 -> m74_40  [key=2, style=dotted];
m74_263 -> m74_264  [key=0, style=solid];
m74_284 -> m74_40  [key=2, style=dotted];
m74_284 -> m74_285  [key=0, style=solid];
m74_310 -> m74_40  [key=2, style=dotted];
m74_310 -> m74_311  [key=0, style=solid];
m74_245 -> m74_246  [key=0, style=solid];
m74_247 -> m74_245  [key=0, style=bold, color=blue];
m74_248 -> m74_249  [key=0, style=solid];
m74_250 -> m74_248  [key=0, style=bold, color=blue];
m74_242 -> m74_243  [key=0, style=solid];
m74_244 -> m74_242  [key=0, style=bold, color=blue];
m74_262 -> m74_263  [key=0, style=solid];
m74_265 -> m74_266  [key=0, style=solid];
m74_267 -> m74_265  [key=0, style=bold, color=blue];
m74_283 -> m74_284  [key=0, style=solid];
m74_295 -> m74_296  [key=0, style=solid];
m74_297 -> m74_295  [key=0, style=bold, color=blue];
m74_309 -> m74_310  [key=0, style=solid];
m74_318 -> m74_319  [key=0, style=solid];
m74_320 -> m74_318  [key=0, style=bold, color=blue];
m74_268 -> m74_269  [key=0, style=solid];
m74_270 -> m74_268  [key=0, style=bold, color=blue];
m74_271 -> m74_272  [key=0, style=solid];
m74_286 -> m74_287  [key=0, style=solid];
m74_288 -> m74_286  [key=0, style=bold, color=blue];
m74_289 -> m74_290  [key=0, style=solid];
m74_312 -> m74_313  [key=0, style=solid];
m74_314 -> m74_312  [key=0, style=bold, color=blue];
m74_321 -> m74_322  [key=0, style=solid];
m74_323 -> m74_321  [key=0, style=bold, color=blue];
m74_324 -> m74_325  [key=0, style=solid];
m74_264 -> m74_262  [key=0, style=bold, color=blue];
m74_285 -> m74_283  [key=0, style=bold, color=blue];
m74_311 -> m74_309  [key=0, style=bold, color=blue];
m74_292 -> m74_293  [key=0, style=solid];
m74_272 -> m74_273  [key=0, style=solid];
m74_290 -> m74_291  [key=0, style=solid];
m74_273 -> m74_271  [key=0, style=bold, color=blue];
m74_291 -> m74_289  [key=0, style=bold, color=blue];
m74_326 -> m74_324  [key=0, style=bold, color=blue];
m74_325 -> m74_326  [key=0, style=solid];
m74_294 -> m74_292  [key=0, style=bold, color=blue];
m74_293 -> m74_294  [key=0, style=solid];
m74_316 -> m74_317  [key=0, style=solid];
m74_317 -> m74_315  [key=0, style=bold, color=blue];
m74_30 -> m74_31  [key=0, style=solid, color=green];
m74_31 -> m74_32  [key=0, style=solid, color=green];
m74_31 -> m74_23  [key=2, style=dotted, color=green];
m74_32 -> m74_33  [key=0, style=solid, color=green];
m74_32 -> m74_35  [key=2, style=dotted, color=green];
m74_33 -> m74_34  [key=0, style=solid, color=green];
m74_33 -> m74_36  [key=2, style=dotted, color=green];
m74_33 -> m74_37  [key=1, style=dashed, color=green, label="lambda expression"];
m74_34 -> m74_30  [key=0, style=bold, color=blue];
m74_41 -> m74_42  [key=0, style=solid, color=green];
m74_42 -> m74_43  [key=0, style=solid, color=green];
m74_42 -> m74_46  [key=2, style=dotted, color=green];
m74_42 -> m74_24  [key=2, style=dotted, color=green];
m74_42 -> m74_47  [key=1, style=dashed, color=green, label="lambda expression"];
m74_43 -> m74_44  [key=0, style=solid, color=green];
m74_43 -> m74_23  [key=2, style=dotted, color=green];
m74_43 -> m74_51  [key=1, style=dashed, color=green, label=process];
m74_44 -> m74_45  [key=0, style=solid, color=green];
m74_44 -> m74_24  [key=2, style=dotted, color=green];
m74_44 -> m74_50  [key=1, style=dashed, color=green, label="lambda expression"];
m74_44 -> m74_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m74_45 -> m74_41  [key=0, style=bold, color=blue];
m74_18 -> m74_19  [key=0, style=solid, color=green];
m74_19 -> m74_20  [key=0, style=solid, color=green];
m74_19 -> m74_23  [key=2, style=dotted, color=green];
m74_19 -> m74_27  [key=1, style=dashed, color=green, label=process];
m74_20 -> m74_21  [key=0, style=solid, color=green];
m74_20 -> m74_24  [key=2, style=dotted, color=green];
m74_20 -> m74_26  [key=1, style=dashed, color=green, label="lambda expression"];
m74_21 -> m74_22  [key=0, style=solid, color=green];
m74_21 -> n9  [key=2, style=dotted, color=green];
m74_22 -> m74_18  [key=0, style=bold, color=blue];
m74_119 -> m74_120  [key=0, style=solid, color=green];
m74_120 -> m74_121  [key=0, style=solid, color=green];
m74_120 -> m74_128  [key=2, style=dotted, color=green];
m74_120 -> m74_122  [key=1, style=dashed, color=green, label=filter];
m74_120 -> m74_124  [key=1, style=dashed, color=green, label=filter];
m74_121 -> m74_122  [key=0, style=solid, color=green];
m74_121 -> m74_62  [key=2, style=dotted, color=green];
m74_122 -> m74_123  [key=0, style=solid, color=green];
m74_122 -> m74_46  [key=2, style=dotted, color=green];
m74_122 -> m74_84  [key=2, style=dotted, color=green];
m74_122 -> m74_129  [key=1, style=dashed, color=green, label="lambda expression"];
m74_122 -> m74_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m74_124 -> m74_125  [key=0, style=solid, color=green];
m74_124 -> m74_46  [key=2, style=dotted, color=green];
m74_124 -> m74_84  [key=2, style=dotted, color=green];
m74_124 -> m74_136  [key=1, style=dashed, color=green, label="lambda expression"];
m74_123 -> m74_124  [key=0, style=solid, color=green];
m74_123 -> m74_46  [key=2, style=dotted, color=green];
m74_123 -> m74_84  [key=2, style=dotted, color=green];
m74_123 -> m74_133  [key=1, style=dashed, color=green, label="lambda expression"];
m74_125 -> m74_126  [key=0, style=solid, color=green];
m74_125 -> m74_23  [key=2, style=dotted, color=green];
m74_126 -> m74_127  [key=0, style=solid, color=green];
m74_126 -> m74_35  [key=2, style=dotted, color=green];
m74_127 -> m74_119  [key=0, style=bold, color=blue];
m74_331 -> m74_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_6  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_15  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_19  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_31  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_32  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_33  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_42  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_43  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_44  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_51  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_55  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_56  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_57  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_58  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_67  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_78  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_79  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_80  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_81  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_82  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_95  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_98  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_101  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_102  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_103  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_117  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_121  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_123  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_125  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_126  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_143  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_144  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_149  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_150  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_166  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_168  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_169  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_170  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_188  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_189  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_191  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_192  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_209  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_211  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_212  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_220  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_213  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_230  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_232  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_233  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_305  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_331 -> m74_328  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m74_332 -> m74_27  [key=1, style=dashed, color=green, label=process];
m74_333 -> m74_51  [key=1, style=dashed, color=green, label=process];
m74_334 -> m74_67  [key=1, style=dashed, color=green, label=process];
m74_335 -> m74_95  [key=1, style=dashed, color=green, label=process];
m74_336 -> m74_117  [key=1, style=dashed, color=green, label=process];
m74_337 -> m74_220  [key=1, style=dashed, color=green, label=process];
m74_339 -> m74_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_339 -> m74_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_338 -> m74_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_340 -> m74_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_343 -> m74_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_344 -> m74_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m74_341 -> m74_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_341 -> m74_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_342 -> m74_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m74_342 -> m74_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m75_15 -> m75_16  [key=0, style=solid];
m75_16 -> m75_17  [key=0, style=solid];
m75_16 -> m75_18  [key=2, style=dotted];
m75_16 -> m75_19  [key=2, style=dotted];
m75_17 -> m75_15  [key=0, style=bold, color=blue];
m75_10 -> m75_11  [key=0, style=solid];
m75_11 -> m75_12  [key=0, style=solid];
m75_11 -> m75_13  [key=2, style=dotted];
m75_11 -> m75_14  [key=2, style=dotted];
m75_12 -> m75_10  [key=0, style=bold, color=blue];
m75_0 -> m75_1  [key=0, style=solid];
m75_0 -> m75_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m75_0 -> m75_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m75_0 -> m75_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m75_0 -> m75_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m75_1 -> m75_2  [key=0, style=solid];
m75_1 -> m75_3  [key=0, style=solid];
m75_3 -> m75_4  [key=0, style=solid];
m75_3 -> m75_5  [key=0, style=solid];
m75_5 -> m75_6  [key=0, style=solid];
m75_6 -> m75_7  [key=0, style=solid];
m75_7 -> m75_8  [key=0, style=solid];
m75_2 -> m75_8  [key=0, style=solid];
m75_2 -> d24  [key=2, style=dotted];
m75_4 -> m75_8  [key=0, style=solid];
m75_4 -> d24  [key=2, style=dotted];
m75_8 -> m75_0  [key=0, style=bold, color=blue];
m75_20 -> m75_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m75_20 -> m75_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m75_20 -> m75_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m75_20 -> m75_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m75_20 -> m75_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m77_2 -> m77_3  [key=0, style=solid];
m77_2 -> m77_4  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m77_3 -> m77_4  [key=0, style=solid, color=red];
m77_4 -> m77_5  [key=0, style=solid, color=red];
m77_5 -> m77_2  [key=0, style=bold, color=blue];
m77_0 -> m77_1  [key=0, style=solid];
m77_1 -> m77_0  [key=0, style=bold, color=blue];
m77_6 -> m77_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateContext"];
m77_6 -> m77_4  [key=1, style=dashed, color=red, label="HangFire.Common.States.StateContext"];
m78_0 -> m78_1  [key=0, style=solid, color=green];
m78_0 -> m78_2  [key=1, style=dashed, color=green, label="System.Exception"];
m78_1 -> m78_2  [key=0, style=solid, color=green];
m78_2 -> m78_3  [key=0, style=solid, color=green];
m78_3 -> m78_0  [key=0, style=bold, color=blue];
m78_4 -> m78_1  [key=1, style=dashed, color=green, label="HangFire.Filters.CreatedContext"];
m78_4 -> m78_2  [key=1, style=dashed, color=green, label="HangFire.Filters.CreatedContext"];
m79_7 -> m79_8  [key=0, style=solid, color=green];
m79_8 -> m79_9  [key=0, style=solid, color=green];
m79_8 -> m79_5  [key=2, style=dotted, color=green];
m79_9 -> m79_9  [key=1, style=dashed, color=green, label=stateMock];
m79_9 -> m79_10  [key=0, style=solid, color=green];
m79_10 -> m79_11  [key=0, style=solid, color=green];
m79_10 -> m79_12  [key=2, style=dotted, color=green];
m79_10 -> m79_13  [key=2, style=dotted, color=green];
m79_11 -> m79_7  [key=0, style=bold, color=blue];
m79_0 -> m79_1  [key=0, style=solid, color=green];
m79_1 -> m79_2  [key=0, style=solid, color=green];
m79_1 -> m79_5  [key=2, style=dotted, color=green];
m79_2 -> m79_2  [key=1, style=dashed, color=green, label=stateMock];
m79_2 -> m79_3  [key=0, style=solid, color=green];
m79_3 -> m79_4  [key=0, style=solid, color=green];
m79_3 -> m79_6  [key=2, style=dotted, color=green];
m79_4 -> m79_0  [key=0, style=bold, color=blue];
m80_15 -> m80_16  [key=0, style=solid, color=green];
m80_15 -> m80_18  [key=1, style=dashed, color=green, label=string];
m80_16 -> m80_17  [key=0, style=solid, color=green];
m80_16 -> m80_18  [key=0, style=solid, color=green];
m80_16 -> m80_20  [key=2, style=dotted, color=green];
m80_17 -> m80_19  [key=0, style=solid, color=green];
m80_17 -> m80_21  [key=2, style=dotted, color=green];
m80_18 -> m80_19  [key=0, style=solid, color=green];
m80_18 -> m80_22  [key=2, style=dotted, color=green];
m80_19 -> m80_15  [key=0, style=bold, color=blue];
m80_0 -> m80_1  [key=0, style=solid, color=green];
m80_0 -> m80_3  [key=1, style=dashed, color=green, label=StateHandler];
m80_0 -> m80_5  [key=1, style=dashed, color=green, label=StateHandler];
m80_0 -> m80_6  [key=1, style=dashed, color=green, label=StateHandler];
m80_0 -> m80_7  [key=1, style=dashed, color=green, label=StateHandler];
m80_1 -> m80_2  [key=0, style=solid, color=green];
m80_1 -> m80_3  [key=0, style=solid, color=green];
m80_2 -> m80_8  [key=0, style=solid, color=green];
m80_2 -> d24  [key=2, style=dotted, color=green];
m80_3 -> m80_4  [key=0, style=solid, color=green];
m80_3 -> m80_5  [key=0, style=solid, color=green];
m80_4 -> m80_8  [key=0, style=solid, color=green];
m80_4 -> m80_10  [key=2, style=dotted, color=green];
m80_5 -> m80_6  [key=0, style=solid, color=green];
m80_5 -> m80_7  [key=0, style=solid, color=green];
m80_5 -> m80_11  [key=2, style=dotted, color=green];
m80_6 -> m80_7  [key=0, style=solid, color=green];
m80_6 -> m80_12  [key=2, style=dotted, color=green];
m80_6 -> m80_13  [key=2, style=dotted, color=green];
m80_7 -> m80_8  [key=0, style=solid, color=green];
m80_7 -> m80_14  [key=2, style=dotted, color=green];
m80_8 -> m80_0  [key=0, style=bold, color=blue];
m80_23 -> m80_5  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateHandlerCollection"];
m80_23 -> m80_6  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateHandlerCollection"];
m80_23 -> m80_7  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateHandlerCollection"];
m80_23 -> m80_16  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateHandlerCollection"];
m80_23 -> m80_18  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateHandlerCollection"];
m81_0 -> m81_1  [key=0, style=solid, color=green];
m81_0 -> m81_2  [key=1, style=dashed, color=green, label="System.Exception"];
m81_1 -> m81_2  [key=0, style=solid, color=green];
m81_2 -> m81_3  [key=0, style=solid, color=green];
m81_3 -> m81_0  [key=0, style=bold, color=blue];
m81_4 -> m81_1  [key=1, style=dashed, color=green, label="HangFire.Filters.CreatedContext"];
m81_4 -> m81_2  [key=1, style=dashed, color=green, label="HangFire.Filters.CreatedContext"];
m82_117 -> m82_118  [key=0, style=solid, color=green];
m82_117 -> m82_45  [key=2, style=dotted, color=green];
m82_117 -> m82_119  [key=1, style=dashed, color=green, label="lambda expression"];
m82_112 -> m82_113  [key=0, style=solid, color=red];
m82_112 -> m82_117  [key=2, style=dotted, color=red];
m82_112 -> m82_118  [key=2, style=dotted, color=red];
m82_46 -> m82_47  [key=0, style=solid, color=green];
m82_82 -> m82_83  [key=0, style=solid, color=green];
m82_82 -> m82_85  [key=0, style=solid, color=green];
m82_82 -> m82_84  [key=1, style=dashed, color=green, label=server];
m82_17 -> m82_107  [key=0, style=solid, color=red];
m82_17 -> m82_109  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobStateHandler"];
m82_17 -> m82_111  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobStateHandler"];
m82_17 -> m82_112  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobStateHandler"];
m82_17 -> m82_113  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobStateHandler"];
m82_17 -> m82_9  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Common.States.JobStateHandler handler"];
m82_17 -> m82_18  [key=0, style=solid, color=green];
m82_17 -> m82_21  [key=2, style=dotted, color=green];
m82_107 -> m82_108  [key=0, style=solid, color=red];
m82_107 -> m82_109  [key=0, style=solid, color=red];
m82_107 -> m82_105  [key=0, style=bold, color=blue];
m82_109 -> m82_110  [key=0, style=solid, color=green];
m82_109 -> m82_111  [key=0, style=solid, color=red];
m82_109 -> m82_115  [key=2, style=dotted, color=red];
m82_109 -> m82_50  [key=2, style=dotted, color=green];
m82_109 -> m82_112  [key=2, style=dotted, color=green];
m82_109 -> m82_101  [key=2, style=dotted, color=green];
m82_111 -> m82_112  [key=0, style=solid, color=red];
m82_111 -> m82_113  [key=0, style=solid, color=red];
m82_111 -> m82_116  [key=2, style=dotted, color=red];
m82_113 -> m82_114  [key=0, style=solid, color=green];
m82_113 -> m82_119  [key=2, style=dotted, color=red];
m82_113 -> m82_117  [key=1, style=dashed, color=green, label=int];
m82_113 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.DeletedJobDto> DeletedJobs"];
m82_108 -> m82_114  [key=0, style=solid, color=red];
m82_108 -> d24  [key=2, style=dotted, color=red];
m82_108 -> m82_109  [key=0, style=solid, color=green];
m82_110 -> m82_114  [key=0, style=solid, color=red];
m82_110 -> d24  [key=2, style=dotted, color=red];
m82_110 -> m82_108  [key=0, style=bold, color=blue];
m82_114 -> m82_17  [key=0, style=bold, color=blue];
m82_114 -> m82_115  [key=0, style=solid, color=green];
m82_114 -> m82_10  [key=2, style=dotted, color=green];
m82_114 -> m82_116  [key=1, style=dashed, color=green, label="lambda expression"];
m82_45 -> m82_352  [key=0, style=solid];
m82_45 -> m82_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_45 -> m82_354  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m82_354 -> m82_355  [key=0, style=solid];
m82_354 -> m82_334  [key=2, style=dotted];
m82_352 -> m82_352  [key=3, color=darkorchid, style=bold, label="Local variable string jobsSql"];
m82_352 -> m82_353  [key=0, style=solid];
m82_353 -> m82_78  [key=2, style=dotted];
m82_353 -> m82_354  [key=0, style=solid];
m82_353 -> m82_87  [key=2, style=dotted];
m82_355 -> m82_45  [key=0, style=bold, color=blue];
m82_27 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m82_27 -> m82_28  [key=0, style=solid, color=red];
m82_27 -> m82_29  [key=0, style=solid, color=red];
m82_28 -> m82_10  [key=2, style=dotted];
m82_28 -> m82_29  [key=0, style=solid];
m82_28 -> m82_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_28 -> m82_41  [key=0, style=solid, color=red];
m82_28 -> d24  [key=2, style=dotted, color=red];
m82_29 -> m82_27  [key=0, style=bold, color=blue];
m82_29 -> m82_30  [key=0, style=solid];
m82_29 -> m82_31  [key=0, style=solid];
m82_356 -> m82_361  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m82_356 -> m82_357  [key=0, style=solid];
m82_356 -> m82_358  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>"];
m82_361 -> m82_343  [key=2, style=dotted];
m82_361 -> m82_362  [key=0, style=solid];
m82_361 -> m82_366  [key=2, style=dotted];
m82_358 -> m82_361  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_358 -> m82_359  [key=0, style=solid];
m82_358 -> m82_363  [key=0, style=solid];
m82_358 -> m82_362  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_360 -> m82_361  [key=0, style=solid];
m82_360 -> m82_220  [key=2, style=dotted];
m82_362 -> m82_358  [key=0, style=solid];
m82_362 -> m82_367  [key=2, style=dotted];
m82_362 -> m82_368  [key=2, style=dotted];
m82_362 -> m82_119  [key=2, style=dotted];
m82_357 -> m82_358  [key=0, style=solid];
m82_357 -> m82_362  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_357 -> m82_365  [key=2, style=dotted];
m82_357 -> m82_363  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_359 -> m82_360  [key=0, style=solid];
m82_359 -> m82_350  [key=2, style=dotted];
m82_363 -> m82_369  [key=2, style=dotted];
m82_363 -> m82_364  [key=0, style=solid];
m82_364 -> m82_356  [key=0, style=bold, color=blue];
m82_14 -> m82_8  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m82_14 -> m82_34  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m82_14 -> m82_339  [key=0, style=solid];
m82_14 -> m82_340  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_14 -> m82_28  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m82_14 -> m82_222  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m82_14 -> m82_228  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m82_339 -> m82_340  [key=0, style=solid];
m82_340 -> m82_78  [key=2, style=dotted];
m82_340 -> m82_341  [key=0, style=solid];
m82_340 -> m82_255  [key=2, style=dotted];
m82_341 -> m82_342  [key=0, style=solid];
m82_342 -> m82_14  [key=0, style=bold, color=blue];
m82_227 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long DeletedListCount"];
m82_227 -> m82_228  [key=0, style=solid];
m82_228 -> m82_10  [key=2, style=dotted];
m82_228 -> m82_229  [key=0, style=solid];
m82_228 -> m82_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_229 -> m82_227  [key=0, style=bold, color=blue];
m82_15 -> m82_16  [key=0, style=solid, color=green];
m82_15 -> m82_17  [key=1, style=dashed, color=green, label=string];
m82_10 -> m82_8  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_34  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_40  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_53  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_70  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_92  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_103  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_114  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_327  [key=0, style=solid];
m82_10 -> m82_28  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_63  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_129  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_162  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_172  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_180  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_187  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_193  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_222  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_228  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m82_10 -> m82_9  [key=0, style=solid];
m82_10 -> m82_17  [key=2, style=dotted];
m82_327 -> m82_328  [key=0, style=solid];
m82_327 -> m82_329  [key=2, style=dotted];
m82_328 -> m82_10  [key=0, style=bold, color=blue];
m82_186 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m82_186 -> m82_187  [key=0, style=solid];
m82_187 -> m82_10  [key=2, style=dotted];
m82_187 -> m82_188  [key=0, style=solid];
m82_187 -> m82_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_188 -> m82_186  [key=0, style=bold, color=blue];
m82_233 -> m82_234  [key=0, style=solid];
m82_233 -> m82_235  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto GetStatistics"];
m82_234 -> m82_234  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m82_234 -> m82_235  [key=0, style=solid];
m82_234 -> m82_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m82_235 -> m82_10  [key=2, style=dotted];
m82_235 -> m82_235  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto "];
m82_235 -> m82_236  [key=0, style=solid];
m82_235 -> m82_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_235 -> m82_237  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m82_236 -> m82_237  [key=0, style=solid];
m82_236 -> m82_239  [key=2, style=dotted];
m82_236 -> m82_240  [key=2, style=dotted];
m82_236 -> m82_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_237 -> m82_238  [key=0, style=solid];
m82_238 -> m82_233  [key=0, style=bold, color=blue];
m82_169 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FetchedJobDto> FetchedJobs"];
m82_169 -> m82_170  [key=0, style=solid];
m82_169 -> m82_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_170 -> m82_20  [key=2, style=dotted];
m82_170 -> m82_171  [key=0, style=solid];
m82_172 -> m82_10  [key=2, style=dotted];
m82_172 -> m82_173  [key=0, style=solid];
m82_172 -> m82_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_171 -> m82_172  [key=0, style=solid];
m82_171 -> m82_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m82_171 -> m82_174  [key=2, style=dotted];
m82_173 -> m82_169  [key=0, style=bold, color=blue];
m82_185 -> m82_268  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_185 -> m82_260  [key=0, style=solid];
m82_185 -> m82_267  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_185 -> m82_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_268 -> m82_269  [key=0, style=solid];
m82_268 -> m82_271  [key=2, style=dotted];
m82_267 -> m82_268  [key=0, style=solid];
m82_267 -> m82_207  [key=2, style=dotted];
m82_267 -> m82_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_267 -> m82_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_260 -> m82_261  [key=0, style=solid];
m82_260 -> m82_264  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m82_260 -> m82_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m82_261 -> m82_267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m82_261 -> m82_262  [key=0, style=solid];
m82_261 -> m82_117  [key=2, style=dotted];
m82_261 -> m82_264  [key=1, style=dashed, color=darkseagreen4, label=dates];
m82_263 -> m82_267  [key=0, style=solid];
m82_263 -> m82_264  [key=0, style=solid];
m82_264 -> m82_265  [key=0, style=solid];
m82_264 -> m82_119  [key=2, style=dotted];
m82_265 -> m82_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m82_265 -> m82_266  [key=0, style=solid];
m82_265 -> m82_270  [key=2, style=dotted];
m82_262 -> m82_263  [key=0, style=solid];
m82_262 -> m82_262  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m82_262 -> m82_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_266 -> m82_263  [key=0, style=solid];
m82_266 -> m82_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_269 -> m82_185  [key=0, style=bold, color=blue];
m82_50 -> m82_91  [key=0, style=solid];
m82_50 -> m82_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m82_50 -> m82_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m82_50 -> m82_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m82_50 -> m82_96  [key=1, style=dashed, color=red, label="HangFire.Common.States.StateChangingContext"];
m82_91 -> m82_92  [key=0, style=solid, color=green];
m82_91 -> m82_98  [key=0, style=solid];
m82_91 -> m82_93  [key=1, style=dashed, color=darkseagreen4, label=filter];
m82_91 -> m82_95  [key=1, style=dashed, color=green, label=int];
m82_91 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m82_92 -> m82_93  [key=0, style=solid, color=green];
m82_92 -> m82_94  [key=1, style=dashed, color=green, label="lambda expression"];
m82_92 -> m82_96  [key=1, style=dashed, color=red, label=oldState];
m82_92 -> m82_10  [key=2, style=dotted, color=green];
m82_93 -> m82_94  [key=0, style=solid];
m82_93 -> m82_99  [key=2, style=dotted];
m82_93 -> m82_91  [key=0, style=bold, color=blue];
m82_94 -> m82_95  [key=0, style=solid, color=green];
m82_94 -> m82_91  [key=0, style=solid];
m82_96 -> m82_97  [key=0, style=solid, color=red];
m82_96 -> m82_101  [key=2, style=dotted, color=red];
m82_96 -> m82_94  [key=0, style=bold, color=blue];
m82_95 -> m82_96  [key=0, style=solid, color=green];
m82_95 -> m82_100  [key=2, style=dotted];
m82_95 -> m82_97  [key=1, style=dashed, color=green, label="lambda expression"];
m82_95 -> m82_45  [key=2, style=dotted, color=green];
m82_97 -> m82_91  [key=0, style=solid];
m82_97 -> m82_102  [key=2, style=dotted];
m82_97 -> m82_98  [key=0, style=solid, color=green];
m82_98 -> m82_50  [key=0, style=bold, color=blue];
m82_98 -> m82_99  [key=0, style=solid, color=green];
m82_98 -> m82_100  [key=2, style=dotted, color=green];
m82_98 -> m82_101  [key=2, style=dotted, color=green];
m82_48 -> m82_46  [key=0, style=bold, color=blue];
m82_51 -> m82_86  [key=0, style=solid, color=red];
m82_51 -> m82_87  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m82_51 -> m82_37  [key=3, color=red, style=bold, label="Parameter variable HangFire.Common.States.StateChangingContext stateChangingContext"];
m82_51 -> m82_71  [key=3, color=red, style=bold, label="Parameter variable HangFire.Common.States.StateChangingContext stateChangingContext"];
m82_86 -> m82_87  [key=0, style=solid, color=red];
m82_86 -> m82_89  [key=2, style=dotted, color=red];
m82_86 -> m82_79  [key=0, style=bold, color=blue];
m82_87 -> m82_88  [key=0, style=solid, color=red];
m82_87 -> m82_90  [key=2, style=dotted, color=red];
m82_88 -> m82_51  [key=0, style=bold, color=blue];
m82_81 -> m82_82  [key=0, style=solid, color=green];
m82_81 -> m82_84  [key=1, style=dashed, color=green, label=result];
m82_81 -> m82_85  [key=1, style=dashed, color=green, label=result];
m82_81 -> m82_117  [key=2, style=dotted];
m82_106 -> m82_107  [key=0, style=solid, color=green];
m82_106 -> m82_45  [key=2, style=dotted, color=green];
m82_106 -> m82_108  [key=1, style=dashed, color=green, label="lambda expression"];
m82_26 -> m82_27  [key=0, style=solid, color=red];
m82_26 -> m82_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m82_26 -> m82_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m82_26 -> m82_33  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m82_26 -> m82_34  [key=1, style=dashed, color=red, label="string[]"];
m82_26 -> m82_35  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m82_26 -> m82_36  [key=1, style=dashed, color=red, label="HangFire.Common.JobMethod"];
m82_26 -> m82_37  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobState"];
m82_26 -> m82_22  [key=0, style=bold, color=blue];
m82_31 -> m82_32  [key=0, style=solid];
m82_31 -> m82_33  [key=0, style=solid, color=red];
m82_31 -> m82_14  [key=2, style=dotted];
m82_31 -> m82_24  [key=0, style=solid];
m82_33 -> m82_34  [key=0, style=solid, color=green];
m82_33 -> m82_42  [key=2, style=dotted, color=red];
m82_33 -> m82_43  [key=2, style=dotted, color=red];
m82_33 -> m82_21  [key=2, style=dotted, color=red];
m82_33 -> m82_44  [key=2, style=dotted, color=red];
m82_33 -> m82_52  [key=1, style=dashed, color=red, label="lambda expression"];
m82_33 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m82_34 -> m82_35  [key=0, style=solid, color=green];
m82_34 -> m82_45  [key=2, style=dotted, color=red];
m82_34 -> m82_46  [key=2, style=dotted, color=red];
m82_34 -> m82_36  [key=1, style=dashed, color=red, label=jobId];
m82_34 -> m82_40  [key=1, style=dashed, color=red, label=jobId];
m82_34 -> m82_10  [key=2, style=dotted, color=green];
m82_34 -> m82_52  [key=1, style=dashed, color=green, label="lambda expression"];
m82_35 -> m82_36  [key=0, style=solid, color=red];
m82_35 -> m82_47  [key=2, style=dotted, color=red];
m82_35 -> m82_38  [key=1, style=dashed, color=red, label=filterInfo];
m82_35 -> m82_39  [key=1, style=dashed, color=red, label=filterInfo];
m82_35 -> m82_33  [key=0, style=bold, color=blue];
m82_36 -> m82_37  [key=0, style=solid, color=red];
m82_36 -> m82_48  [key=2, style=dotted, color=red];
m82_37 -> m82_38  [key=0, style=solid, color=red];
m82_37 -> m82_49  [key=2, style=dotted, color=red];
m82_37 -> m82_39  [key=1, style=dashed, color=red, label=changingContext];
m82_37 -> m82_54  [key=0, style=solid, color=green];
m82_37 -> m82_14  [key=2, style=dotted, color=green];
m82_30 -> m82_41  [key=0, style=solid];
m82_30 -> d24  [key=2, style=dotted];
m82_32 -> m82_41  [key=0, style=solid];
m82_32 -> d24  [key=2, style=dotted];
m82_40 -> m82_41  [key=0, style=solid, color=green];
m82_40 -> m82_10  [key=2, style=dotted, color=green];
m82_40 -> m82_42  [key=1, style=dashed, color=green, label="lambda expression"];
m82_38 -> m82_39  [key=0, style=solid, color=red];
m82_38 -> m82_50  [key=2, style=dotted, color=red];
m82_39 -> m82_40  [key=0, style=solid, color=green];
m82_39 -> m82_51  [key=2, style=dotted, color=red];
m82_39 -> m82_43  [key=1, style=dashed, color=green, label=int];
m82_39 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m82_41 -> m82_26  [key=0, style=bold, color=blue];
m82_41 -> m82_39  [key=0, style=bold, color=blue];
m82_123 -> m82_124  [key=0, style=solid, color=green];
m82_123 -> m82_125  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues"];
m82_124 -> m82_125  [key=0, style=solid, color=green];
m82_124 -> m82_21  [key=2, style=dotted, color=green];
m82_124 -> m82_134  [key=2, style=dotted, color=green];
m82_124 -> m82_135  [key=2, style=dotted, color=green];
m82_124 -> m82_136  [key=2, style=dotted, color=green];
m82_124 -> m82_141  [key=1, style=dashed, color=green, label="lambda expression"];
m82_124 -> m82_145  [key=1, style=dashed, color=green, label="lambda expression"];
m82_124 -> m82_149  [key=1, style=dashed, color=green, label="lambda expression"];
m82_124 -> m82_152  [key=1, style=dashed, color=green, label="lambda expression"];
m82_124 -> m82_126  [key=1, style=dashed, color=green, label=tuples];
m82_125 -> m82_126  [key=0, style=solid];
m82_125 -> m82_137  [key=2, style=dotted];
m82_125 -> m82_130  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_125 -> m82_131  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_126 -> m82_127  [key=0, style=solid];
m82_126 -> m82_131  [key=0, style=solid];
m82_126 -> m82_128  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m82_126 -> m82_130  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m82_129 -> m82_10  [key=2, style=dotted];
m82_129 -> m82_130  [key=0, style=solid];
m82_129 -> m82_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_130 -> m82_126  [key=0, style=solid];
m82_130 -> m82_140  [key=2, style=dotted];
m82_130 -> m82_119  [key=2, style=dotted];
m82_131 -> m82_132  [key=0, style=solid];
m82_127 -> m82_129  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m82_127 -> m82_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m82_127 -> m82_128  [key=0, style=solid];
m82_127 -> m82_138  [key=2, style=dotted];
m82_128 -> m82_129  [key=0, style=solid];
m82_128 -> m82_130  [key=1, style=dashed, color=darkseagreen4, label=counters];
m82_128 -> m82_139  [key=2, style=dotted];
m82_132 -> m82_123  [key=0, style=bold, color=blue];
m82_0 -> m82_1  [key=0, style=solid, color=green];
m82_0 -> m82_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m82_0 -> m82_4  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m82_1 -> m82_2  [key=0, style=solid, color=green];
m82_1 -> m82_3  [key=0, style=solid, color=green];
m82_1 -> m82_0  [key=0, style=bold, color=blue];
m82_2 -> m82_5  [key=0, style=solid, color=green];
m82_2 -> d24  [key=2, style=dotted, color=green];
m82_2 -> m82_3  [key=0, style=solid, color=red];
m82_2 -> m82_7  [key=1, style=dashed, color=red, label="HangFire.Storage.IStorageConnection"];
m82_2 -> m82_8  [key=1, style=dashed, color=red, label="HangFire.Storage.IStorageConnection"];
m82_2 -> m82_11  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m82_2 -> m82_12  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m82_2 -> m82_19  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m82_3 -> m82_4  [key=0, style=solid, color=red];
m82_3 -> m82_5  [key=0, style=solid, color=red];
m82_4 -> m82_5  [key=0, style=solid];
m82_4 -> m82_13  [key=0, style=solid, color=red];
m82_4 -> d24  [key=2, style=dotted, color=red];
m82_5 -> m82_0  [key=0, style=bold, color=blue];
m82_5 -> m82_6  [key=0, style=solid, color=red];
m82_5 -> m82_7  [key=0, style=solid, color=red];
m82_115 -> m82_113  [key=0, style=bold, color=blue];
m82_319 -> m82_320  [key=0, style=solid];
m82_19 -> m82_20  [key=0, style=solid, color=red];
m82_19 -> m82_21  [key=2, style=dotted, color=red];
m82_19 -> m82_22  [key=1, style=dashed, color=red, label="lambda expression"];
m82_19 -> m82_15  [key=0, style=bold, color=blue];
m82_18 -> m82_19  [key=0, style=solid, color=red];
m82_18 -> m82_12  [key=0, style=solid, color=green];
m82_20 -> m82_18  [key=0, style=bold, color=blue];
m82_20 -> m82_15  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m82_20 -> m82_322  [key=0, style=solid];
m82_20 -> m82_22  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m82_20 -> m82_159  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m82_20 -> m82_169  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m82_20 -> m82_323  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.IPersistentJobQueueMonitoringApi GetQueueApi"];
m82_22 -> m82_23  [key=0, style=solid, color=red];
m82_22 -> m82_31  [key=0, style=solid];
m82_22 -> m82_24  [key=1, style=dashed, color=green, label=string];
m82_23 -> m82_24  [key=0, style=solid, color=green];
m82_23 -> m82_25  [key=2, style=dotted, color=red];
m82_23 -> m82_20  [key=2, style=dotted];
m82_24 -> m82_22  [key=0, style=bold, color=blue];
m82_24 -> m82_25  [key=0, style=solid, color=green];
m82_24 -> m82_21  [key=2, style=dotted, color=green];
m82_24 -> m82_76  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m82_24 -> m82_103  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m82_24 -> m82_192  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m82_24 -> m82_193  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m82_24 -> m82_234  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m82_52 -> m82_53  [key=0, style=solid, color=green];
m82_52 -> m82_37  [key=0, style=solid, color=green];
m82_52 -> m82_56  [key=1, style=dashed, color=green, label=int];
m82_52 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ScheduledJobDto> ScheduledJobs"];
m82_53 -> m82_54  [key=0, style=solid, color=green];
m82_53 -> m82_10  [key=2, style=dotted, color=green];
m82_53 -> m82_55  [key=1, style=dashed, color=green, label="lambda expression"];
m82_54 -> m82_52  [key=0, style=bold, color=blue];
m82_12 -> m82_20  [key=0, style=solid, color=green];
m82_12 -> m82_14  [key=2, style=dotted, color=green];
m82_12 -> m82_13  [key=0, style=solid, color=red];
m82_42 -> m82_43  [key=0, style=solid, color=green];
m82_43 -> m82_44  [key=0, style=solid, color=green];
m82_43 -> m82_45  [key=2, style=dotted, color=green];
m82_43 -> m82_46  [key=1, style=dashed, color=green, label="lambda expression"];
m82_44 -> m82_42  [key=0, style=bold, color=blue];
m82_47 -> m82_48  [key=0, style=solid, color=green];
m82_47 -> m82_49  [key=2, style=dotted, color=green];
m82_47 -> m82_50  [key=2, style=dotted, color=green];
m82_47 -> m82_51  [key=2, style=dotted, color=green];
m82_47 -> m82_103  [key=0, style=solid, color=red];
m82_47 -> m82_66  [key=3, color=red, style=bold, label="Parameter variable HangFire.Common.JobMethod method"];
m82_55 -> m82_56  [key=0, style=solid, color=red];
m82_55 -> m82_58  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobState"];
m82_55 -> m82_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_55 -> m82_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_55 -> m82_64  [key=1, style=dashed, color=red, label="params string[]"];
m82_55 -> m82_69  [key=1, style=dashed, color=red, label=string];
m82_55 -> m82_70  [key=1, style=dashed, color=red, label=string];
m82_55 -> m82_63  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m82_55 -> m82_51  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m82_56 -> m82_57  [key=0, style=solid, color=red];
m82_56 -> m82_45  [key=2, style=dotted, color=green];
m82_56 -> m82_58  [key=1, style=dashed, color=green, label="lambda expression"];
m82_56 -> m82_78  [key=2, style=dotted, color=red];
m82_57 -> m82_55  [key=0, style=bold, color=blue];
m82_57 -> m82_77  [key=0, style=solid, color=red];
m82_57 -> d24  [key=2, style=dotted, color=red];
m82_58 -> m82_59  [key=0, style=solid, color=red];
m82_58 -> m82_60  [key=0, style=solid, color=red];
m82_59 -> m82_60  [key=0, style=solid, color=green];
m82_59 -> m82_61  [key=2, style=dotted, color=green];
m82_59 -> m82_51  [key=2, style=dotted, color=green];
m82_59 -> m82_77  [key=0, style=solid, color=red];
m82_59 -> d24  [key=2, style=dotted, color=red];
m82_60 -> m82_58  [key=0, style=bold, color=blue];
m82_60 -> m82_61  [key=0, style=solid];
m82_60 -> m82_79  [key=2, style=dotted];
m82_72 -> m82_73  [key=0, style=solid, color=red];
m82_72 -> m82_74  [key=0, style=solid, color=red];
m82_73 -> m82_74  [key=0, style=solid, color=green];
m82_73 -> m82_68  [key=2, style=dotted, color=green];
m82_73 -> m82_77  [key=0, style=solid, color=red];
m82_73 -> m82_85  [key=2, style=dotted, color=red];
m82_73 -> m82_51  [key=2, style=dotted, color=red];
m82_74 -> m82_72  [key=0, style=bold, color=blue];
m82_74 -> m82_75  [key=0, style=solid, color=red];
m82_74 -> m82_47  [key=2, style=dotted, color=red];
m82_74 -> m82_76  [key=1, style=dashed, color=red, label=filterInfo];
m82_79 -> m82_80  [key=0, style=solid];
m82_80 -> m82_82  [key=1, style=dashed, color=green, label=servers];
m82_80 -> m82_78  [key=2, style=dotted];
m82_80 -> m82_81  [key=0, style=solid];
m82_80 -> m82_87  [key=2, style=dotted];
m82_84 -> m82_82  [key=0, style=solid, color=green];
m82_84 -> m82_89  [key=2, style=dotted, color=green];
m82_84 -> m82_119  [key=2, style=dotted, color=green];
m82_83 -> m82_84  [key=0, style=solid, color=green];
m82_83 -> m82_78  [key=2, style=dotted];
m82_85 -> m82_86  [key=0, style=solid, color=green];
m82_99 -> m82_97  [key=0, style=bold, color=blue];
m82_105 -> m82_106  [key=0, style=solid, color=green];
m82_116 -> m82_117  [key=0, style=solid, color=green];
m82_118 -> m82_116  [key=0, style=bold, color=blue];
m82_119 -> m82_120  [key=0, style=solid];
m82_141 -> m82_142  [key=0, style=solid, color=green];
m82_145 -> m82_146  [key=0, style=solid];
m82_149 -> m82_150  [key=0, style=solid];
m82_152 -> m82_153  [key=0, style=solid];
m82_142 -> m82_143  [key=0, style=solid, color=green];
m82_142 -> m82_144  [key=2, style=dotted, color=green];
m82_143 -> m82_141  [key=0, style=bold, color=blue];
m82_66 -> m82_68  [key=2, style=dotted];
m82_66 -> m82_67  [key=0, style=solid, color=red];
m82_66 -> m82_66  [key=3, color=red, style=bold, label="Local variable HangFire.Common.JobMethod jobMethod"];
m82_156 -> m82_157  [key=0, style=solid];
m82_156 -> m82_158  [key=2, style=dotted];
m82_166 -> m82_167  [key=0, style=solid];
m82_166 -> m82_168  [key=2, style=dotted];
m82_176 -> m82_177  [key=0, style=solid];
m82_176 -> m82_178  [key=2, style=dotted];
m82_183 -> m82_184  [key=0, style=solid];
m82_183 -> m82_185  [key=2, style=dotted];
m82_190 -> m82_191  [key=0, style=solid];
m82_190 -> m82_185  [key=2, style=dotted];
m82_203 -> m82_204  [key=0, style=solid];
m82_203 -> m82_208  [key=2, style=dotted];
m82_203 -> m82_209  [key=2, style=dotted];
m82_225 -> m82_14  [key=2, style=dotted];
m82_225 -> m82_226  [key=0, style=solid];
m82_231 -> m82_14  [key=2, style=dotted];
m82_231 -> m82_232  [key=0, style=solid];
m82_197 -> m82_198  [key=0, style=solid];
m82_197 -> m82_205  [key=2, style=dotted];
m82_197 -> m82_201  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_197 -> m82_202  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_195 -> m82_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_195 -> m82_196  [key=0, style=solid];
m82_243 -> m82_244  [key=0, style=solid];
m82_243 -> m82_205  [key=2, style=dotted];
m82_243 -> m82_245  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_243 -> m82_246  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_243 -> m82_247  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_243 -> m82_248  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_243 -> m82_249  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_243 -> m82_250  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_243 -> m82_251  [key=1, style=dashed, color=darkseagreen4, label=multi];
m82_292 -> m82_293  [key=0, style=solid];
m82_292 -> m82_275  [key=2, style=dotted];
m82_292 -> m82_84  [key=2, style=dotted];
m82_198 -> m82_78  [key=2, style=dotted];
m82_198 -> m82_203  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_198 -> m82_199  [key=0, style=solid];
m82_198 -> m82_206  [key=2, style=dotted];
m82_201 -> m82_78  [key=2, style=dotted];
m82_201 -> m82_203  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m82_201 -> m82_202  [key=0, style=solid];
m82_201 -> m82_207  [key=2, style=dotted];
m82_201 -> m82_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_201 -> m82_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_202 -> m82_78  [key=2, style=dotted];
m82_202 -> m82_203  [key=0, style=solid];
m82_202 -> m82_87  [key=2, style=dotted];
m82_202 -> m82_21  [key=2, style=dotted];
m82_202 -> m82_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_217 -> m82_78  [key=2, style=dotted];
m82_217 -> m82_218  [key=0, style=solid];
m82_217 -> m82_219  [key=2, style=dotted];
m82_217 -> m82_220  [key=2, style=dotted];
m82_244 -> m82_78  [key=2, style=dotted];
m82_244 -> m82_245  [key=0, style=solid];
m82_244 -> m82_255  [key=2, style=dotted];
m82_245 -> m82_78  [key=2, style=dotted];
m82_245 -> m82_246  [key=0, style=solid];
m82_245 -> m82_255  [key=2, style=dotted];
m82_246 -> m82_78  [key=2, style=dotted];
m82_246 -> m82_247  [key=0, style=solid];
m82_246 -> m82_255  [key=2, style=dotted];
m82_247 -> m82_78  [key=2, style=dotted];
m82_247 -> m82_248  [key=0, style=solid];
m82_247 -> m82_255  [key=2, style=dotted];
m82_248 -> m82_78  [key=2, style=dotted];
m82_248 -> m82_249  [key=0, style=solid];
m82_248 -> m82_255  [key=2, style=dotted];
m82_249 -> m82_78  [key=2, style=dotted];
m82_249 -> m82_250  [key=0, style=solid];
m82_249 -> m82_206  [key=2, style=dotted];
m82_250 -> m82_78  [key=2, style=dotted];
m82_250 -> m82_251  [key=0, style=solid];
m82_250 -> m82_206  [key=2, style=dotted];
m82_251 -> m82_78  [key=2, style=dotted];
m82_251 -> m82_252  [key=0, style=solid];
m82_251 -> m82_255  [key=2, style=dotted];
m82_120 -> m82_101  [key=2, style=dotted];
m82_120 -> m82_121  [key=0, style=solid];
m82_120 -> m82_122  [key=2, style=dotted];
m82_120 -> m82_7  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m82_120 -> m82_12  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_34  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_35  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_37  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_38  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_39  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m82_120 -> m82_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m82_120 -> m82_71  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_73  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_74  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_75  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_76  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_87  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m82_120 -> m82_103  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_111  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_112  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_120 -> m82_113  [key=1, style=dashed, color=red, label="HangFire.States.StateMachine"];
m82_336 -> m82_101  [key=2, style=dotted];
m82_336 -> m82_337  [key=0, style=solid];
m82_336 -> m82_338  [key=2, style=dotted];
m82_121 -> m82_119  [key=0, style=bold, color=blue];
m82_121 -> m82_19  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<object>"];
m82_147 -> m82_145  [key=0, style=bold, color=blue];
m82_146 -> m82_147  [key=0, style=solid];
m82_146 -> m82_148  [key=2, style=dotted];
m82_151 -> m82_149  [key=0, style=bold, color=blue];
m82_150 -> m82_151  [key=0, style=solid];
m82_154 -> m82_152  [key=0, style=bold, color=blue];
m82_153 -> m82_154  [key=0, style=solid];
m82_257 -> m82_144  [key=2, style=dotted];
m82_257 -> m82_258  [key=0, style=solid];
m82_257 -> m82_259  [key=2, style=dotted];
m82_65 -> m82_66  [key=0, style=solid];
m82_65 -> m82_77  [key=0, style=solid];
m82_67 -> m82_65  [key=0, style=bold, color=blue];
m82_67 -> m82_68  [key=0, style=solid, color=red];
m82_67 -> m82_70  [key=0, style=solid, color=red];
m82_67 -> m82_82  [key=2, style=dotted, color=red];
m82_67 -> m82_72  [key=1, style=dashed, color=red, label=jobMethod];
m82_67 -> m82_74  [key=1, style=dashed, color=red, label=jobMethod];
m82_155 -> m82_156  [key=0, style=solid];
m82_157 -> m82_155  [key=0, style=bold, color=blue];
m82_165 -> m82_166  [key=0, style=solid];
m82_167 -> m82_165  [key=0, style=bold, color=blue];
m82_175 -> m82_176  [key=0, style=solid];
m82_177 -> m82_175  [key=0, style=bold, color=blue];
m82_182 -> m82_183  [key=0, style=solid];
m82_184 -> m82_182  [key=0, style=bold, color=blue];
m82_189 -> m82_190  [key=0, style=solid];
m82_191 -> m82_189  [key=0, style=bold, color=blue];
m82_204 -> m82_195  [key=0, style=bold, color=blue];
m82_224 -> m82_225  [key=0, style=solid];
m82_226 -> m82_224  [key=0, style=bold, color=blue];
m82_230 -> m82_231  [key=0, style=solid];
m82_232 -> m82_230  [key=0, style=bold, color=blue];
m82_241 -> m82_243  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_241 -> m82_242  [key=0, style=solid];
m82_256 -> m82_257  [key=0, style=solid];
m82_335 -> m82_336  [key=0, style=solid];
m82_196 -> m82_197  [key=0, style=solid];
m82_242 -> m82_243  [key=0, style=solid];
m82_242 -> m82_244  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_245  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_246  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_247  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_248  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_249  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_250  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_251  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_242 -> m82_254  [key=2, style=dotted];
m82_242 -> m82_252  [key=1, style=dashed, color=darkseagreen4, label=stats];
m82_291 -> m82_292  [key=0, style=solid];
m82_294 -> m82_295  [key=0, style=solid];
m82_293 -> m82_291  [key=0, style=bold, color=blue];
m82_199 -> m82_201  [key=0, style=solid];
m82_199 -> m82_200  [key=0, style=solid];
m82_210 -> m82_211  [key=0, style=solid];
m82_213 -> m82_214  [key=0, style=solid];
m82_216 -> m82_217  [key=0, style=solid];
m82_218 -> m82_216  [key=0, style=bold, color=blue];
m82_252 -> m82_253  [key=0, style=solid];
m82_337 -> m82_335  [key=0, style=bold, color=blue];
m82_258 -> m82_256  [key=0, style=bold, color=blue];
m82_273 -> m82_275  [key=2, style=dotted];
m82_273 -> m82_274  [key=0, style=solid];
m82_273 -> m82_84  [key=2, style=dotted];
m82_200 -> m82_204  [key=0, style=solid];
m82_253 -> m82_241  [key=0, style=bold, color=blue];
m82_272 -> m82_273  [key=0, style=solid];
m82_277 -> m82_278  [key=0, style=solid];
m82_296 -> m82_294  [key=0, style=bold, color=blue];
m82_295 -> m82_296  [key=0, style=solid];
m82_212 -> m82_210  [key=0, style=bold, color=blue];
m82_211 -> m82_212  [key=0, style=solid];
m82_215 -> m82_213  [key=0, style=bold, color=blue];
m82_214 -> m82_215  [key=0, style=solid];
m82_274 -> m82_272  [key=0, style=bold, color=blue];
m82_279 -> m82_277  [key=0, style=bold, color=blue];
m82_278 -> m82_279  [key=0, style=solid];
m82_316 -> m82_317  [key=0, style=solid];
m82_318 -> m82_316  [key=0, style=bold, color=blue];
m82_317 -> m82_318  [key=0, style=solid];
m82_320 -> m82_321  [key=0, style=solid];
m82_321 -> m82_319  [key=0, style=bold, color=blue];
m82_103 -> m82_104  [key=0, style=solid, color=green];
m82_103 -> m82_105  [key=2, style=dotted, color=red];
m82_103 -> m82_106  [key=2, style=dotted, color=red];
m82_103 -> m82_10  [key=2, style=dotted, color=green];
m82_104 -> m82_47  [key=0, style=bold, color=blue];
m82_104 -> m82_102  [key=0, style=bold, color=blue];
m82_25 -> m82_26  [key=0, style=solid, color=green];
m82_7 -> m82_8  [key=0, style=solid, color=green];
m82_7 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m82_8 -> m82_9  [key=0, style=solid, color=green];
m82_8 -> m82_15  [key=2, style=dotted, color=red];
m82_8 -> m82_16  [key=2, style=dotted, color=red];
m82_8 -> m82_10  [key=2, style=dotted, color=green];
m82_8 -> m82_18  [key=1, style=dashed, color=green, label="lambda expression"];
m82_11 -> m82_12  [key=0, style=solid, color=red];
m82_11 -> m82_13  [key=0, style=solid, color=red];
m82_6 -> m82_13  [key=0, style=solid, color=red];
m82_6 -> d24  [key=2, style=dotted, color=red];
m82_9 -> m82_10  [key=0, style=solid];
m82_9 -> m82_11  [key=0, style=solid, color=red];
m82_9 -> m82_7  [key=0, style=bold, color=blue];
m82_13 -> m82_2  [key=0, style=bold, color=blue];
m82_61 -> m82_62  [key=0, style=solid];
m82_61 -> m82_80  [key=2, style=dotted];
m82_61 -> m82_64  [key=1, style=dashed, color=red, label=jobData];
m82_61 -> m82_67  [key=1, style=dashed, color=red, label=jobData];
m82_61 -> m82_71  [key=1, style=dashed, color=red, label=jobData];
m82_102 -> m82_103  [key=0, style=solid, color=green];
m82_102 -> m82_106  [key=1, style=dashed, color=green, label=int];
m82_102 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m82_178 -> m82_371  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_178 -> m82_370  [key=0, style=solid];
m82_374 -> m82_373  [key=0, style=solid];
m82_374 -> m82_378  [key=2, style=dotted];
m82_374 -> m82_379  [key=2, style=dotted];
m82_374 -> m82_380  [key=2, style=dotted];
m82_374 -> m82_209  [key=2, style=dotted];
m82_374 -> m82_119  [key=2, style=dotted];
m82_371 -> m82_78  [key=2, style=dotted];
m82_371 -> m82_372  [key=0, style=solid];
m82_371 -> m82_87  [key=2, style=dotted];
m82_371 -> m82_373  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m82_372 -> m82_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_372 -> m82_373  [key=0, style=solid];
m82_372 -> m82_377  [key=2, style=dotted];
m82_372 -> m82_375  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_373 -> m82_374  [key=0, style=solid];
m82_373 -> m82_375  [key=0, style=solid];
m82_370 -> m82_371  [key=0, style=solid];
m82_370 -> m82_330  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
m82_375 -> m82_376  [key=0, style=solid];
m82_375 -> m82_369  [key=2, style=dotted];
m82_376 -> m82_178  [key=0, style=bold, color=blue];
m82_192 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto JobDetails"];
m82_192 -> m82_193  [key=0, style=solid];
m82_192 -> m82_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_193 -> m82_10  [key=2, style=dotted];
m82_193 -> m82_193  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto "];
m82_193 -> m82_194  [key=0, style=solid];
m82_193 -> m82_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_194 -> m82_192  [key=0, style=bold, color=blue];
m82_168 -> m82_331  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_168 -> m82_330  [key=0, style=solid];
m82_332 -> m82_333  [key=0, style=solid];
m82_332 -> m82_334  [key=2, style=dotted];
m82_332 -> m82_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_331 -> m82_78  [key=2, style=dotted];
m82_331 -> m82_332  [key=0, style=solid];
m82_331 -> m82_87  [key=2, style=dotted];
m82_330 -> m82_331  [key=0, style=solid];
m82_330 -> m82_330  [key=3, color=darkorchid, style=bold, label="Local variable string enqueuedJobsSql"];
m82_333 -> m82_168  [key=0, style=bold, color=blue];
m82_221 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m82_221 -> m82_222  [key=0, style=solid];
m82_222 -> m82_10  [key=2, style=dotted];
m82_222 -> m82_223  [key=0, style=solid];
m82_222 -> m82_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_223 -> m82_221  [key=0, style=bold, color=blue];
m82_343 -> m82_193  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Common.Job DeserializeJob"];
m82_343 -> m82_344  [key=0, style=solid];
m82_343 -> m82_345  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_344 -> m82_345  [key=0, style=solid];
m82_344 -> m82_350  [key=2, style=dotted];
m82_344 -> m82_346  [key=1, style=dashed, color=darkseagreen4, label=data];
m82_345 -> m82_346  [key=0, style=solid];
m82_346 -> m82_349  [key=0, style=solid];
m82_346 -> m82_351  [key=2, style=dotted];
m82_348 -> m82_349  [key=0, style=solid];
m82_347 -> m82_348  [key=0, style=solid];
m82_349 -> m82_343  [key=0, style=bold, color=blue];
m82_75 -> m82_76  [key=0, style=solid, color=red];
m82_75 -> m82_50  [key=2, style=dotted, color=red];
m82_76 -> m82_76  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.ServerDto> "];
m82_76 -> m82_77  [key=0, style=solid, color=red];
m82_76 -> m82_78  [key=2, style=dotted, color=green];
m82_76 -> m82_79  [key=1, style=dashed, color=green, label="lambda expression"];
m82_76 -> m82_51  [key=2, style=dotted, color=red];
m82_77 -> m82_75  [key=0, style=bold, color=blue];
m82_77 -> m82_55  [key=0, style=bold, color=blue];
m82_322 -> m82_323  [key=0, style=solid];
m82_322 -> m82_326  [key=2, style=dotted];
m82_323 -> m82_144  [key=2, style=dotted];
m82_323 -> m82_324  [key=0, style=solid];
m82_324 -> m82_325  [key=0, style=solid];
m82_325 -> m82_20  [key=0, style=bold, color=blue];
m82_16 -> m82_17  [key=0, style=solid, color=green];
m82_16 -> m82_20  [key=2, style=dotted, color=green];
m82_69 -> m82_70  [key=0, style=solid, color=red];
m82_69 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m82_69 -> m82_83  [key=2, style=dotted, color=red];
m82_69 -> m82_84  [key=2, style=dotted, color=red];
m82_69 -> m82_69  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobState"];
m82_69 -> m82_71  [key=1, style=dashed, color=red, label="HangFire.Common.States.JobState"];
m82_70 -> m82_71  [key=0, style=solid, color=red];
m82_70 -> m82_10  [key=2, style=dotted, color=green];
m82_70 -> m82_72  [key=1, style=dashed, color=green, label="lambda expression"];
m82_70 -> m82_48  [key=2, style=dotted, color=red];
m82_71 -> m82_69  [key=0, style=bold, color=blue];
m82_71 -> m82_72  [key=0, style=solid, color=red];
m82_71 -> m82_49  [key=2, style=dotted, color=red];
m82_71 -> m82_73  [key=1, style=dashed, color=red, label=stateChangingContext];
m82_71 -> m82_75  [key=1, style=dashed, color=red, label=stateChangingContext];
m82_71 -> m82_76  [key=1, style=dashed, color=red, label=stateChangingContext];
m82_179 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m82_179 -> m82_180  [key=0, style=solid];
m82_180 -> m82_10  [key=2, style=dotted];
m82_180 -> m82_181  [key=0, style=solid];
m82_180 -> m82_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_181 -> m82_179  [key=0, style=bold, color=blue];
m82_62 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m82_62 -> m82_63  [key=0, style=solid];
m82_62 -> m82_64  [key=0, style=solid, color=red];
m82_63 -> m82_10  [key=2, style=dotted];
m82_63 -> m82_64  [key=0, style=solid];
m82_63 -> m82_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_63 -> m82_77  [key=0, style=solid];
m82_64 -> m82_62  [key=0, style=bold, color=blue];
m82_64 -> m82_65  [key=0, style=solid, color=red];
m82_64 -> m82_66  [key=0, style=solid, color=red];
m82_64 -> m82_81  [key=2, style=dotted, color=red];
m82_68 -> m82_280  [key=0, style=solid];
m82_68 -> m82_287  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_68 -> m82_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_68 -> m82_288  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_68 -> m82_69  [key=0, style=solid, color=red];
m82_288 -> m82_289  [key=0, style=solid];
m82_288 -> m82_271  [key=2, style=dotted];
m82_280 -> m82_281  [key=0, style=solid];
m82_280 -> m82_284  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m82_280 -> m82_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m82_287 -> m82_288  [key=0, style=solid];
m82_287 -> m82_207  [key=2, style=dotted];
m82_287 -> m82_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_287 -> m82_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_281 -> m82_287  [key=1, style=dashed, color=darkseagreen4, label=dates];
m82_281 -> m82_282  [key=0, style=solid];
m82_281 -> m82_117  [key=2, style=dotted];
m82_281 -> m82_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m82_284 -> m82_285  [key=0, style=solid];
m82_284 -> m82_119  [key=2, style=dotted];
m82_285 -> m82_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m82_285 -> m82_286  [key=0, style=solid];
m82_285 -> m82_290  [key=2, style=dotted];
m82_283 -> m82_287  [key=0, style=solid];
m82_283 -> m82_284  [key=0, style=solid];
m82_282 -> m82_283  [key=0, style=solid];
m82_282 -> m82_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_282 -> m82_262  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m82_286 -> m82_283  [key=0, style=solid];
m82_286 -> m82_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_289 -> m82_68  [key=0, style=bold, color=blue];
m82_297 -> m82_299  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m82_297 -> m82_298  [key=0, style=solid];
m82_297 -> m82_300  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m82_297 -> m82_305  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m82_297 -> m82_306  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m82_297 -> m82_307  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m82_297 -> m82_303  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m82_299 -> m82_207  [key=2, style=dotted];
m82_299 -> m82_300  [key=0, style=solid];
m82_299 -> m82_311  [key=2, style=dotted];
m82_299 -> m82_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_299 -> m82_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_299 -> m82_301  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m82_299 -> m82_302  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m82_299 -> m82_306  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m82_298 -> m82_299  [key=0, style=solid];
m82_298 -> m82_298  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m82_300 -> m82_301  [key=0, style=solid];
m82_300 -> m82_303  [key=0, style=solid];
m82_300 -> m82_302  [key=1, style=dashed, color=darkseagreen4, label=key];
m82_301 -> m82_300  [key=0, style=solid];
m82_301 -> m82_302  [key=0, style=solid];
m82_301 -> m82_312  [key=2, style=dotted];
m82_302 -> m82_300  [key=0, style=solid];
m82_302 -> m82_313  [key=2, style=dotted];
m82_306 -> m82_307  [key=0, style=solid];
m82_306 -> m82_315  [key=2, style=dotted];
m82_305 -> m82_262  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m82_305 -> m82_306  [key=0, style=solid];
m82_305 -> m82_309  [key=0, style=solid];
m82_307 -> m82_308  [key=0, style=solid];
m82_307 -> m82_315  [key=2, style=dotted];
m82_307 -> m82_313  [key=2, style=dotted];
m82_303 -> m82_307  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_303 -> m82_304  [key=0, style=solid];
m82_303 -> m82_314  [key=2, style=dotted];
m82_303 -> m82_309  [key=1, style=dashed, color=darkseagreen4, label=result];
m82_304 -> m82_306  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_304 -> m82_305  [key=0, style=solid];
m82_304 -> m82_307  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_304 -> m82_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_308 -> m82_305  [key=0, style=solid];
m82_308 -> m82_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m82_309 -> m82_310  [key=0, style=solid];
m82_310 -> m82_297  [key=0, style=bold, color=blue];
m82_159 -> m82_10  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.EnqueuedJobDto> EnqueuedJobs"];
m82_159 -> m82_160  [key=0, style=solid];
m82_159 -> m82_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_160 -> m82_20  [key=2, style=dotted];
m82_160 -> m82_161  [key=0, style=solid];
m82_162 -> m82_10  [key=2, style=dotted];
m82_162 -> m82_163  [key=0, style=solid];
m82_162 -> m82_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m82_161 -> m82_162  [key=0, style=solid];
m82_161 -> m82_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m82_161 -> m82_164  [key=2, style=dotted];
m82_163 -> m82_159  [key=0, style=bold, color=blue];
m82_381 -> m82_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_8  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_12  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_16  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_34  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_37  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_40  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_43  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_53  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_56  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_70  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_73  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_76  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_92  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_95  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_103  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_106  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_114  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_117  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_124  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_327  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_332  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_339  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_381 -> m82_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m82_382 -> m82_43  [key=1, style=dashed, color=green, label=int];
m82_383 -> m82_43  [key=1, style=dashed, color=green, label=int];
m82_384 -> m82_56  [key=1, style=dashed, color=green, label=int];
m82_385 -> m82_56  [key=1, style=dashed, color=green, label=int];
m82_386 -> m82_95  [key=1, style=dashed, color=green, label=int];
m82_387 -> m82_95  [key=1, style=dashed, color=green, label=int];
m82_388 -> m82_106  [key=1, style=dashed, color=green, label=int];
m82_389 -> m82_106  [key=1, style=dashed, color=green, label=int];
m82_390 -> m82_117  [key=1, style=dashed, color=green, label=int];
m82_391 -> m82_117  [key=1, style=dashed, color=green, label=int];
m82_392 -> m82_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m82_393 -> m82_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m82_394 -> m82_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m82_395 -> m82_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_396 -> m82_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m82_398 -> m82_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m82_397 -> m82_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m84_0 -> m84_1  [key=0, style=solid];
m84_1 -> m84_0  [key=0, style=bold, color=blue];
m84_2 -> m84_3  [key=0, style=solid];
m84_3 -> m84_2  [key=0, style=bold, color=blue];
m85_6 -> m85_7  [key=0, style=solid];
m85_7 -> m85_8  [key=0, style=solid];
m85_7 -> m85_10  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m85_7 -> m85_19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m85_7 -> m85_7  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m85_8 -> m85_9  [key=0, style=solid, color=red];
m85_10 -> m85_11  [key=0, style=solid];
m85_10 -> m85_16  [key=2, style=dotted];
m85_10 -> m85_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_9 -> m85_10  [key=0, style=solid, color=red];
m85_9 -> m85_13  [key=0, style=solid, color=red];
m85_9 -> m85_15  [key=2, style=dotted, color=red];
m85_13 -> m85_14  [key=0, style=solid];
m85_13 -> m85_17  [key=2, style=dotted];
m85_11 -> m85_12  [key=0, style=solid];
m85_12 -> m85_13  [key=0, style=solid];
m85_14 -> m85_6  [key=0, style=bold, color=blue];
m85_0 -> m85_1  [key=0, style=solid];
m85_0 -> m85_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m85_1 -> m85_2  [key=0, style=solid];
m85_1 -> m85_3  [key=0, style=solid];
m85_3 -> m85_4  [key=0, style=solid];
m85_2 -> m85_4  [key=0, style=solid];
m85_2 -> d24  [key=2, style=dotted];
m85_4 -> m85_0  [key=0, style=bold, color=blue];
m85_38 -> m85_39  [key=0, style=solid];
m85_38 -> m85_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_38 -> m85_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_38 -> m85_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetFetchedJobIds"];
m85_39 -> m85_40  [key=0, style=solid];
m85_39 -> m85_43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobsSql];
m85_39 -> m85_39  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
m85_40 -> m85_41  [key=0, style=solid];
m85_40 -> m85_16  [key=2, style=dotted];
m85_40 -> m85_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_41 -> m85_38  [key=0, style=bold, color=blue];
m85_27 -> m85_28  [key=0, style=solid];
m85_27 -> m85_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_27 -> m85_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_27 -> m85_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetEnqueuedJobIds"];
m85_28 -> m85_29  [key=0, style=solid];
m85_28 -> m85_32  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m85_28 -> m85_28  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m85_29 -> m85_30  [key=0, style=solid];
m85_29 -> m85_16  [key=2, style=dotted];
m85_29 -> m85_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_30 -> m85_27  [key=0, style=bold, color=blue];
m85_48 -> m85_49  [key=0, style=solid];
m85_48 -> m85_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_48 -> m85_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_48 -> m85_16  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.EnqueuedAndFetchedCountDto GetEnqueuedAndFetchedCount"];
m85_49 -> m85_50  [key=0, style=solid];
m85_49 -> m85_53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m85_49 -> m85_49  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m85_50 -> m85_51  [key=0, style=solid];
m85_50 -> m85_16  [key=2, style=dotted];
m85_50 -> m85_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_51 -> m85_48  [key=0, style=bold, color=blue];
m85_16 -> m85_58  [key=0, style=solid];
m85_16 -> m85_10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m85_16 -> m85_29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m85_16 -> m85_40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m85_16 -> m85_50  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m85_58 -> m85_59  [key=0, style=solid];
m85_58 -> m85_60  [key=2, style=dotted];
m85_59 -> m85_16  [key=0, style=bold, color=blue];
m85_52 -> m85_53  [key=0, style=solid];
m85_19 -> m85_20  [key=0, style=solid];
m85_19 -> m85_21  [key=2, style=dotted];
m85_19 -> m85_22  [key=2, style=dotted];
m85_19 -> m85_23  [key=2, style=dotted];
m85_19 -> m85_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_18 -> m85_19  [key=0, style=solid];
m85_20 -> m85_18  [key=0, style=bold, color=blue];
m85_24 -> m85_25  [key=0, style=solid];
m85_25 -> m85_26  [key=0, style=solid];
m85_26 -> m85_24  [key=0, style=bold, color=blue];
m85_32 -> m85_33  [key=0, style=solid];
m85_32 -> m85_34  [key=2, style=dotted];
m85_32 -> m85_23  [key=2, style=dotted];
m85_32 -> m85_22  [key=2, style=dotted];
m85_32 -> m85_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_31 -> m85_32  [key=0, style=solid];
m85_33 -> m85_31  [key=0, style=bold, color=blue];
m85_35 -> m85_36  [key=0, style=solid];
m85_36 -> m85_37  [key=0, style=solid];
m85_37 -> m85_35  [key=0, style=bold, color=blue];
m85_43 -> m85_44  [key=0, style=solid];
m85_43 -> m85_34  [key=2, style=dotted];
m85_43 -> m85_23  [key=2, style=dotted];
m85_43 -> m85_22  [key=2, style=dotted];
m85_43 -> m85_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m85_42 -> m85_43  [key=0, style=solid];
m85_44 -> m85_42  [key=0, style=bold, color=blue];
m85_45 -> m85_46  [key=0, style=solid];
m85_46 -> m85_47  [key=0, style=solid];
m85_47 -> m85_45  [key=0, style=bold, color=blue];
m85_53 -> m85_54  [key=0, style=solid];
m85_53 -> m85_21  [key=2, style=dotted];
m85_53 -> m85_56  [key=2, style=dotted];
m85_54 -> m85_55  [key=0, style=solid];
m85_54 -> m85_57  [key=2, style=dotted];
m85_55 -> m85_52  [key=0, style=bold, color=blue];
m85_61 -> m85_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_9  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_61 -> m85_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m85_62 -> m85_19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m85_63 -> m85_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_64 -> m85_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m85_65 -> m85_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m85_66 -> m85_32  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m85_67 -> m85_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_68 -> m85_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m85_69 -> m85_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m85_70 -> m85_43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobsSql];
m85_71 -> m85_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m85_72 -> m85_53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m87_0 -> m87_1  [key=0, style=solid];
m87_1 -> m87_2  [key=0, style=solid];
m87_1 -> m87_48  [key=2, style=dotted];
m87_2 -> m87_3  [key=0, style=solid];
m87_2 -> m87_49  [key=2, style=dotted];
m87_3 -> m87_4  [key=0, style=solid];
m87_4 -> m87_5  [key=0, style=solid];
m87_4 -> m87_50  [key=2, style=dotted];
m87_4 -> m87_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m87_5 -> m87_6  [key=0, style=solid];
m87_5 -> m87_50  [key=2, style=dotted];
m87_5 -> m87_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m87_9 -> m87_10  [key=0, style=solid];
m87_9 -> m87_52  [key=2, style=dotted];
m87_9 -> m87_53  [key=2, style=dotted];
m87_9 -> m87_54  [key=2, style=dotted];
m87_9 -> m87_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m87_9 -> m87_14  [key=1, style=dashed, color=darkseagreen4, label=pager];
m87_9 -> m87_46  [key=1, style=dashed, color=darkseagreen4, label=pager];
m87_6 -> m87_7  [key=0, style=solid];
m87_7 -> m87_8  [key=0, style=solid];
m87_8 -> m87_9  [key=0, style=solid];
m87_8 -> m87_51  [key=2, style=dotted];
m87_8 -> m87_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m87_10 -> m87_11  [key=0, style=solid];
m87_10 -> m87_55  [key=2, style=dotted];
m87_10 -> m87_16  [key=1, style=dashed, color=darkseagreen4, label=succeededJobs];
m87_12 -> m87_13  [key=0, style=solid];
m87_12 -> m87_14  [key=0, style=solid];
m87_14 -> m87_15  [key=0, style=solid];
m87_14 -> m87_56  [key=2, style=dotted];
m87_14 -> m87_57  [key=2, style=dotted];
m87_14 -> m87_58  [key=2, style=dotted];
m87_46 -> m87_47  [key=0, style=solid];
m87_46 -> m87_66  [key=2, style=dotted];
m87_46 -> m87_57  [key=2, style=dotted];
m87_46 -> m87_58  [key=2, style=dotted];
m87_11 -> m87_12  [key=0, style=solid];
m87_11 -> m87_48  [key=2, style=dotted];
m87_16 -> m87_17  [key=0, style=solid];
m87_16 -> m87_45  [key=0, style=solid];
m87_16 -> m87_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_13 -> m87_47  [key=0, style=solid];
m87_13 -> m87_48  [key=2, style=dotted];
m87_15 -> m87_16  [key=0, style=solid];
m87_15 -> m87_48  [key=2, style=dotted];
m87_17 -> m87_18  [key=0, style=solid];
m87_17 -> m87_48  [key=2, style=dotted];
m87_45 -> m87_46  [key=0, style=solid];
m87_45 -> m87_48  [key=2, style=dotted];
m87_18 -> m87_19  [key=0, style=solid];
m87_18 -> m87_59  [key=2, style=dotted];
m87_18 -> m87_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_18 -> m87_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_19 -> m87_20  [key=0, style=solid];
m87_19 -> m87_48  [key=2, style=dotted];
m87_20 -> m87_21  [key=0, style=solid];
m87_20 -> m87_54  [key=2, style=dotted];
m87_20 -> m87_59  [key=2, style=dotted];
m87_20 -> m87_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_20 -> m87_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_21 -> m87_22  [key=0, style=solid];
m87_21 -> m87_48  [key=2, style=dotted];
m87_22 -> m87_23  [key=0, style=solid];
m87_22 -> m87_60  [key=2, style=dotted];
m87_22 -> m87_58  [key=2, style=dotted];
m87_22 -> m87_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_22 -> m87_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_23 -> m87_24  [key=0, style=solid];
m87_23 -> m87_48  [key=2, style=dotted];
m87_24 -> m87_25  [key=0, style=solid];
m87_24 -> m87_26  [key=0, style=solid];
m87_24 -> m87_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_24 -> m87_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_25 -> m87_26  [key=0, style=solid];
m87_25 -> m87_48  [key=2, style=dotted];
m87_26 -> m87_27  [key=0, style=solid];
m87_26 -> m87_48  [key=2, style=dotted];
m87_27 -> m87_28  [key=0, style=solid];
m87_27 -> m87_29  [key=0, style=solid];
m87_27 -> m87_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_27 -> m87_30  [key=1, style=dashed, color=red, label=job];
m87_28 -> m87_44  [key=0, style=solid];
m87_28 -> m87_48  [key=2, style=dotted];
m87_29 -> m87_30  [key=0, style=solid, color=red];
m87_29 -> m87_48  [key=2, style=dotted];
m87_30 -> m87_31  [key=0, style=solid, color=red];
m87_30 -> m87_61  [key=2, style=dotted, color=red];
m87_30 -> m87_62  [key=2, style=dotted, color=red];
m87_30 -> m87_58  [key=2, style=dotted, color=red];
m87_30 -> m87_30  [key=1, style=dashed, color=red, label=job];
m87_30 -> m87_32  [key=1, style=dashed, color=red, label=job];
m87_31 -> m87_32  [key=0, style=solid, color=red];
m87_31 -> m87_48  [key=2, style=dotted];
m87_32 -> m87_33  [key=0, style=solid, color=red];
m87_32 -> m87_63  [key=2, style=dotted, color=red];
m87_32 -> m87_59  [key=2, style=dotted, color=red];
m87_32 -> m87_32  [key=1, style=dashed, color=red, label=job];
m87_32 -> m87_34  [key=1, style=dashed, color=red, label=job];
m87_33 -> m87_34  [key=0, style=solid, color=red];
m87_33 -> m87_48  [key=2, style=dotted];
m87_34 -> m87_35  [key=0, style=solid, color=red];
m87_34 -> m87_64  [key=2, style=dotted, color=red];
m87_34 -> m87_59  [key=2, style=dotted, color=red];
m87_34 -> m87_34  [key=1, style=dashed, color=red, label=job];
m87_34 -> m87_37  [key=1, style=dashed, color=red, label=job];
m87_35 -> m87_36  [key=0, style=solid];
m87_35 -> m87_48  [key=2, style=dotted];
m87_37 -> m87_38  [key=0, style=solid];
m87_37 -> m87_43  [key=0, style=solid];
m87_37 -> m87_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_37 -> m87_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_36 -> m87_37  [key=0, style=solid];
m87_36 -> m87_48  [key=2, style=dotted];
m87_38 -> m87_39  [key=0, style=solid];
m87_38 -> m87_48  [key=2, style=dotted];
m87_43 -> m87_44  [key=0, style=solid];
m87_43 -> m87_48  [key=2, style=dotted];
m87_39 -> m87_40  [key=0, style=solid];
m87_39 -> m87_65  [key=2, style=dotted];
m87_39 -> m87_59  [key=2, style=dotted];
m87_39 -> m87_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_39 -> m87_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_40 -> m87_41  [key=0, style=solid];
m87_40 -> m87_48  [key=2, style=dotted];
m87_41 -> m87_42  [key=0, style=solid];
m87_41 -> m87_59  [key=2, style=dotted];
m87_41 -> m87_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m87_42 -> m87_43  [key=0, style=solid];
m87_42 -> m87_48  [key=2, style=dotted];
m87_44 -> m87_16  [key=0, style=solid];
m87_44 -> m87_48  [key=2, style=dotted];
m87_47 -> m87_0  [key=0, style=bold, color=blue];
m87_67 -> m87_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_30  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_32  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_34  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m87_67 -> m87_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.SucceededJobs"];
m88_46 -> m88_54  [key=0, style=solid];
m88_46 -> m88_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m88_54 -> m88_55  [key=0, style=solid];
m88_54 -> m88_60  [key=0, style=solid];
m88_55 -> m88_56  [key=0, style=solid];
m88_55 -> m88_58  [key=1, style=dashed, color=darkseagreen4, label=index];
m88_56 -> m88_57  [key=0, style=solid];
m88_56 -> m88_58  [key=0, style=solid];
m88_58 -> m88_44  [key=2, style=dotted];
m88_58 -> m88_59  [key=0, style=solid];
m88_59 -> m88_60  [key=0, style=solid];
m88_59 -> m88_53  [key=2, style=dotted];
m88_57 -> m88_58  [key=0, style=solid];
m88_60 -> m88_46  [key=0, style=bold, color=blue];
m88_0 -> m88_1  [key=0, style=solid, color=green];
m88_0 -> m88_3  [key=1, style=dashed, color=green, label=long];
m88_0 -> m88_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m88_0 -> m88_6  [key=1, style=dashed, color=red, label=string];
m88_0 -> m88_2  [key=1, style=dashed, color=green, label=int];
m88_1 -> m88_2  [key=0, style=solid, color=green];
m88_1 -> m88_3  [key=0, style=solid, color=red];
m88_3 -> m88_4  [key=0, style=solid, color=green];
m88_3 -> m88_5  [key=0, style=solid];
m88_5 -> m88_6  [key=0, style=solid, color=green];
m88_5 -> m88_8  [key=2, style=dotted, color=green];
m88_6 -> m88_7  [key=0, style=solid, color=green];
m88_6 -> m88_9  [key=2, style=dotted, color=green];
m88_2 -> m88_7  [key=0, style=solid, color=red];
m88_2 -> d24  [key=2, style=dotted, color=red];
m88_2 -> m88_3  [key=0, style=solid, color=green];
m88_4 -> m88_7  [key=0, style=solid];
m88_4 -> d24  [key=2, style=dotted];
m88_4 -> m88_5  [key=0, style=solid, color=green];
m88_7 -> m88_0  [key=0, style=bold, color=blue];
m88_44 -> m88_77  [key=0, style=solid];
m88_44 -> m88_78  [key=1, style=dashed, color=darkseagreen4, label=bool];
m88_44 -> m88_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.ItemType"];
m88_77 -> m88_78  [key=0, style=solid];
m88_78 -> m88_79  [key=0, style=solid];
m88_79 -> m88_80  [key=0, style=solid];
m88_80 -> m88_44  [key=0, style=bold, color=blue];
m88_43 -> m88_50  [key=0, style=solid];
m88_43 -> m88_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m88_50 -> m88_51  [key=0, style=solid];
m88_50 -> m88_44  [key=2, style=dotted];
m88_51 -> m88_52  [key=0, style=solid];
m88_51 -> m88_53  [key=2, style=dotted];
m88_52 -> m88_43  [key=0, style=bold, color=blue];
m88_48 -> m88_61  [key=0, style=solid];
m88_48 -> m88_66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m88_61 -> m88_62  [key=0, style=solid];
m88_61 -> m88_67  [key=0, style=solid];
m88_62 -> m88_63  [key=0, style=solid];
m88_62 -> m88_65  [key=1, style=dashed, color=darkseagreen4, label=index];
m88_63 -> m88_64  [key=0, style=solid];
m88_63 -> m88_65  [key=0, style=solid];
m88_64 -> m88_65  [key=0, style=solid];
m88_65 -> m88_44  [key=2, style=dotted];
m88_65 -> m88_66  [key=0, style=solid];
m88_66 -> m88_67  [key=0, style=solid];
m88_66 -> m88_53  [key=2, style=dotted];
m88_67 -> m88_48  [key=0, style=bold, color=blue];
m88_10 -> m88_11  [key=0, style=solid, color=green];
m88_10 -> m88_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m88_11 -> m88_12  [key=0, style=solid, color=green];
m88_11 -> m88_13  [key=0, style=solid, color=green];
m88_12 -> m88_14  [key=0, style=solid, color=green];
m88_13 -> m88_14  [key=0, style=solid];
m88_14 -> m88_10  [key=0, style=bold, color=blue];
m88_15 -> m88_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m88_15 -> m88_16  [key=0, style=solid];
m88_18 -> m88_19  [key=0, style=solid];
m88_16 -> m88_18  [key=0, style=solid];
m88_16 -> m88_17  [key=0, style=solid];
m88_17 -> m88_19  [key=0, style=solid];
m88_19 -> m88_15  [key=0, style=bold, color=blue];
m88_49 -> m88_74  [key=0, style=solid];
m88_49 -> m88_75  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m88_74 -> m88_75  [key=0, style=solid];
m88_74 -> m88_44  [key=2, style=dotted];
m88_75 -> m88_76  [key=0, style=solid];
m88_75 -> m88_53  [key=2, style=dotted];
m88_76 -> m88_49  [key=0, style=bold, color=blue];
m88_9 -> m88_20  [key=0, style=solid];
m88_9 -> m88_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.ProcessingJob"];
m88_9 -> m88_6  [key=1, style=dashed, color=red, label="HangFire.Storage.ProcessingJob"];
m88_22 -> m88_23  [key=0, style=solid, color=green];
m88_21 -> m88_22  [key=0, style=solid, color=green];
m88_21 -> m88_23  [key=0, style=solid];
m88_23 -> m88_24  [key=0, style=solid];
m88_23 -> m88_25  [key=0, style=solid];
m88_20 -> m88_21  [key=0, style=solid];
m88_24 -> m88_25  [key=0, style=solid];
m88_25 -> m88_26  [key=0, style=solid];
m88_26 -> m88_27  [key=0, style=solid];
m88_26 -> m88_28  [key=0, style=solid];
m88_27 -> m88_28  [key=0, style=solid];
m88_29 -> m88_30  [key=0, style=solid];
m88_29 -> m88_31  [key=0, style=solid];
m88_31 -> m88_32  [key=0, style=solid];
m88_31 -> m88_43  [key=2, style=dotted];
m88_32 -> m88_33  [key=0, style=solid];
m88_32 -> m88_34  [key=0, style=solid];
m88_34 -> m88_35  [key=0, style=solid];
m88_34 -> m88_46  [key=2, style=dotted];
m88_35 -> m88_36  [key=0, style=solid];
m88_35 -> m88_47  [key=2, style=dotted];
m88_36 -> m88_37  [key=0, style=solid];
m88_36 -> m88_48  [key=2, style=dotted];
m88_37 -> m88_38  [key=0, style=solid];
m88_37 -> m88_39  [key=0, style=solid];
m88_38 -> m88_39  [key=0, style=solid];
m88_38 -> m88_44  [key=2, style=dotted];
m88_38 -> m88_45  [key=2, style=dotted];
m88_39 -> m88_40  [key=0, style=solid];
m88_39 -> m88_49  [key=2, style=dotted];
m88_28 -> m88_29  [key=0, style=solid];
m88_28 -> m88_31  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_34  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_35  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_36  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_38  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_39  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_42  [key=2, style=dotted];
m88_28 -> m88_30  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_33  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_28 -> m88_40  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m88_30 -> m88_41  [key=0, style=solid];
m88_33 -> m88_34  [key=0, style=solid];
m88_33 -> m88_44  [key=2, style=dotted];
m88_33 -> m88_45  [key=2, style=dotted];
m88_40 -> m88_41  [key=0, style=solid];
m88_41 -> m88_9  [key=0, style=bold, color=blue];
m88_47 -> m88_68  [key=0, style=solid];
m88_47 -> m88_71  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m88_68 -> m88_69  [key=0, style=solid];
m88_68 -> m88_70  [key=1, style=dashed, color=darkseagreen4, label=pageIndex];
m88_68 -> m88_72  [key=1, style=dashed, color=darkseagreen4, label=pageIndex];
m88_69 -> m88_70  [key=0, style=solid];
m88_69 -> m88_73  [key=0, style=solid];
m88_70 -> m88_44  [key=2, style=dotted];
m88_70 -> m88_71  [key=0, style=solid];
m88_72 -> m88_69  [key=0, style=solid];
m88_72 -> m88_72  [key=1, style=dashed, color=darkseagreen4, label=pageIndex];
m88_71 -> m88_72  [key=0, style=solid];
m88_71 -> m88_53  [key=2, style=dotted];
m88_73 -> m88_47  [key=0, style=bold, color=blue];
m88_81 -> m88_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_2  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_3  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_4  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_6  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_11  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m88_81 -> m88_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_81 -> m88_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m88_82 -> m88_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.Item"];
m88_82 -> m88_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.Item"];
m88_82 -> m88_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.Item"];
m90_6 -> m90_7  [key=0, style=solid];
m90_7 -> m90_8  [key=0, style=solid, color=green];
m90_7 -> m90_4  [key=2, style=dotted];
m90_8 -> m90_9  [key=0, style=solid, color=red];
m90_8 -> m90_11  [key=2, style=dotted, color=green];
m90_8 -> m90_10  [key=0, style=solid, color=green];
m90_8 -> m90_12  [key=2, style=dotted, color=green];
m90_8 -> m90_13  [key=2, style=dotted, color=green];
m90_9 -> m90_10  [key=0, style=solid, color=red];
m90_9 -> m90_12  [key=2, style=dotted, color=red];
m90_9 -> m90_13  [key=2, style=dotted, color=red];
m90_10 -> m90_6  [key=0, style=bold, color=blue];
m90_13 -> m90_14  [key=0, style=solid, color=green];
m90_0 -> m90_1  [key=0, style=solid];
m90_1 -> m90_2  [key=0, style=solid, color=green];
m90_1 -> m90_4  [key=2, style=dotted];
m90_2 -> m90_3  [key=0, style=solid, color=green];
m90_2 -> n9  [key=2, style=dotted, color=green];
m90_3 -> m90_0  [key=0, style=bold, color=blue];
m90_14 -> m90_15  [key=0, style=solid, color=green];
m90_14 -> m90_4  [key=2, style=dotted, color=green];
m90_15 -> m90_16  [key=0, style=solid, color=green];
m90_15 -> m90_17  [key=2, style=dotted, color=green];
m90_16 -> m90_13  [key=0, style=bold, color=blue];
m91_0 -> m91_1  [key=0, style=solid];
m91_0 -> m91_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m91_1 -> m91_2  [key=0, style=solid];
m91_1 -> m91_4  [key=2, style=dotted];
m91_2 -> m91_3  [key=0, style=solid];
m91_2 -> m91_5  [key=2, style=dotted];
m91_3 -> m91_0  [key=0, style=bold, color=blue];
m91_6 -> m91_7  [key=0, style=solid];
m91_7 -> m91_8  [key=0, style=solid];
m91_7 -> m91_9  [key=2, style=dotted];
m91_8 -> m91_6  [key=0, style=bold, color=blue];
m92_14 -> m92_15  [key=0, style=solid, color=red];
m92_15 -> m92_16  [key=0, style=solid, color=red];
m92_16 -> m92_14  [key=0, style=bold, color=blue];
m92_13 -> m92_17  [key=0, style=solid];
m92_13 -> m92_19  [key=1, style=dashed, color=red, label=string];
m92_13 -> m92_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m92_13 -> m92_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m92_13 -> m92_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m92_13 -> m92_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m92_17 -> m92_18  [key=0, style=solid];
m92_17 -> m92_33  [key=2, style=dotted];
m92_17 -> m92_19  [key=1, style=dashed, color=red, label=stateMachine];
m92_17 -> m92_31  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m92_19 -> m92_20  [key=0, style=solid, color=red];
m92_19 -> m92_21  [key=0, style=solid, color=red];
m92_19 -> m92_35  [key=2, style=dotted, color=red];
m92_22 -> m92_23  [key=0, style=solid];
m92_22 -> m92_36  [key=2, style=dotted];
m92_22 -> m92_24  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m92_22 -> m92_25  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m92_24 -> m92_25  [key=0, style=solid];
m92_24 -> m92_38  [key=2, style=dotted];
m92_25 -> m92_26  [key=0, style=solid];
m92_25 -> m92_39  [key=2, style=dotted];
m92_31 -> m92_32  [key=0, style=solid];
m92_31 -> m92_35  [key=2, style=dotted];
m92_18 -> m92_19  [key=0, style=solid, color=red];
m92_18 -> m92_34  [key=2, style=dotted];
m92_20 -> m92_32  [key=0, style=solid, color=red];
m92_21 -> m92_22  [key=0, style=solid];
m92_23 -> m92_24  [key=0, style=solid];
m92_23 -> m92_37  [key=2, style=dotted];
m92_26 -> m92_27  [key=0, style=solid];
m92_26 -> m92_29  [key=0, style=solid];
m92_26 -> m92_31  [key=0, style=solid];
m92_26 -> m92_40  [key=2, style=dotted];
m92_27 -> m92_28  [key=0, style=solid];
m92_29 -> m92_30  [key=0, style=solid];
m92_28 -> m92_31  [key=0, style=solid];
m92_28 -> m92_41  [key=2, style=dotted];
m92_30 -> m92_31  [key=0, style=solid];
m92_30 -> m92_41  [key=2, style=dotted];
m92_32 -> m92_13  [key=0, style=bold, color=blue];
m92_6 -> m92_7  [key=0, style=solid];
m92_6 -> m92_8  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m92_7 -> m92_8  [key=0, style=solid, color=red];
m92_7 -> m92_11  [key=2, style=dotted];
m92_7 -> m92_9  [key=1, style=dashed, color=red, label=connection];
m92_8 -> m92_9  [key=0, style=solid, color=red];
m92_8 -> m92_12  [key=2, style=dotted, color=red];
m92_9 -> m92_10  [key=0, style=solid, color=red];
m92_9 -> m92_13  [key=2, style=dotted, color=red];
m92_10 -> m92_6  [key=0, style=bold, color=blue];
m92_0 -> m92_1  [key=0, style=solid, color=red];
m92_0 -> m92_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m92_1 -> m92_2  [key=0, style=solid, color=red];
m92_1 -> m92_3  [key=0, style=solid, color=red];
m92_3 -> m92_4  [key=0, style=solid];
m92_2 -> m92_4  [key=0, style=solid, color=red];
m92_2 -> d24  [key=2, style=dotted, color=red];
m92_4 -> m92_0  [key=0, style=bold, color=blue];
m92_42 -> m92_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m92_42 -> m92_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m92_42 -> m92_8  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m92_42 -> m92_9  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m92_42 -> m92_15  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m92_42 -> m92_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m92_42 -> m92_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m92_42 -> m92_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m93_5 -> m93_6  [key=0, style=solid];
m93_5 -> m93_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m93_6 -> m93_7  [key=0, style=solid];
m93_6 -> m93_11  [key=2, style=dotted];
m93_9 -> m93_10  [key=0, style=solid];
m93_7 -> m93_8  [key=0, style=solid];
m93_7 -> m93_12  [key=2, style=dotted];
m93_8 -> m93_9  [key=0, style=solid];
m93_8 -> m93_10  [key=0, style=solid];
m93_10 -> m93_5  [key=0, style=bold, color=blue];
m93_0 -> m93_1  [key=0, style=solid];
m93_0 -> m93_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m93_0 -> m93_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m93_1 -> m93_2  [key=0, style=solid];
m93_2 -> m93_3  [key=0, style=solid];
m93_3 -> m93_4  [key=0, style=solid];
m93_4 -> m93_0  [key=0, style=bold, color=blue];
m93_13 -> m93_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m93_13 -> m93_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m93_13 -> m93_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m93_13 -> m93_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m93_13 -> m93_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m93_13 -> m93_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangingFilter"];
m94_0 -> m94_1  [key=0, style=solid];
m94_0 -> m94_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m94_0 -> m94_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m94_1 -> m94_2  [key=0, style=solid];
m94_2 -> m94_3  [key=0, style=solid];
m94_3 -> m94_4  [key=0, style=solid];
m94_3 -> m94_5  [key=2, style=dotted];
m94_3 -> m94_6  [key=2, style=dotted];
m94_4 -> m94_0  [key=0, style=bold, color=blue];
m94_13 -> m94_14  [key=0, style=solid];
m94_14 -> m94_15  [key=0, style=solid];
m94_15 -> m94_16  [key=0, style=solid];
m94_15 -> m94_17  [key=2, style=dotted];
m94_16 -> m94_13  [key=0, style=bold, color=blue];
m94_28 -> m94_29  [key=0, style=solid];
m94_29 -> m94_30  [key=0, style=solid];
m94_29 -> m94_38  [key=2, style=dotted];
m94_30 -> m94_31  [key=0, style=solid];
m94_30 -> m94_33  [key=0, style=solid];
m94_30 -> m94_35  [key=0, style=solid];
m94_30 -> m94_37  [key=0, style=solid];
m94_31 -> m94_32  [key=0, style=solid];
m94_31 -> m94_39  [key=2, style=dotted];
m94_33 -> m94_34  [key=0, style=solid];
m94_35 -> m94_36  [key=0, style=solid];
m94_32 -> m94_30  [key=0, style=solid];
m94_32 -> m94_40  [key=2, style=dotted];
m94_32 -> m94_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m94_34 -> m94_37  [key=0, style=solid];
m94_34 -> m94_38  [key=2, style=dotted];
m94_36 -> m94_37  [key=0, style=solid];
m94_36 -> m94_41  [key=2, style=dotted];
m94_36 -> m94_42  [key=2, style=dotted];
m94_37 -> m94_28  [key=0, style=bold, color=blue];
m94_7 -> m94_8  [key=0, style=solid];
m94_8 -> m94_9  [key=0, style=solid];
m94_8 -> m94_11  [key=2, style=dotted];
m94_8 -> m94_5  [key=2, style=dotted];
m94_9 -> m94_10  [key=0, style=solid];
m94_9 -> m94_12  [key=2, style=dotted];
m94_10 -> m94_7  [key=0, style=bold, color=blue];
m94_43 -> m94_44  [key=0, style=solid];
m94_44 -> m94_45  [key=0, style=solid];
m94_44 -> m94_53  [key=2, style=dotted];
m94_44 -> m94_50  [key=1, style=dashed, color=darkseagreen4, label=connection];
m94_44 -> m94_51  [key=1, style=dashed, color=darkseagreen4, label=connection];
m94_45 -> m94_46  [key=0, style=solid];
m94_45 -> m94_54  [key=2, style=dotted];
m94_50 -> m94_51  [key=0, style=solid];
m94_50 -> m94_56  [key=2, style=dotted];
m94_51 -> m94_52  [key=0, style=solid];
m94_51 -> m94_57  [key=2, style=dotted];
m94_46 -> m94_47  [key=0, style=solid];
m94_46 -> m94_55  [key=2, style=dotted];
m94_46 -> m94_50  [key=1, style=dashed, color=darkseagreen4, label=payload];
m94_46 -> m94_51  [key=1, style=dashed, color=darkseagreen4, label=payload];
m94_47 -> m94_48  [key=0, style=solid];
m94_47 -> m94_50  [key=0, style=solid];
m94_48 -> m94_49  [key=0, style=solid];
m94_48 -> m94_17  [key=2, style=dotted];
m94_49 -> m94_52  [key=0, style=solid];
m94_52 -> m94_43  [key=0, style=bold, color=blue];
m94_56 -> m94_58  [key=0, style=solid];
m94_56 -> m94_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m94_56 -> m94_62  [key=1, style=dashed, color=green, label="HangFire.Server.JobPayload"];
m94_56 -> m94_66  [key=1, style=dashed, color=green, label="HangFire.Server.JobPayload"];
m94_56 -> m94_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m94_56 -> m94_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m94_56 -> m94_72  [key=1, style=dashed, color=green, label="HangFire.Storage.IStorageConnection"];
m94_56 -> m94_79  [key=1, style=dashed, color=green, label="HangFire.Server.JobPayload"];
m94_56 -> m94_32  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Server.JobPayload payload"];
m94_58 -> m94_59  [key=0, style=solid];
m94_58 -> m94_60  [key=0, style=solid];
m94_60 -> m94_61  [key=0, style=solid];
m94_60 -> m94_81  [key=2, style=dotted];
m94_60 -> m94_62  [key=1, style=dashed, color=green, label=stateMachine];
m94_60 -> m94_79  [key=1, style=dashed, color=green, label=stateMachine];
m94_62 -> m94_63  [key=0, style=solid, color=green];
m94_62 -> m94_64  [key=0, style=solid, color=green];
m94_62 -> m94_83  [key=2, style=dotted, color=green];
m94_66 -> m94_67  [key=0, style=solid, color=green];
m94_66 -> m94_84  [key=2, style=dotted, color=green];
m94_66 -> m94_69  [key=1, style=dashed, color=green, label=jobMethod];
m94_66 -> m94_71  [key=1, style=dashed, color=green, label=jobMethod];
m94_66 -> m94_72  [key=1, style=dashed, color=green, label=jobMethod];
m94_68 -> m94_69  [key=0, style=solid, color=green];
m94_68 -> m94_85  [key=2, style=dotted];
m94_70 -> m94_71  [key=0, style=solid, color=green];
m94_70 -> m94_85  [key=2, style=dotted];
m94_72 -> m94_73  [key=0, style=solid, color=green];
m94_72 -> m94_88  [key=2, style=dotted, color=green];
m94_79 -> m94_80  [key=0, style=solid, color=green];
m94_79 -> m94_83  [key=2, style=dotted, color=green];
m94_59 -> m94_80  [key=0, style=solid];
m94_61 -> m94_62  [key=0, style=solid, color=green];
m94_61 -> m94_82  [key=2, style=dotted];
m94_63 -> m94_80  [key=0, style=solid];
m94_64 -> m94_65  [key=0, style=solid, color=green];
m94_65 -> m94_66  [key=0, style=solid, color=green];
m94_67 -> m94_68  [key=0, style=solid, color=green];
m94_67 -> m94_70  [key=0, style=solid, color=green];
m94_69 -> m94_72  [key=0, style=solid, color=green];
m94_69 -> m94_86  [key=2, style=dotted, color=green];
m94_69 -> m94_73  [key=1, style=dashed, color=green, label=performStrategy];
m94_71 -> m94_72  [key=0, style=solid, color=green];
m94_71 -> m94_87  [key=2, style=dotted, color=green];
m94_71 -> m94_73  [key=1, style=dashed, color=green, label=performStrategy];
m94_73 -> m94_74  [key=0, style=solid];
m94_73 -> m94_89  [key=2, style=dotted];
m94_74 -> m94_75  [key=0, style=solid];
m94_74 -> m94_77  [key=0, style=solid];
m94_74 -> m94_79  [key=0, style=solid, color=green];
m94_74 -> m94_90  [key=2, style=dotted];
m94_75 -> m94_76  [key=0, style=solid];
m94_77 -> m94_78  [key=0, style=solid, color=green];
m94_76 -> m94_79  [key=0, style=solid, color=green];
m94_76 -> m94_91  [key=2, style=dotted];
m94_78 -> m94_79  [key=0, style=solid, color=green];
m94_78 -> m94_91  [key=2, style=dotted, color=green];
m94_80 -> m94_56  [key=0, style=bold, color=blue];
m94_18 -> m94_19  [key=0, style=solid];
m94_19 -> m94_20  [key=0, style=solid];
m94_19 -> m94_21  [key=0, style=solid];
m94_20 -> m94_21  [key=0, style=solid];
m94_20 -> m94_13  [key=2, style=dotted];
m94_21 -> m94_22  [key=0, style=solid];
m94_21 -> m94_24  [key=0, style=solid];
m94_22 -> m94_23  [key=0, style=solid];
m94_22 -> m94_26  [key=2, style=dotted];
m94_24 -> m94_25  [key=0, style=solid];
m94_24 -> m94_27  [key=2, style=dotted];
m94_23 -> m94_24  [key=0, style=solid];
m94_25 -> m94_18  [key=0, style=bold, color=blue];
m94_92 -> m94_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m94_92 -> m94_72  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m94_92 -> m94_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
}
