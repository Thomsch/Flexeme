digraph  {
n75 [label="Hangfire.DashboardOptions", span=""];
n76 [label="Hangfire.JobStorage", span=""];
n77 [label=IAppBuilder, span=""];
n0 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", span="51-51", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)"];
n1 [label="return builder.UseHangfireServer(new BackgroundJobServerOptions());", span="53-53", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)"];
n2 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", span="51-51", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)"];
n3 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()"];
n4 [label="Entry IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions)", span="56-56", cluster="IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions)"];
n5 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", span="56-56", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)"];
n6 [label="return builder.UseHangfireServer(options, JobStorage.Current);", span="60-60", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)"];
n7 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", span="56-56", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)"];
n8 [label="Entry IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63", cluster="IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n9 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n10 [label="builder == null", span="68-68", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n12 [label="options == null", span="69-69", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n14 [label="storage == null", span="70-70", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n16 [label="var server = BackgroundJobServer.StartNew(storage, options)", span="72-72", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n18 [label="var context = new OwinContext(builder.Properties)", span="75-75", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n25 [label="return builder;", span="90-90", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n11 [label="throw new ArgumentNullException(''builder'');", span="68-68", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n13 [label="throw new ArgumentNullException(''options'');", span="69-69", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n15 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n17 [label="Servers.Add(server)", span="73-73", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n28 [label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)"];
n24 [label="token.Register(server.Dispose)", span="88-88", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n29 [label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)"];
n19 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="76-76", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n30 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr"];
n21 [label="token = context.Get<CancellationToken>(''server.OnDispose'')", span="80-80", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n20 [label="token == default(CancellationToken)", span="77-77", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n31 [label="Entry Unk.>", span="", cluster="Unk.>"];
n22 [label="token == default(CancellationToken)", span="83-83", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n23 [label="throw new InvalidOperationException(''Current OWIN environment does not contain an instance of the `CancellationToken` class under `host.OnAppDisposing` key.'');", span="85-85", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n33 [label="Entry Unk.Register", span="", cluster="Unk.Register"];
n26 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n32 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
n27 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n34 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)"];
n35 [label="return builder.UseHangfireDashboard(''/hangfire'');", span="95-95", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)"];
n36 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)"];
n37 [label="Entry IAppBuilder.UseHangfireDashboard(string)", span="98-98", cluster="IAppBuilder.UseHangfireDashboard(string)"];
n38 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)"];
n39 [label="return builder.UseHangfireDashboard(pathMatch, new DashboardOptions());", span="102-102", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)"];
n40 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)"];
n41 [label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23", cluster="Hangfire.DashboardOptions.DashboardOptions()"];
n42 [label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", span="105-105", cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)"];
n43 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="105-105", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)"];
n44 [label="return builder.UseHangfireDashboard(pathMatch, options, JobStorage.Current);", span="110-110", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)"];
n45 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="105-105", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)"];
n46 [label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n47 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n48 [label="builder == null", span="119-119", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n50 [label="pathMatch == null", span="120-120", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n52 [label="options == null", span="121-121", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n54 [label="storage == null", span="122-122", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n56 [label="SignatureConversions.AddConversions(builder)", span="124-124", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n57 [label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="126-128", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n63 [label="subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes)", span="126-128", cluster="lambda expression"];
n58 [label="return builder;", span="130-130", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n49 [label="throw new ArgumentNullException(''builder'');", span="119-119", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n51 [label="throw new ArgumentNullException(''pathMatch'');", span="120-120", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n53 [label="throw new ArgumentNullException(''options'');", span="121-121", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n55 [label="throw new ArgumentNullException(''storage'');", span="122-122", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n60 [label="Entry Unk.AddConversions", span="", cluster="Unk.AddConversions"];
n61 [label="Entry Unk.Map", span="", cluster="Unk.Map"];
n62 [label="Entry lambda expression", span="126-128", cluster="lambda expression"];
n59 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)"];
n64 [label="Exit lambda expression", span="126-128", cluster="lambda expression"];
n65 [label="Entry Unk.UseOwin", span="", cluster="Unk.UseOwin"];
n66 [label="Entry System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", span="42-42", cluster="System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)"];
n67 [label="Entry Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="133-133", cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)"];
n68 [label="return middleware => builder.Use(middleware(builder.Properties));", span="135-135", cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)"];
n71 [label="builder.Use(middleware(builder.Properties))", span="135-135", cluster="lambda expression"];
n69 [label="Exit Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="133-133", cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)"];
n70 [label="Entry lambda expression", span="135-135", cluster="lambda expression"];
n72 [label="Exit lambda expression", span="135-135", cluster="lambda expression"];
n73 [label="Entry Unk.middleware", span="", cluster="Unk.middleware"];
n74 [label="Entry Unk.Use", span="", cluster="Unk.Use"];
m0_0 [label="Entry HangFire.States.DeletedState.DeletedState()", span="27-27", cluster="HangFire.States.DeletedState.DeletedState()", file="DeletedState.cs"];
m0_1 [label="DeletedAt = DateTime.UtcNow", span="29-29", cluster="HangFire.States.DeletedState.DeletedState()", file="DeletedState.cs"];
m0_2 [label="Exit HangFire.States.DeletedState.DeletedState()", span="27-27", cluster="HangFire.States.DeletedState.DeletedState()", file="DeletedState.cs"];
m0_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DeletedState.cs"];
m0_12 [label="Entry HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="66-66", cluster="HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs"];
m0_13 [label="transaction.DecrementCounter(''stats:deleted'')", span="68-68", cluster="HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs"];
m0_14 [label="Exit HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="66-66", cluster="HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs"];
m0_8 [label="Entry HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61", cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs"];
m0_9 [label="transaction.IncrementCounter(''stats:deleted'')", span="63-63", cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs"];
m0_10 [label="Exit HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61", cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs"];
m0_3 [label="Entry HangFire.States.DeletedState.SerializeData()", span="51-51", cluster="HangFire.States.DeletedState.SerializeData()", file="DeletedState.cs"];
m0_4 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''DeletedAt'', JobHelper.ToStringTimestamp(DeletedAt) }\r\n            };", span="53-56", cluster="HangFire.States.DeletedState.SerializeData()", color=red, community=0, file="DeletedState.cs"];
m0_5 [label="Exit HangFire.States.DeletedState.SerializeData()", span="51-51", cluster="HangFire.States.DeletedState.SerializeData()", file="DeletedState.cs"];
m0_11 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="DeletedState.cs"];
m0_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="DeletedState.cs"];
m0_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DeletedState.cs"];
m0_16 [label="HangFire.States.DeletedState", span="", file="DeletedState.cs"];
m1_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="DeletedStateFacts.cs"];
m1_0 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_1 [label="serverId == null", span="30-30", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_3 [label="storage == null", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_6 [label="ServerId = serverId", span="35-35", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_7 [label="Storage = storage", span="36-36", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_8 [label="CancellationToken = cancellationToken", span="37-37", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_2 [label="throw new ArgumentNullException(''serverId'');", span="30-30", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_4 [label="throw new ArgumentNullException(''storage'');", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_5 [label="ServerData = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_9 [label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs"];
m1_12 [label="Hangfire.Server.BackgroundProcessContext", span="", file="DeletedStateFacts.cs"];
m3_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs"];
m3_11 [label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="82-82", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_12 [label="var enqueuedState = context.NewState as EnqueuedState", span="84-84", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_15 [label="transaction.AddToQueue(enqueuedState.Queue, context.JobId)", span="92-92", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_13 [label="enqueuedState == null", span="85-85", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_14 [label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Enqueued state.'',\r\n                        typeof(Handler).FullName));", span="87-89", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_16 [label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="82-82", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_0 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs"];
m3_1 [label="Exit HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs"];
m3_20 [label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="95-95", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_21 [label="Exit HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="95-95", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m3_19 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="32-32", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="EnqueuedState.cs"];
m3_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EnqueuedState.cs"];
m3_10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs"];
m3_2 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m3_3 [label="EnqueuedAt = DateTime.UtcNow", span="38-38", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m3_4 [label="Queue = queue", span="39-39", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m3_5 [label="Exit HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m3_6 [label="Entry HangFire.States.EnqueuedState.SerializeData()", span="71-71", cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs"];
m3_7 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueuedAt'', JobHelper.ToStringTimestamp(EnqueuedAt) },\r\n                { ''Queue'', Queue }\r\n            };", span="73-77", cluster="HangFire.States.EnqueuedState.SerializeData()", color=red, community=0, file="EnqueuedState.cs"];
m3_8 [label="Exit HangFire.States.EnqueuedState.SerializeData()", span="71-71", cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs"];
m3_22 [label="HangFire.States.EnqueuedState", span="", file="EnqueuedState.cs"];
m5_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs"];
m5_0 [label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs"];
m5_3 [label="Exit HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs"];
m5_4 [label="HangFire.Web.StyleSheetHandler", span="", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m5_1 [label="ContentType = ''text/css''", span="32-32", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs"];
m5_2 [label="ContentEncoding = Encoding.UTF8", span="33-33", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs"];
m5_5 [label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs"];
m5_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedState.cs"];
m5_7 [label="Entry HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m5_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50", cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="FailedState.cs"];
m5_9 [label="Exit HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m5_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="FailedState.cs"];
m5_11 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="FailedState.cs"];
m5_14 [label="HangFire.States.FailedState", span="", file="FailedState.cs"];
m6_10 [label="Assert.Equal(FailedState.StateName, state.Name)", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m6_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_7 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedStateFacts.cs"];
m6_8 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m6_9 [label="var state = new FailedState(new Exception())", span="19-19", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m6_31 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_32 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_33 [label="Assert.Equal(''client'', exception.ParamName)", span="44-44", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_34 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_95 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_96 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_97 [label="Assert.Equal(''client'', exception.ParamName)", span="98-98", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_98 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_5 [label="new FailedState(null)", span="13-13", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_13 [label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_11 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m6_12 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_22 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs"];
m6_52 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_54 [label="Assert.Equal(''client'', exception.ParamName)", span="62-62", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_55 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_24 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FailedStateFacts.cs"];
m6_41 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="FailedStateFacts.cs"];
m6_194 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="FailedStateFacts.cs"];
m6_30 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_151 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106", cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="FailedStateFacts.cs"];
m6_176 [label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123", cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="FailedStateFacts.cs"];
m6_180 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_181 [label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_182 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_183 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_150 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="FailedStateFacts.cs"];
m6_67 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="FailedStateFacts.cs"];
m6_0 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs"];
m6_1 [label="_client = new Mock<IBackgroundJobClient>()", span="15-15", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs"];
m6_2 [label="_state = new Mock<IState>()", span="16-16", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs"];
m6_20 [label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="33-33", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m6_21 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m6_23 [label="Entry HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", file="FailedStateFacts.cs"];
m6_119 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_120 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_121 [label="Assert.Equal(''client'', exception.ParamName)", span="118-118", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_122 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_106 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_107 [label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_108 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_109 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_126 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="FailedStateFacts.cs"];
m6_169 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_170 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_171 [label="Assert.Equal(''client'', exception.ParamName)", span="158-158", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_172 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_14 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_17 [label="StaticMethod()", span="24-24", cluster="lambda expression", color=green, community=0, file="FailedStateFacts.cs"];
m6_15 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="FailedStateFacts.cs"];
m6_16 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_18 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_19 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="FailedStateFacts.cs"];
m6_193 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="FailedStateFacts.cs"];
m6_25 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedStateFacts.cs"];
m6_28 [label="Assert.False(state.IsFinal)", span="41-41", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs"];
m6_26 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs"];
m6_27 [label="var state = new FailedState(new Exception())", span="39-39", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs"];
m6_29 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37", cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs"];
m6_35 [label="Entry lambda expression", span="41-42", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_36 [label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_37 [label="Exit lambda expression", span="41-42", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_38 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_39 [label="x.InstanceMethod()", span="42-42", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_40 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_46 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_49 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_47 [label="x.InstanceMethod()", span="50-50", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_48 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_50 [label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_51 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_56 [label="Entry lambda expression", span="59-60", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_57 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_58 [label="Exit lambda expression", span="59-60", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_60 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_61 [label="StaticMethod()", span="60-60", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_62 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_68 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_71 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_69 [label="StaticMethod()", span="68-68", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_70 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_72 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_73 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_78 [label="Entry lambda expression", span="77-78", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_79 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_80 [label="Exit lambda expression", span="77-78", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_82 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_83 [label="x.InstanceMethod()", span="78-78", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_84 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_89 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_92 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_90 [label="x.InstanceMethod()", span="86-86", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_91 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_93 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_94 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_99 [label="Entry lambda expression", span="95-96", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_100 [label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_101 [label="Exit lambda expression", span="95-96", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_103 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_104 [label="StaticMethod()", span="96-96", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_105 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_110 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_113 [label="Entry lambda expression", span="106-108", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_111 [label="StaticMethod()", span="104-104", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_112 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_114 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_115 [label="Exit lambda expression", span="106-108", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_116 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_117 [label="state.Queue == ''critical''", span="108-108", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_118 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_123 [label="Entry lambda expression", span="115-116", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_124 [label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_125 [label="Exit lambda expression", span="115-116", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_127 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_128 [label="x.InstanceMethod()", span="116-116", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_129 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_134 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_137 [label="Entry lambda expression", span="126-128", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_135 [label="x.InstanceMethod()", span="124-124", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_136 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_138 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_139 [label="Exit lambda expression", span="126-128", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_140 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_141 [label="state.Queue == ''critical''", span="128-128", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_142 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_147 [label="Entry lambda expression", span="135-136", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_148 [label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_149 [label="Exit lambda expression", span="135-136", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_152 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_153 [label="StaticMethod()", span="136-136", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_154 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_160 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_163 [label="Entry lambda expression", span="146-148", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_161 [label="StaticMethod()", span="144-144", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_162 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_164 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_165 [label="Exit lambda expression", span="146-148", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_166 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_167 [label="state.EnqueueAt > DateTime.UtcNow", span="148-148", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_168 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_173 [label="Entry lambda expression", span="155-156", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_174 [label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_175 [label="Exit lambda expression", span="155-156", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_177 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_178 [label="x.InstanceMethod()", span="156-156", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_179 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_184 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_187 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_185 [label="x.InstanceMethod()", span="165-165", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_186 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_188 [label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_189 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_190 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_191 [label="state.EnqueueAt > DateTime.UtcNow", span="169-169", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_192 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="FailedStateFacts.cs"];
m6_74 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_75 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_76 [label="Assert.Equal(''client'', exception.ParamName)", span="80-80", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_77 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_85 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_86 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_87 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_88 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_42 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs"];
m6_43 [label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs"];
m6_44 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs"];
m6_45 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs"];
m6_81 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateFacts.cs"];
m6_63 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs"];
m6_64 [label="_client.Object.Enqueue(() => StaticMethod())", span="68-68", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs"];
m6_65 [label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs"];
m6_66 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs"];
m6_159 [label="Entry Unk.Schedule", span="", cluster="Unk.Schedule", file="FailedStateFacts.cs"];
m6_3 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs"];
m6_155 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_156 [label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_157 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_158 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs"];
m6_102 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="FailedStateFacts.cs"];
m6_59 [label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="FailedStateFacts.cs"];
m6_143 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_144 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_145 [label="Assert.Equal(''client'', exception.ParamName)", span="138-138", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_146 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs"];
m6_130 [label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_131 [label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_132 [label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_133 [label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs"];
m6_195 [label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span="", file="FailedStateFacts.cs"];
m7_219 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_220 [label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="270-271", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_221 [label="var worker = CreateWorker()", span="273-273", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_222 [label="worker.Execute(_token)", span="276-276", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_223 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="279-282", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_224 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_16 [label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="FetchedJobsPage.generated.cs"];
m7_23 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="FetchedJobsPage.generated.cs"];
m7_62 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs"];
m7_63 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, null, _process.Object, _stateMachineFactory.Object))", span="73-74", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs"];
m7_64 [label="Assert.Equal(''storage'', exception.ParamName)", span="76-76", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs"];
m7_65 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs"];
m7_111 [label="Entry Unk.DeleteJobFromQueue", span="", cluster="Unk.DeleteJobFromQueue", file="FetchedJobsPage.generated.cs"];
m7_57 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FetchedJobsPage.generated.cs"];
m7_90 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="FetchedJobsPage.generated.cs"];
m7_27 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="FetchedJobsPage.generated.cs"];
m7_112 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_113 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="126-130", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_114 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="132-133", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_115 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="135-139", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_116 [label="var worker = CreateWorker()", span="141-141", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_117 [label="worker.Execute(_token)", span="144-144", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_118 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs"];
m7_225 [label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33", cluster="HangFire.Common.JobLoadException.JobLoadException()", file="FetchedJobsPage.generated.cs"];
m7_126 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="FetchedJobsPage.generated.cs"];
m7_183 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_184 [label="var exception = new InvalidOperationException()", span="228-228", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_185 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="229-231", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_188 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="239-242", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_186 [label="var worker = CreateWorker()", span="233-233", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_187 [label="worker.Execute(_token)", span="236-236", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_189 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs"];
m7_190 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="FetchedJobsPage.generated.cs"];
m7_209 [label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="FetchedJobsPage.generated.cs"];
m7_22 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="FetchedJobsPage.generated.cs"];
m7_52 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="FetchedJobsPage.generated.cs"];
m7_234 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="FetchedJobsPage.generated.cs"];
m7_172 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_173 [label="var worker = CreateWorker()", span="214-214", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_174 [label="worker.Execute(_token)", span="216-216", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_175 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="218-221", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_176 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_31 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="FetchedJobsPage.generated.cs"];
m7_18 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="FetchedJobsPage.generated.cs"];
m7_119 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="FetchedJobsPage.generated.cs"];
m7_202 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_203 [label="var exception = new InvalidOperationException()", span="249-249", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_204 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="250-252", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_207 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="260-263", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_205 [label="var worker = CreateWorker()", span="254-254", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_206 [label="worker.Execute(_token)", span="257-257", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_208 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs"];
m7_141 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_142 [label="var worker = CreateWorker()", span="165-165", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_143 [label="worker.Execute(_token)", span="167-167", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_144 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="169-174", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_145 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_0 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_1 [label="_queues = new[] { ''default'' }", span="26-26", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_2 [label="_context = new WorkerContext(''server'', _queues, 1)", span="27-27", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_3 [label="_process = new Mock<IJobPerformanceProcess>()", span="28-28", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_4 [label="_storage = new Mock<JobStorage>()", span="30-30", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_5 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_6 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_7 [label="_processingJob = new ProcessingJob(''my-job'', ''my-queue'')", span="35-35", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_8 [label="_connection.Setup(x => x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob)", span="37-38", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_9 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="40-40", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_10 [label="_stateMachine = new Mock<IStateMachine>()", span="41-41", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_11 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="43-44", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_12 [label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="46-49", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_13 [label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="51-55", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_14 [label="_token = new CancellationToken()", span="58-58", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_15 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs"];
m7_20 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="FetchedJobsPage.generated.cs"];
m7_98 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="FetchedJobsPage.generated.cs"];
m7_152 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs"];
m7_153 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="181-186", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs"];
m7_154 [label="var worker = CreateWorker()", span="188-188", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs"];
m7_155 [label="worker.Execute(_token)", span="191-191", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs"];
m7_156 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="194-196", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs"];
m7_157 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs"];
m7_36 [label="Entry Unk.FetchNextJob", span="", cluster="Unk.FetchNextJob", file="FetchedJobsPage.generated.cs"];
m7_83 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs"];
m7_84 [label="var worker = CreateWorker()", span="100-100", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs"];
m7_85 [label="worker.Execute(_token)", span="102-102", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs"];
m7_86 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="104-104", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs"];
m7_87 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="105-105", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs"];
m7_88 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs"];
m7_191 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="FetchedJobsPage.generated.cs"];
m7_44 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="FetchedJobsPage.generated.cs"];
m7_229 [label="Entry lambda expression", span="279-282", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_37 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_41 [label="Entry lambda expression", span="46-49", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_45 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_49 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_29 [label="x.GetConnection()", span="33-33", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_33 [label="x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>())", span="37-37", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_38 [label="x.Create(_connection.Object)", span="43-43", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_39 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_42 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())", span="46-49", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_43 [label="Exit lambda expression", span="46-49", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_46 [label="x.GetJobData(_processingJob.JobId)", span="51-51", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_47 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_50 [label="Method()", span="54-54", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_51 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_58 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_59 [label="new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="65-65", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_60 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_66 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_67 [label="new Worker(_context, null, _process.Object, _stateMachineFactory.Object)", span="74-74", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_68 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_73 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_74 [label="new Worker(_context, _storage.Object, null, _stateMachineFactory.Object)", span="83-83", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_75 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_80 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_81 [label="new Worker(_context, _storage.Object, _process.Object, null)", span="92-92", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_82 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_92 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_95 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_93 [label="x.GetConnection()", span="104-104", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_94 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_96 [label="x.Dispose()", span="105-105", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_97 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_105 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_108 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_106 [label="x.FetchNextJob(_queues, _token)", span="116-116", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_107 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_109 [label="x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue)", span="119-119", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_110 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_120 [label="Entry lambda expression", span="127-128", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_123 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_127 [label="Entry lambda expression", span="136-137", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_121 [label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="127-128", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_122 [label="Exit lambda expression", span="127-128", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_124 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="132-132", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_125 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_128 [label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="136-137", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_129 [label="Exit lambda expression", span="136-137", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_135 [label="Entry lambda expression", span="156-159", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_136 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>())", span="156-159", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_137 [label="Exit lambda expression", span="156-159", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_138 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_139 [label="state.ServerName == _context.ServerName", span="158-158", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_140 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_146 [label="Entry lambda expression", span="169-174", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_147 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="169-174", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_148 [label="Exit lambda expression", span="169-174", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_149 [label="Entry lambda expression", span="173-174", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_150 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="173-174", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_151 [label="Exit lambda expression", span="173-174", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_158 [label="Entry lambda expression", span="182-185", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_161 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_159 [label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="182-185", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_160 [label="Exit lambda expression", span="182-185", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_162 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="195-195", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_163 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_169 [label="Entry lambda expression", span="206-208", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_170 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="206-208", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_171 [label="Exit lambda expression", span="206-208", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_177 [label="Entry lambda expression", span="218-221", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_178 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="218-221", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_179 [label="Exit lambda expression", span="218-221", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_180 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_181 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="221-221", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_182 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_196 [label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="239-242", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_199 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="241-241", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_192 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_195 [label="Entry lambda expression", span="239-242", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_193 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="230-230", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_194 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_197 [label="Exit lambda expression", span="239-242", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_198 [label="Entry lambda expression", span="241-241", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_200 [label="Exit lambda expression", span="241-241", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_214 [label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="260-263", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_217 [label="state.Exception == exception && state.Reason == ''hello''", span="262-262", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_210 [label="Entry lambda expression", span="251-251", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_213 [label="Entry lambda expression", span="260-263", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_211 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_212 [label="Exit lambda expression", span="251-251", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_215 [label="Exit lambda expression", span="260-263", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_216 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_218 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_226 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_227 [label="x.GetJobData(_processingJob.JobId)", span="270-270", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_228 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_230 [label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="279-282", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_231 [label="Exit lambda expression", span="279-282", cluster="lambda expression", file="FetchedJobsPage.generated.cs"];
m7_61 [label="Entry Worker.cstr", span="", cluster="Worker.cstr", file="FetchedJobsPage.generated.cs"];
m7_130 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_131 [label="var worker = CreateWorker()", span="152-152", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_132 [label="worker.Execute(_token)", span="154-154", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_133 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>()))", span="156-159", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_134 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs"];
m7_99 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs"];
m7_100 [label="var worker = CreateWorker()", span="111-111", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs"];
m7_101 [label="worker.Execute(_token)", span="113-113", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs"];
m7_102 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_queues, _token),\r\n                Times.Once)", span="115-117", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs"];
m7_103 [label="_connection.Verify(x => x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue))", span="119-119", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs"];
m7_104 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs"];
m7_76 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs"];
m7_77 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, _process.Object, null))", span="91-92", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs"];
m7_78 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="94-94", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs"];
m7_79 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs"];
m7_89 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="FetchedJobsPage.generated.cs"];
m7_232 [label="return new Worker(_context, _storage.Object, _process.Object, _stateMachineFactory.Object);", span="287-287", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="FetchedJobsPage.generated.cs"];
m7_233 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="FetchedJobsPage.generated.cs"];
m7_91 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FetchedJobsPage.generated.cs"];
m7_201 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="FetchedJobsPage.generated.cs"];
m7_69 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs"];
m7_70 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, null, _stateMachineFactory.Object))", span="82-83", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs"];
m7_71 [label="Assert.Equal(''process'', exception.ParamName)", span="85-85", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs"];
m7_72 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs"];
m7_53 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs"];
m7_54 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object))", span="64-65", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs"];
m7_55 [label="Assert.Equal(''context'', exception.ParamName)", span="67-67", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs"];
m7_56 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs"];
m7_25 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="FetchedJobsPage.generated.cs"];
m7_24 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="FetchedJobsPage.generated.cs"];
m7_26 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FetchedJobsPage.generated.cs"];
m7_40 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="FetchedJobsPage.generated.cs"];
m7_21 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="FetchedJobsPage.generated.cs"];
m7_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="FetchedJobsPage.generated.cs"];
m7_48 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="FetchedJobsPage.generated.cs"];
m7_17 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="FetchedJobsPage.generated.cs"];
m7_164 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs"];
m7_165 [label="var worker = CreateWorker()", span="202-202", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs"];
m7_166 [label="worker.Execute(_token)", span="204-204", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs"];
m7_167 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="206-208", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs"];
m7_168 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs"];
m7_235 [label="HangFire.Core.Tests.Server.WorkerFacts", span="", file="FetchedJobsPage.generated.cs"];
m7_236 [label=exception, span="", file="FetchedJobsPage.generated.cs"];
m7_237 [label=exception, span="", file="FetchedJobsPage.generated.cs"];
m8_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcher.cs"];
m8_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcher.cs"];
m9_48 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_49 [label="Perform.Async<TestJob>()", span="71-71", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_50 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="73-79", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_51 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="81-81", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_52 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_133 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_134 [label="Perform.In<TestJob>(TimeSpan.FromDays(1), new { Greeting = ''Hello'' })", span="178-178", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_135 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="180-186", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_136 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="188-188", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_137 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_138 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="FetchedJobsWatcherFacts.cs"];
m9_63 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_64 [label="Perform.Async<TestJob>(new { ArticleId = 3 })", span="87-87", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_65 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n               Times.Once)", span="89-95", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_66 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="97-97", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_67 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85", cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_38 [label="Entry HangFire.Perform.Async(System.Type, object)", span="31-31", cluster="HangFire.Perform.Async(System.Type, object)", file="FetchedJobsWatcherFacts.cs"];
m9_95 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_96 [label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { Count = long.MaxValue })", span="126-126", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_97 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="128-134", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_98 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="136-136", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_99 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_53 [label="Entry HangFire.Perform.Async<TJob>()", span="13-13", cluster="HangFire.Perform.Async<TJob>()", file="FetchedJobsWatcherFacts.cs"];
m9_114 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="FetchedJobsWatcherFacts.cs"];
m9_173 [label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1));", span="221-223", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="FetchedJobsWatcherFacts.cs"];
m9_174 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="FetchedJobsWatcherFacts.cs"];
m9_118 [label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_119 [label="Perform.In<TestJob>(TimeSpan.FromDays(1))", span="162-162", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_120 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="164-170", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_121 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="172-172", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_122 [label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160", cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_30 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_31 [label="Perform.Async(null)", span="42-42", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_32 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_68 [label="Entry HangFire.Perform.Async<TJob>(object)", span="20-20", cluster="HangFire.Perform.Async<TJob>(object)", file="FetchedJobsWatcherFacts.cs"];
m9_107 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs"];
m9_108 [label="Perform.In(TimeSpan.FromDays(-1), typeof(TestJob))", span="142-142", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs"];
m9_109 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>()))", span="144-149", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs"];
m9_110 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs"];
m9_20 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="FetchedJobsWatcherFacts.cs"];
m9_162 [label="return It.Is<EnqueuedState>(y => y.Queue == ''default'');", span="209-209", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="FetchedJobsWatcherFacts.cs"];
m9_163 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="FetchedJobsWatcherFacts.cs"];
m9_81 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="FetchedJobsWatcherFacts.cs"];
m9_100 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="FetchedJobsWatcherFacts.cs"];
m9_80 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="FetchedJobsWatcherFacts.cs"];
m9_8 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_9 [label="Perform.Async(typeof (TestJob))", span="25-25", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_10 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="27-33", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_11 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="35-35", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_12 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_19 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="FetchedJobsWatcherFacts.cs"];
m9_157 [label="return It.Is<Type>(y => y == typeof (TestJob));", span="204-204", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="FetchedJobsWatcherFacts.cs"];
m9_158 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="FetchedJobsWatcherFacts.cs"];
m9_45 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_46 [label="Perform.Async(null, new { Greeting = ''Hello'' })", span="65-65", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_47 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_123 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="FetchedJobsWatcherFacts.cs"];
m9_172 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FetchedJobsWatcherFacts.cs"];
m9_152 [label="Entry System.Guid.Parse(string)", span="0-0", cluster="System.Guid.Parse(string)", file="FetchedJobsWatcherFacts.cs"];
m9_29 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="FetchedJobsWatcherFacts.cs"];
m9_115 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_116 [label="Perform.In(TimeSpan.FromDays(1), null, new { Count = 1 })", span="156-156", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_117 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_0 [label="Entry HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs"];
m9_1 [label="_jobClientMock = new Mock<IJobClient> { CallBase = false }", span="16-16", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs"];
m9_2 [label="Perform.CreateJobClientCallback \r\n                = () => _jobClientMock.Object", span="18-19", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs"];
m9_3 [label="Exit HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14", cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs"];
m9_13 [label="Entry HangFire.Perform.Async(System.Type)", span="26-26", cluster="HangFire.Perform.Async(System.Type)", file="FetchedJobsWatcherFacts.cs"];
m9_175 [label="Entry lambda expression", span="223-223", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_5 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_6 [label="_jobClientMock.Object", span="19-19", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_7 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_15 [label="Entry lambda expression", span="28-32", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_16 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="28-32", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_17 [label="Exit lambda expression", span="28-32", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_23 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_24 [label="y == null", span="32-32", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_25 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_27 [label="x.Dispose()", span="35-35", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_39 [label="Entry lambda expression", span="51-55", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_42 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_40 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="51-55", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_41 [label="Exit lambda expression", span="51-55", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_43 [label="x.Dispose()", span="58-58", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_44 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_54 [label="Entry lambda expression", span="74-78", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_60 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_55 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="74-78", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_56 [label="Exit lambda expression", span="74-78", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_57 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_58 [label="y == null", span="78-78", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_59 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_61 [label="x.Dispose()", span="81-81", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_62 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_69 [label="Entry lambda expression", span="90-94", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_72 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_70 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="90-94", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_71 [label="Exit lambda expression", span="90-94", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_73 [label="x.Dispose()", span="97-97", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_74 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_82 [label="Entry lambda expression", span="106-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_89 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_83 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="106-110", cluster="lambda expression", color=red, community=0, file="FetchedJobsWatcherFacts.cs"];
m9_84 [label="Exit lambda expression", span="106-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_86 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_87 [label="y == null", span="110-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_88 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_90 [label="x.Dispose()", span="113-113", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_91 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_101 [label="Entry lambda expression", span="129-133", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_104 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_102 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="129-133", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_103 [label="Exit lambda expression", span="129-133", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_105 [label="x.Dispose()", span="136-136", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_106 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_111 [label="Entry lambda expression", span="145-149", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_112 [label="x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>())", span="145-149", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_113 [label="Exit lambda expression", span="145-149", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_124 [label="Entry lambda expression", span="165-169", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_130 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_125 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="165-169", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_126 [label="Exit lambda expression", span="165-169", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_127 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_128 [label="y == null", span="169-169", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_129 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_131 [label="x.Dispose()", span="172-172", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_132 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_139 [label="Entry lambda expression", span="181-185", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_142 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_140 [label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="181-185", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_141 [label="Exit lambda expression", span="181-185", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_143 [label="x.Dispose()", span="188-188", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_144 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_149 [label="var guid = Guid.Parse(actual)", span="195-195", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_154 [label="validator(x)", span="199-199", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_153 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_148 [label="Entry lambda expression", span="193-197", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_150 [label="return guid != Guid.Empty;", span="196-196", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_151 [label="Exit lambda expression", span="193-197", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_155 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_159 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_160 [label="y == typeof (TestJob)", span="204-204", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_161 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_164 [label="Entry lambda expression", span="209-209", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_165 [label="y.Queue == ''default''", span="209-209", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_166 [label="Exit lambda expression", span="209-209", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_169 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_170 [label="DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2)", span="216-216", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_171 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_176 [label="DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1)", span="223-223", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_177 [label="Exit lambda expression", span="223-223", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m9_33 [label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_34 [label="Perform.Async(typeof (TestJob), new { Greeting = ''Hello'' })", span="48-48", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_35 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="50-56", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_36 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="58-58", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_37 [label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46", cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_92 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_93 [label="Perform.In(TimeSpan.FromDays(1), null)", span="120-120", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_94 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs"];
m9_85 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="FetchedJobsWatcherFacts.cs"];
m9_167 [label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2));", span="214-216", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="FetchedJobsWatcherFacts.cs"];
m9_168 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="FetchedJobsWatcherFacts.cs"];
m9_18 [label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs"];
m9_145 [label="Func<string, bool> validator = actual =>\r\n                {\r\n                    var guid = Guid.Parse(actual);\r\n                    return guid != Guid.Empty;\r\n                }", span="193-197", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs"];
m9_146 [label="return It.Is<string>(x => validator(x));", span="199-199", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs"];
m9_147 [label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191", cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs"];
m9_156 [label="Entry Unk.validator", span="", cluster="Unk.validator", file="FetchedJobsWatcherFacts.cs"];
m9_22 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="FetchedJobsWatcherFacts.cs"];
m9_4 [label="Entry Mock<IJobClient>.cstr", span="", cluster="Mock<IJobClient>.cstr", file="FetchedJobsWatcherFacts.cs"];
m9_14 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FetchedJobsWatcherFacts.cs"];
m9_75 [label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_76 [label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="103-103", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_77 [label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="105-111", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", color=red, community=0, file="FetchedJobsWatcherFacts.cs"];
m9_78 [label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="113-113", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_79 [label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101", cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs"];
m9_178 [label="HangFire.Tests.UnitTests.PerformTests", span="", file="FetchedJobsWatcherFacts.cs"];
m9_179 [label=validator, span="", file="FetchedJobsWatcherFacts.cs"];
m10_77 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="HtmlHelper.cs"];
m10_16 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_26 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_25 [label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_28 [label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_29 [label="_jobCreator.CreateJob(context)", span="55-55", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_17 [label="String.IsNullOrEmpty(jobId)", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_19 [label="jobType == null", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_21 [label="state == null", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_23 [label="args == null", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_27 [label="var jobParameters = CreateJobParameters(jobType, args)", span="50-50", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_30 [label="return jobId;", span="57-57", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_18 [label="throw new ArgumentNullException(''jobId'');", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_20 [label="throw new ArgumentNullException(''jobType'');", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_22 [label="throw new ArgumentNullException(''state'');", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_24 [label="throw new ArgumentNullException(''args'');", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_32 [label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_31 [label=Exception, span="59-59", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_33 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_37 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="HtmlHelper.cs"];
m10_75 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="HtmlHelper.cs"];
m10_43 [label="Entry HangFire.Client.JobClient.Dispose()", span="65-65", cluster="HangFire.Client.JobClient.Dispose()", file="HtmlHelper.cs"];
m10_44 [label="_redis.Dispose()", span="67-67", cluster="HangFire.Client.JobClient.Dispose()", file="HtmlHelper.cs"];
m10_45 [label="Exit HangFire.Client.JobClient.Dispose()", span="65-65", cluster="HangFire.Client.JobClient.Dispose()", file="HtmlHelper.cs"];
m10_38 [label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_47 [label="var job = new Dictionary<string, string>()", span="73-73", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_48 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_49 [label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_50 [label="job[''State''] = String.Empty", span="76-76", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_51 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_52 [label="return job;", span="79-79", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_53 [label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m10_35 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="HtmlHelper.cs"];
m10_73 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="HtmlHelper.cs"];
m10_55 [label="Entry HangFire.JobHelper.ToJson(object)", span="40-40", cluster="HangFire.JobHelper.ToJson(object)", file="HtmlHelper.cs"];
m10_56 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="HtmlHelper.cs"];
m10_71 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="HtmlHelper.cs"];
m10_2 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_7 [label="_redis = redisManager.GetClient()", span="23-23", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_8 [label="_jobCreator = jobCreator", span="24-24", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_5 [label="jobCreator == null", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_3 [label="redisManager == null", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_6 [label="throw new ArgumentNullException(''jobCreator'');", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_4 [label="throw new ArgumentNullException(''redisManager'');", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_9 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs"];
m10_74 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="HtmlHelper.cs"];
m10_11 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="HtmlHelper.cs"];
m10_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HtmlHelper.cs"];
m10_76 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="HtmlHelper.cs"];
m10_72 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="HtmlHelper.cs"];
m10_34 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="HtmlHelper.cs"];
m10_46 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="HtmlHelper.cs"];
m10_41 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="HtmlHelper.cs"];
m10_42 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="HtmlHelper.cs"];
m10_15 [label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs"];
m10_57 [label="var result = new Dictionary<string, string>()", span="84-84", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_58 [label="obj == null", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_59 [label="return result;", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_68 [label="result.Add(descriptor.Name, value)", span="110-110", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs"];
m10_69 [label="return result;", span="113-113", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs"];
m10_60 [label="TypeDescriptor.GetProperties(obj)", span="87-87", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_61 [label="var propertyValue = descriptor.GetValue(obj)", span="89-89", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_67 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_62 [label="string value = null", span="90-90", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_63 [label="propertyValue != null", span="92-92", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_64 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_65 [label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs"];
m10_66 [label=Exception, span="99-99", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs"];
m10_70 [label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs"];
m10_40 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="HtmlHelper.cs"];
m10_36 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="HtmlHelper.cs"];
m10_0 [label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="HtmlHelper.cs"];
m10_1 [label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="HtmlHelper.cs"];
m10_12 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="HtmlHelper.cs"];
m10_13 [label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="HtmlHelper.cs"];
m10_14 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="HtmlHelper.cs"];
m10_39 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="HtmlHelper.cs"];
m10_78 [label="HangFire.Client.JobClient", span="", file="HtmlHelper.cs"];
m11_31 [label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_39 [label=i, span="91-91", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_40 [label=0, span="93-93", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_42 [label=1, span="95-95", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_44 [label=2, span="97-97", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_41 [label="return LogLevel.Debug;", span="94-94", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_43 [label="return LogLevel.Info;", span="96-96", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_45 [label="return LogLevel.Warn;", span="98-98", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_47 [label="return LogLevel.Error;", span="101-101", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_46 [label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs"];
m11_61 [label="Entry System.Random.Next(int, int)", span="0-0", cluster="System.Random.Next(int, int)", file="Job.cs"];
m11_57 [label="Entry System.Random.Random(int)", span="0-0", cluster="System.Random.Random(int)", file="Job.cs"];
m11_38 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="Job.cs"];
m11_10 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="Job.cs"];
m11_29 [label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26", cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_60 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="Job.cs"];
m11_30 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Job.cs"];
m11_12 [label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_13 [label="var i = 0", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_15 [label="_innerProcess.Execute(context)", span="57-57", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_25 [label="context.CancellationToken.WaitHandle.WaitOne(nextTry)", span="83-83", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_26 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="84-84", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_14 [label="i <= MaxRetryAttempts", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_20 [label="i >= MaxRetryAttempts - 1", span="67-67", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_22 [label="var nextTry = DelayCallback(i)", span="69-69", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_23 [label="var logLevel = GetLogLevel(i)", span="70-70", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_24 [label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_27 [label="i++", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_16 [label="return;", span="58-58", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_17 [label=OperationCanceledException, span="60-60", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_18 [label="throw;", span="62-62", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_19 [label=Exception, span="64-64", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_21 [label="throw;", span="67-67", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_28 [label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs"];
m11_63 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Job.cs"];
m11_34 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Job.cs"];
m11_32 [label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="Job.cs"];
m11_48 [label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Job.cs"];
m11_49 [label="return _innerProcess.ToString();", span="106-106", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Job.cs"];
m11_50 [label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Job.cs"];
m11_35 [label="Entry lambda expression", span="74-79", cluster="lambda expression", file="Job.cs"];
m11_36 [label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79", cluster="lambda expression", file="Job.cs"];
m11_37 [label="Exit lambda expression", span="74-79", cluster="lambda expression", file="Job.cs"];
m11_62 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)", file="Job.cs"];
m11_58 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="Job.cs"];
m11_11 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="Job.cs"];
m11_59 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()", file="Job.cs"];
m11_33 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="Job.cs"];
m11_52 [label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs"];
m11_53 [label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="112-112", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs"];
m11_54 [label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="113-114", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs"];
m11_55 [label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="116-116", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs"];
m11_56 [label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs"];
m11_0 [label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_1 [label="innerProcess == null", span="32-32", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_3 [label="_innerProcess = innerProcess", span="34-34", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_2 [label="throw new ArgumentNullException(''innerProcess'');", span="32-32", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_4 [label="_logger = LogProvider.GetLogger(_innerProcess.GetType())", span="35-35", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_5 [label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="37-37", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_6 [label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="38-38", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_7 [label="DelayCallback = GetBackOffMultiplier", span="39-39", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_8 [label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs"];
m11_51 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="Job.cs"];
m11_64 [label="Hangfire.Server.AutomaticRetryProcess", span="", file="Job.cs"];
m11_65 [label=i, span="", file="Job.cs"];
m11_66 [label=nextTry, span="", file="Job.cs"];
m12_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobDetailsPage1.generated.cs"];
m12_35 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobDetailsPage1.generated.cs"];
m12_23 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_24 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_28 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_29 [label="!_parameters.ContainsKey(name)", span="107-107", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_30 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_31 [label="_parameters[name] = serializedValue", span="113-113", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_25 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_26 [label=_jobWasCreated, span="100-100", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_32 [label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs"];
m12_46 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobDetailsPage1.generated.cs"];
m12_53 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="JobDetailsPage1.generated.cs"];
m12_0 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs"];
m12_1 [label="Items = context.Items", span="40-40", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs"];
m12_2 [label="JobId = context.JobId", span="41-41", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs"];
m12_3 [label="_jobWasCreated = context._jobWasCreated", span="42-42", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs"];
m12_4 [label="_parameters = context._parameters", span="43-43", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs"];
m12_5 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs"];
m12_45 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_38 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_39 [label="String.IsNullOrWhiteSpace(name)", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_41 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_43 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_40 [label="throw new ArgumentNullException(''name'');", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_42 [label=Exception, span="139-139", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_44 [label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs"];
m12_33 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="JobDetailsPage1.generated.cs"];
m12_6 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_7 [label="connection == null", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_9 [label="stateMachineFactory == null", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_11 [label="job == null", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_13 [label="initialState == null", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_15 [label="_stateMachineFactory = stateMachineFactory", span="57-57", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_16 [label="Connection = connection", span="59-59", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_17 [label="Job = job", span="60-60", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_18 [label="InitialState = initialState", span="61-61", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_8 [label="throw new ArgumentNullException(''connection'');", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_12 [label="throw new ArgumentNullException(''job'');", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_14 [label="throw new ArgumentNullException(''initialState'');", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_19 [label="Items = new Dictionary<string, object>()", span="63-63", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_20 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_54 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="JobDetailsPage1.generated.cs"];
m12_48 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs"];
m12_49 [label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs"];
m12_50 [label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs"];
m12_51 [label="_jobWasCreated = true", span="152-152", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs"];
m12_52 [label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs"];
m12_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs"];
m12_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobDetailsPage1.generated.cs"];
m12_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs"];
m12_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobDetailsPage1.generated.cs"];
m12_55 [label="HangFire.Client.CreateContext", span="", file="JobDetailsPage1.generated.cs"];
m13_14 [label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFacts.cs"];
m13_15 [label="context.Transaction.RemoveFromSet(''schedule'', context.JobId)", span="54-54", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFacts.cs"];
m13_16 [label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFacts.cs"];
m13_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFacts.cs"];
m13_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="JobFacts.cs"];
m13_1 [label="EnqueueAt = enqueueAt", span="29-29", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="JobFacts.cs"];
m13_2 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="JobFacts.cs"];
m13_12 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="JobFacts.cs"];
m13_3 [label="Entry HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="JobFacts.cs"];
m13_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="37-41", cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="JobFacts.cs"];
m13_5 [label="Exit HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="JobFacts.cs"];
m13_17 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobFacts.cs"];
m13_13 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="JobFacts.cs"];
m13_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFacts.cs"];
m13_8 [label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs"];
m13_9 [label="var timestamp = long.Parse(stateData[''EnqueueAt''])", span="48-48", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs"];
m13_10 [label="context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="49-49", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs"];
m13_11 [label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs"];
m13_18 [label="HangFire.States.ScheduledState", span="", file="JobFacts.cs"];
m14_20 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="JobHelper.cs"];
m14_21 [label="return FromTimestamp(long.Parse(value));", span="57-57", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", color=red, community=0, file="JobHelper.cs"];
m14_22 [label="Exit HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="JobHelper.cs"];
m14_0 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs"];
m14_1 [label="return value != null \r\n                ? JsonConvert.SerializeObject(value)\r\n                : null;", span="25-27", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs"];
m14_2 [label="Exit HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs"];
m14_19 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JobHelper.cs"];
m14_23 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="JobHelper.cs"];
m14_24 [label="Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60", cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="JobHelper.cs"];
m14_25 [label="String.IsNullOrEmpty(value)", span="62-62", cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="JobHelper.cs", color=green, community=0];
m14_27 [label="return DeserializeDateTime(value);", span="67-67", cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=green, community=0, file="JobHelper.cs"];
m14_26 [label="return null;", span="64-64", cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="JobHelper.cs", color=green, community=0];
m14_28 [label="Exit HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60", cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="JobHelper.cs"];
m14_8 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs"];
m14_9 [label="TimeSpan elapsedTime = value - Epoch", span="41-41", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs"];
m14_10 [label="return (long)elapsedTime.TotalSeconds;", span="42-42", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs"];
m14_11 [label="Exit HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs"];
m14_4 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs"];
m14_5 [label="return value != null \r\n                ? JsonConvert.DeserializeObject<T>(value)\r\n                : default(T);", span="32-34", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs"];
m14_6 [label="Exit HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs"];
m14_15 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="JobHelper.cs"];
m14_29 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobHelper.cs"];
m14_3 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JobHelper.cs"];
m14_12 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelper.cs"];
m14_13 [label="return Epoch.AddSeconds(value);", span="47-47", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelper.cs"];
m14_14 [label="Exit HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelper.cs"];
m14_16 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelper.cs"];
m14_17 [label="return ToTimestamp(value).ToString();", span="52-52", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", color=red, community=0, file="JobHelper.cs"];
m14_18 [label="Exit HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelper.cs"];
m15_22 [label="Entry HangFire.JobActivator.JobActivator()", span="4-4", cluster="HangFire.JobActivator.JobActivator()", file="JobHelperFacts.cs"];
m15_31 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="JobHelperFacts.cs"];
m15_51 [label="Entry HangFire.Server.JobServer.RunServer()", span="98-98", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_52 [label="AnnounceServer()", span="102-102", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_53 [label="StartServer()", span="103-103", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_55 [label="Heartbeat()", span="107-107", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_56 [label="_stopped.WaitOne(HeartbeatInterval)", span="109-109", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_57 [label="StopServer()", span="115-115", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_58 [label="RemoveServer(_redis, _context.ServerName)", span="116-116", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_60 [label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="120-120", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_54 [label=true, span="105-105", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_59 [label=Exception, span="118-118", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_61 [label="Exit HangFire.Server.JobServer.RunServer()", span="98-98", cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs"];
m15_0 [label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m15_1 [label="_redis = redisManager.GetClient()", span="41-41", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m15_4 [label="_queues = queues", span="45-45", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m15_2 [label="_redisManager = redisManager", span="43-43", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m15_3 [label="_workerCount = workerCount", span="44-44", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m15_5 [label="_pollInterval = pollInterval", span="46-46", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", color=green, community=0];
m15_6 [label="queues == null", span="48-48", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m15_7 [label="Entry HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="JobHelperFacts.cs"];
m15_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50", cluster="HangFire.States.FailedState.SerializeData()", file="JobHelperFacts.cs", color=red, community=0];
m15_11 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", color=green, community=0, file="JobHelperFacts.cs"];
m15_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHelperFacts.cs"];
m15_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", color=green, community=0, file="JobHelperFacts.cs"];
m15_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JobHelperFacts.cs"];
m15_9 [label="Exit HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", file="JobHelperFacts.cs"];
m15_14 [label="HangFire.States.FailedState", span="", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m15_89 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="JobHelperFacts.cs"];
m15_20 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobHelperFacts.cs"];
m15_26 [label="Entry HangFire.Server.JobServer.Dispose()", span="70-70", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m15_27 [label="_stopped.Set()", span="72-72", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m15_28 [label="_serverThread.Join()", span="73-73", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m15_29 [label="Exit HangFire.Server.JobServer.Dispose()", span="70-70", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m15_42 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="JobHelperFacts.cs"];
m15_25 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="JobHelperFacts.cs"];
m15_96 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="JobHelperFacts.cs"];
m15_81 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="JobHelperFacts.cs"];
m15_85 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobHelperFacts.cs"];
m15_88 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelperFacts.cs"];
m15_41 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="JobHelperFacts.cs"];
m15_109 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="JobHelperFacts.cs"];
m15_87 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JobHelperFacts.cs"];
m15_18 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobHelperFacts.cs"];
m15_19 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobHelperFacts.cs"];
m15_38 [label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10", cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobHelperFacts.cs"];
m15_30 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="JobHelperFacts.cs"];
m15_63 [label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151", cluster="HangFire.Server.JobServer.Heartbeat()", file="JobHelperFacts.cs"];
m15_94 [label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="153-156", cluster="HangFire.Server.JobServer.Heartbeat()", file="JobHelperFacts.cs"];
m15_95 [label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151", cluster="HangFire.Server.JobServer.Heartbeat()", file="JobHelperFacts.cs"];
m15_99 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", span="167-169", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs"];
m15_65 [label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs"];
m15_97 [label="var transaction = redis.CreateTransaction()", span="161-161", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs"];
m15_98 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", span="163-165", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs"];
m15_100 [label="transaction.Commit()", span="171-171", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs"];
m15_101 [label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs"];
m15_44 [label="Entry HangFire.Server.JobServer.StopServer()", span="89-89", cluster="HangFire.Server.JobServer.StopServer()", file="JobHelperFacts.cs"];
m15_45 [label="_serverWatchdog.Dispose()", span="91-91", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobHelperFacts.cs"];
m15_46 [label="_fetchedJobsWatcher.Dispose()", span="92-92", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobHelperFacts.cs"];
m15_47 [label="_schedulePoller.Dispose()", span="93-93", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobHelperFacts.cs"];
m15_48 [label="_manager.Dispose()", span="94-94", cluster="HangFire.Server.JobServer.StopServer()", file="JobHelperFacts.cs"];
m15_49 [label="Exit HangFire.Server.JobServer.StopServer()", span="89-89", cluster="HangFire.Server.JobServer.StopServer()", file="JobHelperFacts.cs"];
m15_23 [label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="13-13", cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobHelperFacts.cs"];
m15_15 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="JobHelperFacts.cs"];
m15_50 [label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23", cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobHelperFacts.cs"];
m15_93 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="JobHelperFacts.cs"];
m15_62 [label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_67 [label="var transaction = _redis.CreateTransaction()", span="126-126", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_68 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="128-129", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_69 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="131-137", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_70 [label=_queues, span="139-139", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_72 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="142-144", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_73 [label="transaction.Commit()", span="147-147", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_71 [label="var queue1 = queue", span="141-141", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_74 [label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m15_105 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="JobHelperFacts.cs"];
m15_66 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobHelperFacts.cs"];
m15_17 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="JobHelperFacts.cs"];
m15_32 [label="Entry HangFire.Server.JobServer.StartServer()", span="76-76", cluster="HangFire.Server.JobServer.StartServer()", file="JobHelperFacts.cs"];
m15_33 [label="_manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", span="78-82", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="JobHelperFacts.cs"];
m15_34 [label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", span="84-84", cluster="HangFire.Server.JobServer.StartServer()", file="JobHelperFacts.cs"];
m15_35 [label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", span="85-85", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="JobHelperFacts.cs"];
m15_36 [label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", span="86-86", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="JobHelperFacts.cs"];
m15_37 [label="Exit HangFire.Server.JobServer.StartServer()", span="76-76", cluster="HangFire.Server.JobServer.StartServer()", file="JobHelperFacts.cs"];
m15_106 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_79 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="128-129", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_83 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="131-137", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_91 [label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="142-144", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_78 [label="Entry lambda expression", span="128-129", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_80 [label="Exit lambda expression", span="128-129", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_82 [label="Entry lambda expression", span="131-137", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_84 [label="Exit lambda expression", span="131-137", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_90 [label="Entry lambda expression", span="142-144", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_92 [label="Exit lambda expression", span="142-144", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_103 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", span="163-165", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_107 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", span="167-169", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_102 [label="Entry lambda expression", span="163-165", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_104 [label="Exit lambda expression", span="163-165", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_108 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="JobHelperFacts.cs"];
m15_77 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobHelperFacts.cs"];
m15_64 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobHelperFacts.cs"];
m15_21 [label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9", cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobHelperFacts.cs"];
m15_40 [label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="JobHelperFacts.cs"];
m15_43 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="JobHelperFacts.cs"];
m15_76 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobHelperFacts.cs"];
m15_39 [label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="JobHelperFacts.cs"];
m15_75 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="JobHelperFacts.cs"];
m15_24 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobHelperFacts.cs"];
m15_110 [label="HangFire.Server.JobServer", span="", file="JobHelperFacts.cs"];
m15_111 [label=queue1, span="", file="JobHelperFacts.cs"];
m15_112 [label=string, span="", file="JobHelperFacts.cs"];
m18_14 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="ProcessingState.cs"];
m18_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs"];
m18_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_1 [label="String.IsNullOrWhiteSpace(serverId)", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_3 [label="ServerId = serverId", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_5 [label="WorkerNumber = workerNumber", span="33-33", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_2 [label="throw new ArgumentNullException(''serverId'');", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_4 [label="StartedAt = DateTime.UtcNow", span="32-32", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_6 [label="Exit HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs"];
m18_9 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="45-45", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m18_10 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.SerializeDateTime(StartedAt) },\r\n                { ''ServerId'', ServerId },\r\n                { ''WorkerNumber'', WorkerNumber.ToString(CultureInfo.InvariantCulture) }\r\n            };", span="47-52", cluster="HangFire.States.ProcessingState.SerializeData()", color=green, community=0, file="ProcessingState.cs"];
m18_11 [label="Exit HangFire.States.ProcessingState.SerializeData()", span="45-45", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m18_7 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs"];
m18_13 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ProcessingState.cs"];
m18_15 [label="HangFire.States.ProcessingState", span="", file="ProcessingState.cs"];
m20_15 [label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="QueuesPage.generated.cs"];
m20_16 [label="return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(\r\n                JobId, name));", span="64-65", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="QueuesPage.generated.cs"];
m20_17 [label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="QueuesPage.generated.cs"];
m20_10 [label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="QueuesPage.generated.cs"];
m20_11 [label="Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="59-59", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="QueuesPage.generated.cs"];
m20_12 [label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="QueuesPage.generated.cs"];
m20_13 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="QueuesPage.generated.cs"];
m20_18 [label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8", cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="QueuesPage.generated.cs"];
m20_19 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="QueuesPage.generated.cs"];
m20_14 [label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7", cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="QueuesPage.generated.cs"];
m20_0 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_1 [label="candidateState == null", span="32-32", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_3 [label="connection == null", span="33-33", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_5 [label="CandidateState = candidateState", span="35-35", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_6 [label="CurrentState = currentState", span="36-36", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_7 [label="Connection = connection", span="37-37", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_2 [label="throw new ArgumentNullException(''candidateState'');", span="32-32", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_4 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_8 [label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs"];
m20_20 [label="HangFire.Common.States.StateChangingContext", span="", file="QueuesPage.generated.cs"];
m21_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobScheduler.cs"];
m21_40 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="132-132", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_41 [label="_innerServer != null", span="134-134", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_42 [label="_innerServer.Dispose()", span="136-136", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_44 [label="_cts.Cancel()", span="140-140", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_45 [label="!_bootstrapTask.Wait(ShutdownTimeout)", span="142-142", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_47 [label="Logger.Info(''Hangfire Server stopped.'')", span="147-147", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_43 [label="return;", span="137-137", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_46 [label="Logger.WarnFormat(''Hangfire Server takes too long to shutdown. Performing ungraceful shutdown.'')", span="144-144", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_48 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="132-132", cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs"];
m21_34 [label="Entry Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", span="227-227", cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs"];
m21_113 [label="return new InfiniteLoopProcess(new AutomaticRetryProcess(process));", span="229-229", cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs"];
m21_114 [label="Exit Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", span="227-227", cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs"];
m21_28 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m21_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs"];
m21_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs"];
m21_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs"];
m21_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs"];
m21_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs"];
m21_82 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobScheduler.cs"];
m21_51 [label="Entry Hangfire.Logging.ILog.WarnFormat(string, params object[])", span="270-270", cluster="Hangfire.Logging.ILog.WarnFormat(string, params object[])", file="RecurringJobScheduler.cs"];
m21_55 [label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", span="155-155", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="RecurringJobScheduler.cs"];
m21_56 [label="return StartNew(storage, new BackgroundJobServerOptions());", span="157-157", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="RecurringJobScheduler.cs"];
m21_57 [label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", span="155-155", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="RecurringJobScheduler.cs"];
m21_52 [label="Entry Hangfire.BackgroundJobServer.StartNew()", span="150-150", cluster="Hangfire.BackgroundJobServer.StartNew()", file="RecurringJobScheduler.cs"];
m21_53 [label="return StartNew(JobStorage.Current);", span="152-152", cluster="Hangfire.BackgroundJobServer.StartNew()", file="RecurringJobScheduler.cs"];
m21_54 [label="Exit Hangfire.BackgroundJobServer.StartNew()", span="150-150", cluster="Hangfire.BackgroundJobServer.StartNew()", file="RecurringJobScheduler.cs"];
m21_107 [label="Entry Hangfire.Server.WorkerContext.WorkerContext(string[], int)", span="27-27", cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", file="RecurringJobScheduler.cs"];
m21_49 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobScheduler.cs"];
m21_112 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs"];
m21_9 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="RecurringJobScheduler.cs"];
m21_62 [label="return StartNew(storage, options, Enumerable.Empty<IBackgroundProcess>());", span="169-169", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_63 [label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_110 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobScheduler.cs"];
m21_83 [label="Entry Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", span="208-208", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_94 [label="throw new ArgumentNullException(''options'');", span="210-210", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_95 [label="var processes = new List<ILongRunningProcess>()", span="212-212", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_93 [label="options == null", span="210-210", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_97 [label="i < options.WorkerCount", span="214-214", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_98 [label="processes.Add(new Worker(new WorkerContext(options.Queues, i + 1)))", span="216-216", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_101 [label="processes.Add(new SchedulePoller(options.SchedulePollingInterval))", span="220-220", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_102 [label="processes.Add(new ServerWatchdog(options.ServerWatchdogOptions))", span="221-221", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_96 [label="var i = 0", span="214-214", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_100 [label="processes.Add(new ServerHeartbeat())", span="219-219", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_103 [label="processes.Add(new RecurringJobScheduler())", span="222-222", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_104 [label="return processes;", span="224-224", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_99 [label="i++", span="214-214", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_105 [label="Exit Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", span="208-208", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_120 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="RecurringJobScheduler.cs"];
m21_115 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs"];
m21_10 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RecurringJobScheduler.cs"];
m21_6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobScheduler.cs"];
m21_7 [label="_innerServer = StartNew(storage, options)", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobScheduler.cs"];
m21_8 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobScheduler.cs"];
m21_29 [label="Entry Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", span="232-232", cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="RecurringJobScheduler.cs"];
m21_117 [label="return String.Format(\r\n                ''{0}:{1}:{2}'',\r\n                Environment.MachineName.ToLowerInvariant(),\r\n                Process.GetCurrentProcess().Id,\r\n                Guid.NewGuid());", span="234-238", cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="RecurringJobScheduler.cs"];
m21_118 [label="Exit Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", span="232-232", cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="RecurringJobScheduler.cs"];
m21_88 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs"];
m21_59 [label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", span="160-160", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_60 [label="return StartNew(JobStorage.Current, options);", span="162-162", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_61 [label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", span="160-160", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs"];
m21_50 [label="Entry System.Threading.Tasks.Task.Wait(System.TimeSpan)", span="0-0", cluster="System.Threading.Tasks.Task.Wait(System.TimeSpan)", file="RecurringJobScheduler.cs"];
m21_122 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="RecurringJobScheduler.cs"];
m21_86 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs"];
m21_89 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs"];
m21_87 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="RecurringJobScheduler.cs"];
m21_65 [label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="172-172", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_80 [label="return new BackgroundJobServer(storage, processes, serverData)\r\n            {\r\n                ShutdownTimeout = options.ShutdownTimeout\r\n            };", span="197-200", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_76 [label="var serverData = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="186-190", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_79 [label="options.WriteToLog(Logger)", span="195-195", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_72 [label="var processes = new List<ILongRunningProcess>()", span="181-181", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_66 [label="storage == null", span="177-177", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_68 [label="options == null", span="178-178", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_70 [label="additionalProcesses == null", span="179-179", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_73 [label="processes.AddRange(GetDefaultProcesses(options))", span="182-182", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_74 [label="processes.AddRange(storage.GetComponents())", span="183-183", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_75 [label="processes.AddRange(additionalProcesses)", span="184-184", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_77 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="192-192", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_78 [label="storage.WriteOptionsToLog(Logger)", span="194-194", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_67 [label="throw new ArgumentNullException(''storage'');", span="177-177", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_69 [label="throw new ArgumentNullException(''options'');", span="178-178", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_71 [label="throw new ArgumentNullException(''additionalProcesses'');", span="179-179", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_81 [label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="172-172", cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs"];
m21_32 [label="Entry ServerBootstrapper.cstr", span="", cluster="ServerBootstrapper.cstr", file="RecurringJobScheduler.cs"];
m21_58 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs"];
m21_11 [label="Entry lambda expression", span="23-25", cluster="lambda expression", file="RecurringJobScheduler.cs"];
m21_12 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="23-25", cluster="lambda expression", file="RecurringJobScheduler.cs"];
m21_13 [label="Exit lambda expression", span="23-25", cluster="lambda expression", file="RecurringJobScheduler.cs"];
m21_119 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="RecurringJobScheduler.cs"];
m21_33 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RecurringJobScheduler.cs"];
m21_84 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RecurringJobScheduler.cs"];
m21_31 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="RecurringJobScheduler.cs"];
m21_121 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="RecurringJobScheduler.cs"];
m21_108 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobScheduler.cs"];
m21_14 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", span="99-99", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_85 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()", file="RecurringJobScheduler.cs"];
m21_106 [label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="35-35", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="RecurringJobScheduler.cs"];
m21_90 [label="Entry Hangfire.BackgroundJobServer.GetDefaultProcesses()", span="203-203", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="RecurringJobScheduler.cs"];
m21_91 [label="return GetDefaultProcesses(new BackgroundJobServerOptions());", span="205-205", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="RecurringJobScheduler.cs"];
m21_92 [label="Exit Hangfire.BackgroundJobServer.GetDefaultProcesses()", span="203-203", cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="RecurringJobScheduler.cs"];
m21_35 [label="Entry Hangfire.Server.ILongRunningProcess.CreateTask(Hangfire.Server.BackgroundProcessContext)", span="48-48", cluster="Hangfire.Server.ILongRunningProcess.CreateTask(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs"];
m21_116 [label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs"];
m21_111 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="RecurringJobScheduler.cs"];
m21_22 [label=serverData, span="109-109", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RecurringJobScheduler.cs"];
m21_21 [label="var context = new BackgroundProcessContext(GetGloballyUniqueServerId(), storage, _cts.Token)", span="108-108", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_23 [label="context.ServerData.Add(item.Key, item.Value)", span="111-111", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RecurringJobScheduler.cs"];
m21_24 [label="Logger.Info(''Starting Hangfire Server'')", span="114-114", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_15 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", span="", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_17 [label=string, span="", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_19 [label="serverData == null", span="106-106", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_25 [label="_bootstrapTask = WrapProcess(new ServerBootstrapper(processes.Select(WrapProcess)))\r\n                .CreateTask(context)", span="116-117", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_16 [label=string, span="", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_18 [label=enqueueJobSql, span="", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_20 [label="throw new ArgumentNullException(''serverData'');", span="106-106", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_26 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", span="99-99", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs"];
m21_30 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs"];
m21_109 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="20-20", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", file="RecurringJobScheduler.cs"];
m21_64 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="RecurringJobScheduler.cs"];
m21_123 [label="Hangfire.BackgroundJobServer", span="", file="RecurringJobScheduler.cs"];
m22_106 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_22 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_270 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_271 [label="var stateMachine = CreateStateMachineMock()", span="317-317", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_274 [label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_275 [label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_276 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_272 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_273 [label="var electedState = new Mock<IState>()", span="319-319", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_277 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs"];
m22_136 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_137 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="RecurringJobSchedulerFacts.cs"];
m22_138 [label="var disposableMock = new Mock<IDisposable>()", span="166-166", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="RecurringJobSchedulerFacts.cs"];
m22_128 [label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="RecurringJobSchedulerFacts.cs"];
m22_129 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_131 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_132 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="160-160", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_130 [label="var stateMachine = CreateStateMachine()", span="155-155", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m22_133 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_134 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_135 [label="stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_13 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_14 [label="Console.WriteLine(''Hello'')", span="30-30", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_15 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_45 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="RecurringJobSchedulerFacts.cs"];
m22_161 [label="Entry Unk.False", span="", cluster="Unk.False", file="RecurringJobSchedulerFacts.cs"];
m22_90 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_107 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs"];
m22_71 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_72 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="RecurringJobSchedulerFacts.cs"];
m22_73 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs"];
m22_74 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs"];
m22_75 [label="_parameters.Add(''Name'', ''Value'')", span="98-98", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs"];
m22_315 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_320 [label="_handlers.Add(handler1.Object)", span="364-364", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_321 [label="_handlers.Add(handler2.Object)", span="365-365", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_322 [label="var stateMachine = CreateStateMachine()", span="367-367", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_324 [label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_325 [label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_316 [label="var handler1 = new Mock<IStateHandler>()", span="358-358", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_319 [label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_318 [label="var handler2 = new Mock<IStateHandler>()", span="361-361", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_323 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_317 [label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_326 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs"];
m22_91 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_92 [label="d[''Name''] == ''Value''", span="106-106", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_93 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_94 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="RecurringJobSchedulerFacts.cs"];
m22_235 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_236 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_237 [label="var stateMachine = CreateStateMachineMock()", span="286-286", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_238 [label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_239 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_240 [label="Assert.False(result)", span="297-297", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_241 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs"];
m22_103 [label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_3 [label="_state = new Mock<IState>()", span="32-32", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_124 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_125 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_126 [label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_127 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_148 [label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="249-249", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="RecurringJobSchedulerFacts.cs"];
m22_144 [label="var filter = table.Rows[i][''Filter'']", span="243-243", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_121 [label="var stateMachine = CreateStateMachine()", span="144-144", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_117 [label="stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_118 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_119 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="RecurringJobSchedulerFacts.cs"];
m22_120 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_56 [label="x[''Value'']", span="96-96", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_57 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_58 [label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="RecurringJobSchedulerFacts.cs"];
m22_59 [label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="RecurringJobSchedulerFacts.cs"];
m22_60 [label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="RecurringJobSchedulerFacts.cs"];
m22_46 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_47 [label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_48 [label="When(''I create a job'')", span="97-97", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_49 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_50 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="RecurringJobSchedulerFacts.cs"];
m22_105 [label="sc.JobId == JobId && sc.Job == _job", span="118-118", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_179 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="RecurringJobSchedulerFacts.cs"];
m22_38 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_327 [label="Entry Mock<IStateHandler>.cstr", span="", cluster="Mock<IStateHandler>.cstr", file="RecurringJobSchedulerFacts.cs"];
m22_165 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="RecurringJobSchedulerFacts.cs"];
m22_85 [label="Entry lambda expression", span="104-107", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_26 [label="Exit lambda expression", span="37-40", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_27 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="RecurringJobSchedulerFacts.cs"];
m22_28 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="RecurringJobSchedulerFacts.cs"];
m22_29 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_31 [label="Assert.Equal(''connection'', exception.ParamName)", span="49-49", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_32 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_33 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RecurringJobSchedulerFacts.cs"];
m22_76 [label="var stateMachine = CreateStateMachine()", span="100-100", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs"];
m22_284 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="RecurringJobSchedulerFacts.cs"];
m22_242 [label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33", cluster="HangFire.Common.JobLoadException.JobLoadException()", file="RecurringJobSchedulerFacts.cs"];
m22_34 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_108 [label="var stateMachine = CreateStateMachine()", span="126-126", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m22_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="RecurringJobSchedulerFacts.cs"];
m22_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs"];
m22_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs"];
m22_151 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_95 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs"];
m22_96 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="RecurringJobSchedulerFacts.cs"];
m22_97 [label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_98 [label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_139 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="RecurringJobSchedulerFacts.cs"];
m22_140 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="237-237", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_141 [label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="239-239", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_142 [label="var i = 0", span="241-241", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_143 [label="i < table.RowCount", span="241-241", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_122 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="RecurringJobSchedulerFacts.cs"];
m22_123 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="RecurringJobSchedulerFacts.cs"];
m22_190 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_191 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_192 [label="var stateMachine = CreateStateMachineMock()", span="232-232", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_194 [label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_195 [label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="240-240", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_193 [label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_196 [label="Assert.False(result)", span="241-241", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_197 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs"];
m22_152 [label="HangFire.Tests.JobClientSteps", span="", cluster="Unk.Dispose", file="RecurringJobSchedulerFacts.cs"];
m22_87 [label="Exit lambda expression", span="104-107", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_88 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_89 [label="j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_330 [label="Entry lambda expression", span="359-359", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_39 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_42 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_40 [label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_41 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_43 [label="new StateMachine(_connection.Object, null, _filters)", span="56-56", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_44 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_52 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_55 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="RecurringJobSchedulerFacts.cs"];
m22_53 [label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_54 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_113 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_114 [label="Assert.Equal(''jobId'', exception.ParamName)", span="138-138", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_115 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobSchedulerFacts.cs"];
m22_86 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", color=green, community=0, file="RecurringJobSchedulerFacts.cs"];
m22_35 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs"];
m22_62 [label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs"];
m22_70 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs"];
m22_101 [label=_arguments, span="186-186", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_229 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_267 [label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_282 [label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_303 [label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_340 [label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_344 [label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_25 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="RecurringJobSchedulerFacts.cs"];
m22_163 [label="x.GetJobData(It.IsAny<string>())", span="180-180", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_170 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="193-193", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_188 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="217-217", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_205 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="233-233", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_208 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="240-240", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_226 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="258-258", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_247 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_286 [label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_306 [label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_17 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="RecurringJobSchedulerFacts.cs"];
m22_20 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="RecurringJobSchedulerFacts.cs"];
m22_24 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="RecurringJobSchedulerFacts.cs"];
m22_36 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs"];
m22_61 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs"];
m22_63 [label=Exception, span="113-113", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs"];
m22_69 [label="_exception = ex", span="128-128", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs"];
m22_100 [label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_102 [label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_104 [label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_116 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="RecurringJobSchedulerFacts.cs"];
m22_145 [label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="244-244", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_162 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_166 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_180 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_183 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_198 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_201 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_219 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_222 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_228 [label="Entry lambda expression", span="266-269", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_230 [label="Exit lambda expression", span="266-269", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_231 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_243 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_266 [label="Entry lambda expression", span="309-310", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_268 [label="Exit lambda expression", span="309-310", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_281 [label="Entry lambda expression", span="322-323", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_283 [label="Exit lambda expression", span="322-323", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_302 [label="Entry lambda expression", span="339-340", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_304 [label="Exit lambda expression", span="339-340", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_339 [label="Entry lambda expression", span="375-381", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_341 [label="Exit lambda expression", span="375-381", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_343 [label="Entry lambda expression", span="376-380", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_345 [label="Exit lambda expression", span="376-380", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_82 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="RecurringJobSchedulerFacts.cs"];
m22_149 [label="Assert.IsNull(_exception)", span="251-251", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="RecurringJobSchedulerFacts.cs"];
m22_169 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_207 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_246 [label="Entry lambda expression", span="292-295", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_285 [label="Entry lambda expression", span="328-329", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_305 [label="Entry lambda expression", span="346-350", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_164 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_171 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_209 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_225 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_227 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_248 [label="Exit lambda expression", span="292-295", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_249 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_252 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_287 [label="Exit lambda expression", span="328-329", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_307 [label="Exit lambda expression", span="346-350", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_308 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_311 [label="Entry lambda expression", span="350-350", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_19 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="RecurringJobSchedulerFacts.cs"];
m22_18 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="RecurringJobSchedulerFacts.cs"];
m22_21 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="RecurringJobSchedulerFacts.cs"];
m22_147 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="237-237", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_146 [label="i++", span="241-241", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs"];
m22_168 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_167 [label="x.GetJobData(''1'')", span="190-190", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_182 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_181 [label="x.GetJobData(''1'')", span="201-201", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_185 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_184 [label="Console.WriteLine()", span="205-205", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_200 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_199 [label="x.GetJobData(''1'')", span="225-225", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_203 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_202 [label="Console.WriteLine()", span="229-229", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_221 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_220 [label="x.GetJobData(''1'')", span="249-249", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_224 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_223 [label="Console.WriteLine()", span="253-253", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_233 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_232 [label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_245 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_244 [label="x.GetJobData(''1'')", span="278-278", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_263 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_278 [label="Entry lambda expression", span="318-318", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_299 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_309 [label="s.Exception == exception", span="348-348", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_333 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_336 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_84 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="RecurringJobSchedulerFacts.cs"];
m22_83 [label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="RecurringJobSchedulerFacts.cs"];
m22_150 [label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="249-249", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="RecurringJobSchedulerFacts.cs"];
m22_251 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_250 [label="sc.JobId == ''1'' && sc.Job == null", span="293-293", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_254 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_253 [label="s.Exception != null", span="294-294", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_310 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_313 [label="Exit lambda expression", span="350-350", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_312 [label="!f.Any()", span="350-350", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_265 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_264 [label="Console.WriteLine()", span="304-304", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_280 [label="Exit lambda expression", span="318-318", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_279 [label="Console.WriteLine()", span="318-318", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_301 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_300 [label="Console.WriteLine()", span="336-336", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_335 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_334 [label="x.StateName", span="362-362", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_337 [label="Console.WriteLine()", span="368-368", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_338 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="RecurringJobSchedulerFacts.cs"];
m22_8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs"];
m22_234 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="RecurringJobSchedulerFacts.cs"];
m22_64 [label="_exception = ex", span="115-115", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs"];
m22_65 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs"];
m22_66 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs"];
m22_67 [label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs"];
m22_68 [label=Exception, span="126-126", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs", color=red, community=0];
m22_0 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_1 [label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_2 [label="_parameters = new Dictionary<string, string>()", span="31-31", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs"];
m22_314 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="RecurringJobSchedulerFacts.cs"];
m22_342 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="RecurringJobSchedulerFacts.cs"];
m22_153 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_154 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_155 [label="var stateMachine = CreateStateMachineMock()", span="183-183", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_156 [label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_158 [label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_159 [label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_157 [label="Assert.False(result)", span="189-189", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_160 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs"];
m22_262 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="RecurringJobSchedulerFacts.cs"];
m22_5 [label="_connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_6 [label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_7 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs"];
m22_111 [label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="RecurringJobSchedulerFacts.cs"];
m22_112 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs"];
m22_288 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_289 [label="var stateMachine = CreateStateMachineMock()", span="335-335", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_292 [label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_293 [label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_294 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_290 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_291 [label="var exception = new NotSupportedException()", span="337-337", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_295 [label="Assert.False(result)", span="351-351", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_296 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs"];
m22_77 [label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs"];
m22_78 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", color=green, community=0];
m22_79 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs"];
m22_80 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobSchedulerFacts.cs"];
m22_81 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs"];
m22_297 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="RecurringJobSchedulerFacts.cs"];
m22_109 [label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs"];
m22_110 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs"];
m22_328 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RecurringJobSchedulerFacts.cs"];
m22_51 [label="Entry Unk.When", span="", cluster="Unk.When", file="RecurringJobSchedulerFacts.cs"];
m22_346 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="RecurringJobSchedulerFacts.cs"];
m22_347 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="RecurringJobSchedulerFacts.cs"];
m22_4 [label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="RecurringJobSchedulerFacts.cs"];
m22_172 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_173 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_174 [label="var stateMachine = CreateStateMachineMock()", span="208-208", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_175 [label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_177 [label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_176 [label="Assert.False(result)", span="215-215", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_178 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs"];
m22_16 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="RecurringJobSchedulerFacts.cs"];
m22_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs"];
m22_350 [label="Entry Mock<StateMachine>.cstr", span="", cluster="Mock<StateMachine>.cstr", file="RecurringJobSchedulerFacts.cs"];
m22_99 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs"];
m22_348 [label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="RecurringJobSchedulerFacts.cs"];
m22_349 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="RecurringJobSchedulerFacts.cs"];
m22_210 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_211 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_212 [label="var stateMachine = CreateStateMachineMock()", span="256-256", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_214 [label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_215 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_213 [label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_216 [label="Assert.True(result)", span="271-271", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_217 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs"];
m22_255 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_256 [label="var stateMachine = CreateStateMachineMock()", span="303-303", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_258 [label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_259 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_257 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_260 [label="Assert.True(result)", span="311-311", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_261 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs"];
m22_298 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="RecurringJobSchedulerFacts.cs"];
m22_23 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="RecurringJobSchedulerFacts.cs"];
m22_218 [label="Entry Unk.True", span="", cluster="Unk.True", file="RecurringJobSchedulerFacts.cs"];
m22_186 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs"];
m22_269 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="RecurringJobSchedulerFacts.cs"];
m22_329 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="RecurringJobSchedulerFacts.cs"];
m22_351 [label="HangFire.Core.Tests.States.StateMachineFacts", span="", file="RecurringJobSchedulerFacts.cs"];
m22_357 [label=stateMachine, span="", file="RecurringJobSchedulerFacts.cs"];
m22_352 [label=stateMachine, span="", file="RecurringJobSchedulerFacts.cs"];
m22_353 [label=stateMachine, span="", file="RecurringJobSchedulerFacts.cs"];
m22_354 [label=stateMachine, span="", file="RecurringJobSchedulerFacts.cs"];
m22_355 [label=stateMachine, span="", file="RecurringJobSchedulerFacts.cs"];
m22_358 [label=context, span="", file="RecurringJobSchedulerFacts.cs"];
m22_359 [label=context, span="", file="RecurringJobSchedulerFacts.cs"];
m22_361 [label=context, span="", file="RecurringJobSchedulerFacts.cs"];
m22_363 [label=context, span="", file="RecurringJobSchedulerFacts.cs"];
m22_360 [label=electedState, span="", file="RecurringJobSchedulerFacts.cs"];
m22_362 [label=exception, span="", file="RecurringJobSchedulerFacts.cs"];
m22_356 [label=stateMachine, span="", file="RecurringJobSchedulerFacts.cs"];
m23_25 [label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", span="40-40", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs"];
m23_20 [label="dto.LastJobState = stateData.Name", span="52-52", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_32 [label="Assert.False(state.IsFinal)", span="49-49", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="RecurringJobsPage.cs"];
m23_17 [label="dto.LastJobId = hash[''LastJobId'']", span="47-47", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_5 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_28 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsPage.cs"];
m23_30 [label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="RecurringJobsPage.cs"];
m23_31 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobsPage.cs"];
m23_33 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobsPage.cs"];
m23_29 [label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobsPage.cs"];
m23_11 [label="dto.Job = invocationData.Deserialize()", span="33-33", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_34 [label="Entry Unk.False", span="", cluster="Unk.False", file="RecurringJobsPage.cs"];
m23_0 [label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_1 [label="RecurringJobs = new List<RecurringJobDto>()", span="11-11", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_2 [label="var connection = JobStorage.Current.GetConnection()", span="13-13", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_3 [label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_35 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobsPage.cs"];
m23_36 [label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="RecurringJobsPage.cs"];
m23_37 [label="HangFire.Web.Pages.RecurringJobsPage", span="", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="RecurringJobsPage.cs"];
m23_38 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="RecurringJobsPage.cs"];
m23_18 [label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_19 [label="stateData != null", span="50-50", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs"];
m23_15 [label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", span="30-30", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="RecurringJobsPage.cs"];
m23_8 [label="var state = new ScheduledState(date)", span="21-21", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs"];
m23_14 [label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", span="29-29", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs"];
m23_16 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs"];
m23_22 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="RecurringJobsPage.cs"];
m23_21 [label="Entry Unk.True", span="", cluster="Unk.True", file="RecurringJobsPage.cs"];
m23_23 [label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs"];
m23_4 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="RecurringJobsPage.cs"];
m23_6 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs"];
m23_9 [label="Assert.Equal(date, state.EnqueueAt)", span="22-22", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs"];
m23_10 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs"];
m23_13 [label="var state = new ScheduledState(TimeSpan.FromDays(1))", span="28-28", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs"];
m23_7 [label="var date = new DateTime(2012, 12, 12)", span="20-20", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs"];
m23_12 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs"];
m23_24 [label="var data = state.SerializeData()", span="38-38", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs"];
m23_26 [label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs"];
m23_27 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs"];
m25_3 [label="Entry HangFire.Redis.RedisConnection.Dispose()", span="39-39", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m25_4 [label="Redis.Dispose()", span="41-41", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m25_5 [label="Exit HangFire.Redis.RedisConnection.Dispose()", span="39-39", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m25_168 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs"];
m25_25 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="95-98", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="RedisConnection.cs"];
m25_12 [label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_13 [label="string jobId", span="51-51", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_16 [label="cancellationToken.ThrowIfCancellationRequested()", span="57-57", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_17 [label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_18 [label="queueName = queues[queueIndex]", span="60-60", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_14 [label="string queueName", span="52-52", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_15 [label="var queueIndex = 0", span="53-53", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_21 [label="queueIndex == 0", span="65-65", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_19 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_20 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_26 [label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_22 [label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_23 [label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_24 [label="jobId == null", span="78-78", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_27 [label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs"];
m25_35 [label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisConnection.cs"];
m25_36 [label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisConnection.cs"];
m25_37 [label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisConnection.cs"];
m25_58 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs"];
m25_98 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisConnection.cs"];
m25_131 [label="Entry Unk.GetAllItemsFromSortedSet", span="", cluster="Unk.GetAllItemsFromSortedSet", file="RedisConnection.cs"];
m25_50 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_39 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_40 [label="var jobId = Guid.NewGuid().ToString()", span="118-118", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_41 [label="var invocationData = InvocationData.Serialize(job)", span="120-120", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_42 [label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_47 [label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(createdAt))", span="128-128", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m25_49 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_52 [label="return jobId;", span="144-144", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_43 [label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_44 [label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_45 [label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_46 [label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_48 [label="var transaction = Redis.CreateTransaction()", span="130-130", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_51 [label="transaction.Commit()", span="141-141", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_53 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs"];
m25_64 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisConnection.cs"];
m25_133 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs"];
m25_134 [label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs"];
m25_135 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs"];
m25_226 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs"];
m25_96 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisConnection.cs"];
m25_102 [label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_103 [label="jobId == null", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_105 [label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_104 [label="throw new ArgumentNullException(''jobId'');", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_106 [label="entries.Count == 0", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_108 [label="var stateData = new Dictionary<string, string>(entries)", span="213-213", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_111 [label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_107 [label="return null;", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_109 [label="stateData.Remove(''State'')", span="214-214", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_110 [label="stateData.Remove(''Reason'')", span="215-215", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_112 [label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs"];
m25_114 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr", file="RedisConnection.cs"];
m25_225 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="RedisConnection.cs"];
m25_11 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="RedisConnection.cs"];
m25_33 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisConnection.cs"];
m25_130 [label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107", cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisConnection.cs"];
m25_163 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisConnection.cs"];
m25_193 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_194 [label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_205 [label="utcNow > maxTime.Add(timeOut)", span="361-361", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_195 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_198 [label=serverNames, span="337-337", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_196 [label="var utcNow = DateTime.UtcNow", span="333-333", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_200 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="341-349", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", color=red, community=0, file="RedisConnection.cs"];
m25_203 [label=heartbeats, span="356-356", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_197 [label="var pipeline = Redis.CreatePipeline()", span="335-335", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_201 [label="pipeline.Flush()", span="352-352", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_199 [label="var name = serverName", span="339-339", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_202 [label="var removedServerCount = 0", span="355-355", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_207 [label="removedServerCount++", span="364-364", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_208 [label="return removedServerCount;", span="368-368", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_204 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_206 [label="RemoveServer(Redis, heartbeat.Key)", span="363-363", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_209 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m25_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisConnection.cs"];
m25_30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="RedisConnection.cs"];
m25_191 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="322-325", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", color=red, community=0, file="RedisConnection.cs"];
m25_190 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m25_192 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m25_189 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="RedisConnection.cs"];
m25_179 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m25_176 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m25_177 [label="var transaction = redis.CreateTransaction()", span="306-306", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m25_178 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m25_180 [label="transaction.Commit()", span="316-316", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m25_181 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m25_7 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m25_8 [label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m25_9 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m25_101 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RedisConnection.cs"];
m25_120 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs"];
m25_121 [label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs"];
m25_122 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs"];
m25_68 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="RedisConnection.cs"];
m25_55 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="RedisConnection.cs"];
m25_138 [label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_139 [label="key == null", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_141 [label="keyValuePairs == null", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_143 [label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_140 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_142 [label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_144 [label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs"];
m25_212 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="RedisConnection.cs"];
m25_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m25_10 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs"];
m25_227 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RedisConnection.cs"];
m25_215 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs"];
m25_116 [label="Entry HangFire.Storage.StateData.StateData()", span="21-21", cluster="HangFire.Storage.StateData.StateData()", file="RedisConnection.cs"];
m25_151 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_152 [label="var transaction = Redis.CreateTransaction()", span="274-274", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_153 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_154 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="279-285", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", color=red, community=0, file="RedisConnection.cs"];
m25_155 [label="context.Queues", span="287-287", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_157 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_158 [label="transaction.Commit()", span="295-295", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_156 [label="var queue1 = queue", span="289-289", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_159 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs"];
m25_167 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnection.cs"];
m25_224 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs"];
m25_34 [label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30", cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="RedisConnection.cs"];
m25_57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisConnection.cs"];
m25_172 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RedisConnection.cs"];
m25_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisConnection.cs"];
m25_185 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs"];
m25_213 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs"];
m25_173 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m25_174 [label="RemoveServer(Redis, serverId)", span="301-301", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m25_175 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m25_214 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="RedisConnection.cs"];
m25_69 [label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_70 [label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_71 [label="storedData.Count == 0", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_78 [label="storedData.ContainsKey(''Type'')", span="160-160", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_79 [label="type = storedData[''Type'']", span="162-162", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_80 [label="storedData.ContainsKey(''Method'')", span="164-164", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_81 [label="method = storedData[''Method'']", span="166-166", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_82 [label="storedData.ContainsKey(''ParameterTypes'')", span="168-168", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_83 [label="parameterTypes = storedData[''ParameterTypes'']", span="170-170", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_84 [label="storedData.ContainsKey(''Arguments'')", span="172-172", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_85 [label="arguments = storedData[''Arguments'']", span="174-174", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_86 [label="storedData.ContainsKey(''CreatedAt'')", span="176-176", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_87 [label="createdAt = storedData[''CreatedAt'']", span="178-178", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_94 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.FromNullableStringTimestamp(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=red, community=0, file="RedisConnection.cs"];
m25_72 [label="return null;", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_73 [label="string type = null", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_74 [label="string method = null", span="155-155", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_90 [label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_75 [label="string parameterTypes = null", span="156-156", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_76 [label="string arguments = null", span="157-157", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_77 [label="string createdAt = null", span="158-158", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_88 [label="Job job = null", span="181-181", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_89 [label="JobLoadException loadException = null", span="182-182", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_91 [label="job = invocationData.Deserialize()", span="188-188", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_92 [label=JobLoadException, span="190-190", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_93 [label="loadException = ex", span="192-192", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_95 [label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs"];
m25_221 [label="Entry lambda expression", span="345-349", cluster="lambda expression", file="RedisConnection.cs"];
m25_66 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138", cluster="lambda expression", file="RedisConnection.cs"];
m25_62 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134", cluster="lambda expression", file="RedisConnection.cs"];
m25_61 [label="Entry lambda expression", span="132-134", cluster="lambda expression", file="RedisConnection.cs"];
m25_65 [label="Entry lambda expression", span="136-138", cluster="lambda expression", file="RedisConnection.cs"];
m25_63 [label="Exit lambda expression", span="132-134", cluster="lambda expression", file="RedisConnection.cs"];
m25_67 [label="Exit lambda expression", span="136-138", cluster="lambda expression", file="RedisConnection.cs"];
m25_161 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277", cluster="lambda expression", file="RedisConnection.cs"];
m25_165 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="279-285", cluster="lambda expression", color=red, community=0, file="RedisConnection.cs"];
m25_170 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292", cluster="lambda expression", file="RedisConnection.cs"];
m25_160 [label="Entry lambda expression", span="276-277", cluster="lambda expression", file="RedisConnection.cs"];
m25_164 [label="Entry lambda expression", span="279-285", cluster="lambda expression", file="RedisConnection.cs"];
m25_169 [label="Entry lambda expression", span="290-292", cluster="lambda expression", file="RedisConnection.cs"];
m25_162 [label="Exit lambda expression", span="276-277", cluster="lambda expression", file="RedisConnection.cs"];
m25_166 [label="Exit lambda expression", span="279-285", cluster="lambda expression", file="RedisConnection.cs"];
m25_171 [label="Exit lambda expression", span="290-292", cluster="lambda expression", file="RedisConnection.cs"];
m25_183 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310", cluster="lambda expression", file="RedisConnection.cs"];
m25_187 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314", cluster="lambda expression", file="RedisConnection.cs"];
m25_182 [label="Entry lambda expression", span="308-310", cluster="lambda expression", file="RedisConnection.cs"];
m25_186 [label="Entry lambda expression", span="312-314", cluster="lambda expression", file="RedisConnection.cs"];
m25_184 [label="Exit lambda expression", span="308-310", cluster="lambda expression", file="RedisConnection.cs"];
m25_188 [label="Exit lambda expression", span="312-314", cluster="lambda expression", file="RedisConnection.cs"];
m25_222 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="345-349", cluster="lambda expression", color=red, community=0, file="RedisConnection.cs"];
m25_217 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344", cluster="lambda expression", file="RedisConnection.cs"];
m25_216 [label="Entry lambda expression", span="342-344", cluster="lambda expression", file="RedisConnection.cs"];
m25_218 [label="Exit lambda expression", span="342-344", cluster="lambda expression", file="RedisConnection.cs"];
m25_223 [label="Exit lambda expression", span="345-349", cluster="lambda expression", file="RedisConnection.cs"];
m25_0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs"];
m25_1 [label="Redis = redis", span="34-34", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs"];
m25_2 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs"];
m25_32 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs"];
m25_137 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="RedisConnection.cs"];
m25_145 [label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs"];
m25_146 [label="key == null", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs"];
m25_148 [label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs"];
m25_147 [label="throw new ArgumentNullException(''key'');", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs"];
m25_149 [label="return result.Count != 0 ? result : null;", span="269-269", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs"];
m25_150 [label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs"];
m25_211 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="RedisConnection.cs"];
m25_118 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs"];
m25_117 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs"];
m25_119 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs"];
m25_54 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="RedisConnection.cs"];
m25_123 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RedisConnection.cs"];
m25_60 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisConnection.cs"];
m25_210 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs"];
m25_124 [label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs"];
m25_125 [label="key == null", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs"];
m25_127 [label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs"];
m25_126 [label="throw new ArgumentNullException(''key'');", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs"];
m25_128 [label="return new HashSet<string>(result);", span="245-245", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs"];
m25_129 [label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs"];
m25_100 [label="Entry HangFire.Storage.JobData.JobData()", span="21-21", cluster="HangFire.Storage.JobData.JobData()", file="RedisConnection.cs"];
m25_99 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="RedisConnection.cs"];
m25_219 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RedisConnection.cs"];
m25_220 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="RedisConnection.cs"];
m25_132 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="RedisConnection.cs"];
m25_59 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisConnection.cs"];
m25_136 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisConnection.cs"];
m25_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="RedisConnection.cs"];
m25_115 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisConnection.cs"];
m25_38 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="RedisConnection.cs"];
m25_56 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RedisConnection.cs"];
m25_97 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="RedisConnection.cs"];
m25_228 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnection.cs"];
m25_229 [label=jobId, span="", file="RedisConnection.cs"];
m25_230 [label=storedParameters, span="", file="RedisConnection.cs"];
m25_231 [label="System.TimeSpan", span="", file="RedisConnection.cs"];
m25_232 [label=string, span="", file="RedisConnection.cs"];
m25_233 [label="HangFire.Server.ServerContext", span="", file="RedisConnection.cs"];
m25_234 [label=queue1, span="", file="RedisConnection.cs"];
m25_235 [label=string, span="", file="RedisConnection.cs"];
m25_236 [label=name, span="", file="RedisConnection.cs"];
m25_237 [label=heartbeats, span="", file="RedisConnection.cs"];
m27_0 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_1 [label="transaction == null", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_3 [label="Transaction = transaction", span="29-29", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_2 [label="throw new ArgumentNullException(''transaction'');", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_4 [label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_6 [label="HangFire.Common.States.StateApplyingContext", span="", file="RedisWriteOnlyTransaction.cs"];
m28_62 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs"];
m28_57 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ScheduledJobsPage.generated.cs"];
m28_55 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs"];
m28_63 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ScheduledJobsPage.generated.cs"];
m28_58 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs"];
m28_56 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs"];
m28_0 [label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_1 [label="WriteLiteral(''\n'')", span="51-51", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_2 [label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_7 [label="Pager pager = new Pager(from, perPage, monitor.ScheduledCount())\n    {\n        BasePageUrl = Request.LinkTo(''/scheduled'')\n    }", span="70-73", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_8 [label="JobList<ScheduledJobDto> scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-75", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_10 [label="pager.TotalPageCount == 0", span="86-86", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_17 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="146-146", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_53 [label="Write(RenderPartial(new Paginator(pager)))", span="378-378", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_9 [label="WriteLiteral(''\n'')", span="81-81", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_19 [label=scheduledJobs, span="171-171", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        There are no scheduled jobs.\n    </div'' +\r\n''>\n'')", span="92-93", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="105-107", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_13 [label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="112-112", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_14 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-play''''></span>\n                Enqueue now\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="117-124", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_15 [label="Write(Request.LinkTo(''/scheduled/delete''))", span="129-129", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="134-141", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_18 [label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Enqueue</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Scheduled</th>\n                </tr>\n            </thead>\n'')", span="151-166", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_20 [label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="177-177", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_52 [label="WriteLiteral(''        </table>\n    </div>\n'')", span="366-366", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_21 [label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="182-182", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_22 [label="WriteLiteral('' '')", span="187-187", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_23 [label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="192-192", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_24 [label="WriteLiteral(''\''>\n                    <td>\n'')", span="197-197", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_25 [label="job.Value.InScheduledState", span="202-202", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_26 [label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="208-209", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_29 [label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <a href=\'''')", span="229-230", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_27 [label="Write(job.Key)", span="214-214", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_30 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="235-235", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_28 [label="WriteLiteral(''\'' />\n'')", span="219-219", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_31 [label="WriteLiteral(''\''>\n                            '')", span="240-240", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_32 [label="Write(HtmlHelper.JobId(job.Key))", span="245-245", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_33 [label="WriteLiteral(''\n                        </a>\n'')", span="250-250", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_34 [label="!job.Value.InScheduledState", span="255-255", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_35 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="261-262", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_36 [label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <span data-moment=\'''')", span="272-273", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_37 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueueAt))", span="278-278", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m28_38 [label="WriteLiteral(''\''>\n                            '')", span="283-283", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_39 [label="Write(job.Value.EnqueueAt)", span="288-288", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_40 [label="WriteLiteral(''\n                        </span>\n                    </td>\n                    <t'' +\r\n''d>\n                        <a class=\''job-method\'' href=\'''')", span="293-294", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_41 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="299-299", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_42 [label="WriteLiteral(''\''>\n                            '')", span="304-304", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_43 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="309-309", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_44 [label="WriteLiteral(''\n                        </a>\n                    </td>\n                    <td c'' +\r\n''lass=\''align-right\''>\n'')", span="314-315", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_45 [label="job.Value.ScheduledAt != null", span="320-320", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_46 [label="WriteLiteral(''                            <span data-moment=\'''')", span="326-326", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_51 [label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="356-356", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_47 [label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt.Value))", span="331-331", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m28_48 [label="WriteLiteral(''\''>\n                                '')", span="336-336", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_49 [label="Write(job.Value.ScheduledAt)", span="341-341", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_50 [label="WriteLiteral(''\n                            </span>\n'')", span="346-346", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_54 [label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m28_64 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs"];
m28_66 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ScheduledJobsPage.generated.cs"];
m28_61 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs"];
m28_69 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ScheduledJobsPage.generated.cs"];
m28_70 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs"];
m28_60 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs"];
m28_65 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ScheduledJobsPage.generated.cs"];
m28_68 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledJobsPage.generated.cs"];
m28_59 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ScheduledJobsPage.generated.cs"];
m28_67 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ScheduledJobsPage.generated.cs"];
m28_71 [label="HangFire.Web.Pages.ScheduledJobsPage", span="", file="ScheduledJobsPage.generated.cs"];
m29_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs"];
m29_2 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m29_3 [label="EnqueueAt = enqueueAt", span="34-34", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m29_4 [label="ScheduledAt = DateTime.UtcNow", span="35-35", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m29_5 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m29_25 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs"];
m29_11 [label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_12 [label="var scheduledState = context.NewState as ScheduledState", span="59-59", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_16 [label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="68-68", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_13 [label="scheduledState == null", span="60-60", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_15 [label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="67-67", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_14 [label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="62-64", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_17 [label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_20 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledState.cs"];
m29_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs"];
m29_1 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs"];
m29_6 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m29_7 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.SerializeDateTime(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.SerializeDateTime(ScheduledAt) }\r\n            };", span="48-52", cluster="HangFire.States.ScheduledState.SerializeData()", color=green, community=0, file="ScheduledState.cs"];
m29_8 [label="Exit HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m29_22 [label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="71-71", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_23 [label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="73-73", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_24 [label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="71-71", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m29_21 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="42-42", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs"];
m29_19 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ScheduledState.cs"];
m29_10 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ScheduledState.cs"];
m29_26 [label="HangFire.States.ScheduledState", span="", file="ScheduledState.cs"];
m30_11 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ScheduledStateFacts.cs"];
m30_4 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs"];
m30_6 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs"];
m30_9 [label="Assert.Equal(date, state.EnqueueAt)", span="22-22", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs"];
m30_8 [label="var state = new ScheduledState(date)", span="21-21", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs"];
m30_7 [label="var date = new DateTime(2012, 12, 12)", span="20-20", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs"];
m30_10 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs"];
m30_0 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs"];
m30_2 [label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs"];
m30_1 [label="var state = new ScheduledState(DateTime.UtcNow)", span="13-13", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs"];
m30_3 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs"];
m30_35 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_36 [label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_37 [label="Assert.False(state.IgnoreJobLoadException)", span="56-56", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_38 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_34 [label="Entry Unk.False", span="", cluster="Unk.False", file="ScheduledStateFacts.cs"];
m30_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduledStateFacts.cs"];
m30_28 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledStateFacts.cs"];
m30_30 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_31 [label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_32 [label="Assert.False(state.IsFinal)", span="49-49", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_33 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs"];
m30_22 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs"];
m30_25 [label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", span="40-40", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="ScheduledStateFacts.cs"];
m30_23 [label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs"];
m30_24 [label="var data = state.SerializeData()", span="38-38", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs"];
m30_26 [label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="ScheduledStateFacts.cs"];
m30_27 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs"];
m30_29 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ScheduledStateFacts.cs"];
m31_35 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ServersPage.generated.cs"];
m31_30 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServersPage.generated.cs"];
m31_33 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ServersPage.generated.cs"];
m31_0 [label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_1 [label="WriteLiteral(''\n'')", span="61-61", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_2 [label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_4 [label="IList<ServerDto> servers = monitor.Servers()", span="77-77", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_5 [label="WriteLiteral(''\n'')", span="83-83", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_6 [label="servers.Count == 0", span="88-88", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_9 [label=servers, span="123-123", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_7 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_8 [label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_10 [label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_28 [label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="230-230", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_11 [label="Write(server.Name.ToUpperInvariant())", span="134-134", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_13 [label="Write(server.WorkersCount)", span="144-144", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_15 [label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_17 [label="Write(JobHelper.ToTimestamp(server.StartedAt))", span="164-164", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m31_19 [label="Write(server.StartedAt)", span="174-174", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m31_21 [label="server.Heartbeat.HasValue", span="184-184", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_23 [label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", span="195-195", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m31_25 [label="Write(server.Heartbeat)", span="205-205", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_12 [label="WriteLiteral(''</td>\n                    <td>'')", span="139-139", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_14 [label="WriteLiteral(''</td>\n                    <td>'')", span="149-149", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_16 [label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_18 [label="WriteLiteral(''\''>'')", span="169-169", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_20 [label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_22 [label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_27 [label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="220-220", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_24 [label="WriteLiteral(''\''>\n                                '')", span="200-200", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_26 [label="WriteLiteral(''\n                            </span>\n'')", span="210-210", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_29 [label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m31_38 [label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40", cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ServersPage.generated.cs"];
m31_32 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServersPage.generated.cs"];
m31_40 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServersPage.generated.cs"];
m31_34 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="ServersPage.generated.cs"];
m31_31 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServersPage.generated.cs"];
m31_37 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ServersPage.generated.cs"];
m31_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ServersPage.generated.cs"];
m31_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServersPage.generated.cs"];
m31_41 [label="HangFire.Web.Pages.ServersPage", span="", file="ServersPage.generated.cs"];
m32_150 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_151 [label="serverId == null", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_153 [label="context == null", span="280-280", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_155 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="282-287", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_156 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="289-295", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_152 [label="throw new ArgumentNullException(''serverId'');", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_154 [label="throw new ArgumentNullException(''context'');", span="280-280", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_157 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m32_102 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_103 [label="id == null", span="211-211", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_105 [label="name == null", span="212-212", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_107 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="214-217", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_104 [label="throw new ArgumentNullException(''id'');", span="211-211", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_106 [label="throw new ArgumentNullException(''name'');", span="212-212", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_108 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m32_124 [label="Entry HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="242-242", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_125 [label="key == null", span="244-244", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_127 [label="keyValuePairs == null", span="245-245", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_131 [label=keyValuePairs, span="256-256", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_132 [label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="258-258", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_126 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_128 [label="throw new ArgumentNullException(''keyValuePairs'');", span="245-245", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_129 [label="string sql = @''\r\nmerge HangFire.Hash as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="247-252", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_130 [label="var transaction = new TransactionScope()", span="254-254", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_133 [label="transaction.Complete()", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_134 [label="Exit HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="242-242", cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m32_158 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs"];
m32_85 [label="Entry HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_86 [label="jobId == null", span="173-173", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_89 [label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="181-181", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_87 [label="throw new ArgumentNullException(''jobId'');", span="173-173", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_88 [label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="175-179", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_90 [label="sqlState == null", span="182-182", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_92 [label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data)\r\n            };", span="187-192", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_91 [label="return null;", span="184-184", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_93 [label="Exit HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m32_143 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerConnection.cs"];
m32_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerConnection.cs"];
m32_17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56", cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_18 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="58-61", cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_19 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56", cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_176 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs"];
m32_62 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnection.cs"];
m32_66 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_67 [label="id == null", span="136-136", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_70 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="141-142", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_68 [label="throw new ArgumentNullException(''id'');", span="136-136", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_69 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where id = @id''", span="138-139", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", color=red, community=0, file="SqlServerConnection.cs"];
m32_71 [label="jobData == null", span="144-144", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_73 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="147-147", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_74 [label="invocationData.Arguments = jobData.Arguments", span="148-148", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_80 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="162-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_72 [label="return null;", span="144-144", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_77 [label="job = invocationData.Deserialize()", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_75 [label="Job job = null", span="150-150", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_76 [label="JobLoadException loadException = null", span="151-151", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_78 [label=JobLoadException, span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_79 [label="loadException = ex", span="159-159", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_81 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m32_13 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m32_14 [label="return new SqlServerWriteOnlyTransaction(_connection, _queueProviders);", span="53-53", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m32_15 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m32_16 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_123 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs"];
m32_35 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="SqlServerConnection.cs"];
m32_135 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerConnection.cs"];
m32_33 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SqlServerConnection.cs"];
m32_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnection.cs"];
m32_20 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr", file="SqlServerConnection.cs"];
m32_64 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnection.cs"];
m32_61 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs"];
m32_136 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerConnection.cs"];
m32_94 [label="Entry HangFire.Storage.StateData.StateData()", span="21-21", cluster="HangFire.Storage.StateData.StateData()", file="SqlServerConnection.cs"];
m32_22 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_23 [label="queues == null || queues.Length == 0", span="66-66", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_25 [label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="68-71", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_27 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="75-77", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_29 [label="return persistentQueue.Dequeue(queues, cancellationToken);", span="81-81", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_24 [label="throw new ArgumentNullException(''queues'');", span="66-66", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_26 [label="providers.Length != 1", span="73-73", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_28 [label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="80-80", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_30 [label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m32_169 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="316-316", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m32_170 [label="timeOut.Duration() != timeOut", span="318-318", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m32_171 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="320-320", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m32_172 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="323-325", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m32_173 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="316-316", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m32_12 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m32_109 [label="Entry HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="220-220", cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m32_110 [label="key == null", span="222-222", cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m32_112 [label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="224-226", cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m32_111 [label="throw new ArgumentNullException(''key'');", span="222-222", cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m32_113 [label="return new HashSet<string>(result);", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m32_114 [label="Exit HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="220-220", cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m32_174 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs"];
m32_41 [label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerConnection.cs"];
m32_42 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_43 [label="job == null", span="90-90", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_45 [label="parameters == null", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_48 [label="var invocationData = InvocationData.Serialize(job)", span="98-98", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_49 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="100-108", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_50 [label="parameters.Count > 0", span="110-110", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_51 [label="var parameterArray = new object[parameters.Count]", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_53 [label=parameters, span="114-114", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_44 [label="throw new ArgumentNullException(''job'');", span="90-90", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_46 [label="throw new ArgumentNullException(''parameters'');", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_47 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="93-96", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_54 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="116-121", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_57 [label="return jobId;", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_52 [label="int parameterIndex = 0", span="113-113", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_56 [label="_connection.Execute(insertParameterSql, parameterArray)", span="128-128", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_55 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="124-126", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_58 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m32_9 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m32_10 [label="_connection.Dispose()", span="48-48", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m32_11 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m32_37 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="SqlServerConnection.cs"];
m32_32 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="SqlServerConnection.cs"];
m32_147 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_38 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_39 [label="_queueProviders.GetProvider(queue)", span="69-69", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_40 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_144 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_145 [label="x.Field", span="272-272", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_146 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_148 [label="x.Value", span="272-272", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_149 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_95 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_96 [label="id == null", span="197-197", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_98 [label="name == null", span="198-198", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_100 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="200-206", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_97 [label="throw new ArgumentNullException(''id'');", span="197-197", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_99 [label="throw new ArgumentNullException(''name'');", span="198-198", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_101 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m32_31 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerConnection.cs"];
m32_116 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="231-231", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_117 [label="key == null", span="233-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_119 [label="toScore < fromScore", span="234-234", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_121 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="236-239", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_118 [label="throw new ArgumentNullException(''key'');", span="233-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_120 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="234-234", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_122 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="231-231", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m32_60 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m32_63 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerConnection.cs"];
m32_175 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs"];
m32_84 [label="Entry HangFire.Storage.JobData.JobData()", span="21-21", cluster="HangFire.Storage.JobData.JobData()", file="SqlServerConnection.cs"];
m32_65 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m32_83 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs"];
m32_36 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="SqlServerConnection.cs"];
m32_137 [label="Entry HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="265-265", cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m32_138 [label="key == null", span="267-267", cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m32_140 [label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="269-272", cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m32_139 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m32_141 [label="return result.Count != 0 ? result : null;", span="274-274", cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m32_142 [label="Exit HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="265-265", cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m32_115 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="SqlServerConnection.cs"];
m32_159 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="298-298", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m32_160 [label="serverId == null", span="300-300", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m32_162 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="302-304", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m32_161 [label="throw new ArgumentNullException(''serverId'');", span="300-300", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m32_163 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="298-298", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m32_164 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="307-307", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m32_165 [label="serverId == null", span="309-309", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m32_167 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="311-313", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m32_166 [label="throw new ArgumentNullException(''serverId'');", span="309-309", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m32_168 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="307-307", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m32_82 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs"];
m32_59 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerConnection.cs"];
m32_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_1 [label="connection == null", span="39-39", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_3 [label="queueProviders == null", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_5 [label="_connection = connection", span="42-42", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_6 [label="_queueProviders = queueProviders", span="43-43", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_2 [label="throw new ArgumentNullException(''connection'');", span="39-39", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_4 [label="throw new ArgumentNullException(''queueProviders'');", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_7 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs"];
m32_177 [label="HangFire.SqlServer.SqlServerConnection", span="", file="SqlServerConnection.cs"];
m34_111 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs"];
m34_112 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="177-177", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs"];
m34_113 [label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="178-178", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs"];
m34_114 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs"];
m34_42 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="SucceededState.cs"];
m34_78 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="58-58", cluster="HangFire.JobHelper.FromTimestamp(long)", file="SucceededState.cs"];
m34_103 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs"];
m34_104 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="163-163", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs"];
m34_105 [label="ThenItShouldBeScheduledForTomorrow()", span="164-164", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs"];
m34_106 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs"];
m34_76 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="SucceededState.cs"];
m34_39 [label="Entry HangFire.Perform.Async(System.Type, object)", span="71-71", cluster="HangFire.Perform.Async(System.Type, object)", file="SucceededState.cs"];
m34_54 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="SucceededState.cs"];
m34_57 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="SucceededState.cs"];
m34_36 [label="Entry HangFire.Perform.Async<TJob>()", span="24-24", cluster="HangFire.Perform.Async<TJob>()", file="SucceededState.cs"];
m34_5 [label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", span="27-27", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_6 [label="_jobId = Perform.Async<TestJob>(new { ArticleId = 3, Author = ''odinserj'' })", span="29-29", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="SucceededState.cs"];
m34_7 [label="code.Equals(''Perform.Async(typeof(TestJob))'')", span="31-31", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_18 [label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })", span="53-53", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_53 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SucceededState.cs"];
m34_9 [label="code.Equals(''Perform.Async(null)'')", span="35-35", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_35 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="SucceededState.cs"];
m34_80 [label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs"];
m34_81 [label="Assert.IsNotNull(_exception)", span="131-131", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs"];
m34_82 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="132-132", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs"];
m34_83 [label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs"];
m34_77 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="SucceededState.cs"];
m34_37 [label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40", cluster="HangFire.Perform.Async<TJob>(object)", file="SucceededState.cs"];
m34_55 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="SucceededState.cs"];
m34_43 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="SucceededState.cs"];
m34_59 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SucceededState.cs"];
m34_45 [label="Entry Unk.Pending", span="", cluster="Unk.Pending", file="SucceededState.cs"];
m34_44 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="SucceededState.cs"];
m34_87 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_88 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="138-138", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_90 [label="Assert.IsTrue(job[''Type''].Contains(type))", span="140-140", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_92 [label="DictionaryAssert.ContainsFollowingItems(table, args)", span="143-143", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_89 [label="Assert.AreNotEqual(0, job.Count)", span="139-139", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_91 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="142-142", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_93 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs"];
m34_40 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SucceededState.cs"];
m34_94 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m34_95 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs"];
m34_96 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="149-149", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs"];
m34_97 [label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="150-150", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs"];
m34_98 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs"];
m34_79 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SucceededState.cs"];
m34_41 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="SucceededState.cs"];
m34_46 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_47 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="93-93", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_49 [label="Assert.IsTrue(job[''Type''].Contains(type))", span="95-95", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_48 [label="Assert.AreNotEqual(0, job.Count)", span="94-94", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_50 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="97-97", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_51 [label="Assert.AreEqual(0, args.Count)", span="98-98", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_52 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs"];
m34_0 [label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs"];
m34_1 [label="Latency = latency", span="30-30", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs"];
m34_8 [label="_jobId = Perform.Async(typeof (TestJob))", span="33-33", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_60 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SucceededState.cs"];
m34_61 [label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="104-104", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SucceededState.cs"];
m34_62 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SucceededState.cs"];
m34_2 [label="PerformanceDuration = performanceDuration", span="31-31", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs"];
m34_3 [label="SucceededAt = DateTime.UtcNow", span="32-32", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs"];
m34_11 [label="code.Equals(''Perform.Async(typeof(TestJob), new { ArticleId = 3 })'')", span="39-39", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_13 [label="code.Equals(''Perform.Async(null, new { ArticleId = 3 })'')", span="43-43", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_15 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m34_17 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m34_19 [label="HangFire.States.SucceededState", span="", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_21 [label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3 })'')", span="59-59", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_23 [label="code.Equals(''Perform.Async<CriticalQueueJob>()'')", span="63-63", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_25 [label="code.Equals(''Perform.Async<InvalidQueueJob>()'')", span="67-67", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_27 [label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="71-71", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_4 [label="Exit HangFire.States.SucceededState.SucceededState(long, long)", span="28-28", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs"];
m34_10 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="SucceededState.cs"];
m34_12 [label="_jobId = Perform.Async(typeof (TestJob), new { ArticleId = 3 })", span="41-41", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_14 [label="_jobId = Perform.Async(null, new { ArticleId = 3 })", span="45-45", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_16 [label="transaction.DecrementCounter(''stats:succeeded'')", span="64-64", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="SucceededState.cs"];
m34_20 [label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="57-57", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_22 [label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", span="61-61", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_24 [label="_jobId = Perform.Async<CriticalQueueJob>()", span="65-65", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_26 [label="_jobId = Perform.Async<InvalidQueueJob>()", span="69-69", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_28 [label="_jobId = Perform.Async<EmptyQueueJob>()", span="73-73", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_29 [label="ScenarioContext.Current.Pending()", span="77-77", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_30 [label=PendingStepException, span="80-80", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_32 [label=Exception, span="84-84", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_31 [label="throw;", span="82-82", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_33 [label="_exception = ex", span="86-86", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_34 [label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs"];
m34_86 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="SucceededState.cs"];
m34_38 [label="Entry HangFire.Perform.Async(System.Type)", span="55-55", cluster="HangFire.Perform.Async(System.Type)", file="SucceededState.cs"];
m34_68 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="SucceededState.cs"];
m34_84 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SucceededState.cs"];
m34_56 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SucceededState.cs"];
m34_69 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_70 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="120-120", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_71 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="121-121", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_72 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="122-122", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_73 [label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="124-124", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_74 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="125-125", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_75 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs"];
m34_99 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs"];
m34_100 [label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="156-156", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs"];
m34_101 [label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="157-157", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs"];
m34_102 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs"];
m34_107 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs"];
m34_108 [label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="170-170", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs"];
m34_109 [label="ThenItShouldBeScheduledForTomorrow()", span="171-171", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs"];
m34_110 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs"];
m34_63 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs"];
m34_64 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="110-111", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs"];
m34_65 [label="Assert.AreEqual(1, jobIds.Count)", span="113-113", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs"];
m34_66 [label="Assert.AreEqual(_jobId, jobIds[0])", span="114-114", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs"];
m34_67 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs"];
m34_85 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="SucceededState.cs"];
m34_115 [label="HangFire.Tests.ClientSteps", span="", file="SucceededState.cs"];
m35_9 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="22-22", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m35_10 [label="var state = CreateState()", span="24-24", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m35_11 [label="var data = state.SerializeData()", span="26-26", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m35_12 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="28-28", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", color=red, community=0, file="SucceededStateFacts.cs"];
m35_13 [label="Assert.Equal(''123'', data[''PerformanceDuration''])", span="29-29", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m35_14 [label="Assert.Equal(''11'', data[''Latency''])", span="30-30", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m35_15 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="22-22", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m35_18 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="34-34", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m35_19 [label="var state = CreateState()", span="36-36", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m35_20 [label="Assert.True(state.IsFinal)", span="37-37", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m35_21 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="34-34", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs"];
m35_4 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="15-15", cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m35_5 [label="var state = CreateState()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m35_6 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="18-18", cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m35_7 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="15-15", cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs"];
m35_22 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededStateFacts.cs"];
m35_27 [label="Entry Unk.False", span="", cluster="Unk.False", file="SucceededStateFacts.cs"];
m35_0 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="9-9", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs"];
m35_1 [label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="11-11", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs"];
m35_2 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="9-9", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs"];
m35_3 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SucceededStateFacts.cs"];
m35_23 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="41-41", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m35_24 [label="var state = CreateState()", span="43-43", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m35_25 [label="Assert.False(state.IgnoreJobLoadException)", span="44-44", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m35_26 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="41-41", cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs"];
m35_16 [label="Entry HangFire.States.SucceededState.SerializeData()", span="45-45", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs"];
m35_8 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", span="47-47", cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs"];
m35_28 [label="return new SucceededState(11, 123);", span="49-49", cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs"];
m35_29 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", span="47-47", cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs"];
m35_17 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededStateFacts.cs"];
m35_30 [label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededStateFacts.cs"];
n75 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
n76 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n77 -> n71  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [key=3, color=darkorchid, style=bold, label="method methodReturn IAppBuilder UseHangfireServer"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n8  [key=3, color=darkorchid, style=bold, label="method methodReturn IAppBuilder UseHangfireServer"];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=2, style=dotted];
n7 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n9 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n9 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n9 -> n18  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n9 -> n25  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n28  [key=2, style=dotted];
n16 -> n24  [key=1, style=dashed, color=darkseagreen4, label=server];
n18 -> n19  [key=0, style=solid];
n18 -> n30  [key=2, style=dotted];
n18 -> n21  [key=1, style=dashed, color=darkseagreen4, label=context];
n25 -> n26  [key=0, style=solid];
n11 -> n26  [key=0, style=solid];
n11 -> n27  [key=2, style=dotted];
n13 -> n26  [key=0, style=solid];
n13 -> n27  [key=2, style=dotted];
n15 -> n26  [key=0, style=solid];
n15 -> n27  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n29  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n33  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n31  [key=2, style=dotted];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label=token];
n19 -> n24  [key=1, style=dashed, color=darkseagreen4, label=token];
n21 -> n22  [key=0, style=solid];
n21 -> n31  [key=2, style=dotted];
n21 -> n24  [key=1, style=dashed, color=darkseagreen4, label=token];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=0, style=solid];
n23 -> n26  [key=0, style=solid];
n23 -> n32  [key=2, style=dotted];
n26 -> n9  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=3, color=darkorchid, style=bold, label="method methodReturn IAppBuilder UseHangfireDashboard"];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=2, style=dotted];
n36 -> n34  [key=0, style=bold, color=blue];
n37 -> n42  [key=3, color=darkorchid, style=bold, label="method methodReturn IAppBuilder UseHangfireDashboard"];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n39 -> n42  [key=2, style=dotted];
n40 -> n38  [key=0, style=bold, color=blue];
n42 -> n46  [key=3, color=darkorchid, style=bold, label="method methodReturn IAppBuilder UseHangfireDashboard"];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=2, style=dotted];
n45 -> n43  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n47 -> n50  [key=1, style=dashed, color=darkseagreen4, label=string];
n47 -> n52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
n47 -> n54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n47 -> n56  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n47 -> n57  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n47 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
n47 -> n58  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n60  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n61  [key=2, style=dotted];
n57 -> n62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [key=2, style=dotted];
n63 -> n66  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n49 -> n59  [key=0, style=solid];
n49 -> n27  [key=2, style=dotted];
n51 -> n59  [key=0, style=solid];
n51 -> n27  [key=2, style=dotted];
n53 -> n59  [key=0, style=solid];
n53 -> n27  [key=2, style=dotted];
n55 -> n59  [key=0, style=solid];
n55 -> n27  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n59 -> n47  [key=0, style=bold, color=blue];
n64 -> n62  [key=0, style=bold, color=blue];
n67 -> n68  [key=0, style=solid];
n67 -> n71  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>"];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=2, style=dotted];
n71 -> n74  [key=2, style=dotted];
n69 -> n67  [key=0, style=bold, color=blue];
n70 -> n71  [key=0, style=solid];
n72 -> n70  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_6  [key=2, style=dotted, color=red];
m0_4 -> m0_7  [key=2, style=dotted, color=red];
m0_5 -> m0_3  [key=0, style=bold, color=blue];
m0_16 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.DeletedState"];
m0_16 -> m0_4  [key=1, style=dashed, color=red, label="HangFire.States.DeletedState"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m1_0 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_2 -> m1_9  [key=0, style=solid];
m1_2 -> n27  [key=2, style=dotted];
m1_4 -> m1_9  [key=0, style=solid];
m1_4 -> n27  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_0  [key=0, style=bold, color=blue];
m1_12 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m1_12 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m1_12 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m1_12 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=enqueuedState];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_19  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=0, style=solid];
m3_14 -> n32  [key=2, style=dotted];
m3_14 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_11  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_20  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_2  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid, color=red];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_7 -> m3_9  [key=2, style=dotted, color=red];
m3_7 -> m3_10  [key=2, style=dotted, color=red];
m3_8 -> m3_6  [key=0, style=bold, color=blue];
m3_22 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m3_22 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m3_22 -> m3_7  [key=1, style=dashed, color=red, label="HangFire.States.EnqueuedState"];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m5_0 -> m5_1  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.StyleSheetHandler"];
m5_4 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.StyleSheetHandler"];
m5_1 -> m5_3  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_5  [key=0, style=solid];
m5_2 -> n27  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_8 -> m5_9  [key=0, style=solid, color=green];
m5_8 -> m5_10  [key=2, style=dotted, color=green];
m5_8 -> m5_11  [key=2, style=dotted, color=green];
m5_8 -> m5_12  [key=2, style=dotted, color=green];
m5_8 -> m5_13  [key=2, style=dotted, color=green];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_14 -> m5_8  [key=1, style=dashed, color=green, label="HangFire.States.FailedState"];
m5_14 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m5_14 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m6_10 -> m6_13  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_10  [key=2, style=dotted];
m6_7 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=2, style=dotted];
m6_9 -> m6_6  [key=0, style=bold, color=blue];
m6_9 -> m6_7  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_7  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_12  [key=2, style=dotted];
m6_32 -> m6_10  [key=2, style=dotted];
m6_32 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_30  [key=2, style=dotted];
m6_33 -> m6_11  [key=2, style=dotted];
m6_34 -> m6_31  [key=0, style=bold, color=blue];
m6_95 -> m6_96  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_10  [key=2, style=dotted];
m6_96 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_11  [key=2, style=dotted];
m6_98 -> m6_95  [key=0, style=bold, color=blue];
m6_5 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_11 -> m6_8  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=2, style=dotted];
m6_22 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_52 -> m6_53  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_10  [key=2, style=dotted];
m6_53 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_11  [key=2, style=dotted];
m6_55 -> m6_52  [key=0, style=bold, color=blue];
m6_41 -> m6_194  [key=0, style=solid];
m6_194 -> m6_41  [key=0, style=bold, color=blue];
m6_30 -> m6_28  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_150  [key=2, style=dotted];
m6_181 -> m6_10  [key=2, style=dotted];
m6_181 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_24  [key=2, style=dotted];
m6_182 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_183 -> m6_180  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> n31  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_13  [key=2, style=dotted];
m6_20 -> m6_25  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_15  [key=2, style=dotted];
m6_21 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_21 -> m6_14  [key=0, style=bold, color=blue];
m6_23 -> m6_20  [key=0, style=bold, color=blue];
m6_119 -> m6_120  [key=0, style=solid];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_10  [key=2, style=dotted];
m6_120 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_11  [key=2, style=dotted];
m6_122 -> m6_119  [key=0, style=bold, color=blue];
m6_106 -> m6_107  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_67  [key=2, style=dotted];
m6_107 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_24  [key=2, style=dotted];
m6_108 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_109 -> m6_106  [key=0, style=bold, color=blue];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_10  [key=2, style=dotted];
m6_170 -> m6_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_11  [key=2, style=dotted];
m6_172 -> m6_169  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_17 -> m6_18  [key=0, style=solid, color=green];
m6_17 -> m6_24  [key=2, style=dotted, color=green];
m6_17 -> m6_13  [key=2, style=dotted, color=green];
m6_17 -> m6_19  [key=2, style=dotted];
m6_15 -> m6_17  [key=1, style=dashed, color=green, label=state];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_7  [key=2, style=dotted];
m6_15 -> m6_22  [key=2, style=dotted];
m6_15 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=state];
m6_16 -> m6_17  [key=0, style=solid, color=green];
m6_16 -> m6_23  [key=2, style=dotted];
m6_16 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m6_16 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m6_16 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_13  [key=2, style=dotted];
m6_18 -> m6_16  [key=0, style=bold, color=blue];
m6_19 -> m6_13  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_193  [key=0, style=solid];
m6_193 -> m6_19  [key=0, style=bold, color=blue];
m6_25 -> m6_26  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_19  [key=2, style=dotted];
m6_27 -> m6_25  [key=0, style=bold, color=blue];
m6_27 -> m6_7  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_12  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_10  [key=2, style=dotted];
m6_29 -> m6_15  [key=2, style=dotted];
m6_29 -> m6_26  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_10  [key=2, style=dotted];
m6_36 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_37 -> m6_35  [key=0, style=bold, color=blue];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=2, style=dotted];
m6_40 -> m6_38  [key=0, style=bold, color=blue];
m6_46 -> m6_47  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_41  [key=2, style=dotted];
m6_48 -> m6_46  [key=0, style=bold, color=blue];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_10  [key=2, style=dotted];
m6_50 -> m6_15  [key=2, style=dotted];
m6_51 -> m6_49  [key=0, style=bold, color=blue];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_59  [key=2, style=dotted];
m6_57 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_58 -> m6_56  [key=0, style=bold, color=blue];
m6_60 -> m6_61  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_19  [key=2, style=dotted];
m6_62 -> m6_60  [key=0, style=bold, color=blue];
m6_68 -> m6_69  [key=0, style=solid];
m6_71 -> m6_72  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_19  [key=2, style=dotted];
m6_70 -> m6_68  [key=0, style=bold, color=blue];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_10  [key=2, style=dotted];
m6_72 -> m6_15  [key=2, style=dotted];
m6_73 -> m6_71  [key=0, style=bold, color=blue];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_81  [key=2, style=dotted];
m6_79 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_80 -> m6_78  [key=0, style=bold, color=blue];
m6_82 -> m6_83  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_41  [key=2, style=dotted];
m6_84 -> m6_82  [key=0, style=bold, color=blue];
m6_89 -> m6_90  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_41  [key=2, style=dotted];
m6_91 -> m6_89  [key=0, style=bold, color=blue];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_10  [key=2, style=dotted];
m6_93 -> m6_15  [key=2, style=dotted];
m6_94 -> m6_92  [key=0, style=bold, color=blue];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_102  [key=2, style=dotted];
m6_100 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_101 -> m6_99  [key=0, style=bold, color=blue];
m6_103 -> m6_104  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_19  [key=2, style=dotted];
m6_105 -> m6_103  [key=0, style=bold, color=blue];
m6_110 -> m6_111  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_19  [key=2, style=dotted];
m6_112 -> m6_110  [key=0, style=bold, color=blue];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_10  [key=2, style=dotted];
m6_114 -> m6_15  [key=2, style=dotted];
m6_114 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_115 -> m6_113  [key=0, style=bold, color=blue];
m6_116 -> m6_117  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_116  [key=0, style=bold, color=blue];
m6_123 -> m6_124  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_126  [key=2, style=dotted];
m6_124 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_125 -> m6_123  [key=0, style=bold, color=blue];
m6_127 -> m6_128  [key=0, style=solid];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_41  [key=2, style=dotted];
m6_129 -> m6_127  [key=0, style=bold, color=blue];
m6_134 -> m6_135  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_41  [key=2, style=dotted];
m6_136 -> m6_134  [key=0, style=bold, color=blue];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_10  [key=2, style=dotted];
m6_138 -> m6_15  [key=2, style=dotted];
m6_138 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_139 -> m6_137  [key=0, style=bold, color=blue];
m6_140 -> m6_141  [key=0, style=solid];
m6_141 -> m6_142  [key=0, style=solid];
m6_142 -> m6_140  [key=0, style=bold, color=blue];
m6_147 -> m6_148  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_150  [key=2, style=dotted];
m6_148 -> m6_151  [key=2, style=dotted];
m6_148 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_149 -> m6_147  [key=0, style=bold, color=blue];
m6_152 -> m6_153  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_19  [key=2, style=dotted];
m6_154 -> m6_152  [key=0, style=bold, color=blue];
m6_160 -> m6_161  [key=0, style=solid];
m6_163 -> m6_164  [key=0, style=solid];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_19  [key=2, style=dotted];
m6_162 -> m6_160  [key=0, style=bold, color=blue];
m6_164 -> m6_165  [key=0, style=solid];
m6_164 -> m6_10  [key=2, style=dotted];
m6_164 -> m6_15  [key=2, style=dotted];
m6_164 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_165 -> m6_163  [key=0, style=bold, color=blue];
m6_166 -> m6_167  [key=0, style=solid];
m6_167 -> m6_168  [key=0, style=solid];
m6_168 -> m6_166  [key=0, style=bold, color=blue];
m6_173 -> m6_174  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_150  [key=2, style=dotted];
m6_174 -> m6_176  [key=2, style=dotted];
m6_174 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_175 -> m6_173  [key=0, style=bold, color=blue];
m6_177 -> m6_178  [key=0, style=solid];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_41  [key=2, style=dotted];
m6_179 -> m6_177  [key=0, style=bold, color=blue];
m6_184 -> m6_185  [key=0, style=solid];
m6_187 -> m6_188  [key=0, style=solid];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_41  [key=2, style=dotted];
m6_186 -> m6_184  [key=0, style=bold, color=blue];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_10  [key=2, style=dotted];
m6_188 -> m6_15  [key=2, style=dotted];
m6_188 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_189 -> m6_187  [key=0, style=bold, color=blue];
m6_190 -> m6_191  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_192 -> m6_190  [key=0, style=bold, color=blue];
m6_74 -> m6_75  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_10  [key=2, style=dotted];
m6_75 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_11  [key=2, style=dotted];
m6_77 -> m6_74  [key=0, style=bold, color=blue];
m6_85 -> m6_86  [key=0, style=solid];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_10  [key=2, style=dotted];
m6_86 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_24  [key=2, style=dotted];
m6_87 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_88 -> m6_85  [key=0, style=bold, color=blue];
m6_42 -> m6_43  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_10  [key=2, style=dotted];
m6_43 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_24  [key=2, style=dotted];
m6_44 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_45 -> m6_42  [key=0, style=bold, color=blue];
m6_63 -> m6_64  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_67  [key=2, style=dotted];
m6_64 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_24  [key=2, style=dotted];
m6_65 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_66 -> m6_63  [key=0, style=bold, color=blue];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_155 -> m6_156  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_150  [key=2, style=dotted];
m6_156 -> m6_159  [key=2, style=dotted];
m6_156 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_24  [key=2, style=dotted];
m6_157 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_158 -> m6_155  [key=0, style=bold, color=blue];
m6_143 -> m6_144  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_10  [key=2, style=dotted];
m6_144 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_11  [key=2, style=dotted];
m6_146 -> m6_143  [key=0, style=bold, color=blue];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_10  [key=2, style=dotted];
m6_131 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_24  [key=2, style=dotted];
m6_132 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_133 -> m6_130  [key=0, style=bold, color=blue];
m6_195 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m6_195 -> m6_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts"];
m7_219 -> m7_220  [key=0, style=solid];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_20  [key=2, style=dotted];
m7_220 -> m7_25  [key=2, style=dotted];
m7_220 -> m7_225  [key=2, style=dotted];
m7_220 -> m7_21  [key=2, style=dotted];
m7_220 -> m7_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_89  [key=2, style=dotted];
m7_222 -> m7_223  [key=0, style=solid];
m7_222 -> m7_90  [key=2, style=dotted];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_91  [key=2, style=dotted];
m7_223 -> m7_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_224 -> m7_219  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> n31  [key=2, style=dotted];
m7_63 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_57  [key=2, style=dotted];
m7_65 -> m7_62  [key=0, style=bold, color=blue];
m7_112 -> m7_113  [key=0, style=solid];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_20  [key=2, style=dotted];
m7_113 -> m7_119  [key=2, style=dotted];
m7_113 -> m7_21  [key=2, style=dotted];
m7_113 -> m7_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_20  [key=2, style=dotted];
m7_114 -> m7_119  [key=2, style=dotted];
m7_114 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_20  [key=2, style=dotted];
m7_115 -> m7_119  [key=2, style=dotted];
m7_115 -> m7_21  [key=2, style=dotted];
m7_115 -> m7_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_89  [key=2, style=dotted];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_90  [key=2, style=dotted];
m7_118 -> m7_112  [key=0, style=bold, color=blue];
m7_183 -> m7_184  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_190  [key=2, style=dotted];
m7_184 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_184 -> m7_196  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_184 -> m7_199  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_20  [key=2, style=dotted];
m7_185 -> m7_191  [key=2, style=dotted];
m7_185 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_91  [key=2, style=dotted];
m7_188 -> m7_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_89  [key=2, style=dotted];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_90  [key=2, style=dotted];
m7_189 -> m7_183  [key=0, style=bold, color=blue];
m7_52 -> m7_234  [key=0, style=solid];
m7_234 -> m7_52  [key=0, style=bold, color=blue];
m7_172 -> m7_173  [key=0, style=solid];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_89  [key=2, style=dotted];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_90  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_91  [key=2, style=dotted];
m7_175 -> m7_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_176 -> m7_172  [key=0, style=bold, color=blue];
m7_202 -> m7_203  [key=0, style=solid];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_190  [key=2, style=dotted];
m7_203 -> m7_207  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_203 -> m7_214  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_203 -> m7_217  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_20  [key=2, style=dotted];
m7_204 -> m7_209  [key=2, style=dotted];
m7_204 -> m7_191  [key=2, style=dotted];
m7_204 -> m7_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_91  [key=2, style=dotted];
m7_207 -> m7_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_89  [key=2, style=dotted];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_90  [key=2, style=dotted];
m7_208 -> m7_202  [key=0, style=bold, color=blue];
m7_141 -> m7_142  [key=0, style=solid];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_89  [key=2, style=dotted];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_90  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_91  [key=2, style=dotted];
m7_144 -> m7_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_145 -> m7_141  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_16  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_17  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_18  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_19  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_20  [key=2, style=dotted];
m7_6 -> m7_21  [key=2, style=dotted];
m7_6 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_22  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_20  [key=2, style=dotted];
m7_8 -> m7_21  [key=2, style=dotted];
m7_8 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_23  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_24  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_20  [key=2, style=dotted];
m7_11 -> m7_21  [key=2, style=dotted];
m7_11 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_20  [key=2, style=dotted];
m7_12 -> m7_21  [key=2, style=dotted];
m7_12 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_20  [key=2, style=dotted];
m7_13 -> m7_25  [key=2, style=dotted];
m7_13 -> m7_26  [key=2, style=dotted];
m7_13 -> m7_21  [key=2, style=dotted];
m7_13 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_13 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_27  [key=2, style=dotted];
m7_15 -> m7_0  [key=0, style=bold, color=blue];
m7_152 -> m7_153  [key=0, style=solid];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_20  [key=2, style=dotted];
m7_153 -> m7_21  [key=2, style=dotted];
m7_153 -> m7_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_89  [key=2, style=dotted];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_90  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_91  [key=2, style=dotted];
m7_156 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_157 -> m7_152  [key=0, style=bold, color=blue];
m7_83 -> m7_84  [key=0, style=solid];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_89  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_90  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_91  [key=2, style=dotted];
m7_86 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_91  [key=2, style=dotted];
m7_87 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_88 -> m7_83  [key=0, style=bold, color=blue];
m7_229 -> m7_230  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=2, style=dotted];
m7_30 -> m7_28  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> n31  [key=2, style=dotted];
m7_33 -> m7_36  [key=2, style=dotted];
m7_34 -> m7_32  [key=0, style=bold, color=blue];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_40  [key=2, style=dotted];
m7_39 -> m7_37  [key=0, style=bold, color=blue];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> n31  [key=2, style=dotted];
m7_42 -> m7_44  [key=2, style=dotted];
m7_43 -> m7_41  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_48  [key=2, style=dotted];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=2, style=dotted];
m7_51 -> m7_49  [key=0, style=bold, color=blue];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [key=2, style=dotted];
m7_60 -> m7_58  [key=0, style=bold, color=blue];
m7_66 -> m7_67  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_61  [key=2, style=dotted];
m7_68 -> m7_66  [key=0, style=bold, color=blue];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_61  [key=2, style=dotted];
m7_75 -> m7_73  [key=0, style=bold, color=blue];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_61  [key=2, style=dotted];
m7_82 -> m7_80  [key=0, style=bold, color=blue];
m7_92 -> m7_93  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_31  [key=2, style=dotted];
m7_94 -> m7_92  [key=0, style=bold, color=blue];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_98  [key=2, style=dotted];
m7_97 -> m7_95  [key=0, style=bold, color=blue];
m7_105 -> m7_106  [key=0, style=solid];
m7_108 -> m7_109  [key=0, style=solid];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_36  [key=2, style=dotted];
m7_107 -> m7_105  [key=0, style=bold, color=blue];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_111  [key=2, style=dotted];
m7_110 -> m7_108  [key=0, style=bold, color=blue];
m7_120 -> m7_121  [key=0, style=solid];
m7_123 -> m7_124  [key=0, style=solid];
m7_127 -> m7_128  [key=0, style=solid];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> n31  [key=2, style=dotted];
m7_121 -> m7_44  [key=2, style=dotted];
m7_122 -> m7_120  [key=0, style=bold, color=blue];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> n31  [key=2, style=dotted];
m7_124 -> m7_126  [key=2, style=dotted];
m7_125 -> m7_123  [key=0, style=bold, color=blue];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> n31  [key=2, style=dotted];
m7_128 -> m7_44  [key=2, style=dotted];
m7_129 -> m7_127  [key=0, style=bold, color=blue];
m7_135 -> m7_136  [key=0, style=solid];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> n31  [key=2, style=dotted];
m7_136 -> m7_44  [key=2, style=dotted];
m7_136 -> m7_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_137 -> m7_135  [key=0, style=bold, color=blue];
m7_138 -> m7_139  [key=0, style=solid];
m7_139 -> m7_140  [key=0, style=solid];
m7_140 -> m7_138  [key=0, style=bold, color=blue];
m7_146 -> m7_147  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> n31  [key=2, style=dotted];
m7_147 -> m7_44  [key=2, style=dotted];
m7_147 -> m7_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_148 -> m7_146  [key=0, style=bold, color=blue];
m7_149 -> m7_150  [key=0, style=solid];
m7_150 -> m7_151  [key=0, style=solid];
m7_151 -> m7_149  [key=0, style=bold, color=blue];
m7_158 -> m7_159  [key=0, style=solid];
m7_161 -> m7_162  [key=0, style=solid];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> n31  [key=2, style=dotted];
m7_159 -> m7_44  [key=2, style=dotted];
m7_160 -> m7_158  [key=0, style=bold, color=blue];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> n31  [key=2, style=dotted];
m7_162 -> m7_126  [key=2, style=dotted];
m7_163 -> m7_161  [key=0, style=bold, color=blue];
m7_169 -> m7_170  [key=0, style=solid];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> n31  [key=2, style=dotted];
m7_170 -> m7_126  [key=2, style=dotted];
m7_171 -> m7_169  [key=0, style=bold, color=blue];
m7_177 -> m7_178  [key=0, style=solid];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> n31  [key=2, style=dotted];
m7_178 -> m7_44  [key=2, style=dotted];
m7_178 -> m7_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_179 -> m7_177  [key=0, style=bold, color=blue];
m7_180 -> m7_181  [key=0, style=solid];
m7_181 -> m7_182  [key=0, style=solid];
m7_182 -> m7_180  [key=0, style=bold, color=blue];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> n31  [key=2, style=dotted];
m7_196 -> m7_44  [key=2, style=dotted];
m7_196 -> m7_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_201  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_195 -> m7_196  [key=0, style=solid];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> n31  [key=2, style=dotted];
m7_193 -> m7_126  [key=2, style=dotted];
m7_194 -> m7_192  [key=0, style=bold, color=blue];
m7_197 -> m7_195  [key=0, style=bold, color=blue];
m7_198 -> m7_199  [key=0, style=solid];
m7_200 -> m7_198  [key=0, style=bold, color=blue];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> n31  [key=2, style=dotted];
m7_214 -> m7_44  [key=2, style=dotted];
m7_214 -> m7_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_217 -> m7_218  [key=0, style=solid];
m7_210 -> m7_211  [key=0, style=solid];
m7_213 -> m7_214  [key=0, style=solid];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> n31  [key=2, style=dotted];
m7_211 -> m7_126  [key=2, style=dotted];
m7_212 -> m7_210  [key=0, style=bold, color=blue];
m7_215 -> m7_213  [key=0, style=bold, color=blue];
m7_216 -> m7_217  [key=0, style=solid];
m7_218 -> m7_216  [key=0, style=bold, color=blue];
m7_226 -> m7_227  [key=0, style=solid];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_48  [key=2, style=dotted];
m7_228 -> m7_226  [key=0, style=bold, color=blue];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> n31  [key=2, style=dotted];
m7_230 -> m7_44  [key=2, style=dotted];
m7_231 -> m7_229  [key=0, style=bold, color=blue];
m7_130 -> m7_131  [key=0, style=solid];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_89  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_90  [key=2, style=dotted];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_91  [key=2, style=dotted];
m7_133 -> m7_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_134 -> m7_130  [key=0, style=bold, color=blue];
m7_99 -> m7_100  [key=0, style=solid];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_89  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_90  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_91  [key=2, style=dotted];
m7_102 -> m7_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_91  [key=2, style=dotted];
m7_103 -> m7_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_104 -> m7_99  [key=0, style=bold, color=blue];
m7_76 -> m7_77  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> n31  [key=2, style=dotted];
m7_77 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_57  [key=2, style=dotted];
m7_79 -> m7_76  [key=0, style=bold, color=blue];
m7_89 -> m7_232  [key=0, style=solid];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_61  [key=2, style=dotted];
m7_233 -> m7_89  [key=0, style=bold, color=blue];
m7_69 -> m7_70  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> n31  [key=2, style=dotted];
m7_70 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_57  [key=2, style=dotted];
m7_72 -> m7_69  [key=0, style=bold, color=blue];
m7_53 -> m7_54  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> n31  [key=2, style=dotted];
m7_54 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [key=2, style=dotted];
m7_56 -> m7_53  [key=0, style=bold, color=blue];
m7_164 -> m7_165  [key=0, style=solid];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_89  [key=2, style=dotted];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_90  [key=2, style=dotted];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_91  [key=2, style=dotted];
m7_167 -> m7_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_168 -> m7_164  [key=0, style=bold, color=blue];
m7_235 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_185  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_204  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_205  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_222  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_223  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_235 -> m7_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m7_236 -> m7_196  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_236 -> m7_199  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_237 -> m7_214  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_237 -> m7_217  [key=1, style=dashed, color=darkseagreen4, label=exception];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_53  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_14  [key=2, style=dotted];
m9_50 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_14  [key=2, style=dotted];
m9_51 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_52 -> m9_48  [key=0, style=bold, color=blue];
m9_133 -> m9_134  [key=0, style=solid];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_80  [key=2, style=dotted];
m9_134 -> m9_138  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_14  [key=2, style=dotted];
m9_135 -> m9_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_14  [key=2, style=dotted];
m9_136 -> m9_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_137 -> m9_133  [key=0, style=bold, color=blue];
m9_63 -> m9_64  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_68  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_14  [key=2, style=dotted];
m9_65 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_14  [key=2, style=dotted];
m9_66 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_67 -> m9_63  [key=0, style=bold, color=blue];
m9_95 -> m9_96  [key=0, style=solid];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_80  [key=2, style=dotted];
m9_96 -> m9_100  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_14  [key=2, style=dotted];
m9_97 -> m9_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_14  [key=2, style=dotted];
m9_98 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_99 -> m9_95  [key=0, style=bold, color=blue];
m9_114 -> m9_173  [key=0, style=solid];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> n31  [key=2, style=dotted];
m9_173 -> m9_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_174 -> m9_114  [key=0, style=bold, color=blue];
m9_118 -> m9_119  [key=0, style=solid];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_80  [key=2, style=dotted];
m9_119 -> m9_123  [key=2, style=dotted];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_14  [key=2, style=dotted];
m9_120 -> m9_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_14  [key=2, style=dotted];
m9_121 -> m9_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_122 -> m9_118  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_13  [key=2, style=dotted];
m9_32 -> m9_30  [key=0, style=bold, color=blue];
m9_107 -> m9_108  [key=0, style=solid];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_80  [key=2, style=dotted];
m9_108 -> m9_81  [key=2, style=dotted];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_14  [key=2, style=dotted];
m9_109 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_110 -> m9_107  [key=0, style=bold, color=blue];
m9_20 -> m9_162  [key=0, style=solid];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> n31  [key=2, style=dotted];
m9_162 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_163 -> m9_20  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_14  [key=2, style=dotted];
m9_10 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=2, style=dotted];
m9_11 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_12 -> m9_8  [key=0, style=bold, color=blue];
m9_19 -> m9_157  [key=0, style=solid];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> n31  [key=2, style=dotted];
m9_157 -> m9_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_158 -> m9_19  [key=0, style=bold, color=blue];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_38  [key=2, style=dotted];
m9_47 -> m9_45  [key=0, style=bold, color=blue];
m9_115 -> m9_116  [key=0, style=solid];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_80  [key=2, style=dotted];
m9_116 -> m9_100  [key=2, style=dotted];
m9_117 -> m9_115  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_4  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_175 -> m9_176  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_5  [key=0, style=bold, color=blue];
m9_15 -> m9_16  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_18  [key=2, style=dotted];
m9_16 -> m9_19  [key=2, style=dotted];
m9_16 -> m9_20  [key=2, style=dotted];
m9_16 -> n31  [key=2, style=dotted];
m9_16 -> m9_22  [key=2, style=dotted];
m9_16 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_17 -> m9_15  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_23  [key=0, style=bold, color=blue];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=2, style=dotted];
m9_28 -> m9_26  [key=0, style=bold, color=blue];
m9_39 -> m9_40  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_18  [key=2, style=dotted];
m9_40 -> m9_19  [key=2, style=dotted];
m9_40 -> m9_20  [key=2, style=dotted];
m9_40 -> n31  [key=2, style=dotted];
m9_40 -> m9_22  [key=2, style=dotted];
m9_41 -> m9_39  [key=0, style=bold, color=blue];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_29  [key=2, style=dotted];
m9_44 -> m9_42  [key=0, style=bold, color=blue];
m9_54 -> m9_55  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_18  [key=2, style=dotted];
m9_55 -> m9_19  [key=2, style=dotted];
m9_55 -> m9_20  [key=2, style=dotted];
m9_55 -> n31  [key=2, style=dotted];
m9_55 -> m9_22  [key=2, style=dotted];
m9_55 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_56 -> m9_54  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_58 -> m9_59  [key=0, style=solid];
m9_59 -> m9_57  [key=0, style=bold, color=blue];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_29  [key=2, style=dotted];
m9_62 -> m9_60  [key=0, style=bold, color=blue];
m9_69 -> m9_70  [key=0, style=solid];
m9_72 -> m9_73  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_18  [key=2, style=dotted];
m9_70 -> m9_19  [key=2, style=dotted];
m9_70 -> m9_20  [key=2, style=dotted];
m9_70 -> n31  [key=2, style=dotted];
m9_70 -> m9_22  [key=2, style=dotted];
m9_71 -> m9_69  [key=0, style=bold, color=blue];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_29  [key=2, style=dotted];
m9_74 -> m9_72  [key=0, style=bold, color=blue];
m9_82 -> m9_83  [key=0, style=solid, color=red];
m9_89 -> m9_90  [key=0, style=solid];
m9_83 -> m9_84  [key=0, style=solid, color=red];
m9_83 -> m9_18  [key=2, style=dotted, color=red];
m9_83 -> m9_19  [key=2, style=dotted, color=red];
m9_83 -> m9_85  [key=2, style=dotted, color=red];
m9_83 -> n31  [key=2, style=dotted, color=red];
m9_83 -> m9_22  [key=2, style=dotted, color=red];
m9_83 -> m9_86  [key=1, style=dashed, color=red, label="lambda expression"];
m9_84 -> m9_82  [key=0, style=bold, color=blue];
m9_86 -> m9_87  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_88 -> m9_86  [key=0, style=bold, color=blue];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_29  [key=2, style=dotted];
m9_91 -> m9_89  [key=0, style=bold, color=blue];
m9_101 -> m9_102  [key=0, style=solid];
m9_104 -> m9_105  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_18  [key=2, style=dotted];
m9_102 -> m9_19  [key=2, style=dotted];
m9_102 -> m9_85  [key=2, style=dotted];
m9_102 -> n31  [key=2, style=dotted];
m9_102 -> m9_22  [key=2, style=dotted];
m9_103 -> m9_101  [key=0, style=bold, color=blue];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_29  [key=2, style=dotted];
m9_106 -> m9_104  [key=0, style=bold, color=blue];
m9_111 -> m9_112  [key=0, style=solid];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> n31  [key=2, style=dotted];
m9_112 -> m9_114  [key=2, style=dotted];
m9_112 -> m9_22  [key=2, style=dotted];
m9_113 -> m9_111  [key=0, style=bold, color=blue];
m9_124 -> m9_125  [key=0, style=solid];
m9_130 -> m9_131  [key=0, style=solid];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_18  [key=2, style=dotted];
m9_125 -> m9_19  [key=2, style=dotted];
m9_125 -> m9_85  [key=2, style=dotted];
m9_125 -> n31  [key=2, style=dotted];
m9_125 -> m9_22  [key=2, style=dotted];
m9_125 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_126 -> m9_124  [key=0, style=bold, color=blue];
m9_127 -> m9_128  [key=0, style=solid];
m9_128 -> m9_129  [key=0, style=solid];
m9_129 -> m9_127  [key=0, style=bold, color=blue];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_29  [key=2, style=dotted];
m9_132 -> m9_130  [key=0, style=bold, color=blue];
m9_139 -> m9_140  [key=0, style=solid];
m9_142 -> m9_143  [key=0, style=solid];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_18  [key=2, style=dotted];
m9_140 -> m9_19  [key=2, style=dotted];
m9_140 -> m9_85  [key=2, style=dotted];
m9_140 -> n31  [key=2, style=dotted];
m9_140 -> m9_22  [key=2, style=dotted];
m9_141 -> m9_139  [key=0, style=bold, color=blue];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_29  [key=2, style=dotted];
m9_144 -> m9_142  [key=0, style=bold, color=blue];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_152  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_156  [key=2, style=dotted];
m9_153 -> m9_154  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_150 -> m9_151  [key=0, style=solid];
m9_151 -> m9_148  [key=0, style=bold, color=blue];
m9_155 -> m9_153  [key=0, style=bold, color=blue];
m9_159 -> m9_160  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_161 -> m9_159  [key=0, style=bold, color=blue];
m9_164 -> m9_165  [key=0, style=solid];
m9_165 -> m9_166  [key=0, style=solid];
m9_166 -> m9_164  [key=0, style=bold, color=blue];
m9_169 -> m9_170  [key=0, style=solid];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_172  [key=2, style=dotted];
m9_171 -> m9_169  [key=0, style=bold, color=blue];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_172  [key=2, style=dotted];
m9_177 -> m9_175  [key=0, style=bold, color=blue];
m9_33 -> m9_34  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_38  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_14  [key=2, style=dotted];
m9_35 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_14  [key=2, style=dotted];
m9_36 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_37 -> m9_33  [key=0, style=bold, color=blue];
m9_92 -> m9_93  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_80  [key=2, style=dotted];
m9_93 -> m9_81  [key=2, style=dotted];
m9_94 -> m9_92  [key=0, style=bold, color=blue];
m9_85 -> m9_167  [key=0, style=solid];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> n31  [key=2, style=dotted];
m9_167 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_168 -> m9_85  [key=0, style=bold, color=blue];
m9_18 -> m9_145  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_145 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label=validator];
m9_145 -> m9_145  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, bool> validator"];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> n31  [key=2, style=dotted];
m9_146 -> m9_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_147 -> m9_18  [key=0, style=bold, color=blue];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_77  [key=0, style=solid, color=red];
m9_76 -> m9_80  [key=2, style=dotted];
m9_76 -> m9_81  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid, color=red];
m9_77 -> m9_14  [key=2, style=dotted, color=red];
m9_77 -> m9_82  [key=1, style=dashed, color=red, label="lambda expression"];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_14  [key=2, style=dotted];
m9_78 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_79 -> m9_75  [key=0, style=bold, color=blue];
m9_178 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_77  [key=1, style=dashed, color=red, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_178 -> m9_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.UnitTests.PerformTests"];
m9_179 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label=validator];
m10_16 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m10_16 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_16 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_16 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_16 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_26 -> m10_37  [key=2, style=dotted];
m10_26 -> m10_33  [key=0, style=solid];
m10_26 -> m10_36  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_27  [key=0, style=solid];
m10_25 -> m10_35  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_39  [key=2, style=dotted];
m10_28 -> m10_40  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_41  [key=2, style=dotted];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=0, style=solid];
m10_17 -> m10_34  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [key=0, style=solid];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=0, style=solid];
m10_23 -> m10_25  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_27 -> m10_38  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid];
m10_30 -> m10_33  [key=0, style=solid];
m10_18 -> m10_33  [key=0, style=solid];
m10_18 -> n27  [key=2, style=dotted];
m10_20 -> m10_33  [key=0, style=solid];
m10_20 -> n27  [key=2, style=dotted];
m10_22 -> m10_33  [key=0, style=solid];
m10_22 -> n27  [key=2, style=dotted];
m10_24 -> m10_33  [key=0, style=solid];
m10_24 -> n27  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_42  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_33 -> m10_16  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_46  [key=2, style=dotted];
m10_45 -> m10_43  [key=0, style=bold, color=blue];
m10_38 -> m10_47  [key=0, style=solid];
m10_38 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_38 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m10_47 -> m10_54  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_47 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_47 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_47 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_48 -> m10_49  [key=0, style=solid];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_55  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_56  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_53 -> m10_38  [key=0, style=bold, color=blue];
m10_2 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m10_2 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_11  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_6 -> m10_9  [key=0, style=solid];
m10_6 -> n27  [key=2, style=dotted];
m10_4 -> m10_9  [key=0, style=solid];
m10_4 -> n27  [key=2, style=dotted];
m10_9 -> m10_2  [key=0, style=bold, color=blue];
m10_15 -> m10_57  [key=0, style=solid, color=green];
m10_15 -> m10_58  [key=1, style=dashed, color=green, label=object];
m10_15 -> m10_60  [key=1, style=dashed, color=green, label=object];
m10_15 -> m10_61  [key=1, style=dashed, color=green, label=object];
m10_57 -> m10_58  [key=0, style=solid, color=green];
m10_57 -> m10_54  [key=2, style=dotted, color=green];
m10_57 -> m10_59  [key=1, style=dashed, color=green, label=result];
m10_57 -> m10_68  [key=1, style=dashed, color=green, label=result];
m10_57 -> m10_69  [key=1, style=dashed, color=green, label=result];
m10_58 -> m10_59  [key=0, style=solid, color=green];
m10_58 -> m10_60  [key=0, style=solid, color=green];
m10_59 -> m10_70  [key=0, style=solid, color=green];
m10_68 -> m10_60  [key=0, style=solid, color=green];
m10_68 -> m10_77  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_60 -> m10_61  [key=0, style=solid, color=green];
m10_60 -> m10_69  [key=0, style=solid, color=green];
m10_60 -> m10_71  [key=2, style=dotted, color=green];
m10_60 -> m10_67  [key=1, style=dashed, color=green, label=descriptor];
m10_60 -> m10_68  [key=1, style=dashed, color=green, label=descriptor];
m10_61 -> m10_62  [key=0, style=solid, color=green];
m10_61 -> m10_72  [key=2, style=dotted, color=green];
m10_61 -> m10_63  [key=1, style=dashed, color=green, label=propertyValue];
m10_61 -> m10_64  [key=1, style=dashed, color=green, label=propertyValue];
m10_61 -> m10_65  [key=1, style=dashed, color=green, label=propertyValue];
m10_67 -> m10_70  [key=0, style=solid, color=green];
m10_67 -> m10_76  [key=2, style=dotted, color=green];
m10_67 -> m10_37  [key=2, style=dotted, color=green];
m10_62 -> m10_63  [key=0, style=solid, color=green];
m10_62 -> m10_68  [key=1, style=dashed, color=green, label=value];
m10_63 -> m10_64  [key=0, style=solid, color=green];
m10_63 -> m10_68  [key=0, style=solid, color=green];
m10_64 -> m10_65  [key=0, style=solid, color=green];
m10_64 -> m10_73  [key=2, style=dotted, color=green];
m10_64 -> m10_74  [key=2, style=dotted, color=green];
m10_65 -> m10_66  [key=0, style=solid, color=green];
m10_65 -> m10_68  [key=0, style=solid, color=green];
m10_65 -> m10_75  [key=2, style=dotted, color=green];
m10_66 -> m10_67  [key=0, style=solid, color=green];
m10_70 -> m10_15  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid];
m10_13 -> m10_15  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_16  [key=2, style=dotted];
m10_14 -> m10_12  [key=0, style=bold, color=blue];
m10_78 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_78 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_78 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_78 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_78 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m10_78 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m11_31 -> m11_39  [key=0, style=solid];
m11_31 -> m11_13  [key=3, color=darkorchid, style=bold, label="Parameter variable int i"];
m11_31 -> m11_41  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m11_31 -> m11_43  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m11_31 -> m11_45  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m11_31 -> m11_47  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_42  [key=0, style=solid];
m11_39 -> m11_44  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_41 -> m11_46  [key=0, style=solid];
m11_43 -> m11_46  [key=0, style=solid];
m11_45 -> m11_46  [key=0, style=solid];
m11_47 -> m11_46  [key=0, style=solid];
m11_46 -> m11_31  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m11_12 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m11_12 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_13 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_13 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_13 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_13 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_13 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_13 -> m11_13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_29  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_33  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_34  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_28  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_30  [key=2, style=dotted];
m11_22 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m11_22 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m11_22 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_31  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_32  [key=2, style=dotted];
m11_24 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_27 -> m11_14  [key=0, style=solid];
m11_27 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_16 -> m11_28  [key=0, style=solid];
m11_17 -> m11_18  [key=0, style=solid];
m11_18 -> m11_28  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_21 -> m11_28  [key=0, style=solid];
m11_28 -> m11_12  [key=0, style=bold, color=blue];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=2, style=dotted];
m11_50 -> m11_48  [key=0, style=bold, color=blue];
m11_35 -> m11_36  [key=0, style=solid];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_38  [key=2, style=dotted];
m11_37 -> m11_35  [key=0, style=bold, color=blue];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_57  [key=2, style=dotted];
m11_53 -> m11_58  [key=2, style=dotted];
m11_53 -> m11_59  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_60  [key=2, style=dotted];
m11_54 -> m11_61  [key=2, style=dotted];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_62  [key=2, style=dotted];
m11_55 -> m11_63  [key=2, style=dotted];
m11_56 -> m11_52  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ILongRunningProcess"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_2 -> m11_8  [key=0, style=solid];
m11_2 -> n27  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_11  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_0  [key=0, style=bold, color=blue];
m11_64 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_64 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
m11_65 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_66 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_23 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_23 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_23 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [key=0, style=solid];
m12_24 -> m12_33  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_35  [key=2, style=dotted];
m12_28 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m12_28 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_31  [key=0, style=solid];
m12_29 -> m12_36  [key=2, style=dotted];
m12_30 -> m12_32  [key=0, style=solid];
m12_30 -> m12_37  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_25 -> m12_32  [key=0, style=solid];
m12_25 -> n27  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_27 -> m12_32  [key=0, style=solid];
m12_27 -> m12_34  [key=2, style=dotted];
m12_32 -> m12_23  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_0 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_0  [key=0, style=bold, color=blue];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_38 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_41  [key=0, style=solid];
m12_39 -> m12_33  [key=2, style=dotted];
m12_41 -> m12_44  [key=0, style=solid];
m12_41 -> m12_36  [key=2, style=dotted];
m12_41 -> m12_45  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_46  [key=2, style=dotted];
m12_43 -> m12_47  [key=2, style=dotted];
m12_40 -> m12_44  [key=0, style=solid];
m12_40 -> n27  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_44 -> m12_38  [key=0, style=bold, color=blue];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m12_6 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m12_6 -> m12_13  [key=1, style=dashed, color=green, label="HangFire.States.IState"];
m12_6 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m12_6 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m12_6 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m12_6 -> m12_18  [key=1, style=dashed, color=green, label="HangFire.States.IState"];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_8 -> m12_20  [key=0, style=solid];
m12_8 -> n27  [key=2, style=dotted];
m12_10 -> m12_20  [key=0, style=solid];
m12_10 -> n27  [key=2, style=dotted];
m12_12 -> m12_20  [key=0, style=solid];
m12_12 -> n27  [key=2, style=dotted];
m12_14 -> m12_20  [key=0, style=solid];
m12_14 -> n27  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_22  [key=2, style=dotted];
m12_20 -> m12_6  [key=0, style=bold, color=blue];
m12_48 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_53  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_54  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_48  [key=0, style=bold, color=blue];
m12_55 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m12_55 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=2, style=dotted];
m13_16 -> m13_14  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=2, style=dotted];
m13_4 -> m13_7  [key=2, style=dotted];
m13_5 -> m13_3  [key=0, style=bold, color=blue];
m13_17 -> m13_17  [key=3, color=darkorchid, style=bold, label="Field variable string Name"];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_12  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [key=2, style=dotted];
m13_11 -> m13_8  [key=0, style=bold, color=blue];
m13_18 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m13_18 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m14_20 -> m14_21  [key=0, style=solid, color=red];
m14_20 -> m14_12  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime DeserializeDateTime"];
m14_20 -> m14_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m14_21 -> m14_22  [key=0, style=solid, color=red];
m14_21 -> m14_23  [key=2, style=dotted, color=red];
m14_21 -> m14_12  [key=2, style=dotted, color=red];
m14_22 -> m14_20  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_24 -> m14_25  [key=0, style=solid, color=green];
m14_24 -> m14_27  [key=1, style=dashed, color=green, label=string];
m14_24 -> m14_26  [key=3, color=green, style=bold, label="method methodReturn System.DateTime? DeserializeNullableDateTime"];
m14_24 -> m14_20  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? DeserializeNullableDateTime"];
m14_25 -> m14_26  [key=0, style=solid, color=green];
m14_25 -> m14_27  [key=0, style=solid, color=green];
m14_25 -> m14_29  [key=2, style=dotted, color=green];
m14_27 -> m14_28  [key=0, style=solid, color=green];
m14_27 -> m14_20  [key=2, style=dotted, color=green];
m14_26 -> m14_28  [key=0, style=solid, color=green];
m14_28 -> m14_24  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_16  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime value"];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label=elapsedTime];
m14_11 -> m14_8  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> n31  [key=2, style=dotted];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_15  [key=2, style=dotted];
m14_14 -> m14_12  [key=0, style=bold, color=blue];
m14_16 -> m14_17  [key=0, style=solid, color=red];
m14_17 -> m14_18  [key=0, style=solid, color=red];
m14_17 -> m14_8  [key=2, style=dotted, color=red];
m14_17 -> m14_19  [key=2, style=dotted, color=red];
m14_18 -> m14_16  [key=0, style=bold, color=blue];
m15_51 -> m15_52  [key=0, style=solid];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_62  [key=2, style=dotted];
m15_53 -> m15_32  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_63  [key=2, style=dotted];
m15_56 -> m15_54  [key=0, style=solid];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_64  [key=2, style=dotted];
m15_57 -> m15_44  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_61  [key=0, style=solid];
m15_58 -> m15_65  [key=2, style=dotted];
m15_60 -> m15_57  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_66  [key=2, style=dotted];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_57  [key=0, style=solid];
m15_59 -> m15_60  [key=0, style=solid];
m15_61 -> m15_51  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_0 -> m15_5  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m15_0 -> m15_6  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m15_0 -> m15_11  [key=1, style=dashed, color=green, label="HangFire.JobActivator"];
m15_0 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_0 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_0 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_1 -> m15_15  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid, color=green];
m15_2 -> m15_5  [key=0, style=solid];
m15_2 -> n27  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_5 -> m15_0  [key=0, style=bold, color=blue];
m15_5 -> m15_6  [key=0, style=solid, color=green];
m15_6 -> m15_7  [key=0, style=solid, color=green];
m15_6 -> m15_8  [key=0, style=solid, color=green];
m15_7 -> m15_14  [key=0, style=solid, color=green];
m15_7 -> n27  [key=2, style=dotted, color=green];
m15_7 -> m15_8  [key=0, style=solid, color=red];
m15_8 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_8 -> m15_9  [key=0, style=solid, color=red];
m15_8 -> m15_10  [key=0, style=solid];
m15_8 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_11  [key=2, style=dotted, color=red];
m15_8 -> m15_12  [key=2, style=dotted, color=red];
m15_8 -> m15_13  [key=2, style=dotted, color=red];
m15_11 -> m15_12  [key=0, style=solid, color=green];
m15_11 -> m15_21  [key=2, style=dotted, color=green];
m15_11 -> m15_22  [key=2, style=dotted, color=green];
m15_11 -> m15_23  [key=2, style=dotted, color=green];
m15_10 -> m15_11  [key=0, style=solid, color=green];
m15_10 -> m15_19  [key=2, style=dotted];
m15_10 -> m15_20  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid, color=green];
m15_12 -> m15_24  [key=2, style=dotted, color=green];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_25  [key=2, style=dotted];
m15_9 -> m15_14  [key=0, style=solid];
m15_9 -> m15_18  [key=2, style=dotted];
m15_9 -> m15_7  [key=0, style=bold, color=blue];
m15_14 -> m15_0  [key=0, style=bold, color=blue];
m15_14 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m15_14 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m15_14 -> m15_8  [key=1, style=dashed, color=red, label="HangFire.States.FailedState"];
m15_26 -> m15_27  [key=0, style=solid, color=green];
m15_27 -> m15_28  [key=0, style=solid, color=green];
m15_27 -> m15_30  [key=2, style=dotted, color=green];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_31  [key=2, style=dotted];
m15_29 -> m15_26  [key=0, style=bold, color=blue];
m15_63 -> m15_94  [key=0, style=solid];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_85  [key=2, style=dotted];
m15_94 -> m15_88  [key=2, style=dotted];
m15_94 -> m15_96  [key=2, style=dotted];
m15_95 -> m15_63  [key=0, style=bold, color=blue];
m15_99 -> m15_76  [key=2, style=dotted];
m15_99 -> m15_99  [key=3, color=darkorchid, style=bold, label="Local variable string insertSql"];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_65 -> m15_97  [key=0, style=solid];
m15_65 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_65 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_65 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_65 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_97 -> m15_75  [key=2, style=dotted];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_97 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_98 -> m15_76  [key=2, style=dotted];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_77  [key=2, style=dotted];
m15_101 -> m15_65  [key=0, style=bold, color=blue];
m15_44 -> m15_45  [key=0, style=solid, color=green];
m15_45 -> m15_46  [key=0, style=solid, color=green];
m15_45 -> m15_50  [key=2, style=dotted, color=green];
m15_46 -> m15_47  [key=0, style=solid, color=green];
m15_46 -> m15_50  [key=2, style=dotted, color=green];
m15_47 -> m15_48  [key=0, style=solid, color=green];
m15_47 -> m15_50  [key=2, style=dotted, color=green];
m15_48 -> m15_50  [key=2, style=dotted];
m15_48 -> m15_49  [key=0, style=solid];
m15_49 -> m15_44  [key=0, style=bold, color=blue];
m15_62 -> m15_67  [key=0, style=solid];
m15_67 -> m15_68  [key=0, style=solid];
m15_67 -> m15_75  [key=2, style=dotted];
m15_67 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_67 -> m15_72  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_67 -> m15_73  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_76  [key=2, style=dotted];
m15_68 -> m15_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_76  [key=2, style=dotted];
m15_69 -> m15_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_73  [key=0, style=solid];
m15_72 -> m15_70  [key=0, style=solid];
m15_72 -> m15_76  [key=2, style=dotted];
m15_72 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_77  [key=2, style=dotted];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m15_74 -> m15_62  [key=0, style=bold, color=blue];
m15_32 -> m15_33  [key=0, style=solid, color=green];
m15_33 -> m15_33  [key=3, color=green, style=bold, label="Local variable string enqueueJobSql"];
m15_33 -> m15_34  [key=0, style=solid, color=green];
m15_33 -> m15_38  [key=2, style=dotted, color=green];
m15_33 -> m15_39  [key=2, style=dotted, color=green];
m15_33 -> m15_40  [key=2, style=dotted, color=green];
m15_34 -> m15_35  [key=0, style=solid, color=green];
m15_34 -> m15_38  [key=2, style=dotted];
m15_34 -> m15_41  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid, color=green];
m15_35 -> m15_38  [key=2, style=dotted, color=green];
m15_35 -> m15_42  [key=2, style=dotted, color=green];
m15_36 -> m15_37  [key=0, style=solid, color=green];
m15_36 -> m15_38  [key=2, style=dotted, color=green];
m15_36 -> m15_43  [key=2, style=dotted, color=green];
m15_37 -> m15_32  [key=0, style=bold, color=blue];
m15_106 -> m15_107  [key=0, style=solid];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_81  [key=2, style=dotted];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_85  [key=2, style=dotted];
m15_83 -> m15_10  [key=2, style=dotted];
m15_83 -> m15_87  [key=2, style=dotted];
m15_83 -> m15_88  [key=2, style=dotted];
m15_83 -> m15_89  [key=2, style=dotted];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_85  [key=2, style=dotted];
m15_91 -> m15_93  [key=2, style=dotted];
m15_78 -> m15_79  [key=0, style=solid];
m15_80 -> m15_78  [key=0, style=bold, color=blue];
m15_82 -> m15_83  [key=0, style=solid];
m15_84 -> m15_82  [key=0, style=bold, color=blue];
m15_90 -> m15_91  [key=0, style=solid];
m15_92 -> m15_90  [key=0, style=bold, color=blue];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_105  [key=2, style=dotted];
m15_107 -> m15_85  [key=2, style=dotted];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_109  [key=2, style=dotted];
m15_102 -> m15_103  [key=0, style=solid];
m15_104 -> m15_102  [key=0, style=bold, color=blue];
m15_108 -> m15_106  [key=0, style=bold, color=blue];
m15_110 -> m15_5  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_11  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_12  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_27  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_33  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_35  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_36  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_45  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_46  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_47  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m15_110 -> m15_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_110 -> m15_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m15_111 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m15_112 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_112 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_1 -> m18_7  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_2 -> m18_6  [key=0, style=solid];
m18_2 -> n27  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_6 -> m18_0  [key=0, style=bold, color=blue];
m18_9 -> m18_10  [key=0, style=solid, color=green];
m18_10 -> m18_11  [key=0, style=solid, color=green];
m18_10 -> m18_12  [key=2, style=dotted, color=green];
m18_10 -> m18_13  [key=2, style=dotted, color=green];
m18_10 -> m18_14  [key=2, style=dotted, color=green];
m18_11 -> m18_9  [key=0, style=bold, color=blue];
m18_15 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m18_15 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m18_15 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m18_15 -> m18_10  [key=1, style=dashed, color=green, label="HangFire.States.ProcessingState"];
m20_15 -> m20_16  [key=0, style=solid];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [key=2, style=dotted];
m20_16 -> m20_19  [key=2, style=dotted];
m20_17 -> m20_15  [key=0, style=bold, color=blue];
m20_10 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_13  [key=2, style=dotted];
m20_11 -> m20_14  [key=2, style=dotted];
m20_12 -> m20_10  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m20_0 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m20_0 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_0 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_7 -> m20_8  [key=0, style=solid];
m20_2 -> m20_8  [key=0, style=solid];
m20_2 -> n27  [key=2, style=dotted];
m20_4 -> m20_8  [key=0, style=solid];
m20_4 -> n27  [key=2, style=dotted];
m20_8 -> m20_0  [key=0, style=bold, color=blue];
m20_20 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m20_20 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m20_20 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m20_20 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m20_20 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m21_40 -> m21_41  [key=0, style=solid];
m21_41 -> m21_42  [key=0, style=solid];
m21_41 -> m21_44  [key=0, style=solid];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_40  [key=2, style=dotted];
m21_44 -> m21_45  [key=0, style=solid];
m21_44 -> m21_49  [key=2, style=dotted];
m21_45 -> m21_46  [key=0, style=solid];
m21_45 -> m21_47  [key=0, style=solid];
m21_45 -> m21_50  [key=2, style=dotted];
m21_47 -> m21_31  [key=2, style=dotted];
m21_47 -> m21_48  [key=0, style=solid];
m21_43 -> m21_48  [key=0, style=solid];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_51  [key=2, style=dotted];
m21_48 -> m21_40  [key=0, style=bold, color=blue];
m21_34 -> m21_113  [key=0, style=solid];
m21_113 -> m21_114  [key=0, style=solid];
m21_113 -> m21_115  [key=2, style=dotted];
m21_113 -> m21_116  [key=2, style=dotted];
m21_114 -> m21_34  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_2 -> m21_4  [key=0, style=solid];
m21_2 -> m21_5  [key=2, style=dotted];
m21_4 -> m21_0  [key=0, style=bold, color=blue];
m21_55 -> m21_56  [key=0, style=solid];
m21_56 -> m21_9  [key=2, style=dotted];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_58  [key=2, style=dotted];
m21_57 -> m21_55  [key=0, style=bold, color=blue];
m21_52 -> m21_53  [key=0, style=solid];
m21_53 -> m21_55  [key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_54 -> m21_52  [key=0, style=bold, color=blue];
m21_9 -> m21_62  [key=0, style=solid];
m21_9 -> m21_6  [key=0, style=bold, color=blue];
m21_62 -> m21_65  [key=2, style=dotted];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_64  [key=2, style=dotted];
m21_63 -> m21_9  [key=0, style=bold, color=blue];
m21_83 -> m21_93  [key=0, style=solid];
m21_83 -> m21_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_83 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_83 -> m21_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_83 -> m21_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_94 -> n27  [key=2, style=dotted];
m21_94 -> m21_105  [key=0, style=solid];
m21_95 -> m21_82  [key=2, style=dotted];
m21_95 -> m21_96  [key=0, style=solid];
m21_95 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_95 -> m21_100  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_95 -> m21_101  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_95 -> m21_102  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_95 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_95 -> m21_104  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_93 -> m21_94  [key=0, style=solid];
m21_93 -> m21_95  [key=0, style=solid];
m21_97 -> m21_98  [key=0, style=solid];
m21_97 -> m21_100  [key=0, style=solid];
m21_98 -> m21_99  [key=0, style=solid];
m21_98 -> m21_106  [key=2, style=dotted];
m21_98 -> m21_107  [key=2, style=dotted];
m21_98 -> m21_108  [key=2, style=dotted];
m21_101 -> m21_102  [key=0, style=solid];
m21_101 -> m21_110  [key=2, style=dotted];
m21_101 -> m21_108  [key=2, style=dotted];
m21_102 -> m21_103  [key=0, style=solid];
m21_102 -> m21_111  [key=2, style=dotted];
m21_102 -> m21_108  [key=2, style=dotted];
m21_96 -> m21_97  [key=0, style=solid];
m21_96 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_96 -> m21_99  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_100 -> m21_101  [key=0, style=solid];
m21_100 -> m21_109  [key=2, style=dotted];
m21_100 -> m21_108  [key=2, style=dotted];
m21_103 -> m21_104  [key=0, style=solid];
m21_103 -> m21_112  [key=2, style=dotted];
m21_103 -> m21_108  [key=2, style=dotted];
m21_104 -> m21_105  [key=0, style=solid];
m21_99 -> m21_97  [key=0, style=solid];
m21_99 -> m21_99  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_105 -> m21_83  [key=0, style=bold, color=blue];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_6 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m21_7 -> m21_9  [key=2, style=dotted];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_10  [key=2, style=dotted];
m21_8 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_8 -> m21_6  [key=0, style=bold, color=blue];
m21_29 -> m21_117  [key=0, style=solid];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_119  [key=2, style=dotted];
m21_117 -> m21_120  [key=2, style=dotted];
m21_117 -> m21_121  [key=2, style=dotted];
m21_117 -> m21_122  [key=2, style=dotted];
m21_118 -> m21_29  [key=0, style=bold, color=blue];
m21_59 -> m21_60  [key=0, style=solid];
m21_60 -> m21_9  [key=2, style=dotted];
m21_60 -> m21_61  [key=0, style=solid];
m21_61 -> m21_59  [key=0, style=bold, color=blue];
m21_65 -> m21_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m21_65 -> m21_66  [key=0, style=solid];
m21_65 -> m21_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_65 -> m21_70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m21_65 -> m21_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_65 -> m21_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m21_65 -> m21_75  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
m21_65 -> m21_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_65 -> m21_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m21_65 -> m21_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m21_65 -> m21_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m21_80 -> m21_14  [key=2, style=dotted];
m21_80 -> m21_81  [key=0, style=solid];
m21_76 -> m21_80  [key=1, style=dashed, color=darkseagreen4, label=serverData];
m21_76 -> m21_77  [key=0, style=solid];
m21_76 -> m21_86  [key=2, style=dotted];
m21_79 -> m21_80  [key=0, style=solid];
m21_79 -> m21_89  [key=2, style=dotted];
m21_72 -> m21_80  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_72 -> m21_73  [key=0, style=solid];
m21_72 -> m21_82  [key=2, style=dotted];
m21_72 -> m21_74  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_72 -> m21_75  [key=1, style=dashed, color=darkseagreen4, label=processes];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_68  [key=0, style=solid];
m21_68 -> m21_69  [key=0, style=solid];
m21_68 -> m21_70  [key=0, style=solid];
m21_70 -> m21_72  [key=0, style=solid];
m21_70 -> m21_71  [key=0, style=solid];
m21_73 -> m21_74  [key=0, style=solid];
m21_73 -> m21_83  [key=2, style=dotted];
m21_73 -> m21_84  [key=2, style=dotted];
m21_74 -> m21_75  [key=0, style=solid];
m21_74 -> m21_85  [key=2, style=dotted];
m21_74 -> m21_84  [key=2, style=dotted];
m21_75 -> m21_76  [key=0, style=solid];
m21_75 -> m21_84  [key=2, style=dotted];
m21_77 -> m21_78  [key=0, style=solid];
m21_77 -> m21_87  [key=2, style=dotted];
m21_78 -> m21_79  [key=0, style=solid];
m21_78 -> m21_88  [key=2, style=dotted];
m21_67 -> m21_81  [key=0, style=solid];
m21_67 -> n27  [key=2, style=dotted];
m21_69 -> m21_81  [key=0, style=solid];
m21_69 -> n27  [key=2, style=dotted];
m21_71 -> m21_81  [key=0, style=solid];
m21_71 -> n27  [key=2, style=dotted];
m21_81 -> m21_65  [key=0, style=bold, color=blue];
m21_11 -> m21_12  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_14  [key=2, style=dotted];
m21_13 -> m21_11  [key=0, style=bold, color=blue];
m21_14 -> m21_22  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, object>"];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>"];
m21_14 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m21_14 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m21_14 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>"];
m21_90 -> m21_91  [key=0, style=solid];
m21_91 -> m21_83  [key=2, style=dotted];
m21_91 -> m21_92  [key=0, style=solid];
m21_91 -> m21_58  [key=2, style=dotted];
m21_92 -> m21_90  [key=0, style=bold, color=blue];
m21_22 -> m21_23  [key=0, style=solid, color=green];
m21_22 -> m21_24  [key=0, style=solid, color=green];
m21_21 -> m21_22  [key=0, style=solid, color=green];
m21_21 -> m21_23  [key=1, style=dashed, color=green, label=context];
m21_21 -> m21_28  [key=2, style=dotted];
m21_21 -> m21_29  [key=2, style=dotted];
m21_21 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label=context];
m21_23 -> m21_22  [key=0, style=solid, color=green];
m21_23 -> m21_23  [key=1, style=dashed, color=green, label=item];
m21_23 -> m21_30  [key=2, style=dotted, color=green];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_31  [key=2, style=dotted];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_17  [key=0, style=solid];
m21_15 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue"];
m21_15 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue"];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_19  [key=0, style=solid];
m21_17 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_19 -> m21_21  [key=0, style=solid];
m21_19 -> m21_20  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_32  [key=2, style=dotted];
m21_25 -> m21_33  [key=2, style=dotted];
m21_25 -> m21_34  [key=2, style=dotted];
m21_25 -> m21_35  [key=2, style=dotted];
m21_16 -> m21_26  [key=0, style=solid];
m21_16 -> n27  [key=2, style=dotted];
m21_16 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_18 -> m21_26  [key=0, style=solid];
m21_18 -> n27  [key=2, style=dotted];
m21_18 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m21_20 -> m21_26  [key=0, style=solid];
m21_20 -> n27  [key=2, style=dotted];
m21_26 -> m21_14  [key=0, style=bold, color=blue];
m21_123 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m21_123 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m21_123 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m21_123 -> m21_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m21_123 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m21_123 -> m21_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m21_123 -> m21_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m22_106 -> m22_104  [key=0, style=bold, color=blue];
m22_22 -> m22_20  [key=0, style=bold, color=blue];
m22_270 -> m22_271  [key=0, style=solid];
m22_271 -> m22_272  [key=0, style=solid];
m22_271 -> m22_99  [key=2, style=dotted];
m22_271 -> m22_274  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_271 -> m22_275  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_271 -> m22_276  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_274 -> m22_275  [key=0, style=solid];
m22_274 -> m22_11  [key=2, style=dotted];
m22_274 -> m22_12  [key=2, style=dotted];
m22_274 -> m22_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_275 -> m22_276  [key=0, style=solid];
m22_275 -> m22_103  [key=2, style=dotted];
m22_276 -> m22_81  [key=2, style=dotted];
m22_276 -> m22_277  [key=0, style=solid];
m22_276 -> m22_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_272 -> m22_274  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_272 -> m22_282  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_272 -> m22_275  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_272 -> m22_276  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_272 -> m22_286  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_272 -> m22_8  [key=2, style=dotted];
m22_272 -> m22_273  [key=0, style=solid];
m22_272 -> m22_262  [key=2, style=dotted];
m22_272 -> m22_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_273 -> m22_274  [key=0, style=solid];
m22_273 -> m22_276  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m22_273 -> m22_286  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m22_273 -> m22_10  [key=2, style=dotted];
m22_277 -> m22_270  [key=0, style=bold, color=blue];
m22_136 -> m22_137  [key=0, style=solid];
m22_136 -> m22_134  [key=0, style=bold, color=blue];
m22_137 -> m22_138  [key=0, style=solid];
m22_137 -> m22_139  [key=2, style=dotted];
m22_138 -> m22_136  [key=0, style=bold, color=blue];
m22_138 -> m22_139  [key=0, style=solid];
m22_138 -> m22_142  [key=1, style=dashed, color=darkseagreen4, label=disposableMock];
m22_138 -> m22_144  [key=2, style=dotted];
m22_128 -> m22_129  [key=0, style=solid];
m22_128 -> m22_131  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_128 -> m22_132  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_129 -> m22_130  [key=0, style=solid, color=green];
m22_129 -> m22_107  [key=2, style=dotted];
m22_131 -> m22_132  [key=0, style=solid];
m22_131 -> m22_135  [key=0, style=solid];
m22_131 -> n31  [key=2, style=dotted];
m22_131 -> m22_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_132 -> m22_133  [key=0, style=solid];
m22_132 -> m22_33  [key=2, style=dotted];
m22_130 -> m22_131  [key=0, style=solid, color=green];
m22_130 -> m22_132  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_130 -> m22_133  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_130 -> m22_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_130 -> m22_51  [key=2, style=dotted, color=green];
m22_130 -> m22_135  [key=1, style=dashed, color=green, label=stateMachine];
m22_133 -> m22_134  [key=0, style=solid];
m22_133 -> m22_107  [key=2, style=dotted];
m22_133 -> m22_129  [key=0, style=bold, color=blue];
m22_134 -> m22_131  [key=0, style=solid];
m22_134 -> m22_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_134 -> m22_135  [key=0, style=solid];
m22_135 -> m22_128  [key=0, style=bold, color=blue];
m22_135 -> m22_136  [key=0, style=solid];
m22_135 -> m22_119  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_14 -> m22_8  [key=2, style=dotted];
m22_14 -> m22_9  [key=2, style=dotted];
m22_14 -> m22_16  [key=2, style=dotted];
m22_15 -> m22_13  [key=0, style=bold, color=blue];
m22_90 -> m22_88  [key=0, style=bold, color=blue];
m22_107 -> m22_108  [key=0, style=solid, color=green];
m22_71 -> m22_72  [key=0, style=solid];
m22_71 -> m22_69  [key=0, style=bold, color=blue];
m22_72 -> m22_73  [key=0, style=solid];
m22_72 -> m22_75  [key=0, style=solid];
m22_72 -> m22_76  [key=2, style=dotted];
m22_73 -> m22_74  [key=0, style=solid];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_77  [key=1, style=dashed, color=darkseagreen4, label=job];
m22_74 -> m22_8  [key=2, style=dotted];
m22_74 -> m22_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_75 -> m22_71  [key=0, style=bold, color=blue];
m22_75 -> m22_76  [key=0, style=solid];
m22_75 -> m22_80  [key=2, style=dotted];
m22_315 -> m22_316  [key=0, style=solid];
m22_320 -> m22_321  [key=0, style=solid];
m22_320 -> m22_328  [key=2, style=dotted];
m22_321 -> m22_322  [key=0, style=solid];
m22_321 -> m22_328  [key=2, style=dotted];
m22_322 -> m22_51  [key=2, style=dotted];
m22_322 -> m22_323  [key=0, style=solid];
m22_322 -> m22_324  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_324 -> m22_325  [key=0, style=solid];
m22_324 -> m22_329  [key=2, style=dotted];
m22_324 -> m22_269  [key=2, style=dotted];
m22_325 -> m22_81  [key=2, style=dotted];
m22_325 -> m22_326  [key=0, style=solid];
m22_325 -> m22_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_316 -> m22_320  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m22_316 -> m22_325  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m22_316 -> m22_317  [key=0, style=solid];
m22_316 -> m22_327  [key=2, style=dotted];
m22_319 -> m22_320  [key=0, style=solid];
m22_319 -> m22_11  [key=2, style=dotted];
m22_319 -> m22_12  [key=2, style=dotted];
m22_319 -> m22_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_318 -> m22_321  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m22_318 -> m22_319  [key=0, style=solid];
m22_318 -> m22_327  [key=2, style=dotted];
m22_323 -> m22_324  [key=0, style=solid];
m22_323 -> m22_325  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_323 -> m22_340  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_323 -> m22_344  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_323 -> m22_8  [key=2, style=dotted];
m22_323 -> m22_262  [key=2, style=dotted];
m22_323 -> m22_336  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_317 -> m22_11  [key=2, style=dotted];
m22_317 -> m22_12  [key=2, style=dotted];
m22_317 -> m22_318  [key=0, style=solid];
m22_317 -> m22_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_326 -> m22_315  [key=0, style=bold, color=blue];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_93  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_95  [key=2, style=dotted];
m22_93 -> m22_94  [key=0, style=solid];
m22_93 -> m22_96  [key=2, style=dotted];
m22_93 -> m22_91  [key=0, style=bold, color=blue];
m22_94 -> m22_91  [key=0, style=bold, color=blue];
m22_94 -> m22_95  [key=0, style=solid];
m22_235 -> m22_236  [key=0, style=solid];
m22_236 -> m22_237  [key=0, style=solid];
m22_236 -> m22_11  [key=2, style=dotted];
m22_236 -> m22_179  [key=2, style=dotted];
m22_236 -> m22_242  [key=2, style=dotted];
m22_236 -> m22_12  [key=2, style=dotted];
m22_236 -> m22_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_237 -> m22_238  [key=0, style=solid];
m22_237 -> m22_99  [key=2, style=dotted];
m22_237 -> m22_239  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_238 -> m22_239  [key=0, style=solid];
m22_238 -> m22_119  [key=2, style=dotted];
m22_238 -> m22_240  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_239 -> m22_81  [key=2, style=dotted];
m22_239 -> m22_240  [key=0, style=solid];
m22_239 -> m22_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_240 -> m22_241  [key=0, style=solid];
m22_240 -> m22_161  [key=2, style=dotted];
m22_241 -> m22_235  [key=0, style=bold, color=blue];
m22_103 -> m22_101  [key=0, style=solid];
m22_103 -> m22_107  [key=2, style=dotted];
m22_103 -> m22_103  [key=1, style=dashed, color=darkseagreen4, label=pair];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_10  [key=2, style=dotted];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_120  [key=0, style=bold, color=blue];
m22_125 -> m22_126  [key=0, style=solid];
m22_125 -> m22_121  [key=2, style=dotted];
m22_126 -> m22_127  [key=0, style=solid];
m22_126 -> m22_123  [key=2, style=dotted];
m22_126 -> m22_128  [key=2, style=dotted];
m22_127 -> m22_124  [key=0, style=bold, color=blue];
m22_127 -> m22_125  [key=0, style=bold, color=blue];
m22_148 -> m22_149  [key=0, style=solid];
m22_144 -> m22_145  [key=0, style=solid];
m22_121 -> m22_51  [key=2, style=dotted];
m22_121 -> m22_122  [key=0, style=solid];
m22_121 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_117 -> m22_118  [key=0, style=solid];
m22_117 -> m22_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m22_118 -> m22_119  [key=0, style=solid];
m22_118 -> m22_121  [key=2, style=dotted];
m22_118 -> m22_116  [key=0, style=bold, color=blue];
m22_119 -> m22_120  [key=0, style=solid];
m22_119 -> m22_122  [key=2, style=dotted];
m22_119 -> m22_123  [key=2, style=dotted];
m22_120 -> m22_117  [key=0, style=bold, color=blue];
m22_120 -> m22_121  [key=0, style=solid];
m22_56 -> m22_57  [key=0, style=solid];
m22_57 -> m22_51  [key=2, style=dotted];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_62  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_57 -> m22_55  [key=0, style=bold, color=blue];
m22_58 -> n31  [key=2, style=dotted];
m22_58 -> m22_59  [key=0, style=solid];
m22_58 -> m22_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_59 -> m22_33  [key=2, style=dotted];
m22_59 -> m22_60  [key=0, style=solid];
m22_59 -> m22_8  [key=2, style=dotted];
m22_59 -> m22_9  [key=2, style=dotted];
m22_60 -> m22_56  [key=0, style=bold, color=blue];
m22_60 -> m22_58  [key=0, style=bold, color=blue];
m22_46 -> m22_47  [key=0, style=solid];
m22_47 -> m22_51  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_53  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_47 -> m22_50  [key=2, style=dotted];
m22_47 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_47 -> m22_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_48 -> n31  [key=2, style=dotted];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_48 -> m22_51  [key=2, style=dotted];
m22_49 -> m22_33  [key=2, style=dotted];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_46  [key=0, style=bold, color=blue];
m22_50 -> m22_46  [key=0, style=bold, color=blue];
m22_105 -> m22_106  [key=0, style=solid];
m22_38 -> m22_39  [key=0, style=solid];
m22_85 -> m22_86  [key=0, style=solid, color=green];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_24  [key=0, style=bold, color=blue];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_34  [key=2, style=dotted];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_35  [key=2, style=dotted];
m22_28 -> m22_36  [key=2, style=dotted];
m22_28 -> m22_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_35  [key=2, style=dotted];
m22_29 -> m22_37  [key=2, style=dotted];
m22_29 -> m22_36  [key=2, style=dotted];
m22_29 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_33  [key=0, style=solid];
m22_30 -> m22_38  [key=2, style=dotted];
m22_30 -> n31  [key=2, style=dotted];
m22_30 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_33  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_29  [key=0, style=bold, color=blue];
m22_33 -> m22_26  [key=0, style=bold, color=blue];
m22_76 -> m22_77  [key=0, style=solid];
m22_76 -> m22_51  [key=2, style=dotted];
m22_34 -> m22_35  [key=0, style=solid];
m22_108 -> m22_109  [key=0, style=solid, color=green];
m22_108 -> m22_51  [key=2, style=dotted, color=green];
m22_10 -> m22_11  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_8  [key=2, style=dotted];
m22_11 -> m22_9  [key=2, style=dotted];
m22_12 -> m22_10  [key=0, style=bold, color=blue];
m22_151 -> m22_149  [key=0, style=bold, color=blue];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_99  [key=2, style=dotted];
m22_95 -> m22_97  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_96 -> m22_97  [key=0, style=solid];
m22_96 -> m22_55  [key=2, style=dotted];
m22_97 -> m22_81  [key=2, style=dotted];
m22_97 -> m22_98  [key=0, style=solid];
m22_97 -> m22_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_98 -> m22_94  [key=0, style=bold, color=blue];
m22_98 -> m22_99  [key=0, style=solid];
m22_98 -> m22_105  [key=2, style=dotted];
m22_139 -> m22_140  [key=0, style=solid];
m22_139 -> m22_11  [key=2, style=dotted];
m22_139 -> m22_12  [key=2, style=dotted];
m22_139 -> m22_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_140 -> m22_51  [key=2, style=dotted];
m22_140 -> m22_141  [key=0, style=solid];
m22_140 -> m22_143  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_140 -> m22_144  [key=1, style=dashed, color=darkseagreen4, label=Table];
m22_141 -> m22_142  [key=0, style=solid];
m22_141 -> m22_119  [key=2, style=dotted];
m22_141 -> m22_107  [key=2, style=dotted];
m22_142 -> m22_81  [key=2, style=dotted];
m22_142 -> m22_143  [key=0, style=solid];
m22_142 -> m22_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_142 -> m22_144  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_142 -> m22_145  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_142 -> m22_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_143 -> m22_137  [key=0, style=bold, color=blue];
m22_143 -> m22_144  [key=0, style=solid];
m22_143 -> m22_147  [key=0, style=solid];
m22_122 -> n31  [key=2, style=dotted];
m22_122 -> m22_123  [key=0, style=solid];
m22_122 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_123 -> m22_33  [key=2, style=dotted];
m22_123 -> m22_124  [key=0, style=solid];
m22_190 -> m22_191  [key=0, style=solid];
m22_191 -> m22_192  [key=0, style=solid];
m22_191 -> m22_11  [key=2, style=dotted];
m22_191 -> m22_179  [key=2, style=dotted];
m22_191 -> m22_8  [key=2, style=dotted];
m22_191 -> m22_12  [key=2, style=dotted];
m22_191 -> m22_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_191 -> m22_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_192 -> m22_193  [key=0, style=solid];
m22_192 -> m22_99  [key=2, style=dotted];
m22_192 -> m22_194  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_192 -> m22_195  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_194 -> m22_195  [key=0, style=solid];
m22_194 -> m22_119  [key=2, style=dotted];
m22_194 -> m22_196  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_195 -> m22_81  [key=2, style=dotted];
m22_195 -> m22_196  [key=0, style=solid];
m22_195 -> m22_207  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_193 -> m22_194  [key=0, style=solid];
m22_193 -> m22_11  [key=2, style=dotted];
m22_193 -> m22_12  [key=2, style=dotted];
m22_193 -> m22_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_196 -> m22_197  [key=0, style=solid];
m22_196 -> m22_161  [key=2, style=dotted];
m22_197 -> m22_190  [key=0, style=bold, color=blue];
m22_152 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_152 -> m22_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m22_87 -> m22_88  [key=0, style=solid];
m22_87 -> m22_85  [key=0, style=bold, color=blue];
m22_88 -> m22_89  [key=0, style=solid];
m22_88 -> m22_85  [key=2, style=dotted];
m22_88 -> m22_90  [key=2, style=dotted];
m22_89 -> m22_87  [key=0, style=bold, color=blue];
m22_89 -> m22_90  [key=0, style=solid];
m22_330 -> m22_40  [key=0, style=solid];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> n31  [key=2, style=dotted];
m22_39 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_42 -> m22_43  [key=0, style=solid];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_33  [key=2, style=dotted];
m22_41 -> m22_39  [key=0, style=bold, color=blue];
m22_41 -> m22_330  [key=0, style=bold, color=blue];
m22_41 -> m22_38  [key=0, style=bold, color=blue];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_45  [key=2, style=dotted];
m22_44 -> m22_42  [key=0, style=bold, color=blue];
m22_52 -> m22_53  [key=0, style=solid];
m22_55 -> m22_56  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_55  [key=2, style=dotted];
m22_54 -> m22_52  [key=0, style=bold, color=blue];
m22_113 -> m22_114  [key=0, style=solid];
m22_113 -> n31  [key=2, style=dotted];
m22_113 -> m22_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_114 -> m22_115  [key=0, style=solid];
m22_114 -> m22_106  [key=2, style=dotted];
m22_114 -> m22_116  [key=2, style=dotted];
m22_114 -> m22_33  [key=2, style=dotted];
m22_115 -> m22_113  [key=0, style=bold, color=blue];
m22_115 -> m22_111  [key=0, style=bold, color=blue];
m22_86 -> m22_87  [key=0, style=solid, color=green];
m22_86 -> n31  [key=2, style=dotted, color=green];
m22_86 -> m22_28  [key=2, style=dotted, color=green];
m22_86 -> m22_88  [key=1, style=dashed, color=green, label="lambda expression"];
m22_86 -> m22_91  [key=1, style=dashed, color=green, label="lambda expression"];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_37  [key=2, style=dotted];
m22_62 -> m22_63  [key=0, style=solid];
m22_62 -> m22_55  [key=2, style=dotted];
m22_62 -> m22_65  [key=0, style=solid];
m22_62 -> m22_34  [key=2, style=dotted];
m22_62 -> m22_38  [key=2, style=dotted];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_72  [key=2, style=dotted];
m22_70 -> m22_66  [key=0, style=bold, color=blue];
m22_101 -> n31  [key=2, style=dotted];
m22_101 -> m22_102  [key=0, style=solid];
m22_101 -> m22_103  [key=2, style=dotted];
m22_101 -> m22_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_229 -> n31  [key=2, style=dotted];
m22_229 -> m22_230  [key=0, style=solid];
m22_229 -> m22_103  [key=2, style=dotted];
m22_229 -> m22_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_267 -> n31  [key=2, style=dotted];
m22_267 -> m22_268  [key=0, style=solid];
m22_267 -> m22_269  [key=2, style=dotted];
m22_282 -> n31  [key=2, style=dotted];
m22_282 -> m22_283  [key=0, style=solid];
m22_282 -> m22_284  [key=2, style=dotted];
m22_303 -> n31  [key=2, style=dotted];
m22_303 -> m22_304  [key=0, style=solid];
m22_303 -> m22_269  [key=2, style=dotted];
m22_340 -> n31  [key=2, style=dotted];
m22_340 -> m22_341  [key=0, style=solid];
m22_340 -> m22_342  [key=2, style=dotted];
m22_340 -> m22_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_344 -> m22_345  [key=0, style=solid];
m22_25 -> n31  [key=2, style=dotted];
m22_25 -> m22_28  [key=2, style=dotted];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_23  [key=0, style=bold, color=blue];
m22_163 -> n31  [key=2, style=dotted];
m22_163 -> m22_164  [key=0, style=solid];
m22_163 -> m22_165  [key=2, style=dotted];
m22_170 -> n31  [key=2, style=dotted];
m22_170 -> m22_171  [key=0, style=solid];
m22_170 -> m22_103  [key=2, style=dotted];
m22_188 -> n31  [key=2, style=dotted];
m22_188 -> m22_189  [key=0, style=solid];
m22_188 -> m22_103  [key=2, style=dotted];
m22_205 -> n31  [key=2, style=dotted];
m22_205 -> m22_206  [key=0, style=solid];
m22_205 -> m22_103  [key=2, style=dotted];
m22_208 -> n31  [key=2, style=dotted];
m22_208 -> m22_209  [key=0, style=solid];
m22_208 -> m22_103  [key=2, style=dotted];
m22_226 -> n31  [key=2, style=dotted];
m22_226 -> m22_227  [key=0, style=solid];
m22_226 -> m22_103  [key=2, style=dotted];
m22_247 -> n31  [key=2, style=dotted];
m22_247 -> m22_248  [key=0, style=solid];
m22_247 -> m22_103  [key=2, style=dotted];
m22_247 -> m22_249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_247 -> m22_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_286 -> n31  [key=2, style=dotted];
m22_286 -> m22_287  [key=0, style=solid];
m22_286 -> m22_269  [key=2, style=dotted];
m22_306 -> n31  [key=2, style=dotted];
m22_306 -> m22_307  [key=0, style=solid];
m22_306 -> m22_269  [key=2, style=dotted];
m22_306 -> m22_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_306 -> m22_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_8  [key=2, style=dotted];
m22_17 -> m22_9  [key=2, style=dotted];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_22  [key=2, style=dotted];
m22_20 -> m22_9  [key=2, style=dotted];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_22  [key=2, style=dotted];
m22_24 -> m22_9  [key=2, style=dotted];
m22_36 -> m22_34  [key=0, style=bold, color=blue];
m22_61 -> m22_62  [key=0, style=solid];
m22_63 -> m22_61  [key=0, style=bold, color=blue];
m22_63 -> m22_64  [key=0, style=solid];
m22_69 -> m22_70  [key=0, style=solid];
m22_100 -> m22_101  [key=0, style=solid];
m22_100 -> m22_107  [key=2, style=dotted];
m22_102 -> m22_100  [key=0, style=bold, color=blue];
m22_102 -> m22_103  [key=0, style=solid];
m22_102 -> m22_108  [key=2, style=dotted];
m22_102 -> m22_86  [key=2, style=dotted];
m22_102 -> m22_102  [key=1, style=dashed, color=darkseagreen4, label=pair];
m22_104 -> m22_105  [key=0, style=solid];
m22_104 -> m22_97  [key=0, style=bold, color=blue];
m22_116 -> m22_117  [key=0, style=solid];
m22_145 -> m22_146  [key=0, style=solid];
m22_145 -> m22_107  [key=2, style=dotted];
m22_162 -> m22_163  [key=0, style=solid];
m22_166 -> m22_167  [key=0, style=solid];
m22_180 -> m22_181  [key=0, style=solid];
m22_183 -> m22_184  [key=0, style=solid];
m22_198 -> m22_199  [key=0, style=solid];
m22_201 -> m22_202  [key=0, style=solid];
m22_219 -> m22_220  [key=0, style=solid];
m22_222 -> m22_223  [key=0, style=solid];
m22_228 -> m22_229  [key=0, style=solid];
m22_230 -> m22_228  [key=0, style=bold, color=blue];
m22_231 -> m22_232  [key=0, style=solid];
m22_243 -> m22_244  [key=0, style=solid];
m22_266 -> m22_267  [key=0, style=solid];
m22_268 -> m22_266  [key=0, style=bold, color=blue];
m22_281 -> m22_282  [key=0, style=solid];
m22_283 -> m22_281  [key=0, style=bold, color=blue];
m22_302 -> m22_303  [key=0, style=solid];
m22_304 -> m22_302  [key=0, style=bold, color=blue];
m22_339 -> m22_340  [key=0, style=solid];
m22_341 -> m22_339  [key=0, style=bold, color=blue];
m22_343 -> m22_344  [key=0, style=solid];
m22_345 -> m22_343  [key=0, style=bold, color=blue];
m22_82 -> m22_83  [key=0, style=solid];
m22_149 -> m22_150  [key=0, style=solid];
m22_149 -> m22_151  [key=2, style=dotted];
m22_169 -> m22_170  [key=0, style=solid];
m22_187 -> m22_188  [key=0, style=solid];
m22_207 -> m22_208  [key=0, style=solid];
m22_246 -> m22_247  [key=0, style=solid];
m22_285 -> m22_286  [key=0, style=solid];
m22_305 -> m22_306  [key=0, style=solid];
m22_164 -> m22_162  [key=0, style=bold, color=blue];
m22_171 -> m22_169  [key=0, style=bold, color=blue];
m22_189 -> m22_187  [key=0, style=bold, color=blue];
m22_204 -> m22_205  [key=0, style=solid];
m22_206 -> m22_204  [key=0, style=bold, color=blue];
m22_209 -> m22_207  [key=0, style=bold, color=blue];
m22_225 -> m22_226  [key=0, style=solid];
m22_227 -> m22_225  [key=0, style=bold, color=blue];
m22_248 -> m22_246  [key=0, style=bold, color=blue];
m22_249 -> m22_250  [key=0, style=solid];
m22_252 -> m22_253  [key=0, style=solid];
m22_287 -> m22_285  [key=0, style=bold, color=blue];
m22_307 -> m22_305  [key=0, style=bold, color=blue];
m22_308 -> m22_309  [key=0, style=solid];
m22_311 -> m22_312  [key=0, style=solid];
m22_19 -> m22_17  [key=0, style=bold, color=blue];
m22_19 -> m22_20  [key=0, style=solid];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_16  [key=0, style=bold, color=blue];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_23  [key=2, style=dotted];
m22_21 -> m22_19  [key=0, style=bold, color=blue];
m22_147 -> m22_145  [key=0, style=bold, color=blue];
m22_147 -> m22_140  [key=0, style=bold, color=blue];
m22_146 -> m22_147  [key=0, style=solid];
m22_146 -> m22_148  [key=2, style=dotted];
m22_146 -> m22_143  [key=0, style=solid];
m22_146 -> m22_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_168 -> m22_166  [key=0, style=bold, color=blue];
m22_167 -> m22_165  [key=2, style=dotted];
m22_167 -> m22_168  [key=0, style=solid];
m22_182 -> m22_180  [key=0, style=bold, color=blue];
m22_181 -> m22_165  [key=2, style=dotted];
m22_181 -> m22_182  [key=0, style=solid];
m22_185 -> m22_183  [key=0, style=bold, color=blue];
m22_184 -> m22_185  [key=0, style=solid];
m22_184 -> m22_186  [key=2, style=dotted];
m22_200 -> m22_198  [key=0, style=bold, color=blue];
m22_199 -> m22_165  [key=2, style=dotted];
m22_199 -> m22_200  [key=0, style=solid];
m22_203 -> m22_201  [key=0, style=bold, color=blue];
m22_202 -> m22_203  [key=0, style=solid];
m22_202 -> m22_186  [key=2, style=dotted];
m22_221 -> m22_219  [key=0, style=bold, color=blue];
m22_220 -> m22_165  [key=2, style=dotted];
m22_220 -> m22_221  [key=0, style=solid];
m22_224 -> m22_222  [key=0, style=bold, color=blue];
m22_223 -> m22_224  [key=0, style=solid];
m22_223 -> m22_186  [key=2, style=dotted];
m22_233 -> m22_231  [key=0, style=bold, color=blue];
m22_232 -> m22_233  [key=0, style=solid];
m22_232 -> m22_234  [key=2, style=dotted];
m22_245 -> m22_243  [key=0, style=bold, color=blue];
m22_244 -> m22_165  [key=2, style=dotted];
m22_244 -> m22_245  [key=0, style=solid];
m22_263 -> m22_264  [key=0, style=solid];
m22_278 -> m22_279  [key=0, style=solid];
m22_299 -> m22_300  [key=0, style=solid];
m22_309 -> m22_310  [key=0, style=solid];
m22_333 -> m22_334  [key=0, style=solid];
m22_336 -> m22_337  [key=0, style=solid];
m22_84 -> m22_82  [key=0, style=bold, color=blue];
m22_83 -> m22_84  [key=0, style=solid];
m22_83 -> m22_16  [key=2, style=dotted];
m22_83 -> m22_85  [key=2, style=dotted];
m22_83 -> m22_86  [key=2, style=dotted];
m22_150 -> m22_151  [key=0, style=solid];
m22_150 -> m22_152  [key=2, style=dotted];
m22_150 -> m22_148  [key=0, style=bold, color=blue];
m22_251 -> m22_249  [key=0, style=bold, color=blue];
m22_250 -> m22_251  [key=0, style=solid];
m22_254 -> m22_252  [key=0, style=bold, color=blue];
m22_253 -> m22_254  [key=0, style=solid];
m22_310 -> m22_308  [key=0, style=bold, color=blue];
m22_313 -> m22_311  [key=0, style=bold, color=blue];
m22_312 -> m22_313  [key=0, style=solid];
m22_312 -> m22_314  [key=2, style=dotted];
m22_265 -> m22_263  [key=0, style=bold, color=blue];
m22_264 -> m22_186  [key=2, style=dotted];
m22_264 -> m22_265  [key=0, style=solid];
m22_280 -> m22_278  [key=0, style=bold, color=blue];
m22_279 -> m22_186  [key=2, style=dotted];
m22_279 -> m22_280  [key=0, style=solid];
m22_301 -> m22_299  [key=0, style=bold, color=blue];
m22_300 -> m22_186  [key=2, style=dotted];
m22_300 -> m22_301  [key=0, style=solid];
m22_335 -> m22_333  [key=0, style=bold, color=blue];
m22_334 -> m22_335  [key=0, style=solid];
m22_337 -> m22_186  [key=2, style=dotted];
m22_337 -> m22_338  [key=0, style=solid];
m22_338 -> m22_336  [key=0, style=bold, color=blue];
m22_64 -> m22_65  [key=0, style=solid];
m22_65 -> m22_51  [key=2, style=dotted];
m22_65 -> m22_66  [key=0, style=solid];
m22_65 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_65 -> m22_61  [key=0, style=bold, color=blue];
m22_66 -> n31  [key=2, style=dotted];
m22_66 -> m22_67  [key=0, style=solid];
m22_66 -> m22_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_67 -> m22_33  [key=2, style=dotted];
m22_67 -> m22_68  [key=0, style=solid, color=red];
m22_67 -> m22_70  [key=0, style=solid];
m22_67 -> m22_34  [key=2, style=dotted];
m22_67 -> m22_38  [key=2, style=dotted];
m22_68 -> m22_64  [key=0, style=bold, color=blue];
m22_68 -> m22_69  [key=0, style=solid, color=red];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=2, style=dotted];
m22_1 -> m22_4  [key=2, style=dotted];
m22_1 -> m22_8  [key=2, style=dotted];
m22_1 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_9  [key=2, style=dotted];
m22_153 -> m22_154  [key=0, style=solid];
m22_154 -> m22_155  [key=0, style=solid];
m22_154 -> m22_11  [key=2, style=dotted];
m22_154 -> m22_12  [key=2, style=dotted];
m22_154 -> m22_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_155 -> m22_156  [key=0, style=solid];
m22_155 -> m22_99  [key=2, style=dotted];
m22_155 -> m22_159  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_156 -> m22_157  [key=0, style=solid];
m22_156 -> m22_119  [key=2, style=dotted];
m22_158 -> m22_81  [key=2, style=dotted];
m22_158 -> m22_159  [key=0, style=solid];
m22_158 -> m22_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_159 -> m22_81  [key=2, style=dotted];
m22_159 -> m22_160  [key=0, style=solid];
m22_159 -> m22_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_157 -> m22_158  [key=0, style=solid];
m22_157 -> m22_161  [key=2, style=dotted];
m22_160 -> m22_153  [key=0, style=bold, color=blue];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_11  [key=2, style=dotted];
m22_5 -> m22_12  [key=2, style=dotted];
m22_5 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=2, style=dotted];
m22_6 -> m22_9  [key=2, style=dotted];
m22_6 -> m22_11  [key=2, style=dotted];
m22_6 -> m22_12  [key=2, style=dotted];
m22_6 -> m22_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_7 -> m22_5  [key=0, style=bold, color=blue];
m22_7 -> m22_0  [key=0, style=bold, color=blue];
m22_111 -> m22_112  [key=0, style=solid];
m22_111 -> m22_109  [key=0, style=bold, color=blue];
m22_112 -> m22_51  [key=2, style=dotted];
m22_112 -> m22_113  [key=0, style=solid];
m22_112 -> m22_117  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_288 -> m22_289  [key=0, style=solid];
m22_289 -> m22_290  [key=0, style=solid];
m22_289 -> m22_99  [key=2, style=dotted];
m22_289 -> m22_292  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_289 -> m22_293  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_289 -> m22_294  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_292 -> m22_293  [key=0, style=solid];
m22_292 -> m22_11  [key=2, style=dotted];
m22_292 -> m22_298  [key=2, style=dotted];
m22_292 -> m22_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_293 -> m22_294  [key=0, style=solid];
m22_293 -> m22_103  [key=2, style=dotted];
m22_293 -> m22_295  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_294 -> m22_81  [key=2, style=dotted];
m22_294 -> m22_295  [key=0, style=solid];
m22_294 -> m22_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_290 -> m22_292  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_290 -> m22_303  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_290 -> m22_293  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_290 -> m22_294  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_290 -> m22_306  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_290 -> m22_8  [key=2, style=dotted];
m22_290 -> m22_291  [key=0, style=solid];
m22_290 -> m22_262  [key=2, style=dotted];
m22_290 -> m22_299  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_291 -> m22_292  [key=0, style=solid];
m22_291 -> m22_294  [key=1, style=dashed, color=darkseagreen4, label=exception];
m22_291 -> m22_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m22_291 -> m22_297  [key=2, style=dotted];
m22_291 -> m22_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m22_295 -> m22_296  [key=0, style=solid];
m22_295 -> m22_161  [key=2, style=dotted];
m22_296 -> m22_288  [key=0, style=bold, color=blue];
m22_77 -> m22_78  [key=0, style=solid, color=green];
m22_77 -> m22_55  [key=2, style=dotted];
m22_78 -> m22_79  [key=0, style=solid, color=green];
m22_78 -> m22_81  [key=0, style=solid];
m22_78 -> m22_76  [key=2, style=dotted];
m22_78 -> m22_85  [key=1, style=dashed, color=green, label="lambda expression"];
m22_79 -> m22_80  [key=0, style=solid];
m22_79 -> m22_73  [key=0, style=bold, color=blue];
m22_80 -> m22_81  [key=0, style=solid];
m22_81 -> m22_77  [key=0, style=bold, color=blue];
m22_109 -> m22_110  [key=0, style=solid];
m22_109 -> m22_55  [key=2, style=dotted];
m22_109 -> m22_33  [key=2, style=dotted];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_112  [key=2, style=dotted];
m22_110 -> m22_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_110 -> m22_107  [key=0, style=bold, color=blue];
m22_51 -> m22_346  [key=0, style=solid];
m22_346 -> m22_347  [key=0, style=solid];
m22_346 -> m22_45  [key=2, style=dotted];
m22_347 -> m22_51  [key=0, style=bold, color=blue];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_11  [key=2, style=dotted];
m22_4 -> m22_12  [key=2, style=dotted];
m22_4 -> m22_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_172 -> m22_173  [key=0, style=solid];
m22_173 -> m22_174  [key=0, style=solid];
m22_173 -> m22_11  [key=2, style=dotted];
m22_173 -> m22_179  [key=2, style=dotted];
m22_173 -> m22_8  [key=2, style=dotted];
m22_173 -> m22_12  [key=2, style=dotted];
m22_173 -> m22_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_173 -> m22_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_174 -> m22_175  [key=0, style=solid];
m22_174 -> m22_99  [key=2, style=dotted];
m22_174 -> m22_177  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_175 -> m22_176  [key=0, style=solid];
m22_175 -> m22_119  [key=2, style=dotted];
m22_177 -> m22_81  [key=2, style=dotted];
m22_177 -> m22_178  [key=0, style=solid];
m22_177 -> m22_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_176 -> m22_177  [key=0, style=solid];
m22_176 -> m22_161  [key=2, style=dotted];
m22_178 -> m22_172  [key=0, style=bold, color=blue];
m22_16 -> m22_17  [key=0, style=solid];
m22_99 -> m22_348  [key=0, style=solid];
m22_99 -> m22_100  [key=0, style=solid];
m22_99 -> m22_106  [key=2, style=dotted];
m22_99 -> m22_102  [key=1, style=dashed, color=darkseagreen4, label=args];
m22_348 -> m22_349  [key=0, style=solid];
m22_348 -> m22_350  [key=2, style=dotted];
m22_349 -> m22_99  [key=0, style=bold, color=blue];
m22_210 -> m22_211  [key=0, style=solid];
m22_211 -> m22_212  [key=0, style=solid];
m22_211 -> m22_11  [key=2, style=dotted];
m22_211 -> m22_179  [key=2, style=dotted];
m22_211 -> m22_8  [key=2, style=dotted];
m22_211 -> m22_12  [key=2, style=dotted];
m22_211 -> m22_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_211 -> m22_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_212 -> m22_213  [key=0, style=solid];
m22_212 -> m22_99  [key=2, style=dotted];
m22_212 -> m22_214  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_212 -> m22_215  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_214 -> m22_215  [key=0, style=solid];
m22_214 -> m22_119  [key=2, style=dotted];
m22_214 -> m22_216  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_215 -> m22_81  [key=2, style=dotted];
m22_215 -> m22_216  [key=0, style=solid];
m22_215 -> m22_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_213 -> m22_214  [key=0, style=solid];
m22_213 -> m22_11  [key=2, style=dotted];
m22_213 -> m22_12  [key=2, style=dotted];
m22_213 -> m22_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_216 -> m22_217  [key=0, style=solid];
m22_216 -> m22_218  [key=2, style=dotted];
m22_217 -> m22_210  [key=0, style=bold, color=blue];
m22_255 -> m22_256  [key=0, style=solid];
m22_256 -> m22_257  [key=0, style=solid];
m22_256 -> m22_99  [key=2, style=dotted];
m22_256 -> m22_258  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_256 -> m22_259  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_258 -> m22_259  [key=0, style=solid];
m22_258 -> m22_103  [key=2, style=dotted];
m22_258 -> m22_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_259 -> m22_81  [key=2, style=dotted];
m22_259 -> m22_260  [key=0, style=solid];
m22_259 -> m22_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_257 -> m22_258  [key=0, style=solid];
m22_257 -> m22_259  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_257 -> m22_267  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_257 -> m22_8  [key=2, style=dotted];
m22_257 -> m22_262  [key=2, style=dotted];
m22_257 -> m22_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_260 -> m22_261  [key=0, style=solid];
m22_260 -> m22_218  [key=2, style=dotted];
m22_261 -> m22_255  [key=0, style=bold, color=blue];
m22_23 -> m22_24  [key=0, style=solid];
m22_351 -> m22_78  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_108  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_130  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_236  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_237  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_238  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_256  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_267  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_282  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_275  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_289  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_292  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_293  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_320  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_321  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_324  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_344  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_346  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_351 -> m22_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m22_357 -> m22_135  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_352 -> m22_53  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_353 -> m22_62  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_354 -> m22_70  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_355 -> m22_117  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m22_358 -> m22_267  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_359 -> m22_282  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_359 -> m22_286  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_361 -> m22_303  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_361 -> m22_306  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_363 -> m22_340  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_363 -> m22_344  [key=1, style=dashed, color=darkseagreen4, label=context];
m22_360 -> m22_286  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m22_362 -> m22_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m22_362 -> m22_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m22_356 -> m22_126  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_29  [key=2, style=dotted];
m23_25 -> m23_5  [key=2, style=dotted];
m23_20 -> m23_21  [key=0, style=solid];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_34  [key=2, style=dotted];
m23_17 -> m23_18  [key=0, style=solid];
m23_5 -> m23_15  [key=1, style=dashed, color=green, label=hash];
m23_5 -> m23_22  [key=1, style=dashed, color=green, label=hash];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_28  [key=2, style=dotted];
m23_5 -> m23_29  [key=2, style=dotted];
m23_5 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=hash];
m23_5 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label=hash];
m23_5 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label=hash];
m23_5 -> m23_16  [key=1, style=dashed, color=darkseagreen4, label=hash];
m23_5 -> m23_17  [key=1, style=dashed, color=darkseagreen4, label=hash];
m23_5 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label=hash];
m23_30 -> m23_31  [key=0, style=solid];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_4  [key=2, style=dotted];
m23_33 -> m23_30  [key=0, style=bold, color=blue];
m23_11 -> m23_14  [key=0, style=solid];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_33  [key=2, style=dotted];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_4  [key=2, style=dotted];
m23_1 -> m23_25  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_5  [key=2, style=dotted];
m23_2 -> m23_26  [key=2, style=dotted];
m23_2 -> m23_18  [key=1, style=dashed, color=darkseagreen4, label=connection];
m23_3 -> m23_0  [key=0, style=bold, color=blue];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_27  [key=2, style=dotted];
m23_35 -> m23_36  [key=0, style=solid];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_4  [key=2, style=dotted];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_34  [key=2, style=dotted];
m23_37 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m23_37 -> m23_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m23_37 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m23_38 -> m23_35  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_36  [key=2, style=dotted];
m23_18 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m23_19 -> m23_21  [key=0, style=solid];
m23_19 -> m23_20  [key=0, style=solid];
m23_15 -> m23_16  [key=0, style=solid, color=green];
m23_15 -> m23_35  [key=2, style=dotted, color=green];
m23_15 -> m23_19  [key=2, style=dotted];
m23_15 -> m23_20  [key=2, style=dotted];
m23_15 -> m23_21  [key=2, style=dotted];
m23_8 -> m23_15  [key=1, style=dashed, color=green, label=dto];
m23_8 -> m23_22  [key=1, style=dashed, color=green, label=dto];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_30  [key=2, style=dotted];
m23_8 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label=dto];
m23_8 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label=dto];
m23_8 -> m23_17  [key=1, style=dashed, color=darkseagreen4, label=dto];
m23_8 -> m23_18  [key=1, style=dashed, color=darkseagreen4, label=dto];
m23_8 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label=dto];
m23_8 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label=dto];
m23_8 -> m23_4  [key=2, style=dotted];
m23_14 -> m23_15  [key=0, style=solid, color=green];
m23_14 -> m23_16  [key=0, style=solid];
m23_14 -> m23_34  [key=2, style=dotted];
m23_14 -> m23_19  [key=2, style=dotted];
m23_14 -> m23_20  [key=2, style=dotted];
m23_14 -> m23_21  [key=2, style=dotted];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_21  [key=0, style=solid];
m23_16 -> m23_34  [key=2, style=dotted];
m23_16 -> m23_12  [key=0, style=bold, color=blue];
m23_22 -> m23_23  [key=0, style=solid, color=green];
m23_22 -> m23_35  [key=2, style=dotted, color=green];
m23_21 -> m23_22  [key=0, style=solid, color=green];
m23_21 -> m23_23  [key=0, style=solid];
m23_21 -> m23_34  [key=2, style=dotted];
m23_23 -> m23_4  [key=0, style=solid];
m23_23 -> m23_31  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_11  [key=2, style=dotted];
m23_23 -> m23_25  [key=1, style=dashed, color=darkseagreen4, label=state];
m23_23 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label=state];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=id];
m23_4 -> m23_24  [key=0, style=solid];
m23_4 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label=id];
m23_6 -> m23_8  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_5  [key=2, style=dotted];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_32  [key=2, style=dotted];
m23_10 -> m23_6  [key=0, style=bold, color=blue];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_17  [key=2, style=dotted];
m23_13 -> m23_18  [key=2, style=dotted];
m23_13 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label=state];
m23_7 -> m23_4  [key=0, style=solid];
m23_7 -> m23_30  [key=2, style=dotted];
m23_7 -> m23_31  [key=2, style=dotted];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_11  [key=2, style=dotted];
m23_7 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=date];
m23_12 -> m23_13  [key=0, style=solid];
m23_24 -> m23_0  [key=0, style=bold, color=blue];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_28  [key=2, style=dotted];
m23_24 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label=data];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_29  [key=2, style=dotted];
m23_26 -> m23_5  [key=2, style=dotted];
m23_27 -> m23_22  [key=0, style=bold, color=blue];
m25_3 -> m25_4  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_6  [key=2, style=dotted];
m25_5 -> m25_3  [key=0, style=bold, color=blue];
m25_25 -> m25_26  [key=0, style=solid, color=red];
m25_25 -> m25_29  [key=2, style=dotted, color=red];
m25_25 -> m25_32  [key=2, style=dotted, color=red];
m25_25 -> m25_33  [key=2, style=dotted, color=red];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m25_12 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m25_12 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m25_13 -> m25_14  [key=0, style=solid];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_28  [key=2, style=dotted];
m25_16 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m25_17 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m25_18 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m25_15 -> m25_15  [key=3, color=darkorchid, style=bold, label="Local variable int queueIndex"];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_23  [key=0, style=solid];
m25_19 -> m25_20  [key=0, style=solid];
m25_19 -> m25_29  [key=2, style=dotted];
m25_19 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m25_19 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_29  [key=2, style=dotted];
m25_20 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m25_20 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_34  [key=2, style=dotted];
m25_22 -> m25_24  [key=0, style=solid];
m25_22 -> m25_30  [key=2, style=dotted];
m25_22 -> m25_25  [key=1, style=dashed, color=red, label=jobId];
m25_22 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_31  [key=2, style=dotted];
m25_23 -> m25_25  [key=1, style=dashed, color=red, label=jobId];
m25_23 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_24 -> m25_15  [key=0, style=solid];
m25_24 -> m25_25  [key=0, style=solid, color=red];
m25_27 -> m25_12  [key=0, style=bold, color=blue];
m25_35 -> m25_36  [key=0, style=solid];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_38  [key=2, style=dotted];
m25_37 -> m25_35  [key=0, style=bold, color=blue];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_59  [key=2, style=dotted];
m25_50 -> m25_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m25_39 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m25_39 -> m25_47  [key=1, style=dashed, color=red, label="System.DateTime"];
m25_39 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m25_39 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_54  [key=2, style=dotted];
m25_40 -> m25_55  [key=2, style=dotted];
m25_40 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_40 -> m25_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_40 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_40 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_40 -> m25_52  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_56  [key=2, style=dotted];
m25_41 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m25_41 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m25_41 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m25_41 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_57  [key=2, style=dotted];
m25_42 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m25_42 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m25_42 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m25_42 -> m25_47  [key=1, style=dashed, color=red, label=storedParameters];
m25_42 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m25_42 -> m25_62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m25_47 -> m25_48  [key=0, style=solid, color=red];
m25_47 -> m25_32  [key=2, style=dotted, color=red];
m25_47 -> m25_58  [key=2, style=dotted, color=red];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_59  [key=2, style=dotted];
m25_49 -> m25_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_52 -> m25_53  [key=0, style=solid];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_58  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_58  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_58  [key=2, style=dotted];
m25_46 -> m25_47  [key=0, style=solid, color=red];
m25_46 -> m25_58  [key=2, style=dotted];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_11  [key=2, style=dotted];
m25_48 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m25_48 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_60  [key=2, style=dotted];
m25_53 -> m25_39  [key=0, style=bold, color=blue];
m25_133 -> m25_134  [key=0, style=solid];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_136  [key=2, style=dotted];
m25_134 -> m25_137  [key=2, style=dotted];
m25_135 -> m25_133  [key=0, style=bold, color=blue];
m25_102 -> m25_103  [key=0, style=solid];
m25_102 -> m25_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_102 -> m25_71  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.StateData GetStateData"];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_105  [key=0, style=solid];
m25_105 -> m25_106  [key=0, style=solid];
m25_105 -> m25_29  [key=2, style=dotted];
m25_105 -> m25_96  [key=2, style=dotted];
m25_105 -> m25_108  [key=1, style=dashed, color=darkseagreen4, label=entries];
m25_105 -> m25_111  [key=1, style=dashed, color=darkseagreen4, label=entries];
m25_104 -> m25_112  [key=0, style=solid];
m25_104 -> n27  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_106 -> m25_108  [key=0, style=solid];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_114  [key=2, style=dotted];
m25_108 -> m25_110  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m25_108 -> m25_111  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_116  [key=2, style=dotted];
m25_111 -> m25_97  [key=2, style=dotted];
m25_107 -> m25_112  [key=0, style=solid];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_115  [key=2, style=dotted];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_115  [key=2, style=dotted];
m25_112 -> m25_102  [key=0, style=bold, color=blue];
m25_193 -> m25_194  [key=0, style=solid];
m25_193 -> m25_205  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m25_193 -> m25_202  [key=3, color=darkorchid, style=bold, label="method methodReturn int RemoveTimedOutServers"];
m25_194 -> m25_195  [key=0, style=solid];
m25_194 -> m25_210  [key=2, style=dotted];
m25_194 -> m25_198  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m25_205 -> m25_206  [key=0, style=solid];
m25_205 -> m25_203  [key=0, style=solid];
m25_205 -> m25_215  [key=2, style=dotted];
m25_195 -> m25_196  [key=0, style=solid];
m25_195 -> m25_167  [key=2, style=dotted];
m25_195 -> m25_200  [key=1, style=dashed, color=red, label=heartbeats];
m25_195 -> m25_222  [key=1, style=dashed, color=red, label=heartbeats];
m25_195 -> m25_203  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m25_198 -> m25_199  [key=0, style=solid];
m25_198 -> m25_201  [key=0, style=solid];
m25_196 -> m25_197  [key=0, style=solid];
m25_196 -> m25_205  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m25_200 -> m25_198  [key=0, style=solid, color=red];
m25_200 -> m25_59  [key=2, style=dotted, color=red];
m25_200 -> m25_216  [key=1, style=dashed, color=red, label="lambda expression"];
m25_200 -> m25_221  [key=1, style=dashed, color=red, label="lambda expression"];
m25_203 -> m25_204  [key=0, style=solid];
m25_203 -> m25_208  [key=0, style=solid];
m25_197 -> m25_198  [key=0, style=solid];
m25_197 -> m25_211  [key=2, style=dotted];
m25_197 -> m25_200  [key=1, style=dashed, color=red, label=pipeline];
m25_197 -> m25_201  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m25_201 -> m25_202  [key=0, style=solid];
m25_201 -> m25_212  [key=2, style=dotted];
m25_199 -> m25_200  [key=0, style=solid, color=red];
m25_199 -> m25_217  [key=1, style=dashed, color=darkseagreen4, label=name];
m25_199 -> m25_222  [key=1, style=dashed, color=red, label=name];
m25_199 -> m25_198  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m25_202 -> m25_203  [key=0, style=solid];
m25_202 -> m25_207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m25_202 -> m25_208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m25_202 -> m25_15  [key=3, color=darkorchid, style=bold, label="Local variable int removedServerCount"];
m25_207 -> m25_203  [key=0, style=solid];
m25_207 -> m25_207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m25_207 -> m25_208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m25_208 -> m25_209  [key=0, style=solid];
m25_204 -> m25_205  [key=0, style=solid];
m25_204 -> m25_213  [key=2, style=dotted];
m25_204 -> m25_214  [key=2, style=dotted];
m25_204 -> m25_204  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m25_204 -> m25_206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m25_206 -> m25_207  [key=0, style=solid];
m25_206 -> m25_176  [key=2, style=dotted];
m25_206 -> m25_206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m25_209 -> m25_193  [key=0, style=bold, color=blue];
m25_191 -> m25_192  [key=0, style=solid, color=red];
m25_191 -> m25_29  [key=2, style=dotted, color=red];
m25_191 -> m25_32  [key=2, style=dotted, color=red];
m25_191 -> m25_33  [key=2, style=dotted, color=red];
m25_190 -> m25_191  [key=0, style=solid, color=red];
m25_192 -> m25_190  [key=0, style=bold, color=blue];
m25_179 -> m25_180  [key=0, style=solid];
m25_179 -> m25_59  [key=2, style=dotted];
m25_179 -> m25_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_176 -> m25_177  [key=0, style=solid];
m25_176 -> m25_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_176 -> m25_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_176 -> m25_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_176 -> m25_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_176 -> m25_173  [key=3, color=darkorchid, style=bold, label="Parameter variable string serverId"];
m25_177 -> m25_178  [key=0, style=solid];
m25_177 -> m25_11  [key=2, style=dotted];
m25_177 -> m25_179  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m25_177 -> m25_180  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m25_178 -> m25_179  [key=0, style=solid];
m25_178 -> m25_59  [key=2, style=dotted];
m25_178 -> m25_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_180 -> m25_181  [key=0, style=solid];
m25_180 -> m25_60  [key=2, style=dotted];
m25_181 -> m25_176  [key=0, style=bold, color=blue];
m25_7 -> m25_8  [key=0, style=solid];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_10  [key=2, style=dotted];
m25_8 -> m25_11  [key=2, style=dotted];
m25_9 -> m25_7  [key=0, style=bold, color=blue];
m25_120 -> m25_121  [key=0, style=solid];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_29  [key=2, style=dotted];
m25_121 -> m25_123  [key=2, style=dotted];
m25_122 -> m25_120  [key=0, style=bold, color=blue];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_141  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m25_138 -> m25_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_141  [key=0, style=solid];
m25_141 -> m25_142  [key=0, style=solid];
m25_141 -> m25_143  [key=0, style=solid];
m25_143 -> m25_144  [key=0, style=solid];
m25_143 -> m25_130  [key=2, style=dotted];
m25_143 -> m25_64  [key=2, style=dotted];
m25_140 -> m25_144  [key=0, style=solid];
m25_140 -> n27  [key=2, style=dotted];
m25_142 -> m25_144  [key=0, style=solid];
m25_142 -> n27  [key=2, style=dotted];
m25_144 -> m25_138  [key=0, style=bold, color=blue];
m25_151 -> m25_152  [key=0, style=solid];
m25_151 -> m25_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_151 -> m25_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_151 -> m25_154  [key=1, style=dashed, color=red, label=string];
m25_151 -> m25_165  [key=1, style=dashed, color=red, label=string];
m25_151 -> m25_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m25_151 -> m25_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_151 -> m25_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_152 -> m25_153  [key=0, style=solid];
m25_152 -> m25_11  [key=2, style=dotted];
m25_152 -> m25_154  [key=1, style=dashed, color=red, label=transaction];
m25_152 -> m25_157  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m25_152 -> m25_158  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m25_153 -> m25_154  [key=0, style=solid, color=red];
m25_153 -> m25_59  [key=2, style=dotted];
m25_153 -> m25_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_154 -> m25_155  [key=0, style=solid, color=red];
m25_154 -> m25_59  [key=2, style=dotted, color=red];
m25_154 -> m25_164  [key=1, style=dashed, color=red, label="lambda expression"];
m25_155 -> m25_156  [key=0, style=solid];
m25_155 -> m25_158  [key=0, style=solid];
m25_157 -> m25_155  [key=0, style=solid];
m25_157 -> m25_59  [key=2, style=dotted];
m25_157 -> m25_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_158 -> m25_159  [key=0, style=solid];
m25_158 -> m25_60  [key=2, style=dotted];
m25_156 -> m25_157  [key=0, style=solid];
m25_156 -> m25_170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m25_156 -> m25_155  [key=3, color=darkorchid, style=bold, label="Local variable string queue1"];
m25_159 -> m25_151  [key=0, style=bold, color=blue];
m25_173 -> m25_174  [key=0, style=solid];
m25_174 -> m25_175  [key=0, style=solid];
m25_174 -> m25_176  [key=2, style=dotted];
m25_175 -> m25_173  [key=0, style=bold, color=blue];
m25_69 -> m25_70  [key=0, style=solid];
m25_69 -> m25_71  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.JobData GetJobData"];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> m25_29  [key=2, style=dotted];
m25_70 -> m25_96  [key=2, style=dotted];
m25_70 -> m25_78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_79  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_80  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_84  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_85  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_86  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m25_70 -> m25_94  [key=1, style=dashed, color=red, label=storedData];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_73  [key=0, style=solid];
m25_78 -> m25_79  [key=0, style=solid];
m25_78 -> m25_80  [key=0, style=solid];
m25_78 -> m25_97  [key=2, style=dotted];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=type];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_82  [key=0, style=solid];
m25_80 -> m25_97  [key=2, style=dotted];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_84  [key=0, style=solid];
m25_82 -> m25_97  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_86  [key=0, style=solid];
m25_84 -> m25_97  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_88  [key=0, style=solid];
m25_86 -> m25_97  [key=2, style=dotted];
m25_87 -> m25_88  [key=0, style=solid];
m25_87 -> m25_94  [key=1, style=dashed, color=red, label=createdAt];
m25_94 -> m25_95  [key=0, style=solid, color=red];
m25_94 -> m25_100  [key=2, style=dotted, color=red];
m25_94 -> m25_97  [key=2, style=dotted, color=red];
m25_94 -> m25_101  [key=2, style=dotted, color=red];
m25_72 -> m25_95  [key=0, style=solid];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=type];
m25_73 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable string type"];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_74 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable string method"];
m25_90 -> m25_91  [key=0, style=solid];
m25_90 -> m25_98  [key=2, style=dotted];
m25_75 -> m25_76  [key=0, style=solid];
m25_75 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m25_75 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable string parameterTypes"];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m25_76 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable string arguments"];
m25_77 -> m25_78  [key=0, style=solid];
m25_77 -> m25_94  [key=1, style=dashed, color=red, label=createdAt];
m25_77 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable string createdAt"];
m25_88 -> m25_89  [key=0, style=solid];
m25_88 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.Job job"];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_71  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m25_89 -> m25_92  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_94  [key=0, style=solid, color=red];
m25_91 -> m25_99  [key=2, style=dotted];
m25_92 -> m25_93  [key=0, style=solid];
m25_93 -> m25_94  [key=0, style=solid, color=red];
m25_95 -> m25_69  [key=0, style=bold, color=blue];
m25_221 -> m25_222  [key=0, style=solid, color=red];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_29  [key=2, style=dotted];
m25_66 -> m25_68  [key=2, style=dotted];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> m25_29  [key=2, style=dotted];
m25_62 -> m25_64  [key=2, style=dotted];
m25_61 -> m25_62  [key=0, style=solid];
m25_65 -> m25_66  [key=0, style=solid];
m25_63 -> m25_61  [key=0, style=bold, color=blue];
m25_67 -> m25_65  [key=0, style=bold, color=blue];
m25_161 -> m25_162  [key=0, style=solid];
m25_161 -> m25_163  [key=2, style=dotted];
m25_165 -> m25_166  [key=0, style=solid, color=red];
m25_165 -> m25_29  [key=2, style=dotted, color=red];
m25_165 -> m25_167  [key=2, style=dotted, color=red];
m25_165 -> m25_168  [key=2, style=dotted, color=red];
m25_165 -> m25_32  [key=2, style=dotted, color=red];
m25_165 -> m25_64  [key=2, style=dotted, color=red];
m25_170 -> m25_171  [key=0, style=solid];
m25_170 -> m25_29  [key=2, style=dotted];
m25_170 -> m25_172  [key=2, style=dotted];
m25_160 -> m25_161  [key=0, style=solid];
m25_164 -> m25_165  [key=0, style=solid, color=red];
m25_169 -> m25_170  [key=0, style=solid];
m25_162 -> m25_160  [key=0, style=bold, color=blue];
m25_166 -> m25_164  [key=0, style=bold, color=blue];
m25_171 -> m25_169  [key=0, style=bold, color=blue];
m25_183 -> m25_184  [key=0, style=solid];
m25_183 -> m25_185  [key=2, style=dotted];
m25_187 -> m25_188  [key=0, style=solid];
m25_187 -> m25_29  [key=2, style=dotted];
m25_187 -> m25_189  [key=2, style=dotted];
m25_182 -> m25_183  [key=0, style=solid];
m25_186 -> m25_187  [key=0, style=solid];
m25_184 -> m25_182  [key=0, style=bold, color=blue];
m25_188 -> m25_186  [key=0, style=bold, color=blue];
m25_222 -> m25_223  [key=0, style=solid, color=red];
m25_222 -> m25_224  [key=2, style=dotted, color=red];
m25_222 -> m25_225  [key=2, style=dotted, color=red];
m25_222 -> m25_226  [key=2, style=dotted, color=red];
m25_222 -> m25_227  [key=2, style=dotted, color=red];
m25_217 -> m25_218  [key=0, style=solid];
m25_217 -> m25_219  [key=2, style=dotted];
m25_217 -> m25_220  [key=2, style=dotted];
m25_216 -> m25_217  [key=0, style=solid];
m25_218 -> m25_216  [key=0, style=bold, color=blue];
m25_223 -> m25_221  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_145 -> m25_146  [key=0, style=solid];
m25_145 -> m25_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_146 -> m25_147  [key=0, style=solid];
m25_146 -> m25_148  [key=0, style=solid];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_130  [key=2, style=dotted];
m25_148 -> m25_96  [key=2, style=dotted];
m25_147 -> m25_150  [key=0, style=solid];
m25_147 -> n27  [key=2, style=dotted];
m25_149 -> m25_150  [key=0, style=solid];
m25_150 -> m25_145  [key=0, style=bold, color=blue];
m25_118 -> m25_119  [key=0, style=solid];
m25_118 -> m25_29  [key=2, style=dotted];
m25_118 -> m25_33  [key=2, style=dotted];
m25_117 -> m25_118  [key=0, style=solid];
m25_119 -> m25_117  [key=0, style=bold, color=blue];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_127  [key=0, style=solid];
m25_127 -> m25_128  [key=0, style=solid];
m25_127 -> m25_130  [key=2, style=dotted];
m25_127 -> m25_131  [key=2, style=dotted];
m25_126 -> m25_129  [key=0, style=solid];
m25_126 -> n27  [key=2, style=dotted];
m25_128 -> m25_129  [key=0, style=solid];
m25_128 -> m25_132  [key=2, style=dotted];
m25_129 -> m25_124  [key=0, style=bold, color=blue];
m25_228 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_25  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_191  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_228 -> m25_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m25_229 -> m25_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_229 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_230 -> m25_62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m25_231 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m25_232 -> m25_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_232 -> m25_165  [key=1, style=dashed, color=red, label=string];
m25_232 -> m25_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_233 -> m25_165  [key=1, style=dashed, color=red, label="HangFire.Server.ServerContext"];
m25_234 -> m25_170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m25_235 -> m25_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_235 -> m25_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_236 -> m25_217  [key=1, style=dashed, color=darkseagreen4, label=name];
m25_236 -> m25_222  [key=1, style=dashed, color=red, label=name];
m25_237 -> m25_222  [key=1, style=dashed, color=red, label=heartbeats];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_2 -> m27_4  [key=0, style=solid];
m27_2 -> n27  [key=2, style=dotted];
m27_4 -> m27_0  [key=0, style=bold, color=blue];
m27_6 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_55  [key=2, style=dotted];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_56  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_57  [key=2, style=dotted];
m28_4 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label=from];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_57  [key=2, style=dotted];
m28_5 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_59  [key=2, style=dotted];
m28_7 -> m28_60  [key=2, style=dotted];
m28_7 -> m28_61  [key=2, style=dotted];
m28_7 -> m28_10  [key=1, style=dashed, color=darkseagreen4, label=pager];
m28_7 -> m28_17  [key=1, style=dashed, color=darkseagreen4, label=pager];
m28_7 -> m28_53  [key=1, style=dashed, color=darkseagreen4, label=pager];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_58  [key=2, style=dotted];
m28_6 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_62  [key=2, style=dotted];
m28_8 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m28_10 -> m28_11  [key=0, style=solid];
m28_10 -> m28_12  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_64  [key=2, style=dotted];
m28_17 -> m28_65  [key=2, style=dotted];
m28_17 -> m28_66  [key=2, style=dotted];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_70  [key=2, style=dotted];
m28_53 -> m28_65  [key=2, style=dotted];
m28_53 -> m28_66  [key=2, style=dotted];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_55  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_52  [key=0, style=solid];
m28_19 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_11 -> m28_54  [key=0, style=solid];
m28_11 -> m28_55  [key=2, style=dotted];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_55  [key=2, style=dotted];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_61  [key=2, style=dotted];
m28_13 -> m28_63  [key=2, style=dotted];
m28_14 -> m28_15  [key=0, style=solid];
m28_14 -> m28_55  [key=2, style=dotted];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_61  [key=2, style=dotted];
m28_15 -> m28_63  [key=2, style=dotted];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_55  [key=2, style=dotted];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_55  [key=2, style=dotted];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_55  [key=2, style=dotted];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_55  [key=2, style=dotted];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_63  [key=2, style=dotted];
m28_21 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_21 -> m28_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_55  [key=2, style=dotted];
m28_23 -> m28_24  [key=0, style=solid];
m28_23 -> m28_63  [key=2, style=dotted];
m28_23 -> m28_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_23 -> m28_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_24 -> m28_25  [key=0, style=solid];
m28_24 -> m28_55  [key=2, style=dotted];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_29  [key=0, style=solid];
m28_25 -> m28_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_25 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_25 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_55  [key=2, style=dotted];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_55  [key=2, style=dotted];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_63  [key=2, style=dotted];
m28_27 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_27 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_61  [key=2, style=dotted];
m28_30 -> m28_63  [key=2, style=dotted];
m28_30 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_30 -> m28_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_55  [key=2, style=dotted];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_55  [key=2, style=dotted];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_67  [key=2, style=dotted];
m28_32 -> m28_66  [key=2, style=dotted];
m28_32 -> m28_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_32 -> m28_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_33 -> m28_34  [key=0, style=solid];
m28_33 -> m28_55  [key=2, style=dotted];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_36  [key=0, style=solid];
m28_34 -> m28_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_34 -> m28_37  [key=1, style=dashed, color=red, label=job];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_55  [key=2, style=dotted];
m28_36 -> m28_37  [key=0, style=solid, color=red];
m28_36 -> m28_55  [key=2, style=dotted];
m28_37 -> m28_38  [key=0, style=solid, color=red];
m28_37 -> m28_68  [key=2, style=dotted, color=red];
m28_37 -> m28_63  [key=2, style=dotted, color=red];
m28_37 -> m28_37  [key=1, style=dashed, color=red, label=job];
m28_37 -> m28_39  [key=1, style=dashed, color=red, label=job];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_55  [key=2, style=dotted];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_63  [key=2, style=dotted];
m28_39 -> m28_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_39 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_55  [key=2, style=dotted];
m28_41 -> m28_42  [key=0, style=solid];
m28_41 -> m28_61  [key=2, style=dotted];
m28_41 -> m28_63  [key=2, style=dotted];
m28_41 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_41 -> m28_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_55  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_69  [key=2, style=dotted];
m28_43 -> m28_66  [key=2, style=dotted];
m28_43 -> m28_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_43 -> m28_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_44 -> m28_45  [key=0, style=solid];
m28_44 -> m28_55  [key=2, style=dotted];
m28_45 -> m28_46  [key=0, style=solid];
m28_45 -> m28_51  [key=0, style=solid];
m28_45 -> m28_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_45 -> m28_47  [key=1, style=dashed, color=red, label=job];
m28_46 -> m28_47  [key=0, style=solid, color=red];
m28_46 -> m28_55  [key=2, style=dotted];
m28_51 -> m28_19  [key=0, style=solid];
m28_51 -> m28_55  [key=2, style=dotted];
m28_47 -> m28_48  [key=0, style=solid, color=red];
m28_47 -> m28_68  [key=2, style=dotted, color=red];
m28_47 -> m28_63  [key=2, style=dotted, color=red];
m28_47 -> m28_47  [key=1, style=dashed, color=red, label=job];
m28_47 -> m28_49  [key=1, style=dashed, color=red, label=job];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_55  [key=2, style=dotted];
m28_49 -> m28_50  [key=0, style=solid];
m28_49 -> m28_63  [key=2, style=dotted];
m28_49 -> m28_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_55  [key=2, style=dotted];
m28_54 -> m28_0  [key=0, style=bold, color=blue];
m28_71 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_37  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_47  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m28_71 -> m28_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_4  [key=0, style=solid];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_2  [key=0, style=bold, color=blue];
m29_25 -> m29_25  [key=3, color=darkorchid, style=bold, label="Property variable bool IsFinal"];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label=scheduledState];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_21  [key=2, style=dotted];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_15  [key=0, style=solid];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_20  [key=2, style=dotted];
m29_14 -> m29_17  [key=0, style=solid];
m29_14 -> n32  [key=2, style=dotted];
m29_14 -> m29_19  [key=2, style=dotted];
m29_17 -> m29_11  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [key=0, style=bold, color=blue];
m29_6 -> m29_7  [key=0, style=solid, color=green];
m29_7 -> m29_8  [key=0, style=solid, color=green];
m29_7 -> m29_9  [key=2, style=dotted, color=green];
m29_7 -> m29_10  [key=2, style=dotted, color=green];
m29_8 -> m29_6  [key=0, style=bold, color=blue];
m29_22 -> m29_23  [key=0, style=solid];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_25  [key=2, style=dotted];
m29_24 -> m29_22  [key=0, style=bold, color=blue];
m29_26 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m29_26 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m29_26 -> m29_7  [key=1, style=dashed, color=green, label="HangFire.States.ScheduledState"];
m30_6 -> m30_7  [key=0, style=solid];
m30_9 -> m30_5  [key=2, style=dotted];
m30_9 -> m30_10  [key=0, style=solid];
m30_8 -> m30_4  [key=2, style=dotted];
m30_8 -> m30_9  [key=0, style=solid];
m30_7 -> m30_11  [key=2, style=dotted];
m30_7 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label=date];
m30_7 -> m30_8  [key=0, style=solid];
m30_10 -> m30_6  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_2 -> m30_5  [key=2, style=dotted];
m30_2 -> m30_3  [key=0, style=solid];
m30_1 -> m30_4  [key=2, style=dotted];
m30_1 -> m30_2  [key=0, style=solid];
m30_3 -> m30_0  [key=0, style=bold, color=blue];
m30_35 -> m30_36  [key=0, style=solid];
m30_36 -> m30_4  [key=2, style=dotted];
m30_36 -> m30_37  [key=0, style=solid];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_34  [key=2, style=dotted];
m30_38 -> m30_35  [key=0, style=bold, color=blue];
m30_30 -> m30_31  [key=0, style=solid];
m30_31 -> m30_4  [key=2, style=dotted];
m30_31 -> m30_32  [key=0, style=solid];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_34  [key=2, style=dotted];
m30_33 -> m30_30  [key=0, style=bold, color=blue];
m30_22 -> m30_23  [key=0, style=solid];
m30_25 -> m30_26  [key=0, style=solid, color=green];
m30_25 -> m30_29  [key=2, style=dotted, color=green];
m30_25 -> m30_5  [key=2, style=dotted, color=green];
m30_23 -> m30_25  [key=1, style=dashed, color=green, label=state];
m30_23 -> m30_26  [key=1, style=dashed, color=green, label=state];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_4  [key=2, style=dotted];
m30_23 -> m30_11  [key=2, style=dotted];
m30_24 -> m30_25  [key=0, style=solid, color=green];
m30_24 -> m30_26  [key=1, style=dashed, color=green, label=data];
m30_24 -> m30_28  [key=2, style=dotted];
m30_26 -> m30_27  [key=0, style=solid, color=green];
m30_26 -> m30_29  [key=2, style=dotted, color=green];
m30_26 -> m30_5  [key=2, style=dotted, color=green];
m30_27 -> m30_22  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_30  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_31  [key=2, style=dotted];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_32  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_33  [key=2, style=dotted];
m31_4 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label=servers];
m31_4 -> m31_9  [key=1, style=dashed, color=darkseagreen4, label=servers];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_30  [key=2, style=dotted];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_8  [key=0, style=solid];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_28  [key=0, style=solid];
m31_9 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label=server];
m31_9 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label=server];
m31_9 -> m31_15  [key=1, style=dashed, color=darkseagreen4, label=server];
m31_9 -> m31_17  [key=1, style=dashed, color=green, label=server];
m31_9 -> m31_19  [key=1, style=dashed, color=green, label=server];
m31_9 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label=server];
m31_9 -> m31_23  [key=1, style=dashed, color=green, label=server];
m31_9 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label=server];
m31_7 -> m31_29  [key=0, style=solid];
m31_7 -> m31_30  [key=2, style=dotted];
m31_8 -> m31_9  [key=0, style=solid];
m31_8 -> m31_30  [key=2, style=dotted];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_30  [key=2, style=dotted];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_30  [key=2, style=dotted];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_34  [key=2, style=dotted];
m31_11 -> m31_35  [key=2, style=dotted];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_35  [key=2, style=dotted];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_36  [key=2, style=dotted];
m31_15 -> m31_37  [key=2, style=dotted];
m31_15 -> m31_38  [key=2, style=dotted];
m31_15 -> m31_39  [key=2, style=dotted];
m31_17 -> m31_18  [key=0, style=solid, color=green];
m31_17 -> m31_40  [key=2, style=dotted, color=green];
m31_17 -> m31_35  [key=2, style=dotted, color=green];
m31_19 -> m31_20  [key=0, style=solid, color=green];
m31_19 -> m31_35  [key=2, style=dotted, color=green];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_27  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid, color=green];
m31_23 -> m31_40  [key=2, style=dotted, color=green];
m31_23 -> m31_35  [key=2, style=dotted, color=green];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_35  [key=2, style=dotted];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_30  [key=2, style=dotted];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_30  [key=2, style=dotted];
m31_16 -> m31_17  [key=0, style=solid, color=green];
m31_16 -> m31_30  [key=2, style=dotted];
m31_18 -> m31_19  [key=0, style=solid, color=green];
m31_18 -> m31_30  [key=2, style=dotted];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_30  [key=2, style=dotted];
m31_22 -> m31_23  [key=0, style=solid, color=green];
m31_22 -> m31_30  [key=2, style=dotted];
m31_27 -> m31_9  [key=0, style=solid];
m31_27 -> m31_30  [key=2, style=dotted];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_30  [key=2, style=dotted];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_30  [key=2, style=dotted];
m31_29 -> m31_0  [key=0, style=bold, color=blue];
m31_41 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_17  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_19  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m31_41 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m32_150 -> m32_151  [key=0, style=solid];
m32_150 -> m32_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m32_150 -> m32_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m32_150 -> m32_156  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_153  [key=0, style=solid];
m32_153 -> m32_154  [key=0, style=solid];
m32_153 -> m32_155  [key=0, style=solid];
m32_155 -> m32_156  [key=0, style=solid];
m32_155 -> m32_158  [key=2, style=dotted];
m32_156 -> m32_157  [key=0, style=solid];
m32_156 -> m32_60  [key=2, style=dotted];
m32_156 -> m32_65  [key=2, style=dotted];
m32_152 -> m32_157  [key=0, style=solid];
m32_152 -> n27  [key=2, style=dotted];
m32_154 -> m32_157  [key=0, style=solid];
m32_154 -> n27  [key=2, style=dotted];
m32_157 -> m32_150  [key=0, style=bold, color=blue];
m32_102 -> m32_103  [key=0, style=solid];
m32_102 -> m32_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_102 -> m32_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_105  [key=0, style=solid];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_107  [key=0, style=solid];
m32_107 -> m32_108  [key=0, style=solid];
m32_107 -> m32_62  [key=2, style=dotted];
m32_107 -> m32_82  [key=2, style=dotted];
m32_104 -> m32_108  [key=0, style=solid];
m32_104 -> n27  [key=2, style=dotted];
m32_106 -> m32_108  [key=0, style=solid];
m32_106 -> n27  [key=2, style=dotted];
m32_108 -> m32_102  [key=0, style=bold, color=blue];
m32_124 -> m32_125  [key=0, style=solid];
m32_124 -> m32_127  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m32_124 -> m32_131  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m32_124 -> m32_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_125 -> m32_126  [key=0, style=solid];
m32_125 -> m32_127  [key=0, style=solid];
m32_127 -> m32_128  [key=0, style=solid];
m32_127 -> m32_129  [key=0, style=solid];
m32_131 -> m32_132  [key=0, style=solid];
m32_131 -> m32_133  [key=0, style=solid];
m32_132 -> m32_131  [key=0, style=solid];
m32_132 -> m32_65  [key=2, style=dotted];
m32_132 -> m32_132  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m32_126 -> m32_134  [key=0, style=solid];
m32_126 -> n27  [key=2, style=dotted];
m32_128 -> m32_134  [key=0, style=solid];
m32_128 -> n27  [key=2, style=dotted];
m32_129 -> m32_130  [key=0, style=solid];
m32_129 -> m32_132  [key=1, style=dashed, color=darkseagreen4, label=sql];
m32_129 -> m32_129  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m32_130 -> m32_131  [key=0, style=solid];
m32_130 -> m32_135  [key=2, style=dotted];
m32_130 -> m32_133  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m32_133 -> m32_134  [key=0, style=solid];
m32_133 -> m32_136  [key=2, style=dotted];
m32_134 -> m32_124  [key=0, style=bold, color=blue];
m32_85 -> m32_86  [key=0, style=solid];
m32_85 -> m32_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_85 -> m32_71  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.StateData GetStateData"];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_88  [key=0, style=solid];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_62  [key=2, style=dotted];
m32_89 -> m32_82  [key=2, style=dotted];
m32_89 -> m32_92  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m32_87 -> m32_93  [key=0, style=solid];
m32_87 -> n27  [key=2, style=dotted];
m32_88 -> m32_89  [key=0, style=solid];
m32_88 -> m32_88  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m32_90 -> m32_91  [key=0, style=solid];
m32_90 -> m32_92  [key=0, style=solid];
m32_92 -> m32_93  [key=0, style=solid];
m32_92 -> m32_94  [key=2, style=dotted];
m32_92 -> m32_62  [key=2, style=dotted];
m32_91 -> m32_93  [key=0, style=solid];
m32_93 -> m32_85  [key=0, style=bold, color=blue];
m32_17 -> m32_18  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_20  [key=2, style=dotted];
m32_18 -> m32_21  [key=2, style=dotted];
m32_19 -> m32_17  [key=0, style=bold, color=blue];
m32_66 -> m32_67  [key=0, style=solid];
m32_66 -> m32_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_66 -> m32_71  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.JobData GetJobData"];
m32_67 -> m32_68  [key=0, style=solid];
m32_67 -> m32_69  [key=0, style=solid, color=red];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_62  [key=2, style=dotted];
m32_70 -> m32_82  [key=2, style=dotted];
m32_70 -> m32_73  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m32_70 -> m32_74  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m32_70 -> m32_80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m32_68 -> m32_81  [key=0, style=solid];
m32_68 -> n27  [key=2, style=dotted];
m32_69 -> m32_70  [key=0, style=solid, color=red];
m32_69 -> m32_69  [key=3, color=red, style=bold, label="Local variable string sql"];
m32_71 -> m32_72  [key=0, style=solid];
m32_71 -> m32_73  [key=0, style=solid];
m32_73 -> m32_74  [key=0, style=solid];
m32_73 -> m32_62  [key=2, style=dotted];
m32_73 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m32_74 -> m32_75  [key=0, style=solid];
m32_80 -> m32_81  [key=0, style=solid];
m32_80 -> m32_84  [key=2, style=dotted];
m32_72 -> m32_81  [key=0, style=solid];
m32_77 -> m32_78  [key=0, style=solid];
m32_77 -> m32_80  [key=0, style=solid];
m32_77 -> m32_83  [key=2, style=dotted];
m32_75 -> m32_76  [key=0, style=solid];
m32_75 -> m32_71  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.Job job"];
m32_76 -> m32_77  [key=0, style=solid];
m32_76 -> m32_71  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m32_76 -> m32_78  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m32_78 -> m32_79  [key=0, style=solid];
m32_79 -> m32_80  [key=0, style=solid];
m32_81 -> m32_66  [key=0, style=bold, color=blue];
m32_13 -> m32_14  [key=0, style=solid];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_16  [key=2, style=dotted];
m32_15 -> m32_13  [key=0, style=bold, color=blue];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m32_22 -> m32_27  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m32_22 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_25  [key=0, style=solid];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_31  [key=2, style=dotted];
m32_25 -> m32_32  [key=2, style=dotted];
m32_25 -> m32_33  [key=2, style=dotted];
m32_25 -> m32_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_25 -> m32_28  [key=1, style=dashed, color=darkseagreen4, label=providers];
m32_27 -> m32_30  [key=0, style=solid];
m32_27 -> m32_34  [key=2, style=dotted];
m32_27 -> m32_35  [key=2, style=dotted];
m32_27 -> m32_21  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_37  [key=2, style=dotted];
m32_24 -> m32_30  [key=0, style=solid];
m32_24 -> n27  [key=2, style=dotted];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_28  [key=0, style=solid];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_36  [key=2, style=dotted];
m32_30 -> m32_22  [key=0, style=bold, color=blue];
m32_169 -> m32_170  [key=0, style=solid];
m32_170 -> m32_171  [key=0, style=solid];
m32_170 -> m32_172  [key=0, style=solid];
m32_170 -> m32_174  [key=2, style=dotted];
m32_170 -> m32_170  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m32_171 -> m32_173  [key=0, style=solid];
m32_171 -> m32_175  [key=2, style=dotted];
m32_172 -> m32_173  [key=0, style=solid];
m32_172 -> m32_176  [key=2, style=dotted];
m32_172 -> m32_61  [key=2, style=dotted];
m32_172 -> m32_65  [key=2, style=dotted];
m32_172 -> m32_172  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m32_173 -> m32_169  [key=0, style=bold, color=blue];
m32_109 -> m32_110  [key=0, style=solid];
m32_109 -> m32_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_110 -> m32_111  [key=0, style=solid];
m32_110 -> m32_112  [key=0, style=solid];
m32_112 -> m32_113  [key=0, style=solid];
m32_112 -> m32_62  [key=2, style=dotted];
m32_111 -> m32_114  [key=0, style=solid];
m32_111 -> n27  [key=2, style=dotted];
m32_113 -> m32_114  [key=0, style=solid];
m32_113 -> m32_115  [key=2, style=dotted];
m32_114 -> m32_109  [key=0, style=bold, color=blue];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_45  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m32_42 -> m32_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m32_42 -> m32_49  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m32_42 -> m32_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m32_42 -> m32_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m32_42 -> m32_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_45  [key=0, style=solid];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_47  [key=0, style=solid];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_59  [key=2, style=dotted];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_60  [key=2, style=dotted];
m32_49 -> m32_61  [key=2, style=dotted];
m32_49 -> m32_62  [key=2, style=dotted];
m32_49 -> m32_63  [key=2, style=dotted];
m32_49 -> m32_64  [key=2, style=dotted];
m32_49 -> m32_54  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m32_49 -> m32_57  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m32_50 -> m32_51  [key=0, style=solid];
m32_50 -> m32_57  [key=0, style=solid];
m32_51 -> m32_52  [key=0, style=solid];
m32_51 -> m32_54  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m32_51 -> m32_56  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_55  [key=0, style=solid];
m32_44 -> m32_58  [key=0, style=solid];
m32_44 -> n27  [key=2, style=dotted];
m32_46 -> m32_58  [key=0, style=solid];
m32_46 -> n27  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_49  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m32_47 -> m32_47  [key=3, color=darkorchid, style=bold, label="Local variable string createJobSql"];
m32_54 -> m32_53  [key=0, style=solid];
m32_54 -> m32_54  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m32_57 -> m32_58  [key=0, style=solid];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_54  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m32_52 -> m32_52  [key=3, color=darkorchid, style=bold, label="Local variable int parameterIndex"];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_65  [key=2, style=dotted];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_55  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
m32_58 -> m32_42  [key=0, style=bold, color=blue];
m32_9 -> m32_10  [key=0, style=solid];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_12  [key=2, style=dotted];
m32_11 -> m32_9  [key=0, style=bold, color=blue];
m32_147 -> m32_148  [key=0, style=solid];
m32_38 -> m32_39  [key=0, style=solid];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_41  [key=2, style=dotted];
m32_40 -> m32_38  [key=0, style=bold, color=blue];
m32_144 -> m32_145  [key=0, style=solid];
m32_145 -> m32_146  [key=0, style=solid];
m32_146 -> m32_144  [key=0, style=bold, color=blue];
m32_148 -> m32_149  [key=0, style=solid];
m32_149 -> m32_147  [key=0, style=bold, color=blue];
m32_95 -> m32_96  [key=0, style=solid];
m32_95 -> m32_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_95 -> m32_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_96 -> m32_97  [key=0, style=solid];
m32_96 -> m32_98  [key=0, style=solid];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_100  [key=0, style=solid];
m32_100 -> m32_101  [key=0, style=solid];
m32_100 -> m32_65  [key=2, style=dotted];
m32_97 -> m32_101  [key=0, style=solid];
m32_97 -> n27  [key=2, style=dotted];
m32_99 -> m32_101  [key=0, style=solid];
m32_99 -> n27  [key=2, style=dotted];
m32_101 -> m32_95  [key=0, style=bold, color=blue];
m32_116 -> m32_117  [key=0, style=solid];
m32_116 -> m32_119  [key=1, style=dashed, color=darkseagreen4, label=double];
m32_116 -> m32_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_117 -> m32_118  [key=0, style=solid];
m32_117 -> m32_119  [key=0, style=solid];
m32_119 -> m32_120  [key=0, style=solid];
m32_119 -> m32_121  [key=0, style=solid];
m32_121 -> m32_122  [key=0, style=solid];
m32_121 -> m32_62  [key=2, style=dotted];
m32_121 -> m32_82  [key=2, style=dotted];
m32_118 -> m32_122  [key=0, style=solid];
m32_118 -> n27  [key=2, style=dotted];
m32_120 -> m32_122  [key=0, style=solid];
m32_120 -> m32_123  [key=2, style=dotted];
m32_122 -> m32_116  [key=0, style=bold, color=blue];
m32_137 -> m32_138  [key=0, style=solid];
m32_137 -> m32_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_138 -> m32_139  [key=0, style=solid];
m32_138 -> m32_140  [key=0, style=solid];
m32_140 -> m32_141  [key=0, style=solid];
m32_140 -> m32_62  [key=2, style=dotted];
m32_140 -> m32_143  [key=2, style=dotted];
m32_140 -> m32_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_140 -> m32_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_139 -> m32_142  [key=0, style=solid];
m32_139 -> n27  [key=2, style=dotted];
m32_141 -> m32_142  [key=0, style=solid];
m32_142 -> m32_137  [key=0, style=bold, color=blue];
m32_159 -> m32_160  [key=0, style=solid];
m32_159 -> m32_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_160 -> m32_161  [key=0, style=solid];
m32_160 -> m32_162  [key=0, style=solid];
m32_162 -> m32_163  [key=0, style=solid];
m32_162 -> m32_65  [key=2, style=dotted];
m32_161 -> m32_163  [key=0, style=solid];
m32_161 -> n27  [key=2, style=dotted];
m32_163 -> m32_159  [key=0, style=bold, color=blue];
m32_164 -> m32_165  [key=0, style=solid];
m32_164 -> m32_167  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_165 -> m32_166  [key=0, style=solid];
m32_165 -> m32_167  [key=0, style=solid];
m32_167 -> m32_168  [key=0, style=solid];
m32_167 -> m32_65  [key=2, style=dotted];
m32_166 -> m32_168  [key=0, style=solid];
m32_166 -> n27  [key=2, style=dotted];
m32_168 -> m32_164  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m32_0 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m32_0 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_5  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_6 -> m32_7  [key=0, style=solid];
m32_2 -> m32_7  [key=0, style=solid];
m32_2 -> n27  [key=2, style=dotted];
m32_4 -> m32_7  [key=0, style=solid];
m32_4 -> n27  [key=2, style=dotted];
m32_7 -> m32_0  [key=0, style=bold, color=blue];
m32_177 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m32_177 -> m32_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m34_111 -> m34_112  [key=0, style=solid];
m34_111 -> m34_113  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_112 -> m34_113  [key=0, style=solid];
m34_112 -> m34_46  [key=2, style=dotted];
m34_113 -> m34_114  [key=0, style=solid];
m34_113 -> m34_63  [key=2, style=dotted];
m34_114 -> m34_111  [key=0, style=bold, color=blue];
m34_103 -> m34_104  [key=0, style=solid];
m34_104 -> m34_105  [key=0, style=solid];
m34_104 -> m34_46  [key=2, style=dotted];
m34_105 -> m34_106  [key=0, style=solid];
m34_105 -> m34_69  [key=2, style=dotted];
m34_106 -> m34_103  [key=0, style=bold, color=blue];
m34_5 -> m34_6  [key=0, style=solid, color=green];
m34_5 -> m34_7  [key=0, style=solid];
m34_5 -> m34_35  [key=2, style=dotted];
m34_6 -> m34_7  [key=0, style=solid, color=green];
m34_6 -> m34_8  [key=2, style=dotted, color=green];
m34_6 -> m34_9  [key=2, style=dotted, color=green];
m34_6 -> m34_10  [key=2, style=dotted, color=green];
m34_6 -> m34_30  [key=0, style=solid];
m34_6 -> m34_32  [key=0, style=solid];
m34_6 -> m34_34  [key=0, style=solid];
m34_6 -> m34_37  [key=2, style=dotted];
m34_7 -> m34_5  [key=0, style=bold, color=blue];
m34_7 -> m34_8  [key=0, style=solid];
m34_7 -> m34_9  [key=0, style=solid];
m34_7 -> m34_35  [key=2, style=dotted];
m34_18 -> m34_0  [key=3, color=darkorchid, style=bold, label="Property variable long PerformanceDuration"];
m34_18 -> m34_30  [key=0, style=solid];
m34_18 -> m34_32  [key=0, style=solid];
m34_18 -> m34_34  [key=0, style=solid];
m34_18 -> m34_40  [key=2, style=dotted];
m34_18 -> m34_42  [key=2, style=dotted];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_11  [key=0, style=solid];
m34_9 -> m34_35  [key=2, style=dotted];
m34_80 -> m34_81  [key=0, style=solid];
m34_80 -> m34_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_81 -> m34_82  [key=0, style=solid];
m34_81 -> m34_84  [key=2, style=dotted];
m34_82 -> m34_83  [key=0, style=solid];
m34_82 -> m34_85  [key=2, style=dotted];
m34_82 -> m34_86  [key=2, style=dotted];
m34_83 -> m34_80  [key=0, style=bold, color=blue];
m34_87 -> m34_88  [key=0, style=solid];
m34_87 -> m34_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_87 -> m34_92  [key=1, style=dashed, color=darkseagreen4, label=Table];
m34_87 -> m34_99  [key=3, color=darkorchid, style=bold, label="Parameter variable Table table"];
m34_87 -> m34_107  [key=3, color=darkorchid, style=bold, label="Parameter variable Table table"];
m34_88 -> m34_89  [key=0, style=solid];
m34_88 -> m34_53  [key=2, style=dotted];
m34_88 -> m34_54  [key=2, style=dotted];
m34_88 -> m34_90  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_88 -> m34_91  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_90 -> m34_91  [key=0, style=solid];
m34_90 -> m34_56  [key=2, style=dotted];
m34_90 -> m34_57  [key=2, style=dotted];
m34_92 -> m34_93  [key=0, style=solid];
m34_92 -> m34_94  [key=2, style=dotted];
m34_89 -> m34_90  [key=0, style=solid];
m34_89 -> m34_55  [key=2, style=dotted];
m34_91 -> m34_92  [key=0, style=solid];
m34_91 -> n31  [key=2, style=dotted];
m34_93 -> m34_87  [key=0, style=bold, color=blue];
m34_95 -> m34_96  [key=0, style=solid];
m34_96 -> m34_97  [key=0, style=solid];
m34_96 -> m34_46  [key=2, style=dotted];
m34_97 -> m34_98  [key=0, style=solid];
m34_97 -> m34_60  [key=2, style=dotted];
m34_98 -> m34_95  [key=0, style=bold, color=blue];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_46 -> m34_95  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m34_46 -> m34_103  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m34_46 -> m34_111  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m34_47 -> m34_48  [key=0, style=solid];
m34_47 -> m34_53  [key=2, style=dotted];
m34_47 -> m34_54  [key=2, style=dotted];
m34_47 -> m34_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_47 -> m34_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m34_49 -> m34_50  [key=0, style=solid];
m34_49 -> m34_56  [key=2, style=dotted];
m34_49 -> m34_57  [key=2, style=dotted];
m34_48 -> m34_49  [key=0, style=solid];
m34_48 -> m34_55  [key=2, style=dotted];
m34_50 -> m34_51  [key=0, style=solid];
m34_50 -> n31  [key=2, style=dotted];
m34_51 -> m34_52  [key=0, style=solid];
m34_51 -> m34_59  [key=2, style=dotted];
m34_52 -> m34_46  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label=long];
m34_1 -> m34_0  [key=0, style=bold, color=blue];
m34_1 -> m34_2  [key=0, style=solid];
m34_8 -> m34_30  [key=0, style=solid];
m34_8 -> m34_32  [key=0, style=solid];
m34_8 -> m34_34  [key=0, style=solid];
m34_8 -> m34_38  [key=2, style=dotted];
m34_60 -> m34_61  [key=0, style=solid];
m34_61 -> m34_62  [key=0, style=solid];
m34_61 -> m34_63  [key=2, style=dotted];
m34_62 -> m34_60  [key=0, style=bold, color=blue];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_2 -> m34_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_5  [key=0, style=solid];
m34_3 -> m34_35  [key=2, style=dotted];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_13  [key=0, style=solid];
m34_11 -> m34_35  [key=2, style=dotted];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_15  [key=0, style=solid];
m34_13 -> m34_35  [key=2, style=dotted];
m34_13 -> m34_13  [key=3, color=darkorchid, style=bold, label="Property variable bool IgnoreJobLoadException"];
m34_15 -> m34_16  [key=0, style=solid, color=red];
m34_15 -> m34_17  [key=0, style=solid];
m34_15 -> m34_35  [key=2, style=dotted];
m34_17 -> m34_18  [key=0, style=solid];
m34_17 -> m34_19  [key=0, style=solid];
m34_17 -> m34_35  [key=2, style=dotted];
m34_17 -> m34_15  [key=0, style=bold, color=blue];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_21  [key=0, style=solid];
m34_19 -> m34_35  [key=2, style=dotted];
m34_19 -> m34_6  [key=1, style=dashed, color=green, label="HangFire.States.SucceededState"];
m34_19 -> m34_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m34_19 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m34_19 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_23  [key=0, style=solid];
m34_21 -> m34_35  [key=2, style=dotted];
m34_23 -> m34_24  [key=0, style=solid];
m34_23 -> m34_25  [key=0, style=solid];
m34_23 -> m34_35  [key=2, style=dotted];
m34_25 -> m34_26  [key=0, style=solid];
m34_25 -> m34_27  [key=0, style=solid];
m34_25 -> m34_35  [key=2, style=dotted];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_29  [key=0, style=solid];
m34_27 -> m34_35  [key=2, style=dotted];
m34_4 -> m34_30  [key=0, style=solid];
m34_4 -> m34_32  [key=0, style=solid];
m34_4 -> m34_34  [key=0, style=solid];
m34_4 -> m34_36  [key=2, style=dotted];
m34_4 -> m34_0  [key=0, style=bold, color=blue];
m34_10 -> m34_30  [key=0, style=solid];
m34_10 -> m34_32  [key=0, style=solid];
m34_10 -> m34_34  [key=0, style=solid];
m34_10 -> m34_38  [key=2, style=dotted];
m34_12 -> m34_30  [key=0, style=solid];
m34_12 -> m34_32  [key=0, style=solid];
m34_12 -> m34_34  [key=0, style=solid];
m34_12 -> m34_39  [key=2, style=dotted];
m34_14 -> m34_30  [key=0, style=solid];
m34_14 -> m34_32  [key=0, style=solid];
m34_14 -> m34_34  [key=0, style=solid];
m34_14 -> m34_39  [key=2, style=dotted];
m34_16 -> m34_30  [key=0, style=solid, color=red];
m34_16 -> m34_32  [key=0, style=solid, color=red];
m34_16 -> m34_34  [key=0, style=solid, color=red];
m34_16 -> m34_40  [key=2, style=dotted, color=red];
m34_16 -> m34_41  [key=2, style=dotted, color=red];
m34_16 -> m34_18  [key=2, style=dotted];
m34_16 -> m34_17  [key=0, style=solid];
m34_20 -> m34_30  [key=0, style=solid];
m34_20 -> m34_32  [key=0, style=solid];
m34_20 -> m34_34  [key=0, style=solid];
m34_20 -> m34_40  [key=2, style=dotted];
m34_20 -> m34_43  [key=2, style=dotted];
m34_22 -> m34_30  [key=0, style=solid];
m34_22 -> m34_32  [key=0, style=solid];
m34_22 -> m34_34  [key=0, style=solid];
m34_22 -> m34_40  [key=2, style=dotted];
m34_22 -> m34_44  [key=2, style=dotted];
m34_24 -> m34_30  [key=0, style=solid];
m34_24 -> m34_32  [key=0, style=solid];
m34_24 -> m34_34  [key=0, style=solid];
m34_24 -> m34_36  [key=2, style=dotted];
m34_26 -> m34_30  [key=0, style=solid];
m34_26 -> m34_32  [key=0, style=solid];
m34_26 -> m34_34  [key=0, style=solid];
m34_26 -> m34_36  [key=2, style=dotted];
m34_28 -> m34_30  [key=0, style=solid];
m34_28 -> m34_32  [key=0, style=solid];
m34_28 -> m34_34  [key=0, style=solid];
m34_28 -> m34_36  [key=2, style=dotted];
m34_29 -> m34_30  [key=0, style=solid];
m34_29 -> m34_32  [key=0, style=solid];
m34_29 -> m34_34  [key=0, style=solid];
m34_29 -> m34_45  [key=2, style=dotted];
m34_30 -> m34_31  [key=0, style=solid];
m34_32 -> m34_33  [key=0, style=solid];
m34_31 -> m34_34  [key=0, style=solid];
m34_33 -> m34_34  [key=0, style=solid];
m34_34 -> m34_2  [key=0, style=bold, color=blue];
m34_69 -> m34_70  [key=0, style=solid];
m34_70 -> m34_71  [key=0, style=solid];
m34_70 -> m34_76  [key=2, style=dotted];
m34_70 -> m34_57  [key=2, style=dotted];
m34_71 -> m34_72  [key=0, style=solid];
m34_71 -> m34_77  [key=2, style=dotted];
m34_72 -> m34_73  [key=0, style=solid];
m34_72 -> m34_78  [key=2, style=dotted];
m34_72 -> m34_74  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m34_73 -> m34_74  [key=0, style=solid];
m34_73 -> m34_79  [key=2, style=dotted];
m34_73 -> m34_57  [key=2, style=dotted];
m34_74 -> m34_75  [key=0, style=solid];
m34_74 -> m34_79  [key=2, style=dotted];
m34_74 -> m34_57  [key=2, style=dotted];
m34_75 -> m34_69  [key=0, style=bold, color=blue];
m34_99 -> m34_100  [key=0, style=solid];
m34_100 -> m34_101  [key=0, style=solid];
m34_100 -> m34_87  [key=2, style=dotted];
m34_101 -> m34_102  [key=0, style=solid];
m34_101 -> m34_60  [key=2, style=dotted];
m34_102 -> m34_99  [key=0, style=bold, color=blue];
m34_107 -> m34_108  [key=0, style=solid];
m34_108 -> m34_109  [key=0, style=solid];
m34_108 -> m34_87  [key=2, style=dotted];
m34_109 -> m34_110  [key=0, style=solid];
m34_109 -> m34_69  [key=2, style=dotted];
m34_110 -> m34_107  [key=0, style=bold, color=blue];
m34_63 -> m34_64  [key=0, style=solid];
m34_63 -> m34_61  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m34_63 -> m34_111  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m34_64 -> m34_65  [key=0, style=solid];
m34_64 -> m34_53  [key=2, style=dotted];
m34_64 -> m34_68  [key=2, style=dotted];
m34_64 -> m34_66  [key=1, style=dashed, color=darkseagreen4, label=jobIds];
m34_65 -> m34_66  [key=0, style=solid];
m34_65 -> m34_59  [key=2, style=dotted];
m34_66 -> m34_67  [key=0, style=solid];
m34_66 -> m34_59  [key=2, style=dotted];
m34_67 -> m34_63  [key=0, style=bold, color=blue];
m34_115 -> m34_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_16  [key=1, style=dashed, color=red, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m34_115 -> m34_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m35_9 -> m35_10  [key=0, style=solid];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_8  [key=2, style=dotted];
m35_10 -> m35_12  [key=1, style=dashed, color=red, label=state];
m35_11 -> m35_12  [key=0, style=solid, color=red];
m35_11 -> m35_16  [key=2, style=dotted];
m35_11 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label=data];
m35_11 -> m35_14  [key=1, style=dashed, color=darkseagreen4, label=data];
m35_12 -> m35_13  [key=0, style=solid, color=red];
m35_12 -> m35_17  [key=2, style=dotted, color=red];
m35_12 -> m35_3  [key=2, style=dotted, color=red];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_3  [key=2, style=dotted];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_3  [key=2, style=dotted];
m35_15 -> m35_9  [key=0, style=bold, color=blue];
m35_18 -> m35_19  [key=0, style=solid];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_8  [key=2, style=dotted];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_22  [key=2, style=dotted];
m35_21 -> m35_18  [key=0, style=bold, color=blue];
m35_4 -> m35_5  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_8  [key=2, style=dotted];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_3  [key=2, style=dotted];
m35_7 -> m35_4  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_3  [key=2, style=dotted];
m35_2 -> m35_0  [key=0, style=bold, color=blue];
m35_23 -> m35_24  [key=0, style=solid];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_8  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_27  [key=2, style=dotted];
m35_26 -> m35_23  [key=0, style=bold, color=blue];
m35_8 -> m35_28  [key=0, style=solid];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_30  [key=2, style=dotted];
m35_29 -> m35_8  [key=0, style=bold, color=blue];
}
