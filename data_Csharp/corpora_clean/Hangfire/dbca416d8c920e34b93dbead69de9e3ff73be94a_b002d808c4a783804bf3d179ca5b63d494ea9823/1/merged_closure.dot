digraph  {
n77 [label="Hangfire.BackgroundJobServer", span=""];
n0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
n1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="39-39"];
n2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
n3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="49-49"];
n4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
n5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="59-59"];
n6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
n7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="70-70"];
n8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
n9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage == null", span="80-80"];
n10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(nameof(storage));", span="80-80"];
n11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="options == null", span="81-81"];
n12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(nameof(options));", span="81-81"];
n13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="additionalProcesses == null", span="82-82"];
n14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(nameof(additionalProcesses));", span="82-82"];
n15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="_options = options", span="84-84"];
n18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(additionalProcesses)", span="88-88"];
n19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="90-94"];
n21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''Using job storage: '{storage}''')", span="97-97"];
n22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage.WriteOptionsToLog(Logger)", span="99-99"];
n24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Worker count: {options.WorkerCount}'')", span="102-102"];
n25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Listening queues: {String.Join('', '', options.Queues.Select(x => ''''' + x + '''''))}'')", span="103-103"];
n26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Shutdown timeout: {options.ShutdownTimeout}'')", span="104-104"];
n27 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info($''    Schedule polling interval: {options.SchedulePollingInterval}'')", span="105-105"];
n28 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="_processingServer = new BackgroundProcessingServer(\r\n                storage, \r\n                processes, \r\n                properties, \r\n                GetProcessingServerOptions())", span="107-111"];
n16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var processes = new List<IBackgroundProcess>()", span="86-86"];
n17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(GetRequiredProcesses())", span="87-87"];
n32 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n33 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="Entry Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
n34 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info(''Starting Hangfire Server'')", span="96-96"];
n35 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n36 [cluster="Hangfire.Logging.ILog.Info(string)", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
n23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info(''Using the following options for Hangfire Server:'')", span="101-101"];
n37 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="70-70"];
n38 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n39 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
n42 [cluster="lambda expression", label="Entry lambda expression", span="103-103"];
n29 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
n40 [cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>, Hangfire.Server.BackgroundProcessingServerOptions)", span="91-91"];
n41 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="Entry Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
n30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n31 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n43 [cluster="lambda expression", label="''''' + x + '''''", span="103-103"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="103-103"];
n45 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
n46 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="_processingServer.Dispose()", span="116-116"];
n47 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Logger.Info(''Hangfire Server stopped.'')", span="117-117"];
n49 [cluster="System.IDisposable.Dispose()", label="Entry System.IDisposable.Dispose()", span="0-0"];
n48 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
n50 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var processes = new List<IBackgroundProcess>()", span="122-122"];
n51 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var filterProvider = _options.FilterProvider ?? JobFilterProviders.Providers", span="124-124"];
n57 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new Worker(_options.Queues, performer, stateChanger))", span="132-132"];
n59 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new DelayedJobScheduler(_options.SchedulePollingInterval, stateChanger))", span="135-135"];
n60 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="processes.Add(new RecurringJobScheduler(factory))", span="136-136"];
n61 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="return processes;", span="138-138"];
n52 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var factory = new BackgroundJobFactory(filterProvider)", span="126-126"];
n53 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var performer = new BackgroundJobPerformer(filterProvider, _options.Activator ?? JobActivator.Current)", span="127-127"];
n54 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var stateChanger = new BackgroundJobStateChanger(filterProvider)", span="128-128"];
n63 [cluster="Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.Client.BackgroundJobFactory.BackgroundJobFactory(Hangfire.Common.IJobFilterProvider)", span="35-35"];
n64 [cluster="Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", label="Entry Hangfire.Server.BackgroundJobPerformer.BackgroundJobPerformer(Hangfire.Common.IJobFilterProvider, Hangfire.JobActivator)", span="39-39"];
n55 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="var i = 0", span="130-130"];
n65 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
n56 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="i < _options.WorkerCount", span="130-130"];
n58 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="i++", span="130-130"];
n66 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60"];
n67 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n68 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
n69 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
n62 [cluster="Hangfire.BackgroundJobServer.GetRequiredProcesses()", label="Exit Hangfire.BackgroundJobServer.GetRequiredProcesses()", span="120-120"];
n70 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="return new BackgroundProcessingServerOptions\r\n            {\r\n                ShutdownTimeout = _options.ShutdownTimeout,\r\n                HeartbeatInterval = _options.HeartbeatInterval,\r\n#pragma warning disable 618\r\n                ServerCheckInterval = _options.ServerWatchdogOptions?.CheckInterval ?? _options.ServerCheckInterval,\r\n                ServerTimeout = _options.ServerWatchdogOptions?.ServerTimeout ?? _options.ServerTimeout,\r\n                ServerName = _options.ServerName\r\n#pragma warning restore 618\r\n            };", span="143-152"];
n71 [cluster="Hangfire.BackgroundJobServer.GetProcessingServerOptions()", label="Exit Hangfire.BackgroundJobServer.GetProcessingServerOptions()", span="141-141"];
n72 [cluster="Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", label="Entry Hangfire.Server.BackgroundProcessingServerOptions.BackgroundProcessingServerOptions()", span="22-22"];
n73 [cluster="Hangfire.BackgroundJobServer.Start()", label="Entry Hangfire.BackgroundJobServer.Start()", span="156-156"];
n74 [cluster="Hangfire.BackgroundJobServer.Start()", label="Exit Hangfire.BackgroundJobServer.Start()", span="156-156"];
n75 [cluster="Hangfire.BackgroundJobServer.Stop()", label="Entry Hangfire.BackgroundJobServer.Stop()", span="161-161"];
n76 [cluster="Hangfire.BackgroundJobServer.Stop()", label="Exit Hangfire.BackgroundJobServer.Stop()", span="161-161"];
d46 [cluster="Hangfire.BackgroundJobServer.Dispose()", color=green, community=0, label="_processingServer.Dispose()", prediction=0, span="116-116"];
d47 [cluster="Hangfire.BackgroundJobServer.Dispose()", color=green, community=0, label="Logger.Info(''Hangfire Server stopped.'')", prediction=1, span="117-117"];
m1_53 [cluster="Unk.configurationAction", file="HangfireApplicationBuilderExtensions.cs", label="Entry Unk.configurationAction", span=""];
m1_15 [cluster="Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder)", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder)", span="77-77"];
m1_43 [cluster="Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder)", file="HangfireApplicationBuilderExtensions.cs", label="var configuration = app.ApplicationServices.GetService<IGlobalConfiguration>()", span="79-79"];
m1_44 [cluster="Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder)", file="HangfireApplicationBuilderExtensions.cs", label="configuration == null", span="80-80"];
m1_45 [cluster="Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder)", file="HangfireApplicationBuilderExtensions.cs", label="throw new InvalidOperationException(\r\n                    ''Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHangfire' inside the call to 'ConfigureServices(...)' in the application startup code.'');", span="82-83"];
m1_50 [cluster="Hangfire.HangfireApplicationBuilderExtensions.Initialize(IApplicationBuilder)", file="HangfireApplicationBuilderExtensions.cs", label="Exit Hangfire.HangfireApplicationBuilderExtensions.Initialize(IApplicationBuilder)", span="80-80"];
m1_16 [cluster="Unk.>", file="HangfireApplicationBuilderExtensions.cs", label="Entry Unk.>", span=""];
m1_23 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", span="53-53"];
m1_24 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="app == null", span="59-59"];
m1_25 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="throw new ArgumentNullException(nameof(app));", span="59-59"];
m1_26 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", color=green, community=0, file="HangfireApplicationBuilderExtensions.cs", label="ThrowIfNotConfigured(app)", prediction=2, span="60-60"];
m1_27 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="var services = app.ApplicationServices", span="63-63"];
m1_30 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", color=green, community=0, file="HangfireApplicationBuilderExtensions.cs", label="options = options ?? services.GetService<BackgroundJobServerOptions>() ?? new BackgroundJobServerOptions()", prediction=3, span="66-66"];
m1_31 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="additionalProcesses = additionalProcesses ?? services.GetServices<IBackgroundProcess>()", span="68-68"];
m1_34 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="return app;", span="75-75"];
m1_28 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="var lifetime = services.GetRequiredService<IApplicationLifetime>()", span="64-64"];
m1_33 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", color=green, community=0, file="HangfireApplicationBuilderExtensions.cs", label="lifetime.ApplicationStopping.Register(() => server.Dispose())", prediction=4, span="71-71"];
m1_32 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="var server = new BackgroundJobServer(options, storage, additionalProcesses)", span="70-70"];
m1_35 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="Exit Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, Hangfire.JobStorage)", span="53-53"];
m1_37 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="75-75"];
m1_19 [cluster="Unk.Map", file="HangfireApplicationBuilderExtensions.cs", label="Entry Unk.Map", span=""];
m1_42 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="114-114"];
m1_18 [cluster="PathString.cstr", file="HangfireApplicationBuilderExtensions.cs", label="Entry PathString.cstr", span=""];
m1_52 [cluster="System.Threading.Interlocked.CompareExchange(ref int, int, int)", file="HangfireApplicationBuilderExtensions.cs", label="Entry System.Threading.Interlocked.CompareExchange(ref int, int, int)", span="0-0"];
m1_0 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="31-31"];
m1_1 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="app == null", span="37-37"];
m1_2 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="throw new ArgumentNullException(nameof(app));", span="37-37"];
m1_3 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="pathMatch == null", span="38-38"];
m1_4 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="throw new ArgumentNullException(nameof(pathMatch));", span="38-38"];
m1_5 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", color=green, community=0, file="HangfireApplicationBuilderExtensions.cs", label="ThrowIfNotConfigured(app)", prediction=5, span="39-39"];
m1_6 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="var services = app.ApplicationServices", span="42-42"];
m1_8 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", color=green, community=0, file="HangfireApplicationBuilderExtensions.cs", label="options = options ?? services.GetService<DashboardOptions>() ?? new DashboardOptions()", prediction=6, span="44-44"];
m1_9 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="var routes = app.ApplicationServices.GetRequiredService<RouteCollection>()", span="46-46"];
m1_10 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="app.Map(new PathString(pathMatch), x => x.UseMiddleware<AspNetCoreDashboardMiddleware>(storage, options, routes))", span="48-48"];
m1_11 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="return app;", span="50-50"];
m1_12 [cluster="Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="HangfireApplicationBuilderExtensions.cs", label="Exit Hangfire.HangfireApplicationBuilderExtensions.UseHangfireDashboard(IApplicationBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="31-31"];
m1_17 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="24-24"];
m1_38 [cluster="Unk.Register", file="HangfireApplicationBuilderExtensions.cs", label="Entry Unk.Register", span=""];
m1_14 [cluster="Unk.nameof", file="HangfireApplicationBuilderExtensions.cs", label="Entry Unk.nameof", span=""];
m1_36 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="HangfireApplicationBuilderExtensions.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m1_39 [cluster="lambda expression", file="HangfireApplicationBuilderExtensions.cs", label="Entry lambda expression", span="72-72"];
m1_21 [cluster="lambda expression", file="HangfireApplicationBuilderExtensions.cs", label="x.UseMiddleware<AspNetCoreDashboardMiddleware>(storage, options, routes)", span="48-48"];
m1_20 [cluster="lambda expression", file="HangfireApplicationBuilderExtensions.cs", label="Entry lambda expression", span="48-48"];
m1_22 [cluster="lambda expression", file="HangfireApplicationBuilderExtensions.cs", label="Exit lambda expression", span="48-48"];
m1_40 [cluster="lambda expression", color=green, community=0, file="HangfireApplicationBuilderExtensions.cs", label="server.Dispose()", prediction=7, span="71-71"];
m1_41 [cluster="lambda expression", file="HangfireApplicationBuilderExtensions.cs", label="Exit lambda expression", span="72-72"];
m1_51 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="HangfireApplicationBuilderExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_54 [file="HangfireApplicationBuilderExtensions.cs", label="Hangfire.DashboardOptions", span=""];
m1_55 [file="HangfireApplicationBuilderExtensions.cs", label="Hangfire.JobStorage", span=""];
m1_56 [file="HangfireApplicationBuilderExtensions.cs", label=routes, span=""];
m1_57 [file="HangfireApplicationBuilderExtensions.cs", label=server, span=""];
m2_44 [cluster="System.Threading.Thread.Join()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m2_62 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m2_63 [cluster="string.Format(string, params object[])", file="HangfireServiceCollectionExtensions.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m2_21 [cluster="System.Threading.Thread.Start()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m2_45 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m2_11 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m2_9 [cluster="string.Format(string, object)", file="HangfireServiceCollectionExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_27 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_34 [cluster="System.Threading.ManualResetEventSlim.Set()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m2_22 [cluster="HangFire.Server.Worker.Stop()", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.Stop()", span="70-70"];
m2_24 [cluster="HangFire.Server.Worker.Stop()", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label=_started, prediction=8, span="74-74"];
m2_23 [cluster="HangFire.Server.Worker.Stop()", file="HangfireServiceCollectionExtensions.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="72-72"];
m2_25 [cluster="HangFire.Server.Worker.Stop()", file="HangfireServiceCollectionExtensions.cs", label="_cts.Cancel()", span="76-76"];
m2_26 [cluster="HangFire.Server.Worker.Stop()", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.Stop()", span="70-70"];
m2_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m2_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="_pool = pool", prediction=9, span="42-42"];
m2_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="_serverContext = serverContext", prediction=10, span="43-43"];
m2_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="_workerNumber = workerNumber", span="44-44"];
m2_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="_jobInvoker = jobInvoker", span="45-45"];
m2_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="_jobActivator = jobActivator", span="46-46"];
m2_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', workerNumber))", span="48-48"];
m2_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', workerNumber),\r\n                    IsBackground = true\r\n                }", span="50-54"];
m2_8 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
m2_95 [cluster="HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="33-33"];
m2_106 [cluster="Unk.>", file="HangfireServiceCollectionExtensions.cs", label="Entry Unk.>", span=""];
m2_10 [cluster="Unk.GetLogger", file="HangfireServiceCollectionExtensions.cs", label="Entry Unk.GetLogger", span=""];
m2_60 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m2_47 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.DoWork()", span="127-127"];
m2_49 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="_pool.NotifyReady(this)", span="133-133"];
m2_50 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="_jobIsReady.Wait(_cts.Token)", span="134-134"];
m2_51 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label=_jobLock, span="136-136"];
m2_52 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="PerformJob(_jobId)", span="138-138"];
m2_53 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="_jobIsReady.Reset()", span="139-139"];
m2_56 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="Crashed = true", span="148-148"];
m2_57 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="149-152"];
m2_48 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label=true, span="131-131"];
m2_55 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label=Exception, span="146-146"];
m2_54 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label=OperationCanceledException, span="143-143"];
m2_58 [cluster="HangFire.Server.Worker.DoWork()", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.DoWork()", span="127-127"];
m2_98 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m2_94 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m2_20 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="HangfireServiceCollectionExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_12 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.Start()", span="57-57"];
m2_13 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="59-59"];
m2_14 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label=_started, span="61-61"];
m2_16 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label="_thread.Start()", span="66-66"];
m2_17 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label="_started = true", span="67-67"];
m2_15 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label="throw new InvalidOperationException(''Worker has been already started.'');", span="63-63"];
m2_18 [cluster="HangFire.Server.Worker.Start()", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.Start()", span="57-57"];
m2_92 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m2_90 [cluster="Unk.Warn", file="HangfireServiceCollectionExtensions.cs", label="Entry Unk.Warn", span=""];
m2_91 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16"];
m2_61 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.PerformJob(string)", span="157-157"];
m2_69 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="166-168"];
m2_71 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="var workerContext = new WorkerContext(_serverContext, _workerNumber, Redis)", span="173-173"];
m2_77 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="jobDescriptor = new ServerJobDescriptor(_jobActivator, jobId, jobType, jobArgs)", span="196-196"];
m2_78 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="_jobInvoker.PerformJob(workerContext, jobDescriptor)", span="197-197"];
m2_81 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    jobId))", span="203-205"];
m2_86 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="JobServer.RemoveFromFetchedQueue(\r\n                    Redis, jobId, _serverContext.Queue)", span="244-245"];
m2_68 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="String.IsNullOrEmpty(jobType)", span="164-164"];
m2_70 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="return;", span="170-170"];
m2_72 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label=Redis, span="175-175"];
m2_73 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(jobId, ''Worker has started processing.'', workerContext.ServerContext.ServerName),\r\n                    EnqueuedState.Name,\r\n                    ProcessingState.Name)", span="177-181"];
m2_67 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="GetJobTypeAndArgs(jobId, out jobType, out jobArgs)", span="162-162"];
m2_76 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="ServerJobDescriptor jobDescriptor = null", span="193-193"];
m2_79 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label=Exception, span="199-199"];
m2_82 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label=Redis, span="221-221"];
m2_80 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="exception = ex", span="201-201"];
m2_84 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(jobId, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="225-228"];
m2_85 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(jobId, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="232-235"];
m2_65 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="Dictionary<string, string> jobArgs", span="159-159"];
m2_74 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="return;", span="183-183"];
m2_75 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="Exception exception = null", span="191-191"];
m2_66 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="string jobType", span="160-160"];
m2_83 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="exception == null", span="223-223"];
m2_87 [cluster="HangFire.Server.Worker.PerformJob(string)", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.PerformJob(string)", span="157-157"];
m2_88 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
m2_101 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label="var result = Redis.GetValuesFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    new[] { ''Type'', ''Args'' })", span="256-258"];
m2_100 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label=Redis, span="254-254"];
m2_102 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label="jobType = result[0]", span="260-260"];
m2_103 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label="jobArgs = JobHelper.FromJson<Dictionary<string, string>>(result[1])", span="261-261"];
m2_104 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
m2_89 [cluster="string.IsNullOrEmpty(string)", file="HangfireServiceCollectionExtensions.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_28 [cluster="HangFire.Server.Worker.Process(string)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.Process(string)", span="98-98"];
m2_29 [cluster="HangFire.Server.Worker.Process(string)", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", prediction=8, span="100-100"];
m2_30 [cluster="HangFire.Server.Worker.Process(string)", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label=_jobLock, prediction=8, span="102-102"];
m2_31 [cluster="HangFire.Server.Worker.Process(string)", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="_jobId = jobId", prediction=13, span="104-104"];
m2_32 [cluster="HangFire.Server.Worker.Process(string)", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="_jobIsReady.Set()", prediction=8, span="107-107"];
m2_33 [cluster="HangFire.Server.Worker.Process(string)", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.Process(string)", span="98-98"];
m2_64 [cluster="Unk.Fatal", file="HangfireServiceCollectionExtensions.cs", label="Entry Unk.Fatal", span=""];
m2_97 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m2_19 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m2_93 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m2_59 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80"];
m2_105 [cluster="Unk.GetValuesFromHash", file="HangfireServiceCollectionExtensions.cs", label="Entry Unk.GetValuesFromHash", span=""];
m2_99 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="99-99"];
m2_35 [cluster="HangFire.Server.Worker.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="Entry HangFire.Server.Worker.Dispose()", span="110-110"];
m2_36 [cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label=_disposed, prediction=8, span="112-112"];
m2_37 [cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="return;", prediction=16, span="113-113"];
m2_38 [cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="HangfireServiceCollectionExtensions.cs", label="_disposed = true", prediction=17, span="115-115"];
m2_39 [cluster="HangFire.Server.Worker.Dispose()", file="HangfireServiceCollectionExtensions.cs", label=_started, span="117-117"];
m2_40 [cluster="HangFire.Server.Worker.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="_thread.Join()", span="119-119"];
m2_41 [cluster="HangFire.Server.Worker.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="_cts.Dispose()", span="122-122"];
m2_42 [cluster="HangFire.Server.Worker.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="_jobIsReady.Dispose()", span="123-123"];
m2_43 [cluster="HangFire.Server.Worker.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="Exit HangFire.Server.Worker.Dispose()", span="110-110"];
m2_96 [cluster="Unk.Error", file="HangfireServiceCollectionExtensions.cs", label="Entry Unk.Error", span=""];
m2_46 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="HangfireServiceCollectionExtensions.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m2_107 [file="HangfireServiceCollectionExtensions.cs", label="HangFire.Server.Worker", span=""];
n77 -> n17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n46  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n56  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n57  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> n59  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n77 -> d46  [color=green, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n8 -> n10  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n26  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n27  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n25 -> n42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n16 -> n18  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n57  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n59  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n60  [color=darkseagreen4, key=1, label=processes, style=dashed];
n50 -> n61  [color=darkseagreen4, key=1, label=processes, style=dashed];
n52 -> n60  [color=darkseagreen4, key=1, label=factory, style=dashed];
n53 -> n57  [color=darkseagreen4, key=1, label=performer, style=dashed];
n54 -> n57  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=stateChanger, style=dashed];
n55 -> n58  [color=darkseagreen4, key=1, label=i, style=dashed];
n58 -> n58  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_23 -> m1_25  [color=darkseagreen4, key=1, label=IApplicationBuilder, style=dashed];
m1_23 -> m1_26  [color=green, key=1, label=IApplicationBuilder, style=dashed];
m1_23 -> m1_34  [color=darkseagreen4, key=1, label=IApplicationBuilder, style=dashed];
m1_28 -> m1_33  [color=green, key=1, label=lifetime, style=dashed];
m1_33 -> m1_39  [color=green, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_40  [color=green, key=1, label=server, style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=IApplicationBuilder, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_5  [color=green, key=1, label=IApplicationBuilder, style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label=IApplicationBuilder, style=dashed];
m1_0 -> m1_11  [color=darkseagreen4, key=1, label=IApplicationBuilder, style=dashed];
m1_8 -> m1_10  [color=green, key=1, label="Hangfire.DashboardOptions", style=dashed];
m1_8 -> m1_21  [color=green, key=1, label="Hangfire.DashboardOptions", style=dashed];
m1_9 -> m1_21  [color=darkseagreen4, key=1, label=routes, style=dashed];
m1_10 -> m1_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_54 -> m1_21  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m1_55 -> m1_21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m1_56 -> m1_21  [color=darkseagreen4, key=1, label=routes, style=dashed];
m1_57 -> m1_40  [color=green, key=1, label=server, style=dashed];
m2_61 -> m2_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_61 -> m2_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_61 -> m2_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_61 -> m2_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_61 -> m2_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_61 -> m2_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_61 -> m2_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
m2_71 -> m2_78  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
m2_80 -> m2_83  [color=darkseagreen4, key=1, label=exception, style=dashed];
m2_80 -> m2_85  [color=darkseagreen4, key=1, label=exception, style=dashed];
m2_102 -> m2_104  [color=darkseagreen4, key=1, label="out string", style=dashed];
m2_107 -> m2_24  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_29  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_30  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_32  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_36  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_14  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_16  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_40  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_51  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_52  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_57  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_78  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_81  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_107 -> m2_86  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
}
