digraph  {
n0 [cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", label="Entry HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4"];
n1 [cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", label="Exit HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4"];
d41 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", color=green, community=0, label="return stateMachine.ChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", prediction=0, span="110-110"];
d34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
d40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="var stateMachine = _stateMachineFactory.Create(connection)", span="109-109"];
d42 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
d44 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
d35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="jobId == null", span="104-104"];
d37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="state == null", span="105-105"];
d45 [label="Hangfire.BackgroundJobClient", span=""];
d39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="var connection = _storage.GetConnection()", span="107-107"];
d43 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
d36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="throw new ArgumentNullException(''jobId'');", span="104-104"];
d38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="throw new ArgumentNullException(''state'');", span="105-105"];
d13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="_storage = storage", span="74-74"];
d14 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="_stateMachineFactory = stateMachineFactory", span="75-75"];
d15 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="_process = process", span="76-76"];
d23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="var connection = _storage.GetConnection()", span="87-87"];
d24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89"];
d25 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="_process.Run(context)", span="90-90"];
d30 [cluster="Hangfire.JobStorage.GetConnection()", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
d17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
d11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="process == null", span="72-72"];
d16 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
d21 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="state == null", span="83-83"];
d18 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
d31 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="46-46"];
d26 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="return context.JobId;", span="92-92"];
d32 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
d8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''storage'');", span="70-70"];
d10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71"];
d12 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''process'');", span="72-72"];
d20 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new ArgumentNullException(''job'');", span="82-82"];
d22 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new ArgumentNullException(''state'');", span="83-83"];
d7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="storage == null", span="70-70"];
d9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", label="stateMachineFactory == null", span="71-71"];
d19 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="job == null", span="82-82"];
d29 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
d28 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="97-97"];
d27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label=Exception, span="95-95"];
d33 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m0_31 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="189-189"];
m0_164 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="189-189"];
m0_16 [cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m0_18 [cluster="Mock<IState>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m0_37 [cluster="Unk.Equal", file="BackgroundJobClientFacts.cs", label="Entry Unk.Equal", span=""];
m0_17 [cluster="Mock<IJobCreationProcess>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m0_60 [cluster="Unk.DoesNotThrow", file="BackgroundJobClientFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m0_104 [cluster="Unk.Run", file="BackgroundJobClientFacts.cs", label="Entry Unk.Run", span=""];
m0_32 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m0_33 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40"];
m0_34 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m0_35 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m0_36 [cluster="Unk.>", file="BackgroundJobClientFacts.cs", label="Entry Unk.>", span=""];
m0_77 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84"];
m0_78 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="86-86"];
m0_79 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="88-89"];
m0_80 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="91-91"];
m0_81 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84"];
m0_56 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m0_57 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66"];
m0_58 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67"];
m0_59 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m0_95 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106"];
m0_96 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="108-108"];
m0_97 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="client.Create(_job, _state.Object)", span="110-110"];
m0_98 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="112-112"];
m0_99 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106"];
m0_23 [cluster="Unk.GetConnection", file="BackgroundJobClientFacts.cs", label="Entry Unk.GetConnection", span=""];
m0_127 [cluster="Unk.ChangeState", file="BackgroundJobClientFacts.cs", label="Entry Unk.ChangeState", span=""];
m0_112 [cluster="Unk.NotNull", file="BackgroundJobClientFacts.cs", label="Entry Unk.NotNull", span=""];
m0_105 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="116-116"];
m0_106 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="118-118"];
m0_107 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="119-120"];
m0_108 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="122-123"];
m0_109 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Assert.NotNull(exception.InnerException)", span="125-125"];
m0_110 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="126-126"];
m0_111 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="116-116"];
m0_136 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
m0_137 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="152-152"];
m0_138 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="154-154"];
m0_139 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="156-156"];
m0_141 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="152-152"];
m0_13 [cluster="Unk.Setup", file="BackgroundJobClientFacts.cs", label="Entry Unk.Setup", span=""];
m0_64 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m0_42 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m0_43 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m0_44 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m0_45 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m0_145 [cluster="Unk.TryToChangeState", file="BackgroundJobClientFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m0_161 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="180-180"];
m0_20 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="24-24"];
m0_24 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="29-29"];
m0_28 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="33-33"];
m0_21 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.GetConnection()", span="24-24"];
m0_22 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="24-24"];
m0_25 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Create(_connection.Object)", span="29-29"];
m0_26 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="29-29"];
m0_29 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Method()", span="33-33"];
m0_30 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="33-33"];
m0_38 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="40-40"];
m0_39 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m0_40 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="40-40"];
m0_46 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="49-49"];
m0_47 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49"];
m0_48 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="49-49"];
m0_53 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="58-58"];
m0_54 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m0_55 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="58-58"];
m0_61 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="67-67"];
m0_62 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient()", span="67-67"];
m0_63 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="67-67"];
m0_68 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="73-73"];
m0_69 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object)", span="73-73"];
m0_70 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="73-73"];
m0_74 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="80-80"];
m0_75 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80"];
m0_76 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="80-80"];
m0_84 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(null, _state.Object)", span="89-89"];
m0_83 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="89-89"];
m0_85 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="89-89"];
m0_92 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(_job, null)", span="100-100"];
m0_91 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="100-100"];
m0_93 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="100-100"];
m0_101 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="112-112"];
m0_102 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Run(It.IsNotNull<CreateContext>())", span="112-112"];
m0_103 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="112-112"];
m0_117 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(_job, _state.Object)", span="123-123"];
m0_113 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="119-119"];
m0_116 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="123-123"];
m0_114 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Run(It.IsAny<CreateContext>())", span="119-119"];
m0_115 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="119-119"];
m0_118 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="123-123"];
m0_125 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.ChangeState(null, _state.Object, null)", span="135-135"];
m0_124 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="135-135"];
m0_126 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="135-135"];
m0_134 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''jobId'', null, null)", span="146-146"];
m0_133 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="146-146"];
m0_135 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="146-146"];
m0_142 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="158-161"];
m0_144 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="158-161"];
m0_151 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="171-174"];
m0_153 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="171-174"];
m0_163 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="180-180"];
m0_86 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95"];
m0_87 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="97-97"];
m0_88 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="99-100"];
m0_89 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="102-102"];
m0_90 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95"];
m0_82 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="193-193"];
m0_165 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="195-195"];
m0_166 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="193-193"];
m0_100 [cluster="Unk.Verify", file="BackgroundJobClientFacts.cs", label="Entry Unk.Verify", span=""];
m0_65 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m0_66 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m0_67 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m0_119 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="130-130"];
m0_120 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="132-132"];
m0_121 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="134-135"];
m0_122 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="137-137"];
m0_123 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="130-130"];
m0_0 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m0_1 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m0_2 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m0_3 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24"];
m0_4 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="26-26"];
m0_5 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m0_6 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m0_7 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_process = new Mock<IJobCreationProcess>()", span="31-31"];
m0_8 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_state = new Mock<IState>()", span="32-32"];
m0_9 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_job = Job.FromExpression(() => Method())", span="33-33"];
m0_10 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m0_15 [cluster="Mock<IStateMachine>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m0_49 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m0_50 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m0_51 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m0_52 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m0_27 [cluster="Unk.Create", file="BackgroundJobClientFacts.cs", label="Entry Unk.Create", span=""];
m0_146 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="165-165"];
m0_147 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="167-167"];
m0_148 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="169-169"];
m0_150 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="165-165"];
m0_154 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="178-178"];
m0_156 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="182-182"];
m0_157 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="184-184"];
m0_158 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="Assert.True(result)", span="186-186"];
m0_159 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="178-178"];
m0_160 [cluster="Unk.True", file="BackgroundJobClientFacts.cs", label="Entry Unk.True", span=""];
m0_14 [cluster="Unk.Returns", file="BackgroundJobClientFacts.cs", label="Entry Unk.Returns", span=""];
m0_41 [cluster="BackgroundJobClient.cstr", file="BackgroundJobClientFacts.cs", label="Entry BackgroundJobClient.cstr", span=""];
m0_128 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="141-141"];
m0_129 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="143-143"];
m0_130 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="145-146"];
m0_131 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="148-148"];
m0_132 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="141-141"];
m0_71 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m0_72 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs", label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m0_73 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m0_11 [cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_12 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m0_19 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m0_167 [file="BackgroundJobClientFacts.cs", label="Hangfire.Core.Tests.BackgroundJobClientFacts", span=""];
m0_168 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_169 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_170 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_171 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_172 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m1_37 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="101-101"];
m1_38 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Dispose()", span="103-103"];
m1_39 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Logger.Info(''Hangfire Server stopped.'')", span="104-104"];
m1_40 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="101-101"];
m1_57 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
m1_5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
m1_19 [cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40"];
m1_1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40"];
m1_58 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139"];
m1_63 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="var stateMachineFactory = new StateMachineFactory(_storage)", span="141-141"];
m1_65 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="150-150"];
m1_66 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new ServerHeartbeat(_storage, _serverId);", span="151-151"];
m1_67 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval);", span="152-152"];
m1_68 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new ServerWatchdog(_storage, _options.ServerWatchdogOptions);", span="153-153"];
m1_69 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="yield return new RecurringJobScheduler(\r\n                _storage, \r\n                new BackgroundJobClient(_storage, stateMachineFactory),\r\n                new ScheduleInstantFactory(),\r\n                new EveryMinuteThrottler());", span="155-159"];
m1_64 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", color=green, community=0, file="BackgroundJobServer.cs", label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", prediction=1, span="142-148"];
m1_70 [cluster="Hangfire.BackgroundJobServer.GetCommonComponents()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetCommonComponents()", span="139-139"];
m1_21 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="85-85"];
m1_22 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.Info(''Starting Hangfire Server...'')", span="87-87"];
m1_23 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="88-88"];
m1_24 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_storage.WriteOptionsToLog(Logger)", span="90-90"];
m1_25 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_options.WriteToLog(Logger)", span="91-91"];
m1_26 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Start()", span="93-93"];
m1_27 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Start()", span="85-85"];
m1_75 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(Hangfire.JobStorage, string)", span="28-28"];
m1_71 [cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25"];
m1_81 [cluster="Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.EveryMinuteThrottler.EveryMinuteThrottler()", span="21-21"];
m1_49 [cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", span="41-41"];
m1_48 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m1_18 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m1_47 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34"];
m1_60 [cluster="Unk.AddRange", file="BackgroundJobServer.cs", label="Entry Unk.AddRange", span=""];
m1_85 [cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", span="36-36"];
m1_86 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32"];
m1_50 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m1_30 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
m1_62 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26"];
m1_46 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m1_79 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
m1_20 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107"];
m1_42 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="109-113"];
m1_43 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerSupervisor>(GetSupervisors))", span="115-119"];
m1_44 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="return new ServerSupervisor(\r\n                bootstrapper, \r\n                new ServerSupervisorOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="121-126"];
m1_45 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="107-107"];
m1_31 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82"];
m1_78 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39"];
m1_74 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27"];
m1_77 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34"];
m1_80 [cluster="Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ScheduleInstantFactory.ScheduleInstantFactory()", span="21-21"];
m1_29 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209"];
m1_82 [cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162"];
m1_83 [cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="return new ServerSupervisor(new AutomaticRetryServerComponentWrapper(component));", span="164-164"];
m1_84 [cluster="Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.CreateSupervisor(Hangfire.Server.IServerComponent)", span="162-162"];
m1_33 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Stop()", span="96-96"];
m1_34 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="_bootstrapSupervisor.Stop()", span="98-98"];
m1_35 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Stop()", span="96-96"];
m1_17 [cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_72 [cluster="Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.JobActivator, Hangfire.States.IStateMachineFactory)", span="23-23"];
m1_32 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m1_59 [cluster="Unk.Select", file="BackgroundJobServer.cs", label="Entry Unk.Select", span=""];
m1_28 [cluster="Hangfire.Logging.ILog.Info(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="201-201"];
m1_51 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129"];
m1_52 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="var supervisors = new List<IServerSupervisor>()", span="131-131"];
m1_53 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="supervisors.AddRange(GetCommonComponents().Select(CreateSupervisor))", span="133-133"];
m1_54 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="supervisors.AddRange(_storage.GetComponents().Select(CreateSupervisor))", span="134-134"];
m1_55 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="return new ServerSupervisorCollection(supervisors);", span="136-136"];
m1_56 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetSupervisors()", span="129-129"];
m1_76 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34"];
m1_36 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m1_61 [cluster="Hangfire.JobStorage.GetComponents()", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.GetComponents()", span="58-58"];
m1_73 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m1_6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71"];
m1_7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="options == null", span="73-73"];
m1_9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="storage == null", span="74-74"];
m1_11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_options = options", span="76-76"];
m1_12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_storage = storage", span="77-77"];
m1_8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''options'');", span="73-73"];
m1_10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''storage'');", span="74-74"];
m1_13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="79-79"];
m1_14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="_bootstrapSupervisor = GetBootstrapSupervisor()", span="82-82"];
m1_15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71"];
m1_41 [cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50"];
m1_3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="50-50"];
m1_87 [file="BackgroundJobServer.cs", label="Hangfire.BackgroundJobServer", span=""];
m4_0 [cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="ElectStateContext.cs", label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34"];
m4_3 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=green, community=0, file="ElectStateContext.cs", label="stateMachine == null", prediction=2, span="39-39"];
m4_1 [cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="ElectStateContext.cs", label="Exit HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34"];
m4_4 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=green, community=0, file="ElectStateContext.cs", label="throw new ArgumentNullException(''stateMachine'');", prediction=3, span="39-39"];
m4_5 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="candidateState == null", span="40-40"];
m4_9 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=green, community=0, file="ElectStateContext.cs", label="StateMachine = stateMachine", prediction=4, span="45-45"];
m4_8 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="Connection = connection", span="44-44"];
m4_10 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="CurrentState = currentState", span="46-46"];
m4_7 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="_candidateState = candidateState", span="42-42"];
m4_2 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="throw new ArgumentNullException(''connection'');", span="38-38"];
m4_6 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="throw new ArgumentNullException(''candidateState'');", span="40-40"];
m4_11 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs", label="Exit Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30"];
m4_22 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ElectStateContext.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m4_21 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="ElectStateContext.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m4_18 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85"];
m4_19 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs", label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="87-88"];
m4_20 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs", label="Exit Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85"];
m4_16 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContext.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m4_13 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80"];
m4_14 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs", label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="82-82"];
m4_15 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs", label="Exit Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80"];
m4_17 [cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="ElectStateContext.cs", label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m4_23 [file="ElectStateContext.cs", label="Hangfire.States.ElectStateContext", span=""];
m5_61 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="105-105"];
m5_62 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="107-107"];
m5_65 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="Assert.Contains(_candidateState.Object, context.TraversedStates)", span="112-112"];
m5_63 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="var state = new Mock<IState>()", span="108-108"];
m5_64 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="context.CandidateState = state.Object", span="110-110"];
m5_66 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="105-105"];
m5_10 [cluster="Mock<IState>.cstr", file="ElectStateContextFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m5_46 [cluster="Unk.Same", file="ElectStateContextFacts.cs", label="Entry Unk.Same", span=""];
m5_16 [cluster="Unk.Equal", file="ElectStateContextFacts.cs", label="Entry Unk.Equal", span=""];
m5_80 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="127-127"];
m5_81 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="129-129"];
m5_83 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="133-134"];
m5_82 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="context.SetJobParameter(''Name'', (string)null)", span="131-131"];
m5_84 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="127-127"];
m5_73 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContextFacts.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80"];
m5_68 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="116-116"];
m5_69 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="118-118"];
m5_71 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="122-123"];
m5_70 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="context.SetJobParameter(''Name'', ''Value'')", span="120-120"];
m5_72 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="116-116"];
m5_15 [cluster="Unk.>", file="ElectStateContextFacts.cs", label="Entry Unk.>", span=""];
m5_0 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17"];
m5_1 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m5_2 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", color=green, community=0, file="ElectStateContextFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", prediction=5, span="20-20"];
m5_101 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="150-150"];
m5_102 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="152-152"];
m5_103 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="153-154"];
m5_105 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="Assert.Equal(default(int), value)", span="158-158"];
m5_104 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="var value = context.GetJobParameter<int>(''Name'')", span="156-156"];
m5_106 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="150-150"];
m5_96 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContextFacts.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85"];
m5_48 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="86-86"];
m5_49 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="88-88"];
m5_50 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="90-90"];
m5_51 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="86-86"];
m5_3 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="HangFire.Storage.Monitoring.ProcessingJobDto", span=""];
m5_4 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_stateContext.JobIdValue = JobId", span="23-23"];
m5_5 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_candidateState = new Mock<IState>()", span="25-25"];
m5_6 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17"];
m5_88 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="138-138"];
m5_89 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="140-140"];
m5_90 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="141-142"];
m5_92 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Assert.Equal(''Value'', value)", span="146-146"];
m5_91 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="var value = context.GetJobParameter<string>(''Name'')", span="144-144"];
m5_93 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="138-138"];
m5_21 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="43-43"];
m5_22 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null))", prediction=6, span="45-51"];
m5_23 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="Assert.Equal(''stateMachine'', exception.ParamName)", prediction=7, span="53-53"];
m5_24 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="43-43"];
m5_11 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="29-29"];
m5_12 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null))", prediction=8, span="31-37"];
m5_13 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="39-39"];
m5_14 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="29-29"];
m5_100 [cluster="Unk.GetJobParameter", file="ElectStateContextFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m5_94 [cluster="Unk.Setup", file="ElectStateContextFacts.cs", label="Entry Unk.Setup", span=""];
m5_78 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m5_52 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="90-90"];
m5_17 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="32-37"];
m5_18 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null)", prediction=9, span="32-37"];
m5_19 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="32-37"];
m5_25 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="46-51"];
m5_26 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null)", prediction=9, span="46-51"];
m5_27 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="46-51"];
m5_32 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="60-65"];
m5_33 [cluster="lambda expression", color=green, community=0, file="ElectStateContextFacts.cs", label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null)", prediction=9, span="60-65"];
m5_34 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="60-65"];
m5_53 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="context.CandidateState = null", span="90-90"];
m5_75 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="122-123"];
m5_85 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="133-134"];
m5_97 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="141-141"];
m5_107 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="153-153"];
m5_54 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="90-90"];
m5_77 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="122-123"];
m5_76 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="122-123"];
m5_87 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="133-134"];
m5_86 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="133-134"];
m5_99 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="141-141"];
m5_98 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.GetJobParameter(''1'', ''Name'')", span="141-141"];
m5_108 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.GetJobParameter(''1'', ''Value'')", span="153-153"];
m5_109 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="153-153"];
m5_67 [cluster="Unk.Contains", file="ElectStateContextFacts.cs", label="Entry Unk.Contains", span=""];
m5_74 [cluster="Unk.Verify", file="ElectStateContextFacts.cs", label="Entry Unk.Verify", span=""];
m5_55 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="94-94"];
m5_56 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="96-96"];
m5_59 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Assert.Same(newState.Object, context.CandidateState)", span="101-101"];
m5_57 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="var newState = new Mock<IState>()", span="97-97"];
m5_58 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="context.CandidateState = newState.Object", span="99-99"];
m5_60 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="94-94"];
m5_28 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="57-57"];
m5_29 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", color=green, community=0, file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null))", prediction=12, span="59-65"];
m5_30 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''candidateState'', exception.ParamName)", span="67-67"];
m5_31 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="57-57"];
m5_35 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="71-71"];
m5_39 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=green, community=0, file="ElectStateContextFacts.cs", label="Assert.Same(_connection.Object, context.Connection)", prediction=9, span="78-78"];
m5_36 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="73-73"];
m5_38 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="76-76"];
m5_40 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=green, community=0, file="ElectStateContextFacts.cs", label="Assert.Same(_stateMachine.Object, context.StateMachine)", prediction=9, span="79-79"];
m5_41 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Same(_candidateState.Object, context.CandidateState)", span="80-80"];
m5_37 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="75-75"];
m5_42 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(''State'', context.CurrentState)", span="81-81"];
m5_43 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Empty(context.TraversedStates)", span="82-82"];
m5_44 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="71-71"];
m5_8 [cluster="Mock<IStateMachine>.cstr", file="ElectStateContextFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m5_9 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10"];
m5_47 [cluster="Unk.Empty", file="ElectStateContextFacts.cs", label="Entry Unk.Empty", span=""];
m5_95 [cluster="Unk.Returns", file="ElectStateContextFacts.cs", label="Entry Unk.Returns", span=""];
m5_20 [cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs", label="Entry ElectStateContext.cstr", span=""];
m5_45 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="161-161"];
m5_110 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", color=green, community=0, file="ElectStateContextFacts.cs", label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _connection.Object,\r\n                _stateMachine.Object,\r\n                _candidateState.Object,\r\n                ''State'');", prediction=9, span="163-168"];
m5_111 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="161-161"];
m5_7 [cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m5_79 [cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs", label="Entry Unk.SetJobParameter", span=""];
m5_112 [file="ElectStateContextFacts.cs", label="Hangfire.Core.Tests.States.ElectStateContextFacts", span=""];
m5_113 [file="ElectStateContextFacts.cs", label=context, span=""];
m6_11 [cluster="Mock<IState>.cstr", file="ElectStateContextMock.cs", label="Entry Mock<IState>.cstr", span=""];
m6_12 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ElectStateContextMock.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m6_10 [cluster="Mock<IStateMachine>.cstr", file="ElectStateContextMock.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m6_8 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextMock.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10"];
m6_16 [cluster="ElectStateContext.cstr", file="ElectStateContextMock.cs", label="Entry ElectStateContext.cstr", span=""];
m6_9 [cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextMock.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m6_13 [cluster="lambda expression", file="ElectStateContextMock.cs", label="Entry lambda expression", span="20-25"];
m6_14 [cluster="lambda expression", color=green, community=0, file="ElectStateContextMock.cs", label="new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    ConnectionValue.Object,\r\n                    StateMachineValue.Object,\r\n                    CandidateStateValue,\r\n                    CurrentStateValue)", prediction=16, span="20-25"];
m6_15 [cluster="lambda expression", file="ElectStateContextMock.cs", label="Exit lambda expression", span="20-25"];
m6_0 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ElectStateContextMock.cs", label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m6_3 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", color=green, community=0, file="ElectStateContextMock.cs", label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", prediction=16, span="5-5"];
m6_2 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ElectStateContextMock.cs", label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5"];
m6_4 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs", label="CandidateStateValue = new Mock<IState>().Object", span="16-16"];
m6_6 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", color=green, community=0, file="ElectStateContextMock.cs", label="_context = new Lazy<ElectStateContext>(\r\n                () => new ElectStateContext(\r\n                    StateContextValue.Object, \r\n                    ConnectionValue.Object,\r\n                    StateMachineValue.Object,\r\n                    CandidateStateValue,\r\n                    CurrentStateValue))", prediction=18, span="19-25"];
m6_5 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs", label="CurrentStateValue = ''OldState''", span="17-17"];
m6_1 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ElectStateContextMock.cs", label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m6_7 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="ElectStateContextMock.cs", label="Exit Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11"];
m6_17 [file="ElectStateContextMock.cs", label="Hangfire.Core.Tests.ElectStateContextMock", span=""];
m7_1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="IJobCreationProcess.cs", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m8_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IStateChangeProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="27-27"];
m8_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs", label="exception == null", span="29-29"];
m8_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs", label="Exception = exception", span="32-32"];
m8_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs", label="throw new ArgumentNullException(''exception'');", span="29-29"];
m8_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs", label="FailedAt = DateTime.UtcNow", span="31-31"];
m8_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IStateChangeProcess.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="27-27"];
m8_7 [cluster="HangFire.States.FailedState.Serialize()", file="IStateChangeProcess.cs", label="Entry HangFire.States.FailedState.Serialize()", span="40-40"];
m8_8 [cluster="HangFire.States.FailedState.Serialize()", file="IStateChangeProcess.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.ToStringTimestamp(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="42-48"];
m8_9 [cluster="HangFire.States.FailedState.Serialize()", file="IStateChangeProcess.cs", label="Exit HangFire.States.FailedState.Serialize()", span="40-40"];
m8_13 [cluster="System.Exception.ToString()", file="IStateChangeProcess.cs", label="Entry System.Exception.ToString()", span="0-0"];
m8_11 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="IStateChangeProcess.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m8_12 [cluster="System.Exception.GetType()", file="IStateChangeProcess.cs", label="Entry System.Exception.GetType()", span="0-0"];
m8_14 [file="IStateChangeProcess.cs", label="HangFire.States.FailedState", span=""];
m9_0 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs", label="Entry Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m9_1 [cluster="Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IStateMachine.cs", label="Exit Hangfire.States.IStateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="23-23"];
m9_2 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs", label="Entry Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m9_3 [cluster="Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs", label="Exit Hangfire.States.IStateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m10_1 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs", label="Exit Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m12_0 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="JobCreationProcessFacts.cs", label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="4-4"];
m12_1 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="JobCreationProcessFacts.cs", label="Exit HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="4-4"];
m13_10 [cluster="Mock<IStateMachineFactory>.cstr", file="JobPerformanceProcess.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m13_45 [cluster="HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", file="JobPerformanceProcess.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerSupervisor(HangFire.Server.WorkerContext)", span="62-62"];
m13_34 [cluster="Unk.Equal", file="JobPerformanceProcess.cs", label="Entry Unk.Equal", span=""];
m13_47 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70"];
m13_48 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="72-72"];
m13_49 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_workerSupervisors[0].Verify(x => x.Start())", span="74-74"];
m13_50 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_workerSupervisors[1].Verify(x => x.Start())", span="75-75"];
m13_51 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70"];
m13_70 [cluster="Unk.Stop", file="JobPerformanceProcess.cs", label="Entry Unk.Stop", span=""];
m13_74 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88"];
m13_75 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="90-90"];
m13_76 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_workerSupervisors[0].Verify(x => x.Dispose())", span="92-92"];
m13_77 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_workerSupervisors[1].Verify(x => x.Dispose())", span="93-93"];
m13_78 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsDisposeMethodOnAllWorkers()", span="88-88"];
m13_11 [cluster="Mock<IServerSupervisor>.cstr", file="JobPerformanceProcess.cs", label="Entry Mock<IServerSupervisor>.cstr", span=""];
m13_12 [cluster="Mock<WorkerManager>.cstr", file="JobPerformanceProcess.cs", label="Entry Mock<WorkerManager>.cstr", span=""];
m13_0 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m13_1 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="JobPerformanceProcess.cs", label="_sharedContext = new SharedWorkerContext(\r\n                ''server'',\r\n                new[] { ''default'' },\r\n                new Mock<JobStorage>().Object,\r\n                new Mock<IJobPerformanceProcess>().Object,\r\n                new Mock<JobActivator>().Object,\r\n                new Mock<IStateMachineFactory>().Object)", prediction=19, span="20-26"];
m13_2 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="JobPerformanceProcess.cs", label="_workerSupervisors = new[]\r\n            {\r\n                new Mock<IServerSupervisor>(), \r\n                new Mock<IServerSupervisor>()\r\n            }", prediction=20, span="28-32"];
m13_3 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs", label="_manager = new Mock<WorkerManager>(\r\n                _sharedContext, WorkerCount)", span="34-35"];
m13_4 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs", label="_manager.Setup(x => x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerSupervisors[context.WorkerNumber - 1].Object)", span="37-38"];
m13_5 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m13_18 [cluster="Unk.>", file="JobPerformanceProcess.cs", label="Entry Unk.>", span=""];
m13_23 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42"];
m13_24 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="JobPerformanceProcess.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(null, WorkerCount))", span="44-45"];
m13_25 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42"];
m13_30 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m13_31 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs", label="var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="51-53"];
m13_32 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs", label="Assert.Equal(''workerCount'', exception.ParamName)", span="55-55"];
m13_33 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m13_46 [cluster="Unk.NotNull", file="JobPerformanceProcess.cs", label="Entry Unk.NotNull", span=""];
m13_44 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="JobPerformanceProcess.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m13_13 [cluster="Unk.Setup", file="JobPerformanceProcess.cs", label="Entry Unk.Setup", span=""];
m13_82 [cluster="Unk.Dispose", file="JobPerformanceProcess.cs", label="Entry Unk.Dispose", span=""];
m13_38 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59"];
m13_39 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs", label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61"];
m13_40 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs", label="var context = new WorkerContext(_sharedContext, 1)", span="62-62"];
m13_41 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs", label="var worker = manager.CreateWorkerSupervisor(context)", span="64-64"];
m13_42 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs", label="Assert.NotNull(worker)", span="66-66"];
m13_43 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerSupervisor_CreatesAWorkerSupervisorWithGivenParameters()", span="59-59"];
m13_19 [cluster="Unk.CreateWorkerSupervisor", file="JobPerformanceProcess.cs", label="Entry Unk.CreateWorkerSupervisor", span=""];
m13_83 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="93-93"];
m13_15 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="37-37"];
m13_20 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="38-38"];
m13_16 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.CreateWorkerSupervisor(It.IsNotNull<WorkerContext>())", span="37-37"];
m13_17 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="37-37"];
m13_21 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="_workerSupervisors[context.WorkerNumber - 1].Object", span="38-38"];
m13_22 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="38-38"];
m13_26 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="45-45"];
m13_27 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="new WorkerManager(null, WorkerCount)", span="45-45"];
m13_28 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="45-45"];
m13_35 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="52-53"];
m13_36 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="new WorkerManager(\r\n                    _sharedContext, 0)", span="52-53"];
m13_37 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="52-53"];
m13_55 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="74-74"];
m13_59 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="75-75"];
m13_56 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.Start()", span="74-74"];
m13_57 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="74-74"];
m13_60 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.Start()", span="75-75"];
m13_61 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="75-75"];
m13_67 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="83-83"];
m13_71 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="84-84"];
m13_68 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.Stop()", span="83-83"];
m13_69 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="83-83"];
m13_72 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.Stop()", span="84-84"];
m13_73 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="84-84"];
m13_79 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="92-92"];
m13_80 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.Dispose()", span="92-92"];
m13_81 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="92-92"];
m13_84 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="x.Dispose()", span="93-93"];
m13_85 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="93-93"];
m13_52 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="JobPerformanceProcess.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m13_58 [cluster="Unk.Start", file="JobPerformanceProcess.cs", label="Entry Unk.Start", span=""];
m13_9 [cluster="Mock<JobActivator>.cstr", file="JobPerformanceProcess.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m13_62 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79"];
m13_63 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="81-81"];
m13_64 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_workerSupervisors[0].Verify(x => x.Stop())", span="83-83"];
m13_65 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="_workerSupervisors[1].Verify(x => x.Stop())", span="84-84"];
m13_66 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="JobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79"];
m13_53 [cluster="Unk.Execute", file="JobPerformanceProcess.cs", label="Entry Unk.Execute", span=""];
m13_6 [cluster="SharedWorkerContext.cstr", file="JobPerformanceProcess.cs", label="Entry SharedWorkerContext.cstr", span=""];
m13_14 [cluster="Unk.Returns", file="JobPerformanceProcess.cs", label="Entry Unk.Returns", span=""];
m13_29 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="JobPerformanceProcess.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m13_54 [cluster="Unk.Verify", file="JobPerformanceProcess.cs", label="Entry Unk.Verify", span=""];
m13_7 [cluster="Mock<JobStorage>.cstr", file="JobPerformanceProcess.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m13_8 [cluster="Mock<IJobPerformanceProcess>.cstr", file="JobPerformanceProcess.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m13_86 [file="JobPerformanceProcess.cs", label="HangFire.Core.Tests.Server.WorkerManagerFacts", span=""];
m14_0 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m14_1 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m14_2 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5"];
m14_3 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5"];
m16_51 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="57-57"];
m16_52 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="59-59"];
m16_53 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_cts.Token)", span="61-61"];
m16_54 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_storage.Verify(x => x.GetConnection())", span="63-63"];
m16_55 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_connection.Verify(x => x.Dispose())", span="64-64"];
m16_56 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="57-57"];
m16_16 [cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m16_39 [cluster="Unk.Equal", file="SchedulePollerFacts.cs", label="Entry Unk.Equal", span=""];
m16_35 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m16_36 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="39-41"];
m16_37 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m16_38 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m16_15 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="SchedulePollerFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m16_22 [cluster="Unk.>", file="SchedulePollerFacts.cs", label="Entry Unk.>", span=""];
m16_76 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="81-81"];
m16_77 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="83-84"];
m16_78 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="85-85"];
m16_79 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_cts.Token)", span="87-87"];
m16_80 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=green, community=0, file="SchedulePollerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()),\r\n                Times.Never)", prediction=21, span="89-91"];
m16_81 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="81-81"];
m16_43 [cluster="SchedulePoller.cstr", file="SchedulePollerFacts.cs", label="Entry SchedulePoller.cstr", span=""];
m16_44 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47"];
m16_45 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan))", span="49-51"];
m16_46 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="53-53"];
m16_47 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47"];
m16_31 [cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m16_27 [cluster="Unk.GetConnection", file="SchedulePollerFacts.cs", label="Entry Unk.GetConnection", span=""];
m16_67 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m16_68 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="70-70"];
m16_69 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_cts.Token)", span="72-72"];
m16_70 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", color=green, community=1, file="SchedulePollerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", prediction=21, span="74-77"];
m16_71 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="68-68"];
m16_75 [cluster="Unk.TryToChangeState", file="SchedulePollerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m16_17 [cluster="Unk.Setup", file="SchedulePollerFacts.cs", label="Entry Unk.Setup", span=""];
m16_66 [cluster="Unk.Dispose", file="SchedulePollerFacts.cs", label="Entry Unk.Dispose", span=""];
m16_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="SchedulePollerFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m16_0 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m16_1 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage = new Mock<JobStorage>()", span="21-21"];
m16_2 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m16_3 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="23-23"];
m16_4 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_cts = new CancellationTokenSource()", span="24-24"];
m16_5 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_cts.Cancel()", span="25-25"];
m16_6 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27"];
m16_7 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="28-29"];
m16_8 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="31-31"];
m16_9 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="32-33"];
m16_10 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m16_85 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="84-84"];
m16_19 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="28-28"];
m16_24 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="31-31"];
m16_28 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="32-33"];
m16_20 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="28-28"];
m16_21 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="28-28"];
m16_25 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="31-31"];
m16_26 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="31-31"];
m16_29 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="32-33"];
m16_30 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="32-33"];
m16_32 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="33-33"];
m16_33 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="33-33"];
m16_34 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="33-33"];
m16_40 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="40-41"];
m16_41 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan)", span="40-41"];
m16_42 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="40-41"];
m16_48 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="50-51"];
m16_49 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan)", span="50-51"];
m16_50 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="50-51"];
m16_60 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="63-63"];
m16_63 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="64-64"];
m16_61 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="63-63"];
m16_62 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="63-63"];
m16_64 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Dispose()", span="64-64"];
m16_65 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="64-64"];
m16_72 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="74-77"];
m16_73 [cluster="lambda expression", color=green, community=1, file="SchedulePollerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", prediction=23, span="74-77"];
m16_74 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="74-77"];
m16_82 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="83-84"];
m16_88 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="90-90"];
m16_83 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="83-84"];
m16_84 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="83-84"];
m16_86 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="84-84"];
m16_87 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="84-84"];
m16_89 [cluster="lambda expression", color=green, community=0, file="SchedulePollerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", prediction=24, span="90-90"];
m16_90 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="90-90"];
m16_59 [cluster="Unk.Verify", file="SchedulePollerFacts.cs", label="Entry Unk.Verify", span=""];
m16_13 [cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m16_23 [cluster="Unk.Create", file="SchedulePollerFacts.cs", label="Entry Unk.Create", span=""];
m16_18 [cluster="Unk.Returns", file="SchedulePollerFacts.cs", label="Entry Unk.Returns", span=""];
m16_12 [cluster="Mock<IStorageConnection>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m16_11 [cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m16_58 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m16_57 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Entry Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="94-94"];
m16_91 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="96-96"];
m16_92 [cluster="Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Exit Hangfire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="94-94"];
m16_93 [file="SchedulePollerFacts.cs", label="Hangfire.Core.Tests.Server.SchedulePollerFacts", span=""];
m18_114 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="146-146"];
m18_115 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="var handler = CreateStateHandler(OldStateName)", span="149-149"];
m18_116 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="150-150"];
m18_118 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="handler.Verify(\r\n                x => x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="156-158"];
m18_119 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallApplyHandlers_ForDifferentStates()", span="146-146"];
m18_262 [cluster="Mock<T>.cstr", file="StateChangeProcessFacts.cs", label="Entry Mock<T>.cstr", span=""];
m18_0 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="24-24"];
m18_1 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="26-26"];
m18_2 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="27-27"];
m18_3 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="28-28"];
m18_5 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="_state = new Mock<IState>()", span="32-32"];
m18_6 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33"];
m18_7 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.StateChangeProcessFacts()", span="24-24"];
m18_13 [cluster="Mock<IState>.cstr", file="StateChangeProcessFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m18_9 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="StateChangeProcessFacts.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m18_38 [cluster="StateChangeProcess.cstr", file="StateChangeProcessFacts.cs", label="Entry StateChangeProcess.cstr", span=""];
m18_110 [cluster="Unk.Apply", file="StateChangeProcessFacts.cs", label="Entry Unk.Apply", span=""];
m18_39 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="55-55"];
m18_41 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="StateChangeProcessFacts.cs", label="Assert.Equal(''filters'', exception.ParamName)", span="60-60"];
m18_42 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenFiltersCollectionIsNull()", span="55-55"];
m18_26 [cluster="Unk.Equal", file="StateChangeProcessFacts.cs", label="Entry Unk.Equal", span=""];
m18_95 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="122-122"];
m18_96 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="var handler1 = CreateStateHandler(StateName)", span="125-125"];
m18_97 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="var handler2 = CreateStateHandler(StateName)", span="126-126"];
m18_99 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="handler1.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="132-133"];
m18_98 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="128-130"];
m18_100 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="handler2.Setup(x => x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="134-135"];
m18_101 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="137-137"];
m18_103 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_ShouldCallApplyHandlers_AfterSettingTheState()", span="122-122"];
m18_203 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="246-246"];
m18_207 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="255-255"];
m18_209 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs", label="_transaction.Verify(x => x.AddJobState(JobId, _state.Object))", span="261-261"];
m18_211 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="246-246"];
m18_31 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="46-46"];
m18_33 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="StateChangeProcessFacts.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="51-51"];
m18_34 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenHandlersCollectionIsNull()", span="46-46"];
m18_74 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="293-293"];
m18_248 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs", label="var handler = new Mock<IStateHandler>()", span="295-295"];
m18_249 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs", label="handler.Setup(x => x.StateName).Returns(stateName)", span="296-296"];
m18_250 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs", label="_handlers.AddHandler(handler.Object)", span="298-298"];
m18_251 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs", label="return handler;", span="299-299"];
m18_252 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateStateHandler(string)", span="293-293"];
m18_60 [cluster="Unk.SetJobState", file="StateChangeProcessFacts.cs", label="Entry Unk.SetJobState", span=""];
m18_158 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="302-302"];
m18_258 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs", label="var filter = new Mock<T>()", span="304-304"];
m18_259 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs", label="_filters.Add(filter.Object)", span="305-305"];
m18_260 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs", label="return filter;", span="307-307"];
m18_261 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateFilter<T>()", span="302-302"];
m18_135 [cluster="Unk.ExpireJob", file="StateChangeProcessFacts.cs", label="Entry Unk.ExpireJob", span=""];
m18_162 [cluster="Unk.OnStateUnapplied", file="StateChangeProcessFacts.cs", label="Entry Unk.OnStateUnapplied", span=""];
m18_25 [cluster="Unk.>", file="StateChangeProcessFacts.cs", label="Entry Unk.>", span=""];
m18_236 [cluster="Unk.False", file="StateChangeProcessFacts.cs", label="Entry Unk.False", span=""];
m18_196 [cluster="Unk.OnStateElection", file="StateChangeProcessFacts.cs", label="Entry Unk.OnStateElection", span=""];
m18_54 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="288-288"];
m18_247 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.CreateProcess()", span="288-288"];
m18_180 [cluster="Unk.OnStateApplied", file="StateChangeProcessFacts.cs", label="Entry Unk.OnStateApplied", span=""];
m18_21 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37"];
m18_24 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37"];
m18_55 [cluster="Unk.ChangeState", file="StateChangeProcessFacts.cs", label="Entry Unk.ChangeState", span=""];
m18_123 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="162-162"];
m18_124 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs", label="_state.Setup(x => x.IsFinal).Returns(true)", span="164-164"];
m18_125 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="165-165"];
m18_127 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs", label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="169-169"];
m18_128 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsJobExpiration_IfStateIsFinal()", span="162-162"];
m18_234 [cluster="System.NotSupportedException.NotSupportedException()", file="StateChangeProcessFacts.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m18_221 [cluster="Unk.AddJobState", file="StateChangeProcessFacts.cs", label="Entry Unk.AddJobState", span=""];
m18_53 [cluster="Unk.InSequence", file="StateChangeProcessFacts.cs", label="Entry Unk.InSequence", span=""];
m18_263 [cluster="Unk.Add", file="StateChangeProcessFacts.cs", label="Entry Unk.Add", span=""];
m18_10 [cluster="Unk.Setup", file="StateChangeProcessFacts.cs", label="Entry Unk.Setup", span=""];
m18_184 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="227-227"];
m18_191 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="227-227"];
m18_235 [cluster="Unk.Throws", file="StateChangeProcessFacts.cs", label="Entry Unk.Throws", span=""];
m18_78 [cluster="Unk.Unapply", file="StateChangeProcessFacts.cs", label="Entry Unk.Unapply", span=""];
m18_254 [cluster="Unk.AddHandler", file="StateChangeProcessFacts.cs", label="Entry Unk.AddHandler", span=""];
m18_149 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="184-184"];
m18_150 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="var filter1 = CreateFilter<IApplyStateFilter>()", span="187-187"];
m18_151 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="var filter2 = CreateFilter<IApplyStateFilter>()", span="188-188"];
m18_152 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="filter1.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="190-191"];
m18_153 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="filter2.Setup(x => x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="192-193"];
m18_154 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="194-196"];
m18_155 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="198-198"];
m18_157 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateUnappliedFilters_BeforeSettingTheState()", span="184-184"];
m18_255 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="296-296"];
m18_14 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="28-28"];
m18_18 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="33-33"];
m18_15 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.CreateWriteTransaction()", span="28-28"];
m18_16 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="28-28"];
m18_19 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Name", span="33-33"];
m18_20 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="33-33"];
m18_27 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="40-40"];
m18_29 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="40-40"];
m18_35 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="49-49"];
m18_37 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="49-49"];
m18_43 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="58-58"];
m18_45 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="58-58"];
m18_57 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="67-67"];
m18_61 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="68-68"];
m18_59 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="67-67"];
m18_63 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="68-68"];
m18_75 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="87-87"];
m18_79 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="91-91"];
m18_82 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="94-94"];
m18_76 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="87-87"];
m18_77 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="87-87"];
m18_80 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="91-91"];
m18_81 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="91-91"];
m18_83 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="94-94"];
m18_84 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="94-94"];
m18_92 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="117-117"];
m18_93 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="117-117"];
m18_94 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="117-117"];
m18_104 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="129-129"];
m18_107 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="132-132"];
m18_111 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="134-134"];
m18_105 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="129-129"];
m18_106 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="129-129"];
m18_108 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="132-132"];
m18_109 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="132-132"];
m18_112 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Apply(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="134-134"];
m18_113 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="134-134"];
m18_120 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="157-157"];
m18_121 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.Apply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>())", span="157-157"];
m18_122 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="157-157"];
m18_129 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="164-164"];
m18_132 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="169-169"];
m18_130 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.IsFinal", span="164-164"];
m18_131 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="164-164"];
m18_133 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="169-169"];
m18_134 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="169-169"];
m18_142 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="175-175"];
m18_145 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="180-180"];
m18_143 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.IsFinal", span="175-175"];
m18_144 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="175-175"];
m18_146 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.PersistJob(JobId)", span="180-180"];
m18_147 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="180-180"];
m18_159 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="190-190"];
m18_163 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="192-192"];
m18_166 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="195-195"];
m18_160 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="190-190"];
m18_161 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="190-190"];
m18_164 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.OnStateUnapplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="192-192"];
m18_165 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="192-192"];
m18_167 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<IState>())", span="195-195"];
m18_168 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="195-195"];
m18_177 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="213-213"];
m18_181 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="215-215"];
m18_178 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="213-213"];
m18_179 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="213-213"];
m18_182 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object)", span="215-215"];
m18_183 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="215-215"];
m18_193 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="233-233"];
m18_197 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="234-234"];
m18_200 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="242-242"];
m18_195 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="233-233"];
m18_199 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="234-234"];
m18_202 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="242-242"];
m18_212 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="252-252"];
m18_215 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="253-253"];
m18_218 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="261-261"];
m18_222 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="262-262"];
m18_214 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="252-252"];
m18_217 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="253-253"];
m18_219 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.AddJobState(JobId, _state.Object)", span="261-261"];
m18_220 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="261-261"];
m18_224 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="262-262"];
m18_237 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="272-272"];
m18_240 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="281-283"];
m18_239 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="272-272"];
m18_242 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="281-283"];
m18_243 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Entry lambda expression", span="283-283"];
m18_245 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="283-283"];
m18_256 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="x.StateName", span="296-296"];
m18_257 [cluster="lambda expression", file="StateChangeProcessFacts.cs", label="Exit lambda expression", span="296-296"];
m18_225 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="266-266"];
m18_233 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="266-266"];
m18_91 [cluster="Unk.Verify", file="StateChangeProcessFacts.cs", label="Entry Unk.Verify", span=""];
m18_169 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="207-207"];
m18_170 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="var filter1 = CreateFilter<IApplyStateFilter>()", span="210-210"];
m18_171 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="var filter2 = CreateFilter<IApplyStateFilter>()", span="211-211"];
m18_172 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="filter1.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="213-214"];
m18_173 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="filter2.Setup(x => x.OnStateApplied(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="215-216"];
m18_174 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="218-218"];
m18_176 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsStateAppliedFilters_AfterSettingTheState()", span="207-207"];
m18_64 [cluster="Unk.Commit", file="StateChangeProcessFacts.cs", label="Entry Unk.Commit", span=""];
m18_17 [cluster="Unk.CreateWriteTransaction", file="StateChangeProcessFacts.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m18_56 [cluster="Unk.True", file="StateChangeProcessFacts.cs", label="Entry Unk.True", span=""];
m18_12 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m18_192 [cluster="Unk.Callback", file="StateChangeProcessFacts.cs", label="Entry Unk.Callback", span=""];
m18_46 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="64-64"];
m18_49 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="70-70"];
m18_52 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="64-64"];
m18_11 [cluster="Unk.Returns", file="StateChangeProcessFacts.cs", label="Entry Unk.Returns", span=""];
m18_148 [cluster="Unk.PersistJob", file="StateChangeProcessFacts.cs", label="Entry Unk.PersistJob", span=""];
m18_253 [cluster="Mock<IStateHandler>.cstr", file="StateChangeProcessFacts.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m18_8 [cluster="Mock<IStorageConnection>.cstr", file="StateChangeProcessFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m18_65 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="80-80"];
m18_66 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="var handler1 = CreateStateHandler(OldStateName)", span="83-83"];
m18_67 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="var handler2 = CreateStateHandler(OldStateName)", span="84-84"];
m18_68 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="handler1\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="86-88"];
m18_69 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="handler2\r\n                .Setup(x => x.Unapply(It.IsNotNull<ApplyStateContext>(), _transaction.Object))\r\n                .InSequence()", span="90-92"];
m18_70 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="_transaction.Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<IState>()))\r\n                .InSequence()", span="94-95"];
m18_71 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="97-97"];
m18_73 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_CallsUnapplyHandlers_BeforeSettingTheState()", span="80-80"];
m18_30 [cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Storage.IStorageConnection, Hangfire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<object>)", span="42-42"];
m18_136 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="173-173"];
m18_137 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs", label="_state.Setup(x => x.IsFinal).Returns(false)", span="175-175"];
m18_138 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="176-176"];
m18_140 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs", label="_transaction.Verify(x => x.PersistJob(JobId))", span="180-180"];
m18_141 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_PersistTheJob_IfStateIsNotFinal()", span="173-173"];
m18_85 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="106-106"];
m18_86 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="var handler = CreateStateHandler(StateName)", span="109-109"];
m18_87 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="var process = CreateProcess()", span="110-110"];
m18_89 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="handler.Verify(\r\n                x => x.Unapply(It.IsAny<ApplyStateContext>(), It.IsAny<IWriteOnlyTransaction>()),\r\n                Times.Never)", span="116-118"];
m18_90 [cluster="Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Core.Tests.States.StateChangeProcessFacts.ChangeState_DoesNotCallUnapplyHandlers_ForDifferentStates()", span="106-106"];
m18_264 [file="StateChangeProcessFacts.cs", label="Hangfire.Core.Tests.States.StateChangeProcessFacts", span=""];
m18_265 [file="StateChangeProcessFacts.cs", label=anotherState, span=""];
m18_266 [file="StateChangeProcessFacts.cs", label=newState, span=""];
m18_267 [file="StateChangeProcessFacts.cs", label=exception, span=""];
m20_0 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs", label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m20_1 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs", label="Canceled = canceled", span="12-12"];
m20_2 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs", label="Exception = exception", span="13-13"];
m20_3 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="StateContextFacts.cs", label="Exit HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m20_4 [file="StateContextFacts.cs", label="HangFire.Filters.PerformedContext", span=""];
m22_0 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m22_1 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs", label="Canceled = canceled", span="14-14"];
m22_2 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs", label="Exception = exception", span="15-15"];
m22_3 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="StateMachine.cs", label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m22_4 [file="StateMachine.cs", label="HangFire.Filters.CreatedContext", span=""];
m24_93 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="113-113"];
m24_94 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="115-115"];
m24_95 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="_parameters.Add(''Name'', ''Value'')", span="116-116"];
m24_97 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="120-120"];
m24_98 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="122-126"];
m24_96 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="118-118"];
m24_99 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="113-113"];
m24_100 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m24_16 [cluster="Mock<IState>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m24_59 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="71-71"];
m24_60 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="73-74"];
m24_61 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="76-76"];
m24_62 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="71-71"];
m24_84 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="102-102"];
m24_85 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="104-104"];
m24_86 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="106-107"];
m24_87 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="109-109"];
m24_88 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="102-102"];
m24_54 [cluster="Unk.Equal", file="StateMachineFacts.cs", label="Entry Unk.Equal", span=""];
m24_258 [cluster="System.Exception.Exception()", file="StateMachineFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m24_76 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="91-91"];
m24_77 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="93-93"];
m24_78 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="95-96"];
m24_79 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="98-98"];
m24_80 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="91-91"];
m24_0 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="24-24"];
m24_2 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_job = Job.FromExpression(() => Console.WriteLine())", span="28-28"];
m24_3 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_parameters = new Dictionary<string, string>()", span="29-29"];
m24_4 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_state = new Mock<IState>()", span="30-30"];
m24_5 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="31-31"];
m24_6 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="33-33"];
m24_7 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="35-39"];
m24_8 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = _job\r\n                })", span="41-46"];
m24_9 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_distributedLock = new Mock<IDisposable>()", span="48-48"];
m24_10 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="49-51"];
m24_12 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="24-24"];
m24_184 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="227-227"];
m24_185 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="230-231"];
m24_186 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="233-233"];
m24_188 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="Assert.False(result)", span="239-239"];
m24_189 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="_connection.Verify(x => x.GetJobData(JobId))", span="240-240"];
m24_191 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="227-227"];
m24_153 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="183-183"];
m24_154 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="185-185"];
m24_156 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="_distributedLock.Verify(x => x.Dispose())", span="189-189"];
m24_157 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="183-183"];
m24_41 [cluster="string.Format(string, object)", file="StateMachineFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m24_136 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="161-161"];
m24_137 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="163-163"];
m24_139 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="168-168"];
m24_140 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="161-161"];
m24_144 [cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="StateMachineFacts.cs", label="Entry Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62"];
m24_233 [cluster="System.InvalidOperationException.InvalidOperationException()", file="StateMachineFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m24_32 [cluster="Unk.>", file="StateMachineFacts.cs", label="Entry Unk.>", span=""];
m24_224 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="286-286"];
m24_225 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="289-295"];
m24_227 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="301-301"];
m24_230 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Assert.False(result)", span="312-312"];
m24_231 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="286-286"];
m24_33 [cluster="Unk.CreateExpiredJob", file="StateMachineFacts.cs", label="Entry Unk.CreateExpiredJob", span=""];
m24_202 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="248-248"];
m24_203 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="251-251"];
m24_205 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="Assert.False(result)", span="258-258"];
m24_207 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="248-248"];
m24_58 [cluster="StateMachine.cstr", file="StateMachineFacts.cs", label="Entry StateMachine.cstr", span=""];
m24_192 [cluster="Unk.False", file="StateMachineFacts.cs", label="Entry Unk.False", span=""];
m24_145 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="172-172"];
m24_146 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="174-174"];
m24_148 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="179-179"];
m24_149 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="172-172"];
m24_50 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="62-62"];
m24_52 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="67-67"];
m24_53 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="62-62"];
m24_249 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="316-316"];
m24_250 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="319-325"];
m24_252 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="331-331"];
m24_253 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="333-333"];
m24_256 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Assert.True(result)", span="344-344"];
m24_257 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="316-316"];
m24_25 [cluster="System.Console.WriteLine()", file="StateMachineFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m24_13 [cluster="Mock<IStateChangeProcess>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IStateChangeProcess>.cstr", span=""];
m24_46 [cluster="Unk.ChangeState", file="StateMachineFacts.cs", label="Entry Unk.ChangeState", span=""];
m24_71 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="347-347"];
m24_272 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="347-347"];
m24_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m24_17 [cluster="Unk.Setup", file="StateMachineFacts.cs", label="Entry Unk.Setup", span=""];
m24_92 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachineFacts.cs", label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40"];
m24_161 [cluster="Unk.Dispose", file="StateMachineFacts.cs", label="Entry Unk.Dispose", span=""];
m24_66 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="80-80"];
m24_67 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="82-82"];
m24_68 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="84-85"];
m24_69 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="87-87"];
m24_70 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="80-80"];
m24_123 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="143-143"];
m24_124 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="145-145"];
m24_125 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="146-146"];
m24_126 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="143-143"];
m24_42 [cluster="Unk.AcquireDistributedLock", file="StateMachineFacts.cs", label="Entry Unk.AcquireDistributedLock", span=""];
m24_21 [cluster="Mock<IDisposable>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m24_75 [cluster="Unk.CreateInState", file="StateMachineFacts.cs", label="Entry Unk.CreateInState", span=""];
m24_135 [cluster="Unk.TryToChangeState", file="StateMachineFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m24_268 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="339-342"];
m24_22 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="28-28"];
m24_26 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="31-31"];
m24_29 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="35-39"];
m24_34 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="41-41"];
m24_38 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="50-50"];
m24_43 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="54-57"];
m24_23 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine()", span="28-28"];
m24_24 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="28-28"];
m24_27 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.Name", span="31-31"];
m24_28 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="31-31"];
m24_30 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="35-39"];
m24_31 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="35-39"];
m24_35 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(JobId)", span="41-41"];
m24_36 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="41-41"];
m24_39 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="50-50"];
m24_40 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="50-50"];
m24_45 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="54-57"];
m24_47 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="55-55"];
m24_49 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="55-55"];
m24_55 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="65-65"];
m24_57 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="65-65"];
m24_63 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="74-74"];
m24_64 [cluster="lambda expression", file="StateMachineFacts.cs", label="new StateMachine(_connection.Object, null)", span="74-74"];
m24_65 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="74-74"];
m24_73 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="85-85"];
m24_72 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="85-85"];
m24_74 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="85-85"];
m24_82 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.CreateInState(_job, null, _state.Object)", span="96-96"];
m24_81 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="96-96"];
m24_83 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="96-96"];
m24_90 [cluster="lambda expression", file="StateMachineFacts.cs", label="stateMachine.CreateInState(_job, _parameters, null)", span="107-107"];
m24_89 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="107-107"];
m24_91 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="107-107"];
m24_102 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="115-115"];
m24_107 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="122-126"];
m24_106 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="122-126"];
m24_103 [cluster="lambda expression", file="StateMachineFacts.cs", label="Console.WriteLine(''SomeString'')", span="115-115"];
m24_104 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="115-115"];
m24_108 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="122-126"];
m24_109 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="124-124"];
m24_110 [cluster="lambda expression", file="StateMachineFacts.cs", label="d[''Name''] == ''Value''", span="124-124"];
m24_111 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="124-124"];
m24_117 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="136-139"];
m24_119 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="136-139"];
m24_120 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="137-137"];
m24_122 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="137-137"];
m24_132 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="155-155"];
m24_134 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="155-155"];
m24_141 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="166-166"];
m24_143 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="166-166"];
m24_150 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="177-177"];
m24_152 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="177-177"];
m24_158 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="189-189"];
m24_159 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.Dispose()", span="189-189"];
m24_160 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="189-189"];
m24_169 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="202-205"];
m24_171 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="202-205"];
m24_172 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="203-203"];
m24_174 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="203-203"];
m24_181 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="220-223"];
m24_183 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="220-223"];
m24_193 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="230-230"];
m24_196 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="240-240"];
m24_199 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="243-243"];
m24_194 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(It.IsAny<string>())", span="230-230"];
m24_195 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="230-230"];
m24_197 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(JobId)", span="240-240"];
m24_198 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="240-240"];
m24_201 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="243-243"];
m24_208 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="261-261"];
m24_210 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="261-261"];
m24_218 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="270-270"];
m24_221 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="280-280"];
m24_220 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="270-270"];
m24_223 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="280-280"];
m24_234 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="289-289"];
m24_237 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="298-298"];
m24_240 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="307-310"];
m24_235 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(JobId)", span="289-289"];
m24_236 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="289-289"];
m24_239 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="298-298"];
m24_242 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="307-310"];
m24_243 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="308-308"];
m24_246 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="309-309"];
m24_245 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="308-308"];
m24_248 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="309-309"];
m24_259 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="319-319"];
m24_262 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="328-328"];
m24_265 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="331-331"];
m24_260 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.GetJobData(JobId)", span="319-319"];
m24_261 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="319-319"];
m24_264 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="328-328"];
m24_266 [cluster="lambda expression", file="StateMachineFacts.cs", label="x.IgnoreJobLoadException", span="331-331"];
m24_267 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="331-331"];
m24_270 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="339-342"];
m24_162 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="193-193"];
m24_163 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="196-196"];
m24_166 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs", label="Assert.True(result)", span="207-207"];
m24_167 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="193-193"];
m24_20 [cluster="Hangfire.Storage.JobData.JobData()", file="StateMachineFacts.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m24_101 [cluster="Unk.Verify", file="StateMachineFacts.cs", label="Entry Unk.Verify", span=""];
m24_127 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="150-150"];
m24_128 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="152-152"];
m24_130 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="157-157"];
m24_131 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="150-150"];
m24_112 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="130-130"];
m24_113 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="132-132"];
m24_114 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="stateMachine.CreateInState(_job, _parameters, _state.Object)", span="134-134"];
m24_116 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="130-130"];
m24_211 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="266-266"];
m24_213 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="273-273"];
m24_216 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="Assert.False(result)", span="282-282"];
m24_217 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="266-266"];
m24_232 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="StateMachineFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m24_168 [cluster="Unk.True", file="StateMachineFacts.cs", label="Entry Unk.True", span=""];
m24_18 [cluster="Unk.Returns", file="StateMachineFacts.cs", label="Entry Unk.Returns", span=""];
m24_105 [cluster="System.Console.WriteLine(string)", file="StateMachineFacts.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m24_176 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="211-211"];
m24_177 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="var stateMachine = CreateStateMachine()", span="214-214"];
m24_180 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="211-211"];
m24_19 [cluster="Mock<IStorageConnection>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m24_37 [cluster="Unk.GetJobData", file="StateMachineFacts.cs", label="Entry Unk.GetJobData", span=""];
m24_175 [cluster="Unk.Equals", file="StateMachineFacts.cs", label="Entry Unk.Equals", span=""];
m24_14 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m24_273 [file="StateMachineFacts.cs", label="Hangfire.Core.Tests.States.StateMachineFacts", span=""];
m24_274 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m24_275 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m24_276 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m24_277 [file="StateMachineFacts.cs", label=job, span=""];
m24_278 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m24_279 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m24_280 [file="StateMachineFacts.cs", label=stateMachine, span=""];
m25_0 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m25_1 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="jobId == null", span="24-24"];
m25_3 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="queue == null", span="25-25"];
m25_5 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="JobId = jobId", span="27-27"];
m25_6 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="Queue = queue", span="28-28"];
m25_2 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="throw new ArgumentNullException(''jobId'');", span="24-24"];
m25_4 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="throw new ArgumentNullException(''queue'');", span="25-25"];
m25_7 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="Worker.cs", label="Exit HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m25_9 [file="Worker.cs", label="HangFire.Storage.ProcessingJob", span=""];
m26_139 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="153-153"];
m26_142 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", prediction=25, span="159-164"];
m26_141 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="157-157"];
m26_140 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="155-155"];
m26_143 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="153-153"];
m26_68 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="WorkerFacts.cs", label="Entry Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35"];
m26_15 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m26_0 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25"];
m26_1 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context = new WorkerContextMock()", span="27-27"];
m26_56 [cluster="Unk.Equal", file="WorkerFacts.cs", label="Entry Unk.Equal", span=""];
m26_263 [cluster="System.Exception.Exception()", file="WorkerFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m26_220 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="250-250"];
m26_225 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", prediction=25, span="264-267"];
m26_221 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m26_224 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="261-261"];
m26_222 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="254-256"];
m26_223 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="258-258"];
m26_226 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="250-250"];
m26_209 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="237-237"];
m26_212 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", prediction=25, span="243-246"];
m26_211 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="241-241"];
m26_210 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="239-239"];
m26_213 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="237-237"];
m26_23 [cluster="System.Threading.CancellationToken.CancellationToken()", file="WorkerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m26_16 [cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m26_150 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="168-168"];
m26_151 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", prediction=25, span="171-176"];
m26_152 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="178-178"];
m26_153 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="181-181"];
m26_154 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="184-186"];
m26_155 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="168-168"];
m26_162 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="190-190"];
m26_163 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="192-192"];
m26_164 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="194-194"];
m26_165 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="196-198"];
m26_166 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="190-190"];
m26_196 [cluster="Unk.DoesNotThrow", file="WorkerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m26_109 [cluster="Unk.Requeue", file="WorkerFacts.cs", label="Entry Unk.Requeue", span=""];
m26_124 [cluster="Unk.Run", file="WorkerFacts.cs", label="Entry Unk.Run", span=""];
m26_227 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m26_34 [cluster="Unk.>", file="WorkerFacts.cs", label="Entry Unk.>", span=""];
m26_90 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="97-97"];
m26_91 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()))\r\n                .Throws<InvalidOperationException>()", prediction=25, span="99-101"];
m26_92 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="103-103"];
m26_93 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_token))", span="105-106"];
m26_94 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="108-108"];
m26_95 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="109-109"];
m26_96 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="97-97"];
m26_189 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="221-221"];
m26_190 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="224-225"];
m26_191 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="227-227"];
m26_192 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Assert.DoesNotThrow(() => worker.Execute(_token))", span="230-230"];
m26_193 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="232-232"];
m26_194 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="233-233"];
m26_195 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="221-221"];
m26_67 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="310-310"];
m26_270 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="return new Worker(_context.Object);", span="312-312"];
m26_271 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="310-310"];
m26_52 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63"];
m26_53 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null))", span="65-66"];
m26_54 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="68-68"];
m26_55 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63"];
m26_239 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="271-271"];
m26_244 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", prediction=25, span="285-288"];
m26_240 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="274-274"];
m26_243 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="282-282"];
m26_241 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="275-277"];
m26_242 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="279-279"];
m26_245 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="271-271"];
m26_19 [cluster="Mock<IFetchedJob>.cstr", file="WorkerFacts.cs", label="Entry Mock<IFetchedJob>.cstr", span=""];
m26_27 [cluster="Unk.GetConnection", file="WorkerFacts.cs", label="Entry Unk.GetConnection", span=""];
m26_51 [cluster="Unk.ChangeState", file="WorkerFacts.cs", label="Entry Unk.ChangeState", span=""];
m26_12 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Setup(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())).Returns(true)", prediction=25, span="54-57"];
m26_11 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="50-52"];
m26_13 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_token = new CancellationToken()", span="59-59"];
m26_2 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_storage = _context.SharedContext.Storage", span="28-28"];
m26_3 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_process = _context.SharedContext.PerformanceProcess", span="29-29"];
m26_4 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m26_5 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33"];
m26_6 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob = new Mock<IFetchedJob>()", span="35-35"];
m26_7 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="36-36"];
m26_8 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_fetchedJob.Object)", span="38-40"];
m26_9 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="42-46"];
m26_10 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="48-48"];
m26_14 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25"];
m26_117 [cluster="Unk.InSequence", file="WorkerFacts.cs", label="Entry Unk.InSequence", span=""];
m26_17 [cluster="Unk.Setup", file="WorkerFacts.cs", label="Entry Unk.Setup", span=""];
m26_228 [cluster="Unk.Throws", file="WorkerFacts.cs", label="Entry Unk.Throws", span=""];
m26_76 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m26_35 [cluster="Unk.FetchNextJob", file="WorkerFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m26_256 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="292-292"];
m26_260 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", prediction=25, span="304-307"];
m26_259 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="301-301"];
m26_257 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="295-296"];
m26_258 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="298-298"];
m26_261 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="292-292"];
m26_89 [cluster="Unk.RemoveFromQueue", file="WorkerFacts.cs", label="Entry Unk.RemoveFromQueue", span=""];
m26_57 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="66-66"];
m26_48 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="54-57"];
m26_49 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())", prediction=33, span="54-57"];
m26_50 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="54-57"];
m26_97 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="100-100"];
m26_98 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", prediction=34, span="100-100"];
m26_99 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="100-100"];
m26_118 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="117-118"];
m26_125 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="126-127"];
m26_119 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", prediction=35, span="117-118"];
m26_120 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="117-118"];
m26_126 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", prediction=36, span="126-127"];
m26_127 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="126-127"];
m26_133 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="146-149"];
m26_134 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>())", prediction=25, span="146-149"];
m26_135 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="146-149"];
m26_136 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="148-148"];
m26_144 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="159-164"];
m26_145 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", prediction=38, span="159-164"];
m26_146 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="159-164"];
m26_147 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="163-164"];
m26_156 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="172-175"];
m26_157 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", prediction=39, span="172-175"];
m26_158 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="172-175"];
m26_183 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="215-215"];
m26_184 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>())", prediction=40, span="215-215"];
m26_185 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="215-215"];
m26_214 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="243-246"];
m26_215 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", prediction=41, span="243-246"];
m26_216 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="243-246"];
m26_217 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="246-246"];
m26_232 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="264-267"];
m26_233 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", prediction=25, span="264-267"];
m26_234 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="264-267"];
m26_235 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="266-266"];
m26_250 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="285-288"];
m26_251 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", prediction=25, span="285-288"];
m26_252 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="285-288"];
m26_253 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="287-287"];
m26_267 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="304-307"];
m26_268 [cluster="lambda expression", color=green, community=1, file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", prediction=44, span="304-307"];
m26_269 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="304-307"];
m26_32 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>())", span="39-39"];
m26_45 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Create(_connection.Object)", span="51-51"];
m26_84 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, _token)", span="90-90"];
m26_101 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_token)", span="106-106"];
m26_137 [cluster="lambda expression", file="WorkerFacts.cs", label="state.ServerId == _context.Object.ServerId", span="148-148"];
m26_181 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_token)", span="211-211"];
m26_201 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_token)", span="230-230"];
m26_44 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="51-51"];
m26_122 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="122-122"];
m26_160 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="185-185"];
m26_168 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="196-198"];
m26_178 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="205-205"];
m26_198 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="224-224"];
m26_230 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="255-255"];
m26_248 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="276-276"];
m26_121 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="122-122"];
m26_138 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="148-148"];
m26_149 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="163-164"];
m26_148 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="163-164"];
m26_180 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="211-211"];
m26_186 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="217-217"];
m26_219 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="246-246"];
m26_218 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="246-246"];
m26_236 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="266-266"];
m26_237 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="266-266"];
m26_254 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="287-287"];
m26_255 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="287-287"];
m26_24 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="33-33"];
m26_28 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="36-36"];
m26_31 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="39-39"];
m26_33 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="39-39"];
m26_36 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="42-42"];
m26_40 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="45-45"];
m26_46 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="51-51"];
m26_70 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="78-78"];
m26_73 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="79-79"];
m26_83 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="90-90"];
m26_85 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="90-90"];
m26_86 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="93-93"];
m26_100 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="106-106"];
m26_102 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="106-106"];
m26_103 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="108-108"];
m26_106 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="109-109"];
m26_159 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="185-185"];
m26_167 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="196-198"];
m26_177 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="205-205"];
m26_182 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="211-211"];
m26_197 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="224-224"];
m26_200 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="230-230"];
m26_202 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="230-230"];
m26_203 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="232-232"];
m26_206 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="233-233"];
m26_229 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="255-255"];
m26_247 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="276-276"];
m26_264 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="295-295"];
m26_123 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="122-122"];
m26_161 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="185-185"];
m26_169 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="196-198"];
m26_179 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="205-205"];
m26_199 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="224-224"];
m26_231 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="255-255"];
m26_249 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="276-276"];
m26_188 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="217-217"];
m26_187 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="217-217"];
m26_26 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="33-33"];
m26_25 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="33-33"];
m26_30 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="36-36"];
m26_29 [cluster="lambda expression", file="WorkerFacts.cs", label="x.JobId", span="36-36"];
m26_38 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="42-42"];
m26_37 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="42-42"];
m26_42 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="45-45"];
m26_41 [cluster="lambda expression", file="WorkerFacts.cs", label="Method()", span="45-45"];
m26_72 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="78-78"];
m26_71 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="78-78"];
m26_75 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="79-79"];
m26_74 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Dispose()", span="79-79"];
m26_88 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="93-93"];
m26_87 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="93-93"];
m26_105 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="108-108"];
m26_104 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="108-108"];
m26_108 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="109-109"];
m26_107 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="109-109"];
m26_205 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="232-232"];
m26_204 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="232-232"];
m26_208 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="233-233"];
m26_207 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="233-233"];
m26_266 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="295-295"];
m26_265 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="295-295"];
m26_58 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(null)", span="66-66"];
m26_59 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="66-66"];
m26_128 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="140-140"];
m26_131 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", color=green, community=1, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", prediction=25, span="146-149"];
m26_130 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="144-144"];
m26_129 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="142-142"];
m26_132 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="140-140"];
m26_20 [cluster="Hangfire.Storage.JobData.JobData()", file="WorkerFacts.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m26_238 [cluster="Unk.Contains", file="WorkerFacts.cs", label="Entry Unk.Contains", span=""];
m26_110 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="113-113"];
m26_111 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", prediction=25, span="116-120"];
m26_112 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="122-123"];
m26_113 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", prediction=25, span="125-129"];
m26_114 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="131-131"];
m26_115 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="134-134"];
m26_116 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="113-113"];
m26_21 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m26_77 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="83-83"];
m26_78 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="85-85"];
m26_79 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="87-87"];
m26_80 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_connection.Verify(\r\n                x => x.FetchNextJob(_context.SharedContext.Queues, _token),\r\n                Times.Once)", span="89-91"];
m26_81 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="93-93"];
m26_82 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="83-83"];
m26_262 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m26_246 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m26_22 [cluster="Mock<IStateMachine>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m26_170 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="202-202"];
m26_174 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>()),\r\n                Times.Never)", prediction=25, span="214-216"];
m26_173 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_token))", span="211-211"];
m26_175 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="217-217"];
m26_171 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="205-206"];
m26_172 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="208-208"];
m26_176 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="202-202"];
m26_47 [cluster="Unk.Create", file="WorkerFacts.cs", label="Entry Unk.Create", span=""];
m26_60 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="WorkerFacts.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m26_18 [cluster="Unk.Returns", file="WorkerFacts.cs", label="Entry Unk.Returns", span=""];
m26_43 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="315-315"];
m26_272 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="315-315"];
m26_69 [cluster="Unk.Verify", file="WorkerFacts.cs", label="Entry Unk.Verify", span=""];
m26_39 [cluster="Unk.GetJobData", file="WorkerFacts.cs", label="Entry Unk.GetJobData", span=""];
m26_61 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72"];
m26_62 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="74-74"];
m26_63 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="76-76"];
m26_64 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="78-78"];
m26_65 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="79-79"];
m26_66 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72"];
m26_273 [file="WorkerFacts.cs", label="Hangfire.Core.Tests.Server.WorkerFacts", span=""];
m26_277 [file="WorkerFacts.cs", label=exception, span=""];
m26_278 [file="WorkerFacts.cs", label=exception, span=""];
m26_274 [file="WorkerFacts.cs", label=worker, span=""];
m26_275 [file="WorkerFacts.cs", label=worker, span=""];
m26_276 [file="WorkerFacts.cs", label=worker, span=""];
d34 -> d41  [color=green, key=1, label=string, style=dashed];
d34 -> d37  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
d45 -> d25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
d24 -> d26  [color=darkseagreen4, key=1, label=context, style=dashed];
d6 -> d9  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
d6 -> d11  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
d18 -> d21  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m0_33 -> m0_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_78 -> m0_84  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_79 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_58 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_98 -> m0_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_106 -> m0_117  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_107 -> m0_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_110  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_87 -> m0_92  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_120 -> m0_125  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_121 -> m0_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_9 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_129 -> m0_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_130 -> m0_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_167 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_148  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_167 -> m0_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_84  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_169 -> m0_92  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_170 -> m0_117  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_171 -> m0_125  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_172 -> m0_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m1_63 -> m1_67  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m1_63 -> m1_69  [color=darkseagreen4, key=1, label=stateMachineFactory, style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=supervisors, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=supervisors, style=dashed];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m1_87 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_24  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_26  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_34  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_38  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_53  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_54  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_65  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_66  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_67  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_68  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m1_87 -> m1_69  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m4_0 -> m4_3  [color=green, key=1, label="Hangfire.States.IStateMachine", style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m4_23 -> m4_14  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m4_23 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m5_62 -> m5_65  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_83 -> m5_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_71 -> m5_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_103 -> m5_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_50 -> m5_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_90 -> m5_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_22 -> m5_25  [color=green, key=1, label="lambda expression", style=dashed];
m5_12 -> m5_17  [color=green, key=1, label="lambda expression", style=dashed];
m5_56 -> m5_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_57 -> m5_59  [color=darkseagreen4, key=1, label=newState, style=dashed];
m5_29 -> m5_32  [color=green, key=1, label="lambda expression", style=dashed];
m5_36 -> m5_39  [color=green, key=1, label=context, style=dashed];
m5_36 -> m5_40  [color=green, key=1, label=context, style=dashed];
m5_36 -> m5_38  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_36 -> m5_41  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_36 -> m5_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_36 -> m5_43  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_112 -> m5_18  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_26  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_33  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_39  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_40  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_110  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m5_112 -> m5_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m6_17 -> m6_3  [color=green, key=1, label="Hangfire.Core.Tests.ElectStateContextMock", style=dashed];
m6_17 -> m6_14  [color=green, key=1, label="Hangfire.Core.Tests.ElectStateContextMock", style=dashed];
m6_17 -> m6_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ElectStateContextMock", style=dashed];
m6_17 -> m6_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ElectStateContextMock", style=dashed];
m8_14 -> m8_8  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m13_49 -> m13_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_50 -> m13_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_76 -> m13_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_77 -> m13_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_4 -> m13_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_4 -> m13_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_24 -> m13_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_31 -> m13_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_64 -> m13_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_65 -> m13_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_86 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m13_86 -> m13_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m16_54 -> m16_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_55 -> m16_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_36 -> m16_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_77 -> m16_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_80 -> m16_88  [color=green, key=1, label="lambda expression", style=dashed];
m16_45 -> m16_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_70 -> m16_72  [color=green, key=1, label="lambda expression", style=dashed];
m16_7 -> m16_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_8 -> m16_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_9 -> m16_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_83 -> m16_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_93 -> m16_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_70  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_80  [color=green, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m16_93 -> m16_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m18_115 -> m18_118  [color=darkseagreen4, key=1, label=handler, style=dashed];
m18_118 -> m18_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_3 -> m18_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_6 -> m18_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_96 -> m18_99  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m18_97 -> m18_100  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m18_99 -> m18_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_98 -> m18_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_100 -> m18_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_209 -> m18_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_74 -> m18_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_248 -> m18_250  [color=darkseagreen4, key=1, label=handler, style=dashed];
m18_248 -> m18_251  [color=darkseagreen4, key=1, label=handler, style=dashed];
m18_249 -> m18_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_258 -> m18_260  [color=darkseagreen4, key=1, label=filter, style=dashed];
m18_124 -> m18_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_127 -> m18_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_150 -> m18_152  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m18_151 -> m18_153  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m18_152 -> m18_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_153 -> m18_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_154 -> m18_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_170 -> m18_172  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m18_171 -> m18_173  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m18_172 -> m18_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_173 -> m18_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_66 -> m18_68  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m18_67 -> m18_69  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m18_68 -> m18_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_69 -> m18_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_70 -> m18_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_137 -> m18_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_140 -> m18_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_86 -> m18_89  [color=darkseagreen4, key=1, label=handler, style=dashed];
m18_89 -> m18_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_264 -> m18_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_108  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_127  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_140  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_172  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_182  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_219  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_250  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m18_264 -> m18_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateChangeProcessFacts", style=dashed];
m24_94 -> m24_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_94 -> m24_97  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_94 -> m24_98  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_94 -> m24_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m24_98 -> m24_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_60 -> m24_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_85 -> m24_90  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m24_86 -> m24_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_77 -> m24_82  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m24_78 -> m24_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_2 -> m24_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_5 -> m24_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_7 -> m24_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_8 -> m24_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_10 -> m24_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_185 -> m24_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_189 -> m24_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_156 -> m24_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_225 -> m24_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_250 -> m24_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_252 -> m24_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_67 -> m24_73  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m24_68 -> m24_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_107 -> m24_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_273 -> m24_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_185  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_189  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_273 -> m24_252  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m24_274 -> m24_73  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m24_275 -> m24_82  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m24_276 -> m24_90  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m24_277 -> m24_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_0 -> m25_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_142 -> m26_144  [color=green, key=1, label="lambda expression", style=dashed];
m26_225 -> m26_232  [color=green, key=1, label="lambda expression", style=dashed];
m26_221 -> m26_225  [color=green, key=1, label=exception, style=dashed];
m26_221 -> m26_233  [color=green, key=1, label=exception, style=dashed];
m26_221 -> m26_236  [color=darkseagreen4, key=1, label=exception, style=dashed];
m26_222 -> m26_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_212 -> m26_214  [color=green, key=1, label="lambda expression", style=dashed];
m26_151 -> m26_156  [color=green, key=1, label="lambda expression", style=dashed];
m26_154 -> m26_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_165 -> m26_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_91 -> m26_97  [color=green, key=1, label="lambda expression", style=dashed];
m26_92 -> m26_101  [color=darkseagreen4, key=1, label=worker, style=dashed];
m26_93 -> m26_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_94 -> m26_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_95 -> m26_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_190 -> m26_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_191 -> m26_201  [color=darkseagreen4, key=1, label=worker, style=dashed];
m26_192 -> m26_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_193 -> m26_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_194 -> m26_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_53 -> m26_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_244 -> m26_250  [color=green, key=1, label="lambda expression", style=dashed];
m26_240 -> m26_244  [color=green, key=1, label=exception, style=dashed];
m26_240 -> m26_251  [color=green, key=1, label=exception, style=dashed];
m26_240 -> m26_254  [color=darkseagreen4, key=1, label=exception, style=dashed];
m26_241 -> m26_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_12 -> m26_48  [color=green, key=1, label="lambda expression", style=dashed];
m26_11 -> m26_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_5 -> m26_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_7 -> m26_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_8 -> m26_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_9 -> m26_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_9 -> m26_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_260 -> m26_267  [color=green, key=1, label="lambda expression", style=dashed];
m26_257 -> m26_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_134 -> m26_136  [color=green, key=1, label="lambda expression", style=dashed];
m26_145 -> m26_147  [color=green, key=1, label="lambda expression", style=dashed];
m26_215 -> m26_217  [color=green, key=1, label="lambda expression", style=dashed];
m26_233 -> m26_235  [color=green, key=1, label="lambda expression", style=dashed];
m26_251 -> m26_253  [color=green, key=1, label="lambda expression", style=dashed];
m26_131 -> m26_133  [color=green, key=1, label="lambda expression", style=dashed];
m26_111 -> m26_118  [color=green, key=1, label="lambda expression", style=dashed];
m26_112 -> m26_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_113 -> m26_125  [color=green, key=1, label="lambda expression", style=dashed];
m26_80 -> m26_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_81 -> m26_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_174 -> m26_183  [color=green, key=1, label="lambda expression", style=dashed];
m26_173 -> m26_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_175 -> m26_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_171 -> m26_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_172 -> m26_181  [color=darkseagreen4, key=1, label=worker, style=dashed];
m26_64 -> m26_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_65 -> m26_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_273 -> m26_12  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_91  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_111  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_113  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_131  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_134  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_142  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_151  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_174  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_212  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_225  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_244  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_260  [color=green, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_80  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_130  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_181  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_175  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_201  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_222  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_241  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_243  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_273 -> m26_270  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m26_277 -> m26_233  [color=green, key=1, label=exception, style=dashed];
m26_277 -> m26_236  [color=darkseagreen4, key=1, label=exception, style=dashed];
m26_278 -> m26_251  [color=green, key=1, label=exception, style=dashed];
m26_278 -> m26_254  [color=darkseagreen4, key=1, label=exception, style=dashed];
m26_274 -> m26_101  [color=darkseagreen4, key=1, label=worker, style=dashed];
m26_275 -> m26_181  [color=darkseagreen4, key=1, label=worker, style=dashed];
m26_276 -> m26_201  [color=darkseagreen4, key=1, label=worker, style=dashed];
}
