digraph  {
d1 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=green, community=0, label="0: _inner = new Mock<IServerComponent>()", span="15-15"];
d76 [label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
d0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
d2 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=green, community=0, label="0: _cts = new CancellationTokenSource()", span="16-16"];
d4 [cluster="Mock<IServerComponent>.cstr", label="Entry Mock<IServerComponent>.cstr", span=""];
d3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
d5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
d7 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", color=green, community=0, label="0: Assert.Throws<ArgumentNullException>(() => new InfiniteLoopComponent(null))", span="22-22"];
d6 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
d8 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
d9 [cluster="Unk.>", label="Entry Unk.>", span=""];
d10 [cluster="lambda expression", label="Entry lambda expression", span="22-22"];
d11 [cluster="lambda expression", color=green, community=0, label="0: new InfiniteLoopComponent(null)", span="22-22"];
d12 [cluster="lambda expression", label="Exit lambda expression", span="22-22"];
d13 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24"];
d15 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, label="0: var component = CreateComponent()", span="28-28"];
d14 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
d16 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, label="0: var result = component.InnerComponent", span="29-29"];
d19 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
d17 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, label="0: Assert.Same(_inner.Object, result)", span="30-30"];
d18 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
d20 [cluster="Unk.Same", label="Entry Unk.Same", span=""];
d45 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="32-32"];
d22 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, label="0: _inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38"];
d21 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
d23 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, label="0: var component = CreateComponent()", span="40-40"];
d28 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
d29 [cluster="Unk.Callback", label="Entry Unk.Callback", span=""];
d34 [cluster="lambda expression", label="Entry lambda expression", span="37-37"];
d38 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
d24 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, label="0: _cts.CancelAfter(TimeSpan.FromMilliseconds(100))", span="41-41"];
d25 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, label="0: Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="44-44"];
d43 [cluster="lambda expression", color=green, community=0, label="0: component.Execute(_cts.Token)", span="44-44"];
d30 [cluster="System.TimeSpan.FromMilliseconds(double)", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
d31 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
d26 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", label="_inner.Verify(x => x.Execute(_cts.Token), Times.AtLeast(5))", span="47-47"];
d42 [cluster="lambda expression", label="Entry lambda expression", span="44-44"];
d77 [label=component, span=""];
d44 [cluster="lambda expression", label="Exit lambda expression", span="44-44"];
d35 [cluster="lambda expression", color=green, community=0, label="0: x.Execute(It.IsAny<CancellationToken>())", span="37-37"];
d36 [cluster="lambda expression", label="Exit lambda expression", span="37-37"];
d37 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
d39 [cluster="lambda expression", color=green, community=0, label="0: Thread.Sleep(5)", span="38-38"];
d40 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
d41 [cluster="System.Threading.Thread.Sleep(int)", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
d47 [cluster="lambda expression", label="x.Execute(_cts.Token)", span="47-47"];
d50 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", label="var component = CreateComponent()", span="54-54"];
d51 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", label="_cts.Cancel()", span="55-55"];
d52 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58"];
d57 [cluster="lambda expression", label="component.Execute(_cts.Token)", span="58-58"];
d53 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", label="_inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61"];
d63 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", label="_cts.Cancel()", span="67-67"];
d66 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", label="var component = CreateComponent()", span="73-73"];
d68 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", label="Assert.Equal(_inner.Object.ToString(), result)", span="75-75"];
d73 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", label="return new InfiniteLoopComponent(_inner.Object);", span="80-80"];
d60 [cluster="lambda expression", label="x.Execute(It.IsAny<CancellationToken>())", span="61-61"];
d74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
d27 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
d32 [cluster="Unk.AtLeast", label="Entry Unk.AtLeast", span=""];
d33 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
d46 [cluster="lambda expression", label="Entry lambda expression", span="47-47"];
d48 [cluster="lambda expression", label="Exit lambda expression", span="47-47"];
d49 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
d55 [cluster="System.Threading.CancellationTokenSource.Cancel()", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
d56 [cluster="lambda expression", label="Entry lambda expression", span="58-58"];
d78 [label=component, span=""];
d58 [cluster="lambda expression", label="Exit lambda expression", span="58-58"];
d54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
d59 [cluster="lambda expression", label="Entry lambda expression", span="61-61"];
d62 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
d64 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
d65 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
d67 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", label="var result = component.ToString()", span="74-74"];
d69 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
d71 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
d72 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d75 [cluster="InfiniteLoopComponent.cstr", label="Entry InfiniteLoopComponent.cstr", span=""];
d61 [cluster="lambda expression", label="Exit lambda expression", span="61-61"];
d70 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="41-41"];
m0_73 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: return new InfiniteLoopComponent(_inner.Object);", span="80-80"];
m0_20 [cluster="Unk.Same", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Same", span=""];
m0_75 [cluster="InfiniteLoopComponent.cstr", file="InfiniteLoopComponentFacts.cs", label="Entry InfiniteLoopComponent.cstr", span=""];
m0_30 [cluster="System.TimeSpan.FromMilliseconds(double)", file="InfiniteLoopComponentFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m0_14 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
m0_15 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: var component = CreateComponent()", span="28-28"];
m0_16 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: var result = component.InnerComponent", span="29-29"];
m0_17 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: Assert.Same(_inner.Object, result)", span="30-30"];
m0_18 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
m0_72 [cluster="Unk.Equal", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Equal", span=""];
m0_55 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m0_41 [cluster="System.Threading.Thread.Sleep(int)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_9 [cluster="Unk.>", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.>", span=""];
m0_6 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
m0_7 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: Assert.Throws<ArgumentNullException>(() => new InfiniteLoopComponent(null))", span="22-22"];
m0_8 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
m0_21 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m0_22 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=1, file="InfiniteLoopComponentFacts.cs", label="0: _inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38"];
m0_23 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: var component = CreateComponent()", span="40-40"];
m0_24 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _cts.CancelAfter(TimeSpan.FromMilliseconds(100))", span="41-41"];
m0_25 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="44-44"];
m0_26 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _inner.Verify(x => x.Execute(_cts.Token), Times.AtLeast(5))", span="47-47"];
m0_27 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m0_45 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="32-32"];
m0_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m0_1 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _inner = new Mock<IServerComponent>()", span="15-15"];
m0_2 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _cts = new CancellationTokenSource()", span="16-16"];
m0_3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m0_71 [cluster="Unk.ToString", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.ToString", span=""];
m0_28 [cluster="Unk.Setup", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Setup", span=""];
m0_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m0_4 [cluster="Mock<IServerComponent>.cstr", file="InfiniteLoopComponentFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m0_59 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="61-61"];
m0_10 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="22-22"];
m0_11 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: new InfiniteLoopComponent(null)", span="22-22"];
m0_12 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="22-22"];
m0_34 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="37-37"];
m0_38 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="38-38"];
m0_43 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: component.Execute(_cts.Token)", span="44-44"];
m0_42 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="44-44"];
m0_44 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="44-44"];
m0_46 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="47-47"];
m0_35 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="37-37"];
m0_36 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="37-37"];
m0_39 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: Thread.Sleep(5)", span="38-38"];
m0_40 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="38-38"];
m0_47 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: x.Execute(_cts.Token)", span="47-47"];
m0_48 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="47-47"];
m0_57 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: component.Execute(_cts.Token)", span="58-58"];
m0_56 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="58-58"];
m0_58 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="58-58"];
m0_60 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="61-61"];
m0_61 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="61-61"];
m0_65 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m0_66 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: var component = CreateComponent()", span="73-73"];
m0_67 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: var result = component.ToString()", span="74-74"];
m0_68 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: Assert.Equal(_inner.Object.ToString(), result)", span="75-75"];
m0_69 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m0_49 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m0_50 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: var component = CreateComponent()", span="54-54"];
m0_51 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _cts.Cancel()", span="55-55"];
m0_52 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58"];
m0_53 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61"];
m0_54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m0_31 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
m0_32 [cluster="Unk.AtLeast", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.AtLeast", span=""];
m0_62 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m0_63 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="0: _cts.Cancel()", span="67-67"];
m0_64 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m0_37 [cluster="Unk.Execute", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Execute", span=""];
m0_70 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="41-41"];
m0_29 [cluster="Unk.Callback", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Callback", span=""];
m0_13 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24"];
m0_33 [cluster="Unk.Verify", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Verify", span=""];
m0_76 [file="InfiniteLoopComponentFacts.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m0_77 [file="InfiniteLoopComponentFacts.cs", label=component, span=""];
m0_78 [file="InfiniteLoopComponentFacts.cs", label=component, span=""];
m1_0 [cluster="HangFire.States.JobState.JobState(string, string)", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.JobState(string, string)", span="10-10"];
m1_1 [cluster="HangFire.States.JobState.JobState(string, string)", color=green, community=0, file="ServerComponentExtensions.cs", label="0: JobId = jobId", span="12-12"];
m1_2 [cluster="HangFire.States.JobState.JobState(string, string)", color=green, community=0, file="ServerComponentExtensions.cs", label="0: Reason = reason", span="13-13"];
m1_3 [cluster="HangFire.States.JobState.JobState(string, string)", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.JobState(string, string)", span="10-10"];
m1_39 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerComponentExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_47 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="77-77"];
m1_55 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', state.JobId)))", span="99-100"];
m1_48 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="var oldState = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId), ''State'')", span="82-83"];
m1_51 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="var transaction = redis.CreateTransaction()", span="90-90"];
m1_54 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="Descriptors[oldState].Unapply(transaction, state.JobId)", span="96-96"];
m1_53 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="Descriptors.ContainsKey(oldState)", span="94-94"];
m1_56 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label=filters, span="102-102"];
m1_49 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="allowedStates.Length > 0 && !allowedStates.Contains(oldState)", span="85-85"];
m1_58 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="AppendHistory(transaction, state, true)", span="108-108"];
m1_59 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="state.Apply(transaction)", span="110-110"];
m1_60 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label=filters, span="112-112"];
m1_61 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="filter.OnStateApplied(transaction, state)", span="114-114"];
m1_52 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="!String.IsNullOrEmpty(oldState)", span="92-92"];
m1_57 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="filter.OnStateUnapplied(transaction, oldState)", span="104-104"];
m1_62 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="return transaction.Commit();", span="117-117"];
m1_50 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="return false;", span="87-87"];
m1_63 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.ApplyState(IRedisClient, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="77-77"];
m1_107 [cluster="Unk.EnqueueItemOnList", file="ServerComponentExtensions.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m1_99 [cluster="Unk.SetRangeInHash", file="ServerComponentExtensions.cs", label="Entry Unk.SetRangeInHash", span=""];
m1_43 [cluster="System.TimeSpan.FromMinutes(double)", file="ServerComponentExtensions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m1_73 [cluster="Unk.Apply", file="ServerComponentExtensions.cs", label="Entry Unk.Apply", span=""];
m1_42 [cluster="string.Format(string, object)", file="ServerComponentExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_106 [cluster="HangFire.JobHelper.ToJson(object)", file="ServerComponentExtensions.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m1_95 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerComponentExtensions.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m1_79 [cluster="Unk.RemoveEntry", file="ServerComponentExtensions.cs", label="Entry Unk.RemoveEntry", span=""];
m1_71 [cluster="Unk.OnStateUnapplied", file="ServerComponentExtensions.cs", label="Entry Unk.OnStateUnapplied", span=""];
m1_18 [cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="ServerComponentExtensions.cs", label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37"];
m1_19 [cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="ServerComponentExtensions.cs", label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="39-39"];
m1_74 [cluster="Unk.OnStateApplied", file="ServerComponentExtensions.cs", label="Entry Unk.OnStateApplied", span=""];
m1_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerComponentExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_16 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="ServerComponentExtensions.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41"];
m1_17 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="41-41"];
m1_21 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", color=green, community=0, file="ServerComponentExtensions.cs", label="0: Descriptors.Add(stateName, descriptor)", span="44-44"];
m1_22 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="41-41"];
m1_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ServerComponentExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_69 [cluster="Unk.Unapply", file="ServerComponentExtensions.cs", label="Entry Unk.Unapply", span=""];
m1_40 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ServerComponentExtensions.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_103 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Entry lambda expression", span="156-158"];
m1_97 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        })", span="141-146"];
m1_77 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', state.JobId))", span="99-100"];
m1_101 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties)", span="148-150"];
m1_104 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties))", span="156-158"];
m1_76 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Entry lambda expression", span="99-100"];
m1_96 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Entry lambda expression", span="141-146"];
m1_98 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Exit lambda expression", span="141-146"];
m1_78 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Exit lambda expression", span="99-100"];
m1_100 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Entry lambda expression", span="148-150"];
m1_102 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Exit lambda expression", span="148-150"];
m1_105 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Exit lambda expression", span="156-158"];
m1_10 [cluster="HangFire.States.JobState.JobState()", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.JobState()", span="33-33"];
m1_11 [cluster="HangFire.States.JobState.JobState()", color=green, community=0, file="ServerComponentExtensions.cs", label="0: RegisterDescriptor(FailedState.Name, new FailedState.Descriptor())", span="35-35"];
m1_12 [cluster="HangFire.States.JobState.JobState()", color=green, community=0, file="ServerComponentExtensions.cs", label="0: RegisterDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="36-36"];
m1_13 [cluster="HangFire.States.JobState.JobState()", color=green, community=0, file="ServerComponentExtensions.cs", label="0: RegisterDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="37-37"];
m1_14 [cluster="HangFire.States.JobState.JobState()", color=green, community=0, file="ServerComponentExtensions.cs", label="0: RegisterDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="38-38"];
m1_15 [cluster="HangFire.States.JobState.JobState()", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.JobState()", span="33-33"];
m1_65 [cluster="Unk.Contains", file="ServerComponentExtensions.cs", label="Entry Unk.Contains", span=""];
m1_24 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m1_25 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: redis == null", span="50-50"];
m1_26 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: throw new ArgumentNullException(''redis'');", span="50-50"];
m1_27 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: state == null", span="51-51"];
m1_28 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: throw new ArgumentNullException(''state'');", span="51-51"];
m1_29 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="53-54"];
m1_30 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', state.JobId), TimeSpan.FromMinutes(1))", span="56-57"];
m1_31 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: changingFilters", span="59-59"];
m1_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: var oldState = state", span="61-61"];
m1_33 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: state = filter.OnStateChanged(redis, oldState)", span="62-62"];
m1_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: oldState != state", span="64-64"];
m1_35 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: AppendHistory(redis, oldState, false)", span="66-66"];
m1_37 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: return ApplyState(redis, state, appliedFilters, allowedStates);", span="73-73"];
m1_36 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="ServerComponentExtensions.cs", label="0: var appliedFilters = GlobalJobFilters.Filters\r\n                    .OfType<IStateAppliedFilter>().ToList()", span="70-71"];
m1_38 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m1_46 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m1_82 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="transaction.Commit()", span="127-127"];
m1_80 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="var transaction = redis.CreateTransaction()", span="124-124"];
m1_81 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="AppendHistory(transaction, state, appendToJob)", span="126-126"];
m1_83 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m1_75 [cluster="Unk.Commit", file="ServerComponentExtensions.cs", label="Entry Unk.Commit", span=""];
m1_64 [cluster="Unk.GetValueFromHash", file="ServerComponentExtensions.cs", label="Entry Unk.GetValueFromHash", span=""];
m1_45 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="ServerComponentExtensions.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m1_67 [cluster="Unk.IsNullOrEmpty", file="ServerComponentExtensions.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m1_20 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="ServerComponentExtensions.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49"];
m1_70 [cluster="Unk.QueueCommand", file="ServerComponentExtensions.cs", label="Entry Unk.QueueCommand", span=""];
m1_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ServerComponentExtensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_72 [cluster="Unk.AppendHistory", file="ServerComponentExtensions.cs", label="Entry Unk.AppendHistory", span=""];
m1_84 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m1_85 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="var properties = state.GetProperties()", span="134-134"];
m1_87 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="properties.Add(''State'', state.StateName)", span="137-137"];
m1_91 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="properties.Add(''Reason'', state.Reason)", span="153-153"];
m1_92 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="154-154"];
m1_86 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="var now = DateTime.UtcNow", span="135-135"];
m1_90 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties))", span="148-150"];
m1_93 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties)))", span="156-158"];
m1_88 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label=appendToJob, span="139-139"];
m1_89 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        }))", span="141-146"];
m1_94 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m1_44 [cluster="Unk.AcquireLock", file="ServerComponentExtensions.cs", label="Entry Unk.AcquireLock", span=""];
m1_66 [cluster="Unk.CreateTransaction", file="ServerComponentExtensions.cs", label="Entry Unk.CreateTransaction", span=""];
m1_68 [cluster="Unk.ContainsKey", file="ServerComponentExtensions.cs", label="Entry Unk.ContainsKey", span=""];
m1_6 [cluster="HangFire.States.JobState.GetProperties()", file="ServerComponentExtensions.cs", label="Entry HangFire.States.JobState.GetProperties()", span="24-24"];
m1_7 [cluster="HangFire.States.JobState.GetProperties()", color=green, community=0, file="ServerComponentExtensions.cs", label="0: return new Dictionary<string, string>();", span="26-26"];
m1_8 [cluster="HangFire.States.JobState.GetProperties()", file="ServerComponentExtensions.cs", label="Exit HangFire.States.JobState.GetProperties()", span="24-24"];
m1_108 [file="ServerComponentExtensions.cs", label="HangFire.States.JobState", span=""];
m1_110 [file="ServerComponentExtensions.cs", label="HangFire.States.JobState", span=""];
m1_109 [file="ServerComponentExtensions.cs", label="HangFire.States.JobState", span=""];
m1_111 [file="ServerComponentExtensions.cs", label=properties, span=""];
m3_36 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="Worker.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m3_113 [cluster="System.Collections.Generic.List<T>.List()", file="Worker.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_291 [cluster="Unk.TryParse", file="Worker.cs", label="Entry Unk.TryParse", span=""];
m3_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Worker.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m3_133 [cluster="int.Parse(string)", file="Worker.cs", label="Entry int.Parse(string)", span="0-0"];
m3_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m3_44 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label=Redis, span="82-82"];
m3_45 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87"];
m3_46 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="scheduledJobs.Count == 0", span="89-89"];
m3_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label=scheduledJobs, span="99-99"];
m3_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129"];
m3_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="return new Dictionary<string, ScheduleDto>();", span="91-91"];
m3_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="var jobs = new Dictionary<string, List<string>>()", span="94-94"];
m3_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="var states = new Dictionary<string, string>()", span="95-95"];
m3_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107"];
m3_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="var pipeline = Redis.CreatePipeline()", span="97-97"];
m3_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113"];
m3_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="pipeline.Flush()", span="116-116"];
m3_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="var job = scheduledJob", span="101-101"];
m3_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m3_38 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="Worker.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65"];
m3_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="Worker.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m3_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="Worker.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m3_29 [cluster="Unk.GetJobsWithProperties", file="Worker.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m3_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Worker.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m3_359 [cluster="KeyValuePair<string, T>.cstr", file="Worker.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m3_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="Worker.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m3_60 [cluster="Unk.CreatePipeline", file="Worker.cs", label="Entry Unk.CreatePipeline", span=""];
m3_76 [cluster="Unk.GetValueFromHash", file="Worker.cs", label="Entry Unk.GetValueFromHash", span=""];
m3_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m3_24 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Worker.cs", label=Redis, span="55-55"];
m3_25 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Worker.cs", label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60"];
m3_26 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Worker.cs", label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76"];
m3_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m3_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="Worker.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m3_257 [cluster="Unk.ContainsKey", file="Worker.cs", label="Entry Unk.ContainsKey", span=""];
m3_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="Worker.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m3_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m3_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="jobIds.Count == 0", span="507-507"];
m3_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509"];
m3_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510"];
m3_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="var pipeline = redis.CreatePipeline()", span="512-512"];
m3_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label=jobIds, span="514-514"];
m3_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520"];
m3_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="stateProperties != null", span="522-522"];
m3_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526"];
m3_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543"];
m3_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="return new List<KeyValuePair<string, T>>();", span="507-507"];
m3_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="pipeline.Flush()", span="530-530"];
m3_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="var id = jobId", span="516-516"];
m3_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m3_361 [cluster="Unk.selector", file="Worker.cs", label="Entry Unk.selector", span=""];
m3_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_11 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m3_12 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="Worker.cs", label=Redis, span="30-30"];
m3_13 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="Worker.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32"];
m3_14 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m3_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m3_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var endDate = DateTime.UtcNow", span="442-442"];
m3_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450"];
m3_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="451-451"];
m3_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var dates = new List<DateTime>()", span="443-443"];
m3_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="dates.Add(endDate)", span="446-446"];
m3_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="endDate = endDate.AddHours(-1)", span="447-447"];
m3_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var i = 0", span="444-444"];
m3_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="i < dates.Count", span="454-454"];
m3_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="result.Add(dates[i], value)", span="462-462"];
m3_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="i < 24", span="444-444"];
m3_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="i++", span="444-444"];
m3_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var result = new Dictionary<DateTime, long>()", span="453-453"];
m3_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457"];
m3_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="var i = 0", span="454-454"];
m3_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="return result;", span="465-465"];
m3_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="i++", span="454-454"];
m3_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="long value", span="456-456"];
m3_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="value = 0", span="459-459"];
m3_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m3_232 [cluster="Unk.TryToGetQueue", file="Worker.cs", label="Entry Unk.TryToGetQueue", span=""];
m3_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="Worker.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m3_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="Worker.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m3_258 [cluster="Unk.Where", file="Worker.cs", label="Entry Unk.Where", span=""];
m3_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m3_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label=Redis, span="395-395"];
m3_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397"];
m3_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="405-408"];
m3_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398"];
m3_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="String.IsNullOrEmpty(queue)", span="400-400"];
m3_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="return false;", span="402-402"];
m3_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m3_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="Worker.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m3_317 [cluster="System.DateTime.AddDays(double)", file="Worker.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m3_360 [cluster="Unk.TrueForAll", file="Worker.cs", label="Entry Unk.TrueForAll", span=""];
m3_429 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="593-593"];
m3_32 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="66-76"];
m3_40 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="76-76"];
m3_33 [cluster="lambda expression", file="Worker.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76"];
m3_34 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="66-76"];
m3_41 [cluster="lambda expression", file="Worker.cs", label="x.Value.StartedAt", span="76-76"];
m3_42 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="76-76"];
m3_70 [cluster="lambda expression", file="Worker.cs", label="jobs.Add(job.Key, x)", span="107-107"];
m3_84 [cluster="lambda expression", file="Worker.cs", label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129"];
m3_78 [cluster="lambda expression", file="Worker.cs", label="states.Add(job.Key, x)", span="113-113"];
m3_65 [cluster="lambda expression", file="Worker.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106"];
m3_74 [cluster="lambda expression", file="Worker.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112"];
m3_64 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="104-106"];
m3_69 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="107-107"];
m3_73 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="110-112"];
m3_77 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="113-113"];
m3_80 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="120-120"];
m3_83 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="121-129"];
m3_66 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="104-106"];
m3_71 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="107-107"];
m3_75 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="110-112"];
m3_79 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="113-113"];
m3_81 [cluster="lambda expression", file="Worker.cs", label="job.Key", span="120-120"];
m3_82 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="120-120"];
m3_85 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="121-129"];
m3_120 [cluster="lambda expression", file="Worker.cs", label="servers.Add(name, x)", span="173-173"];
m3_130 [cluster="lambda expression", file="Worker.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191"];
m3_127 [cluster="lambda expression", file="Worker.cs", label="queues.Add(name, x)", span="178-178"];
m3_117 [cluster="lambda expression", file="Worker.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172"];
m3_123 [cluster="lambda expression", file="Worker.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177"];
m3_116 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="170-172"];
m3_119 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="173-173"];
m3_122 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="176-177"];
m3_126 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="178-178"];
m3_129 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="184-191"];
m3_118 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="170-172"];
m3_121 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="173-173"];
m3_124 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="176-177"];
m3_128 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="178-178"];
m3_131 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="184-191"];
m3_141 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="209-219"];
m3_142 [cluster="lambda expression", file="Worker.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219"];
m3_143 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="209-219"];
m3_151 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="237-244"];
m3_152 [cluster="lambda expression", file="Worker.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244"];
m3_153 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="237-244"];
m3_177 [cluster="lambda expression", file="Worker.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265"];
m3_183 [cluster="lambda expression", file="Worker.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269"];
m3_189 [cluster="lambda expression", file="Worker.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273"];
m3_176 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="264-265"];
m3_179 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="266-266"];
m3_182 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="269-269"];
m3_185 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="270-270"];
m3_188 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="273-273"];
m3_191 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="274-274"];
m3_194 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="284-290"];
m3_178 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="264-265"];
m3_180 [cluster="lambda expression", file="Worker.cs", label="firstJobIds = x", span="266-266"];
m3_181 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="266-266"];
m3_184 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="269-269"];
m3_186 [cluster="lambda expression", file="Worker.cs", label="length = x", span="270-270"];
m3_187 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="270-270"];
m3_190 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="273-273"];
m3_192 [cluster="lambda expression", file="Worker.cs", label="dequeued = x", span="274-274"];
m3_193 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="274-274"];
m3_195 [cluster="lambda expression", file="Worker.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290"];
m3_196 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="284-290"];
m3_203 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="320-326"];
m3_204 [cluster="lambda expression", file="Worker.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326"];
m3_205 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="320-326"];
m3_211 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="344-352"];
m3_212 [cluster="lambda expression", file="Worker.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352"];
m3_213 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="344-352"];
m3_260 [cluster="lambda expression", file="Worker.cs", label="!hiddenProperties.Contains(x.Key)", span="433-433"];
m3_259 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="433-433"];
m3_263 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="433-433"];
m3_266 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="433-433"];
m3_261 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="433-433"];
m3_264 [cluster="lambda expression", file="Worker.cs", label="x.Key", span="433-433"];
m3_265 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="433-433"];
m3_267 [cluster="lambda expression", file="Worker.cs", label="x.Value", span="433-433"];
m3_268 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="433-433"];
m3_294 [cluster="lambda expression", file="Worker.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450"];
m3_293 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="450-450"];
m3_295 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="450-450"];
m3_322 [cluster="lambda expression", file="Worker.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482"];
m3_318 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="481-481"];
m3_321 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="482-482"];
m3_319 [cluster="lambda expression", file="Worker.cs", label="x.ToString(''yyyy-MM-dd'')", span="481-481"];
m3_320 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="481-481"];
m3_323 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="482-482"];
m3_339 [cluster="lambda expression", file="Worker.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519"];
m3_347 [cluster="lambda expression", file="Worker.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525"];
m3_357 [cluster="lambda expression", file="Worker.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542"];
m3_342 [cluster="lambda expression", file="Worker.cs", label="!jobs.ContainsKey(id)", span="520-520"];
m3_343 [cluster="lambda expression", file="Worker.cs", label="jobs.Add(id, x)", span="520-520"];
m3_354 [cluster="lambda expression", file="Worker.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539"];
m3_350 [cluster="lambda expression", file="Worker.cs", label="!states.ContainsKey(id)", span="526-526"];
m3_351 [cluster="lambda expression", file="Worker.cs", label="states.Add(id, x)", span="526-526"];
m3_338 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="519-519"];
m3_341 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="520-520"];
m3_346 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="525-525"];
m3_349 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="526-526"];
m3_353 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="534-539"];
m3_356 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="540-542"];
m3_340 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="519-519"];
m3_344 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="520-520"];
m3_348 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="525-525"];
m3_352 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="526-526"];
m3_355 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="534-539"];
m3_358 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="540-542"];
m3_362 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="542-542"];
m3_363 [cluster="lambda expression", file="Worker.cs", label="y == null", span="542-542"];
m3_364 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="542-542"];
m3_392 [cluster="lambda expression", file="Worker.cs", label="stats.Servers = x", span="566-566"];
m3_398 [cluster="lambda expression", file="Worker.cs", label="stats.Queues = x", span="570-570"];
m3_404 [cluster="lambda expression", file="Worker.cs", label="stats.Scheduled = x", span="574-574"];
m3_410 [cluster="lambda expression", file="Worker.cs", label="stats.Processing = x", span="578-578"];
m3_417 [cluster="lambda expression", file="Worker.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582"];
m3_424 [cluster="lambda expression", file="Worker.cs", label="stats.Failed = x", span="586-586"];
m3_430 [cluster="lambda expression", file="Worker.cs", label="stats.Enqueued += x", span="593-593"];
m3_387 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="565-565"];
m3_391 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="566-566"];
m3_394 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="569-569"];
m3_397 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="570-570"];
m3_400 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="573-573"];
m3_403 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="574-574"];
m3_406 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="577-577"];
m3_409 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="578-578"];
m3_412 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="581-581"];
m3_416 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="582-582"];
m3_420 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="585-585"];
m3_423 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="586-586"];
m3_427 [cluster="lambda expression", file="Worker.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592"];
m3_426 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="592-592"];
m3_388 [cluster="lambda expression", file="Worker.cs", label="x.GetSetCount(''hangfire:servers'')", span="565-565"];
m3_389 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="565-565"];
m3_393 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="566-566"];
m3_395 [cluster="lambda expression", file="Worker.cs", label="x.GetSetCount(''hangfire:queues'')", span="569-569"];
m3_396 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="569-569"];
m3_399 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="570-570"];
m3_401 [cluster="lambda expression", file="Worker.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573"];
m3_402 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="573-573"];
m3_405 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="574-574"];
m3_407 [cluster="lambda expression", file="Worker.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577"];
m3_408 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="577-577"];
m3_411 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="578-578"];
m3_413 [cluster="lambda expression", file="Worker.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581"];
m3_414 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="581-581"];
m3_418 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="582-582"];
m3_421 [cluster="lambda expression", file="Worker.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585"];
m3_422 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="585-585"];
m3_425 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="586-586"];
m3_428 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="592-592"];
m3_431 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="593-593"];
m3_28 [cluster="Unk.GetRangeFromSortedSet", file="Worker.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m3_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Worker.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_115 [cluster="Unk.ToList", file="Worker.cs", label="Entry Unk.ToList", span=""];
m3_67 [cluster="Unk.Format", file="Worker.cs", label="Entry Unk.Format", span=""];
m3_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m3_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Worker.cs", label=Redis, span="366-366"];
m3_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Worker.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368"];
m3_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m3_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="Worker.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m3_61 [cluster="Unk.QueueCommand", file="Worker.cs", label="Entry Unk.QueueCommand", span=""];
m3_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m3_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="Worker.cs", label=Redis, span="197-197"];
m3_137 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="Worker.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202"];
m3_138 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="Worker.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219"];
m3_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m3_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m3_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Worker.cs", label=Redis, span="14-14"];
m3_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Worker.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m3_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m3_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="Worker.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m3_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="Worker.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m3_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="Worker.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m3_296 [cluster="System.DateTime.ToString(string)", file="Worker.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m3_146 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Worker.cs", label=Redis, span="225-225"];
m3_147 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Worker.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230"];
m3_148 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Worker.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244"];
m3_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m3_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="Worker.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m3_290 [cluster="Unk.ElementAt", file="Worker.cs", label="Entry Unk.ElementAt", span=""];
m3_150 [cluster="Unk.GetRangeFromList", file="Worker.cs", label="Entry Unk.GetRangeFromList", span=""];
m3_155 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="248-248"];
m3_156 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label=Redis, span="250-250"];
m3_157 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252"];
m3_158 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253"];
m3_159 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label=queues, span="255-255"];
m3_169 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298"];
m3_170 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="return result;", span="301-301"];
m3_160 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="IList<string> firstJobIds = null", span="257-257"];
m3_164 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266"];
m3_165 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270"];
m3_166 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274"];
m3_161 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="long length = 0", span="258-258"];
m3_162 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="long dequeued = 0", span="259-259"];
m3_163 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="var pipeline = Redis.CreatePipeline()", span="261-261"];
m3_167 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="pipeline.Flush()", span="276-276"];
m3_168 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290"];
m3_171 [cluster="HangFire.Web.JobStorage.Queues()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="248-248"];
m3_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m3_89 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Worker.cs", label=Redis, span="135-135"];
m3_90 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Worker.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137"];
m3_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m3_62 [cluster="Unk.Flush", file="Worker.cs", label="Entry Unk.Flush", span=""];
m3_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="Worker.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m3_419 [cluster="Unk.Parse", file="Worker.cs", label="Entry Unk.Parse", span=""];
m3_72 [cluster="Unk.Add", file="Worker.cs", label="Entry Unk.Add", span=""];
m3_97 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m3_98 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label=Redis, span="151-151"];
m3_99 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m3_100 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="serverNames.Count == 0", span="155-155"];
m3_105 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label=serverNames, span="165-165"];
m3_110 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191"];
m3_101 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="return new List<ServerDto>();", span="157-157"];
m3_102 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="var servers = new Dictionary<string, List<string>>()", span="160-160"];
m3_103 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="var queues = new Dictionary<string, List<string>>()", span="161-161"];
m3_107 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173"];
m3_104 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="var pipeline = Redis.CreatePipeline()", span="163-163"];
m3_108 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178"];
m3_109 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="pipeline.Flush()", span="181-181"];
m3_106 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="var name = serverName", span="167-167"];
m3_111 [cluster="HangFire.Web.JobStorage.Servers()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m3_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m3_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label=Redis, span="556-556"];
m3_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="var stats = new StatisticsDto()", span="558-558"];
m3_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560"];
m3_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566"];
m3_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570"];
m3_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574"];
m3_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578"];
m3_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582"];
m3_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586"];
m3_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593"];
m3_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="return stats;", span="599-599"];
m3_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="var pipeline = Redis.CreatePipeline()", span="562-562"];
m3_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label=queues, span="588-588"];
m3_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="pipeline.Flush()", span="596-596"];
m3_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="var queueName = queue", span="590-590"];
m3_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m3_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m3_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Worker.cs", label=Redis, span="548-548"];
m3_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Worker.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550"];
m3_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m3_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m3_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Worker.cs", label=Redis, span="358-358"];
m3_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Worker.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360"];
m3_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m3_39 [cluster="string.Equals(string, System.StringComparison)", file="Worker.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m3_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Worker.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m3_288 [cluster="System.DateTime.AddHours(double)", file="Worker.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m3_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m3_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var endDate = DateTime.UtcNow.Date", span="471-471"];
m3_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482"];
m3_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="484-484"];
m3_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var startDate = endDate.AddDays(-7)", span="472-472"];
m3_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="startDate <= endDate", span="475-475"];
m3_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="dates.Add(endDate)", span="477-477"];
m3_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="endDate = endDate.AddDays(-1)", span="478-478"];
m3_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var dates = new List<DateTime>()", span="473-473"];
m3_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481"];
m3_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="result.Add(dates[i], value)", span="494-494"];
m3_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="i < stringDates.Count", span="487-487"];
m3_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var result = new Dictionary<DateTime, long>()", span="486-486"];
m3_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490"];
m3_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="var i = 0", span="487-487"];
m3_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="return result;", span="497-497"];
m3_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="i++", span="487-487"];
m3_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="long value", span="489-489"];
m3_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="value = 0", span="492-492"];
m3_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m3_4 [cluster="Unk.GetSortedSetCount", file="Worker.cs", label="Entry Unk.GetSortedSetCount", span=""];
m3_15 [cluster="HangFire.Web.JobStorage.FailedCount()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m3_16 [cluster="HangFire.Web.JobStorage.FailedCount()", file="Worker.cs", label=Redis, span="38-38"];
m3_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="Worker.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40"];
m3_18 [cluster="HangFire.Web.JobStorage.FailedCount()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m3_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="Worker.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m3_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m3_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label=Redis, span="414-414"];
m3_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416"];
m3_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422"];
m3_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="job.Count == 0", span="417-417"];
m3_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435"];
m3_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="return null;", span="417-417"];
m3_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419"];
m3_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426"];
m3_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m3_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m3_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Worker.cs", label=Redis, span="22-22"];
m3_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Worker.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m3_8 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m3_297 [cluster="string.Format(string, object, object)", file="Worker.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_254 [cluster="Unk.GetAllEntriesFromHash", file="Worker.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m3_63 [cluster="Unk.ToDictionary", file="Worker.cs", label="Entry Unk.ToDictionary", span=""];
m3_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m3_390 [cluster="Unk.GetSetCount", file="Worker.cs", label="Entry Unk.GetSetCount", span=""];
m3_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m3_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="Worker.cs", label=Redis, span="333-333"];
m3_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="Worker.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337"];
m3_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="Worker.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352"];
m3_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m3_9 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m3_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Worker.cs", label=Redis, span="143-143"];
m3_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Worker.cs", label="return GetTimelineStats(Redis, ''failed'');", span="145-145"];
m3_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m3_10 [cluster="Unk.GetListCount", file="Worker.cs", label="Entry Unk.GetListCount", span=""];
m3_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="Worker.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m3_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_233 [cluster="string.IsNullOrEmpty(string)", file="Worker.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_289 [cluster="Unk.GetValuesMap", file="Worker.cs", label="Entry Unk.GetValuesMap", span=""];
m3_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Worker.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m3_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Worker.cs", label=Redis, span="46-46"];
m3_21 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Worker.cs", label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48"];
m3_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="Worker.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m3_125 [cluster="Unk.GetAllItemsFromList", file="Worker.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m3_262 [cluster="Unk.Contains", file="Worker.cs", label="Entry Unk.Contains", span=""];
m3_114 [cluster="Unk.Select", file="Worker.cs", label="Entry Unk.Select", span=""];
m3_112 [cluster="Unk.GetAllItemsFromSet", file="Worker.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m3_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="Worker.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m3_415 [cluster="Unk.GetValue", file="Worker.cs", label="Entry Unk.GetValue", span=""];
m3_68 [cluster="Unk.GetValuesFromHash", file="Worker.cs", label="Entry Unk.GetValuesFromHash", span=""];
m3_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m3_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label=Redis, span="374-374"];
m3_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376"];
m3_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-389"];
m3_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378"];
m3_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="String.IsNullOrEmpty(queue)", span="379-379"];
m3_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="return false;", span="381-381"];
m3_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m3_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Worker.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m3_199 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Worker.cs", label=Redis, span="308-308"];
m3_200 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Worker.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313"];
m3_201 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Worker.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326"];
m3_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="Worker.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m3_432 [file="Worker.cs", label=job, span=""];
m3_433 [file="Worker.cs", label=jobs, span=""];
m3_434 [file="Worker.cs", label=states, span=""];
m3_435 [file="Worker.cs", label=name, span=""];
m3_436 [file="Worker.cs", label=servers, span=""];
m3_437 [file="Worker.cs", label=queues, span=""];
m3_438 [file="Worker.cs", label=queue, span=""];
m3_439 [file="Worker.cs", label=hiddenProperties, span=""];
m3_440 [file="Worker.cs", label=string, span=""];
m3_441 [file="Worker.cs", label=string, span=""];
m3_442 [file="Worker.cs", label="string[]", span=""];
m3_443 [file="Worker.cs", label=id, span=""];
m3_444 [file="Worker.cs", label=jobs, span=""];
m3_445 [file="Worker.cs", label="string[]", span=""];
m3_446 [file="Worker.cs", label=states, span=""];
m3_447 [file="Worker.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m3_448 [file="Worker.cs", label=stats, span=""];
m3_449 [file="Worker.cs", label=queueName, span=""];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d4  [color=green, key=2, style=dotted];
d76 -> d1  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d2  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d15  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d17  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d22  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d23  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d24  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d25  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d43  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d76 -> d73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d5  [color=green, key=2, style=dotted];
d3 -> d0  [color=blue, key=0, style=bold];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> d9  [color=green, key=2, style=dotted];
d7 -> d10  [color=green, key=1, label="lambda expression", style=dashed];
d6 -> d7  [color=green, key=0, style=solid];
d8 -> d6  [color=blue, key=0, style=bold];
d10 -> d11  [color=green, key=0, style=solid];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> d13  [color=green, key=2, style=dotted];
d12 -> d10  [color=blue, key=0, style=bold];
d15 -> d16  [color=green, key=0, style=solid];
d15 -> d19  [color=green, key=2, style=dotted];
d14 -> d15  [color=green, key=0, style=solid];
d16 -> d17  [color=green, key=0, style=solid];
d19 -> d73  [key=0, style=solid];
d17 -> d18  [color=green, key=0, style=solid];
d17 -> d20  [color=green, key=2, style=dotted];
d17 -> d45  [color=green, key=3, label="Field variable PooledRedisClientManager _connectionPool", style=bold];
d17 -> d13  [color=green, key=3, label="Property variable Hangfire.Server.IServerComponent InnerComponent", style=bold];
d18 -> d14  [color=blue, key=0, style=bold];
d22 -> d23  [color=green, key=0, style=solid];
d22 -> d28  [color=green, key=2, style=dotted];
d22 -> d29  [color=green, key=2, style=dotted];
d22 -> d34  [color=green, key=1, label="lambda expression", style=dashed];
d22 -> d38  [color=green, key=1, label="lambda expression", style=dashed];
d21 -> d22  [color=green, key=0, style=solid];
d23 -> d24  [color=green, key=0, style=solid];
d23 -> d19  [color=green, key=2, style=dotted];
d23 -> d25  [color=green, key=1, label=component, style=dashed];
d23 -> d43  [color=green, key=1, label=component, style=dashed];
d34 -> d35  [color=green, key=0, style=solid];
d38 -> d39  [color=green, key=0, style=solid];
d24 -> d25  [color=green, key=0, style=solid];
d24 -> d30  [color=green, key=2, style=dotted];
d24 -> d31  [color=green, key=2, style=dotted];
d25 -> d26  [color=green, key=0, style=solid];
d25 -> d9  [color=green, key=2, style=dotted];
d25 -> d42  [color=green, key=1, label="lambda expression", style=dashed];
d43 -> d44  [color=green, key=0, style=solid];
d43 -> d45  [color=green, key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d32  [key=2, style=dotted];
d26 -> d33  [key=2, style=dotted];
d26 -> d46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d42 -> d43  [color=green, key=0, style=solid];
d77 -> d43  [color=green, key=1, label=component, style=dashed];
d44 -> d42  [color=blue, key=0, style=bold];
d35 -> d36  [color=green, key=0, style=solid];
d35 -> d9  [color=green, key=2, style=dotted];
d35 -> d37  [color=green, key=2, style=dotted];
d36 -> d34  [color=blue, key=0, style=bold];
d39 -> d40  [color=green, key=0, style=solid];
d39 -> d41  [color=green, key=2, style=dotted];
d40 -> d38  [color=blue, key=0, style=bold];
d47 -> d37  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d50 -> d19  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d50 -> d52  [color=darkseagreen4, key=1, label=component, style=dashed];
d50 -> d57  [color=darkseagreen4, key=1, label=component, style=dashed];
d51 -> d52  [key=0, style=solid];
d51 -> d55  [key=2, style=dotted];
d52 -> d9  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d57 -> d45  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d53 -> d54  [key=0, style=solid];
d53 -> d33  [key=2, style=dotted];
d53 -> d59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d63 -> d64  [key=0, style=solid];
d63 -> d55  [key=2, style=dotted];
d66 -> d19  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d68 -> d69  [key=0, style=solid];
d68 -> d71  [key=2, style=dotted];
d68 -> d72  [key=2, style=dotted];
d73 -> d74  [key=0, style=solid];
d73 -> d75  [key=2, style=dotted];
d60 -> d9  [key=2, style=dotted];
d60 -> d37  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d74 -> d19  [color=blue, key=0, style=bold];
d27 -> d21  [color=blue, key=0, style=bold];
d46 -> d47  [key=0, style=solid];
d48 -> d46  [color=blue, key=0, style=bold];
d49 -> d50  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d78 -> d57  [color=darkseagreen4, key=1, label=component, style=dashed];
d58 -> d56  [color=blue, key=0, style=bold];
d54 -> d49  [color=blue, key=0, style=bold];
d59 -> d60  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d64 -> d62  [color=blue, key=0, style=bold];
d65 -> d66  [key=0, style=solid];
d67 -> d68  [key=0, style=solid];
d67 -> d70  [key=2, style=dotted];
d69 -> d65  [color=blue, key=0, style=bold];
d61 -> d59  [color=blue, key=0, style=bold];
m0_73 -> d74  [color=green, key=0, style=solid];
m0_73 -> m0_75  [color=green, key=2, style=dotted];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> d19  [color=green, key=2, style=dotted];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_17 -> m0_20  [color=green, key=2, style=dotted];
m0_18 -> m0_14  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_9  [color=green, key=2, style=dotted];
m0_7 -> m0_10  [color=green, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_28  [color=green, key=2, style=dotted];
m0_22 -> m0_29  [color=green, key=2, style=dotted];
m0_22 -> m0_34  [color=green, key=1, label="lambda expression", style=dashed];
m0_22 -> m0_38  [color=green, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> d19  [color=green, key=2, style=dotted];
m0_23 -> m0_25  [color=green, key=1, label=component, style=dashed];
m0_23 -> m0_43  [color=green, key=1, label=component, style=dashed];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_24 -> m0_30  [color=green, key=2, style=dotted];
m0_24 -> m0_31  [color=green, key=2, style=dotted];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_9  [color=green, key=2, style=dotted];
m0_25 -> m0_42  [color=green, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_32  [color=green, key=2, style=dotted];
m0_26 -> m0_33  [color=green, key=2, style=dotted];
m0_26 -> m0_46  [color=green, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_21  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [color=green, key=0, style=solid];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_13  [color=green, key=2, style=dotted];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_45  [color=green, key=2, style=dotted];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_9  [color=green, key=2, style=dotted];
m0_35 -> m0_37  [color=green, key=2, style=dotted];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [color=green, key=0, style=solid];
m0_39 -> m0_41  [color=green, key=2, style=dotted];
m0_40 -> m0_38  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [color=green, key=0, style=solid];
m0_47 -> m0_37  [color=green, key=2, style=dotted];
m0_48 -> m0_46  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [color=green, key=0, style=solid];
m0_57 -> m0_45  [color=green, key=2, style=dotted];
m0_56 -> m0_57  [color=green, key=0, style=solid];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_60 -> m0_61  [color=green, key=0, style=solid];
m0_60 -> m0_9  [color=green, key=2, style=dotted];
m0_60 -> m0_37  [color=green, key=2, style=dotted];
m0_61 -> m0_59  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [color=green, key=0, style=solid];
m0_66 -> m0_67  [color=green, key=0, style=solid];
m0_66 -> d19  [color=green, key=2, style=dotted];
m0_67 -> m0_68  [color=green, key=0, style=solid];
m0_67 -> m0_70  [color=green, key=2, style=dotted];
m0_68 -> m0_69  [color=green, key=0, style=solid];
m0_68 -> m0_71  [color=green, key=2, style=dotted];
m0_68 -> m0_72  [color=green, key=2, style=dotted];
m0_69 -> m0_65  [color=blue, key=0, style=bold];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_50 -> m0_51  [color=green, key=0, style=solid];
m0_50 -> d19  [color=green, key=2, style=dotted];
m0_50 -> m0_52  [color=green, key=1, label=component, style=dashed];
m0_50 -> m0_57  [color=green, key=1, label=component, style=dashed];
m0_51 -> m0_52  [color=green, key=0, style=solid];
m0_51 -> m0_55  [color=green, key=2, style=dotted];
m0_52 -> m0_53  [color=green, key=0, style=solid];
m0_52 -> m0_9  [color=green, key=2, style=dotted];
m0_52 -> m0_56  [color=green, key=1, label="lambda expression", style=dashed];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_53 -> m0_33  [color=green, key=2, style=dotted];
m0_53 -> m0_59  [color=green, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_49  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_63 -> m0_64  [color=green, key=0, style=solid];
m0_63 -> m0_55  [color=green, key=2, style=dotted];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_76 -> m0_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_15  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_17  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_22  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_23  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_24  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_25  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_43  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_47  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_50  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_51  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_52  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_57  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_53  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_63  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_66  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_68  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_76 -> m0_73  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m0_77 -> m0_43  [color=green, key=1, label=component, style=dashed];
m0_78 -> m0_57  [color=green, key=1, label=component, style=dashed];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_0 -> m1_2  [color=green, key=1, label=string, style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_3 -> m1_0  [color=blue, key=0, style=bold];
m1_47 -> m1_55  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m1_47 -> m1_51  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m1_47 -> m1_54  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_47 -> m1_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_47 -> m1_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m1_47 -> m1_58  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_47 -> m1_59  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_47 -> m1_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m1_47 -> m1_61  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_70  [key=2, style=dotted];
m1_55 -> m1_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_48 -> m1_42  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_64  [key=2, style=dotted];
m1_48 -> m1_52  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m1_48 -> m1_53  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m1_48 -> m1_54  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m1_48 -> m1_57  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m1_51 -> m1_55  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=2, style=dotted];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_51 -> m1_57  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_51 -> m1_58  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_51 -> m1_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_51 -> m1_61  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_51 -> m1_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_69  [key=2, style=dotted];
m1_53 -> m1_55  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_68  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=0, style=solid];
m1_49 -> m1_51  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_65  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_72  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_73  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_61 -> m1_60  [key=0, style=solid];
m1_61 -> m1_74  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_58  [key=0, style=solid];
m1_52 -> m1_67  [key=2, style=dotted];
m1_57 -> m1_56  [key=0, style=solid];
m1_57 -> m1_71  [key=2, style=dotted];
m1_62 -> m1_75  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_50 -> m1_63  [key=0, style=solid];
m1_63 -> m1_47  [color=blue, key=0, style=bold];
m1_17 -> m1_21  [color=green, key=0, style=solid];
m1_21 -> m1_22  [color=green, key=0, style=solid];
m1_21 -> m1_23  [color=green, key=2, style=dotted];
m1_22 -> m1_17  [color=blue, key=0, style=bold];
m1_103 -> m1_104  [key=0, style=solid];
m1_97 -> m1_9  [key=2, style=dotted];
m1_97 -> m1_42  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=2, style=dotted];
m1_77 -> m1_42  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=2, style=dotted];
m1_101 -> m1_42  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_99  [key=2, style=dotted];
m1_104 -> m1_42  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=2, style=dotted];
m1_104 -> m1_107  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_98 -> m1_96  [color=blue, key=0, style=bold];
m1_78 -> m1_76  [color=blue, key=0, style=bold];
m1_100 -> m1_101  [key=0, style=solid];
m1_102 -> m1_100  [color=blue, key=0, style=bold];
m1_105 -> m1_103  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_11 -> m1_16  [color=green, key=2, style=dotted];
m1_11 -> m1_17  [color=green, key=2, style=dotted];
m1_12 -> m1_13  [color=green, key=0, style=solid];
m1_12 -> m1_18  [color=green, key=2, style=dotted];
m1_12 -> m1_17  [color=green, key=2, style=dotted];
m1_13 -> m1_14  [color=green, key=0, style=solid];
m1_13 -> m1_19  [color=green, key=2, style=dotted];
m1_13 -> m1_17  [color=green, key=2, style=dotted];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_14 -> m1_20  [color=green, key=2, style=dotted];
m1_14 -> m1_17  [color=green, key=2, style=dotted];
m1_15 -> m1_10  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [color=green, key=0, style=solid];
m1_24 -> m1_27  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m1_24 -> m1_30  [color=green, key=1, label=IRedisClient, style=dashed];
m1_24 -> m1_32  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m1_24 -> m1_33  [color=green, key=1, label=IRedisClient, style=dashed];
m1_24 -> m1_35  [color=green, key=1, label=IRedisClient, style=dashed];
m1_24 -> m1_37  [color=green, key=1, label=IRedisClient, style=dashed];
m1_25 -> m1_26  [color=green, key=0, style=solid];
m1_25 -> m1_27  [color=green, key=0, style=solid];
m1_26 -> m1_38  [color=green, key=0, style=solid];
m1_26 -> m1_39  [color=green, key=2, style=dotted];
m1_27 -> m1_28  [color=green, key=0, style=solid];
m1_27 -> m1_29  [color=green, key=0, style=solid];
m1_28 -> m1_38  [color=green, key=0, style=solid];
m1_28 -> m1_39  [color=green, key=2, style=dotted];
m1_29 -> m1_30  [color=green, key=0, style=solid];
m1_29 -> m1_40  [color=green, key=2, style=dotted];
m1_29 -> m1_41  [color=green, key=2, style=dotted];
m1_29 -> m1_31  [color=green, key=1, label=changingFilters, style=dashed];
m1_30 -> m1_31  [color=green, key=0, style=solid];
m1_30 -> m1_42  [color=green, key=2, style=dotted];
m1_30 -> m1_43  [color=green, key=2, style=dotted];
m1_30 -> m1_44  [color=green, key=2, style=dotted];
m1_31 -> m1_32  [color=green, key=0, style=solid];
m1_31 -> m1_33  [color=green, key=1, label=filter, style=dashed];
m1_31 -> m1_36  [color=green, key=0, style=solid];
m1_32 -> m1_33  [color=green, key=0, style=solid];
m1_32 -> m1_34  [color=green, key=1, label=oldState, style=dashed];
m1_32 -> m1_35  [color=green, key=1, label=oldState, style=dashed];
m1_33 -> m1_34  [color=green, key=0, style=solid];
m1_33 -> m1_45  [color=green, key=2, style=dotted];
m1_33 -> m1_37  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m1_33 -> m1_55  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_33 -> m1_82  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_34 -> m1_35  [color=green, key=0, style=solid];
m1_34 -> m1_31  [color=green, key=0, style=solid];
m1_35 -> m1_31  [color=green, key=0, style=solid];
m1_35 -> m1_46  [color=green, key=2, style=dotted];
m1_37 -> m1_38  [color=green, key=0, style=solid];
m1_37 -> m1_47  [color=green, key=2, style=dotted];
m1_36 -> m1_37  [color=green, key=0, style=solid];
m1_36 -> m1_40  [color=green, key=2, style=dotted];
m1_36 -> m1_41  [color=green, key=2, style=dotted];
m1_38 -> m1_24  [color=blue, key=0, style=bold];
m1_46 -> m1_80  [key=0, style=solid];
m1_46 -> m1_81  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_75  [key=2, style=dotted];
m1_80 -> m1_82  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_66  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_72  [key=2, style=dotted];
m1_83 -> m1_46  [color=blue, key=0, style=bold];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_84 -> m1_87  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_84 -> m1_91  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_84 -> m1_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_84 -> m1_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_84 -> m1_88  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_84 -> m1_89  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m1_84 -> m1_90  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m1_84 -> m1_93  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m1_85 -> m1_6  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_85 -> m1_90  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_85 -> m1_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_85 -> m1_91  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_85 -> m1_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_85 -> m1_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_85 -> m1_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_87 -> m1_23  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_91 -> m1_23  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_92 -> m1_23  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_95  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_92  [color=darkseagreen4, key=1, label=now, style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_70  [key=2, style=dotted];
m1_90 -> m1_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_93 -> m1_70  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_88 -> m1_91  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_89 -> m1_70  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_94 -> m1_84  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_9  [color=green, key=2, style=dotted];
m1_8 -> m1_6  [color=blue, key=0, style=bold];
m1_108 -> m1_1  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m1_108 -> m1_2  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m1_110 -> m1_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_110 -> m1_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_110 -> m1_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_109 -> m1_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_111 -> m1_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m1_111 -> m1_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_58  [key=2, style=dotted];
m3_45 -> m3_51  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m3_45 -> m3_56  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_55  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_63  [key=2, style=dotted];
m3_56 -> m3_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_56 -> m3_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_47 -> m3_57  [key=0, style=solid];
m3_47 -> m3_59  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_59  [key=2, style=dotted];
m3_48 -> m3_53  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_48 -> m3_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_48 -> m3_56  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_48 -> m3_84  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_59  [key=2, style=dotted];
m3_49 -> m3_54  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_49 -> m3_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_49 -> m3_56  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_49 -> m3_84  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_61  [key=2, style=dotted];
m3_53 -> m3_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_53 -> m3_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_60  [key=2, style=dotted];
m3_50 -> m3_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_50 -> m3_54  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_50 -> m3_55  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_54 -> m3_51  [key=0, style=solid];
m3_54 -> m3_61  [key=2, style=dotted];
m3_54 -> m3_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_54 -> m3_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_62  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_52 -> m3_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_52 -> m3_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_52 -> m3_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_57 -> m3_43  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_28  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=2, style=dotted];
m3_26 -> m3_30  [key=2, style=dotted];
m3_26 -> m3_31  [key=2, style=dotted];
m3_26 -> m3_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_26 -> m3_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_27 -> m3_23  [color=blue, key=0, style=bold];
m3_173 -> m3_324  [key=0, style=solid];
m3_173 -> m3_326  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m3_173 -> m3_327  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m3_173 -> m3_328  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m3_173 -> m3_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m3_173 -> m3_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_173 -> m3_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_173 -> m3_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_173 -> m3_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_173 -> m3_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_173 -> m3_335  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m3_173 -> m3_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m3_324 -> m3_325  [key=0, style=solid];
m3_324 -> m3_326  [key=0, style=solid];
m3_326 -> m3_327  [key=0, style=solid];
m3_326 -> m3_337  [key=2, style=dotted];
m3_326 -> m3_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_326 -> m3_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_326 -> m3_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_326 -> m3_335  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_326 -> m3_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_327 -> m3_328  [key=0, style=solid];
m3_327 -> m3_337  [key=2, style=dotted];
m3_327 -> m3_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_327 -> m3_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_327 -> m3_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_327 -> m3_335  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_327 -> m3_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_60  [key=2, style=dotted];
m3_328 -> m3_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_328 -> m3_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_328 -> m3_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_329 -> m3_330  [key=0, style=solid];
m3_329 -> m3_334  [key=0, style=solid];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_61  [key=2, style=dotted];
m3_331 -> m3_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_331 -> m3_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_329  [key=0, style=solid];
m3_333 -> m3_329  [key=0, style=solid];
m3_333 -> m3_61  [key=2, style=dotted];
m3_333 -> m3_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_333 -> m3_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_335 -> m3_336  [key=0, style=solid];
m3_335 -> m3_114  [key=2, style=dotted];
m3_335 -> m3_115  [key=2, style=dotted];
m3_335 -> m3_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_335 -> m3_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_325 -> m3_336  [key=0, style=solid];
m3_325 -> m3_113  [key=2, style=dotted];
m3_334 -> m3_335  [key=0, style=solid];
m3_334 -> m3_62  [key=2, style=dotted];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_330 -> m3_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_330 -> m3_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_330 -> m3_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_330 -> m3_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_330 -> m3_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_330 -> m3_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_336 -> m3_173  [color=blue, key=0, style=bold];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_9  [key=2, style=dotted];
m3_13 -> m3_10  [key=2, style=dotted];
m3_14 -> m3_11  [color=blue, key=0, style=bold];
m3_219 -> m3_269  [key=0, style=solid];
m3_219 -> m3_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_219 -> m3_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_219 -> m3_277  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_269 -> m3_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_114  [key=2, style=dotted];
m3_276 -> m3_115  [key=2, style=dotted];
m3_276 -> m3_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_289  [key=2, style=dotted];
m3_277 -> m3_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_113  [key=2, style=dotted];
m3_270 -> m3_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_270 -> m3_276  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_270 -> m3_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_270 -> m3_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_175  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_288  [key=2, style=dotted];
m3_274 -> m3_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_280 -> m3_281  [key=0, style=solid];
m3_280 -> m3_286  [key=0, style=solid];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_292  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_276  [key=0, style=solid];
m3_275 -> m3_272  [key=0, style=solid];
m3_275 -> m3_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_59  [key=2, style=dotted];
m3_278 -> m3_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_278 -> m3_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_282 -> m3_283  [key=0, style=solid];
m3_282 -> m3_284  [key=0, style=solid];
m3_282 -> m3_290  [key=2, style=dotted];
m3_282 -> m3_291  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_279 -> m3_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_279 -> m3_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_286 -> m3_287  [key=0, style=solid];
m3_285 -> m3_280  [key=0, style=solid];
m3_285 -> m3_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_281 -> m3_282  [key=0, style=solid];
m3_283 -> m3_284  [key=0, style=solid];
m3_287 -> m3_219  [color=blue, key=0, style=bold];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_236 -> m3_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_237 -> m3_238  [key=0, style=solid];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_9  [key=2, style=dotted];
m3_238 -> m3_76  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_234  [key=2, style=dotted];
m3_242 -> m3_235  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_232  [key=2, style=dotted];
m3_239 -> m3_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_242  [key=0, style=solid];
m3_240 -> m3_233  [key=2, style=dotted];
m3_241 -> m3_243  [key=0, style=solid];
m3_243 -> m3_236  [color=blue, key=0, style=bold];
m3_429 -> m3_430  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=2, style=dotted];
m3_33 -> m3_36  [key=2, style=dotted];
m3_33 -> m3_37  [key=2, style=dotted];
m3_33 -> m3_38  [key=2, style=dotted];
m3_33 -> m3_39  [key=2, style=dotted];
m3_34 -> m3_32  [color=blue, key=0, style=bold];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m3_42 -> m3_40  [color=blue, key=0, style=bold];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_72  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_86  [key=2, style=dotted];
m3_84 -> m3_87  [key=2, style=dotted];
m3_84 -> m3_36  [key=2, style=dotted];
m3_84 -> m3_37  [key=2, style=dotted];
m3_84 -> m3_39  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_72  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_67  [key=2, style=dotted];
m3_65 -> m3_68  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_67  [key=2, style=dotted];
m3_74 -> m3_76  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_66 -> m3_64  [color=blue, key=0, style=bold];
m3_71 -> m3_69  [color=blue, key=0, style=bold];
m3_75 -> m3_73  [color=blue, key=0, style=bold];
m3_79 -> m3_77  [color=blue, key=0, style=bold];
m3_81 -> m3_82  [key=0, style=solid];
m3_82 -> m3_80  [color=blue, key=0, style=bold];
m3_85 -> m3_83  [color=blue, key=0, style=bold];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_72  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_132  [key=2, style=dotted];
m3_130 -> m3_133  [key=2, style=dotted];
m3_130 -> m3_134  [key=2, style=dotted];
m3_130 -> m3_38  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_72  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_67  [key=2, style=dotted];
m3_117 -> m3_68  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_67  [key=2, style=dotted];
m3_123 -> m3_125  [key=2, style=dotted];
m3_116 -> m3_117  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_126 -> m3_127  [key=0, style=solid];
m3_129 -> m3_130  [key=0, style=solid];
m3_118 -> m3_116  [color=blue, key=0, style=bold];
m3_121 -> m3_119  [color=blue, key=0, style=bold];
m3_124 -> m3_122  [color=blue, key=0, style=bold];
m3_128 -> m3_126  [color=blue, key=0, style=bold];
m3_131 -> m3_129  [color=blue, key=0, style=bold];
m3_141 -> m3_142  [key=0, style=solid];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_144  [key=2, style=dotted];
m3_142 -> m3_37  [key=2, style=dotted];
m3_142 -> m3_36  [key=2, style=dotted];
m3_142 -> m3_38  [key=2, style=dotted];
m3_142 -> m3_39  [key=2, style=dotted];
m3_143 -> m3_141  [color=blue, key=0, style=bold];
m3_151 -> m3_152  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_154  [key=2, style=dotted];
m3_152 -> m3_37  [key=2, style=dotted];
m3_152 -> m3_36  [key=2, style=dotted];
m3_152 -> m3_38  [key=2, style=dotted];
m3_152 -> m3_39  [key=2, style=dotted];
m3_153 -> m3_151  [color=blue, key=0, style=bold];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_67  [key=2, style=dotted];
m3_177 -> m3_150  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_67  [key=2, style=dotted];
m3_183 -> m3_10  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_67  [key=2, style=dotted];
m3_189 -> m3_10  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_185 -> m3_186  [key=0, style=solid];
m3_188 -> m3_189  [key=0, style=solid];
m3_191 -> m3_192  [key=0, style=solid];
m3_194 -> m3_195  [key=0, style=solid];
m3_178 -> m3_176  [color=blue, key=0, style=bold];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_179  [color=blue, key=0, style=bold];
m3_184 -> m3_182  [color=blue, key=0, style=bold];
m3_186 -> m3_187  [key=0, style=solid];
m3_187 -> m3_185  [color=blue, key=0, style=bold];
m3_190 -> m3_188  [color=blue, key=0, style=bold];
m3_192 -> m3_193  [key=0, style=solid];
m3_193 -> m3_191  [color=blue, key=0, style=bold];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_197  [key=2, style=dotted];
m3_195 -> m3_36  [key=2, style=dotted];
m3_195 -> m3_38  [key=2, style=dotted];
m3_195 -> m3_39  [key=2, style=dotted];
m3_196 -> m3_194  [color=blue, key=0, style=bold];
m3_203 -> m3_204  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_197  [key=2, style=dotted];
m3_204 -> m3_36  [key=2, style=dotted];
m3_204 -> m3_38  [key=2, style=dotted];
m3_204 -> m3_39  [key=2, style=dotted];
m3_205 -> m3_203  [color=blue, key=0, style=bold];
m3_211 -> m3_212  [key=0, style=solid];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_214  [key=2, style=dotted];
m3_212 -> m3_36  [key=2, style=dotted];
m3_212 -> m3_38  [key=2, style=dotted];
m3_213 -> m3_211  [color=blue, key=0, style=bold];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_262  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_263 -> m3_264  [key=0, style=solid];
m3_266 -> m3_267  [key=0, style=solid];
m3_261 -> m3_259  [color=blue, key=0, style=bold];
m3_264 -> m3_265  [key=0, style=solid];
m3_265 -> m3_263  [color=blue, key=0, style=bold];
m3_267 -> m3_268  [key=0, style=solid];
m3_268 -> m3_266  [color=blue, key=0, style=bold];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_296  [key=2, style=dotted];
m3_294 -> m3_297  [key=2, style=dotted];
m3_293 -> m3_294  [key=0, style=solid];
m3_295 -> m3_293  [color=blue, key=0, style=bold];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_67  [key=2, style=dotted];
m3_318 -> m3_319  [key=0, style=solid];
m3_321 -> m3_322  [key=0, style=solid];
m3_319 -> m3_320  [key=0, style=solid];
m3_319 -> m3_296  [key=2, style=dotted];
m3_320 -> m3_318  [color=blue, key=0, style=bold];
m3_323 -> m3_321  [color=blue, key=0, style=bold];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_9  [key=2, style=dotted];
m3_339 -> m3_68  [key=2, style=dotted];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_9  [key=2, style=dotted];
m3_347 -> m3_68  [key=2, style=dotted];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_359  [key=2, style=dotted];
m3_357 -> m3_360  [key=2, style=dotted];
m3_357 -> m3_361  [key=2, style=dotted];
m3_357 -> m3_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_344  [key=0, style=solid];
m3_342 -> m3_345  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_72  [key=2, style=dotted];
m3_354 -> m3_355  [key=0, style=solid];
m3_354 -> m3_345  [key=2, style=dotted];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_352  [key=0, style=solid];
m3_350 -> m3_345  [key=2, style=dotted];
m3_351 -> m3_352  [key=0, style=solid];
m3_351 -> m3_72  [key=2, style=dotted];
m3_338 -> m3_339  [key=0, style=solid];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m3_346 -> m3_347  [key=0, style=solid];
m3_349 -> m3_350  [key=0, style=solid];
m3_349 -> m3_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m3_353 -> m3_354  [key=0, style=solid];
m3_356 -> m3_357  [key=0, style=solid];
m3_340 -> m3_338  [color=blue, key=0, style=bold];
m3_344 -> m3_341  [color=blue, key=0, style=bold];
m3_348 -> m3_346  [color=blue, key=0, style=bold];
m3_352 -> m3_349  [color=blue, key=0, style=bold];
m3_355 -> m3_353  [color=blue, key=0, style=bold];
m3_358 -> m3_356  [color=blue, key=0, style=bold];
m3_362 -> m3_363  [key=0, style=solid];
m3_363 -> m3_364  [key=0, style=solid];
m3_364 -> m3_362  [color=blue, key=0, style=bold];
m3_392 -> m3_393  [key=0, style=solid];
m3_398 -> m3_399  [key=0, style=solid];
m3_404 -> m3_405  [key=0, style=solid];
m3_410 -> m3_411  [key=0, style=solid];
m3_417 -> m3_418  [key=0, style=solid];
m3_417 -> m3_419  [key=2, style=dotted];
m3_424 -> m3_425  [key=0, style=solid];
m3_430 -> m3_431  [key=0, style=solid];
m3_387 -> m3_388  [key=0, style=solid];
m3_391 -> m3_392  [key=0, style=solid];
m3_394 -> m3_395  [key=0, style=solid];
m3_397 -> m3_398  [key=0, style=solid];
m3_400 -> m3_401  [key=0, style=solid];
m3_403 -> m3_404  [key=0, style=solid];
m3_406 -> m3_407  [key=0, style=solid];
m3_409 -> m3_410  [key=0, style=solid];
m3_412 -> m3_413  [key=0, style=solid];
m3_416 -> m3_417  [key=0, style=solid];
m3_420 -> m3_421  [key=0, style=solid];
m3_423 -> m3_424  [key=0, style=solid];
m3_427 -> m3_428  [key=0, style=solid];
m3_427 -> m3_67  [key=2, style=dotted];
m3_427 -> m3_10  [key=2, style=dotted];
m3_426 -> m3_427  [key=0, style=solid];
m3_388 -> m3_389  [key=0, style=solid];
m3_388 -> m3_390  [key=2, style=dotted];
m3_389 -> m3_387  [color=blue, key=0, style=bold];
m3_393 -> m3_391  [color=blue, key=0, style=bold];
m3_395 -> m3_396  [key=0, style=solid];
m3_395 -> m3_390  [key=2, style=dotted];
m3_396 -> m3_394  [color=blue, key=0, style=bold];
m3_399 -> m3_397  [color=blue, key=0, style=bold];
m3_401 -> m3_402  [key=0, style=solid];
m3_401 -> m3_4  [key=2, style=dotted];
m3_402 -> m3_400  [color=blue, key=0, style=bold];
m3_405 -> m3_403  [color=blue, key=0, style=bold];
m3_407 -> m3_408  [key=0, style=solid];
m3_407 -> m3_4  [key=2, style=dotted];
m3_408 -> m3_406  [color=blue, key=0, style=bold];
m3_411 -> m3_409  [color=blue, key=0, style=bold];
m3_413 -> m3_414  [key=0, style=solid];
m3_413 -> m3_415  [key=2, style=dotted];
m3_414 -> m3_412  [color=blue, key=0, style=bold];
m3_418 -> m3_416  [color=blue, key=0, style=bold];
m3_421 -> m3_422  [key=0, style=solid];
m3_421 -> m3_4  [key=2, style=dotted];
m3_422 -> m3_420  [color=blue, key=0, style=bold];
m3_425 -> m3_423  [color=blue, key=0, style=bold];
m3_428 -> m3_426  [color=blue, key=0, style=bold];
m3_431 -> m3_429  [color=blue, key=0, style=bold];
m3_220 -> m3_221  [key=0, style=solid];
m3_221 -> m3_222  [key=0, style=solid];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_219  [key=2, style=dotted];
m3_223 -> m3_220  [color=blue, key=0, style=bold];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_137  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_140  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_29  [key=2, style=dotted];
m3_138 -> m3_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_139 -> m3_135  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=2, style=dotted];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_146 -> m3_147  [key=0, style=solid];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_150  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_29  [key=2, style=dotted];
m3_148 -> m3_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_149 -> m3_145  [color=blue, key=0, style=bold];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_157  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_112  [key=2, style=dotted];
m3_157 -> m3_159  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_172  [key=2, style=dotted];
m3_158 -> m3_169  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_158 -> m3_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_170  [key=0, style=solid];
m3_159 -> m3_164  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_159 -> m3_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_159 -> m3_165  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_159 -> m3_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_159 -> m3_166  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_159 -> m3_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_159 -> m3_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_169 -> m3_159  [key=0, style=solid];
m3_169 -> m3_174  [key=2, style=dotted];
m3_169 -> m3_175  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_61  [key=2, style=dotted];
m3_164 -> m3_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_164 -> m3_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_164 -> m3_168  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_61  [key=2, style=dotted];
m3_165 -> m3_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_165 -> m3_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_165 -> m3_169  [color=darkseagreen4, key=1, label=length, style=dashed];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_61  [key=2, style=dotted];
m3_166 -> m3_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_166 -> m3_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_166 -> m3_169  [color=darkseagreen4, key=1, label=dequeued, style=dashed];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_60  [key=2, style=dotted];
m3_163 -> m3_165  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_163 -> m3_166  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_163 -> m3_167  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_62  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_173  [key=2, style=dotted];
m3_168 -> m3_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_171 -> m3_155  [color=blue, key=0, style=bold];
m3_88 -> m3_89  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_92  [key=2, style=dotted];
m3_91 -> m3_88  [color=blue, key=0, style=bold];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_112  [key=2, style=dotted];
m3_99 -> m3_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m3_99 -> m3_110  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_109  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_114  [key=2, style=dotted];
m3_110 -> m3_115  [key=2, style=dotted];
m3_110 -> m3_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_101 -> m3_111  [key=0, style=solid];
m3_101 -> m3_113  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_59  [key=2, style=dotted];
m3_102 -> m3_107  [color=darkseagreen4, key=1, label=servers, style=dashed];
m3_102 -> m3_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m3_102 -> m3_110  [color=darkseagreen4, key=1, label=servers, style=dashed];
m3_102 -> m3_130  [color=darkseagreen4, key=1, label=servers, style=dashed];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_59  [key=2, style=dotted];
m3_103 -> m3_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_103 -> m3_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_103 -> m3_110  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_103 -> m3_130  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_61  [key=2, style=dotted];
m3_107 -> m3_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_107 -> m3_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_60  [key=2, style=dotted];
m3_104 -> m3_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_104 -> m3_108  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_104 -> m3_109  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_108 -> m3_105  [key=0, style=solid];
m3_108 -> m3_61  [key=2, style=dotted];
m3_108 -> m3_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_108 -> m3_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_62  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_106 -> m3_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_106 -> m3_108  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_106 -> m3_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_106 -> m3_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_111 -> m3_97  [color=blue, key=0, style=bold];
m3_369 -> m3_370  [key=0, style=solid];
m3_370 -> m3_371  [key=0, style=solid];
m3_371 -> m3_372  [key=0, style=solid];
m3_371 -> m3_386  [key=2, style=dotted];
m3_371 -> m3_374  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_375  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_376  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_377  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_378  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_379  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_382  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_371 -> m3_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_372 -> m3_373  [key=0, style=solid];
m3_372 -> m3_112  [key=2, style=dotted];
m3_372 -> m3_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_61  [key=2, style=dotted];
m3_374 -> m3_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_374 -> m3_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_375 -> m3_376  [key=0, style=solid];
m3_375 -> m3_61  [key=2, style=dotted];
m3_375 -> m3_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_375 -> m3_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_376 -> m3_377  [key=0, style=solid];
m3_376 -> m3_61  [key=2, style=dotted];
m3_376 -> m3_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_376 -> m3_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_377 -> m3_378  [key=0, style=solid];
m3_377 -> m3_61  [key=2, style=dotted];
m3_377 -> m3_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_377 -> m3_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_61  [key=2, style=dotted];
m3_378 -> m3_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_378 -> m3_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_379 -> m3_380  [key=0, style=solid];
m3_379 -> m3_61  [key=2, style=dotted];
m3_379 -> m3_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_379 -> m3_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_382 -> m3_380  [key=0, style=solid];
m3_382 -> m3_61  [key=2, style=dotted];
m3_382 -> m3_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_382 -> m3_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_384 -> m3_385  [key=0, style=solid];
m3_373 -> m3_374  [key=0, style=solid];
m3_373 -> m3_60  [key=2, style=dotted];
m3_373 -> m3_375  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_373 -> m3_376  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_373 -> m3_377  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_373 -> m3_378  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_373 -> m3_379  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_373 -> m3_382  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_373 -> m3_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m3_380 -> m3_381  [key=0, style=solid];
m3_380 -> m3_383  [key=0, style=solid];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_62  [key=2, style=dotted];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m3_385 -> m3_369  [color=blue, key=0, style=bold];
m3_365 -> m3_366  [key=0, style=solid];
m3_366 -> m3_367  [key=0, style=solid];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_10  [key=2, style=dotted];
m3_368 -> m3_365  [color=blue, key=0, style=bold];
m3_215 -> m3_216  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_219  [key=2, style=dotted];
m3_218 -> m3_215  [color=blue, key=0, style=bold];
m3_92 -> m3_298  [key=0, style=solid];
m3_92 -> m3_305  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_92 -> m3_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_92 -> m3_306  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_298 -> m3_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_298 -> m3_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_114  [key=2, style=dotted];
m3_305 -> m3_115  [key=2, style=dotted];
m3_305 -> m3_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_289  [key=2, style=dotted];
m3_306 -> m3_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_317  [key=2, style=dotted];
m3_299 -> m3_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_304  [key=0, style=solid];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_175  [key=2, style=dotted];
m3_303 -> m3_301  [key=0, style=solid];
m3_303 -> m3_317  [key=2, style=dotted];
m3_303 -> m3_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_113  [key=2, style=dotted];
m3_300 -> m3_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_300 -> m3_304  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_300 -> m3_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_114  [key=2, style=dotted];
m3_304 -> m3_115  [key=2, style=dotted];
m3_304 -> m3_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_304 -> m3_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_292  [key=2, style=dotted];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_315  [key=0, style=solid];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_59  [key=2, style=dotted];
m3_307 -> m3_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_307 -> m3_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_313  [key=0, style=solid];
m3_311 -> m3_290  [key=2, style=dotted];
m3_311 -> m3_291  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_308 -> m3_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_308 -> m3_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_308 -> m3_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_315 -> m3_316  [key=0, style=solid];
m3_314 -> m3_309  [key=0, style=solid];
m3_314 -> m3_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_310 -> m3_311  [key=0, style=solid];
m3_312 -> m3_313  [key=0, style=solid];
m3_316 -> m3_92  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_4  [key=2, style=dotted];
m3_18 -> m3_15  [color=blue, key=0, style=bold];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_244 -> m3_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_245 -> m3_246  [key=0, style=solid];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_9  [key=2, style=dotted];
m3_246 -> m3_254  [key=2, style=dotted];
m3_246 -> m3_252  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_9  [key=2, style=dotted];
m3_250 -> m3_125  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_249  [key=0, style=solid];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_255  [key=2, style=dotted];
m3_252 -> d9  [key=2, style=dotted];
m3_252 -> m3_257  [key=2, style=dotted];
m3_252 -> m3_258  [key=2, style=dotted];
m3_252 -> m3_63  [key=2, style=dotted];
m3_252 -> m3_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_252 -> m3_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_252 -> m3_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_248 -> m3_253  [key=0, style=solid];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_252  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m3_249 -> m3_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_114  [key=2, style=dotted];
m3_251 -> m3_115  [key=2, style=dotted];
m3_253 -> m3_244  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=2, style=dotted];
m3_7 -> m3_10  [key=2, style=dotted];
m3_8 -> m3_5  [color=blue, key=0, style=bold];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_9  [key=2, style=dotted];
m3_208 -> m3_150  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_29  [key=2, style=dotted];
m3_209 -> m3_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_210 -> m3_206  [color=blue, key=0, style=bold];
m3_93 -> m3_94  [key=0, style=solid];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_92  [key=2, style=dotted];
m3_96 -> m3_93  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_4  [key=2, style=dotted];
m3_22 -> m3_19  [color=blue, key=0, style=bold];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_224 -> m3_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_225 -> m3_226  [key=0, style=solid];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_9  [key=2, style=dotted];
m3_226 -> m3_76  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_234  [key=2, style=dotted];
m3_230 -> m3_235  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_232  [key=2, style=dotted];
m3_227 -> m3_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_230  [key=0, style=solid];
m3_228 -> m3_233  [key=2, style=dotted];
m3_229 -> m3_231  [key=0, style=solid];
m3_231 -> m3_224  [color=blue, key=0, style=bold];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_199 -> m3_200  [key=0, style=solid];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_9  [key=2, style=dotted];
m3_200 -> m3_150  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_29  [key=2, style=dotted];
m3_201 -> m3_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_202 -> m3_198  [color=blue, key=0, style=bold];
m3_432 -> m3_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_432 -> m3_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_432 -> m3_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_432 -> m3_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_433 -> m3_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_433 -> m3_84  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_434 -> m3_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_434 -> m3_84  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_435 -> m3_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_435 -> m3_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_435 -> m3_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_435 -> m3_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m3_436 -> m3_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m3_436 -> m3_130  [color=darkseagreen4, key=1, label=servers, style=dashed];
m3_437 -> m3_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_437 -> m3_130  [color=darkseagreen4, key=1, label=queues, style=dashed];
m3_438 -> m3_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_438 -> m3_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_438 -> m3_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m3_439 -> m3_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m3_440 -> m3_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_441 -> m3_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_442 -> m3_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_443 -> m3_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_443 -> m3_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_443 -> m3_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_443 -> m3_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_443 -> m3_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_443 -> m3_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_444 -> m3_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_444 -> m3_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_444 -> m3_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m3_445 -> m3_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_446 -> m3_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_446 -> m3_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_446 -> m3_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m3_447 -> m3_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m3_448 -> m3_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_448 -> m3_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_448 -> m3_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_448 -> m3_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_448 -> m3_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_448 -> m3_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_448 -> m3_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m3_449 -> m3_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
}
