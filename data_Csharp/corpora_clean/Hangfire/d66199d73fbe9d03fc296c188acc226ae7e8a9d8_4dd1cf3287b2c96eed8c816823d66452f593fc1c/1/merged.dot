digraph  {
n67 [label="Hangfire.BackgroundJobServer", span=""];
n0 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="38-38", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()"];
n1 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="38-38", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()"];
n2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)"];
n3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)"];
n4 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="58-58", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)"];
n5 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="58-58", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)"];
n6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="69-69", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n7 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="69-69", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n8 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n9 [label="storage == null", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n11 [label="options == null", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n13 [label="additionalProcesses == null", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n15 [label="_options = options", span="83-83", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n18 [label="processes.AddRange(storage.GetComponents())", span="87-87", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n19 [label="processes.AddRange(additionalProcesses)", span="88-88", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n20 [label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="90-94", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n22 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="97-97", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n23 [label="storage.WriteOptionsToLog(Logger)", span="99-99", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n24 [label="options.WriteToLog(Logger)", span="100-100", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n25 [label="_processingServer = new BackgroundProcessingServer(storage, processes, properties)\r\n            {\r\n                ShutdownTimeout = options.ShutdownTimeout\r\n            }", span="102-105", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n10 [label="throw new ArgumentNullException(''storage'');", span="79-79", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n12 [label="throw new ArgumentNullException(''options'');", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n14 [label="throw new ArgumentNullException(''additionalProcesses'');", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n16 [label="var processes = new List<IServerProcess>()", span="85-85", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n17 [label="processes.AddRange(GetProcesses())", span="86-86", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n28 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n29 [label="Entry Hangfire.BackgroundJobServer.GetProcesses()", span="114-114", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n30 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)"];
n31 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()"];
n21 [label="Logger.Info(''Starting Hangfire Server'')", span="96-96", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n33 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)"];
n34 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])"];
n35 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)"];
n36 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="83-83", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)"];
n26 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="74-74", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)"];
n27 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n37 [label="Entry Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", span="40-40", cluster="Hangfire.Server.BackgroundProcessingServer.BackgroundProcessingServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)"];
n38 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="108-108", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n39 [label="_processingServer.Dispose()", span="110-110", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n40 [label="Logger.Info(''Hangfire Server stopped.'')", span="111-111", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n42 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()"];
n41 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="108-108", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n43 [label="var processes = new List<IServerProcess>()", span="116-116", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n44 [label="var i = 0", span="118-118", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n46 [label="processes.Add(new Worker(\r\n                    _options.Queues, \r\n                    new JobPerformanceProcess(_options.FilterProvider), \r\n                    new StateChangeProcess(_options.FilterProvider)))", span="120-123", cluster="Hangfire.BackgroundJobServer.GetProcesses()", color=red, community=0];
n48 [label="processes.Add(new ServerHeartbeat(_options.HeartbeatInterval))", span="126-126", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n49 [label="processes.Add(new ServerWatchdog(_options.ServerWatchdogOptions))", span="127-127", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n50 [label="processes.Add(new SchedulePoller(_options.SchedulePollingInterval, new StateChangeProcess(_options.FilterProvider)))", span="128-128", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n51 [label="processes.Add(new RecurringJobScheduler(new JobCreationProcess(_options.FilterProvider)))", span="129-129", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n52 [label="return processes;", span="131-131", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n45 [label="i < _options.WorkerCount", span="118-118", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n47 [label="i++", span="118-118", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n54 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", span="47-47", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)"];
n55 [label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider)", span="34-34", cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider)"];
n56 [label="Entry Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.States.StateChangeProcess.StateChangeProcess(Hangfire.Common.IJobFilterProvider)"];
n57 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n58 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="31-31", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)"];
n59 [label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="32-32", cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)"];
n60 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, Hangfire.States.IStateChangeProcess)", span="45-45", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan, Hangfire.States.IStateChangeProcess)"];
n61 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)"];
n62 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(Hangfire.Common.IJobFilterProvider)", span="35-35", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(Hangfire.Common.IJobFilterProvider)"];
n53 [label="Exit Hangfire.BackgroundJobServer.GetProcesses()", span="114-114", cluster="Hangfire.BackgroundJobServer.GetProcesses()"];
n63 [label="Entry Hangfire.BackgroundJobServer.Start()", span="135-135", cluster="Hangfire.BackgroundJobServer.Start()"];
n64 [label="Exit Hangfire.BackgroundJobServer.Start()", span="135-135", cluster="Hangfire.BackgroundJobServer.Start()"];
n65 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="140-140", cluster="Hangfire.BackgroundJobServer.Stop()"];
n66 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="140-140", cluster="Hangfire.BackgroundJobServer.Stop()"];
d49 [label="Release(_connection, _resource)", span="123-123", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0];
d95 [label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
d48 [label="_timer?.Dispose()", span="121-121", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d50 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="100-100", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d53 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="210-210", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d62 [label="started.Elapsed < timeout", span="176-176", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d33 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="153-153", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d61 [label="var started = Stopwatch.StartNew()", span="165-165", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d74 [label="lockResult == -999", span="200-200", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d63 [label="var parameters = new DynamicParameters()", span="178-178", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d76 [label="throw new DistributedLockTimeoutException(resource);", span="207-207", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d64 [label="parameters.Add(''@Resource'', resource)", span="179-179", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d65 [label="parameters.Add(''@DbPrincipal'', ''public'')", span="180-180", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d81 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d70 [label="connection.Execute(\r\n                    @''sp_getapplock'',\r\n                    parameters,\r\n                    commandTimeout: (int)LockTimeout.TotalSeconds + 1,\r\n                    commandType: CommandType.StoredProcedure)", span="186-190", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d69 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="184-184", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d71 [label="var lockResult = parameters.Get<int>(''@Result'')", span="192-192", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d58 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
d60 [label="throw new InvalidOperationException(''Connection must be open before acquiring a distributed lock.'');", span="162-162", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d59 [label="connection.State != ConnectionState.Open", span="155-155", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d77 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="153-153", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d78 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
d79 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()"];
d80 [label="Entry DynamicParameters.cstr", span="", cluster="DynamicParameters.cstr"];
d66 [label="parameters.Add(''@LockMode'', LockMode)", span="181-181", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d67 [label="parameters.Add(''@LockOwner'', LockOwner)", span="182-182", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d68 [label="parameters.Add(''@LockTimeout'', LockTimeout.TotalMilliseconds)", span="183-183", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d13 [label="_storage = storage", span="70-70", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d14 [label="_resource = resource", span="71-71", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d15 [label="!AcquiredLocks.Value.ContainsKey(_resource) || AcquiredLocks.Value[_resource] == 0", span="73-73", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d16 [label="_connection = storage.CreateAndOpenConnection()", span="75-75", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d17 [label="Acquire(_connection, _resource, timeout)", span="79-79", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d19 [label="storage.ReleaseConnection(_connection)", span="83-83", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d21 [label="!_storage.IsExistingConnection(_connection)", span="87-87", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d22 [label="_timer = new Timer(ExecuteKeepAliveQuery, null, KeepAliveInterval, KeepAliveInterval)", span="89-89", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d23 [label="AcquiredLocks.Value[_resource] = 1", span="92-92", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d24 [label="AcquiredLocks.Value[_resource]++", span="96-96", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d38 [label=_completed, span="102-102", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d40 [label="_completed = true", span="104-104", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d41 [label="!AcquiredLocks.Value.ContainsKey(_resource)", span="106-106", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d43 [label="AcquiredLocks.Value[_resource]--", span="108-108", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d44 [label="AcquiredLocks.Value[_resource] != 0", span="110-110", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d46 [label=_lockObject, span="112-112", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d47 [label="AcquiredLocks.Value.Remove(_resource)", span="119-119", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d55 [label=_lockObject, span="135-135", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d56 [label="_connection?.Execute(''SELECT 1;'')", span="139-139", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d52 [label="Entry System.Threading.Timer.Dispose()", span="0-0", cluster="System.Threading.Timer.Dispose()"];
d39 [label="return;", span="102-102", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d42 [label="return;", span="106-106", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d45 [label="return;", span="110-110", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d37 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="100-100", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d94 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="210-210", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d86 [label="var parameters = new DynamicParameters()", span="212-212", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d87 [label="parameters.Add(''@Resource'', resource)", span="213-213", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d90 [label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="217-220", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d93 [label="throw new SqlServerDistributedLockException(\r\n                    $''Could not release a lock on the resource '{resource}': Server returned the '{releaseResult}' error.'');", span="226-227", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d75 [label="throw new SqlServerDistributedLockException(\r\n                        $''Could not place a lock on the resource '{resource}': {(LockErrorMessages.ContainsKey(lockResult) ? LockErrorMessages[lockResult] : $''Server returned the '{lockResult}' error.'')}.'');", span="202-203", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d4 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="61-61", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d72 [label="lockResult >= 0", span="194-194", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d85 [label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6", cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)"];
d88 [label="parameters.Add(''@LockOwner'', LockOwner)", span="214-214", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d89 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="215-215", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d82 [label="Entry Unk.>", span="", cluster="Unk.>"];
d73 [label="return;", span="197-197", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d11 [label="timeout.TotalMilliseconds > Int32.MaxValue", span="67-67", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d31 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
d32 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()"];
d18 [label=Exception, span="81-81", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d20 [label="throw;", span="84-84", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d34 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)"];
d35 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="244-244", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)"];
d36 [label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0", cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)"];
d25 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="61-61", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)"];
d54 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="133-133", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d57 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="133-133", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d92 [label="releaseResult < 0", span="224-224", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d91 [label="var releaseResult = parameters.Get<int>(''@Result'')", span="222-222", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d83 [label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22", cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)"];
d84 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey"];
d5 [label="storage == null", span="63-63", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d6 [label="throw new ArgumentNullException(nameof(storage));", span="63-63", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d7 [label="String.IsNullOrEmpty(resource)", span="64-64", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d8 [label="throw new ArgumentNullException(nameof(resource));", span="64-64", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d9 [label="timeout.TotalSeconds + CommandTimeoutAdditionSeconds > Int32.MaxValue", span="65-65", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d12 [label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {(int)TimeSpan.FromMilliseconds(Int32.MaxValue).TotalSeconds} seconds'', nameof(timeout));", span="67-68", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d10 [label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {Int32.MaxValue - CommandTimeoutAdditionSeconds} seconds'', nameof(timeout));", span="65-66", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d26 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d27 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
d28 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d29 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d30 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)"];
n67 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n46  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobServer"];
n67 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n67 -> n51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n8 -> n13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
n8 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n8 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n8 -> n19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>"];
n8 -> n20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n8 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n8 -> n23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n8 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n8 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n31  [key=2, style=dotted];
n18 -> n30  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n30  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n32  [key=2, style=dotted];
n20 -> n25  [key=1, style=dashed, color=darkseagreen4, label=properties];
n22 -> n23  [key=0, style=solid];
n22 -> n34  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n35  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n36  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n37  [key=2, style=dotted];
n10 -> n26  [key=0, style=solid];
n10 -> n27  [key=2, style=dotted];
n12 -> n26  [key=0, style=solid];
n12 -> n27  [key=2, style=dotted];
n14 -> n26  [key=0, style=solid];
n14 -> n27  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n28  [key=2, style=dotted];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label=processes];
n16 -> n19  [key=1, style=dashed, color=darkseagreen4, label=processes];
n16 -> n25  [key=1, style=dashed, color=darkseagreen4, label=processes];
n17 -> n18  [key=0, style=solid];
n17 -> n29  [key=2, style=dotted];
n17 -> n30  [key=2, style=dotted];
n29 -> n43  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n33  [key=2, style=dotted];
n26 -> n8  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n42  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n33  [key=2, style=dotted];
n41 -> n38  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n28  [key=2, style=dotted];
n43 -> n46  [key=1, style=dashed, color=red, label=processes];
n43 -> n48  [key=1, style=dashed, color=darkseagreen4, label=processes];
n43 -> n49  [key=1, style=dashed, color=darkseagreen4, label=processes];
n43 -> n50  [key=1, style=dashed, color=darkseagreen4, label=processes];
n43 -> n51  [key=1, style=dashed, color=darkseagreen4, label=processes];
n43 -> n52  [key=1, style=dashed, color=darkseagreen4, label=processes];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [key=1, style=dashed, color=darkseagreen4, label=i];
n44 -> n44  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n46 -> n47  [key=0, style=solid, color=red];
n46 -> n54  [key=2, style=dotted, color=red];
n46 -> n55  [key=2, style=dotted, color=red];
n46 -> n56  [key=2, style=dotted, color=red];
n46 -> n57  [key=2, style=dotted, color=red];
n48 -> n49  [key=0, style=solid];
n48 -> n58  [key=2, style=dotted];
n48 -> n57  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n59  [key=2, style=dotted];
n49 -> n57  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n60  [key=2, style=dotted];
n50 -> n56  [key=2, style=dotted];
n50 -> n57  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n61  [key=2, style=dotted];
n51 -> n62  [key=2, style=dotted];
n51 -> n57  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n45 -> n46  [key=0, style=solid, color=red];
n45 -> n48  [key=0, style=solid];
n47 -> n45  [key=0, style=solid];
n47 -> n47  [key=1, style=dashed, color=darkseagreen4, label=i];
n53 -> n29  [key=0, style=bold, color=blue];
n63 -> n64  [key=0, style=solid];
n64 -> n63  [key=0, style=bold, color=blue];
n65 -> n66  [key=0, style=solid];
n66 -> n65  [key=0, style=bold, color=blue];
d49 -> d50  [key=0, style=solid, color=green];
d49 -> d53  [key=2, style=dotted, color=green];
d95 -> d49  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d95 -> d56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d48 -> d49  [key=0, style=solid, color=green];
d48 -> d52  [key=2, style=dotted];
d50 -> d37  [key=0, style=bold, color=blue];
d53 -> d86  [key=0, style=solid];
d53 -> d87  [key=1, style=dashed, color=darkseagreen4, label=string];
d53 -> d90  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
d53 -> d93  [key=1, style=dashed, color=darkseagreen4, label=string];
d62 -> d63  [key=0, style=solid, color=green];
d62 -> d76  [key=0, style=solid, color=green];
d33 -> d62  [key=1, style=dashed, color=green, label="System.TimeSpan"];
d33 -> d64  [key=1, style=dashed, color=green, label=string];
d33 -> d70  [key=1, style=dashed, color=green, label=IDbConnection];
d33 -> d59  [key=0, style=solid];
d33 -> d75  [key=1, style=dashed, color=darkseagreen4, label=string];
d33 -> d76  [key=1, style=dashed, color=darkseagreen4, label=string];
d33 -> d4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan timeout"];
d61 -> d62  [key=0, style=solid, color=green];
d61 -> d79  [key=2, style=dotted, color=green];
d74 -> d62  [key=0, style=solid, color=green];
d74 -> d75  [key=0, style=solid];
d63 -> d64  [key=0, style=solid, color=green];
d63 -> d70  [key=1, style=dashed, color=green, label=parameters];
d63 -> d80  [key=2, style=dotted, color=green];
d63 -> d65  [key=1, style=dashed, color=green, label=parameters];
d63 -> d66  [key=1, style=dashed, color=green, label=parameters];
d63 -> d67  [key=1, style=dashed, color=green, label=parameters];
d63 -> d68  [key=1, style=dashed, color=green, label=parameters];
d63 -> d69  [key=1, style=dashed, color=green, label=parameters];
d63 -> d71  [key=1, style=dashed, color=green, label=parameters];
d76 -> d77  [key=0, style=solid];
d76 -> d85  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid, color=green];
d64 -> d81  [key=2, style=dotted, color=green];
d65 -> d66  [key=0, style=solid, color=green];
d65 -> d81  [key=2, style=dotted, color=green];
d70 -> d71  [key=0, style=solid, color=green];
d70 -> d58  [key=2, style=dotted, color=green];
d69 -> d70  [key=0, style=solid, color=green];
d69 -> d81  [key=2, style=dotted];
d71 -> d74  [key=1, style=dashed, color=darkseagreen4, label=lockResult];
d71 -> d72  [key=0, style=solid];
d71 -> d82  [key=2, style=dotted];
d71 -> d75  [key=1, style=dashed, color=darkseagreen4, label=lockResult];
d60 -> d77  [key=0, style=solid, color=green];
d60 -> d78  [key=2, style=dotted, color=green];
d59 -> d60  [key=0, style=solid, color=green];
d59 -> d61  [key=0, style=solid, color=green];
d77 -> d33  [key=0, style=bold, color=blue];
d66 -> d67  [key=0, style=solid, color=green];
d66 -> d81  [key=2, style=dotted, color=green];
d67 -> d68  [key=0, style=solid, color=green];
d67 -> d81  [key=2, style=dotted, color=green];
d68 -> d81  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d15 -> d24  [key=0, style=solid];
d15 -> d31  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d16 -> d32  [key=2, style=dotted];
d17 -> d33  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d21  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d19 -> d34  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d23  [key=0, style=solid];
d21 -> d35  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d36  [key=2, style=dotted];
d23 -> d25  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d40  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d41 -> d42  [key=0, style=solid];
d41 -> d43  [key=0, style=solid];
d41 -> d31  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d44 -> d46  [key=0, style=solid];
d46 -> d47  [key=0, style=solid];
d47 -> d48  [key=0, style=solid];
d47 -> d51  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d56 -> d58  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d39 -> d50  [key=0, style=solid];
d42 -> d50  [key=0, style=solid];
d45 -> d50  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d94 -> d53  [key=0, style=bold, color=blue];
d86 -> d80  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d88  [key=1, style=dashed, color=darkseagreen4, label=parameters];
d86 -> d89  [key=1, style=dashed, color=darkseagreen4, label=parameters];
d86 -> d90  [key=1, style=dashed, color=darkseagreen4, label=parameters];
d86 -> d91  [key=1, style=dashed, color=darkseagreen4, label=parameters];
d87 -> d81  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d90 -> d58  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d93 -> d83  [key=2, style=dotted];
d75 -> d77  [key=0, style=solid];
d75 -> d83  [key=2, style=dotted];
d75 -> d84  [key=2, style=dotted];
d4 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d14  [key=1, style=dashed, color=darkseagreen4, label=string];
d4 -> d16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d7  [key=1, style=dashed, color=darkseagreen4, label=string];
d4 -> d8  [key=1, style=dashed, color=darkseagreen4, label=string];
d4 -> d9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d72 -> d74  [key=0, style=solid];
d72 -> d73  [key=0, style=solid];
d88 -> d81  [key=2, style=dotted];
d88 -> d89  [key=0, style=solid];
d89 -> d81  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d73 -> d77  [key=0, style=solid];
d11 -> d13  [key=0, style=solid];
d11 -> d17  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d11 -> d11  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d11 -> d12  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d20 -> d25  [key=0, style=solid];
d25 -> d4  [key=0, style=bold, color=blue];
d54 -> d55  [key=0, style=solid];
d57 -> d54  [key=0, style=bold, color=blue];
d92 -> d94  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d91 -> d93  [key=1, style=dashed, color=darkseagreen4, label=releaseResult];
d91 -> d82  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d7  [key=0, style=solid];
d6 -> d25  [key=0, style=solid];
d6 -> d26  [key=2, style=dotted];
d6 -> d27  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=0, style=solid];
d7 -> d28  [key=2, style=dotted];
d8 -> d25  [key=0, style=solid];
d8 -> d26  [key=2, style=dotted];
d8 -> d27  [key=2, style=dotted];
d9 -> d11  [key=0, style=solid];
d9 -> d9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d9 -> d10  [key=0, style=solid];
d12 -> d25  [key=0, style=solid];
d12 -> d29  [key=2, style=dotted];
d12 -> d30  [key=2, style=dotted];
d12 -> d27  [key=2, style=dotted];
d10 -> d25  [key=0, style=solid];
d10 -> d29  [key=2, style=dotted];
d10 -> d27  [key=2, style=dotted];
}
