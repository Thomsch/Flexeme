digraph  {
n51 [label=serializedData, span=""];
n52 [label=serializedData, span=""];
n53 [label=serializedData, span=""];
n0 [label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="10-10", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n1 [label="var type = typeof(InvocationDataFacts)", span="12-12", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n2 [label="var methodInfo = type.GetMethod(''Sample'')", span="13-13", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n3 [label="var serializedData = new InvocationData(\r\n                type.AssemblyQualifiedName,\r\n                methodInfo.Name,\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                JobHelper.ToJson(new [] { ''Hello'' }))", span="15-19", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n5 [label="Assert.Equal(type, job.Type)", span="23-23", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n9 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)"];
n6 [label="Assert.Equal(methodInfo, job.Method)", span="24-24", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n4 [label="var job = serializedData.Deserialize()", span="21-21", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n10 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)"];
n11 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)"];
n12 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()"];
n7 [label="Assert.Equal(''Hello'', job.Arguments[0])", span="25-25", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n8 [label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="10-10", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()"];
n14 [label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="29-29", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()"];
n15 [label="var serializedData = new InvocationData(null, null, null, null)", span="31-31", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()"];
n16 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="33-34", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()"];
n20 [label="serializedData.Deserialize()", span="34-34", cluster="lambda expression"];
n17 [label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="29-29", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()"];
n18 [label="Entry Unk.>", span="", cluster="Unk.>"];
n19 [label="Entry lambda expression", span="34-34", cluster="lambda expression"];
n21 [label="Exit lambda expression", span="34-34", cluster="lambda expression"];
n22 [label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="38-38", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()"];
n23 [label="var serializedData = new InvocationData(\r\n                ''NonExistingType'',\r\n                ''Perform'',\r\n                '''',\r\n                '''')", span="40-44", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()"];
n24 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="46-47", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()"];
n27 [label="serializedData.Deserialize()", span="47-47", cluster="lambda expression"];
n25 [label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="38-38", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()"];
n26 [label="Entry lambda expression", span="47-47", cluster="lambda expression"];
n28 [label="Exit lambda expression", span="47-47", cluster="lambda expression"];
n29 [label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="51-51", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()"];
n30 [label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''NonExistingMethod'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                '''')", span="53-57", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", color=red, community=0];
n31 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="59-60", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()"];
n34 [label="serializedData.Deserialize()", span="60-60", cluster="lambda expression"];
n32 [label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="51-51", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()"];
n33 [label="Entry lambda expression", span="60-60", cluster="lambda expression"];
n35 [label="Exit lambda expression", span="60-60", cluster="lambda expression"];
n36 [label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="64-64", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n37 [label="var job = Job.FromExpression(() => Sample(''Hello''))", span="66-66", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n38 [label="var invocationData = InvocationData.Serialize(job)", span="67-67", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n44 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)"];
n46 [label="Entry lambda expression", span="66-66", cluster="lambda expression"];
n39 [label="Assert.Equal(typeof(InvocationDataFacts).AssemblyQualifiedName, invocationData.Type)", span="69-69", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n45 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)"];
n40 [label="Assert.Equal(''Sample'', invocationData.Method)", span="70-70", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n41 [label="Assert.Equal(JobHelper.ToJson(new[] { typeof(string) }), invocationData.ParameterTypes)", span="71-71", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n42 [label="Assert.Equal(JobHelper.ToJson(new[] { ''Hello'' }), invocationData.Arguments)", span="72-72", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n43 [label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="64-64", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()"];
n47 [label="Sample(''Hello'')", span="66-66", cluster="lambda expression"];
n48 [label="Exit lambda expression", span="66-66", cluster="lambda expression"];
n49 [label="Entry HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="75-75", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)"];
n50 [label="Exit HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="75-75", cluster="HangFire.Core.Tests.Storage.InvocationDataFacts.Sample(string)"];
m0_73 [label="Entry RecurringJobScheduler.cstr", span="", cluster="RecurringJobScheduler.cstr", file="ServerComponentRunnerCollectionFacts.cs"];
m0_18 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_122 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="ServerComponentRunnerCollectionFacts.cs"];
m0_19 [label="Entry Mock<IThrottler>.cstr", span="", cluster="Mock<IThrottler>.cstr", file="ServerComponentRunnerCollectionFacts.cs"];
m0_159 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="165-165", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_161 [label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="168-168", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_162 [label="var scheduler = CreateScheduler()", span="169-169", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_163 [label="scheduler.Execute(_context.Object)", span="171-171", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_164 [label="_instant.Verify(x => x.GetNextInstants(time))", span="173-173", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_160 [label="var time = DateTime.UtcNow", span="167-167", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_165 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="165-165", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_257 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", span="298-298", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_259 [label="_recurringJob[''NextExecution''] = JobHelper.SerializeDateTime(nextExecution)", span="302-302", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_260 [label="_recurringJob.Remove(''CreatedAt'')", span="303-303", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_261 [label="_recurringJob.Remove(''LastExecution'')", span="304-304", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_262 [label="var scheduler = CreateScheduler()", span="306-306", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_263 [label="scheduler.Execute(_context.Object)", span="309-309", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_264 [label="_instant.Verify(x => x.GetNextInstants(\r\n                It.Is<DateTime>(time => time < nextExecution)))", span="312-313", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_258 [label="var nextExecution = DateTime.UtcNow.AddHours(-10)", span="301-301", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_265 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", span="298-298", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_PassesNextExecutionTime_ToGetNextInstants_WhenBothLastExecutionAndCreatedAtAreNotAvailable()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_60 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ServerComponentRunnerCollectionFacts.cs"];
m0_170 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="177-177", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_171 [label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="179-180", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_172 [label="var scheduler = CreateScheduler()", span="181-181", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_173 [label="scheduler.Execute(_context.Object)", span="184-184", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_174 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="177-177", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_27 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerComponentRunnerCollectionFacts.cs"];
m0_111 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="118-118", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_115 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id)))", span="129-132", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_114 [label="var jobKey = $''recurring-job:{RecurringJobId}''", span="127-127", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_116 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="134-138", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_117 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="140-144", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_112 [label="var scheduler = CreateScheduler()", span="121-121", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_113 [label="scheduler.Execute(_context.Object)", span="124-124", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_118 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="118-118", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_140 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="148-148", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_141 [label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime>())).Returns(Enumerable.Empty<DateTime>)", span="150-150", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_142 [label="var scheduler = CreateScheduler()", span="151-151", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_143 [label="scheduler.Execute(_context.Object)", span="153-153", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_144 [label="_factory.Verify(x => x.Create(It.IsAny<CreateContext>()), Times.Never)", span="155-155", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_145 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                $''recurring-job:{RecurringJobId}'',\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value))))", span="157-161", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_146 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="148-148", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_74 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="76-76", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_75 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_factory.Object, null, _throttler.Object))", span="78-80", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_76 [label="Assert.Equal(''instantFactory'', exception.ParamName)", span="82-82", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_77 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="76-76", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_93 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="316-316", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_272 [label="return new RecurringJobScheduler(\r\n                _factory.Object,\r\n                _instantFactory,\r\n                _throttler.Object);", span="318-321", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_273 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="316-316", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_200 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="220-220", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_201 [label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (!timeZoneInfo.Equals(TimeZoneInfo.Utc)) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="223-227", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_202 [label="_recurringJob.Remove(''TimeZoneId'')", span="228-228", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_203 [label="var scheduler = CreateScheduler()", span="229-229", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_204 [label="scheduler.Execute(_context.Object)", span="232-232", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_205 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="220-220", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerComponentRunnerCollectionFacts.cs"];
m0_212 [label="Entry System.TimeZoneInfo.Equals(System.TimeZoneInfo)", span="0-0", cluster="System.TimeZoneInfo.Equals(System.TimeZoneInfo)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_192 [label="Entry Hangfire.Core.Tests.PlatformHelper.IsRunningOnWindows()", span="10-10", cluster="Hangfire.Core.Tests.PlatformHelper.IsRunningOnWindows()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_193 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_222 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", span="247-247", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_224 [label="_recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(createdAt)", span="251-251", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_225 [label="var scheduler = CreateScheduler()", span="252-252", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_226 [label="scheduler.Execute(_context.Object)", span="255-255", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_227 [label="_instant.Verify(x => x.GetNextInstants(createdAt), Times.Once)", span="258-258", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_223 [label="var createdAt = DateTime.UtcNow.AddHours(-3)", span="250-250", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_228 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", span="247-247", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetNextInstants_IsCalledWithCreatedAtTime_IfExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_245 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", span="280-280", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_246 [label="_recurringJob.Remove(''CreatedAt'')", span="283-283", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_247 [label="var scheduler = CreateScheduler()", span="284-284", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_248 [label="scheduler.Execute(_context.Object)", span="287-287", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_249 [label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt''))),\r\n                Times.Once)", span="290-294", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_250 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", span="280-280", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_FixedMissingCreatedAtField()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_29 [label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9", cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_25 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_0 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_1 [label="_context = new BackgroundProcessContextMock()", span="29-29", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_2 [label="_throttler = new Mock<IThrottler>()", span="31-31", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_3 [label="_instant = new Mock<IScheduleInstant>()", span="34-34", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_4 [label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime>())).Returns(new[] { _instant.Object.NowInstant })", span="35-35", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_5 [label="_instant.Setup(x => x.NowInstant).Returns(DateTime.UtcNow)", span="36-36", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_6 [label="_instant.Setup(x => x.NextInstant).Returns(_instant.Object.NowInstant)", span="37-37", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_8 [label="_instantFactory = (schedule, timeZone) => _instant.Object", span="41-41", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_9 [label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', timeZone1.Id }\r\n            }", span="43-48", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_10 [label="_connection = new Mock<IStorageConnection>()", span="50-50", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_11 [label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="51-51", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_12 [label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="53-54", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_13 [label="_connection.Setup(x => x.GetAllEntriesFromHash($''recurring-job:{RecurringJobId}''))\r\n                .Returns(_recurringJob)", span="56-57", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_14 [label="_backgroundJobMock = new BackgroundJobMock()", span="59-59", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_15 [label="_factory = new Mock<IBackgroundJobFactory>()", span="61-61", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_16 [label="_factory.Setup(x => x.Create(It.IsAny<CreateContext>())).Returns(_backgroundJobMock.Object)", span="62-62", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_7 [label="var timeZone1 = TimeZoneInfo.Local", span="39-39", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_17 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="27-27", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_20 [label="Entry Mock<IScheduleInstant>.cstr", span="", cluster="Mock<IScheduleInstant>.cstr", file="ServerComponentRunnerCollectionFacts.cs"];
m0_52 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerComponentRunnerCollectionFacts.cs"];
m0_199 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_133 [label="Entry Unk.SerializeDateTime", span="", cluster="Unk.SerializeDateTime", file="ServerComponentRunnerCollectionFacts.cs"];
m0_99 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="106-106", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_100 [label="_recurringJob[''Queue''] = ''critical''", span="108-108", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_101 [label="var scheduler = CreateScheduler()", span="109-109", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_102 [label="scheduler.Execute(_context.Object)", span="111-111", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_103 [label="_factory.Verify(x => x.Create(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical'')))", span="113-114", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_104 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="106-106", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_23 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_166 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_21 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerComponentRunnerCollectionFacts.cs"];
m0_213 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="236-236", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_214 [label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="238-238", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_215 [label="var scheduler = CreateScheduler()", span="239-239", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_216 [label="scheduler.Execute(_context.Object)", span="241-241", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_217 [label="_factory.Verify(x => x.Create(It.IsAny<CreateContext>()), Times.Never)", span="243-243", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_218 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="236-236", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_88 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="96-96", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_89 [label="var scheduler = CreateScheduler()", span="98-98", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_90 [label="scheduler.Execute(_context.Object)", span="100-100", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_91 [label="_factory.Verify(x => x.Create(It.IsNotNull<CreateContext>()))", span="102-102", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_92 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="96-96", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_233 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", span="262-262", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_234 [label="_recurringJob[''CreatedAt''] = JobHelper.SerializeDateTime(DateTime.UtcNow)", span="265-265", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_235 [label="var scheduler = CreateScheduler()", span="266-266", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_236 [label="scheduler.Execute(_context.Object)", span="269-269", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_237 [label="_connection.Verify(\r\n                x => x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt''))),\r\n                Times.Never)", span="272-276", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_238 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", span="262-262", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFixCreatedAtField_IfItExists()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_184 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="201-201", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_186 [label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (timeZoneInfo.Id != timeZoneId) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="205-209", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_188 [label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="212-212", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_189 [label="var scheduler = CreateScheduler()", span="213-213", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_190 [label="scheduler.Execute(_context.Object)", span="216-216", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_185 [label="var timeZoneId = PlatformHelper.IsRunningOnWindows() ? ''Hawaiian Standard Time'' : ''Pacific/Honolulu''", span="203-203", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_187 [label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId)", span="211-211", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_191 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="201-201", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_26 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_94 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_207 [label="Entry lambda expression", span="223-227", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_119 [label="Entry lambda expression", span="129-132", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_120 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id))", span="129-132", cluster="lambda expression", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_121 [label="Exit lambda expression", span="129-132", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_123 [label="Entry lambda expression", span="131-132", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_127 [label="Entry lambda expression", span="134-138", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_128 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="134-138", cluster="lambda expression", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_129 [label="Exit lambda expression", span="134-138", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_130 [label="Entry lambda expression", span="136-138", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_134 [label="Entry lambda expression", span="140-144", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_135 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="140-144", cluster="lambda expression", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_136 [label="Exit lambda expression", span="140-144", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_137 [label="Entry lambda expression", span="142-144", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_124 [label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == _backgroundJobMock.Id", span="132-132", cluster="lambda expression", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_125 [label="Exit lambda expression", span="131-132", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_131 [label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="137-138", cluster="lambda expression", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_132 [label="Exit lambda expression", span="136-138", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_138 [label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="143-144", cluster="lambda expression", color=green, community=0, file="ServerComponentRunnerCollectionFacts.cs"];
m0_139 [label="Exit lambda expression", span="142-144", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_43 [label="_instant.Object", span="41-41", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_71 [label="new RecurringJobScheduler(null, _instantFactory, _throttler.Object)", span="70-70", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_79 [label="new RecurringJobScheduler(_factory.Object, null, _throttler.Object)", span="80-80", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_86 [label="new RecurringJobScheduler(_factory.Object, _instantFactory, null)", span="90-90", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_154 [label="x.SetRangeInHash(\r\n                $''recurring-job:{RecurringJobId}'',\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value)))", span="157-161", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_157 [label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant.Value)", span="160-161", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_197 [label="return _instant.Object;", span="208-208", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_210 [label="return _instant.Object;", span="226-226", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_32 [label="x.GetNextInstants(It.IsAny<DateTime>())", span="35-35", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_62 [label="x.Create(It.IsAny<CreateContext>())", span="62-62", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_97 [label="x.Create(It.IsNotNull<CreateContext>())", span="102-102", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_106 [label="x.Create(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical''))", span="113-114", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_148 [label="x.GetNextInstants(It.IsAny<DateTime>())", span="150-150", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_151 [label="x.Create(It.IsAny<CreateContext>())", span="155-155", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_176 [label="x.GetAllItemsFromSet(It.IsAny<string>())", span="179-179", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_220 [label="x.Create(It.IsAny<CreateContext>())", span="243-243", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_240 [label="x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt'')))", span="273-275", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_252 [label="x.SetRangeInHash(\r\n                    $''recurring-job:{RecurringJobId}'',\r\n                    It.Is<Dictionary<string, string>>(rj => rj.ContainsKey(''CreatedAt'')))", span="291-293", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_267 [label="x.GetNextInstants(\r\n                It.Is<DateTime>(time => time < nextExecution))", span="312-313", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_243 [label="rj.ContainsKey(''CreatedAt'')", span="275-275", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_255 [label="rj.ContainsKey(''CreatedAt'')", span="293-293", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_31 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_36 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_39 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_42 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_44 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_45 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_49 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_53 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_57 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_61 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_70 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_72 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_78 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_80 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_85 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_87 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_96 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_105 [label="Entry lambda expression", span="113-114", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_147 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_150 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_153 [label="Entry lambda expression", span="157-161", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_155 [label="Exit lambda expression", span="157-161", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_156 [label="Entry lambda expression", span="159-161", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_158 [label="Exit lambda expression", span="159-161", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_167 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_175 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_195 [label="timeZoneInfo.Id != timeZoneId", span="207-207", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_198 [label="Exit lambda expression", span="205-209", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_208 [label="!timeZoneInfo.Equals(TimeZoneInfo.Utc)", span="225-225", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_211 [label="Exit lambda expression", span="223-227", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_219 [label="Entry lambda expression", span="243-243", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_230 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_239 [label="Entry lambda expression", span="273-275", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_251 [label="Entry lambda expression", span="291-293", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_266 [label="Entry lambda expression", span="312-313", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_33 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_63 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_98 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_107 [label="Exit lambda expression", span="113-114", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_108 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_149 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_152 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_177 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_221 [label="Exit lambda expression", span="243-243", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_241 [label="Exit lambda expression", span="273-275", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_242 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_253 [label="Exit lambda expression", span="291-293", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_254 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_268 [label="Exit lambda expression", span="312-313", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_269 [label="Entry lambda expression", span="313-313", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_244 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_256 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_38 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_37 [label="x.NowInstant", span="36-36", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_41 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_40 [label="x.NextInstant", span="37-37", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_47 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_46 [label="Console.WriteLine()", span="46-46", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_51 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_50 [label="x.GetConnection()", span="51-51", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_55 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_54 [label="x.GetAllItemsFromSet(''recurring-jobs'')", span="53-53", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_59 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_58 [label="x.GetAllEntriesFromHash($''recurring-job:{RecurringJobId}'')", span="56-56", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_168 [label="x.GetNextInstants(time)", span="173-173", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_169 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_194 [label="Entry lambda expression", span="205-209", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_196 [label="throw new InvalidOperationException(''Invalid timezone'');", span="207-207", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_209 [label="throw new InvalidOperationException(''Invalid timezone'');", span="225-225", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_231 [label="x.GetNextInstants(createdAt)", span="258-258", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_232 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_270 [label="time < nextExecution", span="313-313", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_110 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_109 [label="((EnqueuedState)cc.InitialState).Queue == ''critical''", span="114-114", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_271 [label="Exit lambda expression", span="313-313", cluster="lambda expression", file="ServerComponentRunnerCollectionFacts.cs"];
m0_35 [label="Entry Unk.GetNextInstants", span="", cluster="Unk.GetNextInstants", file="ServerComponentRunnerCollectionFacts.cs"];
m0_65 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="66-66", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_66 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _instantFactory, _throttler.Object))", span="68-70", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_67 [label="Assert.Equal(''factory'', exception.ParamName)", span="72-72", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_68 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="66-66", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_229 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_56 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="ServerComponentRunnerCollectionFacts.cs"];
m0_64 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ServerComponentRunnerCollectionFacts.cs"];
m0_183 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_30 [label="Entry Mock<IBackgroundJobFactory>.cstr", span="", cluster="Mock<IBackgroundJobFactory>.cstr", file="ServerComponentRunnerCollectionFacts.cs"];
m0_178 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="188-188", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_179 [label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="191-192", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_180 [label="var scheduler = CreateScheduler()", span="194-194", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_181 [label="scheduler.Execute(_context.Object)", span="197-197", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_182 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="188-188", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_81 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="86-86", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_82 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_factory.Object, _instantFactory, null))", span="88-90", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_83 [label="Assert.Equal(''throttler'', exception.ParamName)", span="92-92", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_84 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="86-86", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_22 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerComponentRunnerCollectionFacts.cs"];
m0_206 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_95 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerComponentRunnerCollectionFacts.cs"];
m0_48 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_24 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerComponentRunnerCollectionFacts.cs"];
m0_126 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ServerComponentRunnerCollectionFacts.cs"];
m0_28 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ServerComponentRunnerCollectionFacts.cs"];
m0_274 [label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span="", file="ServerComponentRunnerCollectionFacts.cs"];
m0_275 [label=jobKey, span="", file="ServerComponentRunnerCollectionFacts.cs"];
m0_279 [label=nextExecution, span="", file="ServerComponentRunnerCollectionFacts.cs"];
m0_277 [label=timeZoneId, span="", file="ServerComponentRunnerCollectionFacts.cs"];
m0_276 [label=time, span="", file="ServerComponentRunnerCollectionFacts.cs"];
m0_278 [label=createdAt, span="", file="ServerComponentRunnerCollectionFacts.cs"];
m1_12 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="ServerComponentRunnerFacts.cs"];
m1_0 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="13-13", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_1 [label="var type = typeof(InvocationDataFacts)", span="15-15", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_2 [label="var methodInfo = type.GetMethod(''Sample'')", span="16-16", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_3 [label="var serializedData = new InvocationData(\r\n                type.AssemblyQualifiedName,\r\n                methodInfo.Name,\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                JobHelper.ToJson(new [] { JobHelper.ToJson(''Hello'') }))", span="18-22", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_5 [label="Assert.Equal(type, job.Type)", span="26-26", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_6 [label="Assert.Equal(methodInfo, job.Method)", span="27-27", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_4 [label="var job = serializedData.Deserialize()", span="24-24", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_7 [label="Assert.Equal(''Hello'', job.Args[0])", span="28-28", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_8 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="13-13", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="ServerComponentRunnerFacts.cs"];
m1_56 [label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="291-291", cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="ServerComponentRunnerFacts.cs"];
m1_63 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="ServerComponentRunnerFacts.cs"];
m1_94 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="ServerComponentRunnerFacts.cs"];
m1_9 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="ServerComponentRunnerFacts.cs"];
m1_49 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="ServerComponentRunnerFacts.cs"];
m1_91 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="ServerComponentRunnerFacts.cs"];
m1_14 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="32-32", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="ServerComponentRunnerFacts.cs"];
m1_15 [label="var serializedData = new InvocationData(null, null, null, null)", span="34-34", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="ServerComponentRunnerFacts.cs"];
m1_16 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="36-37", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="ServerComponentRunnerFacts.cs"];
m1_17 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="32-32", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="ServerComponentRunnerFacts.cs"];
m1_92 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", span="147-147", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", file="ServerComponentRunnerFacts.cs"];
m1_93 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", span="147-147", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", file="ServerComponentRunnerFacts.cs"];
m1_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerComponentRunnerFacts.cs"];
m1_29 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_30 [label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''NonExistingMethod'',\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                '''')", span="56-60", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_31 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="62-63", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_32 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_64 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="ServerComponentRunnerFacts.cs"];
m1_65 [label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method(''asd'', 123)))", span="94-95", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="ServerComponentRunnerFacts.cs"];
m1_66 [label="var job = serializedData.Deserialize()", span="97-97", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="ServerComponentRunnerFacts.cs"];
m1_67 [label="Assert.False(job.Method.ContainsGenericParameters)", span="99-99", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="ServerComponentRunnerFacts.cs"];
m1_68 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="ServerComponentRunnerFacts.cs"];
m1_72 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="ServerComponentRunnerFacts.cs"];
m1_95 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="ServerComponentRunnerFacts.cs"];
m1_58 [label="Entry Unk.False", span="", cluster="Unk.False", file="ServerComponentRunnerFacts.cs"];
m1_73 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_74 [label="var serializedData = new InvocationData(\r\n                typeof(IParent).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="105-109", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_75 [label="var job = serializedData.Deserialize()", span="111-111", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_76 [label="Assert.Equal(typeof(IParent), job.Type)", span="113-113", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_77 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_45 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="ServerComponentRunnerFacts.cs"];
m1_36 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_37 [label="var job = Job.FromExpression(() => Sample(''Hello''))", span="69-69", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_38 [label="var invocationData = InvocationData.Serialize(job)", span="71-71", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_39 [label="Assert.Equal(typeof(InvocationDataFacts).AssemblyQualifiedName, invocationData.Type)", span="73-73", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_40 [label="Assert.Equal(''Sample'', invocationData.Method)", span="74-74", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_41 [label="Assert.Equal(JobHelper.ToJson(new[] { typeof(string) }), invocationData.ParameterTypes)", span="75-75", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_42 [label="Assert.Equal(JobHelper.ToJson(new[] { ''\''Hello\'''' }), invocationData.Arguments)", span="76-76", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_43 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="ServerComponentRunnerFacts.cs"];
m1_50 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="ServerComponentRunnerFacts.cs"];
m1_51 [label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method()))", span="82-83", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="ServerComponentRunnerFacts.cs"];
m1_52 [label="var job = serializedData.Deserialize()", span="85-85", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="ServerComponentRunnerFacts.cs"];
m1_53 [label="Assert.False(job.Type.GetTypeInfo().ContainsGenericParameters)", span="87-87", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="ServerComponentRunnerFacts.cs"];
m1_54 [label="Assert.Equal(typeof(string), job.Type.GetGenericArguments()[0])", span="88-88", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="ServerComponentRunnerFacts.cs"];
m1_55 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="ServerComponentRunnerFacts.cs"];
m1_96 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", span="159-159", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", file="ServerComponentRunnerFacts.cs"];
m1_97 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", span="159-159", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", file="ServerComponentRunnerFacts.cs"];
m1_59 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ServerComponentRunnerFacts.cs"];
m1_11 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerComponentRunnerFacts.cs"];
m1_57 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="ServerComponentRunnerFacts.cs"];
m1_88 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_20 [label="serializedData.Deserialize()", span="37-37", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_19 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_21 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_27 [label="serializedData.Deserialize()", span="50-50", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_26 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_28 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_34 [label="serializedData.Deserialize()", span="63-63", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_33 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_35 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_46 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_47 [label="Sample(''Hello'')", span="69-69", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_48 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_60 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_61 [label="x.Method()", span="83-83", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_62 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_69 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_70 [label="x.Method(''asd'', 123)", span="95-95", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_71 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_89 [label="serializedData.Deserialize()", span="139-139", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_90 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ServerComponentRunnerFacts.cs"];
m1_22 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_23 [label="var serializedData = new InvocationData(\r\n                ''NonExistingType'',\r\n                ''Perform'',\r\n                '''',\r\n                '''')", span="43-47", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_24 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="49-50", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_25 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="ServerComponentRunnerFacts.cs"];
m1_83 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="ServerComponentRunnerFacts.cs"];
m1_84 [label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''ListMethod'',\r\n                JobHelper.ToJson(new [] { typeof(IList<string>) }),\r\n                JobHelper.ToJson(new [] { ''asdfasdf'' }))", span="133-137", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="ServerComponentRunnerFacts.cs"];
m1_85 [label="var exception = Assert.Throws<JobLoadException>(() => serializedData.Deserialize())", span="139-139", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="ServerComponentRunnerFacts.cs"];
m1_86 [label="Assert.IsType<JsonReaderException>(exception.InnerException)", span="140-140", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="ServerComponentRunnerFacts.cs"];
m1_87 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="ServerComponentRunnerFacts.cs"];
m1_78 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_79 [label="var serializedData = new InvocationData(\r\n                typeof(IChild).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="119-123", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_80 [label="var job = serializedData.Deserialize()", span="125-125", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_81 [label="Assert.Equal(typeof(IChild), job.Type)", span="127-127", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_82 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="ServerComponentRunnerFacts.cs"];
m1_10 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ServerComponentRunnerFacts.cs"];
m1_44 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerComponentRunnerFacts.cs"];
m1_98 [label=serializedData, span="", file="ServerComponentRunnerFacts.cs"];
m1_99 [label=serializedData, span="", file="ServerComponentRunnerFacts.cs"];
m1_100 [label=serializedData, span="", file="ServerComponentRunnerFacts.cs"];
m1_101 [label=serializedData, span="", file="ServerComponentRunnerFacts.cs"];
m2_10 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerWatchdogFacts.cs"];
m2_0 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_1 [label="_storage = new Mock<JobStorage>()", span="18-18", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_3 [label="_options = new ServerWatchdogOptions\r\n            {\r\n                CheckInterval = TimeSpan.FromMilliseconds(-1) // To check that it exits by cancellation token\r\n            }", span="20-23", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_4 [label="_token = new CancellationToken(true)", span="24-24", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_5 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="26-26", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_6 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs"];
m2_49 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m2_50 [label="var watchdog = CreateWatchdog()", span="56-56", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m2_51 [label="watchdog.Execute(_token)", span="58-58", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m2_52 [label="_connection.Verify(x => x.RemoveTimedOutServers(_options.ServerTimeout))", span="60-60", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m2_53 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs"];
m2_57 [label="Entry Unk.RemoveTimedOutServers", span="", cluster="Unk.RemoveTimedOutServers", file="ServerWatchdogFacts.cs"];
m2_33 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m2_34 [label="var watchdog = CreateWatchdog()", span="45-45", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m2_35 [label="watchdog.Execute(_token)", span="47-47", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m2_36 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="49-49", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m2_37 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="50-50", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m2_38 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs"];
m2_32 [label="Entry ServerWatchdog.cstr", span="", cluster="ServerWatchdog.cstr", file="ServerWatchdogFacts.cs"];
m2_39 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="63-63", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m2_58 [label="return new ServerWatchdog(_storage.Object, _options);", span="65-65", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m2_59 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="63-63", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs"];
m2_17 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerWatchdogFacts.cs"];
m2_12 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerWatchdogFacts.cs"];
m2_18 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m2_19 [label="Assert.Throws<ArgumentNullException>(() => new ServerWatchdog(null))", span="32-32", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m2_20 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs"];
m2_48 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerWatchdogFacts.cs"];
m2_54 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_14 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_15 [label="x.GetConnection()", span="26-26", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_16 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_22 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_23 [label="new ServerWatchdog(null)", span="32-32", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_24 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_29 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_30 [label="new ServerWatchdog(_storage.Object, null)", span="39-39", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_31 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_42 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_45 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_43 [label="x.GetConnection()", span="49-49", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_44 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_46 [label="x.Dispose()", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_47 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_55 [label="x.RemoveTimedOutServers(_options.ServerTimeout)", span="60-60", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_56 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="ServerWatchdogFacts.cs"];
m2_11 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerWatchdogFacts.cs"];
m2_41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerWatchdogFacts.cs"];
m2_26 [label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m2_27 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ServerWatchdog(_storage.Object, null))", span="38-39", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m2_28 [label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36", cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs"];
m2_40 [label="Entry HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43", cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdogFacts.cs"];
m2_13 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerWatchdogFacts.cs"];
m2_9 [label="Entry HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogFacts.cs"];
m2_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerWatchdogFacts.cs"];
m2_7 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ServerWatchdogFacts.cs"];
m2_25 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerWatchdogFacts.cs"];
m2_60 [label="HangFire.Core.Tests.Server.ServerWatchdogFacts", span="", file="ServerWatchdogFacts.cs"];
n51 -> n20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
n52 -> n27  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
n53 -> n34  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=type];
n1 -> n5  [key=1, style=dashed, color=darkseagreen4, label=type];
n2 -> n3  [key=0, style=solid];
n2 -> n9  [key=2, style=dotted];
n2 -> n6  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
n3 -> n4  [key=0, style=solid];
n3 -> n10  [key=2, style=dotted];
n3 -> n11  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n13  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n13  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label=job];
n4 -> n7  [key=1, style=dashed, color=darkseagreen4, label=job];
n7 -> n8  [key=0, style=solid];
n7 -> n13  [key=2, style=dotted];
n8 -> n0  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n10  [key=2, style=dotted];
n15 -> n20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n16 -> n19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n20 -> n21  [key=0, style=solid];
n20 -> n12  [key=2, style=dotted];
n17 -> n14  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n21 -> n19  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n10  [key=2, style=dotted];
n23 -> n27  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
n24 -> n25  [key=0, style=solid];
n24 -> n18  [key=2, style=dotted];
n24 -> n26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n27 -> n28  [key=0, style=solid];
n27 -> n12  [key=2, style=dotted];
n25 -> n22  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n28 -> n26  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid, color=red];
n30 -> n31  [key=0, style=solid, color=red];
n30 -> n10  [key=2, style=dotted, color=red];
n30 -> n11  [key=2, style=dotted, color=red];
n30 -> n34  [key=1, style=dashed, color=red, label=serializedData];
n31 -> n32  [key=0, style=solid];
n31 -> n18  [key=2, style=dotted];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n34 -> n35  [key=0, style=solid];
n34 -> n12  [key=2, style=dotted];
n32 -> n29  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n35 -> n33  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n44  [key=2, style=dotted];
n37 -> n46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n38 -> n39  [key=0, style=solid];
n38 -> n45  [key=2, style=dotted];
n38 -> n40  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
n38 -> n41  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
n38 -> n42  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
n46 -> n47  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n13  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n13  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n11  [key=2, style=dotted];
n41 -> n13  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n11  [key=2, style=dotted];
n42 -> n13  [key=2, style=dotted];
n43 -> n36  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=2, style=dotted];
n48 -> n46  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n37  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
n50 -> n49  [key=0, style=bold, color=blue];
m0_159 -> m0_160  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_166  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_93  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_94  [key=2, style=dotted];
m0_164 -> m0_95  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=time];
m0_160 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=time];
m0_165 -> m0_159  [key=0, style=bold, color=blue];
m0_257 -> m0_258  [key=0, style=solid];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_166  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_206  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_206  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_93  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_94  [key=2, style=dotted];
m0_264 -> m0_95  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label=nextExecution];
m0_258 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=nextExecution];
m0_258 -> m0_229  [key=2, style=dotted];
m0_258 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=nextExecution];
m0_265 -> m0_257  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_21  [key=2, style=dotted];
m0_171 -> m0_28  [key=2, style=dotted];
m0_171 -> m0_22  [key=2, style=dotted];
m0_171 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_93  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_94  [key=2, style=dotted];
m0_174 -> m0_170  [key=0, style=bold, color=blue];
m0_111 -> m0_112  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid, color=green];
m0_115 -> m0_95  [key=2, style=dotted, color=green];
m0_115 -> m0_119  [key=1, style=dashed, color=green, label="lambda expression"];
m0_114 -> m0_115  [key=0, style=solid, color=green];
m0_114 -> m0_120  [key=1, style=dashed, color=green, label=jobKey];
m0_114 -> m0_116  [key=1, style=dashed, color=green, label=jobKey];
m0_114 -> m0_128  [key=1, style=dashed, color=green, label=jobKey];
m0_114 -> m0_117  [key=1, style=dashed, color=green, label=jobKey];
m0_114 -> m0_135  [key=1, style=dashed, color=green, label=jobKey];
m0_116 -> m0_117  [key=0, style=solid, color=green];
m0_116 -> m0_95  [key=2, style=dotted, color=green];
m0_116 -> m0_127  [key=1, style=dashed, color=green, label="lambda expression"];
m0_117 -> m0_118  [key=0, style=solid, color=green];
m0_117 -> m0_95  [key=2, style=dotted, color=green];
m0_117 -> m0_134  [key=1, style=dashed, color=green, label="lambda expression"];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_93  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_94  [key=2, style=dotted];
m0_118 -> m0_111  [key=0, style=bold, color=blue];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_21  [key=2, style=dotted];
m0_141 -> m0_22  [key=2, style=dotted];
m0_141 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_93  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_94  [key=2, style=dotted];
m0_144 -> m0_95  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_145 -> m0_95  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_146 -> m0_140  [key=0, style=bold, color=blue];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_34  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> n13  [key=2, style=dotted];
m0_77 -> m0_74  [key=0, style=bold, color=blue];
m0_93 -> m0_272  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_73  [key=2, style=dotted];
m0_273 -> m0_93  [key=0, style=bold, color=blue];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_206  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_93  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_94  [key=2, style=dotted];
m0_205 -> m0_200  [key=0, style=bold, color=blue];
m0_222 -> m0_223  [key=0, style=solid];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_166  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_93  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_94  [key=2, style=dotted];
m0_227 -> m0_95  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m0_223 -> m0_229  [key=2, style=dotted];
m0_223 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m0_228 -> m0_222  [key=0, style=bold, color=blue];
m0_245 -> m0_246  [key=0, style=solid];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_206  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_93  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_94  [key=2, style=dotted];
m0_249 -> m0_95  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_250 -> m0_245  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_18  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_19  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_20  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_21  [key=2, style=dotted];
m0_4 -> m0_22  [key=2, style=dotted];
m0_4 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_21  [key=2, style=dotted];
m0_5 -> m0_22  [key=2, style=dotted];
m0_5 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_21  [key=2, style=dotted];
m0_6 -> m0_22  [key=2, style=dotted];
m0_6 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_23  [key=2, style=dotted];
m0_9 -> m0_24  [key=2, style=dotted];
m0_9 -> m0_25  [key=2, style=dotted];
m0_9 -> m0_26  [key=2, style=dotted];
m0_9 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_27  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_21  [key=2, style=dotted];
m0_11 -> m0_22  [key=2, style=dotted];
m0_11 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_28  [key=2, style=dotted];
m0_12 -> m0_22  [key=2, style=dotted];
m0_12 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_21  [key=2, style=dotted];
m0_13 -> m0_22  [key=2, style=dotted];
m0_13 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_29  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_30  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_21  [key=2, style=dotted];
m0_16 -> m0_22  [key=2, style=dotted];
m0_16 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=timeZone1];
m0_17 -> m0_0  [key=0, style=bold, color=blue];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_93  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_94  [key=2, style=dotted];
m0_103 -> m0_95  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_104 -> m0_99  [key=0, style=bold, color=blue];
m0_213 -> m0_214  [key=0, style=solid];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_93  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_94  [key=2, style=dotted];
m0_217 -> m0_95  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_218 -> m0_213  [key=0, style=bold, color=blue];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_93  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_94  [key=2, style=dotted];
m0_91 -> m0_95  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_92 -> m0_88  [key=0, style=bold, color=blue];
m0_233 -> m0_234  [key=0, style=solid];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_166  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_93  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_94  [key=2, style=dotted];
m0_237 -> m0_95  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_238 -> m0_233  [key=0, style=bold, color=blue];
m0_184 -> m0_185  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_93  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_94  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_192  [key=2, style=dotted];
m0_185 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=timeZoneId];
m0_185 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=timeZoneId];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_193  [key=2, style=dotted];
m0_191 -> m0_184  [key=0, style=bold, color=blue];
m0_207 -> m0_208  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid, color=green];
m0_120 -> m0_121  [key=0, style=solid, color=green];
m0_120 -> m0_34  [key=2, style=dotted, color=green];
m0_120 -> m0_122  [key=2, style=dotted, color=green];
m0_120 -> m0_123  [key=1, style=dashed, color=green, label="lambda expression"];
m0_121 -> m0_119  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid, color=green];
m0_127 -> m0_128  [key=0, style=solid, color=green];
m0_128 -> m0_129  [key=0, style=solid, color=green];
m0_128 -> m0_34  [key=2, style=dotted, color=green];
m0_128 -> m0_122  [key=2, style=dotted, color=green];
m0_128 -> m0_130  [key=1, style=dashed, color=green, label="lambda expression"];
m0_129 -> m0_127  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid, color=green];
m0_134 -> m0_135  [key=0, style=solid, color=green];
m0_135 -> m0_136  [key=0, style=solid, color=green];
m0_135 -> m0_34  [key=2, style=dotted, color=green];
m0_135 -> m0_122  [key=2, style=dotted, color=green];
m0_135 -> m0_137  [key=1, style=dashed, color=green, label="lambda expression"];
m0_136 -> m0_134  [key=0, style=bold, color=blue];
m0_137 -> m0_138  [key=0, style=solid, color=green];
m0_124 -> m0_125  [key=0, style=solid, color=green];
m0_124 -> m0_126  [key=2, style=dotted, color=green];
m0_125 -> m0_123  [key=0, style=bold, color=blue];
m0_131 -> m0_132  [key=0, style=solid, color=green];
m0_131 -> m0_126  [key=2, style=dotted, color=green];
m0_131 -> m0_133  [key=2, style=dotted, color=green];
m0_132 -> m0_130  [key=0, style=bold, color=blue];
m0_138 -> m0_139  [key=0, style=solid, color=green];
m0_138 -> m0_126  [key=2, style=dotted, color=green];
m0_138 -> m0_133  [key=2, style=dotted, color=green];
m0_139 -> m0_137  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_73  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_73  [key=2, style=dotted];
m0_154 -> m0_34  [key=2, style=dotted];
m0_154 -> m0_122  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_157 -> m0_126  [key=2, style=dotted];
m0_157 -> m0_133  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_210 -> m0_211  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [key=2, style=dotted];
m0_62 -> m0_34  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=2, style=dotted];
m0_97 -> m0_34  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_64  [key=2, style=dotted];
m0_106 -> m0_34  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_64  [key=2, style=dotted];
m0_106 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_148 -> m0_34  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_35  [key=2, style=dotted];
m0_151 -> m0_34  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_64  [key=2, style=dotted];
m0_176 -> m0_34  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_56  [key=2, style=dotted];
m0_220 -> m0_34  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_64  [key=2, style=dotted];
m0_240 -> m0_34  [key=2, style=dotted];
m0_240 -> m0_122  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_252 -> m0_34  [key=2, style=dotted];
m0_252 -> m0_122  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_267 -> m0_34  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_35  [key=2, style=dotted];
m0_267 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_243 -> m0_126  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_255 -> m0_126  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_44 -> m0_42  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_72 -> m0_70  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_80 -> m0_78  [key=0, style=bold, color=blue];
m0_85 -> m0_86  [key=0, style=solid];
m0_87 -> m0_85  [key=0, style=bold, color=blue];
m0_96 -> m0_97  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_155 -> m0_153  [key=0, style=bold, color=blue];
m0_156 -> m0_157  [key=0, style=solid];
m0_158 -> m0_156  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_195 -> m0_197  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_198 -> m0_194  [key=0, style=bold, color=blue];
m0_208 -> m0_210  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_212  [key=2, style=dotted];
m0_211 -> m0_207  [key=0, style=bold, color=blue];
m0_219 -> m0_220  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_251 -> m0_252  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_63 -> m0_61  [key=0, style=bold, color=blue];
m0_98 -> m0_96  [key=0, style=bold, color=blue];
m0_107 -> m0_105  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_149 -> m0_147  [key=0, style=bold, color=blue];
m0_152 -> m0_150  [key=0, style=bold, color=blue];
m0_177 -> m0_175  [key=0, style=bold, color=blue];
m0_221 -> m0_219  [key=0, style=bold, color=blue];
m0_241 -> m0_239  [key=0, style=bold, color=blue];
m0_242 -> m0_243  [key=0, style=solid];
m0_253 -> m0_251  [key=0, style=bold, color=blue];
m0_254 -> m0_255  [key=0, style=solid];
m0_268 -> m0_266  [key=0, style=bold, color=blue];
m0_269 -> m0_270  [key=0, style=solid];
m0_244 -> m0_242  [key=0, style=bold, color=blue];
m0_256 -> m0_254  [key=0, style=bold, color=blue];
m0_38 -> m0_36  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_47 -> m0_45  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=2, style=dotted];
m0_51 -> m0_49  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=2, style=dotted];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_54 -> m0_56  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=2, style=dotted];
m0_168 -> m0_35  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_169 -> m0_167  [key=0, style=bold, color=blue];
m0_194 -> m0_195  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_196 -> m0_199  [key=2, style=dotted];
m0_209 -> m0_211  [key=0, style=solid];
m0_209 -> m0_199  [key=2, style=dotted];
m0_231 -> m0_35  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_230  [key=0, style=bold, color=blue];
m0_270 -> m0_271  [key=0, style=solid];
m0_110 -> m0_108  [key=0, style=bold, color=blue];
m0_109 -> m0_110  [key=0, style=solid];
m0_271 -> m0_269  [key=0, style=bold, color=blue];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_34  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> n13  [key=2, style=dotted];
m0_68 -> m0_65  [key=0, style=bold, color=blue];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_183  [key=2, style=dotted];
m0_179 -> m0_26  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_93  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_94  [key=2, style=dotted];
m0_182 -> m0_178  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_34  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> n13  [key=2, style=dotted];
m0_84 -> m0_81  [key=0, style=bold, color=blue];
m0_274 -> m0_115  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_120  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_116  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_128  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_117  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_135  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_124  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_131  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_138  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_274 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m0_275 -> m0_120  [key=1, style=dashed, color=green, label=jobKey];
m0_275 -> m0_128  [key=1, style=dashed, color=green, label=jobKey];
m0_275 -> m0_135  [key=1, style=dashed, color=green, label=jobKey];
m0_279 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=nextExecution];
m0_279 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=nextExecution];
m0_277 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=timeZoneId];
m0_276 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=time];
m0_278 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_1 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> n13  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> n13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_4 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> n13  [key=2, style=dotted];
m1_8 -> m1_0  [key=0, style=bold, color=blue];
m1_63 -> m1_94  [key=0, style=solid];
m1_94 -> m1_63  [key=0, style=bold, color=blue];
m1_49 -> m1_91  [key=0, style=solid];
m1_49 -> m1_3  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m1_91 -> m1_49  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_10  [key=2, style=dotted];
m1_15 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_17 -> m1_14  [key=0, style=bold, color=blue];
m1_92 -> m1_93  [key=0, style=solid];
m1_93 -> m1_92  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_10  [key=2, style=dotted];
m1_30 -> m1_11  [key=2, style=dotted];
m1_30 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_18  [key=2, style=dotted];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_32 -> m1_29  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_56  [key=2, style=dotted];
m1_65 -> m1_45  [key=2, style=dotted];
m1_65 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_12  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_58  [key=2, style=dotted];
m1_68 -> m1_64  [key=0, style=bold, color=blue];
m1_72 -> m1_95  [key=0, style=solid];
m1_72 -> m1_65  [key=3, color=darkorchid, style=bold, label="Parameter variable T2 arg2"];
m1_95 -> m1_72  [key=0, style=bold, color=blue];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_10  [key=2, style=dotted];
m1_74 -> m1_11  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_12  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> n13  [key=2, style=dotted];
m1_77 -> m1_73  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_44  [key=2, style=dotted];
m1_37 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_45  [key=2, style=dotted];
m1_38 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m1_38 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m1_38 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> n13  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> n13  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_11  [key=2, style=dotted];
m1_41 -> n13  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_11  [key=2, style=dotted];
m1_42 -> n13  [key=2, style=dotted];
m1_43 -> m1_36  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_56  [key=2, style=dotted];
m1_51 -> m1_45  [key=2, style=dotted];
m1_51 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_12  [key=2, style=dotted];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_57  [key=2, style=dotted];
m1_53 -> m1_58  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> n13  [key=2, style=dotted];
m1_55 -> m1_50  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_96  [key=0, style=bold, color=blue];
m1_88 -> m1_89  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_12  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_21 -> m1_19  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_12  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_12  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=2, style=dotted];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_12  [key=2, style=dotted];
m1_90 -> m1_88  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_10  [key=2, style=dotted];
m1_23 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_18  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_25 -> m1_22  [key=0, style=bold, color=blue];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_10  [key=2, style=dotted];
m1_84 -> m1_11  [key=2, style=dotted];
m1_84 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_18  [key=2, style=dotted];
m1_85 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_18  [key=2, style=dotted];
m1_87 -> m1_83  [key=0, style=bold, color=blue];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_10  [key=2, style=dotted];
m1_79 -> m1_11  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_12  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> n13  [key=2, style=dotted];
m1_82 -> m1_78  [key=0, style=bold, color=blue];
m1_98 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_99 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_100 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m1_101 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_12  [key=2, style=dotted];
m2_5 -> m2_13  [key=2, style=dotted];
m2_5 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_49 -> m2_50  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_39  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_40  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_41  [key=2, style=dotted];
m2_52 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_53 -> m2_49  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_39  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_40  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_41  [key=2, style=dotted];
m2_36 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_41  [key=2, style=dotted];
m2_37 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_38 -> m2_33  [key=0, style=bold, color=blue];
m2_39 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_32  [key=2, style=dotted];
m2_59 -> m2_39  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> n18  [key=2, style=dotted];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_54 -> m2_55  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=2, style=dotted];
m2_16 -> m2_14  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_31 -> m2_29  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_17  [key=2, style=dotted];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [key=2, style=dotted];
m2_47 -> m2_45  [key=0, style=bold, color=blue];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_57  [key=2, style=dotted];
m2_56 -> m2_54  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> n18  [key=2, style=dotted];
m2_27 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_60 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
m2_60 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerWatchdogFacts"];
}
