digraph  {
m0_4 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.RabbitMqChannel(System.Collections.Generic.IEnumerable<string>)", span="10-10"];
m0_5 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqChannel.CreateQueue()", span="18-18"];
m0_6 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", span="20-20"];
m0_7 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: Monitor.Enter(GlobalLock)", span="22-22"];
m0_8 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="0: _queues", span="23-23"];
m0_10 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: _rabbitMq.Channel.QueuePurge(queue)", span="26-26"];
m0_9 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: _rabbitMq.Channel.QueueDeclare(queue, true, false, false, null)", span="25-25"];
m0_11 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: _rabbitMq.Dispose()", span="28-28"];
m0_12 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", file="CleanRabbitMqQueueAttribute.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.Before(System.Reflection.MethodInfo)", span="20-20"];
m0_17 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", span="31-31"];
m0_18 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: Monitor.Exit(GlobalLock)", span="33-33"];
m0_19 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", file="CleanRabbitMqQueueAttribute.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.After(System.Reflection.MethodInfo)", span="31-31"];
m0_20 [cluster="System.Threading.Monitor.Exit(object)", file="CleanRabbitMqQueueAttribute.cs", label="Entry System.Threading.Monitor.Exit(object)", span="0-0"];
m0_15 [cluster="Unk.QueuePurge", file="CleanRabbitMqQueueAttribute.cs", label="Entry Unk.QueuePurge", span=""];
m0_14 [cluster="Unk.QueueDeclare", file="CleanRabbitMqQueueAttribute.cs", label="Entry Unk.QueueDeclare", span=""];
m0_21 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36"];
m0_22 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: return new RabbitMqChannel(queue).CreateQueue();", span="38-38"];
m0_23 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="CleanRabbitMqQueueAttribute.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36"];
m0_16 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Dispose()", span="82-82"];
m0_0 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", file="CleanRabbitMqQueueAttribute.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", span="14-14"];
m0_1 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: _queues = queues", span="16-16"];
m0_2 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", color=green, community=0, file="CleanRabbitMqQueueAttribute.cs", label="1: _rabbitMq = new RabbitMqChannel(_queues).CreateQueue()", span="17-17"];
m0_3 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", file="CleanRabbitMqQueueAttribute.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.CleanRabbitMqQueueAttribute(params string[])", span="14-14"];
m0_13 [cluster="System.Threading.Monitor.Enter(object)", file="CleanRabbitMqQueueAttribute.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m0_24 [file="CleanRabbitMqQueueAttribute.cs", label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", span=""];
m3_12 [cluster="System.TimeSpan.FromSeconds(double)", file="RabbitMqJobQueue.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_13 [cluster="System.TimeSpan.FromMinutes(double)", file="RabbitMqJobQueue.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RabbitMqJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
m3_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: TransactionIsolationLevel = null", span="32-32"];
m3_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: QueuePollInterval = TimeSpan.FromSeconds(15)", span="33-33"];
m3_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: UseInvisibilityTimeout = false", span="34-34"];
m3_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="35-35"];
m3_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: JobExpirationCheckInterval = TimeSpan.FromMinutes(30)", span="36-36"];
m3_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="37-37"];
m3_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: PrepareSchemaIfNecessary = true", span="38-38"];
m3_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: DashboardJobListLimit = 10000", span="39-39"];
m3_9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: _schemaName = Constants.DefaultSchema", span="40-40"];
m3_10 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="RabbitMqJobQueue.cs", label="1: TransactionTimeout = TimeSpan.FromMinutes(1)", span="41-41"];
m3_11 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RabbitMqJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
m3_14 [file="RabbitMqJobQueue.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m4_31 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="40-40"];
m4_56 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="92-92"];
m4_57 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id9'')", span="95-95"];
m4_58 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="97-97"];
m4_59 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="100-100"];
m4_60 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.NotNull(fetchedJob)", span="103-103"];
m4_61 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var exception = Assert.Throws<TimeoutException>(\r\n                    () => RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="105-106"];
m4_62 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(exception.Message, ''my-queue'')", span="108-108"];
m4_63 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="92-92"];
m4_32 [cluster="HangFire.Storage.IFetchedJob.RemoveFromQueue()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m4_69 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqUtils.DequeueJobId(string, System.TimeSpan)", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqUtils.DequeueJobId(string, System.TimeSpan)", span="22-22"];
m4_9 [cluster="Unk.Equal", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.Equal", span=""];
m4_3 [cluster="System.Threading.CancellationToken.CancellationToken()", file="RabbitMqJobQueueFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m4_41 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="68-68"];
m4_42 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="70-70"];
m4_43 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var token = new CancellationToken(true)", span="72-72"];
m4_44 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(new[] {''my-queue''}, token))", span="74-75"];
m4_45 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="68-68"];
m4_14 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="26-26"];
m4_15 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RabbitMqJobQueue(new[]{''my-queue''}, null))", span="28-29"];
m4_16 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''factory'', exception.ParamName)", span="31-31"];
m4_17 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="26-26"];
m4_33 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="54-54"];
m4_34 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="56-56"];
m4_35 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="58-58"];
m4_36 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="60-60"];
m4_37 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: fetchedJob.RemoveFromQueue()", span="61-61"];
m4_38 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''job-id'', fetchedJob.JobId)", span="63-63"];
m4_39 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="54-54"];
m4_21 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", span="35-35"];
m4_22 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="38-38"];
m4_23 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: queue.Enqueue(''my-queue'', ''job-id'')", span="41-41"];
m4_24 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="44-44"];
m4_25 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: fetchedJob.RemoveFromQueue()", span="45-45"];
m4_26 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var body = fetchedJob.JobId", span="47-47"];
m4_27 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''job-id'', body)", span="49-49"];
m4_28 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", span="35-35"];
m4_8 [cluster="Unk.>", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.>", span=""];
m4_68 [cluster="System.TimeSpan.FromSeconds(double)", file="RabbitMqJobQueueFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_90 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", span="152-152"];
m4_91 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="155-155"];
m4_92 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="157-157"];
m4_93 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="160-160"];
m4_95 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var newFetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="164-164"];
m4_94 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: fetchedJob.Dispose()", span="161-161"];
m4_96 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''job-id'', newFetchedJob.JobId)", span="166-166"];
m4_97 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", span="152-152"];
m4_30 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.Enqueue(string, string)", span="73-73"];
m4_64 [cluster="Unk.NotNull", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.NotNull", span=""];
m4_50 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="80-80"];
m4_51 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.EnqueueJobId(''queue-2'', ''job-id'')", span="82-82"];
m4_52 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''queue-1'', ''queue-2'')", span="83-83"];
m4_53 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] {''queue-1'', ''queue-2''}, _token)", span="85-85"];
m4_54 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''job-id'', fetchedJob.JobId)", span="87-87"];
m4_55 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="80-80"];
m4_0 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", span="11-11"];
m4_1 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: _token = new CancellationToken()", span="13-13"];
m4_2 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", span="11-11"];
m4_70 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="113-113"];
m4_71 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="116-116"];
m4_72 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="117-117"];
m4_73 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="120-120"];
m4_74 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: fetchedJob.RemoveFromQueue()", span="122-122"];
m4_75 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var exception = Assert.Throws<TimeoutException>(\r\n                    () => RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="126-127"];
m4_76 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(exception.Message, ''my-queue'')", span="129-129"];
m4_77 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="113-113"];
m4_40 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqUtils.EnqueueJobId(string, string)", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqUtils.EnqueueJobId(string, string)", span="9-9"];
m4_78 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="127-127"];
m4_10 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="20-20"];
m4_11 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: new RabbitMqJobQueue(null, null)", span="20-20"];
m4_12 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="20-20"];
m4_18 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="29-29"];
m4_19 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: new RabbitMqJobQueue(new[]{''my-queue''}, null)", span="29-29"];
m4_20 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="29-29"];
m4_48 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: queue.Dequeue(new[] {''my-queue''}, token)", span="75-75"];
m4_47 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="75-75"];
m4_49 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="75-75"];
m4_65 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="106-106"];
m4_66 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="106-106"];
m4_67 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="106-106"];
m4_79 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="127-127"];
m4_80 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="127-127"];
m4_29 [cluster="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36"];
m4_46 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="RabbitMqJobQueueFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m4_13 [cluster="HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="22-22"];
m4_81 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="134-134"];
m4_82 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="137-137"];
m4_83 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="139-139"];
m4_84 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="142-142"];
m4_85 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: fetchedJob.Dispose()", span="143-143"];
m4_86 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var jobId = RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="146-146"];
m4_87 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''job-id'', jobId)", span="147-147"];
m4_88 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="134-134"];
m4_89 [cluster="System.IDisposable.Dispose()", file="RabbitMqJobQueueFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_4 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="17-17"];
m4_5 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RabbitMqJobQueue(null, null))", span="19-20"];
m4_6 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="RabbitMqJobQueueFacts.cs", label="1: Assert.Equal(''queues'', exception.ParamName)", span="22-22"];
m4_7 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="17-17"];
m4_98 [file="RabbitMqJobQueueFacts.cs", label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", span=""];
m4_99 [file="RabbitMqJobQueueFacts.cs", label=queue, span=""];
m4_100 [file="RabbitMqJobQueueFacts.cs", label=token, span=""];
m5_2 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13"];
m5_3 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", color=green, community=0, file="RabbitMqJobQueueProvider.cs", label="1: WorkerNumber = workerNumber", span="16-16"];
m5_4 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="RabbitMqJobQueueProvider.cs", label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13"];
m5_5 [file="RabbitMqJobQueueProvider.cs", label="HangFire.Server.WorkerContext", span=""];
m6_7 [cluster="Unk.NotNull", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Unk.NotNull", span=""];
m6_6 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue(IDbConnection)", span="27-27"];
m6_13 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="32-32"];
m6_17 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", span="15-15"];
m6_8 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m6_9 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: var provider = CreateProvider()", span="25-25"];
m6_10 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: var monitoring = provider.GetJobQueueMonitoringApi(null)", span="27-27"];
m6_11 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: Assert.NotNull(monitoring)", span="29-29"];
m6_12 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m6_5 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m6_14 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="0: Action<ConnectionFactory> configuration =\r\n                con =>\r\n                {\r\n                    con.HostName = HostName;\r\n                }", span="34-38"];
m6_15 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: return new RabbitMqJobQueueProvider(Queue, configuration);", span="40-40"];
m6_16 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m6_0 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m6_1 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: var provider = CreateProvider()", span="15-15"];
m6_2 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: var jobQueue = provider.GetJobQueue(null)", span="17-17"];
m6_3 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: Assert.NotNull(jobQueue)", span="19-19"];
m6_4 [cluster="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m6_18 [cluster="lambda expression", file="RabbitMqJobQueueProviderFacts.cs", label="Entry lambda expression", span="35-38"];
m6_19 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="1: con.HostName = HostName", span="37-37"];
m6_20 [cluster="lambda expression", file="RabbitMqJobQueueProviderFacts.cs", label="Exit lambda expression", span="35-38"];
m7_0 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="17-17"];
m7_1 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerJobQueue(null, new SqlServerStorageOptions()))", span="19-20"];
m7_2 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: Assert.Equal(''storage'', exception.ParamName)", span="22-22"];
m7_3 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="17-17"];
m7_220 [cluster="System.DateTime.AddMinutes(double)", file="RabbitMqMonitoringApi.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m7_23 [cluster="Unk.UseConnection", file="RabbitMqMonitoringApi.cs", label="Entry Unk.UseConnection", span=""];
m7_101 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchTimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchTimedOutJobs_FromTheSpecifiedQueue()", span="148-148"];
m7_103 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchTimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    });\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                // Act\r\n                var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotEmpty(payload.JobId);\r\n            })", span="157-177"];
m7_102 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchTimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, dateadd(minute, -60, getutcdate()))\r\ninsert into HangFire.JobQueue (JobId, Queue, FetchedAt)\r\nvalues (scope_identity(), @queue, @fetchedAt)''", span="150-154"];
m7_104 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchTimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchTimedOutJobs_FromTheSpecifiedQueue()", span="148-148"];
m7_5 [cluster="Unk.Equal", file="RabbitMqMonitoringApi.cs", label="Entry Unk.Equal", span=""];
m7_207 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", span="361-361"];
m7_209 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' });\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                // Act\r\n                var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotNull(payload);\r\n\r\n                var fetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId = @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.NotNull(fetchedAt);\r\n                Assert.True(fetchedAt > DateTime.UtcNow.AddMinutes(-1));\r\n            })", span="370-391"];
m7_208 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="363-367"];
m7_210 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", span="361-361"];
m7_10 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
m7_172 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="306-306"];
m7_173 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource();\r\n                cts.Cancel();\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token));\r\n            })", span="308-316"];
m7_174 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="306-306"];
m7_56 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RabbitMqMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m7_232 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="428-428"];
m7_234 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    });\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                // Act\r\n                var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.Null(otherJobFetchedAt);\r\n            })", span="437-459"];
m7_233 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="430-434"];
m7_235 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="428-428"];
m7_184 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="320-320"];
m7_185 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource(200);\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token));\r\n            })", span="322-329"];
m7_186 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="320-320"];
m7_136 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_FromMultipleQueues()", span="240-240"];
m7_138 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    });\r\n\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                var critical = (SqlServerTransactionJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(critical.JobId);\r\n                Assert.Equal(''critical'', critical.Queue);\r\n\r\n                var @default = (SqlServerTransactionJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(@default.JobId);\r\n                Assert.Equal(''default'', @default.Queue);\r\n            })", span="248-273"];
m7_137 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="242-246"];
m7_139 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_FromMultipleQueues()", span="240-240"];
m7_285 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="RabbitMqMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m7_4 [cluster="Unk.>", file="RabbitMqMonitoringApi.cs", label="Entry Unk.>", span=""];
m7_9 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="40-40"];
m7_11 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="26-26"];
m7_12 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerJobQueue(new SqlServerStorage(ConnectionUtils.GetConnectionString()), null))", span="28-29"];
m7_13 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: Assert.Equal(''options'', exception.ParamName)", span="31-31"];
m7_14 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="26-26"];
m7_35 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="49-49"];
m7_36 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                var exception = Assert.Throws<ArgumentException>(\r\n                    () => queue.Dequeue(new string[0], CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="51-59"];
m7_37 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="49-49"];
m7_68 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(int)", file="RabbitMqMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(int)", span="0-0"];
m7_222 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", span="395-395"];
m7_224 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    });\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                // Act\r\n                var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotEmpty(payload.JobId);\r\n            })", span="404-424"];
m7_223 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue, FetchedAt)\r\nvalues (scope_identity(), @queue, @fetchedAt)''", span="397-401"];
m7_225 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", span="395-395"];
m7_286 [cluster="System.TimeSpan.FromSeconds(double)", file="RabbitMqMonitoringApi.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m7_20 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="35-35"];
m7_21 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => queue.Dequeue(null, CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="37-45"];
m7_22 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="35-35"];
m7_83 [cluster="Unk.Query", file="RabbitMqMonitoringApi.cs", label="Entry Unk.Query", span=""];
m7_255 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_FromMultipleQueues()", span="487-487"];
m7_257 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    });\r\n\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                var critical = (SqlServerTimeoutJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(critical.JobId);\r\n                Assert.Equal(''critical'', critical.Queue);\r\n\r\n                var @default = (SqlServerTimeoutJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(@default.JobId);\r\n                Assert.Equal(''default'', @default.Queue);\r\n            })", span="495-520"];
m7_256 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="489-493"];
m7_258 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_FromMultipleQueues()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_FromMultipleQueues()", span="487-487"];
m7_280 [cluster="Unk.Enqueue", file="RabbitMqMonitoringApi.cs", label="Entry Unk.Enqueue", span=""];
m7_18 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="43-43"];
m7_161 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="292-292"];
m7_162 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                var exception = Assert.Throws<ArgumentException>(\r\n                    () => queue.Dequeue(new string[0], CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="294-302"];
m7_163 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="292-292"];
m7_281 [cluster="Unk.ToString", file="RabbitMqMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m7_111 [cluster="System.DateTime.AddDays(double)", file="RabbitMqMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m7_98 [cluster="Unk.NotNull", file="RabbitMqMonitoringApi.cs", label="Entry Unk.NotNull", span=""];
m7_150 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="278-278"];
m7_151 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => queue.Dequeue(null, CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="280-288"];
m7_152 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="278-278"];
m7_243 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="463-463"];
m7_245 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' });\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()));\r\n            })", span="471-483"];
m7_244 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="465-469"];
m7_246 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="463-463"];
m7_195 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchAJob_FromTheSpecifiedQueue()", span="333-333"];
m7_197 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var id = (int)connection.Query(\r\n                    arrangeSql,\r\n                    new { jobId = 1, queue = ''default'' }).Single().Id;\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: true);\r\n\r\n                // Act\r\n                var payload = (SqlServerTimeoutJob)queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.Equal(id, payload.Id);\r\n                Assert.Equal(''1'', payload.JobId);\r\n                Assert.Equal(''default'', payload.Queue);\r\n            })", span="341-357"];
m7_196 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue);\r\nselect scope_identity() as Id;''", span="335-338"];
m7_198 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_InvisibilityTimeout_ShouldFetchAJob_FromTheSpecifiedQueue()", span="333-333"];
m7_85 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldDeleteAJob()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldDeleteAJob()", span="118-118"];
m7_87 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldDeleteAJob()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' });\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                // Act\r\n                var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotNull(payload);\r\n\r\n                var jobInQueue = connection.Query(''select * from HangFire.JobQueue'').SingleOrDefault();\r\n                Assert.Null(jobInQueue);\r\n            })", span="127-144"];
m7_86 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldDeleteAJob()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="120-124"];
m7_88 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldDeleteAJob()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldDeleteAJob()", span="118-118"];
m7_269 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Enqueue_AddsAJobToTheQueue()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Enqueue_AddsAJobToTheQueue()", span="524-524"];
m7_270 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Enqueue_AddsAJobToTheQueue()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                queue.Enqueue(connection, ''default'', ''1'');\r\n\r\n                var record = connection.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="526-536"];
m7_271 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Enqueue_AddsAJobToTheQueue()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Enqueue_AddsAJobToTheQueue()", span="524-524"];
m7_292 [cluster="SqlServerStorage.cstr", file="RabbitMqMonitoringApi.cs", label="Entry SqlServerStorage.cstr", span=""];
m7_100 [cluster="Unk.Null", file="RabbitMqMonitoringApi.cs", label="Entry Unk.Null", span=""];
m7_55 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RabbitMqMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m7_113 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="181-181"];
m7_115 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    });\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                // Act\r\n                var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.Null(otherJobFetchedAt);\r\n            })", span="190-212"];
m7_114 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="183-187"];
m7_116 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="181-181"];
m7_272 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="526-536"];
m7_6 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="20-20"];
m7_7 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: new SqlServerJobQueue(null, new SqlServerStorageOptions())", span="20-20"];
m7_8 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="20-20"];
m7_15 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="29-29"];
m7_16 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: new SqlServerJobQueue(new SqlServerStorage(ConnectionUtils.GetConnectionString()), null)", span="29-29"];
m7_17 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="29-29"];
m7_24 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="37-45"];
m7_25 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="39-39"];
m7_26 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => queue.Dequeue(null, CreateTimingOutCancellationToken()))", span="41-42"];
m7_31 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: queue.Dequeue(null, CreateTimingOutCancellationToken())", span="42-42"];
m7_27 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: Assert.Equal(''queues'', exception.ParamName)", span="44-44"];
m7_30 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="42-42"];
m7_32 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="42-42"];
m7_28 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="37-45"];
m7_38 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="51-59"];
m7_39 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="53-53"];
m7_40 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var exception = Assert.Throws<ArgumentException>(\r\n                    () => queue.Dequeue(new string[0], CreateTimingOutCancellationToken()))", span="55-56"];
m7_44 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: queue.Dequeue(new string[0], CreateTimingOutCancellationToken())", span="56-56"];
m7_41 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: Assert.Equal(''queues'', exception.ParamName)", span="58-58"];
m7_43 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="56-56"];
m7_45 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="56-56"];
m7_42 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="51-59"];
m7_49 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="65-73"];
m7_50 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var cts = new CancellationTokenSource()", span="67-67"];
m7_51 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: cts.Cancel()", span="68-68"];
m7_53 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token))", span="71-72"];
m7_58 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: queue.Dequeue(DefaultQueues, cts.Token)", span="72-72"];
m7_52 [cluster="lambda expression", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="69-69"];
m7_54 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="65-73"];
m7_57 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="72-72"];
m7_59 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="72-72"];
m7_66 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token))", span="84-85"];
m7_121 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single()", span="207-209"];
m7_131 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()))", span="232-235"];
m7_155 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => queue.Dequeue(null, CreateTimingOutCancellationToken()))", span="284-285"];
m7_166 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                    () => queue.Dequeue(new string[0], CreateTimingOutCancellationToken()))", span="298-299"];
m7_179 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token))", span="314-315"];
m7_190 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token))", span="327-328"];
m7_216 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var fetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId = @id'',\r\n                    new { id = payload.JobId }).Single()", span="385-387"];
m7_240 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single()", span="454-456"];
m7_250 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()))", span="479-482"];
m7_80 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''1'', payload.JobId)", span="112-112"];
m7_81 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''default'', payload.Queue)", span="113-113"];
m7_145 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''critical'', critical.Queue)", span="265-265"];
m7_148 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''default'', @default.Queue)", span="272-272"];
m7_156 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="287-287"];
m7_167 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="301-301"];
m7_203 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(id, payload.Id)", span="354-354"];
m7_204 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''1'', payload.JobId)", span="355-355"];
m7_205 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''default'', payload.Queue)", span="356-356"];
m7_264 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''critical'', critical.Queue)", span="512-512"];
m7_267 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''default'', @default.Queue)", span="519-519"];
m7_276 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''1'', record.JobId.ToString())", span="533-533"];
m7_277 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Equal(''default'', record.Queue)", span="534-534"];
m7_65 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="82-82"];
m7_78 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="104-104"];
m7_91 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="132-132"];
m7_107 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="168-168"];
m7_119 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="199-199"];
m7_129 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="226-226"];
m7_142 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="258-258"];
m7_154 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="282-282"];
m7_165 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="296-296"];
m7_178 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="312-312"];
m7_189 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="325-325"];
m7_201 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="346-346"];
m7_213 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="375-375"];
m7_228 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="415-415"];
m7_238 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="446-446"];
m7_248 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="473-473"];
m7_261 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: true)", span="505-505"];
m7_273 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var queue = CreateJobQueue(connection, invisibilityTimeout: false)", span="528-528"];
m7_79 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = (SqlServerTransactionJob)queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="107-109"];
m7_92 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="135-137"];
m7_108 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="171-173"];
m7_120 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="202-204"];
m7_134 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken())", span="233-235"];
m7_143 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var critical = (SqlServerTransactionJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="260-262"];
m7_146 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var @default = (SqlServerTransactionJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="267-269"];
m7_159 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(null, CreateTimingOutCancellationToken())", span="285-285"];
m7_170 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(new string[0], CreateTimingOutCancellationToken())", span="299-299"];
m7_202 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = (SqlServerTimeoutJob)queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="349-351"];
m7_214 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="378-380"];
m7_229 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="418-420"];
m7_239 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="449-451"];
m7_253 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken())", span="480-482"];
m7_262 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var critical = (SqlServerTimeoutJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="507-509"];
m7_265 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var @default = (SqlServerTimeoutJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="514-516"];
m7_70 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(DefaultQueues, cts.Token)", span="85-85"];
m7_182 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(DefaultQueues, cts.Token)", span="315-315"];
m7_193 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Dequeue(DefaultQueues, cts.Token)", span="328-328"];
m7_176 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var cts = new CancellationTokenSource()", span="310-310"];
m7_177 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="cts.Cancel()", span="311-311"];
m7_64 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var cts = new CancellationTokenSource(200)", span="81-81"];
m7_67 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="79-86"];
m7_69 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="85-85"];
m7_117 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="190-212"];
m7_122 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Null(otherJobFetchedAt)", span="211-211"];
m7_130 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' })", span="228-230"];
m7_132 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="224-236"];
m7_133 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="233-235"];
m7_158 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="285-285"];
m7_169 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="299-299"];
m7_180 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="308-316"];
m7_181 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="315-315"];
m7_188 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var cts = new CancellationTokenSource(200)", span="324-324"];
m7_191 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="322-329"];
m7_192 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="328-328"];
m7_211 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="370-391"];
m7_215 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(payload)", span="383-383"];
m7_217 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(fetchedAt)", span="389-389"];
m7_218 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.True(fetchedAt > DateTime.UtcNow.AddMinutes(-1))", span="390-390"];
m7_236 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="437-459"];
m7_241 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Null(otherJobFetchedAt)", span="458-458"];
m7_249 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' })", span="475-477"];
m7_251 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="471-483"];
m7_252 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="480-482"];
m7_82 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="98-114"];
m7_144 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(critical.JobId)", span="264-264"];
m7_147 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(@default.JobId)", span="271-271"];
m7_149 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="248-273"];
m7_157 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="280-288"];
m7_168 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="294-302"];
m7_200 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var id = (int)connection.Query(\r\n                    arrangeSql,\r\n                    new { jobId = 1, queue = ''default'' }).Single().Id", span="343-345"];
m7_206 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="341-357"];
m7_263 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(critical.JobId)", span="511-511"];
m7_266 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(@default.JobId)", span="518-518"];
m7_268 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="495-520"];
m7_275 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var record = connection.Query(''select * from HangFire.JobQueue'').Single()", span="532-532"];
m7_278 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Null(record.FetchedAt)", span="535-535"];
m7_63 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="79-86"];
m7_76 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="98-114"];
m7_89 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="127-144"];
m7_105 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="157-177"];
m7_128 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="224-236"];
m7_140 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="248-273"];
m7_153 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="280-288"];
m7_164 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="294-302"];
m7_175 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="308-316"];
m7_187 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="322-329"];
m7_199 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="341-357"];
m7_226 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="404-424"];
m7_247 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="471-483"];
m7_259 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Entry lambda expression", span="495-520"];
m7_77 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var id = (int)connection.Query(\r\n                    arrangeSql,\r\n                    new { jobId = 1, queue = ''default'' }).Single().Id", span="101-103"];
m7_90 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' })", span="129-131"];
m7_106 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    })", span="159-167"];
m7_118 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    })", span="192-198"];
m7_141 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    })", span="250-256"];
m7_212 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' })", span="372-374"];
m7_227 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    })", span="406-414"];
m7_237 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    })", span="439-445"];
m7_260 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    })", span="497-503"];
m7_274 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="queue.Enqueue(connection, ''default'', ''1'')", span="530-530"];
m7_93 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotNull(payload)", span="140-140"];
m7_109 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotEmpty(payload.JobId)", span="176-176"];
m7_135 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="233-235"];
m7_160 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="285-285"];
m7_171 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="299-299"];
m7_230 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.NotEmpty(payload.JobId)", span="423-423"];
m7_254 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="480-482"];
m7_71 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="85-85"];
m7_183 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="315-315"];
m7_194 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="328-328"];
m7_123 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="190-212"];
m7_219 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="370-391"];
m7_242 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="437-459"];
m7_279 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="526-536"];
m7_96 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="127-144"];
m7_94 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="var jobInQueue = connection.Query(''select * from HangFire.JobQueue'').SingleOrDefault()", span="142-142"];
m7_110 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="157-177"];
m7_95 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Assert.Null(jobInQueue)", span="143-143"];
m7_231 [cluster="lambda expression", file="RabbitMqMonitoringApi.cs", label="Exit lambda expression", span="404-424"];
m7_33 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", span="539-539"];
m7_282 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="RabbitMqMonitoringApi.cs", label="var source = new CancellationTokenSource(TimeSpan.FromSeconds(10))", span="541-541"];
m7_283 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="RabbitMqMonitoringApi.cs", label="return source.Token;", span="542-542"];
m7_284 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", span="539-539"];
m7_60 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="77-77"];
m7_61 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource(200);\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token));\r\n            })", span="79-86"];
m7_62 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="77-77"];
m7_124 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="216-216"];
m7_126 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' });\r\n                \r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()));\r\n            })", span="224-236"];
m7_125 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="218-222"];
m7_127 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="216-216"];
m7_112 [cluster="Unk.NotEmpty", file="RabbitMqMonitoringApi.cs", label="Entry Unk.NotEmpty", span=""];
m7_84 [cluster="Unk.Single", file="RabbitMqMonitoringApi.cs", label="Entry Unk.Single", span=""];
m7_19 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m7_221 [cluster="Unk.True", file="RabbitMqMonitoringApi.cs", label="Entry Unk.True", span=""];
m7_97 [cluster="Unk.Execute", file="RabbitMqMonitoringApi.cs", label="Entry Unk.Execute", span=""];
m7_29 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection, bool)", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection, bool)", span="547-547"];
m7_290 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection, bool)", file="RabbitMqMonitoringApi.cs", label="return new SqlServerJobQueue(storage, new SqlServerStorageOptions { UseInvisibilityTimeout = invisibilityTimeout });", span="550-550"];
m7_289 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection, bool)", file="RabbitMqMonitoringApi.cs", label="var storage = new SqlServerStorage(connection)", span="549-549"];
m7_291 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection, bool)", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection, bool)", span="547-547"];
m7_72 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", span="90-90"];
m7_74 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="UseConnection(connection =>\r\n            {\r\n                // ReSharper disable once UnusedVariable\r\n                var id = (int)connection.Query(\r\n                    arrangeSql,\r\n                    new { jobId = 1, queue = ''default'' }).Single().Id;\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                // Act\r\n                var payload = (SqlServerTransactionJob)queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', payload.JobId);\r\n                Assert.Equal(''default'', payload.Queue);\r\n            })", span="98-114"];
m7_73 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue);\r\nselect scope_identity() as Id;''", span="92-95"];
m7_75 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", span="90-90"];
m7_99 [cluster="Unk.SingleOrDefault", file="RabbitMqMonitoringApi.cs", label="Entry Unk.SingleOrDefault", span=""];
m7_34 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="50-50"];
m7_46 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="RabbitMqMonitoringApi.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="63-63"];
m7_47 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", color=green, community=0, file="RabbitMqMonitoringApi.cs", label="1: UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource();\r\n                cts.Cancel();\r\n                var queue = CreateJobQueue(connection, invisibilityTimeout: false);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token));\r\n            })", span="65-73"];
m7_48 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="RabbitMqMonitoringApi.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="63-63"];
m7_299 [file="RabbitMqMonitoringApi.cs", label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", span=""];
m7_300 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_301 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_302 [file="RabbitMqMonitoringApi.cs", label=cts, span=""];
m7_303 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_311 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_313 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_314 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_324 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_304 [file="RabbitMqMonitoringApi.cs", label=cts, span=""];
m7_305 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_315 [file="RabbitMqMonitoringApi.cs", label=cts, span=""];
m7_316 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_317 [file="RabbitMqMonitoringApi.cs", label=cts, span=""];
m7_318 [file="RabbitMqMonitoringApi.cs", label=queue, span=""];
m7_310 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_323 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_319 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_306 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_307 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_308 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_309 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_312 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_320 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_321 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_322 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m7_325 [file="RabbitMqMonitoringApi.cs", label=arrangeSql, span=""];
m9_0 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", span="8-8"];
m9_1 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: storage == null", span="10-10"];
m9_2 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: throw new ArgumentNullException(''storage'');", span="10-10"];
m9_3 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: queues == null", span="11-11"];
m9_4 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: throw new ArgumentNullException(''queues'');", span="11-11"];
m9_5 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: configureAction == null", span="12-12"];
m9_6 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: throw new ArgumentNullException(''configureAction'');", span="12-12"];
m9_7 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: var provider = new RabbitMqJobQueueProvider(queues, configureAction)", span="14-14"];
m9_8 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: storage.QueueProviders.Add(provider, queues)", span="16-16"];
m9_9 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", color=green, community=0, file="RabbitMqSqlServerStorageExtensions.cs", label="1: return storage;", span="18-18"];
m9_10 [cluster="HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", file="RabbitMqSqlServerStorageExtensions.cs", label="Exit HangFire.RabbitMQ.RabbitMqSqlServerStorageExtensions.UseRabbitMq(HangFire.SqlServer.SqlServerStorage, System.Action<ConnectionFactory>, params string[])", span="8-8"];
m9_12 [cluster="HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, System.Action<ConnectionFactory>)", span="15-15"];
m9_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_13 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.Add(HangFire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", file="RabbitMqSqlServerStorageExtensions.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.Add(HangFire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", span="40-40"];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_13  [color=green, key=2, style=dotted];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_11  [color=green, key=0, style=solid];
m0_8 -> m0_10  [color=green, key=1, label=queue, style=dashed];
m0_10 -> m0_8  [color=green, key=0, style=solid];
m0_10 -> m0_15  [color=green, key=2, style=dotted];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_14  [color=green, key=2, style=dotted];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_16  [color=green, key=2, style=dotted];
m0_12 -> m0_6  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_20  [color=green, key=2, style=dotted];
m0_19 -> m0_17  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_4  [color=green, key=2, style=dotted];
m0_22 -> m0_5  [color=green, key=2, style=dotted];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_24 -> m0_1  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m0_24 -> m0_2  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m0_24 -> m0_8  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m0_24 -> m0_9  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m0_24 -> m0_11  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m0_24 -> m0_10  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute", style=dashed];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_12  [color=green, key=2, style=dotted];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_13  [color=green, key=2, style=dotted];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_13  [color=green, key=2, style=dotted];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_6 -> m3_13  [color=green, key=2, style=dotted];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_13  [color=green, key=2, style=dotted];
m3_11 -> m3_0  [color=blue, key=0, style=bold];
m3_14 -> m3_1  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_2  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_3  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_4  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_6  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_7  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_8  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_9  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_14 -> m3_10  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m4_56 -> m4_57  [color=green, key=0, style=solid];
m4_57 -> m4_58  [color=green, key=0, style=solid];
m4_57 -> m4_40  [color=green, key=2, style=dotted];
m4_58 -> m4_59  [color=green, key=0, style=solid];
m4_58 -> m4_29  [color=green, key=2, style=dotted];
m4_59 -> m4_60  [color=green, key=0, style=solid];
m4_59 -> m4_31  [color=green, key=2, style=dotted];
m4_60 -> m4_61  [color=green, key=0, style=solid];
m4_60 -> m4_64  [color=green, key=2, style=dotted];
m4_61 -> m4_62  [color=green, key=0, style=solid];
m4_61 -> m4_8  [color=green, key=2, style=dotted];
m4_61 -> m4_65  [color=green, key=1, label="lambda expression", style=dashed];
m4_62 -> m4_63  [color=green, key=0, style=solid];
m4_62 -> m4_9  [color=green, key=2, style=dotted];
m4_63 -> m4_56  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [color=green, key=0, style=solid];
m4_42 -> m4_43  [color=green, key=0, style=solid];
m4_42 -> m4_29  [color=green, key=2, style=dotted];
m4_42 -> m4_44  [color=green, key=1, label=queue, style=dashed];
m4_42 -> m4_48  [color=green, key=1, label=queue, style=dashed];
m4_43 -> m4_44  [color=green, key=0, style=solid];
m4_43 -> m4_46  [color=green, key=2, style=dotted];
m4_43 -> m4_48  [color=green, key=1, label=token, style=dashed];
m4_44 -> m4_45  [color=green, key=0, style=solid];
m4_44 -> m4_8  [color=green, key=2, style=dotted];
m4_44 -> m4_47  [color=green, key=1, label="lambda expression", style=dashed];
m4_45 -> m4_41  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [color=green, key=0, style=solid];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_8  [color=green, key=2, style=dotted];
m4_15 -> m4_18  [color=green, key=1, label="lambda expression", style=dashed];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_9  [color=green, key=2, style=dotted];
m4_17 -> m4_14  [color=blue, key=0, style=bold];
m4_33 -> m4_34  [color=green, key=0, style=solid];
m4_34 -> m4_35  [color=green, key=0, style=solid];
m4_34 -> m4_40  [color=green, key=2, style=dotted];
m4_35 -> m4_36  [color=green, key=0, style=solid];
m4_35 -> m4_29  [color=green, key=2, style=dotted];
m4_36 -> m4_37  [color=green, key=0, style=solid];
m4_36 -> m4_31  [color=green, key=2, style=dotted];
m4_36 -> m4_38  [color=green, key=1, label=fetchedJob, style=dashed];
m4_37 -> m4_38  [color=green, key=0, style=solid];
m4_37 -> m4_32  [color=green, key=2, style=dotted];
m4_38 -> m4_39  [color=green, key=0, style=solid];
m4_38 -> m4_9  [color=green, key=2, style=dotted];
m4_39 -> m4_33  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_29  [color=green, key=2, style=dotted];
m4_22 -> m4_24  [color=green, key=1, label=queue, style=dashed];
m4_23 -> m4_24  [color=green, key=0, style=solid];
m4_23 -> m4_30  [color=green, key=2, style=dotted];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_31  [color=green, key=2, style=dotted];
m4_24 -> m4_26  [color=green, key=1, label=fetchedJob, style=dashed];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_32  [color=green, key=2, style=dotted];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_27 -> m4_28  [color=green, key=0, style=solid];
m4_27 -> m4_9  [color=green, key=2, style=dotted];
m4_28 -> m4_21  [color=blue, key=0, style=bold];
m4_90 -> m4_91  [color=green, key=0, style=solid];
m4_91 -> m4_92  [color=green, key=0, style=solid];
m4_91 -> m4_40  [color=green, key=2, style=dotted];
m4_92 -> m4_93  [color=green, key=0, style=solid];
m4_92 -> m4_29  [color=green, key=2, style=dotted];
m4_92 -> m4_95  [color=green, key=1, label=queue, style=dashed];
m4_93 -> m4_94  [color=green, key=0, style=solid];
m4_93 -> m4_31  [color=green, key=2, style=dotted];
m4_95 -> m4_96  [color=green, key=0, style=solid];
m4_95 -> m4_31  [color=green, key=2, style=dotted];
m4_94 -> m4_95  [color=green, key=0, style=solid];
m4_94 -> m4_89  [color=green, key=2, style=dotted];
m4_96 -> m4_97  [color=green, key=0, style=solid];
m4_96 -> m4_9  [color=green, key=2, style=dotted];
m4_97 -> m4_90  [color=blue, key=0, style=bold];
m4_50 -> m4_51  [color=green, key=0, style=solid];
m4_51 -> m4_52  [color=green, key=0, style=solid];
m4_51 -> m4_40  [color=green, key=2, style=dotted];
m4_52 -> m4_53  [color=green, key=0, style=solid];
m4_52 -> m4_29  [color=green, key=2, style=dotted];
m4_53 -> m4_54  [color=green, key=0, style=solid];
m4_53 -> m4_31  [color=green, key=2, style=dotted];
m4_54 -> m4_55  [color=green, key=0, style=solid];
m4_54 -> m4_9  [color=green, key=2, style=dotted];
m4_55 -> m4_50  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=green, key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_70 -> m4_71  [color=green, key=0, style=solid];
m4_71 -> m4_72  [color=green, key=0, style=solid];
m4_71 -> m4_40  [color=green, key=2, style=dotted];
m4_72 -> m4_73  [color=green, key=0, style=solid];
m4_72 -> m4_29  [color=green, key=2, style=dotted];
m4_73 -> m4_74  [color=green, key=0, style=solid];
m4_73 -> m4_31  [color=green, key=2, style=dotted];
m4_74 -> m4_75  [color=green, key=0, style=solid];
m4_74 -> m4_32  [color=green, key=2, style=dotted];
m4_75 -> m4_76  [color=green, key=0, style=solid];
m4_75 -> m4_8  [color=green, key=2, style=dotted];
m4_75 -> m4_78  [color=green, key=1, label="lambda expression", style=dashed];
m4_76 -> m4_77  [color=green, key=0, style=solid];
m4_76 -> m4_9  [color=green, key=2, style=dotted];
m4_77 -> m4_70  [color=blue, key=0, style=bold];
m4_78 -> m4_79  [color=green, key=0, style=solid];
m4_10 -> m4_11  [color=green, key=0, style=solid];
m4_11 -> m4_12  [color=green, key=0, style=solid];
m4_11 -> m4_13  [color=green, key=2, style=dotted];
m4_12 -> m4_10  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_19 -> m4_20  [color=green, key=0, style=solid];
m4_19 -> m4_13  [color=green, key=2, style=dotted];
m4_20 -> m4_18  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [color=green, key=0, style=solid];
m4_48 -> m4_31  [color=green, key=2, style=dotted];
m4_47 -> m4_48  [color=green, key=0, style=solid];
m4_49 -> m4_47  [color=blue, key=0, style=bold];
m4_65 -> m4_66  [color=green, key=0, style=solid];
m4_66 -> m4_67  [color=green, key=0, style=solid];
m4_66 -> m4_68  [color=green, key=2, style=dotted];
m4_66 -> m4_69  [color=green, key=2, style=dotted];
m4_67 -> m4_65  [color=blue, key=0, style=bold];
m4_79 -> m4_80  [color=green, key=0, style=solid];
m4_79 -> m4_68  [color=green, key=2, style=dotted];
m4_79 -> m4_69  [color=green, key=2, style=dotted];
m4_80 -> m4_78  [color=blue, key=0, style=bold];
m4_81 -> m4_82  [color=green, key=0, style=solid];
m4_82 -> m4_83  [color=green, key=0, style=solid];
m4_82 -> m4_40  [color=green, key=2, style=dotted];
m4_83 -> m4_84  [color=green, key=0, style=solid];
m4_83 -> m4_29  [color=green, key=2, style=dotted];
m4_84 -> m4_85  [color=green, key=0, style=solid];
m4_84 -> m4_31  [color=green, key=2, style=dotted];
m4_85 -> m4_86  [color=green, key=0, style=solid];
m4_85 -> m4_89  [color=green, key=2, style=dotted];
m4_86 -> m4_87  [color=green, key=0, style=solid];
m4_86 -> m4_68  [color=green, key=2, style=dotted];
m4_86 -> m4_69  [color=green, key=2, style=dotted];
m4_87 -> m4_88  [color=green, key=0, style=solid];
m4_87 -> m4_9  [color=green, key=2, style=dotted];
m4_88 -> m4_81  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_8  [color=green, key=2, style=dotted];
m4_5 -> m4_10  [color=green, key=1, label="lambda expression", style=dashed];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_9  [color=green, key=2, style=dotted];
m4_7 -> m4_4  [color=blue, key=0, style=bold];
m4_98 -> m4_1  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_24  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_36  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_53  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_59  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_73  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_84  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_93  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_98 -> m4_95  [color=green, key=1, label="HangFire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m4_99 -> m4_48  [color=green, key=1, label=queue, style=dashed];
m4_100 -> m4_48  [color=green, key=1, label=token, style=dashed];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_4 -> m5_2  [color=blue, key=0, style=bold];
m5_5 -> m5_3  [color=green, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m6_8 -> m6_9  [color=green, key=0, style=solid];
m6_9 -> m6_10  [color=green, key=0, style=solid];
m6_9 -> m6_5  [color=green, key=2, style=dotted];
m6_10 -> m6_11  [color=green, key=0, style=solid];
m6_10 -> m6_13  [color=green, key=2, style=dotted];
m6_11 -> m6_12  [color=green, key=0, style=solid];
m6_11 -> m6_7  [color=green, key=2, style=dotted];
m6_12 -> m6_8  [color=blue, key=0, style=bold];
m6_5 -> m6_14  [color=green, key=0, style=solid];
m6_14 -> m6_14  [color=green, key=3, label="Local variable System.Action<ConnectionFactory> configuration", style=bold];
m6_14 -> m6_15  [color=green, key=0, style=solid];
m6_14 -> m6_19  [color=green, key=1, label=ConnectionFactory, style=dashed];
m6_15 -> m6_16  [color=green, key=0, style=solid];
m6_15 -> m6_17  [color=green, key=2, style=dotted];
m6_16 -> m6_5  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_5  [color=green, key=2, style=dotted];
m6_2 -> m6_3  [color=green, key=0, style=solid];
m6_2 -> m6_6  [color=green, key=2, style=dotted];
m6_3 -> m6_4  [color=green, key=0, style=solid];
m6_3 -> m6_7  [color=green, key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [color=green, key=0, style=solid];
m6_19 -> m6_19  [color=green, key=1, label=ConnectionFactory, style=dashed];
m6_19 -> m6_20  [color=green, key=0, style=solid];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_4  [color=green, key=2, style=dotted];
m7_1 -> m7_6  [color=green, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_5  [color=green, key=2, style=dotted];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_101 -> m7_102  [key=0, style=solid];
m7_103 -> m7_23  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_106  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_104 -> m7_101  [color=blue, key=0, style=bold];
m7_207 -> m7_208  [key=0, style=solid];
m7_209 -> m7_23  [key=2, style=dotted];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_212  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_210 -> m7_207  [color=blue, key=0, style=bold];
m7_172 -> m7_173  [key=0, style=solid];
m7_173 -> m7_23  [key=2, style=dotted];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_174 -> m7_172  [color=blue, key=0, style=bold];
m7_232 -> m7_233  [key=0, style=solid];
m7_234 -> m7_23  [key=2, style=dotted];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_237  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_235 -> m7_232  [color=blue, key=0, style=bold];
m7_184 -> m7_185  [key=0, style=solid];
m7_185 -> m7_23  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_186 -> m7_184  [color=blue, key=0, style=bold];
m7_136 -> m7_137  [key=0, style=solid];
m7_138 -> m7_23  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_141  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_139 -> m7_136  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_4  [color=green, key=2, style=dotted];
m7_12 -> m7_15  [color=green, key=1, label="lambda expression", style=dashed];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_5  [color=green, key=2, style=dotted];
m7_14 -> m7_11  [color=blue, key=0, style=bold];
m7_35 -> m7_36  [color=green, key=0, style=solid];
m7_36 -> m7_37  [color=green, key=0, style=solid];
m7_36 -> m7_23  [color=green, key=2, style=dotted];
m7_36 -> m7_38  [color=green, key=1, label="lambda expression", style=dashed];
m7_37 -> m7_35  [color=blue, key=0, style=bold];
m7_222 -> m7_223  [key=0, style=solid];
m7_224 -> m7_23  [key=2, style=dotted];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_227  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_225 -> m7_222  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_23  [color=green, key=2, style=dotted];
m7_21 -> m7_24  [color=green, key=1, label="lambda expression", style=dashed];
m7_22 -> m7_20  [color=blue, key=0, style=bold];
m7_255 -> m7_256  [key=0, style=solid];
m7_257 -> m7_23  [key=2, style=dotted];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_260  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_258 -> m7_255  [color=blue, key=0, style=bold];
m7_161 -> m7_162  [key=0, style=solid];
m7_162 -> m7_23  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_163 -> m7_161  [color=blue, key=0, style=bold];
m7_150 -> m7_151  [key=0, style=solid];
m7_151 -> m7_23  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_152 -> m7_150  [color=blue, key=0, style=bold];
m7_243 -> m7_244  [key=0, style=solid];
m7_245 -> m7_23  [key=2, style=dotted];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_249  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_246 -> m7_243  [color=blue, key=0, style=bold];
m7_195 -> m7_196  [key=0, style=solid];
m7_197 -> m7_23  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_200  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_198 -> m7_195  [color=blue, key=0, style=bold];
m7_85 -> m7_86  [key=0, style=solid];
m7_87 -> m7_23  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_90  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_88 -> m7_85  [color=blue, key=0, style=bold];
m7_269 -> m7_270  [key=0, style=solid];
m7_270 -> m7_23  [key=2, style=dotted];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_271 -> m7_269  [color=blue, key=0, style=bold];
m7_113 -> m7_114  [key=0, style=solid];
m7_115 -> m7_23  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_118  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_116 -> m7_113  [color=blue, key=0, style=bold];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_275  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_272 -> m7_274  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_7 -> m7_8  [color=green, key=0, style=solid];
m7_7 -> m7_9  [color=green, key=2, style=dotted];
m7_7 -> m7_10  [color=green, key=2, style=dotted];
m7_8 -> m7_6  [color=blue, key=0, style=bold];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_16 -> m7_9  [color=green, key=2, style=dotted];
m7_16 -> m7_18  [color=green, key=2, style=dotted];
m7_16 -> m7_19  [color=green, key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_29  [color=green, key=2, style=dotted];
m7_25 -> m7_31  [color=green, key=1, label=queue, style=dashed];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_4  [color=green, key=2, style=dotted];
m7_26 -> m7_30  [color=green, key=1, label="lambda expression", style=dashed];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_31 -> m7_33  [color=green, key=2, style=dotted];
m7_31 -> m7_34  [color=green, key=2, style=dotted];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_5  [color=green, key=2, style=dotted];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_28 -> m7_24  [color=blue, key=0, style=bold];
m7_38 -> m7_39  [color=green, key=0, style=solid];
m7_39 -> m7_40  [color=green, key=0, style=solid];
m7_39 -> m7_29  [color=green, key=2, style=dotted];
m7_39 -> m7_44  [color=green, key=1, label=queue, style=dashed];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_40 -> m7_4  [color=green, key=2, style=dotted];
m7_40 -> m7_43  [color=green, key=1, label="lambda expression", style=dashed];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_44 -> m7_33  [color=green, key=2, style=dotted];
m7_44 -> m7_34  [color=green, key=2, style=dotted];
m7_41 -> m7_42  [color=green, key=0, style=solid];
m7_41 -> m7_5  [color=green, key=2, style=dotted];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_45 -> m7_43  [color=blue, key=0, style=bold];
m7_42 -> m7_38  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [color=green, key=0, style=solid];
m7_49 -> m7_52  [color=green, key=1, label=SqlConnection, style=dashed];
m7_50 -> m7_51  [color=green, key=0, style=solid];
m7_50 -> m7_55  [color=green, key=2, style=dotted];
m7_50 -> m7_53  [color=green, key=1, label=cts, style=dashed];
m7_50 -> m7_58  [color=green, key=1, label=cts, style=dashed];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_51 -> m7_56  [color=green, key=2, style=dotted];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_53 -> m7_4  [color=green, key=2, style=dotted];
m7_53 -> m7_57  [color=green, key=1, label="lambda expression", style=dashed];
m7_58 -> m7_59  [color=green, key=0, style=solid];
m7_58 -> m7_34  [color=green, key=2, style=dotted];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_52 -> m7_29  [color=green, key=2, style=dotted];
m7_52 -> m7_58  [color=green, key=1, label=queue, style=dashed];
m7_54 -> m7_49  [color=blue, key=0, style=bold];
m7_57 -> m7_58  [color=green, key=0, style=solid];
m7_59 -> m7_57  [color=blue, key=0, style=bold];
m7_66 -> m7_4  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_121 -> m7_4  [key=2, style=dotted];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_84  [key=2, style=dotted];
m7_131 -> m7_4  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_155 -> m7_4  [key=2, style=dotted];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_166 -> m7_4  [key=2, style=dotted];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_179 -> m7_4  [key=2, style=dotted];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_190 -> m7_4  [key=2, style=dotted];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_216 -> m7_4  [key=2, style=dotted];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_84  [key=2, style=dotted];
m7_216 -> m7_218  [color=darkseagreen4, key=1, label=fetchedAt, style=dashed];
m7_240 -> m7_4  [key=2, style=dotted];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_84  [key=2, style=dotted];
m7_250 -> m7_4  [key=2, style=dotted];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_80 -> m7_5  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_5  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_145 -> m7_5  [key=2, style=dotted];
m7_145 -> m7_146  [key=0, style=solid];
m7_148 -> m7_5  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_156 -> m7_5  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_167 -> m7_5  [key=2, style=dotted];
m7_167 -> m7_168  [key=0, style=solid];
m7_203 -> m7_5  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_204 -> m7_5  [key=2, style=dotted];
m7_204 -> m7_205  [key=0, style=solid];
m7_205 -> m7_5  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_264 -> m7_5  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_267 -> m7_5  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_276 -> m7_5  [key=2, style=dotted];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_281  [key=2, style=dotted];
m7_277 -> m7_5  [key=2, style=dotted];
m7_277 -> m7_278  [key=0, style=solid];
m7_65 -> m7_29  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_70  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_78 -> m7_29  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_91 -> m7_29  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_107 -> m7_29  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_119 -> m7_29  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_129 -> m7_29  [key=2, style=dotted];
m7_129 -> m7_131  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_134  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_142 -> m7_29  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_146  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_154 -> m7_29  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_159  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_165 -> m7_29  [key=2, style=dotted];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_170  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_178 -> m7_29  [key=2, style=dotted];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_182  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_189 -> m7_29  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_193  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_201 -> m7_29  [key=2, style=dotted];
m7_201 -> m7_202  [key=0, style=solid];
m7_213 -> m7_29  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_228 -> m7_29  [key=2, style=dotted];
m7_228 -> m7_229  [key=0, style=solid];
m7_238 -> m7_29  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_248 -> m7_29  [key=2, style=dotted];
m7_248 -> m7_250  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_253  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_261 -> m7_29  [key=2, style=dotted];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_265  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_273 -> m7_29  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_79 -> m7_33  [key=2, style=dotted];
m7_79 -> m7_34  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_81  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_92 -> m7_33  [key=2, style=dotted];
m7_92 -> m7_34  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_108 -> m7_33  [key=2, style=dotted];
m7_108 -> m7_34  [key=2, style=dotted];
m7_108 -> m7_109  [key=0, style=solid];
m7_120 -> m7_33  [key=2, style=dotted];
m7_120 -> m7_34  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_134 -> m7_33  [key=2, style=dotted];
m7_134 -> m7_34  [key=2, style=dotted];
m7_134 -> m7_135  [key=0, style=solid];
m7_143 -> m7_33  [key=2, style=dotted];
m7_143 -> m7_34  [key=2, style=dotted];
m7_143 -> m7_145  [color=darkseagreen4, key=1, label=critical, style=dashed];
m7_143 -> m7_144  [key=0, style=solid];
m7_146 -> m7_33  [key=2, style=dotted];
m7_146 -> m7_34  [key=2, style=dotted];
m7_146 -> m7_148  [color=darkseagreen4, key=1, label="@default", style=dashed];
m7_146 -> m7_147  [key=0, style=solid];
m7_159 -> m7_33  [key=2, style=dotted];
m7_159 -> m7_34  [key=2, style=dotted];
m7_159 -> m7_160  [key=0, style=solid];
m7_170 -> m7_33  [key=2, style=dotted];
m7_170 -> m7_34  [key=2, style=dotted];
m7_170 -> m7_171  [key=0, style=solid];
m7_202 -> m7_33  [key=2, style=dotted];
m7_202 -> m7_34  [key=2, style=dotted];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_204  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_202 -> m7_205  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_214 -> m7_33  [key=2, style=dotted];
m7_214 -> m7_34  [key=2, style=dotted];
m7_214 -> m7_216  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_214 -> m7_215  [key=0, style=solid];
m7_229 -> m7_33  [key=2, style=dotted];
m7_229 -> m7_34  [key=2, style=dotted];
m7_229 -> m7_230  [key=0, style=solid];
m7_239 -> m7_33  [key=2, style=dotted];
m7_239 -> m7_34  [key=2, style=dotted];
m7_239 -> m7_240  [key=0, style=solid];
m7_253 -> m7_33  [key=2, style=dotted];
m7_253 -> m7_34  [key=2, style=dotted];
m7_253 -> m7_254  [key=0, style=solid];
m7_262 -> m7_33  [key=2, style=dotted];
m7_262 -> m7_34  [key=2, style=dotted];
m7_262 -> m7_264  [color=darkseagreen4, key=1, label=critical, style=dashed];
m7_262 -> m7_263  [key=0, style=solid];
m7_265 -> m7_33  [key=2, style=dotted];
m7_265 -> m7_34  [key=2, style=dotted];
m7_265 -> m7_267  [color=darkseagreen4, key=1, label="@default", style=dashed];
m7_265 -> m7_266  [key=0, style=solid];
m7_70 -> m7_34  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_182 -> m7_34  [key=2, style=dotted];
m7_182 -> m7_183  [key=0, style=solid];
m7_193 -> m7_34  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_176 -> m7_55  [key=2, style=dotted];
m7_176 -> m7_179  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_176 -> m7_182  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_176 -> m7_177  [key=0, style=solid];
m7_177 -> m7_56  [key=2, style=dotted];
m7_177 -> m7_178  [key=0, style=solid];
m7_64 -> m7_66  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_70  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_64 -> m7_68  [key=2, style=dotted];
m7_67 -> m7_63  [color=blue, key=0, style=bold];
m7_69 -> m7_70  [key=0, style=solid];
m7_117 -> m7_121  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_117 -> m7_119  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_117 -> m7_118  [key=0, style=solid];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_100  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_97  [key=2, style=dotted];
m7_132 -> m7_128  [color=blue, key=0, style=bold];
m7_133 -> m7_134  [key=0, style=solid];
m7_158 -> m7_159  [key=0, style=solid];
m7_169 -> m7_170  [key=0, style=solid];
m7_180 -> m7_175  [color=blue, key=0, style=bold];
m7_181 -> m7_182  [key=0, style=solid];
m7_188 -> m7_190  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_193  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_188 -> m7_68  [key=2, style=dotted];
m7_191 -> m7_187  [color=blue, key=0, style=bold];
m7_192 -> m7_193  [key=0, style=solid];
m7_211 -> m7_216  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_211 -> m7_213  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_211 -> m7_212  [key=0, style=solid];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_98  [key=2, style=dotted];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_98  [key=2, style=dotted];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_220  [key=2, style=dotted];
m7_218 -> m7_221  [key=2, style=dotted];
m7_236 -> m7_240  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_236 -> m7_238  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_236 -> m7_237  [key=0, style=solid];
m7_241 -> m7_242  [key=0, style=solid];
m7_241 -> m7_100  [key=2, style=dotted];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_97  [key=2, style=dotted];
m7_251 -> m7_247  [color=blue, key=0, style=bold];
m7_252 -> m7_253  [key=0, style=solid];
m7_82 -> m7_76  [color=blue, key=0, style=bold];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_98  [key=2, style=dotted];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_98  [key=2, style=dotted];
m7_149 -> m7_140  [color=blue, key=0, style=bold];
m7_157 -> m7_153  [color=blue, key=0, style=bold];
m7_168 -> m7_164  [color=blue, key=0, style=bold];
m7_200 -> m7_203  [color=darkseagreen4, key=1, label=id, style=dashed];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_84  [key=2, style=dotted];
m7_200 -> m7_83  [key=2, style=dotted];
m7_206 -> m7_199  [color=blue, key=0, style=bold];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_98  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_98  [key=2, style=dotted];
m7_268 -> m7_259  [color=blue, key=0, style=bold];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_277  [color=darkseagreen4, key=1, label=record, style=dashed];
m7_275 -> m7_84  [key=2, style=dotted];
m7_275 -> m7_83  [key=2, style=dotted];
m7_275 -> m7_278  [color=darkseagreen4, key=1, label=record, style=dashed];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_100  [key=2, style=dotted];
m7_63 -> m7_65  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_63 -> m7_64  [key=0, style=solid];
m7_76 -> m7_78  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_76 -> m7_77  [key=0, style=solid];
m7_89 -> m7_91  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_94  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_105 -> m7_107  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_105 -> m7_106  [key=0, style=solid];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_140 -> m7_142  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_140 -> m7_141  [key=0, style=solid];
m7_153 -> m7_154  [key=0, style=solid];
m7_164 -> m7_165  [key=0, style=solid];
m7_175 -> m7_178  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_175 -> m7_176  [key=0, style=solid];
m7_187 -> m7_189  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_187 -> m7_188  [key=0, style=solid];
m7_199 -> m7_201  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_199 -> m7_200  [key=0, style=solid];
m7_226 -> m7_228  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_226 -> m7_227  [key=0, style=solid];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_249  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_259 -> m7_261  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m7_259 -> m7_260  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_84  [key=2, style=dotted];
m7_77 -> m7_83  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_97  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_111  [key=2, style=dotted];
m7_106 -> m7_97  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_97  [key=2, style=dotted];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_97  [key=2, style=dotted];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_97  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_111  [key=2, style=dotted];
m7_227 -> m7_97  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_97  [key=2, style=dotted];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_97  [key=2, style=dotted];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_280  [key=2, style=dotted];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_98  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_112  [key=2, style=dotted];
m7_135 -> m7_133  [color=blue, key=0, style=bold];
m7_160 -> m7_158  [color=blue, key=0, style=bold];
m7_171 -> m7_169  [color=blue, key=0, style=bold];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_112  [key=2, style=dotted];
m7_254 -> m7_252  [color=blue, key=0, style=bold];
m7_71 -> m7_69  [color=blue, key=0, style=bold];
m7_183 -> m7_181  [color=blue, key=0, style=bold];
m7_194 -> m7_192  [color=blue, key=0, style=bold];
m7_123 -> m7_117  [color=blue, key=0, style=bold];
m7_219 -> m7_211  [color=blue, key=0, style=bold];
m7_242 -> m7_236  [color=blue, key=0, style=bold];
m7_279 -> m7_272  [color=blue, key=0, style=bold];
m7_96 -> m7_89  [color=blue, key=0, style=bold];
m7_94 -> m7_83  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_99  [key=2, style=dotted];
m7_110 -> m7_105  [color=blue, key=0, style=bold];
m7_95 -> m7_100  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_231 -> m7_226  [color=blue, key=0, style=bold];
m7_33 -> m7_282  [key=0, style=solid];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_285  [key=2, style=dotted];
m7_282 -> m7_286  [key=2, style=dotted];
m7_283 -> m7_284  [key=0, style=solid];
m7_284 -> m7_33  [color=blue, key=0, style=bold];
m7_60 -> m7_61  [key=0, style=solid];
m7_61 -> m7_23  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_62 -> m7_60  [color=blue, key=0, style=bold];
m7_124 -> m7_125  [key=0, style=solid];
m7_126 -> m7_23  [key=2, style=dotted];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_130  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_127 -> m7_124  [color=blue, key=0, style=bold];
m7_29 -> m7_289  [key=0, style=solid];
m7_29 -> m7_290  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_290 -> m7_9  [key=2, style=dotted];
m7_290 -> m7_10  [key=2, style=dotted];
m7_290 -> m7_291  [key=0, style=solid];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_292  [key=2, style=dotted];
m7_291 -> m7_29  [color=blue, key=0, style=bold];
m7_72 -> m7_73  [key=0, style=solid];
m7_74 -> m7_23  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_77  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_75 -> m7_72  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_47 -> m7_48  [color=green, key=0, style=solid];
m7_47 -> m7_23  [color=green, key=2, style=dotted];
m7_47 -> m7_49  [color=green, key=1, label="lambda expression", style=dashed];
m7_48 -> m7_46  [color=blue, key=0, style=bold];
m7_299 -> m7_21  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_36  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_47  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_74  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_126  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_151  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_162  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_173  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_185  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_197  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_209  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_224  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_234  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_245  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_257  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_299 -> m7_270  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m7_300 -> m7_31  [color=green, key=1, label=queue, style=dashed];
m7_301 -> m7_44  [color=green, key=1, label=queue, style=dashed];
m7_302 -> m7_58  [color=green, key=1, label=cts, style=dashed];
m7_303 -> m7_58  [color=green, key=1, label=queue, style=dashed];
m7_311 -> m7_134  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_313 -> m7_159  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_314 -> m7_170  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_324 -> m7_253  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_304 -> m7_70  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_305 -> m7_70  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_315 -> m7_182  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_316 -> m7_182  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_317 -> m7_193  [color=darkseagreen4, key=1, label=cts, style=dashed];
m7_318 -> m7_193  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_310 -> m7_130  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_323 -> m7_249  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_319 -> m7_200  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_306 -> m7_77  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_307 -> m7_90  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_308 -> m7_106  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_309 -> m7_118  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_312 -> m7_141  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_320 -> m7_212  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_321 -> m7_227  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_322 -> m7_237  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m7_325 -> m7_260  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m9_0 -> m9_1  [color=green, key=0, style=solid];
m9_0 -> m9_3  [color=green, key=1, label="params string[]", style=dashed];
m9_0 -> m9_5  [color=green, key=1, label="System.Action<ConnectionFactory>", style=dashed];
m9_0 -> m9_7  [color=green, key=1, label="System.Action<ConnectionFactory>", style=dashed];
m9_0 -> m9_8  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_0 -> m9_9  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m9_0 -> m9_0  [color=darkorchid, key=3, label="method methodReturn HangFire.SqlServer.SqlServerStorage UseRabbitMq", style=bold];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_10  [color=green, key=0, style=solid];
m9_2 -> m9_11  [color=green, key=2, style=dotted];
m9_3 -> m9_4  [color=green, key=0, style=solid];
m9_3 -> m9_5  [color=green, key=0, style=solid];
m9_4 -> m9_10  [color=green, key=0, style=solid];
m9_4 -> m9_11  [color=green, key=2, style=dotted];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_5 -> m9_7  [color=green, key=0, style=solid];
m9_6 -> m9_10  [color=green, key=0, style=solid];
m9_6 -> m9_11  [color=green, key=2, style=dotted];
m9_7 -> m9_8  [color=green, key=0, style=solid];
m9_7 -> m9_12  [color=green, key=2, style=dotted];
m9_8 -> m9_9  [color=green, key=0, style=solid];
m9_8 -> m9_13  [color=green, key=2, style=dotted];
m9_9 -> m9_10  [color=green, key=0, style=solid];
m9_10 -> m9_0  [color=blue, key=0, style=bold];
}
