digraph  {
n59 [label="HangFire.Web.Pages.QueuesPage", span=""];
n0 [label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n1 [label="WriteLiteral(''\r\n'')", span="61-61", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n2 [label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n49 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)"];
n3 [label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n50 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()"];
n4 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n5 [label="queues = monitor.Queues()", span="80-80", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n51 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()"];
n6 [label="WriteLiteral(''\r\n'')", span="87-87", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n52 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="7-7", cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()"];
n7 [label="queues.Count == 0", span="92-92", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n10 [label=queues, span="126-126", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n8 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="98-99", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n9 [label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n11 [label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n47 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="370-370", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n12 [label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n14 [label="Write(queue.Name)", span="148-148", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n16 [label="Write(queue.Length)", span="159-159", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n18 [label="Write(Request.LinkTo(''/queues/dequeued/'' + queue.Name))", span="169-169", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n20 [label="Write(queue.Dequeued)", span="179-179", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n22 [label="queue.FirstJobs.Count == 0", span="195-195", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n25 [label="queue.FirstJobs", span="227-227", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n13 [label="WriteLiteral(''\''>\r\n                            '')", span="143-143", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n53 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)"];
n54 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)"];
n15 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n17 [label="WriteLiteral(''</td>\r\n                    <td>\r\n                        <a href=\'''')", span="164-164", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n19 [label="WriteLiteral(''\''>\r\n                            '')", span="174-174", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n21 [label="WriteLiteral(''    \r\n                        </a>\r\n                    </td>\r\n                  '' +\r\n''  <td>'')", span="187-188", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n23 [label="WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="201-201", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n24 [label="WriteLiteral(@''                        <table class=''''table table-condensed table-bordered table-inner''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Job type</th>\r\n                                    <th>Enqueued</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n'')", span="213-222", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n26 [label="WriteLiteral(''                                    <tr class=\'''')", span="233-233", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n45 [label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="350-350", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n27 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="238-238", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n28 [label="WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <a href=\'''')", span="243-244", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n29 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="249-249", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n30 [label="WriteLiteral(''\''>'')", span="254-254", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n31 [label="Write(HtmlHelper.JobId(job.Key))", span="259-259", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n32 [label="WriteLiteral(''</a>\r\n'')", span="264-264", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n55 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)"];
n56 [label="Entry Unk.Write", span="", cluster="Unk.Write"];
n33 [label="!job.Value.InEnqueuedState", span="269-269", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n34 [label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="275-277", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n35 [label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="287-288", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n36 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="293-293", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n37 [label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="298-298", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n57 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)"];
n38 [label="job.Value.EnqueuedAt.HasValue", span="303-303", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n39 [label="WriteLiteral(''                                                <span data-moment=\'''')", span="309-309", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n44 [label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="339-340", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n40 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="314-314", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n41 [label="WriteLiteral(''\''>\r\n                                                    '')", span="319-319", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n58 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)"];
n42 [label="Write(job.Value.EnqueuedAt)", span="324-324", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n43 [label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="329-329", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n46 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="360-360", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
n48 [label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()"];
m0_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs"];
m0_23 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="110-110", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="ExpirationManager.cs"];
m0_28 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs"];
m0_25 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ExpirationManager.cs"];
m0_26 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ExpirationManager.cs"];
m0_27 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="232-232", cluster="Hangfire.Logging.ILog.Trace(string)", file="ExpirationManager.cs"];
m0_30 [label="Entry Hangfire.SqlServer.ExpirationManager.ToString()", span="88-88", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m0_31 [label="return ''SQL Records Expiration Manager'';", span="90-90", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m0_32 [label="Exit Hangfire.SqlServer.ExpirationManager.ToString()", span="88-88", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m0_29 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ExpirationManager.cs"];
m0_0 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", span="42-42", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m0_1 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", span="42-42", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m0_22 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ExpirationManager.cs"];
m0_2 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="47-47", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_3 [label="storage == null", span="49-49", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_5 [label="_storage = storage", span="51-51", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_6 [label="_checkInterval = checkInterval", span="52-52", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_4 [label="throw new ArgumentNullException(''storage'');", span="49-49", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_7 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="47-47", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m0_24 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ExpirationManager.cs"];
m0_9 [label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="55-55", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_10 [label=ProcessedTables, span="57-57", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_17 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="79-79", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_20 [label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="85-85", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_11 [label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="59-59", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_14 [label="removedCount = storageConnection.Connection.Execute(\r\n                            String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                            new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="67-71", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ExpirationManager.cs"];
m0_16 [label="Logger.Trace(String.Format(''Removed {0} outdated record(s) from '{1}' table.'', removedCount,\r\n                            table))", span="76-77", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_12 [label="int removedCount", span="61-61", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ExpirationManager.cs"];
m0_13 [label="var storageConnection = (SqlServerConnection)_storage.GetConnection()", span="65-65", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ExpirationManager.cs"];
m0_15 [label="removedCount > 0", span="74-74", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_19 [label="removedCount != 0", span="82-82", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_18 [label="cancellationToken.ThrowIfCancellationRequested()", span="80-80", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_21 [label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="55-55", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m0_33 [label="Hangfire.SqlServer.ExpirationManager", span="", file="ExpirationManager.cs"];
m1_0 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m1_1 [label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m1_2 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m1_3 [label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="IPersistentJobQueueProvider.cs"];
m2_6 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m2_7 [label="return _jobQueue;", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m2_8 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m2_4 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m2_5 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.MsmqJobQueueMonitoringApi(string, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.MsmqJobQueueMonitoringApi(string, System.Collections.Generic.IEnumerable<string>)", file="MsmqJobQueueProvider.cs"];
m2_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m2_1 [label="_jobQueue = new MsmqJobQueue(pathPattern, transactionType)", span="28-28", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m2_2 [label="_monitoringApi = new MsmqJobQueueMonitoringApi(pathPattern, queues)", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m2_3 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m2_9 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m2_10 [label="return _monitoringApi;", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m2_11 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m2_12 [label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span="", file="MsmqJobQueueProvider.cs"];
m3_8 [label="Entry Unk.>", span="", cluster="Unk.>", file="RabbitMqJobQueueProvider.cs"];
m3_29 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RabbitMqJobQueueProvider.cs"];
m3_31 [label="Assert.Equal(JobId, processingJob.JobId)", span="51-51", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RabbitMqJobQueueProvider.cs"];
m3_32 [label="Assert.Equal(Queue, processingJob.Queue)", span="52-52", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RabbitMqJobQueueProvider.cs"];
m3_30 [label="var processingJob = CreateProcessingJob()", span="49-49", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RabbitMqJobQueueProvider.cs"];
m3_33 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="RabbitMqJobQueueProvider.cs"];
m3_10 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_11 [label="new SqlServerProcessingJob(null, JobId, Queue)", span="23-23", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_45 [label="Entry Unk.DeleteJobFromQueue", span="", cluster="Unk.DeleteJobFromQueue", file="RabbitMqJobQueueProvider.cs"];
m3_9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_3 [label="configureAction == null", span="16-16", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs"];
m3_34 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="RabbitMqJobQueueProvider.cs"];
m3_46 [label="return new SqlServerProcessingJob(_connection.Object, JobId, Queue);", span="67-67", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="RabbitMqJobQueueProvider.cs"];
m3_47 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="RabbitMqJobQueueProvider.cs"];
m3_21 [label="Entry SqlServerProcessingJob.cstr", span="", cluster="SqlServerProcessingJob.cstr", file="RabbitMqJobQueueProvider.cs"];
m3_12 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_13 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="RabbitMqJobQueueProvider.cs"];
m3_14 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_0 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="RabbitMqJobQueueProvider.cs"];
m3_1 [label="_connection = new Mock<IStorageConnection>()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="RabbitMqJobQueueProvider.cs"];
m3_5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, JobId, Queue))", span="22-23", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RabbitMqJobQueueProvider.cs", color=green, community=0];
m3_6 [label="Assert.Equal(''connection'', exception.ParamName)", span="25-25", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_2 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="RabbitMqJobQueueProvider.cs"];
m3_4 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_7 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_15 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, null, Queue))", span="31-32", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_16 [label="Assert.Equal(''jobId'', exception.ParamName)", span="34-34", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_17 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_22 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_23 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, JobId, null))", span="40-41", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_24 [label="Assert.Equal(''queue'', exception.ParamName)", span="43-43", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_25 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueProvider.cs"];
m3_42 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_18 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span="", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_26 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_19 [label="new SqlServerProcessingJob(_connection.Object, null, Queue)", span="32-32", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_27 [label="new SqlServerProcessingJob(_connection.Object, JobId, null)", span="41-41", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_20 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_28 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_43 [label="x.DeleteJobFromQueue(JobId, Queue)", span="62-62", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_44 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="RabbitMqJobQueueProvider.cs"];
m3_35 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="RabbitMqJobQueueProvider.cs"];
m3_36 [label="var processingJob = CreateProcessingJob()", span="58-58", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="RabbitMqJobQueueProvider.cs"];
m3_38 [label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", span="62-62", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="RabbitMqJobQueueProvider.cs"];
m3_37 [label="processingJob.Dispose()", span="60-60", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="RabbitMqJobQueueProvider.cs"];
m3_39 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="RabbitMqJobQueueProvider.cs"];
m3_41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RabbitMqJobQueueProvider.cs"];
m3_40 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="RabbitMqJobQueueProvider.cs"];
m3_48 [label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", span="", file="RabbitMqJobQueueProvider.cs"];
m4_131 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m4_136 [label="return _storage.UseConnection(connection => connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault());", span="244-247", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="SqlServerConnection.cs"];
m4_134 [label="toScore < fromScore", span="242-242", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m4_133 [label="throw new ArgumentNullException(''key'');", span="241-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m4_132 [label="key == null", span="241-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m4_135 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="242-242", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m4_137 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m4_5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(null, JobId, Queue))", span="22-23", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m4_261 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m4_265 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<DateTime?>(query, new { key = key }).Single();\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="423-429", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_264 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.Hash\r\nwhere [Key] = @key''", span="419-421", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m4_263 [label="throw new ArgumentNullException(''key'');", span="417-417", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m4_262 [label="key == null", span="417-417", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m4_266 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m4_83 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs"];
m4_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerConnection.cs"];
m4_15 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerConnection.cs"];
m4_16 [label="queues == null || queues.Length == 0", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerConnection.cs"];
m4_17 [label="throw new ArgumentNullException(''queues'');", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m4_18 [label="Entry lambda expression", span="32-32", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_19 [label="new RedisProcessingJob(_connection.Object, null, Queue)", span="32-32", cluster="lambda expression", file="SqlServerConnection.cs", color=red, community=0];
m4_21 [label="Entry HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerConnection.cs"];
m4_22 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(_connection.Object, JobId, null))", span="40-41", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerConnection.cs", color=red, community=0];
m4_20 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_23 [label="Assert.Equal(''queue'', exception.ParamName)", span="43-43", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerConnection.cs"];
m4_172 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_178 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @'';merge HangFire.Server with (holdlock) as Target ''\r\n                    + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                    + @''on Target.Id = Source.Id ''\r\n                    + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                    +\r\n                    @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow });\r\n            })", span="298-308", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", color=green, community=0, file="SqlServerConnection.cs"];
m4_177 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="291-296", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_174 [label="throw new ArgumentNullException(''serverId'');", span="288-288", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_176 [label="throw new ArgumentNullException(''context'');", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_173 [label="serverId == null", span="288-288", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_175 [label="context == null", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_179 [label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m4_160 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="SqlServerConnection.cs"];
m4_44 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnection.cs"];
m4_34 [label="Entry HangFire.Core.Tests.Server.ProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="SqlServerConnection.cs"];
m4_9 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m4_165 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerConnection.cs"];
m4_192 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m4_195 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId });\r\n            })", span="327-332", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_193 [label="serverId == null", span="325-325", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m4_194 [label="throw new ArgumentNullException(''serverId'');", span="325-325", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m4_196 [label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m4_220 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m4_224 [label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList());", span="367-369", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", color=green, community=0, file="SqlServerConnection.cs"];
m4_223 [label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num \r\n	from HangFire.[Set]\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="360-365", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m4_222 [label="throw new ArgumentNullException(''key'');", span="358-358", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m4_221 [label="key == null", span="358-358", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m4_225 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m4_293 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m4_297 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<DateTime?>(query, new { key = key }).Single();\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="464-470", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_296 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.List\r\nwhere [Key] = @key''", span="460-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m4_295 [label="throw new ArgumentNullException(''key'');", span="458-458", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m4_294 [label="key == null", span="458-458", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m4_298 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m4_99 [label="Entry Hangfire.Storage.StateData.StateData()", span="21-21", cluster="Hangfire.Storage.StateData.StateData()", file="SqlServerConnection.cs"];
m4_252 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m4_256 [label="return _storage.UseConnection(connection => connection.Query<long>(query, new { key = key }).Single());", span="412-412", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_255 [label="string query = @''\r\nselect count([Id]) from HangFire.Hash\r\nwhere [Key] = @key''", span="408-410", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m4_254 [label="throw new ArgumentNullException(''key'');", span="406-406", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m4_253 [label="key == null", span="406-406", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m4_257 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m4_314 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m4_318 [label="return _storage.UseConnection(connection => connection.Query<string>(query, new { key = key }).ToList());", span="498-498", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_317 [label="string query = @''\r\nselect [Value] from HangFire.List\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="493-496", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m4_316 [label="throw new ArgumentNullException(''key'');", span="491-491", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m4_315 [label="key == null", span="491-491", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m4_319 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m4_180 [label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs"];
m4_63 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m4_67 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = id })\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="132-162", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_66 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where Id = @id''", span="129-130", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m4_65 [label="throw new ArgumentNullException(''id'');", span="127-127", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m4_64 [label="id == null", span="127-127", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m4_68 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m4_35 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=red, community=0, file="SqlServerConnection.cs"];
m4_36 [label="job == null", span="78-78", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=red, community=0, file="SqlServerConnection.cs"];
m4_37 [label="throw new ArgumentNullException(''job'');", span="78-78", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=red, community=0, file="SqlServerConnection.cs"];
m4_38 [label="parameters == null", span="79-79", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_155 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m4_158 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                    new { key })\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="275-283", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_156 [label="key == null", span="273-273", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m4_157 [label="throw new ArgumentNullException(''key'');", span="273-273", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m4_159 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m4_10 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_11 [label="new RedisProcessingJob(null, JobId, Queue)", span="23-23", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_12 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_8 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m4_82 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs"];
m4_210 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs"];
m4_100 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m4_105 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @'';merge HangFire.JobParameter with (holdlock) as Target ''\r\n                    + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                    + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                    + @''when matched then update set Value = Source.Value ''\r\n                    +\r\n                    @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = id, name, value });\r\n            })", span="201-211", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_103 [label="name == null", span="199-199", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m4_102 [label="throw new ArgumentNullException(''id'');", span="198-198", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m4_104 [label="throw new ArgumentNullException(''name'');", span="199-199", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m4_101 [label="id == null", span="198-198", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m4_106 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m4_138 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs"];
m4_28 [label="Entry HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerConnection.cs"];
m4_242 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnection.cs"];
m4_13 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="44-44", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_107 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerConnection.cs"];
m4_150 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="198-198", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerConnection.cs"];
m4_230 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m4_234 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<DateTime?>(query, new { key = key }).Single();\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="380-386", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_233 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.[Set]\r\nwhere [Key] = @key''", span="376-378", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m4_232 [label="throw new ArgumentNullException(''key'');", span="374-374", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m4_231 [label="key == null", span="374-374", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m4_235 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m4_243 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m4_247 [label="return _storage.UseConnection(connection => \r\n                connection.Query<long?>(query, new { key = key }).Single() ?? 0);", span="400-401", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_246 [label="string query = @''\r\nselect sum(s.[Value]) from (select sum([Value]) as [Value] from HangFire.Counter\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from HangFire.AggregatedCounter\r\nwhere [Key] = @key) as s''", span="393-398", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m4_245 [label="throw new ArgumentNullException(''key'');", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m4_244 [label="key == null", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m4_248 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m4_0 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m4_1 [label="storage == null", span="35-35", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", color=green, community=0];
m4_2 [label="throw new ArgumentNullException(''storage'');", span="35-35", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", color=green, community=0];
m4_26 [label="new RedisProcessingJob(_connection.Object, JobId, null)", span="41-41", cluster="lambda expression", file="SqlServerConnection.cs", color=red, community=0];
m4_61 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnection.cs"];
m4_111 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m4_116 [label="return _storage.UseConnection(connection => connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault());", span="219-222", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_114 [label="name == null", span="217-217", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m4_113 [label="throw new ArgumentNullException(''id'');", span="216-216", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m4_115 [label="throw new ArgumentNullException(''name'');", span="217-217", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m4_112 [label="id == null", span="216-216", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m4_117 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m4_98 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerConnection.cs"];
m4_184 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m4_187 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    @''delete from HangFire.Server where Id = @id'',\r\n                    new { id = serverId });\r\n            })", span="315-320", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_185 [label="serverId == null", span="313-313", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m4_186 [label="throw new ArgumentNullException(''serverId'');", span="313-313", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m4_188 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m4_58 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs"];
m4_27 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_4 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m4_6 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m4_7 [label="return new SqlServerWriteOnlyTransaction(_storage);", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", color=green, community=0];
m4_85 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m4_89 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="175-193", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_88 [label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="169-173", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m4_87 [label="throw new ArgumentNullException(''jobId'');", span="167-167", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m4_86 [label="jobId == null", span="167-167", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m4_90 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m4_33 [label="Entry HangFire.Core.Tests.Server.ProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.CreateProcessingJob()", file="SqlServerConnection.cs"];
m4_45 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="183-183", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", color=red, community=0, file="SqlServerConnection.cs"];
m4_46 [label="Exit HangFire.Core.Tests.Server.ProcessingJobFacts.CreateProcessingJob()", span="65-65", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.CreateProcessingJob()", file="SqlServerConnection.cs"];
m4_24 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerConnection.cs"];
m4_305 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m4_309 [label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList());", span="484-486", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", color=green, community=0, file="SqlServerConnection.cs"];
m4_308 [label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from HangFire.List\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="477-482", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m4_307 [label="throw new ArgumentNullException(''key'');", span="475-475", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m4_306 [label="key == null", span="475-475", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m4_310 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m4_39 [label="throw new ArgumentNullException(''parameters'');", span="79-79", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_205 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs"];
m4_42 [label="x.DeleteJobFromQueue(JobId, Queue)", span="62-62", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m4_41 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_40 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerConnection.cs"];
m4_43 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_57 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m4_29 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="SqlServerConnection.cs"];
m4_30 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", color=red, community=0, file="SqlServerConnection.cs"];
m4_31 [label="Assert.Equal(Queue, processingJob.Queue)", span="52-52", cluster="HangFire.Core.Tests.Server.ProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=red, community=0, file="SqlServerConnection.cs"];
m4_32 [label="_storage.QueueProviders.GetProvider(queue)", span="57-57", cluster="lambda expression", file="SqlServerConnection.cs", color=green, community=0];
m4_142 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_148 [label="_storage.UseTransaction(connection =>\r\n            {\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value });\r\n                }\r\n            })", span="262-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=green, community=0, file="SqlServerConnection.cs"];
m4_147 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="255-260", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_144 [label="throw new ArgumentNullException(''key'');", span="252-252", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_146 [label="throw new ArgumentNullException(''keyValuePairs'');", span="253-253", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_143 [label="key == null", span="252-252", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_145 [label="keyValuePairs == null", span="253-253", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_149 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m4_320 [label="Entry lambda expression", span="498-498", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_25 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="SqlServerConnection.cs"];
m4_47 [label="HangFire.Core.Tests.Server.ProcessingJobFacts", span="", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_48 [label="parameters.Count > 0", span="100-100", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_52 [label="parameterArray[parameterIndex++] = new\r\n                        {\r\n                            jobId = jobId,\r\n                            name = parameter.Key,\r\n                            value = parameter.Value\r\n                        }", span="106-111", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_55 [label="return jobId;", span="121-121", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_49 [label="var parameterArray = new object[parameters.Count]", span="102-102", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_50 [label="int parameterIndex = 0", span="103-103", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_54 [label="connection.Execute(insertParameterSql, parameterArray)", span="118-118", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_51 [label=parameters, span="104-104", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_53 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="114-116", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_70 [label="var jobData = connection.Query<SqlJob>(sql, new { id = id })\r\n                    .SingleOrDefault()", span="134-135", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_71 [label="jobData == null", span="137-137", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_73 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="140-140", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_74 [label="invocationData.Arguments = jobData.Arguments", span="141-141", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_80 [label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="155-161", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_72 [label="return null;", span="137-137", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_77 [label="job = invocationData.Deserialize()", span="148-148", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_75 [label="Job job = null", span="143-143", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_79 [label="loadException = ex", span="152-152", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_76 [label="JobLoadException loadException = null", span="144-144", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_78 [label=JobLoadException, span="150-150", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_91 [label="Entry lambda expression", span="175-193", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_92 [label="var sqlState = connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="177-177", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_93 [label="sqlState == null", span="178-178", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_95 [label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="183-185", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_96 [label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="187-192", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_94 [label="return null;", span="180-180", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_97 [label="Exit lambda expression", span="175-193", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_108 [label="Entry lambda expression", span="201-211", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_109 [label="connection.Execute(\r\n                    @'';merge HangFire.JobParameter with (holdlock) as Target ''\r\n                    + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                    + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                    + @''when matched then update set Value = Source.Value ''\r\n                    +\r\n                    @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = id, name, value })", span="203-210", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_110 [label="Exit lambda expression", span="201-211", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_118 [label="Entry lambda expression", span="219-222", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_119 [label="connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault()", span="219-222", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_120 [label="Exit lambda expression", span="219-222", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_126 [label="Entry lambda expression", span="229-236", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_127 [label="var result = connection.Query<string>(\r\n                    @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                    new { key })", span="231-233", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_128 [label="return new HashSet<string>(result);", span="235-235", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_129 [label="Exit lambda expression", span="229-236", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_139 [label="Entry lambda expression", span="244-247", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_140 [label="connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault()", span="244-247", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_141 [label="Exit lambda expression", span="244-247", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_151 [label="Entry lambda expression", span="262-268", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_153 [label="connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="266-266", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_152 [label=keyValuePairs, span="264-264", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_161 [label="Entry lambda expression", span="275-283", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_162 [label="var result = connection.Query<SqlHash>(\r\n                    ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                    new { key })\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="277-280", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_163 [label="return result.Count != 0 ? result : null;", span="282-282", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_166 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_169 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_164 [label="Exit lambda expression", span="275-283", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_167 [label="x.Field", span="280-280", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_168 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_170 [label="x.Value", span="280-280", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_171 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_181 [label="Entry lambda expression", span="298-308", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_182 [label="connection.Execute(\r\n                    @'';merge HangFire.Server with (holdlock) as Target ''\r\n                    + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                    + @''on Target.Id = Source.Id ''\r\n                    + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                    +\r\n                    @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="300-307", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_183 [label="Exit lambda expression", span="298-308", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_189 [label="Entry lambda expression", span="315-320", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_190 [label="connection.Execute(\r\n                    @''delete from HangFire.Server where Id = @id'',\r\n                    new { id = serverId })", span="317-319", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_191 [label="Exit lambda expression", span="315-320", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_197 [label="Entry lambda expression", span="327-332", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_198 [label="connection.Execute(\r\n                    @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId })", span="329-331", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_199 [label="Exit lambda expression", span="327-332", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_207 [label="Entry lambda expression", span="342-344", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_208 [label="connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) })", span="342-344", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_209 [label="Exit lambda expression", span="342-344", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_216 [label="Entry lambda expression", span="351-353", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_217 [label="connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First()", span="351-353", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_218 [label="Exit lambda expression", span="351-353", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_226 [label="Entry lambda expression", span="367-369", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_227 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList()", span="367-369", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_228 [label="Exit lambda expression", span="367-369", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_236 [label="Entry lambda expression", span="380-386", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_237 [label="var result = connection.Query<DateTime?>(query, new { key = key }).Single()", span="382-382", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_238 [label="!result.HasValue", span="383-383", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_240 [label="return result.Value - DateTime.UtcNow;", span="385-385", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_239 [label="return TimeSpan.FromSeconds(-1);", span="383-383", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_241 [label="Exit lambda expression", span="380-386", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_249 [label="Entry lambda expression", span="400-401", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_250 [label="connection.Query<long?>(query, new { key = key }).Single() ?? 0", span="401-401", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_251 [label="Exit lambda expression", span="400-401", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_258 [label="Entry lambda expression", span="412-412", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_259 [label="connection.Query<long>(query, new { key = key }).Single()", span="412-412", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_260 [label="Exit lambda expression", span="412-412", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_267 [label="Entry lambda expression", span="423-429", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_268 [label="var result = connection.Query<DateTime?>(query, new { key = key }).Single()", span="425-425", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_269 [label="!result.HasValue", span="426-426", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_271 [label="return result.Value - DateTime.UtcNow;", span="428-428", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_270 [label="return TimeSpan.FromSeconds(-1);", span="426-426", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_272 [label="Exit lambda expression", span="423-429", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_281 [label="Entry lambda expression", span="441-442", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_282 [label="connection\r\n                .Query<string>(query, new { key = key, field = name }).SingleOrDefault()", span="441-442", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_283 [label="Exit lambda expression", span="441-442", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_290 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_291 [label="connection.Query<long>(query, new { key = key }).Single()", span="453-453", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_292 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_299 [label="Entry lambda expression", span="464-470", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_300 [label="var result = connection.Query<DateTime?>(query, new { key = key }).Single()", span="466-466", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_301 [label="!result.HasValue", span="467-467", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_303 [label="return result.Value - DateTime.UtcNow;", span="469-469", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_302 [label="return TimeSpan.FromSeconds(-1);", span="467-467", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_304 [label="Exit lambda expression", span="464-470", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_311 [label="Entry lambda expression", span="484-486", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_312 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList()", span="484-486", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_313 [label="Exit lambda expression", span="484-486", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_321 [label="connection.Query<string>(query, new { key = key }).ToList()", span="498-498", cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs"];
m4_322 [label="Exit lambda expression", span="498-498", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_154 [label="Exit lambda expression", span="262-268", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_219 [label="Entry Unk.First", span="", cluster="Unk.First", file="SqlServerConnection.cs"];
m4_84 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="SqlServerConnection.cs"];
m4_273 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_279 [label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, field = name }).SingleOrDefault());", span="441-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_278 [label="string query = @''\r\nselect [Value] from HangFire.Hash\r\nwhere [Key] = @key and [Field] = @field''", span="437-439", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_275 [label="throw new ArgumentNullException(''key'');", span="434-434", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_277 [label="throw new ArgumentNullException(''name'');", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_274 [label="key == null", span="434-434", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_276 [label="name == null", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_280 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m4_211 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m4_214 [label="return _storage.UseConnection(connection => connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First());", span="351-353", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_212 [label="key == null", span="349-349", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m4_213 [label="throw new ArgumentNullException(''key'');", span="349-349", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m4_215 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m4_3 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="SqlServerConnection.cs"];
m4_60 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerConnection.cs"];
m4_206 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs"];
m4_229 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerConnection.cs"];
m4_62 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m4_130 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="SqlServerConnection.cs"];
m4_121 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m4_124 [label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                    new { key });\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="229-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_122 [label="key == null", span="227-227", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m4_123 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m4_125 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m4_284 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m4_288 [label="return _storage.UseConnection(connection => connection.Query<long>(query, new { key = key }).Single());", span="453-453", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", color=green, community=0, file="SqlServerConnection.cs"];
m4_287 [label="string query = @''\r\nselect count([Id]) from HangFire.List\r\nwhere [Key] = @key''", span="449-451", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m4_286 [label="throw new ArgumentNullException(''key'');", span="447-447", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m4_285 [label="key == null", span="447-447", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m4_289 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m4_200 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m4_203 [label="return _storage.UseConnection(connection => connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) }));", span="342-344", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs"];
m4_201 [label="timeOut.Duration() != timeOut", span="337-337", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m4_202 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="339-339", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m4_204 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m4_323 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnection.cs"];
m4_324 [label="System.DateTime", span="", file="SqlServerConnection.cs"];
m4_325 [label="System.TimeSpan", span="", file="SqlServerConnection.cs"];
m4_326 [label=createJobSql, span="", file="SqlServerConnection.cs"];
m4_327 [label=invocationData, span="", file="SqlServerConnection.cs"];
m4_328 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="SqlServerConnection.cs"];
m4_329 [label=string, span="", file="SqlServerConnection.cs"];
m4_330 [label=sql, span="", file="SqlServerConnection.cs"];
m4_331 [label=string, span="", file="SqlServerConnection.cs"];
m4_332 [label=sql, span="", file="SqlServerConnection.cs"];
m4_333 [label=string, span="", file="SqlServerConnection.cs"];
m4_334 [label=string, span="", file="SqlServerConnection.cs"];
m4_335 [label=string, span="", file="SqlServerConnection.cs"];
m4_336 [label=string, span="", file="SqlServerConnection.cs"];
m4_337 [label=string, span="", file="SqlServerConnection.cs"];
m4_338 [label=string, span="", file="SqlServerConnection.cs"];
m4_339 [label=string, span="", file="SqlServerConnection.cs"];
m4_340 [label=double, span="", file="SqlServerConnection.cs"];
m4_341 [label=double, span="", file="SqlServerConnection.cs"];
m4_343 [label=string, span="", file="SqlServerConnection.cs"];
m4_344 [label=sql, span="", file="SqlServerConnection.cs"];
m4_345 [label=string, span="", file="SqlServerConnection.cs"];
m4_346 [label=string, span="", file="SqlServerConnection.cs"];
m4_347 [label=data, span="", file="SqlServerConnection.cs"];
m4_348 [label=string, span="", file="SqlServerConnection.cs"];
m4_349 [label=string, span="", file="SqlServerConnection.cs"];
m4_350 [label="System.TimeSpan", span="", file="SqlServerConnection.cs"];
m4_351 [label=string, span="", file="SqlServerConnection.cs"];
m4_352 [label=string, span="", file="SqlServerConnection.cs"];
m4_353 [label=int, span="", file="SqlServerConnection.cs"];
m4_354 [label=int, span="", file="SqlServerConnection.cs"];
m4_355 [label=query, span="", file="SqlServerConnection.cs"];
m4_356 [label=string, span="", file="SqlServerConnection.cs"];
m4_357 [label=query, span="", file="SqlServerConnection.cs"];
m4_358 [label=string, span="", file="SqlServerConnection.cs"];
m4_359 [label=query, span="", file="SqlServerConnection.cs"];
m4_360 [label=string, span="", file="SqlServerConnection.cs"];
m4_361 [label=query, span="", file="SqlServerConnection.cs"];
m4_362 [label=string, span="", file="SqlServerConnection.cs"];
m4_363 [label=query, span="", file="SqlServerConnection.cs"];
m4_364 [label=string, span="", file="SqlServerConnection.cs"];
m4_365 [label=string, span="", file="SqlServerConnection.cs"];
m4_366 [label=query, span="", file="SqlServerConnection.cs"];
m4_367 [label=string, span="", file="SqlServerConnection.cs"];
m4_368 [label=query, span="", file="SqlServerConnection.cs"];
m4_369 [label=string, span="", file="SqlServerConnection.cs"];
m4_370 [label=query, span="", file="SqlServerConnection.cs"];
m4_371 [label=string, span="", file="SqlServerConnection.cs"];
m4_372 [label=int, span="", file="SqlServerConnection.cs"];
m4_373 [label=int, span="", file="SqlServerConnection.cs"];
m4_374 [label=query, span="", file="SqlServerConnection.cs"];
m4_375 [label=string, span="", file="SqlServerConnection.cs"];
m4_376 [label=query, span="", file="SqlServerConnection.cs"];
m4_342 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="SqlServerConnection.cs"];
m5_24 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerDistributedLock.cs"];
m5_33 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerDistributedLock.cs"];
m5_27 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="96-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SqlServerDistributedLock.cs", color=green, community=0];
m5_28 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m5_30 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="100-102", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m5_29 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="SqlServerDistributedLock.cs"];
m5_25 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m5_26 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m5_31 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerDistributedLock.cs"];
m5_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_1 [label="Debug.Assert(redis != null)", span="28-28", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_2 [label="Debug.Assert(jobId != null)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_3 [label="Debug.Assert(type != null)", span="30-30", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_4 [label="Debug.Assert(arguments != null)", span="31-31", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_5 [label="Debug.Assert(state != null)", span="32-32", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_6 [label="_stateMachine = new StateMachine(redis)", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_7 [label="JobId = jobId", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_8 [label="Type = type", span="37-37", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_9 [label="State = state", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_10 [label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_11 [label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="39-39", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs", color=green, community=0];
m5_12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_21 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="81-81", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_17 [label="String.IsNullOrEmpty(name)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_18 [label="throw new ArgumentNullException(''name'');", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_19 [label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="77-77", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_20 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_22 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="72-72", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SqlServerDistributedLock.cs"];
m5_23 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerDistributedLock.cs"];
m5_34 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerDistributedLock.cs"];
m5_35 [label="HangFire.Client.ClientJobDescriptor", span="", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerDistributedLock.cs"];
m5_36 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="108-108", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerDistributedLock.cs"];
m5_37 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SqlServerDistributedLock.cs"];
m5_32 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", color=green, community=0, file="SqlServerDistributedLock.cs"];
m5_15 [label="Entry HangFire.JobHelper.ToJson(object)", span="28-28", cluster="HangFire.JobHelper.ToJson(object)", file="SqlServerDistributedLock.cs"];
m5_38 [label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58", cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SqlServerDistributedLock.cs"];
m5_13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="SqlServerDistributedLock.cs"];
m5_14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="SqlServerDistributedLock.cs"];
m5_39 [label="HangFire.Client.ClientJobDescriptor", span="", file="SqlServerDistributedLock.cs"];
m6_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerFetchedJob.cs"];
m6_19 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerFetchedJob.cs"];
m6_18 [label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39", cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="SqlServerFetchedJob.cs"];
m6_15 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="79-79", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="SqlServerFetchedJob.cs"];
m6_16 [label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="81-82", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="SqlServerFetchedJob.cs"];
m6_17 [label="Exit Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="79-79", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="SqlServerFetchedJob.cs"];
m6_13 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerFetchedJob.cs"];
m6_0 [label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_1 [label="connection == null", span="37-37", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", color=red, community=0, file="SqlServerFetchedJob.cs"];
m6_3 [label="candidateState == null", span="38-38", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_5 [label="_candidateState = candidateState", span="40-40", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_6 [label="Connection = connection", span="42-42", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_7 [label="CurrentState = currentState", span="43-43", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", color=red, community=0, file="SqlServerFetchedJob.cs"];
m6_4 [label="throw new ArgumentNullException(''candidateState'');", span="38-38", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_8 [label="Exit Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IState, string)", file="SqlServerFetchedJob.cs"];
m6_10 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="74-74", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="SqlServerFetchedJob.cs"];
m6_11 [label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="76-76", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="SqlServerFetchedJob.cs"];
m6_12 [label="Exit Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="74-74", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="SqlServerFetchedJob.cs"];
m6_14 [label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38", cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="SqlServerFetchedJob.cs"];
m6_20 [label="Hangfire.States.ElectStateContext", span="", file="SqlServerFetchedJob.cs"];
m7_33 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="SqlServerJobQueue.cs"];
m7_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerJobQueue.cs"];
m7_38 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerJobQueue.cs"];
m7_39 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerJobQueue.cs"];
m7_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="32-32", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs"];
m7_1 [label="storage == null", span="34-34", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_2 [label="throw new ArgumentNullException(''storage'');", span="34-34", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_3 [label="options == null", span="35-35", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs"];
m7_5 [label="_storage = storage", span="37-37", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_6 [label="_options = options", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs"];
m7_4 [label="throw new ArgumentNullException(''options'');", span="35-35", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs"];
m7_7 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="32-32", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs"];
m7_28 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs"];
m7_32 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, int, string, string)", span="31-31", cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, int, string, string)", file="SqlServerJobQueue.cs"];
m7_31 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerJobQueue.cs"];
m7_37 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerJobQueue.cs"];
m7_48 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerJobQueue.cs"];
m7_41 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", span="92-92", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs"];
m7_43 [label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue });\r\n            })", span="97-100", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_42 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue) values (@jobId, @queue)''", span="94-95", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs"];
m7_44 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", span="92-92", cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(string, string)", file="SqlServerJobQueue.cs"];
m7_45 [label="Entry lambda expression", span="97-100", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_34 [label="Entry lambda expression", span="65-71", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_35 [label="fetchedJob = connection.Query<FetchedJob>(\r\n                        String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                        new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                        .SingleOrDefault()", span="67-70", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_36 [label="Exit lambda expression", span="65-71", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_46 [label="connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue })", span="99-99", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_47 [label="Exit lambda expression", span="97-100", cluster="lambda expression", file="SqlServerJobQueue.cs"];
m7_30 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerJobQueue.cs"];
m7_40 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs"];
m7_9 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_19 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    fetchedJob = connection.Query<FetchedJob>(\r\n                        String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                        new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                        .SingleOrDefault();\r\n                })", span="65-71", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_18 [label="cancellationToken.ThrowIfCancellationRequested()", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_15 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue with (readpast) set FetchedAt = GETUTCDATE()\r\noutput INSERTED.Id, INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="49-54", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_16 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="58-58", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_17 [label="var currentQueryIndex = 0", span="59-59", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_20 [label="fetchedJob == null", span="73-73", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_25 [label="fetchedJob == null", span="83-83", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_26 [label="return new SqlServerFetchedJob(\r\n                _storage,\r\n                fetchedJob.Id,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="85-89", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_14 [label="FetchedJob fetchedJob = null", span="47-47", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerJobQueue.cs"];
m7_12 [label="queues.Length == 0", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_22 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="77-77", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_11 [label="throw new ArgumentNullException(''queues'');", span="44-44", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_10 [label="queues == null", span="44-44", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_21 [label="currentQueryIndex == fetchConditions.Length - 1", span="75-75", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_24 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="82-82", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_13 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="45-45", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_23 [label="cancellationToken.ThrowIfCancellationRequested()", span="78-78", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_27 [label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs"];
m7_29 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs"];
m7_49 [label="Hangfire.SqlServer.SqlServerJobQueue", span="", file="SqlServerJobQueue.cs"];
m7_50 [label="string[]", span="", file="SqlServerJobQueue.cs"];
m7_51 [label=fetchJobSqlTemplate, span="", file="SqlServerJobQueue.cs"];
m7_52 [label=fetchConditions, span="", file="SqlServerJobQueue.cs"];
m7_53 [label=currentQueryIndex, span="", file="SqlServerJobQueue.cs"];
m7_54 [label=string, span="", file="SqlServerJobQueue.cs"];
m7_55 [label=string, span="", file="SqlServerJobQueue.cs"];
m7_56 [label=enqueueJobSql, span="", file="SqlServerJobQueue.cs"];
m8_36 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_113 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_296 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="SqlServerJobQueueMonitoringApi.cs"];
m8_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_43 [label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_45 [label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_46 [label="scheduledJobs.Count == 0", span="89-89", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_44 [label=Redis, span="82-82", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_47 [label="return new Dictionary<string, ScheduleDto>();", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_38 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_391 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_29 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="SqlServerJobQueueMonitoringApi.cs"];
m8_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_364 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="SqlServerJobQueueMonitoringApi.cs"];
m8_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="SqlServerJobQueueMonitoringApi.cs"];
m8_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="SqlServerJobQueueMonitoringApi.cs"];
m8_23 [label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_24 [label=Redis, span="55-55", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_25 [label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_26 [label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_27 [label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_262 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerJobQueueMonitoringApi.cs"];
m8_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_336 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_338 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_333 [label="var pipeline = redis.CreatePipeline()", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_335 [label="var id = jobId", span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_339 [label="pipeline.Flush()", span="530-530", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_331 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_337 [label="stateProperties != null", span="522-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_332 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_334 [label=jobIds, span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_329 [label="jobIds.Count == 0", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_340 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_330 [label="return new List<KeyValuePair<string, T>>();", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_341 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_366 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="SqlServerJobQueueMonitoringApi.cs"];
m8_238 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerJobQueueMonitoringApi.cs"];
m8_236 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_350 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_11 [label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_12 [label=Redis, span="30-30", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_13 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_14 [label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_283 [label="var result = new Dictionary<DateTime, long>()", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_282 [label="var valuesMap = redis.GetValuesMap(keys)", span="451-451", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_284 [label="var i = 0", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_289 [label="result.Add(dates[i], value)", span="462-462", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_291 [label="return result;", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_281 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_287 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_285 [label="i < dates.Count", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_290 [label="i++", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_275 [label="var dates = new List<DateTime>()", span="443-443", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_288 [label="value = 0", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_274 [label="var endDate = DateTime.UtcNow", span="442-442", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_277 [label="i < 24", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_286 [label="long value", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_276 [label="var i = 0", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_278 [label="dates.Add(endDate)", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_279 [label="endDate = endDate.AddHours(-1)", span="447-447", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_280 [label="i++", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_292 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_234 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="SqlServerJobQueueMonitoringApi.cs"];
m8_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="SqlServerJobQueueMonitoringApi.cs"];
m8_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_237 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_263 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="SqlServerJobQueueMonitoringApi.cs"];
m8_239 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_241 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_240 [label=Redis, span="395-395", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_242 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_247 [label="return stateMachine.ChangeState(jobId, state, ScheduledState.Name);", span="408-408", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_243 [label="String.IsNullOrEmpty(queue)", span="400-400", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_246 [label="var state = new EnqueuedState(''The job has been enqueued by a user.'', queue)", span="406-406", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_244 [label="return false;", span="402-402", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_245 [label="var stateMachine = new StateMachine(Redis)", span="405-405", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_248 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_322 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_365 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="SqlServerJobQueueMonitoringApi.cs"];
m8_323 [label="Entry lambda expression", span="481-481", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_32 [label="Entry lambda expression", span="66-76", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_81 [label="job.Key", span="120-120", cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_344 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_352 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_432 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_406 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_412 [label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_426 [label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_343 [label="Entry lambda expression", span="519-519", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_345 [label="Exit lambda expression", span="519-519", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_351 [label="Entry lambda expression", span="525-525", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_353 [label="Exit lambda expression", span="525-525", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_431 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_433 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_405 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_407 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_411 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_413 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_425 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_427 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_264 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_268 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_271 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_348 [label="jobs.Add(id, x)", span="520-520", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_356 [label="states.Add(id, x)", span="526-526", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_346 [label="Entry lambda expression", span="520-520", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_354 [label="Entry lambda expression", span="526-526", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_392 [label="Entry lambda expression", span="565-565", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_396 [label="Entry lambda expression", span="566-566", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_399 [label="Entry lambda expression", span="569-569", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_402 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_408 [label="Entry lambda expression", span="574-574", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_414 [label="Entry lambda expression", span="578-578", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_417 [label="Entry lambda expression", span="581-581", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_421 [label="Entry lambda expression", span="582-582", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_428 [label="Entry lambda expression", span="586-586", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_434 [label="Entry lambda expression", span="593-593", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_327 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_265 [label="!hiddenProperties.Contains(x.Key)", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_347 [label="!jobs.ContainsKey(id)", span="520-520", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_355 [label="!states.ContainsKey(id)", span="526-526", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_362 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_266 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_270 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_269 [label="x.Key", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_273 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_272 [label="x.Value", span="433-433", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_349 [label="Exit lambda expression", span="520-520", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_357 [label="Exit lambda expression", span="526-526", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_186 [label="length = x", span="270-270", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_192 [label="dequeued = x", span="274-274", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_359 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_397 [label="stats.Servers = x", span="566-566", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_403 [label="stats.Queues = x", span="570-570", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_409 [label="stats.Scheduled = x", span="574-574", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_415 [label="stats.Processing = x", span="578-578", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_422 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_429 [label="stats.Failed = x", span="586-586", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_435 [label="stats.Enqueued += x", span="593-593", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_394 [label="Exit lambda expression", span="565-565", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_393 [label="x.GetSetCount(''hangfire:servers'')", span="565-565", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_398 [label="Exit lambda expression", span="566-566", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_401 [label="Exit lambda expression", span="569-569", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_400 [label="x.GetSetCount(''hangfire:queues'')", span="569-569", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_404 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_410 [label="Exit lambda expression", span="574-574", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_416 [label="Exit lambda expression", span="578-578", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_419 [label="Exit lambda expression", span="581-581", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_418 [label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_423 [label="Exit lambda expression", span="582-582", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_430 [label="Exit lambda expression", span="586-586", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_436 [label="Exit lambda expression", span="593-593", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_326 [label="Entry lambda expression", span="482-482", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_328 [label="Exit lambda expression", span="482-482", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_358 [label="Entry lambda expression", span="534-539", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_361 [label="Entry lambda expression", span="540-542", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_363 [label="Exit lambda expression", span="540-542", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_367 [label="Entry lambda expression", span="542-542", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_299 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_298 [label="Entry lambda expression", span="450-450", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_360 [label="Exit lambda expression", span="534-539", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_369 [label="Exit lambda expression", span="542-542", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_368 [label="y == null", span="542-542", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_300 [label="Exit lambda expression", span="450-450", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_324 [label="x.ToString(''yyyy-MM-dd'')", span="481-481", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_325 [label="Exit lambda expression", span="481-481", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m8_28 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="SqlServerJobQueueMonitoringApi.cs"];
m8_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerJobQueueMonitoringApi.cs"];
m8_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="SqlServerJobQueueMonitoringApi.cs"];
m8_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SqlServerJobQueueMonitoringApi.cs"];
m8_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_2 [label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_3 [label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="11-11", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_301 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerJobQueueMonitoringApi.cs"];
m8_295 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="SqlServerJobQueueMonitoringApi.cs"];
m8_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="SqlServerJobQueueMonitoringApi.cs"];
m8_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="SqlServerJobQueueMonitoringApi.cs"];
m8_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_424 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="SqlServerJobQueueMonitoringApi.cs"];
m8_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerJobQueueMonitoringApi.cs"];
m8_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_374 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_380 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_381 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_382 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_383 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_384 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_387 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_378 [label="var pipeline = Redis.CreatePipeline()", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_386 [label="var queueName = queue", span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_388 [label="pipeline.Flush()", span="596-596", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_376 [label="var stats = new StatisticsDto()", span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_385 [label=queues, span="588-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_377 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_389 [label="return stats;", span="599-599", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_375 [label=Redis, span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_390 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_370 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_372 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_371 [label=Redis, span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_373 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_293 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_312 [label="var result = new Dictionary<DateTime, long>()", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_311 [label="var valuesMap = redis.GetValuesMap(keys)", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_313 [label="var i = 0", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_318 [label="result.Add(dates[i], value)", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_320 [label="return result;", span="497-497", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_310 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_316 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_314 [label="i < stringDates.Count", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_319 [label="i++", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_305 [label="var dates = new List<DateTime>()", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_317 [label="value = 0", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_309 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_303 [label="var endDate = DateTime.UtcNow.Date", span="471-471", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_315 [label="long value", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_304 [label="var startDate = endDate.AddDays(-7)", span="472-472", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_306 [label="startDate <= endDate", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_307 [label="dates.Add(endDate)", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_308 [label="endDate = endDate.AddDays(-1)", span="478-478", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_321 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="SqlServerJobQueueMonitoringApi.cs"];
m8_15 [label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_16 [label=Redis, span="38-38", cluster="HangFire.Web.JobStorage.FailedCount()", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_17 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40", cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_18 [label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_260 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_249 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_251 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_255 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_257 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_250 [label=Redis, span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_252 [label="job.Count == 0", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_254 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_256 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_253 [label="return null;", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_258 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_297 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_6 [label=Redis, span="22-22", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_7 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_8 [label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_302 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_259 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="SqlServerJobQueueMonitoringApi.cs"];
m8_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerJobQueueMonitoringApi.cs"];
m8_342 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_395 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="SqlServerJobQueueMonitoringApi.cs"];
m8_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_261 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerJobQueueMonitoringApi.cs"];
m8_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="SqlServerJobQueueMonitoringApi.cs"];
m8_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_235 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_294 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="SqlServerJobQueueMonitoringApi.cs"];
m8_19 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_20 [label=Redis, span="46-46", cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_21 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48", cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="SqlServerJobQueueMonitoringApi.cs"];
m8_22 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="SqlServerJobQueueMonitoringApi.cs"];
m8_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="SqlServerJobQueueMonitoringApi.cs"];
m8_267 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SqlServerJobQueueMonitoringApi.cs"];
m8_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerJobQueueMonitoringApi.cs"];
m8_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="SqlServerJobQueueMonitoringApi.cs"];
m8_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="SqlServerJobQueueMonitoringApi.cs"];
m8_420 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="SqlServerJobQueueMonitoringApi.cs"];
m8_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="SqlServerJobQueueMonitoringApi.cs"];
m8_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_232 [label="return stateMachine.ChangeState(jobId, state, FailedState.Name);", span="389-389", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_231 [label="var state = new EnqueuedState(''The job has been retried by a user.'', queue)", span="387-387", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_230 [label="var stateMachine = new StateMachine(Redis)", span="386-386", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_233 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerJobQueueMonitoringApi.cs"];
m8_438 [label=jobs, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_439 [label=states, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_437 [label=job, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_447 [label="string[]", span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_448 [label=id, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_450 [label="string[]", span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_443 [label=queue, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_454 [label=queueName, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_441 [label=servers, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_442 [label=queues, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_440 [label=name, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_449 [label=jobs, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_451 [label=states, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_446 [label=string, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_444 [label=hiddenProperties, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_452 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_453 [label=stats, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m8_445 [label=string, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m9_10 [label="Exit HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs"];
m9_11 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m9_12 [label="HangFire.Web.FontsHandler", span="", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="SqlServerJobQueueProvider.cs"];
m9_5 [label="ContentType = ''image/svg+xml''", span="33-33", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_9 [label="ContentType = ''application/font-woff''", span="41-41", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_6 [label="fontName.EndsWith(''.ttf'', StringComparison.OrdinalIgnoreCase)", span="35-35", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs"];
m9_7 [label="ContentType = ''application/octet-stream''", span="37-37", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m9_8 [label="fontName.EndsWith(''.woff'', StringComparison.OrdinalIgnoreCase)", span="39-39", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs"];
m9_0 [label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs"];
m9_1 [label="CacheResponse = true", span="25-25", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_3 [label="ContentType = ''application/vnd.ms-fontobject''", span="29-29", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=green, community=0, file="SqlServerJobQueueProvider.cs"];
m9_2 [label="fontName.EndsWith(''.eot'', StringComparison.OrdinalIgnoreCase)", span="27-27", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs", color=green, community=0];
m9_4 [label="fontName.EndsWith(''.svg'', StringComparison.OrdinalIgnoreCase)", span="31-31", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlServerJobQueueProvider.cs"];
m9_13 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(IDbConnection)", span="28-28", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(IDbConnection)", file="SqlServerJobQueueProvider.cs"];
m9_14 [label="Hangfire.SqlServer.SqlServerJobQueueProvider", span="", file="SqlServerJobQueueProvider.cs"];
m10_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="SqlServerMonitoringApi.cs"];
m10_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs"];
m10_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SqlServerMonitoringApi.cs"];
m10_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="SqlServerMonitoringApi.cs"];
m10_17 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="SqlServerMonitoringApi.cs"];
m10_327 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="SqlServerMonitoringApi.cs"];
m10_25 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerMonitoringApi.cs"];
m10_185 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_191 [label="var process = CreateProcess()", span="192-192", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_192 [label="process.Run(_context.Object)", span="195-195", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_194 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="SqlServerMonitoringApi.cs"];
m10_13 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="SqlServerMonitoringApi.cs"];
m10_164 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_168 [label="var process = CreateProcess()", span="169-169", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_169 [label="process.Run(_context.Object)", span="172-172", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_172 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="SqlServerMonitoringApi.cs"];
m10_298 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_305 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_308 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="SqlServerMonitoringApi.cs"];
m10_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="SqlServerMonitoringApi.cs"];
m10_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="SqlServerMonitoringApi.cs"];
m10_97 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_102 [label="var process = CreateProcess()", span="111-111", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_104 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="SqlServerMonitoringApi.cs"];
m10_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="SqlServerMonitoringApi.cs"];
m10_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m10_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="SqlServerMonitoringApi.cs"];
m10_23 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="SqlServerMonitoringApi.cs"];
m10_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="SqlServerMonitoringApi.cs"];
m10_329 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="SqlServerMonitoringApi.cs"];
m10_140 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_149 [label="var process = CreateProcess()", span="151-151", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_150 [label="process.Run(_context.Object)", span="154-154", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_151 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="SqlServerMonitoringApi.cs"];
m10_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="SqlServerMonitoringApi.cs"];
m10_274 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_280 [label="var process = CreateProcess()", span="278-278", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_282 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="SqlServerMonitoringApi.cs"];
m10_53 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="SqlServerMonitoringApi.cs"];
m10_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="SqlServerMonitoringApi.cs"];
m10_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="SqlServerMonitoringApi.cs"];
m10_57 [label="var process = CreateProcess()", span="67-67", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="SqlServerMonitoringApi.cs"];
m10_60 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="SqlServerMonitoringApi.cs"];
m10_228 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_233 [label="var process = CreateProcess()", span="232-232", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_236 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_251 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_258 [label="var process = CreateProcess()", span="256-256", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_261 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="SqlServerMonitoringApi.cs"];
m10_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerMonitoringApi.cs"];
m10_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="SqlServerMonitoringApi.cs"];
m10_0 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_1 [label="var connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_2 [label="var job = Job.FromExpression(() => TestMethod())", span="20-20", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_3 [label="var state = new Mock<IState>()", span="21-21", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_5 [label="_filters = new List<object>()", span="24-24", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_7 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="SqlServerMonitoringApi.cs"];
m10_207 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="SqlServerMonitoringApi.cs"];
m10_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_211 [label="var process = CreateProcess()", span="211-211", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="SqlServerMonitoringApi.cs"];
m10_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_215 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="SqlServerMonitoringApi.cs"];
m10_29 [label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="SqlServerMonitoringApi.cs"];
m10_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerMonitoringApi.cs"];
m10_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="SqlServerMonitoringApi.cs"];
m10_73 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_81 [label="var process = CreateProcess()", span="91-91", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_83 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="SqlServerMonitoringApi.cs"];
m10_330 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="SqlServerMonitoringApi.cs"];
m10_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m10_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerMonitoringApi.cs"];
m10_30 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="SqlServerMonitoringApi.cs"];
m10_31 [label="var process = CreateProcess()", span="43-43", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="SqlServerMonitoringApi.cs"];
m10_32 [label="process.Run(_context.Object)", span="45-45", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="SqlServerMonitoringApi.cs"];
m10_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="SqlServerMonitoringApi.cs"];
m10_34 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="SqlServerMonitoringApi.cs"];
m10_41 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="SqlServerMonitoringApi.cs"];
m10_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_43 [label="var process = CreateProcess()", span="54-54", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_45 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="SqlServerMonitoringApi.cs"];
m10_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="SqlServerMonitoringApi.cs"];
m10_18 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SqlServerMonitoringApi.cs"];
m10_19 [label="var process = CreateProcess()", span="32-32", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m10_22 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="SqlServerMonitoringApi.cs"];
m10_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="SqlServerMonitoringApi.cs"];
m10_119 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_125 [label="var process = CreateProcess()", span="128-128", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_126 [label="process.Run(_context.Object)", span="131-131", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_127 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="SqlServerMonitoringApi.cs"];
m10_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="SqlServerMonitoringApi.cs"];
m10_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="SqlServerMonitoringApi.cs"];
m10_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SqlServerMonitoringApi.cs"];
m10_9 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerMonitoringApi.cs"];
m10_331 [label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span="", file="SqlServerMonitoringApi.cs"];
m10_332 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_333 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_334 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_335 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_336 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_337 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_338 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_339 [label=exception, span="", file="SqlServerMonitoringApi.cs"];
m10_340 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_341 [label=exception, span="", file="SqlServerMonitoringApi.cs"];
m10_342 [label=exception, span="", file="SqlServerMonitoringApi.cs"];
m10_343 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m10_344 [label=process, span="", file="SqlServerMonitoringApi.cs"];
m11_164 [label="Entry Metric.cstr", span="", cluster="Metric.cstr", file="SqlServerStorage.cs"];
m11_18 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs"];
m11_134 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_135 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="241-244", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", color=green, community=0, file="SqlServerStorage.cs"];
m11_136 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_26 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_29 [label="_existingConnection = existingConnection", span="100-100", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_30 [label="_options = new SqlServerStorageOptions()", span="101-101", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_31 [label="InitializeQueueProviders()", span="103-103", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_27 [label="existingConnection == null", span="98-98", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_28 [label="throw new ArgumentNullException(''existingConnection'');", span="98-98", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_32 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_23 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="218-218", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_120 [label="_existingConnection != null", span="220-220", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", color=green, community=0, file="SqlServerStorage.cs"];
m11_121 [label="return _existingConnection;", span="222-222", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", color=green, community=0, file="SqlServerStorage.cs"];
m11_122 [label="var connection = new SqlConnection(_connectionString)", span="225-225", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_123 [label="connection.Open()", span="226-226", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_124 [label="return connection;", span="228-228", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_125 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="218-218", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_146 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="SqlServerStorage.cs"];
m11_128 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="231-231", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs"];
m11_129 [label="connection != null && !ReferenceEquals(connection, _existingConnection)", span="233-233", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", color=green, community=0, file="SqlServerStorage.cs"];
m11_130 [label="connection.Dispose()", span="235-235", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", color=green, community=0, file="SqlServerStorage.cs"];
m11_131 [label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="231-231", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs"];
m11_156 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="SqlServerStorage.cs"];
m11_143 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="SqlServerStorage.cs"];
m11_77 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="SqlServerStorage.cs"];
m11_73 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerStorage.cs"];
m11_42 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="118-118", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_43 [label="yield return new ExpirationManager(this, _options.JobExpirationCheckInterval);", span="120-120", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_44 [label="yield return new CountersAggregator(this, _options.CountersAggregateInterval);", span="121-121", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_45 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="118-118", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_33 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs"];
m11_22 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerStorage.cs"];
m11_7 [label="_options = options", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_76 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="SqlServerStorage.cs"];
m11_162 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerStorage.cs"];
m11_74 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerStorage.cs"];
m11_104 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerStorage.cs"];
m11_8 [label="IsConnectionString(nameOrConnectionString)", span="64-64", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_38 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m11_39 [label="return new SqlServerConnection(this);", span="115-115", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs"];
m11_40 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m11_21 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerStorage.cs"];
m11_48 [label="Entry Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="124-124", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_50 [label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="127-127", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_51 [label="logger.InfoFormat(''    Invisibility timeout: {0}.'', _options.InvisibilityTimeout)", span="128-128", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_49 [label="logger.Info(''Using the following options for SQL Server job storage:'')", span="126-126", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_52 [label="Exit Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="124-124", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_127 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="SqlServerStorage.cs"];
m11_84 [label="Entry Unk.Trim", span="", cluster="Unk.Trim", file="SqlServerStorage.cs"];
m11_132 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="SqlServerStorage.cs"];
m11_126 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="SqlServerStorage.cs"];
m11_37 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="35-35", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs"];
m11_91 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_92 [label="UseConnection(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="176-180", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", color=green, community=0, file="SqlServerStorage.cs"];
m11_93 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="174-174", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_99 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerStorage.cs"];
m11_105 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="198-198", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_106 [label="UseTransaction(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            }, null)", span="200-204", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", color=green, community=0, file="SqlServerStorage.cs"];
m11_107 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="198-198", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_137 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerStorage.cs"];
m11_20 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="258-258", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_147 [label="var connectionStringSetting = ConfigurationManager.ConnectionStrings[connectionStringName]", span="260-260", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_148 [label="return connectionStringSetting != null;", span="262-262", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_149 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="258-258", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_165 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerStorage.cs"];
m11_6 [label="throw new ArgumentNullException(''options'');", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_142 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_119 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerStorage.cs"];
m11_24 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerStorage.cs"];
m11_133 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerStorage.cs"];
m11_54 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SqlServerStorage.cs"];
m11_71 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="SqlServerStorage.cs"];
m11_138 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerStorage.cs"];
m11_46 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="47-47", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerStorage.cs"];
m11_88 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_0 [label="Entry lambda expression", span="26-40", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_1 [label="var connection = JobStorage.Current.GetConnection()", span="28-28", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_4 [label="throw new ArgumentNullException(''nameOrConnectionString'');", span="59-59", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_2 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_3 [label="nameOrConnectionString == null", span="59-59", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_5 [label="options == null", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_10 [label="IsConnectionStringInConfiguration(nameOrConnectionString)", span="68-68", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_11 [label="_connectionString = ConfigurationManager.ConnectionStrings[nameOrConnectionString].ConnectionString", span="70-70", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_14 [label="var connection = CreateAndOpenConnection()", span="81-81", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_12 [label="throw new ArgumentException(\r\n                    string.Format(''Could not find connection string with name '{0}' in application config file'',\r\n                                  nameOrConnectionString));", span="74-76", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_13 [label="options.PrepareSchemaIfNecessary", span="79-79", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_15 [label="SqlServerObjectsInstaller.Install(connection)", span="83-83", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_95 [label="Entry lambda expression", span="176-180", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_96 [label="action(connection)", span="178-178", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_97 [label="return true;", span="179-179", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_98 [label="Exit lambda expression", span="176-180", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_109 [label="Entry lambda expression", span="200-204", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_110 [label="action(connection)", span="202-202", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_111 [label="return true;", span="203-203", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_112 [label="Exit lambda expression", span="200-204", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_151 [label="var sqlStorage = page.Storage as SqlServerStorage", span="270-270", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_150 [label="Entry lambda expression", span="268-285", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_152 [label="sqlStorage == null", span="271-271", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_154 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="273-284", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_153 [label="return new Metric(''???'');", span="271-271", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_155 [label="Exit lambda expression", span="268-285", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_157 [label="Entry lambda expression", span="273-284", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_159 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="279-281", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_158 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="275-277", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_160 [label="return new Metric(value.ToString(''N0''));", span="283-283", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_167 [label="var sqlStorage = page.Storage as SqlServerStorage", span="292-292", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_166 [label="Entry lambda expression", span="290-307", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_168 [label="sqlStorage == null", span="293-293", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_170 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="295-306", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_169 [label="return new Metric(''???'');", span="293-293", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_171 [label="Exit lambda expression", span="290-307", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_172 [label="Entry lambda expression", span="295-306", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_174 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="301-303", cluster="lambda expression", color=green, community=0, file="SqlServerStorage.cs"];
m11_173 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="297-299", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_175 [label="return new Metric(value.ToString(''N0''));", span="305-305", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_161 [label="Exit lambda expression", span="273-284", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_176 [label="Exit lambda expression", span="295-306", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_78 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_81 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_85 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_79 [label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="138-138", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_80 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_83 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_82 [label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_87 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_86 [label="x.Key", span="140-140", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_89 [label="x.Value", span="140-140", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_90 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_25 [label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="247-247", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_139 [label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", color=green, community=0, file="SqlServerStorage.cs"];
m11_140 [label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="250-250", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_141 [label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="247-247", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_34 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m11_35 [label="return new SqlServerMonitoringApi(this);", span="110-110", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", color=green, community=0, file="SqlServerStorage.cs"];
m11_36 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m11_72 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerStorage.cs"];
m11_9 [label="_connectionString = nameOrConnectionString", span="66-66", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_55 [label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="131-131", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_57 [label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="137-140", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_56 [label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="133-133", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_58 [label="var builder = new StringBuilder()", span="142-142", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_60 [label="parts.ContainsKey(alias)", span="146-146", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_61 [label="builder.Append(parts[alias])", span="148-148", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_65 [label="parts.ContainsKey(alias)", span="157-157", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_66 [label="builder.Append(parts[alias])", span="159-159", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_67 [label="return builder.Length != 0\r\n                    ? String.Format(''SQL Server: {0}'', builder)\r\n                    : canNotParseMessage;", span="164-166", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_69 [label="return canNotParseMessage;", span="170-170", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_59 [label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="144-144", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_62 [label="builder.Length != 0", span="153-153", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_63 [label="builder.Append(''@'')", span="153-153", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_64 [label="new[] { ''Database'', ''Initial Catalog'' }", span="155-155", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_68 [label=Exception, span="168-168", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_70 [label="Exit Hangfire.SqlServer.SqlServerStorage.ToString()", span="131-131", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_53 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerStorage.cs"];
m11_47 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerStorage.cs"];
m11_41 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs"];
m11_163 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerStorage.cs"];
m11_16 [label="InitializeQueueProviders()", span="87-87", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_17 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_94 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="183-183", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_100 [label="SqlConnection connection = null", span="185-185", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", color=green, community=0, file="SqlServerStorage.cs"];
m11_101 [label="connection = CreateAndOpenConnection()", span="189-189", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", color=green, community=0, file="SqlServerStorage.cs"];
m11_102 [label="return func(connection);", span="190-190", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", color=green, community=0, file="SqlServerStorage.cs"];
m11_103 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="183-183", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_19 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="253-253", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs"];
m11_144 [label="return nameOrConnectionString.Contains('';'');", span="255-255", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs"];
m11_145 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="253-253", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs"];
m11_108 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="207-207", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_113 [label="var transaction = CreateTransaction(isolationLevel ?? _options.TransactionIsolationLevel)", span="209-209", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", color=green, community=0, file="SqlServerStorage.cs"];
m11_114 [label="var result = UseConnection(func)", span="211-211", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", color=green, community=0, file="SqlServerStorage.cs"];
m11_115 [label="transaction.Complete()", span="212-212", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", color=green, community=0, file="SqlServerStorage.cs"];
m11_116 [label="return result;", span="214-214", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", color=green, community=0, file="SqlServerStorage.cs"];
m11_117 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="207-207", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_118 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="SqlServerStorage.cs"];
m11_75 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerStorage.cs"];
m11_177 [label="Hangfire.SqlServer.SqlServerStorage", span="", file="SqlServerStorage.cs"];
m11_178 [label="System.Action<SqlConnection>", span="", file="SqlServerStorage.cs"];
m11_179 [label="System.Action<SqlConnection>", span="", file="SqlServerStorage.cs"];
m12_201 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="242-242", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_202 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="245-246", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_203 [label="var worker = CreateWorker()", span="248-248", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_204 [label="worker.Execute(_token)", span="251-251", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_205 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="254-257", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_206 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="242-242", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_53 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())", span="55-58", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", color=red, community=0];
m12_42 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_48 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_61 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_62 [label="new Worker(null)", span="67-67", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_63 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_64 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="SqlServerWriteOnlyTransaction.cs"];
m12_66 [label="var worker = CreateWorker()", span="75-75", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="SqlServerWriteOnlyTransaction.cs"];
m12_65 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="73-73", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="SqlServerWriteOnlyTransaction.cs"];
m12_67 [label="worker.Execute(_token)", span="77-77", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="SqlServerWriteOnlyTransaction.cs"];
m12_93 [label="Entry Unk.DeleteJobFromQueue", span="", cluster="Unk.DeleteJobFromQueue", file="SqlServerWriteOnlyTransaction.cs"];
m12_10 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="43-47", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs", color=red, community=0];
m12_11 [label="_stateMachine = new Mock<IStateMachine>()", span="49-49", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs", color=red, community=0];
m12_13 [label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="55-58", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs", color=red, community=0];
m12_12 [label="_context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="51-53", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_14 [label="_token = new CancellationToken()", span="60-60", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs", color=red, community=0];
m12_60 [label="Exit HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="112-112", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_72 [label="pageIndex++", span="136-136", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_24 [label="_startPageIndex = 1", span="71-71", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_94 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="98-98", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_95 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="101-105", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_96 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="107-108", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_97 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="110-114", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_98 [label="var worker = CreateWorker()", span="116-116", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_99 [label="worker.Execute(_token)", span="119-119", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_100 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="98-98", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerWriteOnlyTransaction.cs"];
m12_16 [label="perPage <= 0", span="60-60", cluster="HangFire.Web.Pager.RecordsPerPageUrl(int)", file="SqlServerWriteOnlyTransaction.cs", color=green, community=0];
m12_207 [label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33", cluster="HangFire.Common.JobLoadException.JobLoadException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_20 [label="_startPageIndex = CurrentPage - (PageItemsCount / 2)", span="67-67", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_108 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="SqlServerWriteOnlyTransaction.cs"];
m12_0 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_5 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_4 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_6 [label="_processingJob = new Mock<IProcessingJob>()", span="35-35", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_1 [label="_context = new WorkerContextMock()", span="27-27", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_2 [label="_storage = _context.SharedContext.Storage", span="28-28", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_3 [label="_process = _context.SharedContext.PerformanceProcess", span="29-29", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_7 [label="_processingJob.Setup(x => x.JobId).Returns(JobId)", span="36-36", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs", color=red, community=0];
m12_165 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="200-200", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_166 [label="var exception = new InvalidOperationException()", span="203-203", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_167 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="204-206", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_170 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="214-217", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_168 [label="var worker = CreateWorker()", span="208-208", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_169 [label="worker.Execute(_token)", span="211-211", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_171 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="200-200", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_172 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_191 [label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="SqlServerWriteOnlyTransaction.cs"];
m12_38 [label="pagerItems.Add(new Item(TotalPageCount, false, ItemType.Page))", span="98-98", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_47 [label="Entry HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="134-134", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_216 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="265-265", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="SqlServerWriteOnlyTransaction.cs"];
m12_154 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="187-187", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_155 [label="var worker = CreateWorker()", span="189-189", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_156 [label="worker.Execute(_token)", span="191-191", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_157 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="193-196", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_158 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="187-187", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_49 [label="x.Create(_connection.Object)", span="52-52", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_74 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_75 [label="x.GetConnection()", span="79-79", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_76 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_28 [label="var pagerItems = new List<Item>()", span="78-78", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_101 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="SqlServerWriteOnlyTransaction.cs"];
m12_184 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="221-221", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_185 [label="var exception = new InvalidOperationException()", span="224-224", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_186 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="225-227", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_189 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="235-238", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_187 [label="var worker = CreateWorker()", span="229-229", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_188 [label="worker.Execute(_token)", span="232-232", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_190 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="221-221", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerWriteOnlyTransaction.cs"];
m12_15 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m12_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_18 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerWriteOnlyTransaction.cs"];
m12_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerWriteOnlyTransaction.cs"];
m12_44 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_77 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_78 [label="x.Dispose()", span="80-80", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_79 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_80 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerWriteOnlyTransaction.cs"];
m12_123 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="138-138", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_124 [label="var worker = CreateWorker()", span="140-140", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_125 [label="worker.Execute(_token)", span="142-142", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_126 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="144-149", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_127 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="138-138", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_8 [label="Entry System.Math.Ceiling(double)", span="0-0", cluster="System.Math.Ceiling(double)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_9 [label="Entry HangFire.Web.Pager.GenerateItems()", span="64-64", cluster="HangFire.Web.Pager.GenerateItems()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_134 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="153-153", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerWriteOnlyTransaction.cs"];
m12_135 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="156-161", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerWriteOnlyTransaction.cs"];
m12_136 [label="var worker = CreateWorker()", span="163-163", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerWriteOnlyTransaction.cs"];
m12_137 [label="worker.Execute(_token)", span="166-166", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerWriteOnlyTransaction.cs"];
m12_138 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="169-171", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerWriteOnlyTransaction.cs"];
m12_139 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="153-153", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerWriteOnlyTransaction.cs"];
m12_39 [label="AddNext(pagerItems)", span="101-101", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_68 [label="var pageIndex = _startPageIndex", span="136-136", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_69 [label="pageIndex <= _endPageIndex", span="136-136", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_70 [label="var item = new Item(pageIndex, false, ItemType.Page)", span="138-138", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_173 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="SqlServerWriteOnlyTransaction.cs"];
m12_55 [label="var index = _startPageIndex - 1", span="116-116", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_211 [label="Entry lambda expression", span="254-257", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_25 [label="_endPageIndex = _startPageIndex + PageItemsCount - 1", span="74-74", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_29 [label="TotalPageCount == 0", span="79-79", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_32 [label="_startPageIndex > 1", span="84-84", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_35 [label="AddPageNumbers(pagerItems)", span="91-91", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_40 [label="return pagerItems;", span="103-103", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_52 [label="Exit HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="106-106", cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_26 [label="_endPageIndex > TotalPageCount", span="75-75", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_27 [label="_endPageIndex = TotalPageCount", span="76-76", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_30 [label="return pagerItems;", span="79-79", cluster="HangFire.Web.Pager.GenerateItems()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_31 [label="AddPrevious(pagerItems)", span="81-81", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_33 [label="pagerItems.Add(new Item(1, false, ItemType.Page))", span="85-85", cluster="HangFire.Web.Pager.GenerateItems()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_34 [label="AddMoreBefore(pagerItems)", span="88-88", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_36 [label="AddMoreAfter(pagerItems)", span="94-94", cluster="HangFire.Web.Pager.GenerateItems()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_37 [label="_endPageIndex < TotalPageCount", span="97-97", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_41 [label="Exit HangFire.Web.Pager.GenerateItems()", span="64-64", cluster="HangFire.Web.Pager.GenerateItems()", file="SqlServerWriteOnlyTransaction.cs"];
m12_45 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerWriteOnlyTransaction.cs"];
m12_46 [label="Entry HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="112-112", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_50 [label="var item = new Item(CurrentPage - 1, CurrentPage == 1, ItemType.PrevPage)", span="108-108", cluster="HangFire.Web.Pager.AddPrevious(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_54 [label="_startPageIndex > 2", span="114-114", cluster="HangFire.Web.Pager.AddMoreBefore(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_87 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_90 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_88 [label="x.FetchNextJob(_context.SharedContext.Queues, _token)", span="91-91", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_89 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_91 [label="x.DeleteJobFromQueue(JobId, Queue)", span="94-94", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_92 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_102 [label="Entry lambda expression", span="102-103", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_105 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_109 [label="Entry lambda expression", span="111-112", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_103 [label="x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="102-103", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_104 [label="Exit lambda expression", span="102-103", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_106 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="107-107", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_107 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_110 [label="x.TryToChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="111-112", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_111 [label="Exit lambda expression", span="111-112", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_117 [label="Entry lambda expression", span="131-134", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_118 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>())", span="131-134", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_119 [label="Exit lambda expression", span="131-134", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_120 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_121 [label="state.ServerName == _context.Object.ServerId", span="133-133", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_122 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_128 [label="Entry lambda expression", span="144-149", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_129 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="144-149", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_130 [label="Exit lambda expression", span="144-149", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_131 [label="Entry lambda expression", span="148-149", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_132 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="148-149", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_133 [label="Exit lambda expression", span="148-149", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_140 [label="Entry lambda expression", span="157-160", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_143 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_141 [label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="157-160", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_142 [label="Exit lambda expression", span="157-160", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_144 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="170-170", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_145 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_151 [label="Entry lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_152 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_153 [label="Exit lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_159 [label="Entry lambda expression", span="193-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_160 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="193-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_161 [label="Exit lambda expression", span="193-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_162 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_163 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="196-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_164 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_178 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="214-217", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_181 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="216-216", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_174 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_177 [label="Entry lambda expression", span="214-217", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_175 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="205-205", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_176 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_179 [label="Exit lambda expression", span="214-217", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_180 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_182 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_196 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="235-238", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_199 [label="state.Exception == exception && state.Reason == ''hello''", span="237-237", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_192 [label="Entry lambda expression", span="226-226", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_195 [label="Entry lambda expression", span="235-238", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_193 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="226-226", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_194 [label="Exit lambda expression", span="226-226", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_197 [label="Exit lambda expression", span="235-238", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_198 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_200 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_208 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_209 [label="x.GetJobData(JobId)", span="245-245", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_210 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_212 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="254-257", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_213 [label="Exit lambda expression", span="254-257", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m12_112 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="125-125", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_113 [label="var worker = CreateWorker()", span="127-127", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_114 [label="worker.Execute(_token)", span="129-129", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_115 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", span="131-134", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_116 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="125-125", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerWriteOnlyTransaction.cs"];
m12_81 [label="HangFire.Web.Pager", span="", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m12_82 [label="HangFire.Web.Pager.Item", span="", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m12_83 [label="worker.Execute(_token)", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m12_84 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_context.SharedContext.Queues, _token),\r\n                Times.Once)", span="90-92", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m12_85 [label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", span="94-94", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m12_86 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="84-84", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m12_183 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SqlServerWriteOnlyTransaction.cs"];
m12_71 [label="results.Add(item)", span="139-139", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_214 [label="return new Worker(_context.Object);", span="262-262", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="SqlServerWriteOnlyTransaction.cs"];
m12_215 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="260-260", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="SqlServerWriteOnlyTransaction.cs"];
m12_73 [label="Exit HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", span="134-134", cluster="HangFire.Web.Pager.AddPageNumbers(System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_21 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="SqlServerWriteOnlyTransaction.cs"];
m12_22 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlyTransaction.cs"];
m12_23 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m12_59 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="64-64", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m12_58 [label="Assert.Equal(''context'', exception.ParamName)", span="69-69", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m12_56 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="64-64", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m12_57 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null))", span="66-67", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m12_43 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="SqlServerWriteOnlyTransaction.cs"];
m12_51 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="SqlServerWriteOnlyTransaction.cs"];
m12_146 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="175-175", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m12_147 [label="var worker = CreateWorker()", span="177-177", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m12_148 [label="worker.Execute(_token)", span="179-179", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m12_149 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="181-183", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m12_150 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="175-175", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m12_217 [label="HangFire.Core.Tests.Server.WorkerFacts", span="", file="SqlServerWriteOnlyTransaction.cs"];
m12_218 [label=exception, span="", file="SqlServerWriteOnlyTransaction.cs"];
m12_219 [label=exception, span="", file="SqlServerWriteOnlyTransaction.cs"];
n59 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n59 -> n47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n49  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n50  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n51  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n52  [key=2, style=dotted];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=queues];
n5 -> n10  [key=1, style=dashed, color=darkseagreen4, label=queues];
n6 -> n7  [key=0, style=solid];
n6 -> n49  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n47  [key=0, style=solid];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label=queue];
n10 -> n14  [key=1, style=dashed, color=darkseagreen4, label=queue];
n10 -> n16  [key=1, style=dashed, color=darkseagreen4, label=queue];
n10 -> n18  [key=1, style=dashed, color=darkseagreen4, label=queue];
n10 -> n20  [key=1, style=dashed, color=darkseagreen4, label=queue];
n10 -> n22  [key=1, style=dashed, color=darkseagreen4, label=queue];
n10 -> n25  [key=1, style=dashed, color=darkseagreen4, label=queue];
n8 -> n48  [key=0, style=solid];
n8 -> n49  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n49  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n49  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n53  [key=2, style=dotted];
n12 -> n54  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n54  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n54  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n53  [key=2, style=dotted];
n18 -> n54  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n54  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n45  [key=0, style=solid];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label=job];
n13 -> n14  [key=0, style=solid];
n13 -> n49  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n49  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n49  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n49  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n49  [key=2, style=dotted];
n23 -> n46  [key=0, style=solid];
n23 -> n49  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n49  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n49  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n49  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n54  [key=2, style=dotted];
n27 -> n27  [key=1, style=dashed, color=darkseagreen4, label=job];
n27 -> n29  [key=1, style=dashed, color=darkseagreen4, label=job];
n28 -> n29  [key=0, style=solid];
n28 -> n49  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n53  [key=2, style=dotted];
n29 -> n54  [key=2, style=dotted];
n29 -> n29  [key=1, style=dashed, color=darkseagreen4, label=job];
n29 -> n31  [key=1, style=dashed, color=darkseagreen4, label=job];
n30 -> n31  [key=0, style=solid];
n30 -> n49  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n55  [key=2, style=dotted];
n31 -> n56  [key=2, style=dotted];
n31 -> n31  [key=1, style=dashed, color=darkseagreen4, label=job];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label=job];
n32 -> n33  [key=0, style=solid];
n32 -> n49  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=0, style=solid];
n33 -> n33  [key=1, style=dashed, color=darkseagreen4, label=job];
n33 -> n36  [key=1, style=dashed, color=darkseagreen4, label=job];
n34 -> n35  [key=0, style=solid];
n34 -> n49  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n49  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n57  [key=2, style=dotted];
n36 -> n54  [key=2, style=dotted];
n36 -> n36  [key=1, style=dashed, color=darkseagreen4, label=job];
n36 -> n38  [key=1, style=dashed, color=darkseagreen4, label=job];
n37 -> n38  [key=0, style=solid];
n37 -> n49  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n44  [key=0, style=solid];
n38 -> n38  [key=1, style=dashed, color=darkseagreen4, label=job];
n38 -> n40  [key=1, style=dashed, color=darkseagreen4, label=job];
n39 -> n40  [key=0, style=solid];
n39 -> n49  [key=2, style=dotted];
n44 -> n25  [key=0, style=solid];
n44 -> n49  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n58  [key=2, style=dotted];
n40 -> n54  [key=2, style=dotted];
n40 -> n40  [key=1, style=dashed, color=darkseagreen4, label=job];
n40 -> n42  [key=1, style=dashed, color=darkseagreen4, label=job];
n41 -> n42  [key=0, style=solid];
n41 -> n49  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n54  [key=2, style=dotted];
n42 -> n42  [key=1, style=dashed, color=darkseagreen4, label=job];
n43 -> n44  [key=0, style=solid];
n43 -> n49  [key=2, style=dotted];
n46 -> n10  [key=0, style=solid];
n46 -> n49  [key=2, style=dotted];
n48 -> n0  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_30  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_4 -> m0_7  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_7 -> m0_2  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_9 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_20  [key=0, style=solid];
m0_10 -> m0_14  [key=1, style=dashed, color=red, label=table];
m0_10 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=table];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_28  [key=2, style=dotted];
m0_17 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_28  [key=2, style=dotted];
m0_20 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_22  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid, color=red];
m0_14 -> m0_24  [key=2, style=dotted, color=red];
m0_14 -> m0_25  [key=2, style=dotted, color=red];
m0_14 -> m0_16  [key=1, style=dashed, color=red, label=removedCount];
m0_14 -> m0_19  [key=1, style=dashed, color=red, label=removedCount];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_26  [key=2, style=dotted];
m0_16 -> m0_27  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_23  [key=2, style=dotted, color=red];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_19 -> m0_12  [key=0, style=solid, color=red];
m0_19 -> m0_10  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_29  [key=2, style=dotted];
m0_18 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_18 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_21 -> m0_9  [key=0, style=bold, color=blue];
m0_33 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m0_33 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m0_33 -> m0_13  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.ExpirationManager"];
m0_33 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_6  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_12 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m2_12 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m2_12 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m2_12 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m3_29 -> m3_30  [key=0, style=solid];
m3_31 -> m3_9  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_9  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
m3_30 -> m3_34  [key=2, style=dotted];
m3_33 -> m3_29  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_34 -> m3_46  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_21  [key=2, style=dotted];
m3_47 -> m3_34  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_12  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=ConnectionFactory];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid, color=green];
m3_5 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_8  [key=2, style=dotted, color=green];
m3_5 -> m3_10  [key=1, style=dashed, color=green, label="lambda expression"];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_7  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_7 -> m3_4  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_8  [key=2, style=dotted];
m3_15 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_9  [key=2, style=dotted];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_17 -> m3_14  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_8  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_24 -> m3_9  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_22  [key=0, style=bold, color=blue];
m3_42 -> m3_43  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_18 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_18 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_18 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider"];
m3_26 -> m3_27  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_21  [key=2, style=dotted];
m3_20 -> m3_18  [key=0, style=bold, color=blue];
m3_28 -> m3_26  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_45  [key=2, style=dotted];
m3_44 -> m3_42  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_34  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_41  [key=2, style=dotted];
m3_38 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_40  [key=2, style=dotted];
m3_39 -> m3_35  [key=0, style=bold, color=blue];
m3_48 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m3_48 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m4_131 -> m4_136  [key=1, style=dashed, color=green, label=string];
m4_131 -> m4_140  [key=1, style=dashed, color=green, label=string];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label=double];
m4_136 -> m4_137  [key=0, style=solid, color=green];
m4_136 -> m4_45  [key=2, style=dotted, color=green];
m4_136 -> m4_139  [key=1, style=dashed, color=green, label="lambda expression"];
m4_134 -> m4_136  [key=0, style=solid, color=green];
m4_134 -> m4_135  [key=0, style=solid];
m4_133 -> m4_5  [key=2, style=dotted];
m4_133 -> m4_137  [key=0, style=solid];
m4_132 -> m4_134  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_135 -> m4_137  [key=0, style=solid];
m4_135 -> m4_138  [key=2, style=dotted];
m4_137 -> m4_131  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=2, style=dotted];
m4_5 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_261 -> m4_265  [key=1, style=dashed, color=green, label=string];
m4_261 -> m4_268  [key=1, style=dashed, color=green, label=string];
m4_261 -> m4_262  [key=0, style=solid];
m4_265 -> m4_266  [key=0, style=solid, color=green];
m4_265 -> m4_45  [key=2, style=dotted, color=green];
m4_265 -> m4_267  [key=1, style=dashed, color=green, label="lambda expression"];
m4_264 -> m4_265  [key=0, style=solid, color=green];
m4_264 -> m4_268  [key=1, style=dashed, color=green, label=query];
m4_264 -> m4_264  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_263 -> m4_5  [key=2, style=dotted];
m4_263 -> m4_266  [key=0, style=solid];
m4_262 -> m4_264  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_266 -> m4_261  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid, color=red];
m4_15 -> m4_16  [key=0, style=solid, color=red];
m4_15 -> m4_8  [key=2, style=dotted, color=red];
m4_15 -> m4_18  [key=1, style=dashed, color=green, label="string[]"];
m4_15 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_15 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_16 -> m4_17  [key=0, style=solid, color=red];
m4_16 -> m4_9  [key=2, style=dotted, color=red];
m4_16 -> m4_18  [key=0, style=solid, color=green];
m4_17 -> m4_14  [key=0, style=bold, color=blue];
m4_17 -> m4_5  [key=2, style=dotted];
m4_17 -> m4_23  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid, color=red];
m4_18 -> m4_24  [key=2, style=dotted, color=green];
m4_18 -> m4_25  [key=2, style=dotted, color=green];
m4_18 -> m4_26  [key=2, style=dotted, color=green];
m4_18 -> m4_18  [key=1, style=dashed, color=green, label="lambda expression"];
m4_18 -> m4_21  [key=1, style=dashed, color=green, label=providers];
m4_18 -> m4_32  [key=0, style=solid, color=green];
m4_19 -> m4_21  [key=0, style=solid, color=green];
m4_19 -> m4_20  [key=0, style=solid, color=red];
m4_19 -> m4_13  [key=2, style=dotted, color=red];
m4_21 -> m4_22  [key=0, style=solid, color=red];
m4_21 -> m4_29  [key=2, style=dotted, color=green];
m4_22 -> m4_23  [key=0, style=solid, color=red];
m4_22 -> m4_30  [key=2, style=dotted];
m4_22 -> m4_8  [key=2, style=dotted, color=red];
m4_22 -> m4_25  [key=1, style=dashed, color=red, label="lambda expression"];
m4_20 -> m4_14  [key=2, style=dotted];
m4_20 -> m4_23  [key=0, style=solid];
m4_20 -> m4_27  [key=2, style=dotted];
m4_20 -> m4_28  [key=2, style=dotted];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_23 -> m4_15  [key=0, style=bold, color=blue];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_9  [key=2, style=dotted];
m4_172 -> m4_178  [key=1, style=dashed, color=green, label=string];
m4_172 -> m4_182  [key=1, style=dashed, color=green, label=string];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m4_172 -> m4_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m4_178 -> m4_179  [key=0, style=solid, color=green];
m4_178 -> m4_107  [key=2, style=dotted, color=green];
m4_178 -> m4_181  [key=1, style=dashed, color=green, label="lambda expression"];
m4_177 -> m4_178  [key=0, style=solid, color=green];
m4_177 -> m4_182  [key=1, style=dashed, color=green, label=data];
m4_177 -> m4_180  [key=2, style=dotted];
m4_174 -> m4_5  [key=2, style=dotted];
m4_174 -> m4_179  [key=0, style=solid];
m4_176 -> m4_5  [key=2, style=dotted];
m4_176 -> m4_179  [key=0, style=solid];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_175  [key=0, style=solid];
m4_175 -> m4_177  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_179 -> m4_172  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid, color=red];
m4_192 -> m4_195  [key=1, style=dashed, color=green, label=string];
m4_192 -> m4_198  [key=1, style=dashed, color=green, label=string];
m4_192 -> m4_193  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid, color=green];
m4_195 -> m4_107  [key=2, style=dotted, color=green];
m4_195 -> m4_197  [key=1, style=dashed, color=green, label="lambda expression"];
m4_193 -> m4_195  [key=0, style=solid, color=green];
m4_193 -> m4_194  [key=0, style=solid];
m4_194 -> m4_5  [key=2, style=dotted];
m4_194 -> m4_196  [key=0, style=solid];
m4_196 -> m4_192  [key=0, style=bold, color=blue];
m4_220 -> m4_224  [key=1, style=dashed, color=green, label=string];
m4_220 -> m4_227  [key=1, style=dashed, color=green, label=string];
m4_220 -> m4_221  [key=0, style=solid];
m4_224 -> m4_225  [key=0, style=solid, color=green];
m4_224 -> m4_45  [key=2, style=dotted, color=green];
m4_224 -> m4_226  [key=1, style=dashed, color=green, label="lambda expression"];
m4_223 -> m4_224  [key=0, style=solid, color=green];
m4_223 -> m4_227  [key=1, style=dashed, color=green, label=query];
m4_223 -> m4_223  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_222 -> m4_5  [key=2, style=dotted];
m4_222 -> m4_225  [key=0, style=solid];
m4_221 -> m4_223  [key=0, style=solid];
m4_221 -> m4_222  [key=0, style=solid];
m4_225 -> m4_220  [key=0, style=bold, color=blue];
m4_293 -> m4_297  [key=1, style=dashed, color=green, label=string];
m4_293 -> m4_300  [key=1, style=dashed, color=green, label=string];
m4_293 -> m4_294  [key=0, style=solid];
m4_297 -> m4_298  [key=0, style=solid, color=green];
m4_297 -> m4_45  [key=2, style=dotted, color=green];
m4_297 -> m4_299  [key=1, style=dashed, color=green, label="lambda expression"];
m4_296 -> m4_297  [key=0, style=solid, color=green];
m4_296 -> m4_300  [key=1, style=dashed, color=green, label=query];
m4_296 -> m4_296  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_295 -> m4_5  [key=2, style=dotted];
m4_295 -> m4_298  [key=0, style=solid];
m4_294 -> m4_296  [key=0, style=solid];
m4_294 -> m4_295  [key=0, style=solid];
m4_298 -> m4_293  [key=0, style=bold, color=blue];
m4_252 -> m4_256  [key=1, style=dashed, color=green, label=string];
m4_252 -> m4_259  [key=1, style=dashed, color=green, label=string];
m4_252 -> m4_253  [key=0, style=solid];
m4_256 -> m4_257  [key=0, style=solid, color=green];
m4_256 -> m4_45  [key=2, style=dotted, color=green];
m4_256 -> m4_258  [key=1, style=dashed, color=green, label="lambda expression"];
m4_255 -> m4_256  [key=0, style=solid, color=green];
m4_255 -> m4_259  [key=1, style=dashed, color=green, label=query];
m4_255 -> m4_255  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_254 -> m4_5  [key=2, style=dotted];
m4_254 -> m4_257  [key=0, style=solid];
m4_253 -> m4_255  [key=0, style=solid];
m4_253 -> m4_254  [key=0, style=solid];
m4_257 -> m4_252  [key=0, style=bold, color=blue];
m4_314 -> m4_318  [key=1, style=dashed, color=green, label=string];
m4_314 -> m4_321  [key=1, style=dashed, color=green, label=string];
m4_314 -> m4_315  [key=0, style=solid];
m4_318 -> m4_319  [key=0, style=solid, color=green];
m4_318 -> m4_45  [key=2, style=dotted, color=green];
m4_318 -> m4_320  [key=1, style=dashed, color=green, label="lambda expression"];
m4_317 -> m4_318  [key=0, style=solid, color=green];
m4_317 -> m4_321  [key=1, style=dashed, color=green, label=query];
m4_317 -> m4_317  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_316 -> m4_5  [key=2, style=dotted];
m4_316 -> m4_319  [key=0, style=solid];
m4_315 -> m4_317  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_319 -> m4_314  [key=0, style=bold, color=blue];
m4_63 -> m4_67  [key=1, style=dashed, color=green, label=string];
m4_63 -> m4_70  [key=1, style=dashed, color=green, label=string];
m4_63 -> m4_64  [key=0, style=solid];
m4_67 -> m4_67  [key=3, color=green, style=bold, label="Local variable Hangfire.Common.JobLoadException loadException"];
m4_67 -> m4_68  [key=0, style=solid, color=green];
m4_67 -> m4_45  [key=2, style=dotted, color=green];
m4_67 -> m4_41  [key=1, style=dashed, color=green, label="lambda expression"];
m4_66 -> m4_67  [key=0, style=solid, color=green];
m4_66 -> m4_70  [key=1, style=dashed, color=green, label=sql];
m4_66 -> m4_66  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m4_65 -> m4_5  [key=2, style=dotted];
m4_65 -> m4_68  [key=0, style=solid];
m4_64 -> m4_66  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_68 -> m4_63  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid, color=red];
m4_35 -> m4_33  [key=2, style=dotted, color=red];
m4_35 -> m4_42  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_35 -> m4_47  [key=1, style=dashed, color=green, label="System.DateTime"];
m4_35 -> m4_48  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_35 -> m4_49  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_35 -> m4_51  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_35 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m4_35 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m4_36 -> m4_37  [key=0, style=solid, color=red];
m4_36 -> m4_39  [key=2, style=dotted, color=red];
m4_36 -> m4_38  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid, color=red];
m4_37 -> m4_40  [key=2, style=dotted, color=red];
m4_37 -> m4_41  [key=1, style=dashed, color=red, label="lambda expression"];
m4_37 -> m4_5  [key=2, style=dotted];
m4_37 -> m4_43  [key=0, style=solid];
m4_38 -> m4_34  [key=0, style=bold, color=blue];
m4_38 -> m4_40  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_155 -> m4_158  [key=1, style=dashed, color=green, label=string];
m4_155 -> m4_162  [key=1, style=dashed, color=green, label=string];
m4_155 -> m4_156  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid, color=green];
m4_158 -> m4_160  [key=2, style=dotted, color=green];
m4_158 -> m4_161  [key=1, style=dashed, color=green, label="lambda expression"];
m4_156 -> m4_158  [key=0, style=solid, color=green];
m4_156 -> m4_157  [key=0, style=solid];
m4_157 -> m4_5  [key=2, style=dotted];
m4_157 -> m4_159  [key=0, style=solid];
m4_159 -> m4_155  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid, color=green];
m4_11 -> m4_12  [key=0, style=solid, color=green];
m4_11 -> m4_13  [key=2, style=dotted, color=green];
m4_11 -> m4_14  [key=2, style=dotted, color=green];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_100 -> m4_105  [key=1, style=dashed, color=green, label=string];
m4_100 -> m4_109  [key=1, style=dashed, color=green, label=string];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_105 -> m4_106  [key=0, style=solid, color=green];
m4_105 -> m4_107  [key=2, style=dotted, color=green];
m4_105 -> m4_108  [key=1, style=dashed, color=green, label="lambda expression"];
m4_103 -> m4_105  [key=0, style=solid, color=green];
m4_103 -> m4_104  [key=0, style=solid];
m4_102 -> m4_5  [key=2, style=dotted];
m4_102 -> m4_106  [key=0, style=solid];
m4_104 -> m4_5  [key=2, style=dotted];
m4_104 -> m4_106  [key=0, style=solid];
m4_101 -> m4_103  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_106 -> m4_100  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_230 -> m4_234  [key=1, style=dashed, color=green, label=string];
m4_230 -> m4_237  [key=1, style=dashed, color=green, label=string];
m4_230 -> m4_231  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid, color=green];
m4_234 -> m4_45  [key=2, style=dotted, color=green];
m4_234 -> m4_236  [key=1, style=dashed, color=green, label="lambda expression"];
m4_233 -> m4_234  [key=0, style=solid, color=green];
m4_233 -> m4_237  [key=1, style=dashed, color=green, label=query];
m4_233 -> m4_233  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_232 -> m4_5  [key=2, style=dotted];
m4_232 -> m4_235  [key=0, style=solid];
m4_231 -> m4_233  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_235 -> m4_230  [key=0, style=bold, color=blue];
m4_243 -> m4_247  [key=1, style=dashed, color=green, label=string];
m4_243 -> m4_250  [key=1, style=dashed, color=green, label=string];
m4_243 -> m4_244  [key=0, style=solid];
m4_247 -> m4_248  [key=0, style=solid, color=green];
m4_247 -> m4_45  [key=2, style=dotted, color=green];
m4_247 -> m4_249  [key=1, style=dashed, color=green, label="lambda expression"];
m4_246 -> m4_247  [key=0, style=solid, color=green];
m4_246 -> m4_250  [key=1, style=dashed, color=green, label=query];
m4_246 -> m4_246  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_245 -> m4_5  [key=2, style=dotted];
m4_245 -> m4_248  [key=0, style=solid];
m4_244 -> m4_246  [key=0, style=solid];
m4_244 -> m4_245  [key=0, style=solid];
m4_248 -> m4_243  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_0 -> m4_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_2 -> m4_4  [key=0, style=solid, color=green];
m4_2 -> m4_5  [key=2, style=dotted, color=green];
m4_26 -> m4_27  [key=0, style=solid, color=red];
m4_26 -> m4_13  [key=2, style=dotted, color=red];
m4_111 -> m4_116  [key=1, style=dashed, color=green, label=string];
m4_111 -> m4_119  [key=1, style=dashed, color=green, label=string];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_116 -> m4_117  [key=0, style=solid, color=green];
m4_116 -> m4_45  [key=2, style=dotted, color=green];
m4_116 -> m4_118  [key=1, style=dashed, color=green, label="lambda expression"];
m4_114 -> m4_116  [key=0, style=solid, color=green];
m4_114 -> m4_115  [key=0, style=solid];
m4_113 -> m4_5  [key=2, style=dotted];
m4_113 -> m4_117  [key=0, style=solid];
m4_115 -> m4_5  [key=2, style=dotted];
m4_115 -> m4_117  [key=0, style=solid];
m4_112 -> m4_114  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_117 -> m4_111  [key=0, style=bold, color=blue];
m4_184 -> m4_187  [key=1, style=dashed, color=green, label=string];
m4_184 -> m4_190  [key=1, style=dashed, color=green, label=string];
m4_184 -> m4_185  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid, color=green];
m4_187 -> m4_107  [key=2, style=dotted, color=green];
m4_187 -> m4_189  [key=1, style=dashed, color=green, label="lambda expression"];
m4_185 -> m4_187  [key=0, style=solid, color=green];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_5  [key=2, style=dotted];
m4_186 -> m4_188  [key=0, style=solid];
m4_188 -> m4_184  [key=0, style=bold, color=blue];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid, color=green];
m4_6 -> m4_9  [key=2, style=dotted];
m4_7 -> m4_4  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid, color=green];
m4_7 -> m4_9  [key=2, style=dotted, color=green];
m4_85 -> m4_89  [key=1, style=dashed, color=green, label=string];
m4_85 -> m4_92  [key=1, style=dashed, color=green, label=string];
m4_85 -> m4_86  [key=0, style=solid];
m4_89 -> m4_67  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Storage.StateData "];
m4_89 -> m4_90  [key=0, style=solid, color=green];
m4_89 -> m4_45  [key=2, style=dotted, color=green];
m4_89 -> m4_91  [key=1, style=dashed, color=green, label="lambda expression"];
m4_88 -> m4_89  [key=0, style=solid, color=green];
m4_88 -> m4_92  [key=1, style=dashed, color=green, label=sql];
m4_88 -> m4_88  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m4_87 -> m4_5  [key=2, style=dotted];
m4_87 -> m4_90  [key=0, style=solid];
m4_86 -> m4_88  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_90 -> m4_85  [key=0, style=bold, color=blue];
m4_33 -> m4_45  [key=0, style=solid, color=red];
m4_45 -> m4_46  [key=0, style=solid, color=red];
m4_45 -> m4_13  [key=2, style=dotted, color=red];
m4_46 -> m4_33  [key=0, style=bold, color=blue];
m4_24 -> m4_21  [key=0, style=bold, color=blue];
m4_305 -> m4_309  [key=1, style=dashed, color=green, label=string];
m4_305 -> m4_312  [key=1, style=dashed, color=green, label=string];
m4_305 -> m4_306  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid, color=green];
m4_309 -> m4_45  [key=2, style=dotted, color=green];
m4_309 -> m4_311  [key=1, style=dashed, color=green, label="lambda expression"];
m4_308 -> m4_309  [key=0, style=solid, color=green];
m4_308 -> m4_312  [key=1, style=dashed, color=green, label=query];
m4_308 -> m4_308  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_307 -> m4_5  [key=2, style=dotted];
m4_307 -> m4_310  [key=0, style=solid];
m4_306 -> m4_308  [key=0, style=solid];
m4_306 -> m4_307  [key=0, style=solid];
m4_310 -> m4_305  [key=0, style=bold, color=blue];
m4_39 -> m4_5  [key=2, style=dotted];
m4_39 -> m4_43  [key=0, style=solid];
m4_42 -> m4_42  [key=3, color=green, style=bold, label="method methodReturn ? "];
m4_42 -> m4_43  [key=0, style=solid, color=red];
m4_42 -> m4_45  [key=2, style=dotted, color=green];
m4_42 -> m4_25  [key=1, style=dashed, color=green, label="lambda expression"];
m4_42 -> m4_44  [key=2, style=dotted, color=red];
m4_41 -> m4_42  [key=0, style=solid, color=red];
m4_41 -> m4_47  [key=1, style=dashed, color=green, label=invocationData];
m4_41 -> m4_44  [key=2, style=dotted];
m4_41 -> m4_70  [key=0, style=solid, color=green];
m4_40 -> m4_42  [key=1, style=dashed, color=green, label=createJobSql];
m4_40 -> m4_47  [key=1, style=dashed, color=green, label=createJobSql];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_40  [key=3, color=darkorchid, style=bold, label="Local variable string createJobSql"];
m4_43 -> m4_35  [key=0, style=bold, color=blue];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid, color=red];
m4_29 -> m4_33  [key=2, style=dotted];
m4_29 -> m4_31  [key=1, style=dashed, color=red, label=processingJob];
m4_30 -> m4_31  [key=0, style=solid, color=red];
m4_30 -> m4_9  [key=2, style=dotted, color=red];
m4_31 -> m4_32  [key=0, style=solid, color=red];
m4_31 -> m4_9  [key=2, style=dotted, color=red];
m4_32 -> m4_28  [key=0, style=bold, color=blue];
m4_32 -> m4_20  [key=0, style=solid, color=green];
m4_32 -> m4_34  [key=2, style=dotted, color=green];
m4_142 -> m4_148  [key=1, style=dashed, color=green, label=string];
m4_142 -> m4_153  [key=1, style=dashed, color=green, label=string];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m4_142 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m4_148 -> m4_149  [key=0, style=solid, color=green];
m4_148 -> m4_150  [key=2, style=dotted, color=green];
m4_148 -> m4_151  [key=1, style=dashed, color=green, label="lambda expression"];
m4_147 -> m4_148  [key=0, style=solid, color=green];
m4_147 -> m4_153  [key=1, style=dashed, color=green, label=sql];
m4_147 -> m4_147  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m4_144 -> m4_5  [key=2, style=dotted];
m4_144 -> m4_149  [key=0, style=solid];
m4_146 -> m4_5  [key=2, style=dotted];
m4_146 -> m4_149  [key=0, style=solid];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_145  [key=0, style=solid];
m4_145 -> m4_147  [key=0, style=solid];
m4_145 -> m4_146  [key=0, style=solid];
m4_149 -> m4_142  [key=0, style=bold, color=blue];
m4_320 -> m4_321  [key=0, style=solid, color=green];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_25 -> m4_47  [key=0, style=solid, color=green];
m4_25 -> m4_54  [key=1, style=dashed, color=green, label=SqlConnection];
m4_47 -> m4_48  [key=0, style=solid, color=green];
m4_47 -> m4_57  [key=2, style=dotted, color=green];
m4_47 -> m4_58  [key=2, style=dotted, color=green];
m4_47 -> m4_8  [key=2, style=dotted, color=green];
m4_47 -> m4_60  [key=2, style=dotted, color=green];
m4_47 -> m4_61  [key=2, style=dotted, color=green];
m4_47 -> m4_52  [key=1, style=dashed, color=green, label=jobId];
m4_47 -> m4_55  [key=1, style=dashed, color=green, label=jobId];
m4_47 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_15  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_19  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_22  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_26  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_35  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_37  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_47 -> m4_45  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ProcessingJobFacts"];
m4_48 -> m4_49  [key=0, style=solid, color=green];
m4_48 -> m4_55  [key=0, style=solid, color=green];
m4_52 -> m4_51  [key=0, style=solid, color=green];
m4_52 -> m4_52  [key=1, style=dashed, color=green, label=parameterIndex];
m4_55 -> m4_27  [key=0, style=solid, color=green];
m4_49 -> m4_50  [key=0, style=solid, color=green];
m4_49 -> m4_52  [key=1, style=dashed, color=green, label=parameterArray];
m4_49 -> m4_54  [key=1, style=dashed, color=green, label=parameterArray];
m4_50 -> m4_51  [key=0, style=solid, color=green];
m4_50 -> m4_52  [key=1, style=dashed, color=green, label=parameterIndex];
m4_54 -> m4_55  [key=0, style=solid, color=green];
m4_54 -> m4_62  [key=2, style=dotted, color=green];
m4_51 -> m4_52  [key=0, style=solid, color=green];
m4_51 -> m4_53  [key=0, style=solid, color=green];
m4_53 -> m4_54  [key=0, style=solid, color=green];
m4_70 -> m4_71  [key=0, style=solid, color=green];
m4_70 -> m4_8  [key=2, style=dotted, color=green];
m4_70 -> m4_82  [key=2, style=dotted, color=green];
m4_70 -> m4_73  [key=1, style=dashed, color=green, label=jobData];
m4_70 -> m4_74  [key=1, style=dashed, color=green, label=jobData];
m4_70 -> m4_80  [key=1, style=dashed, color=green, label=jobData];
m4_71 -> m4_72  [key=0, style=solid, color=green];
m4_71 -> m4_73  [key=0, style=solid, color=green];
m4_73 -> m4_74  [key=0, style=solid, color=green];
m4_73 -> m4_8  [key=2, style=dotted, color=green];
m4_73 -> m4_77  [key=1, style=dashed, color=green, label=invocationData];
m4_74 -> m4_75  [key=0, style=solid, color=green];
m4_80 -> m4_43  [key=0, style=solid, color=green];
m4_80 -> m4_84  [key=2, style=dotted, color=green];
m4_72 -> m4_43  [key=0, style=solid, color=green];
m4_77 -> m4_80  [key=0, style=solid, color=green];
m4_77 -> m4_78  [key=0, style=solid, color=green];
m4_77 -> m4_83  [key=2, style=dotted, color=green];
m4_75 -> m4_76  [key=0, style=solid, color=green];
m4_79 -> m4_80  [key=0, style=solid, color=green];
m4_76 -> m4_77  [key=0, style=solid, color=green];
m4_78 -> m4_79  [key=0, style=solid, color=green];
m4_91 -> m4_92  [key=0, style=solid, color=green];
m4_92 -> m4_93  [key=0, style=solid, color=green];
m4_92 -> m4_8  [key=2, style=dotted, color=green];
m4_92 -> m4_82  [key=2, style=dotted, color=green];
m4_92 -> m4_95  [key=1, style=dashed, color=green, label=sqlState];
m4_92 -> m4_96  [key=1, style=dashed, color=green, label=sqlState];
m4_93 -> m4_94  [key=0, style=solid, color=green];
m4_93 -> m4_95  [key=0, style=solid, color=green];
m4_95 -> m4_96  [key=0, style=solid, color=green];
m4_95 -> m4_98  [key=2, style=dotted, color=green];
m4_95 -> m4_8  [key=2, style=dotted, color=green];
m4_96 -> m4_97  [key=0, style=solid, color=green];
m4_96 -> m4_99  [key=2, style=dotted, color=green];
m4_94 -> m4_97  [key=0, style=solid, color=green];
m4_97 -> m4_91  [key=0, style=bold, color=blue];
m4_108 -> m4_109  [key=0, style=solid, color=green];
m4_109 -> m4_110  [key=0, style=solid, color=green];
m4_109 -> m4_62  [key=2, style=dotted, color=green];
m4_110 -> m4_108  [key=0, style=bold, color=blue];
m4_118 -> m4_119  [key=0, style=solid, color=green];
m4_119 -> m4_120  [key=0, style=solid, color=green];
m4_119 -> m4_8  [key=2, style=dotted, color=green];
m4_119 -> m4_82  [key=2, style=dotted, color=green];
m4_120 -> m4_118  [key=0, style=bold, color=blue];
m4_126 -> m4_127  [key=0, style=solid, color=green];
m4_127 -> m4_128  [key=0, style=solid, color=green];
m4_127 -> m4_8  [key=2, style=dotted, color=green];
m4_128 -> m4_129  [key=0, style=solid, color=green];
m4_128 -> m4_130  [key=2, style=dotted, color=green];
m4_129 -> m4_126  [key=0, style=bold, color=blue];
m4_139 -> m4_140  [key=0, style=solid, color=green];
m4_140 -> m4_141  [key=0, style=solid, color=green];
m4_140 -> m4_8  [key=2, style=dotted, color=green];
m4_140 -> m4_82  [key=2, style=dotted, color=green];
m4_141 -> m4_139  [key=0, style=bold, color=blue];
m4_151 -> m4_153  [key=1, style=dashed, color=green, label=SqlConnection];
m4_151 -> m4_152  [key=0, style=solid];
m4_153 -> m4_153  [key=1, style=dashed, color=green, label=keyValuePair];
m4_153 -> m4_152  [key=0, style=solid, color=green];
m4_153 -> m4_62  [key=2, style=dotted, color=green];
m4_152 -> m4_153  [key=0, style=solid, color=green];
m4_152 -> m4_154  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid, color=green];
m4_162 -> m4_163  [key=0, style=solid, color=green];
m4_162 -> m4_8  [key=2, style=dotted, color=green];
m4_162 -> m4_165  [key=2, style=dotted, color=green];
m4_162 -> m4_166  [key=1, style=dashed, color=green, label="lambda expression"];
m4_162 -> m4_169  [key=1, style=dashed, color=green, label="lambda expression"];
m4_163 -> m4_164  [key=0, style=solid, color=green];
m4_166 -> m4_167  [key=0, style=solid, color=green];
m4_169 -> m4_170  [key=0, style=solid, color=green];
m4_164 -> m4_161  [key=0, style=bold, color=blue];
m4_167 -> m4_168  [key=0, style=solid, color=green];
m4_168 -> m4_166  [key=0, style=bold, color=blue];
m4_170 -> m4_171  [key=0, style=solid, color=green];
m4_171 -> m4_169  [key=0, style=bold, color=blue];
m4_181 -> m4_182  [key=0, style=solid, color=green];
m4_182 -> m4_183  [key=0, style=solid, color=green];
m4_182 -> m4_57  [key=2, style=dotted, color=green];
m4_182 -> m4_62  [key=2, style=dotted, color=green];
m4_183 -> m4_181  [key=0, style=bold, color=blue];
m4_189 -> m4_190  [key=0, style=solid, color=green];
m4_190 -> m4_191  [key=0, style=solid, color=green];
m4_190 -> m4_62  [key=2, style=dotted, color=green];
m4_191 -> m4_189  [key=0, style=bold, color=blue];
m4_197 -> m4_198  [key=0, style=solid, color=green];
m4_198 -> m4_199  [key=0, style=solid, color=green];
m4_198 -> m4_62  [key=2, style=dotted, color=green];
m4_199 -> m4_197  [key=0, style=bold, color=blue];
m4_207 -> m4_208  [key=0, style=solid, color=green];
m4_208 -> m4_208  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m4_208 -> m4_209  [key=0, style=solid, color=green];
m4_208 -> m4_210  [key=2, style=dotted, color=green];
m4_208 -> m4_58  [key=2, style=dotted, color=green];
m4_208 -> m4_62  [key=2, style=dotted, color=green];
m4_209 -> m4_207  [key=0, style=bold, color=blue];
m4_216 -> m4_217  [key=0, style=solid, color=green];
m4_217 -> m4_218  [key=0, style=solid, color=green];
m4_217 -> m4_8  [key=2, style=dotted, color=green];
m4_217 -> m4_219  [key=2, style=dotted, color=green];
m4_218 -> m4_216  [key=0, style=bold, color=blue];
m4_226 -> m4_227  [key=0, style=solid, color=green];
m4_227 -> m4_228  [key=0, style=solid, color=green];
m4_227 -> m4_8  [key=2, style=dotted, color=green];
m4_227 -> m4_229  [key=2, style=dotted, color=green];
m4_228 -> m4_226  [key=0, style=bold, color=blue];
m4_236 -> m4_237  [key=0, style=solid, color=green];
m4_237 -> m4_238  [key=0, style=solid, color=green];
m4_237 -> m4_8  [key=2, style=dotted, color=green];
m4_237 -> m4_60  [key=2, style=dotted, color=green];
m4_237 -> m4_240  [key=1, style=dashed, color=green, label=result];
m4_238 -> m4_239  [key=0, style=solid, color=green];
m4_238 -> m4_240  [key=0, style=solid, color=green];
m4_240 -> m4_241  [key=0, style=solid, color=green];
m4_239 -> m4_241  [key=0, style=solid, color=green];
m4_239 -> m4_242  [key=2, style=dotted, color=green];
m4_241 -> m4_236  [key=0, style=bold, color=blue];
m4_249 -> m4_250  [key=0, style=solid, color=green];
m4_250 -> m4_251  [key=0, style=solid, color=green];
m4_250 -> m4_8  [key=2, style=dotted, color=green];
m4_250 -> m4_60  [key=2, style=dotted, color=green];
m4_251 -> m4_249  [key=0, style=bold, color=blue];
m4_258 -> m4_259  [key=0, style=solid, color=green];
m4_259 -> m4_260  [key=0, style=solid, color=green];
m4_259 -> m4_8  [key=2, style=dotted, color=green];
m4_259 -> m4_60  [key=2, style=dotted, color=green];
m4_260 -> m4_258  [key=0, style=bold, color=blue];
m4_267 -> m4_268  [key=0, style=solid, color=green];
m4_268 -> m4_269  [key=0, style=solid, color=green];
m4_268 -> m4_8  [key=2, style=dotted, color=green];
m4_268 -> m4_60  [key=2, style=dotted, color=green];
m4_268 -> m4_271  [key=1, style=dashed, color=green, label=result];
m4_269 -> m4_270  [key=0, style=solid, color=green];
m4_269 -> m4_271  [key=0, style=solid, color=green];
m4_271 -> m4_272  [key=0, style=solid, color=green];
m4_270 -> m4_272  [key=0, style=solid, color=green];
m4_270 -> m4_242  [key=2, style=dotted, color=green];
m4_272 -> m4_267  [key=0, style=bold, color=blue];
m4_281 -> m4_282  [key=0, style=solid, color=green];
m4_282 -> m4_283  [key=0, style=solid, color=green];
m4_282 -> m4_8  [key=2, style=dotted, color=green];
m4_282 -> m4_82  [key=2, style=dotted, color=green];
m4_283 -> m4_281  [key=0, style=bold, color=blue];
m4_290 -> m4_291  [key=0, style=solid, color=green];
m4_291 -> m4_292  [key=0, style=solid, color=green];
m4_291 -> m4_8  [key=2, style=dotted, color=green];
m4_291 -> m4_60  [key=2, style=dotted, color=green];
m4_292 -> m4_290  [key=0, style=bold, color=blue];
m4_299 -> m4_300  [key=0, style=solid, color=green];
m4_300 -> m4_301  [key=0, style=solid, color=green];
m4_300 -> m4_8  [key=2, style=dotted, color=green];
m4_300 -> m4_60  [key=2, style=dotted, color=green];
m4_300 -> m4_303  [key=1, style=dashed, color=green, label=result];
m4_301 -> m4_302  [key=0, style=solid, color=green];
m4_301 -> m4_303  [key=0, style=solid, color=green];
m4_303 -> m4_304  [key=0, style=solid, color=green];
m4_302 -> m4_304  [key=0, style=solid, color=green];
m4_302 -> m4_242  [key=2, style=dotted, color=green];
m4_304 -> m4_299  [key=0, style=bold, color=blue];
m4_311 -> m4_312  [key=0, style=solid, color=green];
m4_312 -> m4_313  [key=0, style=solid, color=green];
m4_312 -> m4_8  [key=2, style=dotted, color=green];
m4_312 -> m4_229  [key=2, style=dotted, color=green];
m4_313 -> m4_311  [key=0, style=bold, color=blue];
m4_321 -> m4_322  [key=0, style=solid, color=green];
m4_321 -> m4_8  [key=2, style=dotted, color=green];
m4_321 -> m4_229  [key=2, style=dotted, color=green];
m4_322 -> m4_320  [key=0, style=bold, color=blue];
m4_154 -> m4_151  [key=0, style=bold, color=blue];
m4_273 -> m4_279  [key=1, style=dashed, color=green, label=string];
m4_273 -> m4_282  [key=1, style=dashed, color=green, label=string];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_279 -> m4_280  [key=0, style=solid, color=green];
m4_279 -> m4_45  [key=2, style=dotted, color=green];
m4_279 -> m4_281  [key=1, style=dashed, color=green, label="lambda expression"];
m4_278 -> m4_279  [key=0, style=solid, color=green];
m4_278 -> m4_282  [key=1, style=dashed, color=green, label=query];
m4_278 -> m4_278  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_275 -> m4_5  [key=2, style=dotted];
m4_275 -> m4_280  [key=0, style=solid];
m4_277 -> m4_5  [key=2, style=dotted];
m4_277 -> m4_280  [key=0, style=solid];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_276  [key=0, style=solid];
m4_276 -> m4_278  [key=0, style=solid];
m4_276 -> m4_277  [key=0, style=solid];
m4_280 -> m4_273  [key=0, style=bold, color=blue];
m4_211 -> m4_214  [key=1, style=dashed, color=green, label=string];
m4_211 -> m4_217  [key=1, style=dashed, color=green, label=string];
m4_211 -> m4_212  [key=0, style=solid];
m4_214 -> m4_215  [key=0, style=solid, color=green];
m4_214 -> m4_45  [key=2, style=dotted, color=green];
m4_214 -> m4_216  [key=1, style=dashed, color=green, label="lambda expression"];
m4_212 -> m4_214  [key=0, style=solid, color=green];
m4_212 -> m4_213  [key=0, style=solid];
m4_213 -> m4_5  [key=2, style=dotted];
m4_213 -> m4_215  [key=0, style=solid];
m4_215 -> m4_211  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_121 -> m4_124  [key=1, style=dashed, color=green, label=string];
m4_121 -> m4_127  [key=1, style=dashed, color=green, label=string];
m4_121 -> m4_122  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid, color=green];
m4_124 -> m4_45  [key=2, style=dotted, color=green];
m4_124 -> m4_126  [key=1, style=dashed, color=green, label="lambda expression"];
m4_122 -> m4_124  [key=0, style=solid, color=green];
m4_122 -> m4_123  [key=0, style=solid];
m4_123 -> m4_5  [key=2, style=dotted];
m4_123 -> m4_125  [key=0, style=solid];
m4_125 -> m4_121  [key=0, style=bold, color=blue];
m4_284 -> m4_288  [key=1, style=dashed, color=green, label=string];
m4_284 -> m4_291  [key=1, style=dashed, color=green, label=string];
m4_284 -> m4_285  [key=0, style=solid];
m4_288 -> m4_289  [key=0, style=solid, color=green];
m4_288 -> m4_45  [key=2, style=dotted, color=green];
m4_288 -> m4_290  [key=1, style=dashed, color=green, label="lambda expression"];
m4_287 -> m4_288  [key=0, style=solid, color=green];
m4_287 -> m4_291  [key=1, style=dashed, color=green, label=query];
m4_287 -> m4_287  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m4_286 -> m4_5  [key=2, style=dotted];
m4_286 -> m4_289  [key=0, style=solid];
m4_285 -> m4_287  [key=0, style=solid];
m4_285 -> m4_286  [key=0, style=solid];
m4_289 -> m4_284  [key=0, style=bold, color=blue];
m4_200 -> m4_201  [key=0, style=solid];
m4_203 -> m4_204  [key=0, style=solid, color=green];
m4_203 -> m4_107  [key=2, style=dotted, color=green];
m4_203 -> m4_207  [key=1, style=dashed, color=green, label="lambda expression"];
m4_203 -> m4_208  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m4_201 -> m4_203  [key=0, style=solid, color=green];
m4_201 -> m4_201  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_205  [key=2, style=dotted];
m4_202 -> m4_204  [key=0, style=solid];
m4_202 -> m4_206  [key=2, style=dotted];
m4_204 -> m4_200  [key=0, style=bold, color=blue];
m4_323 -> m4_3  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_11  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_18  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_32  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_42  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_67  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_89  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_105  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_116  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_124  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_136  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_148  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_158  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_178  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_187  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_195  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_203  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_214  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_224  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_234  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_247  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_256  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_265  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_279  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_288  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_297  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_309  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_323 -> m4_318  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m4_324 -> m4_47  [key=1, style=dashed, color=green, label="System.DateTime"];
m4_325 -> m4_47  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m4_326 -> m4_47  [key=1, style=dashed, color=green, label=createJobSql];
m4_327 -> m4_47  [key=1, style=dashed, color=green, label=invocationData];
m4_328 -> m4_48  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_328 -> m4_49  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_328 -> m4_51  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m4_329 -> m4_70  [key=1, style=dashed, color=green, label=string];
m4_330 -> m4_70  [key=1, style=dashed, color=green, label=sql];
m4_331 -> m4_92  [key=1, style=dashed, color=green, label=string];
m4_332 -> m4_92  [key=1, style=dashed, color=green, label=sql];
m4_333 -> m4_109  [key=1, style=dashed, color=green, label=string];
m4_334 -> m4_109  [key=1, style=dashed, color=green, label=string];
m4_335 -> m4_109  [key=1, style=dashed, color=green, label=string];
m4_336 -> m4_119  [key=1, style=dashed, color=green, label=string];
m4_337 -> m4_119  [key=1, style=dashed, color=green, label=string];
m4_338 -> m4_127  [key=1, style=dashed, color=green, label=string];
m4_339 -> m4_140  [key=1, style=dashed, color=green, label=string];
m4_340 -> m4_140  [key=1, style=dashed, color=green, label=double];
m4_341 -> m4_140  [key=1, style=dashed, color=green, label=double];
m4_343 -> m4_153  [key=1, style=dashed, color=green, label=string];
m4_344 -> m4_153  [key=1, style=dashed, color=green, label=sql];
m4_345 -> m4_162  [key=1, style=dashed, color=green, label=string];
m4_346 -> m4_182  [key=1, style=dashed, color=green, label=string];
m4_347 -> m4_182  [key=1, style=dashed, color=green, label=data];
m4_348 -> m4_190  [key=1, style=dashed, color=green, label=string];
m4_349 -> m4_198  [key=1, style=dashed, color=green, label=string];
m4_350 -> m4_208  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m4_351 -> m4_217  [key=1, style=dashed, color=green, label=string];
m4_352 -> m4_227  [key=1, style=dashed, color=green, label=string];
m4_353 -> m4_227  [key=1, style=dashed, color=green, label=int];
m4_354 -> m4_227  [key=1, style=dashed, color=green, label=int];
m4_355 -> m4_227  [key=1, style=dashed, color=green, label=query];
m4_356 -> m4_237  [key=1, style=dashed, color=green, label=string];
m4_357 -> m4_237  [key=1, style=dashed, color=green, label=query];
m4_358 -> m4_250  [key=1, style=dashed, color=green, label=string];
m4_359 -> m4_250  [key=1, style=dashed, color=green, label=query];
m4_360 -> m4_259  [key=1, style=dashed, color=green, label=string];
m4_361 -> m4_259  [key=1, style=dashed, color=green, label=query];
m4_362 -> m4_268  [key=1, style=dashed, color=green, label=string];
m4_363 -> m4_268  [key=1, style=dashed, color=green, label=query];
m4_364 -> m4_282  [key=1, style=dashed, color=green, label=string];
m4_365 -> m4_282  [key=1, style=dashed, color=green, label=string];
m4_366 -> m4_282  [key=1, style=dashed, color=green, label=query];
m4_367 -> m4_291  [key=1, style=dashed, color=green, label=string];
m4_368 -> m4_291  [key=1, style=dashed, color=green, label=query];
m4_369 -> m4_300  [key=1, style=dashed, color=green, label=string];
m4_370 -> m4_300  [key=1, style=dashed, color=green, label=query];
m4_371 -> m4_312  [key=1, style=dashed, color=green, label=string];
m4_372 -> m4_312  [key=1, style=dashed, color=green, label=int];
m4_373 -> m4_312  [key=1, style=dashed, color=green, label=int];
m4_374 -> m4_312  [key=1, style=dashed, color=green, label=query];
m4_375 -> m4_321  [key=1, style=dashed, color=green, label=string];
m4_376 -> m4_321  [key=1, style=dashed, color=green, label=query];
m4_342 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m5_33 -> m5_31  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_30  [key=1, style=dashed, color=red, label=string];
m5_27 -> m5_25  [key=0, style=solid, color=green];
m5_27 -> m5_27  [key=1, style=dashed, color=green, label=string];
m5_27 -> m5_31  [key=0, style=solid, color=green];
m5_27 -> m5_32  [key=2, style=dotted, color=green];
m5_27 -> m5_33  [key=2, style=dotted, color=green];
m5_28 -> m5_29  [key=0, style=solid, color=red];
m5_28 -> m5_30  [key=0, style=solid, color=red];
m5_28 -> m5_23  [key=2, style=dotted, color=red];
m5_30 -> m5_31  [key=0, style=solid, color=red];
m5_30 -> m5_32  [key=2, style=dotted, color=red];
m5_30 -> m5_33  [key=2, style=dotted, color=red];
m5_29 -> m5_31  [key=0, style=solid, color=red];
m5_29 -> m5_24  [key=2, style=dotted, color=red];
m5_25 -> m5_26  [key=0, style=solid, color=green];
m5_25 -> m5_27  [key=0, style=solid, color=green];
m5_25 -> m5_21  [key=2, style=dotted, color=green];
m5_26 -> m5_31  [key=0, style=solid, color=green];
m5_26 -> m5_24  [key=2, style=dotted, color=green];
m5_31 -> m5_27  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_0 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_0 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_0 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_0 -> m5_11  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_13  [key=2, style=dotted];
m5_1 -> m5_1  [key=3, color=green, style=bold, label="Field variable string LockMode"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_13  [key=2, style=dotted];
m5_2 -> m5_2  [key=3, color=green, style=bold, label="Field variable string LockOwner"];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_13  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_13  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_13  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_8  [key=3, color=green, style=bold, label="Field variable SqlConnection _connection"];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_15  [key=2, style=dotted, color=green];
m5_12 -> m5_0  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_15  [key=2, style=dotted];
m5_21 -> m5_26  [key=2, style=dotted];
m5_16 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=0, style=solid];
m5_17 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_21  [key=2, style=dotted];
m5_18 -> m5_22  [key=0, style=solid];
m5_18 -> m5_24  [key=2, style=dotted];
m5_18 -> m5_20  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=0, style=solid];
m5_19 -> m5_15  [key=2, style=dotted];
m5_19 -> m5_26  [key=2, style=dotted];
m5_20 -> m5_22  [key=0, style=solid];
m5_20 -> m5_25  [key=2, style=dotted];
m5_20 -> m5_16  [key=0, style=bold, color=blue];
m5_22 -> m5_16  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_11  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_27  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_32  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_35 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=2, style=dotted];
m5_37 -> m5_34  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid, color=green];
m5_32 -> m5_38  [key=2, style=dotted, color=green];
m5_39 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_30  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m5_39 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_16 -> m6_19  [key=2, style=dotted];
m6_17 -> m6_15  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=red];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m6_0 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m6_0 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_1 -> m6_3  [key=0, style=solid, color=red];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_2 -> m6_8  [key=0, style=solid, color=red];
m6_2 -> m6_9  [key=2, style=dotted, color=red];
m6_4 -> m6_8  [key=0, style=solid];
m6_4 -> m6_9  [key=2, style=dotted];
m6_8 -> m6_0  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=2, style=dotted];
m6_11 -> m6_14  [key=2, style=dotted];
m6_12 -> m6_10  [key=0, style=bold, color=blue];
m6_20 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m6_20 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m6_20 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m6_20 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m6_20 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_0 -> m7_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m7_0 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=0, style=solid, color=green];
m7_2 -> m7_7  [key=0, style=solid, color=green];
m7_2 -> m7_8  [key=2, style=dotted, color=green];
m7_3 -> m7_5  [key=0, style=solid, color=green];
m7_3 -> m7_4  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_6 -> m7_7  [key=0, style=solid];
m7_4 -> m7_7  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_7 -> m7_0  [key=0, style=bold, color=blue];
m7_41 -> m7_43  [key=1, style=dashed, color=green, label=string];
m7_41 -> m7_46  [key=1, style=dashed, color=green, label=string];
m7_41 -> m7_42  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid, color=green];
m7_43 -> m7_30  [key=2, style=dotted, color=green];
m7_43 -> m7_45  [key=1, style=dashed, color=green, label="lambda expression"];
m7_42 -> m7_43  [key=0, style=solid, color=green];
m7_42 -> m7_46  [key=1, style=dashed, color=green, label=enqueueJobSql];
m7_42 -> m7_42  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m7_44 -> m7_41  [key=0, style=bold, color=blue];
m7_45 -> m7_46  [key=0, style=solid, color=green];
m7_34 -> m7_35  [key=0, style=solid, color=green];
m7_35 -> m7_36  [key=0, style=solid, color=green];
m7_35 -> m7_37  [key=2, style=dotted, color=green];
m7_35 -> m7_38  [key=2, style=dotted, color=green];
m7_35 -> m7_39  [key=2, style=dotted, color=green];
m7_35 -> m7_40  [key=2, style=dotted, color=green];
m7_36 -> m7_34  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid, color=green];
m7_46 -> m7_48  [key=2, style=dotted, color=green];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_9 -> m7_19  [key=1, style=dashed, color=green, label="string[]"];
m7_9 -> m7_35  [key=1, style=dashed, color=green, label="string[]"];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_9 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_19 -> m7_20  [key=0, style=solid, color=green];
m7_19 -> m7_30  [key=2, style=dotted, color=green];
m7_19 -> m7_34  [key=1, style=dashed, color=green, label="lambda expression"];
m7_19 -> m7_25  [key=1, style=dashed, color=green, label=fetchedJob];
m7_19 -> m7_26  [key=1, style=dashed, color=green, label=fetchedJob];
m7_18 -> m7_19  [key=0, style=solid, color=green];
m7_18 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_18 -> m7_29  [key=2, style=dotted];
m7_18 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_15 -> m7_19  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m7_15 -> m7_35  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m7_15 -> m7_15  [key=3, color=darkorchid, style=bold, label="Local variable string fetchJobSqlTemplate"];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_19  [key=1, style=dashed, color=green, label=fetchConditions];
m7_16 -> m7_35  [key=1, style=dashed, color=green, label=fetchConditions];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m7_16 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m7_17 -> m7_19  [key=1, style=dashed, color=green, label=currentQueryIndex];
m7_17 -> m7_35  [key=1, style=dashed, color=green, label=currentQueryIndex];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_17  [key=3, color=darkorchid, style=bold, label="Local variable int currentQueryIndex"];
m7_17 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m7_17 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid, color=green];
m7_25 -> m7_17  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid, color=green];
m7_26 -> m7_32  [key=2, style=dotted, color=green];
m7_26 -> m7_33  [key=2, style=dotted, color=green];
m7_14 -> m7_14  [key=3, color=green, style=bold, label="Local variable Hangfire.SqlServer.SqlServerJobQueue.FetchedJob fetchedJob"];
m7_14 -> m7_15  [key=0, style=solid, color=green];
m7_12 -> m7_14  [key=0, style=solid, color=green];
m7_12 -> m7_13  [key=0, style=solid];
m7_22 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_31  [key=2, style=dotted];
m7_11 -> m7_8  [key=2, style=dotted];
m7_11 -> m7_27  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m7_13 -> m7_27  [key=0, style=solid];
m7_13 -> m7_28  [key=2, style=dotted];
m7_23 -> m7_29  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m7_27 -> m7_9  [key=0, style=bold, color=blue];
m7_49 -> m7_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_19  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_35  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_26  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_43  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_49 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueue"];
m7_50 -> m7_35  [key=1, style=dashed, color=green, label="string[]"];
m7_51 -> m7_35  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m7_52 -> m7_35  [key=1, style=dashed, color=green, label=fetchConditions];
m7_53 -> m7_35  [key=1, style=dashed, color=green, label=currentQueryIndex];
m7_54 -> m7_46  [key=1, style=dashed, color=green, label=string];
m7_55 -> m7_46  [key=1, style=dashed, color=green, label=string];
m7_56 -> m7_46  [key=1, style=dashed, color=green, label=enqueueJobSql];
m8_43 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_43 -> m8_44  [key=0, style=solid];
m8_54 -> m8_51  [key=0, style=solid, color=green];
m8_54 -> m8_52  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m8_54 -> m8_17  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m8_54 -> m8_61  [key=2, style=dotted];
m8_54 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_54 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_51 -> m8_52  [key=0, style=solid, color=green];
m8_51 -> m8_55  [key=0, style=solid, color=green];
m8_45 -> m8_51  [key=1, style=dashed, color=green, label=scheduledJobs];
m8_45 -> m8_56  [key=1, style=dashed, color=green, label=scheduledJobs];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_58  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid, color=green];
m8_50 -> m8_53  [key=1, style=dashed, color=green, label=pipeline];
m8_50 -> m8_60  [key=2, style=dotted, color=green];
m8_50 -> m8_54  [key=1, style=dashed, color=green, label=pipeline];
m8_50 -> m8_55  [key=1, style=dashed, color=green, label=pipeline];
m8_52 -> m8_53  [key=0, style=solid, color=green];
m8_52 -> m8_65  [key=1, style=dashed, color=green, label=job];
m8_52 -> m8_70  [key=1, style=dashed, color=green, label=job];
m8_52 -> m8_54  [key=1, style=dashed, color=green, label=job];
m8_52 -> m8_74  [key=1, style=dashed, color=green, label=job];
m8_52 -> m8_78  [key=1, style=dashed, color=green, label=job];
m8_55 -> m8_56  [key=0, style=solid, color=green];
m8_55 -> m8_62  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid, color=green];
m8_56 -> m8_63  [key=2, style=dotted, color=green];
m8_56 -> m8_80  [key=1, style=dashed, color=green, label="lambda expression"];
m8_56 -> m8_83  [key=1, style=dashed, color=green, label="lambda expression"];
m8_48 -> m8_56  [key=1, style=dashed, color=green, label=jobs];
m8_48 -> m8_49  [key=0, style=solid, color=green];
m8_48 -> m8_53  [key=1, style=dashed, color=green, label=jobs];
m8_48 -> m8_84  [key=1, style=dashed, color=green, label=jobs];
m8_48 -> m8_59  [key=2, style=dotted];
m8_48 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_49 -> m8_56  [key=1, style=dashed, color=green, label=states];
m8_49 -> m8_50  [key=0, style=solid, color=green];
m8_49 -> m8_59  [key=2, style=dotted, color=green];
m8_49 -> m8_54  [key=1, style=dashed, color=green, label=states];
m8_49 -> m8_78  [key=1, style=dashed, color=green, label=states];
m8_49 -> m8_84  [key=1, style=dashed, color=green, label=states];
m8_53 -> m8_54  [key=0, style=solid, color=green];
m8_53 -> m8_61  [key=2, style=dotted, color=green];
m8_53 -> m8_64  [key=1, style=dashed, color=green, label="lambda expression"];
m8_53 -> m8_69  [key=1, style=dashed, color=green, label="lambda expression"];
m8_46 -> m8_54  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.EnqueuedAndFetchedCountDto GetEnqueuedAndFetchedCount"];
m8_46 -> m8_48  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_47 -> m8_57  [key=0, style=solid];
m8_47 -> m8_59  [key=2, style=dotted];
m8_47 -> m8_47  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m8_57 -> m8_43  [key=0, style=bold, color=blue];
m8_23 -> m8_24  [key=0, style=solid, color=green];
m8_23 -> m8_25  [key=1, style=dashed, color=green, label=int];
m8_24 -> m8_25  [key=0, style=solid, color=green];
m8_25 -> m8_26  [key=0, style=solid, color=green];
m8_25 -> m8_28  [key=2, style=dotted, color=green];
m8_26 -> m8_26  [key=3, color=green, style=bold, label="Local variable string fetchedJobsSql"];
m8_26 -> m8_27  [key=0, style=solid, color=green];
m8_26 -> m8_29  [key=2, style=dotted, color=green];
m8_26 -> m8_30  [key=2, style=dotted, color=green];
m8_26 -> m8_31  [key=2, style=dotted, color=green];
m8_26 -> m8_32  [key=1, style=dashed, color=green, label="lambda expression"];
m8_26 -> m8_40  [key=1, style=dashed, color=green, label="lambda expression"];
m8_26 -> m8_54  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetFetchedJobIds"];
m8_27 -> m8_23  [key=0, style=bold, color=blue];
m8_173 -> m8_344  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_173 -> m8_352  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_173 -> m8_336  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_173 -> m8_338  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_173 -> m8_333  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m8_173 -> m8_329  [key=0, style=solid];
m8_173 -> m8_331  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m8_173 -> m8_332  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m8_173 -> m8_334  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m8_173 -> m8_337  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_173 -> m8_340  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m8_173 -> m8_362  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m8_336 -> m8_61  [key=2, style=dotted];
m8_336 -> m8_337  [key=0, style=solid];
m8_336 -> m8_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_336 -> m8_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_338 -> m8_61  [key=2, style=dotted];
m8_338 -> m8_334  [key=0, style=solid];
m8_338 -> m8_351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_338 -> m8_354  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_333 -> m8_60  [key=2, style=dotted];
m8_333 -> m8_336  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_333 -> m8_338  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_333 -> m8_334  [key=0, style=solid];
m8_333 -> m8_339  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_335 -> m8_344  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_335 -> m8_352  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_335 -> m8_336  [key=0, style=solid];
m8_335 -> m8_338  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_335 -> m8_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_335 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_335 -> m8_355  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_335 -> m8_356  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_339 -> m8_62  [key=2, style=dotted];
m8_339 -> m8_340  [key=0, style=solid];
m8_331 -> m8_336  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_331 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_342  [key=2, style=dotted];
m8_331 -> m8_347  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_331 -> m8_340  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_331 -> m8_359  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_337 -> m8_338  [key=0, style=solid];
m8_337 -> m8_334  [key=0, style=solid];
m8_332 -> m8_338  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_356  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_332 -> m8_342  [key=2, style=dotted];
m8_332 -> m8_355  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_332 -> m8_340  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_332 -> m8_359  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_339  [key=0, style=solid];
m8_329 -> m8_331  [key=0, style=solid];
m8_329 -> m8_330  [key=0, style=solid];
m8_340 -> m8_114  [key=2, style=dotted];
m8_340 -> m8_115  [key=2, style=dotted];
m8_340 -> m8_341  [key=0, style=solid];
m8_340 -> m8_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_340 -> m8_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_330 -> m8_341  [key=0, style=solid];
m8_330 -> m8_113  [key=2, style=dotted];
m8_341 -> m8_173  [key=0, style=bold, color=blue];
m8_11 -> m8_12  [key=0, style=solid, color=green];
m8_11 -> m8_13  [key=1, style=dashed, color=green, label=string];
m8_12 -> m8_13  [key=0, style=solid, color=green];
m8_13 -> m8_14  [key=0, style=solid, color=green];
m8_13 -> m8_9  [key=2, style=dotted, color=green];
m8_13 -> m8_10  [key=2, style=dotted, color=green];
m8_14 -> m8_11  [key=0, style=bold, color=blue];
m8_219 -> m8_282  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m8_219 -> m8_274  [key=0, style=solid];
m8_219 -> m8_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_219 -> m8_299  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_283 -> m8_59  [key=2, style=dotted];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_289  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_283 -> m8_291  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_282 -> m8_283  [key=0, style=solid];
m8_282 -> m8_294  [key=2, style=dotted];
m8_282 -> m8_287  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_284 -> m8_289  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_284 -> m8_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_297  [key=2, style=dotted];
m8_291 -> m8_292  [key=0, style=solid];
m8_281 -> m8_282  [key=0, style=solid];
m8_281 -> m8_114  [key=2, style=dotted];
m8_281 -> m8_115  [key=2, style=dotted];
m8_281 -> m8_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_287 -> m8_289  [key=0, style=solid];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_295  [key=2, style=dotted];
m8_287 -> m8_296  [key=2, style=dotted];
m8_285 -> m8_291  [key=0, style=solid];
m8_285 -> m8_286  [key=0, style=solid];
m8_290 -> m8_285  [key=0, style=solid];
m8_290 -> m8_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_275 -> m8_289  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_275 -> m8_281  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_275 -> m8_285  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_113  [key=2, style=dotted];
m8_275 -> m8_278  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_288 -> m8_289  [key=0, style=solid];
m8_274 -> m8_275  [key=0, style=solid];
m8_274 -> m8_278  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_274 -> m8_279  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_277 -> m8_281  [key=0, style=solid];
m8_277 -> m8_278  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_278 -> m8_175  [key=2, style=dotted];
m8_278 -> m8_279  [key=0, style=solid];
m8_279 -> m8_279  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_293  [key=2, style=dotted];
m8_280 -> m8_277  [key=0, style=solid];
m8_280 -> m8_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_292 -> m8_219  [key=0, style=bold, color=blue];
m8_239 -> m8_241  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_241 -> m8_9  [key=2, style=dotted];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_76  [key=2, style=dotted];
m8_240 -> m8_241  [key=0, style=solid];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_234  [key=2, style=dotted];
m8_242 -> m8_246  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_238  [key=2, style=dotted];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_245  [key=0, style=solid];
m8_243 -> m8_235  [key=2, style=dotted];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_237  [key=2, style=dotted];
m8_244 -> m8_248  [key=0, style=solid];
m8_245 -> m8_247  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_236  [key=2, style=dotted];
m8_248 -> m8_239  [key=0, style=bold, color=blue];
m8_323 -> m8_324  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid, color=green];
m8_40 -> m8_41  [key=0, style=solid, color=green];
m8_33 -> m8_34  [key=0, style=solid, color=green];
m8_33 -> m8_35  [key=2, style=dotted, color=green];
m8_33 -> m8_36  [key=2, style=dotted, color=green];
m8_33 -> m8_37  [key=2, style=dotted, color=green];
m8_33 -> m8_38  [key=2, style=dotted, color=green];
m8_33 -> m8_39  [key=2, style=dotted, color=green];
m8_34 -> m8_32  [key=0, style=bold, color=blue];
m8_41 -> m8_41  [key=1, style=dashed, color=green, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m8_41 -> m8_42  [key=0, style=solid, color=green];
m8_42 -> m8_40  [key=0, style=bold, color=blue];
m8_80 -> m8_81  [key=0, style=solid, color=green];
m8_83 -> m8_84  [key=0, style=solid, color=green];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_72  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid, color=green];
m8_84 -> m8_86  [key=2, style=dotted, color=green];
m8_84 -> m8_87  [key=2, style=dotted, color=green];
m8_84 -> m8_36  [key=2, style=dotted, color=green];
m8_84 -> m8_37  [key=2, style=dotted, color=green];
m8_84 -> m8_39  [key=2, style=dotted, color=green];
m8_64 -> m8_65  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_85 -> m8_83  [key=0, style=bold, color=blue];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_67  [key=2, style=dotted];
m8_65 -> m8_68  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_72  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_67  [key=2, style=dotted];
m8_74 -> m8_76  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid, color=green];
m8_82 -> m8_80  [key=0, style=bold, color=blue];
m8_344 -> m8_9  [key=2, style=dotted];
m8_344 -> m8_345  [key=0, style=solid];
m8_344 -> m8_68  [key=2, style=dotted];
m8_352 -> m8_9  [key=2, style=dotted];
m8_352 -> m8_353  [key=0, style=solid];
m8_352 -> m8_68  [key=2, style=dotted];
m8_183 -> m8_10  [key=2, style=dotted];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_67  [key=2, style=dotted];
m8_189 -> m8_10  [key=2, style=dotted];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_67  [key=2, style=dotted];
m8_432 -> m8_10  [key=2, style=dotted];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_67  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_406 -> m8_4  [key=2, style=dotted];
m8_406 -> m8_407  [key=0, style=solid];
m8_412 -> m8_4  [key=2, style=dotted];
m8_412 -> m8_413  [key=0, style=solid];
m8_426 -> m8_4  [key=2, style=dotted];
m8_426 -> m8_427  [key=0, style=solid];
m8_142 -> m8_36  [key=2, style=dotted];
m8_142 -> m8_37  [key=2, style=dotted];
m8_142 -> m8_38  [key=2, style=dotted];
m8_142 -> m8_39  [key=2, style=dotted];
m8_142 -> m8_143  [key=0, style=solid];
m8_142 -> m8_144  [key=2, style=dotted];
m8_152 -> m8_36  [key=2, style=dotted];
m8_152 -> m8_37  [key=2, style=dotted];
m8_152 -> m8_38  [key=2, style=dotted];
m8_152 -> m8_39  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_154  [key=2, style=dotted];
m8_195 -> m8_36  [key=2, style=dotted];
m8_195 -> m8_38  [key=2, style=dotted];
m8_195 -> m8_39  [key=2, style=dotted];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_197  [key=2, style=dotted];
m8_204 -> m8_36  [key=2, style=dotted];
m8_204 -> m8_38  [key=2, style=dotted];
m8_204 -> m8_39  [key=2, style=dotted];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_197  [key=2, style=dotted];
m8_212 -> m8_36  [key=2, style=dotted];
m8_212 -> m8_38  [key=2, style=dotted];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_214  [key=2, style=dotted];
m8_130 -> m8_38  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_132  [key=2, style=dotted];
m8_130 -> m8_133  [key=2, style=dotted];
m8_130 -> m8_134  [key=2, style=dotted];
m8_79 -> m8_77  [key=0, style=bold, color=blue];
m8_66 -> m8_64  [key=0, style=bold, color=blue];
m8_71 -> m8_69  [key=0, style=bold, color=blue];
m8_75 -> m8_73  [key=0, style=bold, color=blue];
m8_343 -> m8_344  [key=0, style=solid];
m8_345 -> m8_343  [key=0, style=bold, color=blue];
m8_351 -> m8_352  [key=0, style=solid];
m8_353 -> m8_351  [key=0, style=bold, color=blue];
m8_182 -> m8_183  [key=0, style=solid];
m8_184 -> m8_182  [key=0, style=bold, color=blue];
m8_188 -> m8_189  [key=0, style=solid];
m8_190 -> m8_188  [key=0, style=bold, color=blue];
m8_431 -> m8_432  [key=0, style=solid];
m8_433 -> m8_431  [key=0, style=bold, color=blue];
m8_405 -> m8_406  [key=0, style=solid];
m8_407 -> m8_405  [key=0, style=bold, color=blue];
m8_411 -> m8_412  [key=0, style=solid];
m8_413 -> m8_411  [key=0, style=bold, color=blue];
m8_425 -> m8_426  [key=0, style=solid];
m8_427 -> m8_425  [key=0, style=bold, color=blue];
m8_141 -> m8_142  [key=0, style=solid];
m8_151 -> m8_152  [key=0, style=solid];
m8_203 -> m8_204  [key=0, style=solid];
m8_211 -> m8_212  [key=0, style=solid];
m8_143 -> m8_141  [key=0, style=bold, color=blue];
m8_153 -> m8_151  [key=0, style=bold, color=blue];
m8_194 -> m8_195  [key=0, style=solid];
m8_196 -> m8_194  [key=0, style=bold, color=blue];
m8_205 -> m8_203  [key=0, style=bold, color=blue];
m8_213 -> m8_211  [key=0, style=bold, color=blue];
m8_129 -> m8_130  [key=0, style=solid];
m8_131 -> m8_129  [key=0, style=bold, color=blue];
m8_264 -> m8_265  [key=0, style=solid];
m8_268 -> m8_269  [key=0, style=solid];
m8_271 -> m8_272  [key=0, style=solid];
m8_120 -> m8_72  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_127 -> m8_72  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_348 -> m8_72  [key=2, style=dotted];
m8_348 -> m8_349  [key=0, style=solid];
m8_356 -> m8_72  [key=2, style=dotted];
m8_356 -> m8_357  [key=0, style=solid];
m8_116 -> m8_117  [key=0, style=solid];
m8_119 -> m8_120  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_126 -> m8_127  [key=0, style=solid];
m8_176 -> m8_177  [key=0, style=solid];
m8_179 -> m8_180  [key=0, style=solid];
m8_185 -> m8_186  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_346 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label="?"];
m8_346 -> m8_347  [key=0, style=solid];
m8_354 -> m8_356  [key=1, style=dashed, color=darkseagreen4, label="?"];
m8_354 -> m8_355  [key=0, style=solid];
m8_392 -> m8_393  [key=0, style=solid];
m8_396 -> m8_397  [key=0, style=solid];
m8_399 -> m8_400  [key=0, style=solid];
m8_402 -> m8_403  [key=0, style=solid];
m8_408 -> m8_409  [key=0, style=solid];
m8_414 -> m8_415  [key=0, style=solid];
m8_417 -> m8_418  [key=0, style=solid];
m8_421 -> m8_422  [key=0, style=solid];
m8_428 -> m8_429  [key=0, style=solid];
m8_434 -> m8_435  [key=0, style=solid];
m8_117 -> m8_67  [key=2, style=dotted];
m8_117 -> m8_68  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_123 -> m8_67  [key=2, style=dotted];
m8_123 -> m8_125  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_177 -> m8_67  [key=2, style=dotted];
m8_177 -> m8_150  [key=2, style=dotted];
m8_177 -> m8_178  [key=0, style=solid];
m8_327 -> m8_67  [key=2, style=dotted];
m8_327 -> m8_328  [key=0, style=solid];
m8_265 -> m8_266  [key=0, style=solid];
m8_265 -> m8_267  [key=2, style=dotted];
m8_347 -> m8_348  [key=0, style=solid];
m8_347 -> m8_349  [key=0, style=solid];
m8_347 -> m8_350  [key=2, style=dotted];
m8_355 -> m8_356  [key=0, style=solid];
m8_355 -> m8_357  [key=0, style=solid];
m8_355 -> m8_350  [key=2, style=dotted];
m8_362 -> m8_363  [key=0, style=solid];
m8_362 -> m8_364  [key=2, style=dotted];
m8_362 -> m8_365  [key=2, style=dotted];
m8_362 -> m8_366  [key=2, style=dotted];
m8_362 -> m8_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_266 -> m8_264  [key=0, style=bold, color=blue];
m8_270 -> m8_268  [key=0, style=bold, color=blue];
m8_269 -> m8_270  [key=0, style=solid];
m8_273 -> m8_271  [key=0, style=bold, color=blue];
m8_272 -> m8_273  [key=0, style=solid];
m8_121 -> m8_119  [key=0, style=bold, color=blue];
m8_128 -> m8_126  [key=0, style=bold, color=blue];
m8_349 -> m8_346  [key=0, style=bold, color=blue];
m8_357 -> m8_354  [key=0, style=bold, color=blue];
m8_118 -> m8_116  [key=0, style=bold, color=blue];
m8_124 -> m8_122  [key=0, style=bold, color=blue];
m8_178 -> m8_176  [key=0, style=bold, color=blue];
m8_181 -> m8_179  [key=0, style=bold, color=blue];
m8_180 -> m8_181  [key=0, style=solid];
m8_187 -> m8_185  [key=0, style=bold, color=blue];
m8_186 -> m8_187  [key=0, style=solid];
m8_193 -> m8_191  [key=0, style=bold, color=blue];
m8_192 -> m8_193  [key=0, style=solid];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_350  [key=2, style=dotted];
m8_397 -> m8_398  [key=0, style=solid];
m8_403 -> m8_404  [key=0, style=solid];
m8_409 -> m8_410  [key=0, style=solid];
m8_415 -> m8_416  [key=0, style=solid];
m8_422 -> m8_423  [key=0, style=solid];
m8_422 -> m8_424  [key=2, style=dotted];
m8_429 -> m8_430  [key=0, style=solid];
m8_435 -> m8_436  [key=0, style=solid];
m8_394 -> m8_392  [key=0, style=bold, color=blue];
m8_393 -> m8_394  [key=0, style=solid];
m8_393 -> m8_395  [key=2, style=dotted];
m8_398 -> m8_396  [key=0, style=bold, color=blue];
m8_401 -> m8_399  [key=0, style=bold, color=blue];
m8_400 -> m8_401  [key=0, style=solid];
m8_400 -> m8_395  [key=2, style=dotted];
m8_404 -> m8_402  [key=0, style=bold, color=blue];
m8_410 -> m8_408  [key=0, style=bold, color=blue];
m8_416 -> m8_414  [key=0, style=bold, color=blue];
m8_419 -> m8_417  [key=0, style=bold, color=blue];
m8_418 -> m8_419  [key=0, style=solid];
m8_418 -> m8_420  [key=2, style=dotted];
m8_423 -> m8_421  [key=0, style=bold, color=blue];
m8_430 -> m8_428  [key=0, style=bold, color=blue];
m8_436 -> m8_434  [key=0, style=bold, color=blue];
m8_326 -> m8_327  [key=0, style=solid];
m8_328 -> m8_326  [key=0, style=bold, color=blue];
m8_358 -> m8_359  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_363 -> m8_361  [key=0, style=bold, color=blue];
m8_367 -> m8_368  [key=0, style=solid];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_301  [key=2, style=dotted];
m8_299 -> m8_302  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_360 -> m8_358  [key=0, style=bold, color=blue];
m8_369 -> m8_367  [key=0, style=bold, color=blue];
m8_368 -> m8_369  [key=0, style=solid];
m8_300 -> m8_298  [key=0, style=bold, color=blue];
m8_324 -> m8_301  [key=2, style=dotted];
m8_324 -> m8_325  [key=0, style=solid];
m8_325 -> m8_323  [key=0, style=bold, color=blue];
m8_220 -> m8_221  [key=0, style=solid];
m8_222 -> m8_219  [key=2, style=dotted];
m8_222 -> m8_223  [key=0, style=solid];
m8_221 -> m8_222  [key=0, style=solid];
m8_223 -> m8_220  [key=0, style=bold, color=blue];
m8_135 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_135 -> m8_136  [key=0, style=solid];
m8_138 -> m8_29  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_140  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_139 -> m8_135  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_2 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_145 -> m8_147  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_145 -> m8_146  [key=0, style=solid];
m8_148 -> m8_29  [key=2, style=dotted];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_150  [key=2, style=dotted];
m8_146 -> m8_147  [key=0, style=solid];
m8_149 -> m8_145  [key=0, style=bold, color=blue];
m8_155 -> m8_156  [key=0, style=solid];
m8_164 -> m8_61  [key=2, style=dotted];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_164 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_164 -> m8_168  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m8_165 -> m8_61  [key=2, style=dotted];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_165 -> m8_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_165 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label=length];
m8_166 -> m8_61  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_166 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_166 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m8_163 -> m8_60  [key=2, style=dotted];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_163 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_163 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_159 -> m8_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_159 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_159 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_159 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_159 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_170  [key=0, style=solid];
m8_159 -> m8_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_159 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_167 -> m8_62  [key=2, style=dotted];
m8_167 -> m8_168  [key=0, style=solid];
m8_168 -> m8_173  [key=2, style=dotted];
m8_168 -> m8_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_168 -> m8_169  [key=0, style=solid];
m8_169 -> m8_159  [key=0, style=solid];
m8_169 -> m8_174  [key=2, style=dotted];
m8_169 -> m8_175  [key=2, style=dotted];
m8_162 -> m8_163  [key=0, style=solid];
m8_157 -> m8_159  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_112  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_158 -> m8_172  [key=2, style=dotted];
m8_158 -> m8_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_160 -> m8_161  [key=0, style=solid];
m8_170 -> m8_171  [key=0, style=solid];
m8_161 -> m8_162  [key=0, style=solid];
m8_156 -> m8_157  [key=0, style=solid];
m8_171 -> m8_155  [key=0, style=bold, color=blue];
m8_88 -> m8_89  [key=0, style=solid];
m8_90 -> m8_92  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_91 -> m8_88  [key=0, style=bold, color=blue];
m8_97 -> m8_98  [key=0, style=solid];
m8_102 -> m8_59  [key=2, style=dotted];
m8_102 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label=servers];
m8_102 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m8_102 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label=servers];
m8_103 -> m8_59  [key=2, style=dotted];
m8_103 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_103 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_103 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_107 -> m8_61  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_107 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_108 -> m8_61  [key=2, style=dotted];
m8_108 -> m8_105  [key=0, style=solid];
m8_108 -> m8_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_108 -> m8_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_104 -> m8_60  [key=2, style=dotted];
m8_104 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_104 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_109 -> m8_62  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_100 -> m8_102  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_110 -> m8_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_114  [key=2, style=dotted];
m8_110 -> m8_115  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_106 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_106 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_106 -> m8_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_106 -> m8_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_105 -> m8_109  [key=0, style=solid];
m8_105 -> m8_106  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m8_99 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m8_99 -> m8_112  [key=2, style=dotted];
m8_101 -> m8_111  [key=0, style=solid];
m8_101 -> m8_113  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_111 -> m8_97  [key=0, style=bold, color=blue];
m8_374 -> m8_375  [key=0, style=solid];
m8_379 -> m8_61  [key=2, style=dotted];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_379 -> m8_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_380 -> m8_61  [key=2, style=dotted];
m8_380 -> m8_381  [key=0, style=solid];
m8_380 -> m8_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_380 -> m8_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_381 -> m8_61  [key=2, style=dotted];
m8_381 -> m8_382  [key=0, style=solid];
m8_381 -> m8_405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_381 -> m8_408  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_382 -> m8_61  [key=2, style=dotted];
m8_382 -> m8_383  [key=0, style=solid];
m8_382 -> m8_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_382 -> m8_414  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_383 -> m8_61  [key=2, style=dotted];
m8_383 -> m8_384  [key=0, style=solid];
m8_383 -> m8_417  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_383 -> m8_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_384 -> m8_61  [key=2, style=dotted];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_425  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_384 -> m8_428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_387 -> m8_61  [key=2, style=dotted];
m8_387 -> m8_385  [key=0, style=solid];
m8_387 -> m8_431  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_387 -> m8_434  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_378 -> m8_60  [key=2, style=dotted];
m8_378 -> m8_379  [key=0, style=solid];
m8_378 -> m8_380  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_378 -> m8_381  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_378 -> m8_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_378 -> m8_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_378 -> m8_384  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_378 -> m8_387  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_378 -> m8_388  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m8_386 -> m8_432  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m8_386 -> m8_387  [key=0, style=solid];
m8_388 -> m8_62  [key=2, style=dotted];
m8_388 -> m8_389  [key=0, style=solid];
m8_376 -> m8_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_380  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_381  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_383  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_387  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_377  [key=0, style=solid];
m8_376 -> m8_391  [key=2, style=dotted];
m8_376 -> m8_397  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_403  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_409  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_415  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_422  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_429  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_435  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_376 -> m8_389  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_388  [key=0, style=solid];
m8_377 -> m8_378  [key=0, style=solid];
m8_377 -> m8_385  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_377 -> m8_112  [key=2, style=dotted];
m8_389 -> m8_390  [key=0, style=solid];
m8_375 -> m8_376  [key=0, style=solid];
m8_390 -> m8_374  [key=0, style=bold, color=blue];
m8_370 -> m8_371  [key=0, style=solid];
m8_372 -> m8_10  [key=2, style=dotted];
m8_372 -> m8_373  [key=0, style=solid];
m8_371 -> m8_372  [key=0, style=solid];
m8_373 -> m8_370  [key=0, style=bold, color=blue];
m8_215 -> m8_216  [key=0, style=solid];
m8_217 -> m8_219  [key=2, style=dotted];
m8_217 -> m8_218  [key=0, style=solid];
m8_216 -> m8_217  [key=0, style=solid];
m8_218 -> m8_215  [key=0, style=bold, color=blue];
m8_92 -> m8_311  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m8_92 -> m8_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_92 -> m8_303  [key=0, style=solid];
m8_92 -> m8_310  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_312 -> m8_59  [key=2, style=dotted];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_318  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_312 -> m8_320  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_294  [key=2, style=dotted];
m8_311 -> m8_316  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_316  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_313 -> m8_318  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_313 -> m8_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_297  [key=2, style=dotted];
m8_320 -> m8_321  [key=0, style=solid];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_114  [key=2, style=dotted];
m8_310 -> m8_115  [key=2, style=dotted];
m8_310 -> m8_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_316 -> m8_318  [key=0, style=solid];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_295  [key=2, style=dotted];
m8_316 -> m8_296  [key=2, style=dotted];
m8_314 -> m8_320  [key=0, style=solid];
m8_314 -> m8_315  [key=0, style=solid];
m8_319 -> m8_314  [key=0, style=solid];
m8_319 -> m8_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_305 -> m8_318  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_305 -> m8_306  [key=0, style=solid];
m8_305 -> m8_113  [key=2, style=dotted];
m8_305 -> m8_307  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_305 -> m8_309  [key=1, style=dashed, color=darkseagreen4, label=dates];
m8_317 -> m8_318  [key=0, style=solid];
m8_309 -> m8_114  [key=2, style=dotted];
m8_309 -> m8_115  [key=2, style=dotted];
m8_309 -> m8_310  [key=0, style=solid];
m8_309 -> m8_314  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m8_309 -> m8_323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_303 -> m8_304  [key=0, style=solid];
m8_303 -> m8_306  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_303 -> m8_307  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_303 -> m8_308  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_315 -> m8_316  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_322  [key=2, style=dotted];
m8_304 -> m8_306  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m8_306 -> m8_309  [key=0, style=solid];
m8_306 -> m8_307  [key=0, style=solid];
m8_307 -> m8_175  [key=2, style=dotted];
m8_307 -> m8_308  [key=0, style=solid];
m8_308 -> m8_306  [key=0, style=solid];
m8_308 -> m8_308  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m8_308 -> m8_322  [key=2, style=dotted];
m8_321 -> m8_92  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid, color=green];
m8_15 -> m8_54  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<string> GetQueues"];
m8_16 -> m8_16  [key=3, color=green, style=bold, label="Local variable string sqlQuery"];
m8_16 -> m8_17  [key=0, style=solid, color=green];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_4  [key=2, style=dotted];
m8_18 -> m8_15  [key=0, style=bold, color=blue];
m8_249 -> m8_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_249 -> m8_255  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_249 -> m8_250  [key=0, style=solid];
m8_251 -> m8_9  [key=2, style=dotted];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_259  [key=2, style=dotted];
m8_251 -> m8_257  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_255 -> m8_9  [key=2, style=dotted];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_125  [key=2, style=dotted];
m8_257 -> m8_63  [key=2, style=dotted];
m8_257 -> m8_258  [key=0, style=solid];
m8_257 -> m8_260  [key=2, style=dotted];
m8_257 -> m8_261  [key=2, style=dotted];
m8_257 -> m8_262  [key=2, style=dotted];
m8_257 -> m8_263  [key=2, style=dotted];
m8_257 -> m8_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_257 -> m8_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_257 -> m8_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_250 -> m8_251  [key=0, style=solid];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_254  [key=0, style=solid];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_257  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m8_254 -> m8_265  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m8_256 -> m8_257  [key=0, style=solid];
m8_256 -> m8_114  [key=2, style=dotted];
m8_256 -> m8_115  [key=2, style=dotted];
m8_253 -> m8_258  [key=0, style=solid];
m8_258 -> m8_249  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_5 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_6 -> m8_7  [key=0, style=solid, color=green];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=2, style=dotted];
m8_7 -> m8_10  [key=2, style=dotted];
m8_8 -> m8_5  [key=0, style=bold, color=blue];
m8_206 -> m8_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_206 -> m8_207  [key=0, style=solid];
m8_208 -> m8_9  [key=2, style=dotted];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_150  [key=2, style=dotted];
m8_209 -> m8_29  [key=2, style=dotted];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_207 -> m8_208  [key=0, style=solid];
m8_210 -> m8_206  [key=0, style=bold, color=blue];
m8_93 -> m8_94  [key=0, style=solid];
m8_95 -> m8_92  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_96 -> m8_93  [key=0, style=bold, color=blue];
m8_19 -> m8_20  [key=0, style=solid, color=green];
m8_20 -> m8_21  [key=0, style=solid, color=green];
m8_20 -> m8_54  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetEnqueuedJobIds"];
m8_21 -> m8_21  [key=3, color=green, style=bold, label="Local variable string sqlQuery"];
m8_21 -> m8_22  [key=0, style=solid, color=green];
m8_21 -> m8_4  [key=2, style=dotted, color=green];
m8_22 -> m8_19  [key=0, style=bold, color=blue];
m8_224 -> m8_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_232  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_226 -> m8_9  [key=2, style=dotted];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_76  [key=2, style=dotted];
m8_225 -> m8_226  [key=0, style=solid];
m8_227 -> m8_228  [key=0, style=solid];
m8_227 -> m8_234  [key=2, style=dotted];
m8_227 -> m8_231  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_232 -> m8_233  [key=0, style=solid];
m8_232 -> m8_238  [key=2, style=dotted];
m8_228 -> m8_229  [key=0, style=solid];
m8_228 -> m8_230  [key=0, style=solid];
m8_228 -> m8_235  [key=2, style=dotted];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_237  [key=2, style=dotted];
m8_229 -> m8_233  [key=0, style=solid];
m8_230 -> m8_232  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m8_230 -> m8_231  [key=0, style=solid];
m8_230 -> m8_236  [key=2, style=dotted];
m8_233 -> m8_224  [key=0, style=bold, color=blue];
m8_198 -> m8_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_198 -> m8_199  [key=0, style=solid];
m8_200 -> m8_9  [key=2, style=dotted];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_150  [key=2, style=dotted];
m8_201 -> m8_29  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_199 -> m8_200  [key=0, style=solid];
m8_202 -> m8_198  [key=0, style=bold, color=blue];
m8_438 -> m8_84  [key=1, style=dashed, color=green, label=jobs];
m8_438 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_439 -> m8_84  [key=1, style=dashed, color=green, label=states];
m8_439 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_437 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_437 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_437 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_437 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_447 -> m8_344  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_448 -> m8_344  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_448 -> m8_352  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_448 -> m8_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_448 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_448 -> m8_355  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_448 -> m8_356  [key=1, style=dashed, color=darkseagreen4, label=id];
m8_450 -> m8_352  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_443 -> m8_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_443 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_443 -> m8_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_454 -> m8_432  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m8_441 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m8_441 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m8_442 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_442 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m8_440 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_440 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_440 -> m8_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_440 -> m8_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m8_449 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_449 -> m8_347  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_449 -> m8_359  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m8_451 -> m8_356  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_451 -> m8_355  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_451 -> m8_359  [key=1, style=dashed, color=darkseagreen4, label=states];
m8_446 -> m8_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_444 -> m8_265  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m8_452 -> m8_362  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m8_453 -> m8_397  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_453 -> m8_403  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_453 -> m8_409  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_453 -> m8_415  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_453 -> m8_422  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_453 -> m8_429  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_453 -> m8_435  [key=1, style=dashed, color=darkseagreen4, label=stats];
m8_445 -> m8_299  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_10 -> m9_11  [key=0, style=solid, color=red];
m9_10 -> m9_0  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid, color=red];
m9_11 -> m9_13  [key=2, style=dotted, color=red];
m9_12 -> m9_10  [key=0, style=bold, color=blue];
m9_12 -> m9_1  [key=1, style=dashed, color=green, label="HangFire.Web.FontsHandler"];
m9_12 -> m9_3  [key=1, style=dashed, color=green, label="HangFire.Web.FontsHandler"];
m9_12 -> m9_5  [key=1, style=dashed, color=green, label="HangFire.Web.FontsHandler"];
m9_12 -> m9_9  [key=1, style=dashed, color=green, label="HangFire.Web.FontsHandler"];
m9_12 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.FontsHandler"];
m9_5 -> m9_10  [key=0, style=solid, color=green];
m9_9 -> m9_10  [key=0, style=solid, color=green];
m9_6 -> m9_7  [key=0, style=solid, color=red];
m9_6 -> m9_11  [key=2, style=dotted];
m9_6 -> m9_8  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_7 -> m9_9  [key=2, style=dotted, color=red];
m9_7 -> m9_10  [key=0, style=solid];
m9_8 -> m9_6  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid, color=green];
m9_8 -> m9_11  [key=2, style=dotted];
m9_8 -> m9_10  [key=0, style=solid];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_0 -> m9_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m9_0 -> m9_2  [key=1, style=dashed, color=green, label=string];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_3  [key=0, style=solid, color=red];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_3 -> m9_10  [key=0, style=solid, color=green];
m9_2 -> m9_4  [key=0, style=solid, color=green];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_11  [key=2, style=dotted, color=green];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid, color=green];
m9_4 -> m9_6  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_14 -> m9_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m9_14 -> m9_7  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m10_17 -> m10_327  [key=0, style=solid];
m10_327 -> m10_17  [key=0, style=bold, color=blue];
m10_185 -> m10_186  [key=0, style=solid];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_128  [key=2, style=dotted];
m10_186 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_186 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_128  [key=2, style=dotted];
m10_187 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_187 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_62  [key=2, style=dotted];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_36  [key=2, style=dotted];
m10_193 -> m10_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_62  [key=2, style=dotted];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_46  [key=2, style=dotted];
m10_190 -> m10_105  [key=2, style=dotted];
m10_190 -> m10_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_190 -> m10_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_23  [key=2, style=dotted];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_35  [key=2, style=dotted];
m10_194 -> m10_185  [key=0, style=bold, color=blue];
m10_164 -> m10_165  [key=0, style=solid];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_128  [key=2, style=dotted];
m10_165 -> m10_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_165 -> m10_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_62  [key=2, style=dotted];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_46  [key=2, style=dotted];
m10_167 -> m10_105  [key=2, style=dotted];
m10_167 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_167 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_36  [key=2, style=dotted];
m10_171 -> m10_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_168 -> m10_169  [key=0, style=solid];
m10_168 -> m10_23  [key=2, style=dotted];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_35  [key=2, style=dotted];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_36  [key=2, style=dotted];
m10_170 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_172 -> m10_164  [key=0, style=bold, color=blue];
m10_298 -> m10_299  [key=0, style=solid];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_128  [key=2, style=dotted];
m10_299 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_299 -> m10_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_128  [key=2, style=dotted];
m10_300 -> m10_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_300 -> m10_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_62  [key=2, style=dotted];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_36  [key=2, style=dotted];
m10_307 -> m10_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_302 -> m10_303  [key=0, style=solid];
m10_302 -> m10_62  [key=2, style=dotted];
m10_304 -> m10_305  [key=0, style=solid];
m10_304 -> m10_46  [key=2, style=dotted];
m10_304 -> m10_105  [key=2, style=dotted];
m10_304 -> m10_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_304 -> m10_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_303 -> m10_304  [key=0, style=solid];
m10_303 -> m10_46  [key=2, style=dotted];
m10_303 -> m10_24  [key=2, style=dotted];
m10_303 -> m10_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_23  [key=2, style=dotted];
m10_305 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_106  [key=2, style=dotted];
m10_306 -> m10_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_308 -> m10_298  [key=0, style=bold, color=blue];
m10_97 -> m10_98  [key=0, style=solid];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_46  [key=2, style=dotted];
m10_98 -> m10_24  [key=2, style=dotted];
m10_98 -> m10_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_61  [key=2, style=dotted];
m10_99 -> m10_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_46  [key=2, style=dotted];
m10_100 -> m10_105  [key=2, style=dotted];
m10_100 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_100 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_62  [key=2, style=dotted];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_23  [key=2, style=dotted];
m10_102 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_106  [key=2, style=dotted];
m10_103 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_104 -> m10_97  [key=0, style=bold, color=blue];
m10_23 -> m10_328  [key=0, style=solid];
m10_328 -> m10_329  [key=0, style=solid];
m10_328 -> m10_330  [key=2, style=dotted];
m10_329 -> m10_23  [key=0, style=bold, color=blue];
m10_140 -> m10_141  [key=0, style=solid];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_128  [key=2, style=dotted];
m10_141 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_141 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_141 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_128  [key=2, style=dotted];
m10_142 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_142 -> m10_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_142 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_62  [key=2, style=dotted];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_46  [key=2, style=dotted];
m10_145 -> m10_84  [key=2, style=dotted];
m10_145 -> m10_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_46  [key=2, style=dotted];
m10_148 -> m10_84  [key=2, style=dotted];
m10_148 -> m10_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_62  [key=2, style=dotted];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_46  [key=2, style=dotted];
m10_146 -> m10_84  [key=2, style=dotted];
m10_146 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_46  [key=2, style=dotted];
m10_147 -> m10_84  [key=2, style=dotted];
m10_147 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_23  [key=2, style=dotted];
m10_149 -> m10_214  [key=3, color=red, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_35  [key=2, style=dotted];
m10_151 -> m10_140  [key=0, style=bold, color=blue];
m10_274 -> m10_275  [key=0, style=solid];
m10_275 -> m10_276  [key=0, style=solid];
m10_275 -> m10_128  [key=2, style=dotted];
m10_275 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_275 -> m10_275  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m10_276 -> m10_277  [key=0, style=solid];
m10_276 -> m10_62  [key=2, style=dotted];
m10_279 -> m10_280  [key=0, style=solid];
m10_279 -> m10_46  [key=2, style=dotted];
m10_279 -> m10_105  [key=2, style=dotted];
m10_279 -> m10_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_279 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_277 -> m10_278  [key=0, style=solid];
m10_277 -> m10_237  [key=2, style=dotted];
m10_277 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_277 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_277 -> m10_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_278 -> m10_279  [key=0, style=solid];
m10_278 -> m10_46  [key=2, style=dotted];
m10_278 -> m10_238  [key=2, style=dotted];
m10_278 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_280 -> m10_281  [key=0, style=solid];
m10_280 -> m10_23  [key=2, style=dotted];
m10_280 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_281 -> m10_282  [key=0, style=solid];
m10_281 -> m10_106  [key=2, style=dotted];
m10_281 -> m10_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_282 -> m10_274  [key=0, style=bold, color=blue];
m10_53 -> m10_54  [key=0, style=solid, color=red];
m10_54 -> m10_55  [key=0, style=solid, color=red];
m10_54 -> m10_61  [key=2, style=dotted, color=red];
m10_54 -> m10_59  [key=1, style=dashed, color=red, label=filter];
m10_55 -> m10_56  [key=0, style=solid, color=red];
m10_55 -> m10_62  [key=2, style=dotted, color=red];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_36  [key=2, style=dotted];
m10_59 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_56 -> m10_57  [key=0, style=solid, color=red];
m10_56 -> m10_46  [key=2, style=dotted];
m10_56 -> m10_24  [key=2, style=dotted];
m10_56 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_57 -> m10_58  [key=0, style=solid, color=red];
m10_57 -> m10_23  [key=2, style=dotted, color=red];
m10_57 -> m10_67  [key=1, style=dashed, color=red, label=process];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_24  [key=2, style=dotted];
m10_58 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_60 -> m10_53  [key=0, style=bold, color=blue];
m10_228 -> m10_229  [key=0, style=solid, color=red];
m10_229 -> m10_230  [key=0, style=solid, color=red];
m10_229 -> m10_128  [key=2, style=dotted, color=red];
m10_229 -> m10_235  [key=1, style=dashed, color=red, label=filter];
m10_230 -> m10_231  [key=0, style=solid, color=red];
m10_230 -> m10_62  [key=2, style=dotted, color=red];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_36  [key=2, style=dotted];
m10_235 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_237  [key=2, style=dotted];
m10_231 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_231 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_231 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_232 -> m10_233  [key=0, style=solid, color=red];
m10_232 -> m10_46  [key=2, style=dotted];
m10_232 -> m10_238  [key=2, style=dotted];
m10_232 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_233 -> m10_234  [key=0, style=solid, color=red];
m10_233 -> m10_23  [key=2, style=dotted, color=red];
m10_233 -> m10_243  [key=1, style=dashed, color=red, label=process];
m10_234 -> m10_235  [key=0, style=solid, color=red];
m10_234 -> m10_24  [key=2, style=dotted, color=red];
m10_234 -> m10_242  [key=1, style=dashed, color=red, label="lambda expression"];
m10_236 -> m10_228  [key=0, style=bold, color=blue];
m10_251 -> m10_252  [key=0, style=solid];
m10_252 -> m10_253  [key=0, style=solid, color=red];
m10_252 -> m10_128  [key=2, style=dotted];
m10_252 -> m10_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_252 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_253 -> m10_254  [key=0, style=solid, color=red];
m10_253 -> m10_128  [key=2, style=dotted, color=red];
m10_253 -> m10_255  [key=1, style=dashed, color=red, label=innerFilter];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_62  [key=2, style=dotted];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_36  [key=2, style=dotted];
m10_260 -> m10_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_255 -> m10_256  [key=0, style=solid];
m10_255 -> m10_62  [key=2, style=dotted];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_237  [key=2, style=dotted];
m10_256 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_256 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_256 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_46  [key=2, style=dotted];
m10_257 -> m10_238  [key=2, style=dotted];
m10_257 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_258 -> m10_259  [key=0, style=solid];
m10_258 -> m10_23  [key=2, style=dotted];
m10_258 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_259 -> m10_260  [key=0, style=solid];
m10_259 -> m10_24  [key=2, style=dotted];
m10_259 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_261 -> m10_251  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_8  [key=2, style=dotted];
m10_1 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_1 -> m10_1  [key=3, color=darkorchid, style=bold, label="Field variable string NewState"];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_9  [key=2, style=dotted];
m10_2 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_2 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_13  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_10  [key=2, style=dotted];
m10_3 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=state];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_11  [key=2, style=dotted];
m10_4 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_12  [key=2, style=dotted];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m10_207 -> m10_208  [key=0, style=solid, color=red];
m10_208 -> m10_209  [key=0, style=solid, color=red];
m10_208 -> m10_128  [key=2, style=dotted, color=red];
m10_208 -> m10_210  [key=1, style=dashed, color=red, label=filter];
m10_208 -> m10_214  [key=1, style=dashed, color=red, label=filter];
m10_209 -> m10_210  [key=0, style=solid, color=red];
m10_209 -> m10_62  [key=2, style=dotted, color=red];
m10_210 -> m10_211  [key=0, style=solid, color=red];
m10_210 -> m10_46  [key=2, style=dotted, color=red];
m10_210 -> m10_24  [key=2, style=dotted, color=red];
m10_210 -> m10_216  [key=1, style=dashed, color=red, label="lambda expression"];
m10_214 -> m10_215  [key=0, style=solid, color=red];
m10_214 -> m10_36  [key=2, style=dotted, color=red];
m10_214 -> m10_225  [key=1, style=dashed, color=red, label="lambda expression"];
m10_211 -> m10_212  [key=0, style=solid, color=red];
m10_211 -> m10_23  [key=2, style=dotted];
m10_211 -> m10_220  [key=1, style=dashed, color=red, label=process];
m10_212 -> m10_213  [key=0, style=solid, color=red];
m10_212 -> m10_24  [key=2, style=dotted, color=red];
m10_212 -> m10_219  [key=1, style=dashed, color=red, label="lambda expression"];
m10_213 -> m10_214  [key=0, style=solid, color=red];
m10_213 -> m10_36  [key=2, style=dotted, color=red];
m10_213 -> m10_222  [key=1, style=dashed, color=red, label="lambda expression"];
m10_215 -> m10_207  [key=0, style=bold, color=blue];
m10_73 -> m10_74  [key=0, style=solid];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_61  [key=2, style=dotted];
m10_74 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m10_74 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_61  [key=2, style=dotted];
m10_75 -> m10_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_46  [key=2, style=dotted];
m10_77 -> m10_84  [key=2, style=dotted];
m10_77 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_62  [key=2, style=dotted];
m10_78 -> m10_214  [key=3, color=red, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_46  [key=2, style=dotted];
m10_76 -> m10_84  [key=2, style=dotted];
m10_76 -> m10_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_62  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_46  [key=2, style=dotted];
m10_80 -> m10_24  [key=2, style=dotted];
m10_80 -> m10_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_23  [key=2, style=dotted];
m10_81 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_24  [key=2, style=dotted];
m10_82 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_83 -> m10_73  [key=0, style=bold, color=blue];
m10_324 -> m10_325  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=2, style=dotted];
m10_16 -> m10_14  [key=0, style=bold, color=blue];
m10_27 -> m10_28  [key=0, style=solid, color=red];
m10_27 -> m10_29  [key=2, style=dotted, color=red];
m10_26 -> m10_27  [key=0, style=solid, color=red];
m10_28 -> m10_26  [key=0, style=bold, color=blue];
m10_37 -> m10_38  [key=0, style=solid];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=2, style=dotted];
m10_39 -> m10_37  [key=0, style=bold, color=blue];
m10_47 -> m10_48  [key=0, style=solid, color=red];
m10_51 -> m10_52  [key=0, style=solid, color=red];
m10_51 -> m10_35  [key=2, style=dotted, color=red];
m10_50 -> m10_51  [key=0, style=solid, color=red];
m10_48 -> m10_49  [key=0, style=solid, color=red];
m10_48 -> m10_40  [key=2, style=dotted, color=red];
m10_49 -> m10_47  [key=0, style=bold, color=blue];
m10_52 -> m10_50  [key=0, style=bold, color=blue];
m10_63 -> m10_64  [key=0, style=solid];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_35  [key=2, style=dotted];
m10_66 -> m10_67  [key=0, style=solid];
m10_69 -> m10_70  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_40  [key=2, style=dotted];
m10_65 -> m10_63  [key=0, style=bold, color=blue];
m10_68 -> m10_66  [key=0, style=bold, color=blue];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_24  [key=2, style=dotted];
m10_70 -> m10_72  [key=2, style=dotted];
m10_71 -> m10_69  [key=0, style=bold, color=blue];
m10_85 -> m10_86  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_91 -> m10_92  [key=0, style=solid];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_35  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_24  [key=2, style=dotted];
m10_86 -> m10_72  [key=2, style=dotted];
m10_87 -> m10_85  [key=0, style=bold, color=blue];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_24  [key=2, style=dotted];
m10_89 -> m10_72  [key=2, style=dotted];
m10_90 -> m10_88  [key=0, style=bold, color=blue];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_40  [key=2, style=dotted];
m10_93 -> m10_91  [key=0, style=bold, color=blue];
m10_96 -> m10_94  [key=0, style=bold, color=blue];
m10_107 -> m10_108  [key=0, style=solid];
m10_110 -> m10_111  [key=0, style=solid];
m10_113 -> m10_114  [key=0, style=solid];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_35  [key=2, style=dotted];
m10_116 -> m10_117  [key=0, style=solid];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_40  [key=2, style=dotted];
m10_109 -> m10_107  [key=0, style=bold, color=blue];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_24  [key=2, style=dotted];
m10_111 -> m10_72  [key=2, style=dotted];
m10_112 -> m10_110  [key=0, style=bold, color=blue];
m10_114 -> m10_115  [key=0, style=solid];
m10_115 -> m10_113  [key=0, style=bold, color=blue];
m10_118 -> m10_116  [key=0, style=bold, color=blue];
m10_129 -> m10_130  [key=0, style=solid];
m10_133 -> m10_134  [key=0, style=solid];
m10_136 -> m10_137  [key=0, style=solid];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_24  [key=2, style=dotted];
m10_130 -> m10_132  [key=2, style=dotted];
m10_131 -> m10_129  [key=0, style=bold, color=blue];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_40  [key=2, style=dotted];
m10_135 -> m10_133  [key=0, style=bold, color=blue];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_24  [key=2, style=dotted];
m10_137 -> m10_139  [key=2, style=dotted];
m10_138 -> m10_136  [key=0, style=bold, color=blue];
m10_152 -> m10_153  [key=0, style=solid];
m10_155 -> m10_156  [key=0, style=solid];
m10_158 -> m10_159  [key=0, style=solid];
m10_161 -> m10_162  [key=0, style=solid];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_24  [key=2, style=dotted];
m10_153 -> m10_132  [key=2, style=dotted];
m10_154 -> m10_152  [key=0, style=bold, color=blue];
m10_156 -> m10_157  [key=0, style=solid];
m10_156 -> m10_24  [key=2, style=dotted];
m10_156 -> m10_132  [key=2, style=dotted];
m10_157 -> m10_155  [key=0, style=bold, color=blue];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_24  [key=2, style=dotted];
m10_159 -> m10_139  [key=2, style=dotted];
m10_160 -> m10_158  [key=0, style=bold, color=blue];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_24  [key=2, style=dotted];
m10_162 -> m10_139  [key=2, style=dotted];
m10_163 -> m10_161  [key=0, style=bold, color=blue];
m10_173 -> m10_174  [key=0, style=solid];
m10_176 -> m10_177  [key=0, style=solid];
m10_179 -> m10_180  [key=0, style=solid];
m10_182 -> m10_183  [key=0, style=solid];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_24  [key=2, style=dotted];
m10_174 -> m10_132  [key=2, style=dotted];
m10_175 -> m10_173  [key=0, style=bold, color=blue];
m10_177 -> m10_178  [key=0, style=solid];
m10_178 -> m10_176  [key=0, style=bold, color=blue];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_40  [key=2, style=dotted];
m10_181 -> m10_179  [key=0, style=bold, color=blue];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_24  [key=2, style=dotted];
m10_183 -> m10_139  [key=2, style=dotted];
m10_184 -> m10_182  [key=0, style=bold, color=blue];
m10_195 -> m10_196  [key=0, style=solid];
m10_198 -> m10_199  [key=0, style=solid];
m10_201 -> m10_202  [key=0, style=solid];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_24  [key=2, style=dotted];
m10_196 -> m10_132  [key=2, style=dotted];
m10_197 -> m10_195  [key=0, style=bold, color=blue];
m10_199 -> m10_200  [key=0, style=solid];
m10_200 -> m10_198  [key=0, style=bold, color=blue];
m10_202 -> m10_203  [key=0, style=solid];
m10_202 -> m10_24  [key=2, style=dotted];
m10_202 -> m10_139  [key=2, style=dotted];
m10_202 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_203 -> m10_201  [key=0, style=bold, color=blue];
m10_204 -> m10_205  [key=0, style=solid];
m10_205 -> m10_206  [key=0, style=solid];
m10_206 -> m10_204  [key=0, style=bold, color=blue];
m10_216 -> m10_217  [key=0, style=solid, color=red];
m10_220 -> m10_221  [key=0, style=solid, color=red];
m10_220 -> m10_35  [key=2, style=dotted, color=red];
m10_219 -> m10_220  [key=0, style=solid, color=red];
m10_222 -> m10_223  [key=0, style=solid, color=red];
m10_225 -> m10_226  [key=0, style=solid, color=red];
m10_217 -> m10_218  [key=0, style=solid, color=red];
m10_217 -> m10_24  [key=2, style=dotted, color=red];
m10_217 -> m10_132  [key=2, style=dotted, color=red];
m10_218 -> m10_216  [key=0, style=bold, color=blue];
m10_221 -> m10_219  [key=0, style=bold, color=blue];
m10_223 -> m10_224  [key=0, style=solid, color=red];
m10_223 -> m10_40  [key=2, style=dotted, color=red];
m10_224 -> m10_222  [key=0, style=bold, color=blue];
m10_226 -> m10_227  [key=0, style=solid, color=red];
m10_226 -> m10_24  [key=2, style=dotted, color=red];
m10_226 -> m10_139  [key=2, style=dotted, color=red];
m10_227 -> m10_225  [key=0, style=bold, color=blue];
m10_246 -> m10_247  [key=0, style=solid];
m10_246 -> m10_24  [key=2, style=dotted];
m10_246 -> m10_139  [key=2, style=dotted];
m10_246 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_249 -> m10_250  [key=0, style=solid];
m10_239 -> m10_240  [key=0, style=solid];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_35  [key=2, style=dotted];
m10_242 -> m10_243  [key=0, style=solid];
m10_245 -> m10_246  [key=0, style=solid];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_40  [key=2, style=dotted];
m10_241 -> m10_239  [key=0, style=bold, color=blue];
m10_244 -> m10_242  [key=0, style=bold, color=blue];
m10_247 -> m10_245  [key=0, style=bold, color=blue];
m10_248 -> m10_249  [key=0, style=solid];
m10_250 -> m10_248  [key=0, style=bold, color=blue];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_24  [key=2, style=dotted];
m10_269 -> m10_139  [key=2, style=dotted];
m10_269 -> m10_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_272 -> m10_273  [key=0, style=solid];
m10_262 -> m10_263  [key=0, style=solid];
m10_266 -> m10_267  [key=0, style=solid];
m10_266 -> m10_35  [key=2, style=dotted];
m10_265 -> m10_266  [key=0, style=solid];
m10_268 -> m10_269  [key=0, style=solid];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_40  [key=2, style=dotted];
m10_264 -> m10_262  [key=0, style=bold, color=blue];
m10_267 -> m10_265  [key=0, style=bold, color=blue];
m10_270 -> m10_268  [key=0, style=bold, color=blue];
m10_271 -> m10_272  [key=0, style=solid];
m10_273 -> m10_271  [key=0, style=bold, color=blue];
m10_287 -> m10_288  [key=0, style=solid];
m10_287 -> m10_24  [key=2, style=dotted];
m10_287 -> m10_139  [key=2, style=dotted];
m10_287 -> m10_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_290 -> m10_291  [key=0, style=solid];
m10_283 -> m10_284  [key=0, style=solid];
m10_286 -> m10_287  [key=0, style=solid];
m10_292 -> m10_293  [key=0, style=solid];
m10_296 -> m10_297  [key=0, style=solid];
m10_296 -> m10_35  [key=2, style=dotted];
m10_295 -> m10_296  [key=0, style=solid];
m10_284 -> m10_285  [key=0, style=solid];
m10_284 -> m10_40  [key=2, style=dotted];
m10_285 -> m10_283  [key=0, style=bold, color=blue];
m10_288 -> m10_286  [key=0, style=bold, color=blue];
m10_289 -> m10_290  [key=0, style=solid];
m10_291 -> m10_289  [key=0, style=bold, color=blue];
m10_293 -> m10_294  [key=0, style=solid];
m10_294 -> m10_292  [key=0, style=bold, color=blue];
m10_297 -> m10_295  [key=0, style=bold, color=blue];
m10_309 -> m10_310  [key=0, style=solid];
m10_312 -> m10_313  [key=0, style=solid];
m10_315 -> m10_316  [key=0, style=solid];
m10_319 -> m10_320  [key=0, style=solid];
m10_319 -> m10_35  [key=2, style=dotted];
m10_318 -> m10_319  [key=0, style=solid];
m10_321 -> m10_322  [key=0, style=solid];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_40  [key=2, style=dotted];
m10_311 -> m10_309  [key=0, style=bold, color=blue];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_24  [key=2, style=dotted];
m10_313 -> m10_139  [key=2, style=dotted];
m10_314 -> m10_312  [key=0, style=bold, color=blue];
m10_316 -> m10_317  [key=0, style=solid];
m10_317 -> m10_315  [key=0, style=bold, color=blue];
m10_320 -> m10_318  [key=0, style=bold, color=blue];
m10_322 -> m10_323  [key=0, style=solid];
m10_322 -> m10_24  [key=2, style=dotted];
m10_322 -> m10_139  [key=2, style=dotted];
m10_322 -> m10_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_323 -> m10_321  [key=0, style=bold, color=blue];
m10_325 -> m10_326  [key=0, style=solid];
m10_326 -> m10_324  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_23  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_35  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_36  [key=2, style=dotted];
m10_33 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_34 -> m10_30  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid, color=red];
m10_42 -> m10_43  [key=0, style=solid, color=red];
m10_42 -> m10_46  [key=2, style=dotted, color=red];
m10_42 -> m10_24  [key=2, style=dotted, color=red];
m10_42 -> m10_47  [key=1, style=dashed, color=red, label="lambda expression"];
m10_43 -> m10_44  [key=0, style=solid, color=red];
m10_43 -> m10_23  [key=2, style=dotted, color=red];
m10_43 -> m10_51  [key=1, style=dashed, color=red, label=process];
m10_44 -> m10_45  [key=0, style=solid, color=red];
m10_44 -> m10_24  [key=2, style=dotted, color=red];
m10_44 -> m10_50  [key=1, style=dashed, color=red, label="lambda expression"];
m10_44 -> m10_214  [key=3, color=red, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m10_45 -> m10_41  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid, color=red];
m10_19 -> m10_20  [key=0, style=solid, color=red];
m10_19 -> m10_23  [key=2, style=dotted, color=red];
m10_19 -> m10_27  [key=1, style=dashed, color=red, label=process];
m10_20 -> m10_21  [key=0, style=solid, color=red];
m10_20 -> m10_24  [key=2, style=dotted, color=red];
m10_20 -> m10_26  [key=1, style=dashed, color=red, label="lambda expression"];
m10_21 -> m10_22  [key=0, style=solid, color=red];
m10_21 -> m10_25  [key=2, style=dotted, color=red];
m10_22 -> m10_18  [key=0, style=bold, color=blue];
m10_119 -> m10_120  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_128  [key=2, style=dotted];
m10_120 -> m10_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_120 -> m10_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_62  [key=2, style=dotted];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_46  [key=2, style=dotted];
m10_122 -> m10_84  [key=2, style=dotted];
m10_122 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_122 -> m10_214  [key=3, color=red, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_46  [key=2, style=dotted];
m10_124 -> m10_84  [key=2, style=dotted];
m10_124 -> m10_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_46  [key=2, style=dotted];
m10_123 -> m10_84  [key=2, style=dotted];
m10_123 -> m10_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_123 -> m10_126  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.ServerDto> "];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_23  [key=2, style=dotted];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_35  [key=2, style=dotted];
m10_127 -> m10_119  [key=0, style=bold, color=blue];
m10_331 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_19  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_42  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_43  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_44  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_51  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_55  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_57  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_209  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_212  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_220  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_213  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_230  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_232  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_233  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_234  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_305  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_328  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m10_332 -> m10_27  [key=1, style=dashed, color=red, label=process];
m10_333 -> m10_51  [key=1, style=dashed, color=red, label=process];
m10_334 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_335 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_336 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_337 -> m10_220  [key=1, style=dashed, color=red, label=process];
m10_338 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_339 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_339 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_340 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_341 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_341 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_342 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_342 -> m10_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_343 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_344 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m11_134 -> m11_135  [key=0, style=solid, color=green];
m11_135 -> m11_136  [key=0, style=solid, color=green];
m11_135 -> m11_137  [key=2, style=dotted, color=green];
m11_135 -> m11_138  [key=2, style=dotted, color=green];
m11_136 -> m11_134  [key=0, style=bold, color=blue];
m11_26 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_26 -> m11_27  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_25  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_27 -> m11_29  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_28 -> m11_32  [key=0, style=solid];
m11_28 -> m11_18  [key=2, style=dotted];
m11_32 -> m11_26  [key=0, style=bold, color=blue];
m11_23 -> m11_120  [key=0, style=solid, color=green];
m11_23 -> m11_122  [key=3, color=darkorchid, style=bold, label="method methodReturn SqlConnection CreateAndOpenConnection"];
m11_120 -> m11_121  [key=0, style=solid, color=green];
m11_120 -> m11_122  [key=0, style=solid, color=green];
m11_121 -> m11_125  [key=0, style=solid, color=green];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_126  [key=2, style=dotted];
m11_122 -> m11_124  [key=1, style=dashed, color=darkseagreen4, label=connection];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_127  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_125 -> m11_23  [key=0, style=bold, color=blue];
m11_128 -> m11_129  [key=0, style=solid, color=green];
m11_128 -> m11_130  [key=1, style=dashed, color=green, label=IDbConnection];
m11_129 -> m11_130  [key=0, style=solid, color=green];
m11_129 -> m11_131  [key=0, style=solid, color=green];
m11_129 -> m11_132  [key=2, style=dotted, color=green];
m11_130 -> m11_131  [key=0, style=solid, color=green];
m11_130 -> m11_133  [key=2, style=dotted, color=green];
m11_131 -> m11_128  [key=0, style=bold, color=blue];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=0, style=bold, color=crimson];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_46  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_47  [key=2, style=dotted];
m11_45 -> m11_42  [key=0, style=bold, color=blue];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_8 -> m11_19  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid, color=green];
m11_39 -> m11_40  [key=0, style=solid, color=green];
m11_39 -> m11_41  [key=2, style=dotted, color=green];
m11_40 -> m11_38  [key=0, style=bold, color=blue];
m11_48 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m11_48 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m11_48 -> m11_49  [key=0, style=solid];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_54  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_54  [key=2, style=dotted];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_53  [key=2, style=dotted];
m11_52 -> m11_48  [key=0, style=bold, color=blue];
m11_91 -> m11_92  [key=0, style=solid, color=green];
m11_91 -> m11_96  [key=1, style=dashed, color=green, label="System.Action<SqlConnection>"];
m11_92 -> m11_92  [key=3, color=green, style=bold, label="method methodReturn bool "];
m11_92 -> m11_93  [key=0, style=solid, color=green];
m11_92 -> m11_94  [key=2, style=dotted, color=green];
m11_92 -> m11_95  [key=1, style=dashed, color=green, label="lambda expression"];
m11_93 -> m11_91  [key=0, style=bold, color=blue];
m11_105 -> m11_106  [key=0, style=solid, color=green];
m11_105 -> m11_110  [key=1, style=dashed, color=green, label="System.Action<SqlConnection>"];
m11_106 -> m11_92  [key=3, color=green, style=bold, label="method methodReturn bool "];
m11_106 -> m11_107  [key=0, style=solid, color=green];
m11_106 -> m11_108  [key=2, style=dotted, color=green];
m11_106 -> m11_109  [key=1, style=dashed, color=green, label="lambda expression"];
m11_107 -> m11_105  [key=0, style=bold, color=blue];
m11_20 -> m11_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string connectionStringName"];
m11_20 -> m11_147  [key=0, style=solid];
m11_147 -> m11_148  [key=0, style=solid];
m11_148 -> m11_149  [key=0, style=solid];
m11_149 -> m11_20  [key=0, style=bold, color=blue];
m11_6 -> m11_17  [key=0, style=solid];
m11_6 -> m11_18  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_9  [key=2, style=dotted];
m11_4 -> m11_17  [key=0, style=solid];
m11_4 -> m11_18  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_2 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m11_2 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m11_2 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_8  [key=2, style=dotted];
m11_3 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [key=0, style=bold, color=blue];
m11_5 -> m11_7  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_10 -> m11_12  [key=0, style=solid];
m11_10 -> m11_20  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_6  [key=2, style=dotted];
m11_11 -> m11_13  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_9  [key=2, style=dotted];
m11_14 -> m11_23  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_7  [key=2, style=dotted];
m11_12 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m11_12 -> m11_17  [key=0, style=solid];
m11_12 -> m11_21  [key=2, style=dotted];
m11_12 -> m11_22  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_8  [key=2, style=dotted];
m11_13 -> m11_16  [key=0, style=solid];
m11_15 -> m11_10  [key=0, style=bold, color=blue];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_24  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid, color=green];
m11_96 -> m11_97  [key=0, style=solid, color=green];
m11_96 -> m11_99  [key=2, style=dotted, color=green];
m11_97 -> m11_98  [key=0, style=solid, color=green];
m11_98 -> m11_95  [key=0, style=bold, color=blue];
m11_109 -> m11_110  [key=0, style=solid, color=green];
m11_110 -> m11_111  [key=0, style=solid, color=green];
m11_110 -> m11_99  [key=2, style=dotted, color=green];
m11_111 -> m11_112  [key=0, style=solid, color=green];
m11_112 -> m11_109  [key=0, style=bold, color=blue];
m11_151 -> m11_152  [key=0, style=solid, color=green];
m11_151 -> m11_154  [key=1, style=dashed, color=green, label=sqlStorage];
m11_150 -> m11_151  [key=0, style=solid, color=green];
m11_150 -> m11_94  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m11_150 -> m11_150  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m11_152 -> m11_153  [key=0, style=solid, color=green];
m11_152 -> m11_154  [key=0, style=solid, color=green];
m11_154 -> m11_155  [key=0, style=solid, color=green];
m11_154 -> m11_94  [key=2, style=dotted, color=green];
m11_154 -> m11_157  [key=1, style=dashed, color=green, label="lambda expression"];
m11_153 -> m11_155  [key=0, style=solid, color=green];
m11_153 -> m11_156  [key=2, style=dotted, color=green];
m11_155 -> m11_150  [key=0, style=bold, color=blue];
m11_157 -> m11_159  [key=1, style=dashed, color=green, label=SqlConnection];
m11_157 -> m11_158  [key=0, style=solid];
m11_159 -> m11_160  [key=0, style=solid, color=green];
m11_159 -> m11_162  [key=2, style=dotted, color=green];
m11_159 -> m11_163  [key=2, style=dotted, color=green];
m11_158 -> m11_159  [key=0, style=solid, color=green];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_164  [key=2, style=dotted];
m11_160 -> m11_165  [key=2, style=dotted];
m11_167 -> m11_168  [key=0, style=solid, color=green];
m11_167 -> m11_170  [key=1, style=dashed, color=green, label=sqlStorage];
m11_166 -> m11_167  [key=0, style=solid, color=green];
m11_166 -> m11_94  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m11_166 -> m11_166  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m11_168 -> m11_169  [key=0, style=solid, color=green];
m11_168 -> m11_170  [key=0, style=solid, color=green];
m11_170 -> m11_171  [key=0, style=solid, color=green];
m11_170 -> m11_94  [key=2, style=dotted, color=green];
m11_170 -> m11_172  [key=1, style=dashed, color=green, label="lambda expression"];
m11_169 -> m11_171  [key=0, style=solid, color=green];
m11_169 -> m11_156  [key=2, style=dotted, color=green];
m11_171 -> m11_166  [key=0, style=bold, color=blue];
m11_172 -> m11_174  [key=1, style=dashed, color=green, label=SqlConnection];
m11_172 -> m11_173  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid, color=green];
m11_174 -> m11_162  [key=2, style=dotted, color=green];
m11_174 -> m11_163  [key=2, style=dotted, color=green];
m11_173 -> m11_174  [key=0, style=solid, color=green];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_164  [key=2, style=dotted];
m11_175 -> m11_165  [key=2, style=dotted];
m11_161 -> m11_157  [key=0, style=bold, color=blue];
m11_176 -> m11_172  [key=0, style=bold, color=blue];
m11_78 -> m11_79  [key=0, style=solid];
m11_81 -> m11_82  [key=0, style=solid];
m11_85 -> m11_86  [key=0, style=solid];
m11_79 -> m11_71  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_80 -> m11_78  [key=0, style=bold, color=blue];
m11_83 -> m11_81  [key=0, style=bold, color=blue];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_84  [key=2, style=dotted];
m11_87 -> m11_85  [key=0, style=bold, color=blue];
m11_86 -> m11_87  [key=0, style=solid];
m11_89 -> m11_90  [key=0, style=solid];
m11_90 -> m11_88  [key=0, style=bold, color=blue];
m11_25 -> m11_139  [key=0, style=solid, color=green];
m11_139 -> m11_140  [key=0, style=solid, color=green];
m11_139 -> m11_142  [key=2, style=dotted, color=green];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_143  [key=2, style=dotted];
m11_141 -> m11_25  [key=0, style=bold, color=blue];
m11_34 -> m11_35  [key=0, style=solid, color=green];
m11_35 -> m11_36  [key=0, style=solid, color=green];
m11_35 -> m11_37  [key=2, style=dotted, color=green];
m11_36 -> m11_34  [key=0, style=bold, color=blue];
m11_9 -> m11_13  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_71  [key=2, style=dotted];
m11_57 -> m11_72  [key=2, style=dotted];
m11_57 -> m11_73  [key=2, style=dotted];
m11_57 -> m11_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_57 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_57 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_57 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_57 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_57 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_57 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_57 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_56  [key=3, color=darkorchid, style=bold, label="Local variable string canNotParseMessage"];
m11_56 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m11_56 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_74  [key=2, style=dotted];
m11_58 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_58 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_58 -> m11_63  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_58 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_58 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_59  [key=0, style=solid];
m11_60 -> m11_75  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_76  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_64  [key=0, style=solid];
m11_65 -> m11_75  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_76  [key=2, style=dotted];
m11_67 -> m11_22  [key=2, style=dotted];
m11_67 -> m11_70  [key=0, style=solid];
m11_69 -> m11_70  [key=0, style=solid];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=alias];
m11_59 -> m11_62  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_64  [key=0, style=solid];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_77  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=alias];
m11_64 -> m11_67  [key=0, style=solid];
m11_68 -> m11_69  [key=0, style=solid];
m11_70 -> m11_55  [key=0, style=bold, color=blue];
m11_16 -> m11_25  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_17 -> m11_2  [key=0, style=bold, color=blue];
m11_94 -> m11_92  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_94 -> m11_100  [key=0, style=solid, color=green];
m11_94 -> m11_102  [key=1, style=dashed, color=green, label="System.Func<SqlConnection, T>"];
m11_94 -> m11_108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_94 -> m11_150  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_94 -> m11_166  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_100 -> m11_100  [key=3, color=green, style=bold, label="Local variable SqlConnection connection"];
m11_100 -> m11_101  [key=0, style=solid, color=green];
m11_100 -> m11_23  [key=3, color=green, style=bold, label="Local variable SqlConnection connection"];
m11_101 -> m11_102  [key=0, style=solid, color=green];
m11_101 -> m11_23  [key=2, style=dotted, color=green];
m11_102 -> m11_103  [key=0, style=solid, color=green];
m11_102 -> m11_104  [key=2, style=dotted, color=green];
m11_103 -> m11_94  [key=0, style=bold, color=blue];
m11_19 -> m11_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string nameOrConnectionString"];
m11_19 -> m11_144  [key=0, style=solid];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_146  [key=2, style=dotted];
m11_145 -> m11_19  [key=0, style=bold, color=blue];
m11_108 -> m11_100  [key=3, color=green, style=bold, label="Parameter variable System.Transactions.IsolationLevel? isolationLevel"];
m11_108 -> m11_106  [key=3, color=green, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_108 -> m11_113  [key=0, style=solid, color=green];
m11_108 -> m11_114  [key=1, style=dashed, color=green, label="System.Func<SqlConnection, T>"];
m11_113 -> m11_114  [key=0, style=solid, color=green];
m11_113 -> m11_118  [key=2, style=dotted, color=green];
m11_113 -> m11_115  [key=1, style=dashed, color=green, label=transaction];
m11_114 -> m11_115  [key=0, style=solid, color=green];
m11_114 -> m11_94  [key=2, style=dotted, color=green];
m11_114 -> m11_116  [key=1, style=dashed, color=green, label=result];
m11_115 -> m11_116  [key=0, style=solid, color=green];
m11_115 -> m11_119  [key=2, style=dotted, color=green];
m11_116 -> m11_117  [key=0, style=solid, color=green];
m11_117 -> m11_108  [key=0, style=bold, color=blue];
m11_177 -> m11_35  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_39  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_92  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_101  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_106  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_113  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_114  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_120  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_121  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_129  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_139  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_140  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_178 -> m11_96  [key=1, style=dashed, color=green, label="System.Action<SqlConnection>"];
m11_179 -> m11_110  [key=1, style=dashed, color=green, label="System.Action<SqlConnection>"];
m12_201 -> m12_202  [key=0, style=solid];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_18  [key=2, style=dotted];
m12_202 -> m12_21  [key=2, style=dotted];
m12_202 -> m12_207  [key=2, style=dotted];
m12_202 -> m12_19  [key=2, style=dotted];
m12_202 -> m12_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_71  [key=2, style=dotted];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_72  [key=2, style=dotted];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_73  [key=2, style=dotted];
m12_205 -> m12_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_206 -> m12_201  [key=0, style=bold, color=blue];
m12_53 -> m12_54  [key=0, style=solid, color=red];
m12_53 -> m12_38  [key=2, style=dotted, color=red];
m12_53 -> m12_55  [key=2, style=dotted, color=red];
m12_42 -> m12_40  [key=0, style=bold, color=blue];
m12_48 -> m12_61  [key=0, style=solid];
m12_48 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m12_48 -> m12_49  [key=0, style=solid];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_67  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_62 -> m12_64  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_65  [key=0, style=solid];
m12_63 -> m12_61  [key=0, style=bold, color=blue];
m12_64 -> m12_65  [key=0, style=solid];
m12_66 -> m12_53  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_71  [key=2, style=dotted];
m12_65 -> m12_44  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_67 -> m12_48  [key=0, style=bold, color=blue];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_72  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid, color=red];
m12_10 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_10 -> m12_18  [key=2, style=dotted, color=red];
m12_10 -> m12_21  [key=2, style=dotted, color=red];
m12_10 -> m12_22  [key=2, style=dotted, color=red];
m12_10 -> m12_19  [key=2, style=dotted, color=red];
m12_10 -> m12_40  [key=1, style=dashed, color=red, label="lambda expression"];
m12_10 -> m12_44  [key=1, style=dashed, color=red, label="lambda expression"];
m12_11 -> m12_12  [key=0, style=solid, color=red];
m12_11 -> m12_13  [key=0, style=solid];
m12_11 -> m12_23  [key=2, style=dotted, color=red];
m12_13 -> m12_14  [key=0, style=solid, color=red];
m12_13 -> m12_18  [key=2, style=dotted, color=red];
m12_13 -> m12_19  [key=2, style=dotted, color=red];
m12_13 -> m12_52  [key=1, style=dashed, color=red, label="lambda expression"];
m12_12 -> m12_14  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid, color=red];
m12_12 -> m12_18  [key=2, style=dotted];
m12_12 -> m12_19  [key=2, style=dotted];
m12_12 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_14 -> m12_10  [key=0, style=bold, color=blue];
m12_14 -> m12_15  [key=0, style=solid, color=red];
m12_14 -> m12_24  [key=2, style=dotted, color=red];
m12_60 -> m12_46  [key=0, style=bold, color=blue];
m12_72 -> m12_69  [key=0, style=solid];
m12_72 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=pageIndex];
m12_24 -> m12_25  [key=0, style=solid];
m12_94 -> m12_95  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_18  [key=2, style=dotted];
m12_95 -> m12_101  [key=2, style=dotted];
m12_95 -> m12_19  [key=2, style=dotted];
m12_95 -> m12_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_18  [key=2, style=dotted];
m12_96 -> m12_101  [key=2, style=dotted];
m12_96 -> m12_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_18  [key=2, style=dotted];
m12_97 -> m12_101  [key=2, style=dotted];
m12_97 -> m12_19  [key=2, style=dotted];
m12_97 -> m12_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_71  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_72  [key=2, style=dotted];
m12_100 -> m12_94  [key=0, style=bold, color=blue];
m12_16 -> m12_17  [key=0, style=solid, color=green];
m12_16 -> m12_18  [key=0, style=solid, color=green];
m12_20 -> m12_21  [key=0, style=solid];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label=long];
m12_5 -> m12_6  [key=0, style=solid, color=red];
m12_5 -> m12_8  [key=2, style=dotted, color=green];
m12_5 -> m12_18  [key=2, style=dotted];
m12_5 -> m12_19  [key=2, style=dotted];
m12_5 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_4 -> m12_5  [key=0, style=solid, color=green];
m12_4 -> m12_17  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid, color=red];
m12_6 -> m12_9  [key=2, style=dotted, color=green];
m12_6 -> m12_20  [key=2, style=dotted, color=red];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_16  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_7 -> m12_0  [key=0, style=bold, color=blue];
m12_7 -> m12_8  [key=0, style=solid, color=red];
m12_7 -> m12_18  [key=2, style=dotted, color=red];
m12_7 -> m12_19  [key=2, style=dotted, color=red];
m12_7 -> m12_29  [key=1, style=dashed, color=red, label="lambda expression"];
m12_165 -> m12_166  [key=0, style=solid];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_172  [key=2, style=dotted];
m12_166 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_166 -> m12_178  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_166 -> m12_181  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_18  [key=2, style=dotted];
m12_167 -> m12_173  [key=2, style=dotted];
m12_167 -> m12_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_73  [key=2, style=dotted];
m12_170 -> m12_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_71  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_72  [key=2, style=dotted];
m12_171 -> m12_165  [key=0, style=bold, color=blue];
m12_191 -> m12_191  [key=3, color=darkorchid, style=bold, label="Local variable string jobId"];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_44  [key=2, style=dotted];
m12_38 -> m12_45  [key=2, style=dotted];
m12_47 -> m12_216  [key=0, style=solid];
m12_47 -> m12_68  [key=0, style=solid];
m12_47 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m12_216 -> m12_47  [key=0, style=bold, color=blue];
m12_154 -> m12_155  [key=0, style=solid];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_71  [key=2, style=dotted];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_72  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_73  [key=2, style=dotted];
m12_157 -> m12_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_158 -> m12_154  [key=0, style=bold, color=blue];
m12_49 -> m12_74  [key=0, style=solid];
m12_49 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_51  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_44  [key=2, style=dotted];
m12_75 -> m12_53  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_28  [key=2, style=dotted];
m12_76 -> m12_49  [key=0, style=bold, color=blue];
m12_76 -> m12_74  [key=0, style=bold, color=blue];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_42  [key=2, style=dotted];
m12_28 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_28 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=pagerItems];
m12_184 -> m12_185  [key=0, style=solid];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_172  [key=2, style=dotted];
m12_185 -> m12_189  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_185 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_185 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_18  [key=2, style=dotted];
m12_186 -> m12_191  [key=2, style=dotted];
m12_186 -> m12_173  [key=2, style=dotted];
m12_186 -> m12_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_73  [key=2, style=dotted];
m12_189 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_71  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_72  [key=2, style=dotted];
m12_190 -> m12_184  [key=0, style=bold, color=blue];
m12_15 -> m12_16  [key=0, style=solid, color=green];
m12_15 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_15 -> m12_0  [key=0, style=bold, color=blue];
m12_17 -> m12_19  [key=0, style=solid, color=green];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_15  [key=0, style=bold, color=blue];
m12_44 -> m12_77  [key=0, style=solid];
m12_44 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label=bool];
m12_44 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.ItemType"];
m12_44 -> m12_45  [key=0, style=solid];
m12_77 -> m12_78  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_80  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_77  [key=0, style=bold, color=blue];
m12_80 -> m12_44  [key=0, style=bold, color=blue];
m12_123 -> m12_124  [key=0, style=solid];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_71  [key=2, style=dotted];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_72  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_73  [key=2, style=dotted];
m12_126 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_127 -> m12_123  [key=0, style=bold, color=blue];
m12_8 -> m12_9  [key=0, style=solid, color=red];
m12_8 -> m12_18  [key=2, style=dotted, color=red];
m12_8 -> m12_19  [key=2, style=dotted, color=red];
m12_8 -> m12_32  [key=1, style=dashed, color=red, label="lambda expression"];
m12_9 -> m12_10  [key=0, style=solid, color=red];
m12_9 -> m12_18  [key=2, style=dotted, color=red];
m12_9 -> m12_19  [key=2, style=dotted, color=red];
m12_9 -> m12_35  [key=1, style=dashed, color=red, label="lambda expression"];
m12_9 -> m12_20  [key=0, style=solid];
m12_134 -> m12_135  [key=0, style=solid];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_18  [key=2, style=dotted];
m12_135 -> m12_19  [key=2, style=dotted];
m12_135 -> m12_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_71  [key=2, style=dotted];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_72  [key=2, style=dotted];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_73  [key=2, style=dotted];
m12_138 -> m12_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_139 -> m12_134  [key=0, style=bold, color=blue];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_49  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_73  [key=2, style=dotted];
m12_68 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_68 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=pageIndex];
m12_68 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=pageIndex];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_73  [key=2, style=dotted];
m12_69 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_70 -> m12_65  [key=0, style=bold, color=blue];
m12_70 -> m12_44  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_55 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_55 -> m12_56  [key=0, style=solid];
m12_211 -> m12_212  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_29 -> m12_30  [key=0, style=solid, color=red];
m12_29 -> m12_31  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid, color=red];
m12_32 -> m12_34  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid, color=red];
m12_35 -> m12_47  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid, color=red];
m12_52 -> m12_43  [key=0, style=bold, color=blue];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=2, style=dotted];
m12_27 -> m12_25  [key=0, style=bold, color=blue];
m12_27 -> m12_28  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid, color=red];
m12_30 -> m12_41  [key=0, style=solid];
m12_31 -> m12_29  [key=0, style=bold, color=blue];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_43  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid, color=red];
m12_33 -> m12_44  [key=2, style=dotted];
m12_33 -> m12_45  [key=2, style=dotted];
m12_34 -> m12_32  [key=0, style=bold, color=blue];
m12_34 -> m12_46  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid, color=red];
m12_36 -> m12_38  [key=2, style=dotted, color=red];
m12_36 -> m12_39  [key=2, style=dotted, color=red];
m12_36 -> m12_48  [key=2, style=dotted];
m12_37 -> m12_35  [key=0, style=bold, color=blue];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_39  [key=0, style=solid];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_43  [key=2, style=dotted];
m12_41 -> m12_9  [key=0, style=bold, color=blue];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_47  [key=2, style=dotted];
m12_46 -> m12_44  [key=0, style=bold, color=blue];
m12_46 -> m12_59  [key=1, style=dashed, color=green, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m12_46 -> m12_54  [key=0, style=solid];
m12_50 -> m12_48  [key=0, style=bold, color=blue];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_44  [key=2, style=dotted];
m12_54 -> m12_52  [key=0, style=bold, color=blue];
m12_54 -> m12_60  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_87 -> m12_88  [key=0, style=solid];
m12_90 -> m12_91  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_39  [key=2, style=dotted];
m12_89 -> m12_87  [key=0, style=bold, color=blue];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_93  [key=2, style=dotted];
m12_92 -> m12_90  [key=0, style=bold, color=blue];
m12_102 -> m12_103  [key=0, style=solid];
m12_105 -> m12_106  [key=0, style=solid];
m12_109 -> m12_110  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_38  [key=2, style=dotted];
m12_103 -> m12_55  [key=2, style=dotted];
m12_104 -> m12_102  [key=0, style=bold, color=blue];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_38  [key=2, style=dotted];
m12_106 -> m12_108  [key=2, style=dotted];
m12_107 -> m12_105  [key=0, style=bold, color=blue];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_38  [key=2, style=dotted];
m12_110 -> m12_55  [key=2, style=dotted];
m12_111 -> m12_109  [key=0, style=bold, color=blue];
m12_117 -> m12_118  [key=0, style=solid];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_38  [key=2, style=dotted];
m12_118 -> m12_55  [key=2, style=dotted];
m12_118 -> m12_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_119 -> m12_117  [key=0, style=bold, color=blue];
m12_120 -> m12_121  [key=0, style=solid];
m12_121 -> m12_122  [key=0, style=solid];
m12_122 -> m12_120  [key=0, style=bold, color=blue];
m12_128 -> m12_129  [key=0, style=solid];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_38  [key=2, style=dotted];
m12_129 -> m12_55  [key=2, style=dotted];
m12_129 -> m12_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_130 -> m12_128  [key=0, style=bold, color=blue];
m12_131 -> m12_132  [key=0, style=solid];
m12_132 -> m12_133  [key=0, style=solid];
m12_133 -> m12_131  [key=0, style=bold, color=blue];
m12_140 -> m12_141  [key=0, style=solid];
m12_143 -> m12_144  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_38  [key=2, style=dotted];
m12_141 -> m12_55  [key=2, style=dotted];
m12_142 -> m12_140  [key=0, style=bold, color=blue];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_38  [key=2, style=dotted];
m12_144 -> m12_108  [key=2, style=dotted];
m12_145 -> m12_143  [key=0, style=bold, color=blue];
m12_151 -> m12_152  [key=0, style=solid];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_38  [key=2, style=dotted];
m12_152 -> m12_108  [key=2, style=dotted];
m12_153 -> m12_151  [key=0, style=bold, color=blue];
m12_159 -> m12_160  [key=0, style=solid];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_38  [key=2, style=dotted];
m12_160 -> m12_55  [key=2, style=dotted];
m12_160 -> m12_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_161 -> m12_159  [key=0, style=bold, color=blue];
m12_162 -> m12_163  [key=0, style=solid];
m12_163 -> m12_164  [key=0, style=solid];
m12_164 -> m12_162  [key=0, style=bold, color=blue];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_38  [key=2, style=dotted];
m12_178 -> m12_55  [key=2, style=dotted];
m12_178 -> m12_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_183  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_177 -> m12_178  [key=0, style=solid];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_38  [key=2, style=dotted];
m12_175 -> m12_108  [key=2, style=dotted];
m12_176 -> m12_174  [key=0, style=bold, color=blue];
m12_179 -> m12_177  [key=0, style=bold, color=blue];
m12_180 -> m12_181  [key=0, style=solid];
m12_182 -> m12_180  [key=0, style=bold, color=blue];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_38  [key=2, style=dotted];
m12_196 -> m12_55  [key=2, style=dotted];
m12_196 -> m12_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_199 -> m12_200  [key=0, style=solid];
m12_192 -> m12_193  [key=0, style=solid];
m12_195 -> m12_196  [key=0, style=solid];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_38  [key=2, style=dotted];
m12_193 -> m12_108  [key=2, style=dotted];
m12_194 -> m12_192  [key=0, style=bold, color=blue];
m12_197 -> m12_195  [key=0, style=bold, color=blue];
m12_198 -> m12_199  [key=0, style=solid];
m12_200 -> m12_198  [key=0, style=bold, color=blue];
m12_208 -> m12_209  [key=0, style=solid];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_43  [key=2, style=dotted];
m12_210 -> m12_208  [key=0, style=bold, color=blue];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_38  [key=2, style=dotted];
m12_212 -> m12_55  [key=2, style=dotted];
m12_213 -> m12_211  [key=0, style=bold, color=blue];
m12_112 -> m12_113  [key=0, style=solid];
m12_113 -> m12_114  [key=0, style=solid, color=red];
m12_113 -> m12_71  [key=2, style=dotted];
m12_114 -> m12_115  [key=0, style=solid, color=red];
m12_114 -> m12_72  [key=2, style=dotted, color=red];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_73  [key=2, style=dotted];
m12_115 -> m12_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_116 -> m12_112  [key=0, style=bold, color=blue];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m12_81 -> m12_6  [key=1, style=dashed, color=green, label="HangFire.Web.Pager"];
m12_81 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_81 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager"];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_71  [key=2, style=dotted];
m12_82 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.Item"];
m12_82 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.Item"];
m12_82 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pager.Item"];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_72  [key=2, style=dotted];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_73  [key=2, style=dotted];
m12_84 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_73  [key=2, style=dotted];
m12_85 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_86 -> m12_81  [key=0, style=bold, color=blue];
m12_71 -> m12_214  [key=0, style=solid];
m12_71 -> m12_53  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_64  [key=2, style=dotted];
m12_215 -> m12_71  [key=0, style=bold, color=blue];
m12_73 -> m12_47  [key=0, style=bold, color=blue];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_25  [key=0, style=solid];
m12_59 -> m12_60  [key=0, style=solid, color=green];
m12_59 -> m12_53  [key=2, style=dotted, color=green];
m12_59 -> m12_56  [key=0, style=bold, color=blue];
m12_58 -> m12_59  [key=0, style=solid, color=green];
m12_58 -> m12_44  [key=2, style=dotted];
m12_58 -> m12_60  [key=2, style=dotted];
m12_56 -> m12_58  [key=0, style=solid];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_38  [key=2, style=dotted];
m12_57 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_43 -> m12_50  [key=0, style=solid];
m12_43 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<HangFire.Web.Pager.Item>"];
m12_51 -> m12_53  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_146 -> m12_147  [key=0, style=solid];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_71  [key=2, style=dotted];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_72  [key=2, style=dotted];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_73  [key=2, style=dotted];
m12_149 -> m12_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_150 -> m12_146  [key=0, style=bold, color=blue];
m12_217 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_6  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_7  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_8  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_9  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_36  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_10  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_11  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_13  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_14  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_114  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_138  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_147  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_203  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_204  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_205  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_217 -> m12_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m12_218 -> m12_178  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_218 -> m12_181  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_219 -> m12_196  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_219 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=exception];
}
