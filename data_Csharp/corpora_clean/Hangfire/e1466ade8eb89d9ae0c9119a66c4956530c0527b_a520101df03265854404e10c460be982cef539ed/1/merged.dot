digraph  {
n3 [label="HangFire.Web.Pages.Paginator", span=""];
n0 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)"];
n1 [label="_pager = pager", span="8-8", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)"];
n2 [label="Exit HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)"];
d69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d22 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
d68 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
d70 [label="this.ScenarioSetup(scenarioInfo)", span="152-152", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d47 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr"];
d216 [label="HangFire.Tests.ClientFiltersFeature", span=""];
d71 [label="this.FeatureBackground()", span="154-154", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d72 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d30 [label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()"];
d73 [label="table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="159-161", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d49 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr"];
d74 [label="table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d75 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d50 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow"];
d76 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d33 [label="Entry Unk.Given", span="", cluster="Unk.Given"];
d77 [label="testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d48 [label="Entry Unk.When", span="", cluster="Unk.When"];
d78 [label="this.ScenarioCleanup()", span="173-173", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", color=green, community=0];
d51 [label="Entry Unk.Then", span="", cluster="Unk.Then"];
d79 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148", cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()"];
d26 [label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()"];
d81 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d80 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
d82 [label="this.ScenarioSetup(scenarioInfo)", span="184-184", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d83 [label="this.FeatureBackground()", span="186-186", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d84 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d85 [label="table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", span="191-193", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d86 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d87 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d88 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d89 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", color=green, community=0];
d90 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()"];
d92 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d91 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
d93 [label="this.ScenarioSetup(scenarioInfo)", span="215-215", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d94 [label="this.FeatureBackground()", span="217-217", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d95 [label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d96 [label="table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d97 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d98 [label="testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="229-229", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d99 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d52 [label="Entry Unk.And", span="", cluster="Unk.And"];
d100 [label="testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d101 [label="this.ScenarioCleanup()", span="235-235", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", color=green, community=0];
d102 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()"];
d104 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d103 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
d105 [label="this.ScenarioSetup(scenarioInfo)", span="248-248", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d106 [label="this.FeatureBackground()", span="250-250", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d107 [label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d108 [label="table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d109 [label="testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d110 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d111 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d112 [label="this.ScenarioCleanup()", span="266-266", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", color=green, community=0];
d113 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243", cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()"];
d115 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d114 [label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
d116 [label="this.ScenarioSetup(scenarioInfo)", span="277-277", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d117 [label="this.FeatureBackground()", span="279-279", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d118 [label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d119 [label="table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d120 [label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d121 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d122 [label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d123 [label="this.ScenarioCleanup()", span="295-295", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", color=green, community=0];
d124 [label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273", cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()"];
d134 [label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0];
d133 [label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d135 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0];
d136 [label="table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0];
d137 [label="table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0];
d138 [label="testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", color=green, community=0];
d139 [label="this.ScenarioCleanup()", span="331-331", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d148 [label="TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0];
d147 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d149 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0];
d150 [label="table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0];
d151 [label="table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0];
d152 [label="testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0];
d153 [label="this.ScenarioCleanup()", span="363-363", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d163 [label="TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d162 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d164 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d165 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d166 [label="table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d167 [label="table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d168 [label="table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d169 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d170 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d192 [label="TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0];
d191 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="451-451", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d193 [label="table11.AddRow(new string[] {\r\n                        ''first''})", span="455-456", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0];
d194 [label="table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0];
d195 [label="testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0];
d196 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d208 [label="TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d207 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="489-489", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d209 [label="table12.AddRow(new string[] {\r\n                        ''first''})", span="493-494", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d210 [label="table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d211 [label="table12.AddRow(new string[] {\r\n                        ''third''})", span="497-498", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d212 [label="testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", color=green, community=0];
d213 [label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d24 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
d36 [label="this.ScenarioSetup(scenarioInfo)", span="88-88", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d55 [label="this.ScenarioSetup(scenarioInfo)", span="118-118", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d127 [label="this.ScenarioSetup(scenarioInfo)", span="306-306", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d143 [label="this.ScenarioSetup(scenarioInfo)", span="342-342", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d157 [label="this.ScenarioSetup(scenarioInfo)", span="374-374", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d175 [label="this.ScenarioSetup(scenarioInfo)", span="416-416", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d186 [label="this.ScenarioSetup(scenarioInfo)", span="441-441", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d201 [label="this.ScenarioSetup(scenarioInfo)", span="477-477", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
d35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d54 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d126 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d142 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d156 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d174 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d185 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters should be executed depending on their order'', ((string[])(null)))", span="439-439", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d200 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d37 [label="this.FeatureBackground()", span="90-90", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d45 [label="this.ScenarioCleanup()", span="107-107", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d56 [label="this.FeatureBackground()", span="120-120", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d66 [label="this.ScenarioCleanup()", span="141-141", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d128 [label="this.FeatureBackground()", span="308-308", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d144 [label="this.FeatureBackground()", span="344-344", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d158 [label="this.FeatureBackground()", span="376-376", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d171 [label="this.ScenarioCleanup()", span="403-403", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d176 [label="this.FeatureBackground()", span="418-418", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d182 [label="this.ScenarioCleanup()", span="430-430", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d187 [label="this.FeatureBackground()", span="443-443", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d197 [label="this.ScenarioCleanup()", span="464-464", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d202 [label="this.FeatureBackground()", span="479-479", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d214 [label="this.ScenarioCleanup()", span="504-504", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d32 [label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()"];
d31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76", cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()"];
d40 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d60 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d41 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d42 [label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d61 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="130-131", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d62 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d63 [label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d64 [label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d38 [label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d57 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d129 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d145 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d159 [label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d177 [label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d188 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d203 [label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d39 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d59 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d132 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d178 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="422-422", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d190 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="449-449", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d206 [label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="487-487", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d43 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d65 [label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d180 [label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d28 [label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()"];
d27 [label="testRunner.CollectScenarioErrors()", span="69-69", cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()"];
d44 [label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d58 [label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d130 [label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d131 [label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d146 [label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d160 [label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d161 [label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d179 [label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="424-424", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d181 [label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d189 [label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d204 [label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d205 [label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d140 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d154 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart"];
d34 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d53 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d125 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302", cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()"];
d141 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338", cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()"];
d155 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d173 [label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d184 [label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d199 [label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d46 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84", cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()"];
d67 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114", cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()"];
d172 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d183 [label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411", cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()"];
d198 [label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437", cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()"];
d215 [label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472", cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()"];
d29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors"];
m0_22 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientJobDescriptor.cs"];
m0_30 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="100-102", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs"];
m0_24 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs"];
m0_25 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", color=red, community=0, file="ClientJobDescriptor.cs"];
m0_27 [label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="96-98", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs"];
m0_26 [label="throw new ArgumentNullException(''name'');", span="94-94", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=red, community=0, file="ClientJobDescriptor.cs"];
m0_28 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", color=green, community=0, file="ClientJobDescriptor.cs"];
m0_29 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", color=green, community=0, file="ClientJobDescriptor.cs"];
m0_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_1 [label="Debug.Assert(redis != null)", span="26-26", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_2 [label="Debug.Assert(jobId != null)", span="27-27", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_3 [label="Debug.Assert(type != null)", span="28-28", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_4 [label="Debug.Assert(arguments != null)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_5 [label="Debug.Assert(state != null)", span="30-30", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_6 [label="_stateMachine = new StateMachine(redis)", span="32-32", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_7 [label="JobId = jobId", span="34-34", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_8 [label="Type = type", span="35-35", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_9 [label="State = state", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_10 [label="_jobParameters[''Type''] = type.AssemblyQualifiedName", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_11 [label="_jobParameters[''Args''] = JobHelper.ToJson(arguments)", span="39-39", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_12 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs"];
m0_21 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ClientJobDescriptor.cs"];
m0_16 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs"];
m0_17 [label="String.IsNullOrWhiteSpace(name)", span="74-74", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs"];
m0_19 [label=_jobWasCreated, span="76-76", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", color=green, community=0];
m0_18 [label="throw new ArgumentNullException(''name'');", span="74-74", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs"];
m0_20 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="ClientJobDescriptor.cs"];
m0_34 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs"];
m0_31 [label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs"];
m0_32 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="103-103", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs"];
m0_35 [label="HangFire.Client.ClientJobDescriptor", span="", cluster="HangFire.Client.ClientJobDescriptor.Create()", color=green, community=0, file="ClientJobDescriptor.cs"];
m0_36 [label="_stateMachine.CreateInState(JobId, _jobParameters, State)", span="108-108", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs"];
m0_33 [label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101", cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs"];
m0_15 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs"];
m0_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ClientJobDescriptor.cs"];
m0_13 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="ClientJobDescriptor.cs"];
m0_14 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="ClientJobDescriptor.cs"];
m1_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="JobClient.feature.cs"];
m1_86 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", span="202-202", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_87 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id should cause an exception'', ((string[])(null)))", span="204-204", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_88 [label="this.ScenarioSetup(scenarioInfo)", span="206-206", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_89 [label="this.FeatureBackground()", span="208-208", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_90 [label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="210-210", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_91 [label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="212-212", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_92 [label="this.ScenarioCleanup()", span="214-214", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_93 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", span="202-202", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs"];
m1_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="JobClient.feature.cs"];
m1_30 [label="Entry HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs"];
m1_31 [label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs"];
m1_32 [label="Exit HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs"];
m1_94 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", span="220-220", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_95 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type should cause an exception'', ((string[])(null)))", span="222-222", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_96 [label="this.ScenarioSetup(scenarioInfo)", span="224-224", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_97 [label="this.FeatureBackground()", span="226-226", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_98 [label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="228-228", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_99 [label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="230-230", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_100 [label="this.ScenarioCleanup()", span="232-232", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_101 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", span="220-220", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs"];
m1_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="JobClient.feature.cs"];
m1_18 [label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs"];
m1_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs"];
m1_20 [label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs"];
m1_34 [label="Entry HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", span="82-82", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_35 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates should create a job in the storage'', ((string[])(null)))", span="84-84", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_36 [label="this.ScenarioSetup(scenarioInfo)", span="86-86", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_37 [label="this.FeatureBackground()", span="88-88", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_38 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="90-90", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_39 [label="testRunner.Then(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="92-92", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_40 [label="this.ScenarioCleanup()", span="94-94", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_41 [label="Exit HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", span="82-82", cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs"];
m1_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="JobClient.feature.cs"];
m1_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobClient.feature.cs"];
m1_0 [label="Entry HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m1_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m1_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobClient'', ''\r\n  A a user, I expect that my jobs are created and the initial state\r\n  is appli'' +\r\n                    ''ed to them.'', ProgrammingLanguage.CSharp, ((string[])(null)))", span="33-34", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m1_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m1_4 [label="Exit HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs"];
m1_43 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobClient.feature.cs"];
m1_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="JobClient.feature.cs"];
m1_45 [label="Entry HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", span="101-101", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job should contain the \'Type\' parameter that is equal to the assembly qualifi'' +\r\n                    ''ed type name'', ((string[])(null)))", span="103-104", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_49 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="110-110", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_50 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_51 [label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", span="115-117", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_52 [label="testRunner.Then(''it should have the following parameters:'', ((string)(null)), table1, ''Then '')", span="119-119", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_53 [label="this.ScenarioCleanup()", span="121-121", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_54 [label="Exit HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", span="101-101", cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs"];
m1_78 [label="Entry HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", span="184-184", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_79 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The specified state should be applied to the job'', ((string[])(null)))", span="186-186", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_80 [label="this.ScenarioSetup(scenarioInfo)", span="188-188", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_81 [label="this.FeatureBackground()", span="190-190", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_82 [label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="192-192", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_83 [label="testRunner.Then(''the given state should be applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="194-194", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_84 [label="this.ScenarioCleanup()", span="196-196", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_85 [label="Exit HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", span="184-184", cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs"];
m1_9 [label="Entry HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs"];
m1_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs"];
m1_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs"];
m1_12 [label="Exit HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs"];
m1_42 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.feature.cs"];
m1_57 [label="Entry HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", span="128-128", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter should contain the empty'' +\r\n                    '' JSON value'', ((string[])(null)))", span="130-131", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_59 [label="this.ScenarioSetup(scenarioInfo)", span="133-133", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_60 [label="this.FeatureBackground()", span="135-135", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_61 [label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_62 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="139-141", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_63 [label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", span="142-144", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_64 [label="testRunner.Then(''it should have the following parameters:'', ((string)(null)), table2, ''Then '')", span="146-146", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_65 [label="this.ScenarioCleanup()", span="148-148", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_66 [label="Exit HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", span="128-128", cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs"];
m1_67 [label="Entry HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", span="155-155", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_68 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments should be converted to a JSON string and contained in the \'Args\' parame'' +\r\n                    ''ter'', ((string[])(null)))", span="157-158", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_69 [label="this.ScenarioSetup(scenarioInfo)", span="160-160", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_70 [label="this.FeatureBackground()", span="162-162", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_71 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="164-166", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_72 [label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", span="167-169", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_73 [label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", span="170-172", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_74 [label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", span="174-174", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_75 [label="testRunner.Then(''the job should contain all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_76 [label="this.ScenarioCleanup()", span="178-178", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_77 [label="Exit HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", span="155-155", cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs"];
m1_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobClient.feature.cs"];
m1_14 [label="Entry HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs"];
m1_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobClient''))", span="48-49", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs"];
m1_16 [label="HangFire.Tests.Client.JobClientFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs"];
m1_17 [label="Exit HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs"];
m1_22 [label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs"];
m1_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs"];
m1_24 [label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs"];
m1_33 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobClient.feature.cs"];
m1_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.feature.cs"];
m1_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="JobClient.feature.cs"];
m1_102 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", span="239-239", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_103 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' should'' +\r\n                    '' cause an exception'', ((string[])(null)))", span="241-242", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_104 [label="this.ScenarioSetup(scenarioInfo)", span="244-244", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_105 [label="this.FeatureBackground()", span="246-246", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_106 [label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="248-248", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_107 [label="testRunner.Then(''a \'System.ArgumentException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="250-250", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_108 [label="this.ScenarioCleanup()", span="252-252", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_109 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", span="239-239", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs"];
m1_26 [label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs"];
m1_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs"];
m1_28 [label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs"];
m1_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobClient.feature.cs"];
m1_110 [label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", span="258-258", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_111 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state should cause an exception'', ((string[])(null)))", span="260-260", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_112 [label="this.ScenarioSetup(scenarioInfo)", span="262-262", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_113 [label="this.FeatureBackground()", span="264-264", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_114 [label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="266-266", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_115 [label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="268-268", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_116 [label="this.ScenarioCleanup()", span="270-270", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_117 [label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", span="258-258", cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs"];
m1_118 [label="HangFire.Tests.Client.JobClientFeature", span="", file="JobClient.feature.cs"];
m2_26 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="73-73", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_27 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_28 [label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="76-76", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_29 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="77-77", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_30 [label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="81-85", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_31 [label=Exception, span="87-87", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_32 [label="_exception = ex", span="89-89", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_33 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="73-73", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs"];
m2_0 [label="Entry HangFire.Tests.JobClientSteps.GivenAClient()", span="28-28", cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs"];
m2_1 [label="_client = new JobClient(\r\n                RedisFactory.BasicManager,\r\n                new JobCreator(_clientFilters, _exceptionFilters))", span="30-32", cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs"];
m2_2 [label="Exit HangFire.Tests.JobClientSteps.GivenAClient()", span="28-28", cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs"];
m2_9 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobClientSteps.cs"];
m2_19 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs"];
m2_20 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs"];
m2_21 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs"];
m2_76 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="98-98", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClientSteps.cs"];
m2_116 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="JobClientSteps.cs"];
m2_95 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="JobClientSteps.cs"];
m2_50 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JobClientSteps.cs"];
m2_86 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JobClientSteps.cs"];
m2_22 [label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12", cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobClientSteps.cs"];
m2_34 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="JobClientSteps.cs"];
m2_66 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m2_67 [label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", color=red, community=0, file="JobClientSteps.cs"];
m2_68 [label=Exception, span="126-126", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m2_69 [label="_exception = ex", span="128-128", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m2_70 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs"];
m2_136 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="229-229", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs"];
m2_137 [label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="231-231", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs"];
m2_138 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="229-229", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs"];
m2_108 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobClientSteps.cs"];
m2_128 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="217-217", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_129 [label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="219-219", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_131 [label="i < table.RowCount", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_132 [label="var method = table.Rows[i][''Method'']", span="223-223", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_130 [label="var i = 0", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_133 [label="Assert.AreEqual(method, _clientFilterResults[i])", span="224-224", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_134 [label="i++", span="221-221", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_135 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="217-217", cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs"];
m2_106 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobClientSteps.cs"];
m2_13 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m2_14 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, false, true))", span="50-50", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m2_15 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m2_46 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m2_47 [label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m2_48 [label="When(''I create a job'')", span="97-97", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m2_49 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs"];
m2_139 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JobClientSteps.cs"];
m2_10 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs"];
m2_11 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, true))", span="44-44", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs"];
m2_12 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs"];
m2_5 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="36-36", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs"];
m2_6 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults))", span="38-38", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs"];
m2_7 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="36-36", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs"];
m2_90 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JobClientSteps.cs"];
m2_107 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JobClientSteps.cs"];
m2_58 [label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs"];
m2_59 [label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs"];
m2_60 [label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101", cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs"];
m2_71 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m2_72 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="137-137", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", color=red, community=0, file="JobClientSteps.cs"];
m2_73 [label=Exception, span="139-139", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m2_74 [label="_exception = ex", span="141-141", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m2_75 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs"];
m2_91 [label="Entry HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m2_92 [label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="173-173", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m2_93 [label="DictionaryAssert.ContainsFollowingItems(table, job)", span="174-174", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m2_94 [label="Exit HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="171-171", cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs"];
m2_151 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JobClientSteps.cs"];
m2_77 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m2_78 [label="_client.CreateJob(JobSteps.DefaultJobId, typeof(JobClientSteps), null, null)", span="150-150", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", color=red, community=0, file="JobClientSteps.cs"];
m2_79 [label=Exception, span="152-152", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m2_80 [label="_exception = ex", span="154-154", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m2_81 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs"];
m2_3 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="31-31", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClientSteps.cs"];
m2_109 [label="Entry HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs"];
m2_110 [label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="196-198", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs"];
m2_111 [label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194", cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs"];
m2_45 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="JobClientSteps.cs"];
m2_97 [label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_98 [label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_99 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_100 [label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_102 [label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_101 [label=_arguments, span="186-186", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_103 [label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_104 [label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178", cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs"];
m2_16 [label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs"];
m2_17 [label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs"];
m2_18 [label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54", cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs"];
m2_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientSteps.cs"];
m2_124 [label="Entry HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="209-209", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m2_125 [label="Assert.IsNotNull(_exception)", span="211-211", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m2_126 [label="Assert.IsInstanceOfType(_exception, typeof(CreateJobFailedException))", span="212-212", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m2_127 [label="Exit HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="209-209", cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs"];
m2_35 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobClientSteps.cs"];
m2_123 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="JobClientSteps.cs"];
m2_87 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs"];
m2_88 [label="Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="167-167", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs"];
m2_89 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs"];
m2_122 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="JobClientSteps.cs"];
m2_23 [label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m2_24 [label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m2_25 [label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66", cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs"];
m2_82 [label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs"];
m2_83 [label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs"];
m2_84 [label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159", cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs"];
m2_113 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="JobClientSteps.cs"];
m2_39 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="JobClientSteps.cs"];
m2_42 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="JobClientSteps.cs"];
m2_40 [label="x.StateName", span="76-76", cluster="lambda expression", file="JobClientSteps.cs"];
m2_41 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="JobClientSteps.cs"];
m2_43 [label="x.GetProperties()", span="77-77", cluster="lambda expression", file="JobClientSteps.cs"];
m2_44 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="JobClientSteps.cs"];
m2_52 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="JobClientSteps.cs"];
m2_55 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="JobClientSteps.cs"];
m2_53 [label="x[''Name'']", span="96-96", cluster="lambda expression", file="JobClientSteps.cs"];
m2_54 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="JobClientSteps.cs"];
m2_56 [label="x[''Value'']", span="96-96", cluster="lambda expression", file="JobClientSteps.cs"];
m2_57 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="JobClientSteps.cs"];
m2_114 [label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="197-197", cluster="lambda expression", file="JobClientSteps.cs"];
m2_115 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="JobClientSteps.cs"];
m2_121 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JobClientSteps.cs"];
m2_117 [label="Entry HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="202-202", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m2_118 [label="Assert.IsNotNull(_exception)", span="204-204", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m2_119 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="205-205", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m2_120 [label="Exit HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="202-202", cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs"];
m2_140 [label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="236-236", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_141 [label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="238-238", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_143 [label="i < table.RowCount", span="240-240", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_144 [label="var filter = table.Rows[i][''Filter'']", span="242-242", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_142 [label="var i = 0", span="240-240", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_145 [label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="243-243", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_146 [label="i++", span="240-240", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_147 [label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="236-236", cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs"];
m2_112 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobClientSteps.cs"];
m2_105 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="JobClientSteps.cs"];
m2_8 [label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="JobClientSteps.cs"];
m2_148 [label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="248-248", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs"];
m2_149 [label="Assert.IsNull(_exception)", span="250-250", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs"];
m2_150 [label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="248-248", cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs"];
m2_96 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="JobClientSteps.cs"];
m2_36 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobClientSteps.cs"];
m2_38 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobClientSteps.cs"];
m2_61 [label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m2_62 [label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", color=red, community=0, file="JobClientSteps.cs"];
m2_63 [label=Exception, span="113-113", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m2_64 [label="_exception = ex", span="115-115", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m2_65 [label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107", cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs"];
m2_4 [label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27", cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobClientSteps.cs"];
m2_85 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="JobClientSteps.cs"];
m2_152 [label="HangFire.Tests.JobClientSteps", span="", file="JobClientSteps.cs"];
m3_20 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelper.cs"];
m3_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHelper.cs"];
m3_35 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs"];
m3_23 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_24 [label="String.IsNullOrWhiteSpace(name)", span="97-97", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_28 [label="var serializedValue = JobHelper.ToJson(value)", span="104-104", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_29 [label="!_parameters.ContainsKey(name)", span="106-106", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_30 [label="_parameters.Add(name, serializedValue)", span="108-108", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_31 [label="_parameters[name] = serializedValue", span="112-112", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_25 [label="throw new ArgumentNullException(''name'');", span="97-97", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_26 [label=_jobWasCreated, span="99-99", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="101-101", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_32 [label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobHelper.cs"];
m3_0 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs"];
m3_1 [label="Items = context.Items", span="40-40", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs"];
m3_2 [label="_jobWasCreated = context._jobWasCreated", span="41-41", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs"];
m3_3 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobHelper.cs"];
m3_43 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs"];
m3_38 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs"];
m3_39 [label="String.IsNullOrWhiteSpace(name)", span="130-130", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs"];
m3_41 [label="return _parameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_parameters[name])\r\n                : default(T);", span="132-134", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs"];
m3_40 [label="throw new ArgumentNullException(''name'');", span="130-130", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs"];
m3_42 [label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobHelper.cs"];
m3_33 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="JobHelper.cs"];
m3_48 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_4 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_5 [label="connection == null", span="50-50", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_7 [label="jobMethod == null", span="51-51", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_9 [label="arguments == null", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_11 [label="initialState == null", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_13 [label="Connection = connection", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_14 [label="JobMethod = jobMethod", span="56-56", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_15 [label="Arguments = arguments", span="57-57", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_16 [label="InitialState = initialState", span="58-58", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_18 [label="_stateMachine = new StateMachine(connection)", span="61-61", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_6 [label="throw new ArgumentNullException(''connection'');", span="50-50", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_8 [label="throw new ArgumentNullException(''jobMethod'');", span="51-51", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_10 [label="throw new ArgumentNullException(''arguments'');", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_12 [label="throw new ArgumentNullException(''initialState'');", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_17 [label="Items = new Dictionary<string, object>()", span="59-59", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_19 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobHelper.cs"];
m3_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobHelper.cs"];
m3_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobHelper.cs"];
m3_44 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="137-137", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs"];
m3_45 [label="JobId = _stateMachine.CreateInState(JobMethod, Arguments, _parameters, InitialState)", span="139-139", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs"];
m3_46 [label="_jobWasCreated = true", span="140-140", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs"];
m3_47 [label="Exit HangFire.Client.CreateContext.CreateJob()", span="137-137", cluster="HangFire.Client.CreateContext.CreateJob()", file="JobHelper.cs"];
m3_22 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="JobHelper.cs"];
m3_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobHelper.cs"];
m3_49 [label="HangFire.Client.CreateContext", span="", file="JobHelper.cs"];
m4_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="JobStorage.cs"];
m4_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobStorage.cs"];
m4_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="JobStorage.cs"];
m4_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobStorage.cs"];
m4_17 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobStorage.cs"];
m4_327 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobStorage.cs"];
m4_25 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobStorage.cs"];
m4_185 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_191 [label="var process = CreateProcess()", span="192-192", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_192 [label="process.Run(_context.Object)", span="195-195", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_194 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobStorage.cs"];
m4_13 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="JobStorage.cs"];
m4_164 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_168 [label="var process = CreateProcess()", span="169-169", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_169 [label="process.Run(_context.Object)", span="172-172", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_172 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobStorage.cs"];
m4_298 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_305 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_308 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobStorage.cs"];
m4_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobStorage.cs"];
m4_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="JobStorage.cs"];
m4_97 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_102 [label="var process = CreateProcess()", span="111-111", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_104 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobStorage.cs"];
m4_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobStorage.cs"];
m4_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobStorage.cs"];
m4_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="JobStorage.cs"];
m4_23 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobStorage.cs"];
m4_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobStorage.cs"];
m4_329 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobStorage.cs"];
m4_140 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_149 [label="var process = CreateProcess()", span="151-151", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_150 [label="process.Run(_context.Object)", span="154-154", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_151 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobStorage.cs"];
m4_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="JobStorage.cs"];
m4_274 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_280 [label="var process = CreateProcess()", span="278-278", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_282 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobStorage.cs"];
m4_53 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_57 [label="var process = CreateProcess()", span="67-67", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_60 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobStorage.cs"];
m4_228 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", color=red, community=0, file="JobStorage.cs"];
m4_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_233 [label="var process = CreateProcess()", span="232-232", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_236 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobStorage.cs"];
m4_251 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs", color=green, community=0];
m4_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_258 [label="var process = CreateProcess()", span="256-256", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_261 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobStorage.cs"];
m4_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobStorage.cs"];
m4_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobStorage.cs"];
m4_0 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs"];
m4_1 [label="var connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", color=green, community=0];
m4_2 [label="var job = Job.FromExpression(() => TestMethod())", span="20-20", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", color=green, community=0];
m4_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs"];
m4_3 [label="var state = new Mock<IState>()", span="21-21", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", color=green, community=0];
m4_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs", color=green, community=0];
m4_5 [label="_filters = new List<object>()", span="24-24", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs"];
m4_7 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobStorage.cs"];
m4_207 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_211 [label="var process = CreateProcess()", span="211-211", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_215 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobStorage.cs"];
m4_29 [label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="45-45", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobStorage.cs"];
m4_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobStorage.cs"];
m4_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobStorage.cs"];
m4_73 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_81 [label="var process = CreateProcess()", span="91-91", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_83 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobStorage.cs"];
m4_330 [label="Entry Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobStorage.cs"];
m4_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobStorage.cs"];
m4_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="JobStorage.cs"];
m4_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="JobStorage.cs", color=green, community=0];
m4_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="JobStorage.cs"];
m4_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", file="JobStorage.cs"];
m4_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="JobStorage.cs"];
m4_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="JobStorage.cs"];
m4_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JobStorage.cs"];
m4_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="JobStorage.cs"];
m4_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JobStorage.cs"];
m4_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="JobStorage.cs"];
m4_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", file="JobStorage.cs"];
m4_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="JobStorage.cs"];
m4_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="JobStorage.cs"];
m4_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="JobStorage.cs"];
m4_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="JobStorage.cs"];
m4_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobStorage.cs"];
m4_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="JobStorage.cs"];
m4_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="JobStorage.cs"];
m4_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="JobStorage.cs"];
m4_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="JobStorage.cs"];
m4_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobStorage.cs"];
m4_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="JobStorage.cs"];
m4_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="JobStorage.cs"];
m4_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="JobStorage.cs"];
m4_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="JobStorage.cs"];
m4_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobStorage.cs"];
m4_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobStorage.cs"];
m4_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="JobStorage.cs"];
m4_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="JobStorage.cs"];
m4_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="JobStorage.cs"];
m4_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="JobStorage.cs"];
m4_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="JobStorage.cs"];
m4_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobStorage.cs"];
m4_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="JobStorage.cs"];
m4_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobStorage.cs"];
m4_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="JobStorage.cs"];
m4_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JobStorage.cs"];
m4_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="JobStorage.cs"];
m4_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="JobStorage.cs"];
m4_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="JobStorage.cs"];
m4_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="JobStorage.cs"];
m4_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="JobStorage.cs"];
m4_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JobStorage.cs"];
m4_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="JobStorage.cs"];
m4_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="JobStorage.cs"];
m4_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="JobStorage.cs"];
m4_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="JobStorage.cs"];
m4_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="JobStorage.cs"];
m4_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="JobStorage.cs"];
m4_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="JobStorage.cs"];
m4_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="JobStorage.cs"];
m4_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="JobStorage.cs"];
m4_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="JobStorage.cs"];
m4_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", color=red, community=0, file="JobStorage.cs"];
m4_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="JobStorage.cs"];
m4_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="JobStorage.cs"];
m4_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="JobStorage.cs"];
m4_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobStorage.cs"];
m4_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JobStorage.cs"];
m4_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="JobStorage.cs"];
m4_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="JobStorage.cs"];
m4_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="JobStorage.cs"];
m4_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobStorage.cs"];
m4_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="JobStorage.cs"];
m4_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="JobStorage.cs"];
m4_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="JobStorage.cs"];
m4_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="JobStorage.cs"];
m4_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="JobStorage.cs"];
m4_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="JobStorage.cs"];
m4_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobStorage.cs"];
m4_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="JobStorage.cs"];
m4_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="JobStorage.cs"];
m4_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="JobStorage.cs"];
m4_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="JobStorage.cs"];
m4_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobStorage.cs"];
m4_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="JobStorage.cs"];
m4_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="JobStorage.cs"];
m4_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="JobStorage.cs"];
m4_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="JobStorage.cs"];
m4_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="JobStorage.cs"];
m4_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="JobStorage.cs"];
m4_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="JobStorage.cs"];
m4_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="JobStorage.cs"];
m4_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobStorage.cs"];
m4_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="JobStorage.cs"];
m4_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="JobStorage.cs"];
m4_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="JobStorage.cs"];
m4_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="JobStorage.cs"];
m4_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="JobStorage.cs"];
m4_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobStorage.cs"];
m4_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobStorage.cs"];
m4_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="JobStorage.cs"];
m4_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobStorage.cs"];
m4_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="JobStorage.cs"];
m4_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="JobStorage.cs"];
m4_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="JobStorage.cs"];
m4_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="JobStorage.cs"];
m4_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="JobStorage.cs"];
m4_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="JobStorage.cs"];
m4_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="JobStorage.cs"];
m4_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="JobStorage.cs"];
m4_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="JobStorage.cs"];
m4_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="JobStorage.cs"];
m4_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="JobStorage.cs"];
m4_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="JobStorage.cs"];
m4_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", color=red, community=0, file="JobStorage.cs"];
m4_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", color=red, community=0, file="JobStorage.cs"];
m4_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="JobStorage.cs"];
m4_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="JobStorage.cs"];
m4_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JobStorage.cs"];
m4_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="JobStorage.cs"];
m4_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="JobStorage.cs"];
m4_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="JobStorage.cs"];
m4_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JobStorage.cs"];
m4_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="JobStorage.cs"];
m4_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="JobStorage.cs"];
m4_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="JobStorage.cs"];
m4_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="JobStorage.cs"];
m4_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="JobStorage.cs"];
m4_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="JobStorage.cs"];
m4_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="JobStorage.cs"];
m4_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobStorage.cs"];
m4_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobStorage.cs"];
m4_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="JobStorage.cs"];
m4_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="JobStorage.cs"];
m4_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobStorage.cs"];
m4_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobStorage.cs"];
m4_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobStorage.cs"];
m4_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobStorage.cs"];
m4_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="JobStorage.cs"];
m4_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="JobStorage.cs"];
m4_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JobStorage.cs"];
m4_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobStorage.cs"];
m4_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JobStorage.cs"];
m4_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="JobStorage.cs"];
m4_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="JobStorage.cs"];
m4_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="JobStorage.cs"];
m4_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JobStorage.cs"];
m4_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobStorage.cs"];
m4_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobStorage.cs"];
m4_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobStorage.cs"];
m4_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="JobStorage.cs"];
m4_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JobStorage.cs"];
m4_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="JobStorage.cs"];
m4_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="JobStorage.cs"];
m4_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobStorage.cs"];
m4_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="JobStorage.cs"];
m4_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="JobStorage.cs"];
m4_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="JobStorage.cs"];
m4_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobStorage.cs"];
m4_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="JobStorage.cs"];
m4_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="JobStorage.cs"];
m4_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="JobStorage.cs"];
m4_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobStorage.cs"];
m4_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="JobStorage.cs"];
m4_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="JobStorage.cs"];
m4_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="JobStorage.cs"];
m4_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="JobStorage.cs"];
m4_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobStorage.cs"];
m4_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="JobStorage.cs"];
m4_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobStorage.cs"];
m4_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobStorage.cs"];
m4_30 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs"];
m4_31 [label="var process = CreateProcess()", span="43-43", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs"];
m4_32 [label="process.Run(_context.Object)", span="45-45", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs"];
m4_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs"];
m4_34 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobStorage.cs"];
m4_41 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs"];
m4_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs"];
m4_43 [label="var process = CreateProcess()", span="54-54", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs"];
m4_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs"];
m4_45 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobStorage.cs"];
m4_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobStorage.cs"];
m4_18 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs"];
m4_19 [label="var process = CreateProcess()", span="32-32", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs"];
m4_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs"];
m4_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs"];
m4_22 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobStorage.cs"];
m4_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobStorage.cs"];
m4_119 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", color=red, community=0, file="JobStorage.cs"];
m4_125 [label="var process = CreateProcess()", span="128-128", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_126 [label="process.Run(_context.Object)", span="131-131", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_127 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobStorage.cs"];
m4_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobStorage.cs"];
m4_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobStorage.cs"];
m4_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobStorage.cs"];
m4_9 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobStorage.cs"];
m4_331 [label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobStorage.cs"];
m4_332 [label=process, span="", file="JobStorage.cs"];
m4_333 [label=process, span="", file="JobStorage.cs"];
m4_334 [label=process, span="", file="JobStorage.cs"];
m4_335 [label=process, span="", file="JobStorage.cs"];
m4_336 [label=process, span="", file="JobStorage.cs"];
m4_337 [label=process, span="", file="JobStorage.cs"];
m4_338 [label=process, span="", file="JobStorage.cs"];
m4_339 [label=exception, span="", file="JobStorage.cs"];
m4_340 [label=process, span="", file="JobStorage.cs"];
m4_341 [label=exception, span="", file="JobStorage.cs"];
m4_342 [label=exception, span="", file="JobStorage.cs"];
m4_343 [label=process, span="", file="JobStorage.cs"];
m4_344 [label=process, span="", file="JobStorage.cs"];
m5_11 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="TestFilter.cs"];
m5_0 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_1 [label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="34-34", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_2 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="35-35", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_3 [label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", span="36-36", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_4 [label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", span="37-37", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_5 [label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", span="38-38", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_6 [label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="39-39", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_7 [label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", span="40-40", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_8 [label="FilterProvider = null", span="42-42", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_9 [label="Activator = null", span="43-43", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_10 [label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="TestFilter.cs"];
m5_12 [label="Hangfire.BackgroundJobServerOptions", span="", file="TestFilter.cs"];
n3 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
d69 -> d70  [key=0, style=solid, color=green];
d69 -> d47  [key=2, style=dotted, color=green];
d22 -> d69  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d81  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d92  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d104  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d115  [key=3, color=green, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d23  [key=0, style=solid];
d22 -> d35  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d54  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d126  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d142  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d156  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d174  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d185  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d22 -> d200  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
d68 -> d69  [key=0, style=solid, color=green];
d70 -> d71  [key=0, style=solid, color=green];
d70 -> d22  [key=2, style=dotted, color=green];
d216 -> d70  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d71  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d78  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d82  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d83  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d89  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d93  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d94  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d101  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d105  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d106  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d112  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d116  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d117  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d123  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d201  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d216 -> d214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientFiltersFeature"];
d71 -> d72  [key=0, style=solid, color=green];
d71 -> d30  [key=2, style=dotted, color=green];
d72 -> d73  [key=0, style=solid, color=green];
d72 -> d49  [key=2, style=dotted, color=green];
d72 -> d74  [key=1, style=dashed, color=green, label=table3];
d72 -> d75  [key=1, style=dashed, color=green, label=table3];
d30 -> d31  [key=0, style=solid];
d73 -> d74  [key=0, style=solid, color=green];
d73 -> d50  [key=2, style=dotted, color=green];
d74 -> d75  [key=0, style=solid, color=green];
d74 -> d50  [key=2, style=dotted, color=green];
d75 -> d76  [key=0, style=solid, color=green];
d75 -> d33  [key=2, style=dotted, color=green];
d76 -> d77  [key=0, style=solid, color=green];
d76 -> d48  [key=2, style=dotted, color=green];
d77 -> d78  [key=0, style=solid, color=green];
d77 -> d51  [key=2, style=dotted, color=green];
d78 -> d79  [key=0, style=solid, color=green];
d78 -> d26  [key=2, style=dotted, color=green];
d79 -> d68  [key=0, style=bold, color=blue];
d26 -> d27  [key=0, style=solid];
d81 -> d82  [key=0, style=solid, color=green];
d81 -> d47  [key=2, style=dotted, color=green];
d80 -> d81  [key=0, style=solid, color=green];
d82 -> d83  [key=0, style=solid, color=green];
d82 -> d22  [key=2, style=dotted, color=green];
d83 -> d84  [key=0, style=solid, color=green];
d83 -> d30  [key=2, style=dotted, color=green];
d84 -> d85  [key=0, style=solid, color=green];
d84 -> d49  [key=2, style=dotted, color=green];
d84 -> d86  [key=1, style=dashed, color=green, label=table4];
d85 -> d86  [key=0, style=solid, color=green];
d85 -> d50  [key=2, style=dotted, color=green];
d86 -> d87  [key=0, style=solid, color=green];
d86 -> d33  [key=2, style=dotted, color=green];
d87 -> d88  [key=0, style=solid, color=green];
d87 -> d48  [key=2, style=dotted, color=green];
d88 -> d89  [key=0, style=solid, color=green];
d88 -> d51  [key=2, style=dotted, color=green];
d89 -> d90  [key=0, style=solid, color=green];
d89 -> d26  [key=2, style=dotted, color=green];
d90 -> d80  [key=0, style=bold, color=blue];
d92 -> d93  [key=0, style=solid, color=green];
d92 -> d47  [key=2, style=dotted, color=green];
d91 -> d92  [key=0, style=solid, color=green];
d93 -> d94  [key=0, style=solid, color=green];
d93 -> d22  [key=2, style=dotted, color=green];
d94 -> d95  [key=0, style=solid, color=green];
d94 -> d30  [key=2, style=dotted, color=green];
d95 -> d96  [key=0, style=solid, color=green];
d95 -> d49  [key=2, style=dotted, color=green];
d95 -> d97  [key=1, style=dashed, color=green, label=table5];
d96 -> d97  [key=0, style=solid, color=green];
d96 -> d50  [key=2, style=dotted, color=green];
d97 -> d98  [key=0, style=solid, color=green];
d97 -> d33  [key=2, style=dotted, color=green];
d98 -> d99  [key=0, style=solid, color=green];
d98 -> d52  [key=2, style=dotted, color=green];
d99 -> d100  [key=0, style=solid, color=green];
d99 -> d48  [key=2, style=dotted, color=green];
d100 -> d101  [key=0, style=solid, color=green];
d100 -> d51  [key=2, style=dotted, color=green];
d101 -> d102  [key=0, style=solid, color=green];
d101 -> d26  [key=2, style=dotted, color=green];
d102 -> d91  [key=0, style=bold, color=blue];
d104 -> d105  [key=0, style=solid, color=green];
d104 -> d47  [key=2, style=dotted, color=green];
d103 -> d104  [key=0, style=solid, color=green];
d105 -> d106  [key=0, style=solid, color=green];
d105 -> d22  [key=2, style=dotted, color=green];
d106 -> d107  [key=0, style=solid, color=green];
d106 -> d30  [key=2, style=dotted, color=green];
d107 -> d108  [key=0, style=solid, color=green];
d107 -> d49  [key=2, style=dotted, color=green];
d107 -> d109  [key=1, style=dashed, color=green, label=table6];
d108 -> d109  [key=0, style=solid, color=green];
d108 -> d50  [key=2, style=dotted, color=green];
d109 -> d110  [key=0, style=solid, color=green];
d109 -> d33  [key=2, style=dotted, color=green];
d110 -> d111  [key=0, style=solid, color=green];
d110 -> d48  [key=2, style=dotted, color=green];
d111 -> d112  [key=0, style=solid, color=green];
d111 -> d51  [key=2, style=dotted, color=green];
d112 -> d113  [key=0, style=solid, color=green];
d112 -> d26  [key=2, style=dotted, color=green];
d113 -> d103  [key=0, style=bold, color=blue];
d115 -> d116  [key=0, style=solid, color=green];
d115 -> d47  [key=2, style=dotted, color=green];
d114 -> d115  [key=0, style=solid, color=green];
d116 -> d117  [key=0, style=solid, color=green];
d116 -> d22  [key=2, style=dotted, color=green];
d117 -> d118  [key=0, style=solid, color=green];
d117 -> d30  [key=2, style=dotted, color=green];
d118 -> d119  [key=0, style=solid, color=green];
d118 -> d49  [key=2, style=dotted, color=green];
d118 -> d120  [key=1, style=dashed, color=green, label=table7];
d119 -> d120  [key=0, style=solid, color=green];
d119 -> d50  [key=2, style=dotted, color=green];
d120 -> d121  [key=0, style=solid, color=green];
d120 -> d33  [key=2, style=dotted, color=green];
d121 -> d122  [key=0, style=solid, color=green];
d121 -> d48  [key=2, style=dotted, color=green];
d122 -> d123  [key=0, style=solid, color=green];
d122 -> d51  [key=2, style=dotted, color=green];
d123 -> d124  [key=0, style=solid, color=green];
d123 -> d26  [key=2, style=dotted, color=green];
d124 -> d114  [key=0, style=bold, color=blue];
d134 -> d135  [key=0, style=solid, color=green];
d134 -> d49  [key=2, style=dotted, color=green];
d134 -> d136  [key=1, style=dashed, color=green, label=table8];
d134 -> d137  [key=1, style=dashed, color=green, label=table8];
d134 -> d138  [key=1, style=dashed, color=green, label=table8];
d133 -> d134  [key=0, style=solid, color=green];
d133 -> d51  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid, color=green];
d135 -> d50  [key=2, style=dotted, color=green];
d136 -> d137  [key=0, style=solid, color=green];
d136 -> d50  [key=2, style=dotted, color=green];
d137 -> d138  [key=0, style=solid, color=green];
d137 -> d50  [key=2, style=dotted, color=green];
d138 -> d139  [key=0, style=solid, color=green];
d138 -> d52  [key=2, style=dotted, color=green];
d139 -> d26  [key=2, style=dotted];
d139 -> d140  [key=0, style=solid];
d148 -> d149  [key=0, style=solid, color=green];
d148 -> d49  [key=2, style=dotted, color=green];
d148 -> d150  [key=1, style=dashed, color=green, label=table9];
d148 -> d151  [key=1, style=dashed, color=green, label=table9];
d148 -> d152  [key=1, style=dashed, color=green, label=table9];
d147 -> d148  [key=0, style=solid, color=green];
d147 -> d48  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid, color=green];
d149 -> d50  [key=2, style=dotted, color=green];
d150 -> d151  [key=0, style=solid, color=green];
d150 -> d50  [key=2, style=dotted, color=green];
d151 -> d152  [key=0, style=solid, color=green];
d151 -> d50  [key=2, style=dotted, color=green];
d152 -> d153  [key=0, style=solid, color=green];
d152 -> d51  [key=2, style=dotted, color=green];
d153 -> d26  [key=2, style=dotted];
d153 -> d154  [key=0, style=solid];
d163 -> d164  [key=0, style=solid, color=green];
d163 -> d49  [key=2, style=dotted, color=green];
d163 -> d165  [key=1, style=dashed, color=green, label=table10];
d163 -> d166  [key=1, style=dashed, color=green, label=table10];
d163 -> d167  [key=1, style=dashed, color=green, label=table10];
d163 -> d168  [key=1, style=dashed, color=green, label=table10];
d163 -> d169  [key=1, style=dashed, color=green, label=table10];
d162 -> d163  [key=0, style=solid, color=green];
d162 -> d48  [key=2, style=dotted];
d164 -> d165  [key=0, style=solid, color=green];
d164 -> d50  [key=2, style=dotted, color=green];
d165 -> d166  [key=0, style=solid, color=green];
d165 -> d50  [key=2, style=dotted, color=green];
d166 -> d167  [key=0, style=solid, color=green];
d166 -> d50  [key=2, style=dotted, color=green];
d167 -> d168  [key=0, style=solid, color=green];
d167 -> d50  [key=2, style=dotted, color=green];
d168 -> d169  [key=0, style=solid, color=green];
d168 -> d50  [key=2, style=dotted, color=green];
d169 -> d170  [key=0, style=solid, color=green];
d169 -> d51  [key=2, style=dotted, color=green];
d170 -> d52  [key=2, style=dotted];
d170 -> d171  [key=0, style=solid];
d192 -> d193  [key=0, style=solid, color=green];
d192 -> d49  [key=2, style=dotted, color=green];
d192 -> d194  [key=1, style=dashed, color=green, label=table11];
d192 -> d195  [key=1, style=dashed, color=green, label=table11];
d191 -> d192  [key=0, style=solid, color=green];
d191 -> d52  [key=2, style=dotted];
d193 -> d194  [key=0, style=solid, color=green];
d193 -> d50  [key=2, style=dotted, color=green];
d194 -> d195  [key=0, style=solid, color=green];
d194 -> d50  [key=2, style=dotted, color=green];
d195 -> d196  [key=0, style=solid, color=green];
d195 -> d51  [key=2, style=dotted, color=green];
d196 -> d52  [key=2, style=dotted];
d196 -> d197  [key=0, style=solid];
d208 -> d209  [key=0, style=solid, color=green];
d208 -> d49  [key=2, style=dotted, color=green];
d208 -> d210  [key=1, style=dashed, color=green, label=table12];
d208 -> d211  [key=1, style=dashed, color=green, label=table12];
d208 -> d212  [key=1, style=dashed, color=green, label=table12];
d207 -> d208  [key=0, style=solid, color=green];
d207 -> d52  [key=2, style=dotted];
d209 -> d210  [key=0, style=solid, color=green];
d209 -> d50  [key=2, style=dotted, color=green];
d210 -> d211  [key=0, style=solid, color=green];
d210 -> d50  [key=2, style=dotted, color=green];
d211 -> d212  [key=0, style=solid, color=green];
d211 -> d50  [key=2, style=dotted, color=green];
d212 -> d213  [key=0, style=solid, color=green];
d212 -> d51  [key=2, style=dotted, color=green];
d213 -> d52  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d24 -> d22  [key=0, style=bold, color=blue];
d36 -> d22  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d55 -> d22  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d127 -> d22  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d143 -> d22  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d157 -> d22  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d175 -> d22  [key=2, style=dotted];
d175 -> d176  [key=0, style=solid];
d186 -> d22  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d201 -> d22  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=2, style=dotted];
d35 -> d47  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d54 -> d47  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid];
d126 -> d47  [key=2, style=dotted];
d126 -> d127  [key=0, style=solid];
d142 -> d47  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d156 -> d47  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d174 -> d47  [key=2, style=dotted];
d174 -> d175  [key=0, style=solid];
d185 -> d47  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d200 -> d47  [key=2, style=dotted];
d200 -> d201  [key=0, style=solid];
d37 -> d30  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d45 -> d26  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d56 -> d30  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d66 -> d26  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d128 -> d30  [key=2, style=dotted];
d128 -> d129  [key=0, style=solid];
d144 -> d30  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d158 -> d30  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d171 -> d26  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d176 -> d30  [key=2, style=dotted];
d176 -> d177  [key=0, style=solid];
d182 -> d26  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d187 -> d30  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d197 -> d26  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d202 -> d30  [key=2, style=dotted];
d202 -> d203  [key=0, style=solid];
d214 -> d26  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d32 -> d30  [key=0, style=bold, color=blue];
d31 -> d33  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d40 -> d49  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [key=1, style=dashed, color=darkseagreen4, label=table1];
d40 -> d43  [key=1, style=dashed, color=darkseagreen4, label=table1];
d60 -> d49  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d60 -> d62  [key=1, style=dashed, color=darkseagreen4, label=table2];
d60 -> d63  [key=1, style=dashed, color=darkseagreen4, label=table2];
d60 -> d64  [key=1, style=dashed, color=darkseagreen4, label=table2];
d60 -> d65  [key=1, style=dashed, color=darkseagreen4, label=table2];
d41 -> d50  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d42 -> d50  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d61 -> d50  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d62 -> d50  [key=2, style=dotted];
d62 -> d63  [key=0, style=solid];
d63 -> d50  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d64 -> d50  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d38 -> d33  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d57 -> d33  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d129 -> d33  [key=2, style=dotted];
d129 -> d130  [key=0, style=solid];
d145 -> d33  [key=2, style=dotted];
d145 -> d146  [key=0, style=solid];
d159 -> d33  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d177 -> d33  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d188 -> d33  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d203 -> d33  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d39 -> d48  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d59 -> d48  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d132 -> d48  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d178 -> d48  [key=2, style=dotted];
d178 -> d179  [key=0, style=solid];
d190 -> d48  [key=2, style=dotted];
d190 -> d191  [key=0, style=solid];
d206 -> d48  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d43 -> d51  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d65 -> d51  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d180 -> d51  [key=2, style=dotted];
d180 -> d181  [key=0, style=solid];
d28 -> d26  [key=0, style=bold, color=blue];
d27 -> d28  [key=0, style=solid];
d27 -> d29  [key=2, style=dotted];
d44 -> d52  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d58 -> d52  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d130 -> d52  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d131 -> d52  [key=2, style=dotted];
d131 -> d132  [key=0, style=solid];
d146 -> d52  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d160 -> d52  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d161 -> d52  [key=2, style=dotted];
d161 -> d162  [key=0, style=solid];
d179 -> d52  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d181 -> d52  [key=2, style=dotted];
d181 -> d182  [key=0, style=solid];
d189 -> d52  [key=2, style=dotted];
d189 -> d190  [key=0, style=solid];
d204 -> d52  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d205 -> d52  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d140 -> d125  [key=0, style=bold, color=blue];
d154 -> d141  [key=0, style=bold, color=blue];
d34 -> d35  [key=0, style=solid];
d53 -> d54  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d141 -> d142  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d173 -> d174  [key=0, style=solid];
d184 -> d185  [key=0, style=solid];
d199 -> d200  [key=0, style=solid];
d46 -> d34  [key=0, style=bold, color=blue];
d67 -> d53  [key=0, style=bold, color=blue];
d172 -> d155  [key=0, style=bold, color=blue];
d183 -> d173  [key=0, style=bold, color=blue];
d198 -> d184  [key=0, style=bold, color=blue];
d215 -> d199  [key=0, style=bold, color=blue];
m0_30 -> m0_28  [key=0, style=solid];
m0_30 -> m0_29  [key=2, style=dotted];
m0_30 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid, color=red];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_24 -> m0_28  [key=0, style=solid, color=green];
m0_24 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_25 -> m0_26  [key=0, style=solid, color=red];
m0_25 -> m0_27  [key=0, style=solid, color=red];
m0_25 -> m0_21  [key=2, style=dotted, color=red];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_27 -> m0_30  [key=2, style=dotted];
m0_27 -> m0_27  [key=3, color=darkorchid, style=bold, label="Property variable bool IsFinal"];
m0_26 -> m0_28  [key=0, style=solid, color=red];
m0_26 -> m0_22  [key=2, style=dotted, color=red];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_30  [key=0, style=solid, color=green];
m0_28 -> m0_23  [key=2, style=dotted, color=green];
m0_28 -> m0_24  [key=0, style=bold, color=blue];
m0_29 -> m0_28  [key=0, style=solid, color=green];
m0_29 -> m0_22  [key=2, style=dotted, color=green];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m0_0 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_13  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_14  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_0  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_19  [key=0, style=solid, color=green];
m0_17 -> m0_21  [key=2, style=dotted, color=red];
m0_17 -> m0_23  [key=2, style=dotted, color=green];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_15  [key=2, style=dotted];
m0_19 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_20  [key=0, style=solid, color=green];
m0_18 -> m0_22  [key=2, style=dotted, color=green];
m0_20 -> m0_20  [key=0, style=solid, color=green];
m0_20 -> m0_25  [key=2, style=dotted, color=green];
m0_20 -> m0_16  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_19  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_35  [key=1, style=dashed, color=green, label="HangFire.Client.ClientJobDescriptor"];
m0_35 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m0_36 -> m0_33  [key=0, style=solid];
m0_36 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=bold, color=blue];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_42  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_22  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_30  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_43  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_44  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_26  [key=2, style=dotted];
m1_93 -> m1_86  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_32 -> m1_30  [key=0, style=bold, color=blue];
m1_94 -> m1_95  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_42  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_22  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_30  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_43  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_44  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_26  [key=2, style=dotted];
m1_101 -> m1_94  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_22  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_30  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_43  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_44  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_26  [key=2, style=dotted];
m1_41 -> m1_34  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_42  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_22  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_30  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_43  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_56  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_44  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_26  [key=2, style=dotted];
m1_54 -> m1_45  [key=0, style=bold, color=blue];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_42  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_22  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_30  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_43  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_44  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_26  [key=2, style=dotted];
m1_85 -> m1_78  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_9  [key=0, style=bold, color=blue];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_42  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_22  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_30  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_43  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_55  [key=2, style=dotted];
m1_62 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label=table2];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_56  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_44  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_26  [key=2, style=dotted];
m1_66 -> m1_57  [key=0, style=bold, color=blue];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_42  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_22  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_30  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_55  [key=2, style=dotted];
m1_71 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=table3];
m1_71 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=table3];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_56  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_56  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_43  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_44  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_26  [key=2, style=dotted];
m1_77 -> m1_67  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_0  [key=2, style=dotted];
m1_17 -> m1_14  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_35  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_46  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_58  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_68  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_79  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_87  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_95  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_103  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_22 -> m1_111  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> d25  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_42  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_22  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_30  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_43  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_44  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_26  [key=2, style=dotted];
m1_109 -> m1_102  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_42  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_22  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_30  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_43  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_44  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_26  [key=2, style=dotted];
m1_117 -> m1_110  [key=0, style=bold, color=blue];
m1_118 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m1_118 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientFeature"];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_34  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_35  [key=2, style=dotted];
m2_28 -> m2_36  [key=2, style=dotted];
m2_28 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_29 -> m2_37  [key=2, style=dotted];
m2_29 -> m2_36  [key=2, style=dotted];
m2_29 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_38  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_26  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_9  [key=2, style=dotted];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid, color=red];
m2_67 -> m2_68  [key=0, style=solid, color=red];
m2_67 -> m2_70  [key=0, style=solid, color=red];
m2_67 -> m2_34  [key=2, style=dotted, color=red];
m2_67 -> m2_38  [key=2, style=dotted, color=red];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_66  [key=0, style=bold, color=blue];
m2_136 -> m2_137  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=2, style=dotted];
m2_138 -> m2_136  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_128 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_107  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_135  [key=0, style=solid];
m2_131 -> m2_131  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_132 -> m2_133  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_130 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_130 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_107  [key=2, style=dotted];
m2_134 -> m2_131  [key=0, style=solid];
m2_134 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_135 -> m2_128  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_8  [key=2, style=dotted];
m2_14 -> m2_9  [key=2, style=dotted];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=2, style=dotted];
m2_47 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_47 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> d48  [key=2, style=dotted];
m2_49 -> m2_46  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_8  [key=2, style=dotted];
m2_11 -> m2_9  [key=2, style=dotted];
m2_12 -> m2_10  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_9  [key=2, style=dotted];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m2_58 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_8  [key=2, style=dotted];
m2_59 -> m2_9  [key=2, style=dotted];
m2_60 -> m2_58  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid, color=red];
m2_72 -> m2_73  [key=0, style=solid, color=red];
m2_72 -> m2_75  [key=0, style=solid, color=red];
m2_72 -> m2_76  [key=2, style=dotted, color=red];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_71  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_96  [key=2, style=dotted];
m2_94 -> m2_91  [key=0, style=bold, color=blue];
m2_77 -> m2_78  [key=0, style=solid, color=red];
m2_78 -> m2_79  [key=0, style=solid, color=red];
m2_78 -> m2_81  [key=0, style=solid, color=red];
m2_78 -> m2_76  [key=2, style=dotted, color=red];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_77  [key=0, style=bold, color=blue];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=2, style=dotted];
m2_110 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_111 -> m2_109  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_105  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_106  [key=2, style=dotted];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=args];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_107  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_108  [key=2, style=dotted];
m2_102 -> m2_86  [key=2, style=dotted];
m2_102 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=0, style=solid];
m2_103 -> m2_101  [key=0, style=solid];
m2_103 -> m2_107  [key=2, style=dotted];
m2_103 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_104 -> m2_97  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_8  [key=2, style=dotted];
m2_17 -> m2_9  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_121  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_123  [key=2, style=dotted];
m2_127 -> m2_124  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_85  [key=2, style=dotted];
m2_88 -> m2_90  [key=2, style=dotted];
m2_89 -> m2_87  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_22  [key=2, style=dotted];
m2_24 -> m2_9  [key=2, style=dotted];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_85  [key=2, style=dotted];
m2_83 -> m2_86  [key=2, style=dotted];
m2_84 -> m2_82  [key=0, style=bold, color=blue];
m2_113 -> m2_114  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_52  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_55  [key=0, style=bold, color=blue];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_106  [key=2, style=dotted];
m2_114 -> m2_116  [key=2, style=dotted];
m2_115 -> m2_113  [key=0, style=bold, color=blue];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_121  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_122  [key=2, style=dotted];
m2_119 -> m2_123  [key=2, style=dotted];
m2_120 -> m2_117  [key=0, style=bold, color=blue];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_140 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=Table];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_107  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_147  [key=0, style=solid];
m2_143 -> m2_131  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_144 -> m2_145  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_142 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_142 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_107  [key=2, style=dotted];
m2_146 -> m2_143  [key=0, style=solid];
m2_146 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_147 -> m2_140  [key=0, style=bold, color=blue];
m2_148 -> m2_149  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [key=2, style=dotted];
m2_150 -> m2_148  [key=0, style=bold, color=blue];
m2_61 -> m2_62  [key=0, style=solid, color=red];
m2_62 -> m2_63  [key=0, style=solid, color=red];
m2_62 -> m2_65  [key=0, style=solid, color=red];
m2_62 -> m2_34  [key=2, style=dotted, color=red];
m2_62 -> m2_38  [key=2, style=dotted, color=red];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_61  [key=0, style=bold, color=blue];
m2_152 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_62  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_67  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_72  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_78  [key=1, style=dashed, color=red, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m2_152 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobClientSteps"];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_23 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_24 -> m3_33  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_35  [key=2, style=dotted];
m3_28 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m3_28 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_36  [key=2, style=dotted];
m3_30 -> m3_32  [key=0, style=solid];
m3_30 -> m3_37  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_25 -> m3_32  [key=0, style=solid];
m3_25 -> m3_20  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_27 -> m3_32  [key=0, style=solid];
m3_27 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_23  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=0, style=solid];
m3_39 -> m3_33  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_43  [key=2, style=dotted];
m3_40 -> m3_42  [key=0, style=solid];
m3_40 -> m3_20  [key=2, style=dotted];
m3_42 -> m3_38  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m3_4 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m3_4 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m3_4 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m3_4 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m3_4 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m3_4 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m3_4 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_22  [key=2, style=dotted];
m3_6 -> m3_19  [key=0, style=solid];
m3_6 -> m3_20  [key=2, style=dotted];
m3_8 -> m3_19  [key=0, style=solid];
m3_8 -> m3_20  [key=2, style=dotted];
m3_10 -> m3_19  [key=0, style=solid];
m3_10 -> m3_20  [key=2, style=dotted];
m3_12 -> m3_19  [key=0, style=solid];
m3_12 -> m3_20  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_21  [key=2, style=dotted];
m3_19 -> m3_4  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_48  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_44  [key=0, style=bold, color=blue];
m3_49 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_49 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m4_17 -> m4_327  [key=0, style=solid];
m4_327 -> m4_17  [key=0, style=bold, color=blue];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_128  [key=2, style=dotted];
m4_186 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_186 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_128  [key=2, style=dotted];
m4_187 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_187 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_62  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_36  [key=2, style=dotted];
m4_193 -> m4_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_62  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_46  [key=2, style=dotted];
m4_190 -> m4_105  [key=2, style=dotted];
m4_190 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_190 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_23  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_35  [key=2, style=dotted];
m4_194 -> m4_185  [key=0, style=bold, color=blue];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_128  [key=2, style=dotted];
m4_165 -> m4_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_165 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_62  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_46  [key=2, style=dotted];
m4_167 -> m4_105  [key=2, style=dotted];
m4_167 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_167 -> m4_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_36  [key=2, style=dotted];
m4_171 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_23  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_35  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_36  [key=2, style=dotted];
m4_170 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_172 -> m4_164  [key=0, style=bold, color=blue];
m4_298 -> m4_299  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_128  [key=2, style=dotted];
m4_299 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_299 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_128  [key=2, style=dotted];
m4_300 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_300 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_62  [key=2, style=dotted];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_36  [key=2, style=dotted];
m4_307 -> m4_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_62  [key=2, style=dotted];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_46  [key=2, style=dotted];
m4_304 -> m4_105  [key=2, style=dotted];
m4_304 -> m4_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_304 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_46  [key=2, style=dotted];
m4_303 -> m4_24  [key=2, style=dotted];
m4_303 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_23  [key=2, style=dotted];
m4_305 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_106  [key=2, style=dotted];
m4_306 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_308 -> m4_298  [key=0, style=bold, color=blue];
m4_97 -> m4_98  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_46  [key=2, style=dotted];
m4_98 -> m4_24  [key=2, style=dotted];
m4_98 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_61  [key=2, style=dotted];
m4_99 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_46  [key=2, style=dotted];
m4_100 -> m4_105  [key=2, style=dotted];
m4_100 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_100 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_62  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_23  [key=2, style=dotted];
m4_102 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_106  [key=2, style=dotted];
m4_103 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_104 -> m4_97  [key=0, style=bold, color=blue];
m4_23 -> m4_328  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_330  [key=2, style=dotted];
m4_329 -> m4_23  [key=0, style=bold, color=blue];
m4_140 -> m4_141  [key=0, style=solid];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_128  [key=2, style=dotted];
m4_141 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_141 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_141 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_128  [key=2, style=dotted];
m4_142 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_142 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_142 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_62  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_46  [key=2, style=dotted];
m4_145 -> m4_84  [key=2, style=dotted];
m4_145 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_46  [key=2, style=dotted];
m4_148 -> m4_84  [key=2, style=dotted];
m4_148 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_62  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_46  [key=2, style=dotted];
m4_146 -> m4_84  [key=2, style=dotted];
m4_146 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_46  [key=2, style=dotted];
m4_147 -> m4_84  [key=2, style=dotted];
m4_147 -> m4_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_23  [key=2, style=dotted];
m4_149 -> m4_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_35  [key=2, style=dotted];
m4_151 -> m4_140  [key=0, style=bold, color=blue];
m4_274 -> m4_275  [key=0, style=solid];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_128  [key=2, style=dotted];
m4_275 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_62  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_46  [key=2, style=dotted];
m4_279 -> m4_105  [key=2, style=dotted];
m4_279 -> m4_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_279 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_237  [key=2, style=dotted];
m4_277 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_277 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_277 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_46  [key=2, style=dotted];
m4_278 -> m4_238  [key=2, style=dotted];
m4_278 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_23  [key=2, style=dotted];
m4_280 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_106  [key=2, style=dotted];
m4_281 -> m4_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_282 -> m4_274  [key=0, style=bold, color=blue];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_61  [key=2, style=dotted];
m4_54 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_62  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_36  [key=2, style=dotted];
m4_59 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_46  [key=2, style=dotted];
m4_56 -> m4_24  [key=2, style=dotted];
m4_56 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_23  [key=2, style=dotted];
m4_57 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_24  [key=2, style=dotted];
m4_58 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_60 -> m4_53  [key=0, style=bold, color=blue];
m4_228 -> m4_229  [key=0, style=solid];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_128  [key=2, style=dotted];
m4_229 -> m4_235  [key=1, style=dashed, color=red, label=filter];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_62  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid, color=red];
m4_235 -> m4_36  [key=2, style=dotted, color=red];
m4_235 -> m4_245  [key=1, style=dashed, color=red, label="lambda expression"];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_237  [key=2, style=dotted];
m4_231 -> m4_235  [key=1, style=dashed, color=red, label=exception];
m4_231 -> m4_246  [key=1, style=dashed, color=red, label=exception];
m4_231 -> m4_249  [key=1, style=dashed, color=red, label=exception];
m4_231 -> m4_272  [key=1, style=dashed, color=green, label=exception];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_46  [key=2, style=dotted];
m4_232 -> m4_238  [key=2, style=dotted];
m4_232 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_23  [key=2, style=dotted];
m4_233 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_234 -> m4_235  [key=0, style=solid, color=red];
m4_234 -> m4_24  [key=2, style=dotted];
m4_234 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_236 -> m4_228  [key=0, style=bold, color=blue];
m4_251 -> m4_252  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_128  [key=2, style=dotted];
m4_252 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_252 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_128  [key=2, style=dotted];
m4_253 -> m4_255  [key=1, style=dashed, color=green, label=innerFilter];
m4_254 -> m4_255  [key=0, style=solid, color=green];
m4_254 -> m4_62  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_36  [key=2, style=dotted];
m4_260 -> m4_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_255 -> m4_256  [key=0, style=solid, color=green];
m4_255 -> m4_62  [key=2, style=dotted, color=green];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_237  [key=2, style=dotted];
m4_256 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_256 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_256 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_256 -> m4_290  [key=1, style=dashed, color=green, label=exception];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_46  [key=2, style=dotted];
m4_257 -> m4_238  [key=2, style=dotted];
m4_257 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_23  [key=2, style=dotted];
m4_258 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_24  [key=2, style=dotted];
m4_259 -> m4_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_261 -> m4_251  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_8  [key=2, style=dotted, color=green];
m4_1 -> m4_6  [key=1, style=dashed, color=green, label=connection];
m4_1 -> m4_1  [key=3, color=green, style=bold, label="Field variable string NewState"];
m4_2 -> m4_3  [key=0, style=solid, color=green];
m4_2 -> m4_9  [key=2, style=dotted, color=green];
m4_2 -> m4_14  [key=1, style=dashed, color=green, label="lambda expression"];
m4_2 -> m4_6  [key=1, style=dashed, color=green, label=job];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_13  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_3 -> m4_10  [key=2, style=dotted, color=green];
m4_3 -> m4_6  [key=1, style=dashed, color=green, label=state];
m4_4 -> m4_5  [key=0, style=solid, color=green];
m4_4 -> m4_11  [key=2, style=dotted, color=green];
m4_4 -> m4_6  [key=1, style=dashed, color=green, label=stateMachineFactory];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_12  [key=2, style=dotted];
m4_7 -> m4_0  [key=0, style=bold, color=blue];
m4_207 -> m4_208  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_128  [key=2, style=dotted];
m4_208 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_208 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_62  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_46  [key=2, style=dotted];
m4_210 -> m4_24  [key=2, style=dotted];
m4_210 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_36  [key=2, style=dotted];
m4_214 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_23  [key=2, style=dotted];
m4_211 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_24  [key=2, style=dotted];
m4_212 -> m4_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_36  [key=2, style=dotted];
m4_213 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_215 -> m4_207  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_61  [key=2, style=dotted];
m4_74 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m4_74 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_61  [key=2, style=dotted];
m4_75 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_46  [key=2, style=dotted];
m4_77 -> m4_84  [key=2, style=dotted];
m4_77 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_62  [key=2, style=dotted];
m4_78 -> m4_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_46  [key=2, style=dotted];
m4_76 -> m4_84  [key=2, style=dotted];
m4_76 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_62  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_46  [key=2, style=dotted];
m4_80 -> m4_24  [key=2, style=dotted];
m4_80 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_23  [key=2, style=dotted];
m4_81 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_24  [key=2, style=dotted];
m4_82 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_83 -> m4_73  [key=0, style=bold, color=blue];
m4_324 -> m4_325  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid, color=green];
m4_15 -> m4_16  [key=0, style=solid, color=green];
m4_15 -> m4_17  [key=2, style=dotted, color=green];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_28 -> m4_26  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [key=2, style=dotted];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_47 -> m4_48  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_35  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_40  [key=2, style=dotted];
m4_49 -> m4_47  [key=0, style=bold, color=blue];
m4_52 -> m4_50  [key=0, style=bold, color=blue];
m4_63 -> m4_64  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_35  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_40  [key=2, style=dotted];
m4_65 -> m4_63  [key=0, style=bold, color=blue];
m4_68 -> m4_66  [key=0, style=bold, color=blue];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_24  [key=2, style=dotted];
m4_70 -> m4_72  [key=2, style=dotted];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_35  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_24  [key=2, style=dotted];
m4_86 -> m4_72  [key=2, style=dotted];
m4_87 -> m4_85  [key=0, style=bold, color=blue];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_24  [key=2, style=dotted];
m4_89 -> m4_72  [key=2, style=dotted];
m4_90 -> m4_88  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_40  [key=2, style=dotted];
m4_93 -> m4_91  [key=0, style=bold, color=blue];
m4_96 -> m4_94  [key=0, style=bold, color=blue];
m4_107 -> m4_108  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_35  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_40  [key=2, style=dotted];
m4_109 -> m4_107  [key=0, style=bold, color=blue];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_24  [key=2, style=dotted];
m4_111 -> m4_72  [key=2, style=dotted];
m4_112 -> m4_110  [key=0, style=bold, color=blue];
m4_114 -> m4_115  [key=0, style=solid];
m4_115 -> m4_113  [key=0, style=bold, color=blue];
m4_118 -> m4_116  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid, color=red];
m4_133 -> m4_180  [key=0, style=solid, color=green];
m4_136 -> m4_137  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_24  [key=2, style=dotted];
m4_130 -> m4_132  [key=2, style=dotted];
m4_131 -> m4_129  [key=0, style=bold, color=blue];
m4_134 -> m4_135  [key=0, style=solid, color=red];
m4_134 -> m4_40  [key=2, style=dotted, color=red];
m4_135 -> m4_133  [key=0, style=bold, color=blue];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_24  [key=2, style=dotted];
m4_137 -> m4_139  [key=2, style=dotted];
m4_138 -> m4_136  [key=0, style=bold, color=blue];
m4_152 -> m4_153  [key=0, style=solid];
m4_155 -> m4_156  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_24  [key=2, style=dotted];
m4_153 -> m4_132  [key=2, style=dotted];
m4_154 -> m4_152  [key=0, style=bold, color=blue];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_24  [key=2, style=dotted];
m4_156 -> m4_132  [key=2, style=dotted];
m4_157 -> m4_155  [key=0, style=bold, color=blue];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_24  [key=2, style=dotted];
m4_159 -> m4_139  [key=2, style=dotted];
m4_160 -> m4_158  [key=0, style=bold, color=blue];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_24  [key=2, style=dotted];
m4_162 -> m4_139  [key=2, style=dotted];
m4_163 -> m4_161  [key=0, style=bold, color=blue];
m4_173 -> m4_174  [key=0, style=solid];
m4_176 -> m4_177  [key=0, style=solid];
m4_179 -> m4_180  [key=0, style=solid, color=red];
m4_179 -> m4_223  [key=0, style=solid, color=green];
m4_182 -> m4_183  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_24  [key=2, style=dotted];
m4_174 -> m4_132  [key=2, style=dotted];
m4_175 -> m4_173  [key=0, style=bold, color=blue];
m4_177 -> m4_178  [key=0, style=solid];
m4_178 -> m4_176  [key=0, style=bold, color=blue];
m4_180 -> m4_181  [key=0, style=solid, color=red];
m4_180 -> m4_40  [key=2, style=dotted];
m4_180 -> m4_135  [key=0, style=solid, color=green];
m4_181 -> m4_179  [key=0, style=bold, color=blue];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_24  [key=2, style=dotted];
m4_183 -> m4_139  [key=2, style=dotted];
m4_184 -> m4_182  [key=0, style=bold, color=blue];
m4_195 -> m4_196  [key=0, style=solid];
m4_198 -> m4_199  [key=0, style=solid];
m4_201 -> m4_202  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_24  [key=2, style=dotted];
m4_196 -> m4_132  [key=2, style=dotted];
m4_197 -> m4_195  [key=0, style=bold, color=blue];
m4_199 -> m4_200  [key=0, style=solid];
m4_200 -> m4_198  [key=0, style=bold, color=blue];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_24  [key=2, style=dotted];
m4_202 -> m4_139  [key=2, style=dotted];
m4_202 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_203 -> m4_201  [key=0, style=bold, color=blue];
m4_204 -> m4_205  [key=0, style=solid];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_204  [key=0, style=bold, color=blue];
m4_216 -> m4_217  [key=0, style=solid];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_35  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_222 -> m4_223  [key=0, style=solid, color=red];
m4_222 -> m4_240  [key=0, style=solid, color=green];
m4_225 -> m4_226  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_24  [key=2, style=dotted];
m4_217 -> m4_132  [key=2, style=dotted];
m4_218 -> m4_216  [key=0, style=bold, color=blue];
m4_221 -> m4_219  [key=0, style=bold, color=blue];
m4_223 -> m4_224  [key=0, style=solid, color=red];
m4_223 -> m4_40  [key=2, style=dotted];
m4_223 -> m4_181  [key=0, style=solid, color=green];
m4_224 -> m4_222  [key=0, style=bold, color=blue];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_24  [key=2, style=dotted];
m4_226 -> m4_139  [key=2, style=dotted];
m4_227 -> m4_225  [key=0, style=bold, color=blue];
m4_246 -> m4_247  [key=0, style=solid, color=red];
m4_246 -> m4_24  [key=2, style=dotted, color=red];
m4_246 -> m4_139  [key=2, style=dotted, color=red];
m4_246 -> m4_248  [key=1, style=dashed, color=red, label="lambda expression"];
m4_249 -> m4_250  [key=0, style=solid, color=red];
m4_239 -> m4_240  [key=0, style=solid, color=red];
m4_239 -> m4_263  [key=0, style=solid, color=green];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_35  [key=2, style=dotted];
m4_242 -> m4_243  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid, color=red];
m4_240 -> m4_241  [key=0, style=solid, color=red];
m4_240 -> m4_40  [key=2, style=dotted];
m4_240 -> m4_224  [key=0, style=solid, color=green];
m4_241 -> m4_239  [key=0, style=bold, color=blue];
m4_244 -> m4_242  [key=0, style=bold, color=blue];
m4_247 -> m4_245  [key=0, style=bold, color=blue];
m4_248 -> m4_249  [key=0, style=solid, color=red];
m4_248 -> m4_272  [key=0, style=solid, color=green];
m4_250 -> m4_248  [key=0, style=bold, color=blue];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_24  [key=2, style=dotted];
m4_269 -> m4_139  [key=2, style=dotted];
m4_269 -> m4_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_272 -> m4_273  [key=0, style=solid, color=red];
m4_272 -> m4_250  [key=0, style=solid, color=green];
m4_262 -> m4_263  [key=0, style=solid, color=red];
m4_262 -> m4_284  [key=0, style=solid, color=green];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_35  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_268 -> m4_269  [key=0, style=solid];
m4_263 -> m4_264  [key=0, style=solid, color=red];
m4_263 -> m4_40  [key=2, style=dotted];
m4_263 -> m4_241  [key=0, style=solid, color=green];
m4_264 -> m4_262  [key=0, style=bold, color=blue];
m4_267 -> m4_265  [key=0, style=bold, color=blue];
m4_270 -> m4_268  [key=0, style=bold, color=blue];
m4_271 -> m4_272  [key=0, style=solid, color=red];
m4_271 -> m4_290  [key=0, style=solid, color=green];
m4_273 -> m4_271  [key=0, style=bold, color=blue];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_24  [key=2, style=dotted];
m4_287 -> m4_139  [key=2, style=dotted];
m4_287 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_290 -> m4_291  [key=0, style=solid, color=red];
m4_290 -> m4_273  [key=0, style=solid, color=green];
m4_283 -> m4_284  [key=0, style=solid, color=red];
m4_283 -> m4_310  [key=0, style=solid, color=green];
m4_286 -> m4_287  [key=0, style=solid];
m4_292 -> m4_293  [key=0, style=solid];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_35  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid, color=red];
m4_284 -> m4_40  [key=2, style=dotted];
m4_284 -> m4_264  [key=0, style=solid, color=green];
m4_285 -> m4_283  [key=0, style=bold, color=blue];
m4_288 -> m4_286  [key=0, style=bold, color=blue];
m4_289 -> m4_290  [key=0, style=solid, color=red];
m4_291 -> m4_289  [key=0, style=bold, color=blue];
m4_293 -> m4_294  [key=0, style=solid];
m4_294 -> m4_292  [key=0, style=bold, color=blue];
m4_297 -> m4_295  [key=0, style=bold, color=blue];
m4_309 -> m4_310  [key=0, style=solid, color=red];
m4_312 -> m4_313  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_35  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_310 -> m4_311  [key=0, style=solid, color=red];
m4_310 -> m4_40  [key=2, style=dotted];
m4_310 -> m4_285  [key=0, style=solid, color=green];
m4_311 -> m4_309  [key=0, style=bold, color=blue];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_24  [key=2, style=dotted];
m4_313 -> m4_139  [key=2, style=dotted];
m4_314 -> m4_312  [key=0, style=bold, color=blue];
m4_316 -> m4_317  [key=0, style=solid];
m4_317 -> m4_315  [key=0, style=bold, color=blue];
m4_320 -> m4_318  [key=0, style=bold, color=blue];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_24  [key=2, style=dotted];
m4_322 -> m4_139  [key=2, style=dotted];
m4_322 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_323 -> m4_321  [key=0, style=bold, color=blue];
m4_325 -> m4_326  [key=0, style=solid];
m4_326 -> m4_324  [key=0, style=bold, color=blue];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_23  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_36  [key=2, style=dotted];
m4_33 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_34 -> m4_30  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_46  [key=2, style=dotted];
m4_42 -> m4_24  [key=2, style=dotted];
m4_42 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_23  [key=2, style=dotted];
m4_43 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_24  [key=2, style=dotted];
m4_44 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_44 -> m4_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m4_45 -> m4_41  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_23  [key=2, style=dotted];
m4_19 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_24  [key=2, style=dotted];
m4_20 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_25  [key=2, style=dotted];
m4_22 -> m4_18  [key=0, style=bold, color=blue];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_128  [key=2, style=dotted];
m4_120 -> m4_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_120 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_62  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid, color=red];
m4_122 -> m4_46  [key=2, style=dotted];
m4_122 -> m4_84  [key=2, style=dotted];
m4_122 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_122 -> m4_214  [key=3, color=green, style=bold, label="Local variable HangFire.Common.States.StateApplyingContext context"];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_46  [key=2, style=dotted];
m4_124 -> m4_84  [key=2, style=dotted];
m4_124 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_123 -> m4_124  [key=0, style=solid, color=red];
m4_123 -> m4_46  [key=2, style=dotted, color=red];
m4_123 -> m4_84  [key=2, style=dotted, color=red];
m4_123 -> m4_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_23  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_35  [key=2, style=dotted];
m4_127 -> m4_119  [key=0, style=bold, color=blue];
m4_331 -> m4_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_15  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_255  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_305  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_331 -> m4_328  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m4_332 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_333 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_334 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_335 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_336 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_337 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_338 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_339 -> m4_246  [key=1, style=dashed, color=red, label=exception];
m4_339 -> m4_249  [key=1, style=dashed, color=red, label=exception];
m4_339 -> m4_272  [key=1, style=dashed, color=green, label=exception];
m4_340 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_341 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_341 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_341 -> m4_290  [key=1, style=dashed, color=green, label=exception];
m4_342 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_342 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_343 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m4_344 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_11  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_0  [key=0, style=bold, color=blue];
m5_12 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m5_12 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
}
