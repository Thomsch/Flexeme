digraph  {
n42 [label="HangFire.States.ApplyStateContext", span=""];
n0 [label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n1 [label="connection == null", span="33-33", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n3 [label="newState == null", span="34-34", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n5 [label="_connection = connection", span="36-36", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n6 [label="OldStateName = oldStateName", span="37-37", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n7 [label="NewState = newState", span="38-38", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n2 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n4 [label="throw new ArgumentNullException(''newState'');", span="34-34", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n8 [label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="39-39", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n9 [label="Exit HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26", cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)"];
n11 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n12 [label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n13 [label="handlers == null", span="49-49", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n15 [label="filters == null", span="50-50", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n18 [label="handlers.GetHandlers(OldStateName)", span="54-54", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n20 [label=filters, span="59-59", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n23 [label="handlers.GetHandlers(NewState.Name)", span="66-66", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n25 [label=filters, span="71-71", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n14 [label="throw new ArgumentNullException(''handlers'');", span="49-49", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n16 [label="throw new ArgumentNullException(''filters'');", span="50-50", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n17 [label="var transaction = _connection.CreateWriteTransaction()", span="52-52", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n32 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()"];
n19 [label="handler.Unapply(this, transaction)", span="56-56", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n21 [label="filter.OnStateUnapplied(this, transaction)", span="61-61", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n22 [label="transaction.SetJobState(JobId, NewState)", span="64-64", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n24 [label="handler.Apply(this, transaction)", span="68-68", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n26 [label="filter.OnStateApplied(this, transaction)", span="73-73", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n28 [label="transaction.ExpireJob(JobId, JobExpirationTimeout)", span="78-78", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n29 [label="transaction.PersistJob(JobId)", span="82-82", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n30 [label="transaction.Commit()", span="85-85", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n33 [label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40", cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)"];
n34 [label="Entry HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25", cluster="HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n35 [label="Entry HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="36-36", cluster="HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n36 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)"];
n37 [label="Entry HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="24-24", cluster="HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n27 [label="NewState.ExpireJobOnApply", span="76-76", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", color=red, community=0];
n38 [label="Entry HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="29-29", cluster="HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)"];
n40 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)"];
n39 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)"];
n31 [label="Exit HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)"];
n41 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()"];
d27 [label="NewState.IsFinal", span="76-76", cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", color=green, community=0];
m0_35 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ApplyStateContextFacts.cs"];
m0_30 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ApplyStateContextFacts.cs"];
m0_0 [label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_8 [label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_6 [label="servers.Count == 0", span="88-88", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_9 [label=servers, span="123-123", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_1 [label="WriteLiteral(''\n'')", span="61-61", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_2 [label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_5 [label="WriteLiteral(''\n'')", span="83-83", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_7 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_10 [label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_11 [label="Write(server.Name.ToUpperInvariant())", span="134-134", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_12 [label="WriteLiteral(''</td>\n                    <td>'')", span="139-139", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_13 [label="Write(server.WorkersCount)", span="144-144", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_14 [label="WriteLiteral(''</td>\n                    <td>'')", span="149-149", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_15 [label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_16 [label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_17 [label="Write(JobHelper.ToTimestamp(server.StartedAt))", span="164-164", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_18 [label="WriteLiteral(''\''>'')", span="169-169", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_19 [label="Write(server.StartedAt)", span="174-174", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_20 [label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_22 [label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_23 [label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", span="195-195", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_24 [label="WriteLiteral(''\''>\n                                '')", span="200-200", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_25 [label="Write(server.Heartbeat)", span="205-205", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_26 [label="WriteLiteral(''\n                            </span>\n'')", span="210-210", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_27 [label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="220-220", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_28 [label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="230-230", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_4 [label="IList<ServerDto> servers = monitor.Servers()", span="77-77", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_21 [label="server.Heartbeat.HasValue", span="184-184", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_29 [label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ApplyStateContextFacts.cs"];
m0_38 [label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40", cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ApplyStateContextFacts.cs"];
m0_33 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ApplyStateContextFacts.cs"];
m0_32 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ApplyStateContextFacts.cs"];
m0_40 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ApplyStateContextFacts.cs"];
m0_34 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="ApplyStateContextFacts.cs"];
m0_31 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ApplyStateContextFacts.cs"];
m0_37 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ApplyStateContextFacts.cs"];
m0_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ApplyStateContextFacts.cs"];
m0_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ApplyStateContextFacts.cs"];
m0_41 [label="HangFire.Web.Pages.ServersPage", span="", file="ApplyStateContextFacts.cs"];
m1_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="BackgroundJobClient.cs"];
m1_5 [label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="BackgroundJobClient.cs"];
m1_6 [label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", span="10-10", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", file="BackgroundJobClient.cs"];
m1_7 [label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", span="10-10", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string, System.TimeSpan)", file="BackgroundJobClient.cs"];
m1_2 [label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", file="BackgroundJobClient.cs"];
m1_3 [label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", file="BackgroundJobClient.cs"];
m1_0 [label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="BackgroundJobClient.cs"];
m1_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="BackgroundJobClient.cs"];
m3_38 [label="Entry HangFire.States.DeletedState.DeletedState()", span="27-27", cluster="HangFire.States.DeletedState.DeletedState()", file="BackgroundJobClientFacts.cs"];
m3_22 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", span="47-47", cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="BackgroundJobClientFacts.cs"];
m3_23 [label="var state = CreateState()", span="49-49", cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="BackgroundJobClientFacts.cs"];
m3_24 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < state.DeletedAt)", span="51-51", cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="BackgroundJobClientFacts.cs"];
m3_25 [label="Assert.True(state.DeletedAt < DateTime.UtcNow.AddMinutes(1))", span="52-52", cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="BackgroundJobClientFacts.cs"];
m3_26 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", span="47-47", cluster="HangFire.Core.Tests.States.DeletedStateFacts.DeletedAtProperty_ReturnsCurrentUtcDate()", file="BackgroundJobClientFacts.cs"];
m3_27 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="BackgroundJobClientFacts.cs"];
m3_16 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientFacts.cs"];
m3_35 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="BackgroundJobClientFacts.cs"];
m3_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientFacts.cs"];
m3_17 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", span="37-37", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_18 [label="var state = CreateState()", span="39-39", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_19 [label="var result = state.IgnoreJobLoadException", span="41-41", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_20 [label="Assert.True(result)", span="43-43", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_21 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", span="37-37", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IgnoreExceptions_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_34 [label="Entry HangFire.States.DeletedState.SerializeData()", span="51-51", cluster="HangFire.States.DeletedState.SerializeData()", file="BackgroundJobClientFacts.cs"];
m3_28 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", span="56-56", cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="BackgroundJobClientFacts.cs"];
m3_29 [label="var state = CreateState()", span="58-58", cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="BackgroundJobClientFacts.cs"];
m3_30 [label="var data = state.SerializeData()", span="60-60", cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="BackgroundJobClientFacts.cs"];
m3_31 [label="Assert.Equal(1, data.Count)", span="62-62", cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="BackgroundJobClientFacts.cs"];
m3_32 [label="Assert.True(JobHelper.DeserializeDateTime(data[''DeletedAt'']) != default(DateTime))", span="63-63", cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="BackgroundJobClientFacts.cs"];
m3_33 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", span="56-56", cluster="HangFire.Core.Tests.States.DeletedStateFacts.SerializeData_ReturnsSerializedStateData()", file="BackgroundJobClientFacts.cs"];
m3_10 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", span="66-66", cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="BackgroundJobClientFacts.cs"];
m3_36 [label="return new DeletedState();", span="68-68", cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="BackgroundJobClientFacts.cs"];
m3_37 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", span="66-66", cluster="HangFire.Core.Tests.States.DeletedStateFacts.CreateState()", file="BackgroundJobClientFacts.cs"];
m3_11 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", span="27-27", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_12 [label="var state = CreateState()", span="29-29", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_13 [label="var result = state.IsFinal", span="31-31", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_14 [label="Assert.True(result)", span="33-33", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_15 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", span="27-27", cluster="HangFire.Core.Tests.States.DeletedStateFacts.IsFinalProperty_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_0 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", span="10-10", cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="BackgroundJobClientFacts.cs"];
m3_1 [label="var result = DeletedState.StateName", span="12-12", cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="BackgroundJobClientFacts.cs"];
m3_2 [label="Assert.Equal(''Deleted'', result)", span="13-13", cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="BackgroundJobClientFacts.cs"];
m3_3 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", span="10-10", cluster="HangFire.Core.Tests.States.DeletedStateFacts.StateName_ReturnsDeleted()", file="BackgroundJobClientFacts.cs"];
m3_5 [label="Entry HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", span="17-17", cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_6 [label="var state = CreateState()", span="19-19", cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_7 [label="var result = state.Name", span="21-21", cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_8 [label="Assert.Equal(DeletedState.StateName, result)", span="23-23", cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_9 [label="Exit HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", span="17-17", cluster="HangFire.Core.Tests.States.DeletedStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m4_49 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs"];
m4_0 [label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServer.cs"];
m4_1 [label="context.Transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServer.cs"];
m4_2 [label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServer.cs"];
m4_52 [label="Entry HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="128-128", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs"];
m4_69 [label="var components = _storage.GetComponents()", span="130-130", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs"];
m4_70 [label="return components\r\n                .Select(component => new ServerComponentRunner(component))\r\n                .ToArray();", span="132-134", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs"];
m4_71 [label="Exit HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="128-128", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="BackgroundJobServer.cs"];
m4_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs"];
m4_23 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="BackgroundJobServer.cs"];
m4_72 [label="Entry HangFire.JobStorage.GetComponents()", span="57-57", cluster="HangFire.JobStorage.GetComponents()", file="BackgroundJobServer.cs"];
m4_40 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BackgroundJobServer.cs"];
m4_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="BackgroundJobServer.cs"];
m4_16 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs"];
m4_24 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="BackgroundJobServer.cs"];
m4_74 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="BackgroundJobServer.cs"];
m4_50 [label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="109-109", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs"];
m4_54 [label="var stateMachineFactory = new StateMachineFactory(_storage)", span="111-111", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_55 [label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="112-118", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=1, file="BackgroundJobServer.cs"];
m4_59 [label="yield return new ServerComponentRunner(\r\n                new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval));", span="124-125", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_56 [label="yield return new WorkerManager(sharedWorkerContext, _options.WorkerCount);", span="120-120", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_57 [label="yield return new ServerComponentRunner(new ServerHeartbeat(_storage, _serverId));", span="121-121", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_58 [label="yield return new ServerComponentRunner(new ServerWatchdog(_storage));", span="122-122", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="BackgroundJobServer.cs"];
m4_60 [label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="109-109", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="BackgroundJobServer.cs"];
m4_66 [label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="BackgroundJobServer.cs"];
m4_28 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="BackgroundJobServer.cs"];
m4_63 [label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28", cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="BackgroundJobServer.cs"];
m4_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="BackgroundJobServer.cs"];
m4_9 [label="_options = options", span="51-51", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_10 [label="_storage = storage", span="52-52", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_11 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="54-54", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_12 [label="_serverRunner = GetServerRunner()", span="57-57", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_7 [label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="BackgroundJobServer.cs"];
m4_5 [label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="BackgroundJobServer.cs"];
m4_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="BackgroundJobServer.cs"];
m4_6 [label="context.Transaction.RemoveFromSet(''failed'', context.JobId)", span="20-20", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="BackgroundJobServer.cs"];
m4_13 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_25 [label="Entry HangFire.BackgroundJobServer.Stop()", span="66-66", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m4_26 [label="_serverRunner.Stop()", span="68-68", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m4_27 [label="Exit HangFire.BackgroundJobServer.Stop()", span="66-66", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m4_38 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="BackgroundJobServer.cs"];
m4_41 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="BackgroundJobServer.cs"];
m4_43 [label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m4_45 [label="componentRunners.AddRange(GetCommonComponentRunners())", span="103-103", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m4_46 [label="componentRunners.AddRange(GetStorageComponentRunners())", span="104-104", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m4_44 [label="var componentRunners = new List<IServerComponentRunner>()", span="101-101", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m4_47 [label="return new ServerComponentRunnerCollection(componentRunners);", span="106-106", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m4_48 [label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServer.cs"];
m4_75 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_76 [label="new ServerComponentRunner(component)", span="133-133", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_77 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_15 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs"];
m4_68 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="BackgroundJobServer.cs"];
m4_51 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BackgroundJobServer.cs"];
m4_53 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="BackgroundJobServer.cs"];
m4_73 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobServer.cs"];
m4_19 [label="Entry HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m4_21 [label="_serverRunner.Start()", span="63-63", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m4_20 [label="Logger.Info(''Starting HangFire Server...'')", span="62-62", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m4_22 [label="Exit HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m4_18 [label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m4_34 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="79-83", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m4_35 [label="var server = new ServerCore(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="85-89", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m4_36 [label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="91-96", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m4_37 [label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="77-77", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServer.cs"];
m4_42 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="BackgroundJobServer.cs"];
m4_29 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="71-71", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m4_30 [label="_serverRunner.Dispose()", span="73-73", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m4_31 [label="Logger.Info(''HangFire Server stopped.'')", span="74-74", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m4_32 [label="Exit HangFire.BackgroundJobServer.Dispose()", span="71-71", cluster="HangFire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs"];
m4_64 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="BackgroundJobServer.cs"];
m4_65 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="BackgroundJobServer.cs"];
m4_62 [label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="BackgroundJobServer.cs"];
m4_33 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m4_67 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_61 [label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="BackgroundJobServer.cs"];
m4_39 [label="Entry HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", span="31-31", cluster="HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", file="BackgroundJobServer.cs"];
m4_78 [label="HangFire.BackgroundJobServer", span="", file="BackgroundJobServer.cs"];
m5_23 [label="Entry HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="26-26", cluster="HangFire.Client.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="ClientExceptionContextFacts.cs"];
m5_16 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="26-26", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ClientExceptionContextFacts.cs"];
m5_17 [label="Assert.Throws<NullReferenceException>(\r\n                () => new ClientExceptionContext(null, new Exception()))", span="28-29", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ClientExceptionContextFacts.cs"];
m5_18 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="26-26", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ClientExceptionContextFacts.cs"];
m5_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="ClientExceptionContextFacts.cs"];
m5_10 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="ClientExceptionContextFacts.cs"];
m5_9 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ClientExceptionContextFacts.cs"];
m5_33 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", span="42-42", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m5_35 [label="var context = new ClientExceptionContext(_createContext, exception)", span="45-45", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m5_34 [label="var exception = new Exception()", span="44-44", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m5_36 [label="Assert.Same(exception, context.Exception)", span="47-47", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m5_37 [label="Assert.False(context.ExceptionHandled)", span="48-48", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m5_38 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", span="42-42", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_CorrectlySets_AllProperties()", file="ClientExceptionContextFacts.cs"];
m5_39 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ClientExceptionContextFacts.cs"];
m5_40 [label="Entry Unk.False", span="", cluster="Unk.False", file="ClientExceptionContextFacts.cs"];
m5_8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ClientExceptionContextFacts.cs"];
m5_29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ClientExceptionContextFacts.cs"];
m5_15 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", span="51-51", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", file="ClientExceptionContextFacts.cs"];
m5_41 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", span="51-51", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.TestMethod()", file="ClientExceptionContextFacts.cs"];
m5_24 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="ClientExceptionContextFacts.cs"];
m5_0 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", span="14-14", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m5_3 [label="var state = new Mock<IState>()", span="18-18", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", color=green, community=0, file="ClientExceptionContextFacts.cs"];
m5_2 [label="var job = Job.FromExpression(() => TestMethod())", span="17-17", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m5_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="19-19", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m5_5 [label="_createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="21-22", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m5_1 [label="var connection = new Mock<IStorageConnection>()", span="16-16", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m5_6 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", span="14-14", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.ClientExceptionContextFacts()", file="ClientExceptionContextFacts.cs"];
m5_7 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ClientExceptionContextFacts.cs"];
m5_20 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_12 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_14 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_13 [label="TestMethod()", span="17-17", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_31 [label="new ClientExceptionContext(_createContext, null)", span="36-36", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_30 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_32 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_21 [label="new ClientExceptionContext(null, new Exception())", span="29-29", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_22 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ClientExceptionContextFacts.cs"];
m5_11 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="ClientExceptionContextFacts.cs"];
m5_25 [label="Entry HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", span="33-33", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m5_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ClientExceptionContext(_createContext, null))", span="35-36", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m5_27 [label="Assert.Equal(''exception'', exception.ParamName)", span="38-38", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m5_28 [label="Exit HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", span="33-33", cluster="HangFire.Core.Tests.Client.ClientExceptionContextFacts.Ctor_ThrowsAnException_WhenExceptionIsNull()", file="ClientExceptionContextFacts.cs"];
m5_42 [label="HangFire.Core.Tests.Client.ClientExceptionContextFacts", span="", file="ClientExceptionContextFacts.cs"];
m7_11 [label="Entry Hangfire.BootstrapperConfiguration.UseFilter(object)", span="48-48", cluster="Hangfire.BootstrapperConfiguration.UseFilter(object)", file="CreateContextFacts.cs"];
m7_12 [label="Filters.Add(filter)", span="50-50", cluster="Hangfire.BootstrapperConfiguration.UseFilter(object)", file="CreateContextFacts.cs"];
m7_13 [label="Exit Hangfire.BootstrapperConfiguration.UseFilter(object)", span="48-48", cluster="Hangfire.BootstrapperConfiguration.UseFilter(object)", file="CreateContextFacts.cs"];
m7_8 [label="Entry Hangfire.BootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="43-43", cluster="Hangfire.BootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="CreateContextFacts.cs"];
m7_9 [label="AuthorizationFilters = filters", span="45-45", cluster="Hangfire.BootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="CreateContextFacts.cs"];
m7_10 [label="Exit Hangfire.BootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="43-43", cluster="Hangfire.BootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="CreateContextFacts.cs"];
m7_21 [label="Entry Hangfire.BootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="63-63", cluster="Hangfire.BootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="CreateContextFacts.cs"];
m7_22 [label="Storage = storage", span="65-65", cluster="Hangfire.BootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="CreateContextFacts.cs"];
m7_23 [label="Exit Hangfire.BootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="63-63", cluster="Hangfire.BootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="CreateContextFacts.cs"];
m7_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="CreateContextFacts.cs"];
m7_18 [label="Entry Hangfire.BootstrapperConfiguration.UseAppPath(string)", span="58-58", cluster="Hangfire.BootstrapperConfiguration.UseAppPath(string)", file="CreateContextFacts.cs"];
m7_19 [label="AppPath = path", span="60-60", cluster="Hangfire.BootstrapperConfiguration.UseAppPath(string)", file="CreateContextFacts.cs"];
m7_20 [label="Exit Hangfire.BootstrapperConfiguration.UseAppPath(string)", span="58-58", cluster="Hangfire.BootstrapperConfiguration.UseAppPath(string)", file="CreateContextFacts.cs"];
m7_27 [label="Entry Hangfire.BootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="73-73", cluster="Hangfire.BootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="CreateContextFacts.cs"];
m7_28 [label="Servers.Add(server)", span="75-75", cluster="Hangfire.BootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="CreateContextFacts.cs"];
m7_29 [label="Exit Hangfire.BootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="73-73", cluster="Hangfire.BootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="CreateContextFacts.cs"];
m7_0 [label="Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_1 [label="Servers = new List<Func<BackgroundJobServer>>()", span="26-26", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_2 [label="DashboardPath = DashboardOwinExtensions.DefaultDashboardPath", span="27-27", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_3 [label="AppPath = DashboardOwinExtensions.DefaultAppPath", span="28-28", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_4 [label="AuthorizationFilters = DashboardOwinExtensions.DefaultAuthorizationFilters", span="30-30", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_5 [label="Filters = new List<object>()", span="32-32", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_6 [label="Exit Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="CreateContextFacts.cs"];
m7_14 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CreateContextFacts.cs"];
m7_15 [label="Entry Hangfire.BootstrapperConfiguration.UseDashboardPath(string)", span="53-53", cluster="Hangfire.BootstrapperConfiguration.UseDashboardPath(string)", file="CreateContextFacts.cs"];
m7_16 [label="DashboardPath = path", span="55-55", cluster="Hangfire.BootstrapperConfiguration.UseDashboardPath(string)", file="CreateContextFacts.cs"];
m7_17 [label="Exit Hangfire.BootstrapperConfiguration.UseDashboardPath(string)", span="53-53", cluster="Hangfire.BootstrapperConfiguration.UseDashboardPath(string)", file="CreateContextFacts.cs"];
m7_24 [label="Entry Hangfire.BootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="68-68", cluster="Hangfire.BootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="CreateContextFacts.cs"];
m7_25 [label="Activator = activator", span="70-70", cluster="Hangfire.BootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="CreateContextFacts.cs"];
m7_26 [label="Exit Hangfire.BootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="68-68", cluster="Hangfire.BootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="CreateContextFacts.cs"];
m7_30 [label="Hangfire.BootstrapperConfiguration", span="", file="CreateContextFacts.cs"];
m9_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreatingContextFacts.cs"];
m9_8 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_13 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_11 [label="var state = new Mock<State>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=red, community=0, file="CreatingContextFacts.cs"];
m9_12 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_14 [label="var context = new CreatingContext(createContext)", span="29-29", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_15 [label="Assert.False(context.Canceled)", span="31-31", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_16 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m9_20 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="CreatingContextFacts.cs"];
m9_19 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="CreatingContextFacts.cs"];
m9_22 [label="Entry Unk.False", span="", cluster="Unk.False", file="CreatingContextFacts.cs"];
m9_7 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="CreatingContextFacts.cs"];
m9_18 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreatingContextFacts.cs"];
m9_0 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs"];
m9_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs"];
m9_2 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs"];
m9_26 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="CreatingContextFacts.cs"];
m9_27 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="CreatingContextFacts.cs"];
m9_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CreatingContextFacts.cs"];
m9_23 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="CreatingContextFacts.cs"];
m9_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="CreatingContextFacts.cs"];
m9_5 [label="new CreatingContext(null)", span="16-16", cluster="lambda expression", file="CreatingContextFacts.cs"];
m9_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="CreatingContextFacts.cs"];
m9_24 [label="TestMethod()", span="23-23", cluster="lambda expression", file="CreatingContextFacts.cs"];
m9_25 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="CreatingContextFacts.cs"];
m9_21 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="CreatingContextFacts.cs"];
m10_145 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="ElectStateContext.cs"];
m10_85 [label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="42-42", cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="ElectStateContext.cs"];
m10_76 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ElectStateContext.cs"];
m10_0 [label="Entry HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="45-45", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_1 [label="type == null", span="47-47", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_3 [label="method == null", span="48-48", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_5 [label="arguments == null", span="49-49", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_7 [label="Type = type", span="51-51", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_8 [label="Method = method", span="52-52", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_9 [label="Arguments = arguments", span="53-53", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_2 [label="throw new ArgumentNullException(''type'');", span="47-47", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_4 [label="throw new ArgumentNullException(''method'');", span="48-48", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_6 [label="throw new ArgumentNullException(''arguments'');", span="49-49", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_10 [label="Validate()", span="55-55", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_11 [label="Exit HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="45-45", cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ElectStateContext.cs"];
m10_40 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ElectStateContext.cs"];
m10_74 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ElectStateContext.cs"];
m10_148 [label="Entry Unk.ConvertToInvariantString", span="", cluster="Unk.ConvertToInvariantString", file="ElectStateContext.cs"];
m10_87 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ElectStateContext.cs"];
m10_39 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ElectStateContext.cs"];
m10_36 [label="Entry HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38", cluster="HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="ElectStateContext.cs"];
m10_88 [label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="ElectStateContext.cs"];
m10_31 [label="Entry HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33", cluster="HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="ElectStateContext.cs"];
m10_75 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="ElectStateContext.cs"];
m10_26 [label="Entry HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", span="229-229", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_89 [label="var parameters = Method.GetParameters()", span="233-233", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_99 [label="value = cancellationToken", span="251-251", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_90 [label="var result = new List<object>(Arguments.Length)", span="234-234", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_92 [label="i < parameters.Length", span="236-236", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_93 [label="var parameter = parameters[i]", span="238-238", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_91 [label="var i = 0", span="236-236", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_102 [label="result.Add(value)", span="259-259", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_104 [label="return result.ToArray();", span="262-262", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_94 [label="var argument = Arguments[i]", span="239-239", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_103 [label="i++", span="236-236", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_96 [label="parameter.ParameterType == typeof(object)", span="243-243", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_98 [label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="249-249", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_100 [label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="255-255", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_95 [label="object value", span="241-241", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_97 [label="value = argument", span="247-247", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_101 [label="value = converter.ConvertFromInvariantString(argument)", span="256-256", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_105 [label=Exception, span="264-264", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_106 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="266-268", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_107 [label="Exit HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", span="229-229", cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_149 [label="Entry HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="346-346", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_150 [label="Debug.Assert(expression != null)", span="348-348", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_151 [label="var constantExpression = expression as ConstantExpression", span="350-350", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_154 [label="return CachedExpressionCompiler.Evaluate(expression);", span="357-357", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_152 [label="constantExpression != null", span="352-352", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_153 [label="return constantExpression.Value;", span="354-354", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_155 [label="Exit HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="346-346", cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_25 [label="Entry HangFire.Common.Job.Activate(HangFire.JobActivator)", span="207-207", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_78 [label="var instance = activator.ActivateJob(Type)", span="211-211", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_79 [label="instance == null", span="213-213", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_81 [label="return instance;", span="219-219", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_80 [label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="215-216", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_82 [label=Exception, span="221-221", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_83 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="223-225", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_84 [label="Exit HangFire.Common.Job.Activate(HangFire.JobActivator)", span="207-207", cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="ElectStateContext.cs"];
m10_141 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="ElectStateContext.cs"];
m10_143 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="ElectStateContext.cs"];
m10_86 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ElectStateContext.cs"];
m10_109 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ElectStateContext.cs"];
m10_119 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="ElectStateContext.cs"];
m10_120 [label="Entry HangFire.Common.Job.Dispose(object)", span="294-294", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_121 [label="var disposable = instance as IDisposable", span="298-298", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_122 [label="disposable != null", span="299-299", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_123 [label="disposable.Dispose()", span="301-301", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_124 [label=Exception, span="304-304", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_125 [label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="306-308", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_126 [label="Exit HangFire.Common.Job.Dispose(object)", span="294-294", cluster="HangFire.Common.Job.Dispose(object)", file="ElectStateContext.cs"];
m10_112 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="ElectStateContext.cs"];
m10_49 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="ElectStateContext.cs"];
m10_27 [label="Entry HangFire.Common.Job.InvokeMethod(object, object[])", span="272-272", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_113 [label="Method.Invoke(instance, deserializedArguments)", span="276-276", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_114 [label=TargetInvocationException, span="278-278", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_115 [label="ex.InnerException is OperationCanceledException", span="280-280", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_116 [label="throw ex.InnerException;", span="285-285", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_117 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="288-290", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_118 [label="Exit HangFire.Common.Job.InvokeMethod(object, object[])", span="272-272", cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="ElectStateContext.cs"];
m10_32 [label="Entry HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="103-103", cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="ElectStateContext.cs"];
m10_37 [label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="105-107", cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="ElectStateContext.cs"];
m10_38 [label="Exit HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="103-103", cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="ElectStateContext.cs"];
m10_33 [label="Entry HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="96-96", cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="ElectStateContext.cs"];
m10_34 [label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="98-100", cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="ElectStateContext.cs"];
m10_35 [label="Exit HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="96-96", cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="ElectStateContext.cs"];
m10_142 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ElectStateContext.cs"];
m10_147 [label="Entry Unk.GetConverter", span="", cluster="Unk.GetConverter", file="ElectStateContext.cs"];
m10_50 [label="Entry HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="312-312", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_128 [label="Debug.Assert(callExpression != null)", span="314-314", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_129 [label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="316-316", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_130 [label="var serializedArguments = new List<string>(arguments.Length)", span="318-318", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_131 [label=arguments, span="319-319", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_138 [label="serializedArguments.Add(value)", span="340-340", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_139 [label="return serializedArguments.ToArray();", span="343-343", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_132 [label="string value = null", span="321-321", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_133 [label="argument != null", span="323-323", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_134 [label="argument is DateTime", span="325-325", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_135 [label="value = ((DateTime) argument).ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="327-327", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_136 [label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="331-331", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_137 [label="value = converter.ConvertToInvariantString(argument)", span="332-332", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_140 [label="Exit HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="312-312", cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="ElectStateContext.cs"];
m10_146 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="ElectStateContext.cs"];
m10_108 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="ElectStateContext.cs"];
m10_144 [label="Entry List<string>.cstr", span="", cluster="List<string>.cstr", file="ElectStateContext.cs"];
m10_111 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ElectStateContext.cs"];
m10_41 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_42 [label="methodCall == null", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_44 [label="var callExpression = methodCall.Body as MethodCallExpression", span="121-121", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_43 [label="throw new ArgumentNullException(''methodCall'');", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_45 [label="callExpression == null", span="122-122", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_47 [label="return new Job(\r\n                callExpression.Method.DeclaringType, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="131-134", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_46 [label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="124-124", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_48 [label="Exit HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ElectStateContext.cs"];
m10_13 [label="Entry HangFire.Common.Job.Validate()", span="160-160", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_59 [label="Method.DeclaringType == null", span="162-162", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_60 [label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="164-164", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_61 [label="!Method.DeclaringType.IsAssignableFrom(Type)", span="167-167", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_62 [label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="169-172", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_63 [label="!Method.IsPublic", span="175-175", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_64 [label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="177-177", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_65 [label="var parameters = Method.GetParameters()", span="180-180", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_66 [label="parameters.Length != Arguments.Length", span="182-182", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_68 [label=parameters, span="187-187", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_67 [label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="184-184", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_69 [label="parameter.IsOut", span="193-193", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_71 [label="parameter.ParameterType.IsByRef", span="199-199", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_70 [label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="195-196", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_72 [label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="201-202", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_73 [label="Exit HangFire.Common.Job.Validate()", span="160-160", cluster="HangFire.Common.Job.Validate()", file="ElectStateContext.cs"];
m10_110 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="ElectStateContext.cs"];
m10_77 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ElectStateContext.cs"];
m10_14 [label="Entry HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", span="66-66", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_15 [label="activator == null", span="68-68", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_17 [label="cancellationToken == null", span="69-69", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", color=red, community=0, file="ElectStateContext.cs"];
m10_21 [label="instance = Activate(activator)", span="77-77", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_22 [label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="80-80", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_16 [label="throw new ArgumentNullException(''activator'');", span="68-68", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_18 [label="throw new ArgumentNullException(''cancellationToken'');", span="69-69", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", color=red, community=0, file="ElectStateContext.cs"];
m10_19 [label="object instance = null", span="71-71", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_20 [label="!Method.IsStatic", span="75-75", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_23 [label="InvokeMethod(instance, deserializedArguments)", span="81-81", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_24 [label="Exit HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", span="66-66", cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="ElectStateContext.cs"];
m10_127 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ElectStateContext.cs"];
m10_156 [label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="ElectStateContext.cs"];
m10_28 [label="Entry HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="89-89", cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="ElectStateContext.cs"];
m10_29 [label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="91-93", cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="ElectStateContext.cs"];
m10_30 [label="Exit HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="89-89", cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="ElectStateContext.cs"];
m10_51 [label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_52 [label="methodCall == null", span="146-146", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_54 [label="var callExpression = methodCall.Body as MethodCallExpression", span="148-148", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_53 [label="throw new ArgumentNullException(''methodCall'');", span="146-146", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_55 [label="callExpression == null", span="149-149", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_57 [label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="154-157", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_56 [label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="151-151", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_58 [label="Exit HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144", cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ElectStateContext.cs"];
m10_157 [label="HangFire.Common.Job", span="", file="ElectStateContext.cs"];
m12_104 [label="Entry Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35", cluster="Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", file="EnqueuedState.cs"];
m12_110 [label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="EnqueuedState.cs"];
m12_100 [label="Entry int.TryParse(string, out int)", span="0-0", cluster="int.TryParse(string, out int)", file="EnqueuedState.cs"];
m12_102 [label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29", cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="EnqueuedState.cs"];
m12_0 [label="Entry Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_5 [label="int.TryParse(Query(''count''), out perPage)", span="66-66", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="EnqueuedState.cs"];
m12_4 [label="int.TryParse(Query(''from''), out from)", span="65-65", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_6 [label="var monitor = Storage.GetMonitoringApi()", span="68-68", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="EnqueuedState.cs"];
m12_7 [label="var pager = new Pager(from, perPage, monitor.FailedCount())", span="69-69", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_8 [label="var failedJobs = monitor.FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="70-70", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="EnqueuedState.cs"];
m12_9 [label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="76-76", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_45 [label=failedJobs, span="288-288", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_1 [label="WriteLiteral(''\r\n'')", span="50-50", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_2 [label="Layout = new LayoutPage(Strings.FailedJobsPage_Title)", span="61-61", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_10 [label="Write(Html.JobsSidebar())", span="81-81", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_11 [label="WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="86-86", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_12 [label="Write(Strings.FailedJobsPage_Title)", span="91-91", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_13 [label="WriteLiteral(''</h1>\r\n\r\n'')", span="96-96", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_15 [label="WriteLiteral(''            <div class=\''alert alert-success\''>\r\n               '')", span="107-107", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_16 [label="Write(Strings.FailedJobsPage_NoJobs)", span="112-112", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_17 [label="WriteLiteral(''\r\n            </div>\r\n'')", span="117-117", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_18 [label="WriteLiteral(''            <div class=\''alert alert-warning\''>\r\n                '')", span="129-129", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_19 [label="Write(Html.Raw(Strings.FailedJobsPage_FailedJobsNotExpire_Warning_Html))", span="134-134", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_20 [label="WriteLiteral(''\r\n            </div>\r\n'')", span="139-139", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_21 [label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="149-151", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_22 [label="Write(Url.To(''/jobs/failed/requeue''))", span="156-156", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_23 [label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="161-161", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_24 [label="Write(Strings.Common_Enqueueing)", span="166-166", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_25 [label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-repeat\''></span>\r\n                        '')", span="171-172", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_26 [label="Write(Strings.Common_RequeueJobs)", span="177-177", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_27 [label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="182-183", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_28 [label="Write(Url.To(''/jobs/failed/delete''))", span="188-188", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_29 [label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="193-193", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_30 [label="Write(Strings.Common_Deleting)", span="198-198", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_31 [label="WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="203-203", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_32 [label="Write(Strings.Common_DeleteConfirm)", span="208-208", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_33 [label="WriteLiteral(''\''>\r\n                        <span class=\''glyphicon glyphicon-remove\''></span>\r\n   '' +\r\n''                     '')", span="213-214", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_34 [label="Write(Strings.Common_DeleteSelected)", span="219-219", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_35 [label="WriteLiteral(''\r\n                    </button>\r\n\r\n                    '')", span="224-224", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_36 [label="Write(Html.PerPageSelector(pager))", span="229-229", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_37 [label="WriteLiteral(@''\r\n                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="234-244", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_38 [label="Write(Strings.Common_Id)", span="249-249", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_39 [label="WriteLiteral(''</th>\r\n                                <th>'')", span="254-254", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_40 [label="Write(Strings.FailedJobsPage_Table_Failed)", span="259-259", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_41 [label="WriteLiteral(''</th>\r\n                                <th>'')", span="264-264", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_42 [label="Write(Strings.Common_Job)", span="269-269", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_43 [label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="274-275", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_46 [label="WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="294-294", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_47 [label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="299-299", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_48 [label="WriteLiteral('' '')", span="304-304", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_49 [label="Write(job.Value.InFailedState ? ''hover'' : null)", span="309-309", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_50 [label="WriteLiteral(''\''>\r\n                                    <td rowspan=\'''')", span="314-314", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_51 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="319-319", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_52 [label="WriteLiteral(''\''>\r\n'')", span="324-324", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_54 [label="WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="335-336", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_55 [label="Write(job.Key)", span="341-341", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_56 [label="WriteLiteral(''\'' />\r\n'')", span="346-346", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_57 [label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\'' rowspan=\'''')", span="356-357", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_58 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="362-362", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_59 [label="WriteLiteral(''\''>\r\n                                        '')", span="367-367", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_60 [label="Write(Html.JobIdLink(job.Key))", span="372-372", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_61 [label="WriteLiteral(''\r\n'')", span="377-377", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_63 [label="WriteLiteral(''                                            <span title=\'''')", span="388-388", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_64 [label="Write(Strings.Common_JobStateChanged_Text)", span="393-393", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_65 [label="WriteLiteral(''\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="398-398", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_66 [label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n'')", span="408-409", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_68 [label="Write(Html.RelativeTime(job.Value.FailedAt.Value))", span="422-422", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_69 [label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d>\r\n                                        <div>\r\n                             '' +\r\n''               '')", span="435-437", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_70 [label="Write(Html.JobNameLink(job.Key, job.Value.Job))", span="442-442", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_71 [label="WriteLiteral(''\r\n                                        </div>\r\n'')", span="447-447", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_73 [label="WriteLiteral(''                                            <div style=\''color: #888;\''>\r\n         '' +\r\n''                                       '')", span="458-459", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_74 [label="Write(job.Value.Reason)", span="464-464", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_75 [label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>'')", span="469-469", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_76 [label="Write(index == 0 ? Strings.Common_LessDetails : Strings.Common_MoreDetails)", span="474-474", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_77 [label="WriteLiteral(''</a>\r\n                                            </div>\r\n'')", span="479-479", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_78 [label="WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="489-490", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_80 [label="WriteLiteral(''                                    <tr>\r\n                                       '' +\r\n'' <td colspan=\''2\'' class=\''failed-job-details\''>\r\n                                  '' +\r\n''          <div class=\''expandable\'' style=\'''')", span="501-503", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_81 [label="Write(index++ == 0 ? ''display: block;'' : null)", span="508-508", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_82 [label="WriteLiteral(''\''>\r\n                                                <h4>'')", span="513-513", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_83 [label="Write(job.Value.ExceptionType)", span="518-518", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_84 [label="WriteLiteral(''</h4>\r\n                                                <p class=\''text-muted\''>\r\n  '' +\r\n''                                                  '')", span="523-524", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_85 [label="Write(job.Value.ExceptionMessage)", span="529-529", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_86 [label="WriteLiteral(''\r\n                                                </p>\r\n\r\n'')", span="534-534", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_88 [label="WriteLiteral(''                                                    <pre class=\''stack-trace\''><cod'' +\r\n''e>'')", span="545-546", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_89 [label="Write(Html.StackTrace(job.Value.ExceptionDetails))", span="551-551", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_90 [label="WriteLiteral(''</code></pre>\r\n'')", span="556-556", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_91 [label="WriteLiteral(''                                            </div>\r\n                             '' +\r\n''           </td>\r\n                                    </tr>\r\n'')", span="566-567", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_92 [label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n                '')", span="578-579", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_93 [label="Write(Html.Paginator(pager))", span="584-584", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_94 [label="WriteLiteral(''\r\n            </div>\r\n'')", span="589-589", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_95 [label="WriteLiteral(''    </div>\r\n</div>'')", span="599-599", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_3 [label="int from, perPage", span="63-63", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_14 [label="pager.TotalPageCount == 0", span="101-101", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_44 [label="var index = 0", span="280-280", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_79 [label="job.Value.InFailedState", span="495-495", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_53 [label="job.Value.InFailedState", span="329-329", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_62 [label="!job.Value.InFailedState", span="382-382", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_67 [label="job.Value.FailedAt.HasValue", span="414-414", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_72 [label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="452-452", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_87 [label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="539-539", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_96 [label="Exit Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46", cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="EnqueuedState.cs"];
m12_103 [label="Entry Hangfire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="Hangfire.Storage.IMonitoringApi.FailedCount()", file="EnqueuedState.cs"];
m12_105 [label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46", cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="EnqueuedState.cs"];
m12_109 [label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="EnqueuedState.cs"];
m12_112 [label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="EnqueuedState.cs"];
m12_114 [label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="EnqueuedState.cs"];
m12_113 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="EnqueuedState.cs"];
m12_97 [label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="EnqueuedState.cs"];
m12_107 [label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="EnqueuedState.cs"];
m12_115 [label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69", cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="EnqueuedState.cs"];
m12_111 [label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="EnqueuedState.cs"];
m12_99 [label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63", cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="EnqueuedState.cs"];
m12_101 [label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54", cluster="Hangfire.JobStorage.GetMonitoringApi()", file="EnqueuedState.cs"];
m12_106 [label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="EnqueuedState.cs"];
m12_108 [label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43", cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="EnqueuedState.cs"];
m12_98 [label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4", cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="EnqueuedState.cs"];
m12_116 [label="Hangfire.Dashboard.Pages.FailedJobsPage", span="", file="EnqueuedState.cs"];
m13_30 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_31 [label="x.AddToQueue(Queue, JobId)", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_32 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_33 [label="Entry Unk.AddToQueue", span="", cluster="Unk.AddToQueue", file="EnqueuedStateHandlerFacts.cs"];
m13_34 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m13_35 [label="var handler = new EnqueuedState.Handler()", span="54-54", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m13_36 [label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<IState>().Object, null)", span="55-56", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", color=green, community=0];
m13_37 [label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="58-59", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m13_38 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m13_25 [label="handler.Apply(_context, _transaction.Object)", span="46-46", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m13_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="EnqueuedStateHandlerFacts.cs"];
m13_39 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="EnqueuedStateHandlerFacts.cs"];
m13_21 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="79-79", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="EnqueuedStateHandlerFacts.cs"];
m13_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="EnqueuedStateHandlerFacts.cs"];
m13_28 [label="Exit HangFire.Tests.States.StatesFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.StatesFeature.ScenarioCleanup()", file="EnqueuedStateHandlerFacts.cs"];
m13_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m13_10 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="EnqueuedStateHandlerFacts.cs"];
m13_11 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="EnqueuedStateHandlerFacts.cs"];
m13_12 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m13_22 [label="Entry HangFire.Tests.States.StatesFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.StatesFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="EnqueuedStateHandlerFacts.cs"];
m13_23 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m13_24 [label="var handler = new EnqueuedState.Handler()", span="44-44", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m13_48 [label="testRunner.When(''I apply the state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="104-104", cluster="HangFire.Tests.States.StatesFeature.StateSApplyMethodIsBeingCalledWhileApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_41 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_5 [label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new EnqueuedState { Queue = Queue }, \r\n                null)", span="27-31", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_40 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="EnqueuedStateHandlerFacts.cs"];
m13_44 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", span="63-63", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="EnqueuedStateHandlerFacts.cs"];
m13_45 [label="var handler = new EnqueuedState.Handler()", span="65-65", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="EnqueuedStateHandlerFacts.cs"];
m13_46 [label="Assert.DoesNotThrow(() => handler.Unapply(null, null))", span="67-67", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="EnqueuedStateHandlerFacts.cs"];
m13_47 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", span="63-63", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="EnqueuedStateHandlerFacts.cs"];
m13_49 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_50 [label="handler.Unapply(null, null)", span="67-67", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_51 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_67 [label="Exit HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", span="116-116", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_52 [label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="94-94", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedStateHandlerFacts.cs"];
m13_53 [label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", span="", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_54 [label=handler, span="", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_55 [label=context, span="", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_56 [label=handler, span="", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_57 [label="table1.AddRow(new string[] {\r\n                        ''Property1'',\r\n                        ''Value1''})", span="128-130", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_58 [label="table1.AddRow(new string[] {\r\n                        ''Property2'',\r\n                        ''Value2''})", span="131-133", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_59 [label="testRunner.And(''a \'Test\' state with the following properties:'', ((string)(null)), table1, ''And '')", span="135-135", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_60 [label="testRunner.When(''I apply the state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_61 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="139-141", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_62 [label="table2.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="142-144", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_63 [label="table2.AddRow(new string[] {\r\n                        ''Property1'',\r\n                        ''Value1''})", span="145-147", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_64 [label="table2.AddRow(new string[] {\r\n                        ''Property2'',\r\n                        ''Value2''})", span="148-150", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_65 [label="testRunner.Then(''the job\'s state entry contains the following items:'', ((string)(null)), table2, ''Then '')", span="152-152", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_66 [label="this.ScenarioCleanup()", span="154-154", cluster="HangFire.Tests.States.StatesFeature.TheJobSStateEntryShouldContainTheCorrespondingValuesAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_16 [label="HangFire.Tests.States.StatesFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="EnqueuedStateHandlerFacts.cs"];
m13_26 [label="_transaction.Verify(x => x.AddToQueue(Queue, JobId))", span="48-48", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m13_27 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m13_13 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedStateHandlerFacts.cs"];
m13_42 [label="handler.Apply(context, _transaction.Object)", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m13_69 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="EnqueuedStateHandlerFacts.cs"];
m13_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="EnqueuedStateHandlerFacts.cs"];
m13_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''States''))", span="48-49", cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="EnqueuedStateHandlerFacts.cs"];
m13_14 [label="Entry HangFire.Tests.States.StatesFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="EnqueuedStateHandlerFacts.cs"];
m13_17 [label="Exit HangFire.Tests.States.StatesFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.StatesFeature.TestInitialize()", file="EnqueuedStateHandlerFacts.cs"];
m13_18 [label="Entry HangFire.Tests.States.StatesFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.StatesFeature.ScenarioTearDown()", file="EnqueuedStateHandlerFacts.cs"];
m13_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.States.StatesFeature.ScenarioTearDown()", file="EnqueuedStateHandlerFacts.cs"];
m13_20 [label="Exit HangFire.Tests.States.StatesFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.StatesFeature.ScenarioTearDown()", file="EnqueuedStateHandlerFacts.cs"];
m13_6 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_68 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="EnqueuedStateHandlerFacts.cs"];
m13_0 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_4 [label="_stateContext = new StateContext(JobId, job)", span="25-25", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m13_85 [label="Exit HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", span="161-161", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_70 [label="Entry HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", span="161-161", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_71 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job\'s history list should contain the history entry after applying the state'', ((string[])(null)))", span="163-163", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_72 [label="this.ScenarioSetup(scenarioInfo)", span="165-165", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_73 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="167-167", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_74 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="169-171", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_75 [label="table3.AddRow(new string[] {\r\n                        ''Property'',\r\n                        ''Value''})", span="172-174", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_76 [label="testRunner.And(''a \'Test\' state with the following properties:'', ((string)(null)), table3, ''And '')", span="176-176", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_77 [label="testRunner.When(''I apply the state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="178-178", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_78 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="180-182", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_79 [label="table4.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="183-185", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_80 [label="table4.AddRow(new string[] {\r\n                        ''Reason'',\r\n                        ''SomeReason''})", span="186-188", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_81 [label="table4.AddRow(new string[] {\r\n                        ''CreatedAt'',\r\n                        ''<UtcNow timestamp>''})", span="189-191", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_82 [label="table4.AddRow(new string[] {\r\n                        ''Property'',\r\n                        ''Value''})", span="192-194", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_83 [label="testRunner.Then(''the last history entry contains the following items:'', ((string)(null)), table4, ''Then '')", span="196-196", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_84 [label="this.ScenarioCleanup()", span="198-198", cluster="HangFire.Tests.States.StatesFeature.TheJobSHistoryListShouldContainTheHistoryEntryAfterApplyingTheState()", file="EnqueuedStateHandlerFacts.cs"];
m13_86 [label="HangFire.Tests.States.StatesFeature", span="", file="EnqueuedStateHandlerFacts.cs"];
m14_10 [label="WriteLiteral(''</a>    \r\n'')", span="78-78", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_0 [label="Entry Hangfire.Dashboard.Pages.PerPageSelector.Execute()", span="29-29", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_1 [label="WriteLiteral(''\r\n'')", span="33-33", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_4 [label="WriteLiteral(''            <a class=\''btn btn-sm btn-default '')", span="48-48", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_2 [label="WriteLiteral(''\r\n    <div class=\''btn-group pull-right paginator\''>\r\n'')", span="37-37", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs", color=green, community=0];
m14_3 [label="new[] { 10, 20, 50, 100, 500 }", span="42-42", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_5 [label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="53-53", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_17 [label="Entry Hangfire.Dashboard.Pager.RecordsPerPageUrl(int)", span="58-58", cluster="Hangfire.Dashboard.Pager.RecordsPerPageUrl(int)", file="FailedState.cs"];
m14_13 [label="WriteLiteral('':\r\n    </div>\r\n'')", span="99-99", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_6 [label="WriteLiteral(''\'' \r\n                   href=\'''')", span="58-58", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_7 [label="Entry HangFire.States.FailedState.SerializeData()", span="39-39", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m14_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.ToStringTimestamp(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="41-47", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m14_9 [label="Exit HangFire.States.FailedState.SerializeData()", span="39-39", cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs"];
m14_11 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs"];
m14_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="FailedState.cs"];
m14_14 [label="HangFire.States.FailedState", span="", cluster="Hangfire.Dashboard.Pages.PerPageSelector.Execute()", file="FailedState.cs"];
m14_15 [label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="FailedState.cs"];
m14_16 [label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="FailedState.cs"];
m14_18 [label="Hangfire.Dashboard.Pages.PerPageSelector", span="", file="FailedState.cs"];
m15_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="FailedStateFacts.cs"];
m15_7 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedStateFacts.cs"];
m15_25 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedStateFacts.cs"];
m15_23 [label="Entry HangFire.States.FailedState.SerializeData()", span="39-39", cluster="HangFire.States.FailedState.SerializeData()", file="FailedStateFacts.cs"];
m15_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FailedStateFacts.cs"];
m15_12 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="FailedStateFacts.cs"];
m15_8 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="18-18", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m15_9 [label="var state = new FailedState(new Exception())", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m15_10 [label="Assert.Equal(FailedState.StateName, state.Name)", span="21-21", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m15_11 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="18-18", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs"];
m15_14 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_15 [label="var state = new FailedState(new Exception(''Message''))", span="27-27", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_16 [label="var serializedData = state.SerializeData()", span="29-29", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_17 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.FailedAt), serializedData[''FailedAt''])", span="31-31", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_20 [label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="34-34", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_18 [label="Assert.Equal(''System.Exception'', serializedData[''ExceptionType''])", span="32-32", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_19 [label="Assert.Equal(''Message'', serializedData[''ExceptionMessage''])", span="33-33", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_21 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25", cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs"];
m15_0 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m15_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m15_2 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs"];
m15_4 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="FailedStateFacts.cs"];
m15_5 [label="new FailedState(null)", span="14-14", cluster="lambda expression", file="FailedStateFacts.cs"];
m15_6 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="FailedStateFacts.cs"];
m15_22 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="FailedStateFacts.cs"];
m15_24 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedStateFacts.cs"];
m16_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="FetchedJobsWatcherFacts.cs"];
m16_70 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="FetchedJobsWatcherFacts.cs"];
m16_0 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="17-17", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_1 [label="_storage = new RedisStorage(RedisUtils.GetHostAndPort(), RedisUtils.GetDb())", span="19-19", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_2 [label="_token = new CancellationToken(true)", span="20-20", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_3 [label="_stateMachine = new Mock<IStateMachine>()", span="22-22", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_4 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="23-23", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_5 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="25-26", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_6 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="17-17", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m16_61 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="74-74", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_65 [label="var watcher = CreateWatcher()", span="82-82", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_66 [label="watcher.Execute(_token)", span="85-85", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_64 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_67 [label="Assert.NotNull(JobHelper.FromNullableStringTimestamp(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="87-88", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_62 [label="var redis = RedisUtils.CreateClient()", span="76-76", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_63 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_68 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="74-74", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_24 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FetchedJobsWatcherFacts.cs"];
m16_52 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="FetchedJobsWatcherFacts.cs"];
m16_48 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="FetchedJobsWatcherFacts.cs"];
m16_29 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="39-39", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(_storage, null))", span="41-42", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_31 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="44-44", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_32 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="39-39", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_37 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="48-48", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_42 [label="var watcher = CreateWatcher()", span="58-58", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_43 [label="watcher.Execute(_token)", span="61-61", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_44 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                    ''my-job'', \r\n                    It.IsAny<EnqueuedState>(),\r\n                    new[] { EnqueuedState.StateName, ProcessingState.StateName }))", span="64-67", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_41 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="55-56", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_45 [label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="69-69", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_38 [label="var redis = RedisUtils.CreateClient()", span="50-50", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_40 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="54-54", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_39 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="53-53", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_46 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="48-48", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m16_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="FetchedJobsWatcherFacts.cs"];
m16_9 [label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37", cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="FetchedJobsWatcherFacts.cs"];
m16_56 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="FetchedJobsWatcherFacts.cs"];
m16_50 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FetchedJobsWatcherFacts.cs"];
m16_54 [label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="52-52", cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcherFacts.cs"];
m16_36 [label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="33-33", cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="FetchedJobsWatcherFacts.cs"];
m16_71 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="FetchedJobsWatcherFacts.cs"];
m16_72 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="93-93", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_77 [label="var watcher = CreateWatcher()", span="103-103", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_78 [label="watcher.Execute(_token)", span="106-106", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_79 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                    ''my-job'', It.IsAny<EnqueuedState>(), It.IsAny<string[]>()))", span="109-110", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_76 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="100-101", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_73 [label="var redis = RedisUtils.CreateClient()", span="95-95", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_75 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="99-99", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_74 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="98-98", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_80 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="93-93", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="FetchedJobsWatcherFacts.cs"];
m16_49 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="FetchedJobsWatcherFacts.cs"];
m16_28 [label="Entry FetchedJobsWatcher.cstr", span="", cluster="FetchedJobsWatcher.cstr", file="FetchedJobsWatcherFacts.cs"];
m16_53 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="139-139", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m16_97 [label="return new FetchedJobsWatcher(_storage, _stateMachineFactory.Object);", span="141-141", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m16_98 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="139-139", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m16_60 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="FetchedJobsWatcherFacts.cs"];
m16_8 [label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20", cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="FetchedJobsWatcherFacts.cs"];
m16_81 [label="Entry lambda expression", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_94 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_95 [label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>())", span="134-134", cluster="lambda expression", color=green, community=0, file="FetchedJobsWatcherFacts.cs"];
m16_96 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_26 [label="new FetchedJobsWatcher(null, _stateMachineFactory.Object)", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_34 [label="new FetchedJobsWatcher(_storage, null)", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_16 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_58 [label="x.TryToChangeState(\r\n                    ''my-job'', \r\n                    It.IsAny<EnqueuedState>(),\r\n                    new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_82 [label="x.TryToChangeState(\r\n                    ''my-job'', It.IsAny<EnqueuedState>(), It.IsAny<string[]>())", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_25 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_27 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_33 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_35 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_57 [label="Entry lambda expression", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_17 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_59 [label="Exit lambda expression", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_83 [label="Exit lambda expression", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m16_51 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FetchedJobsWatcherFacts.cs"];
m16_47 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="FetchedJobsWatcherFacts.cs"];
m16_10 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="FetchedJobsWatcherFacts.cs"];
m16_7 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="FetchedJobsWatcherFacts.cs"];
m16_69 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="FetchedJobsWatcherFacts.cs"];
m16_88 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="122-123", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_92 [label="_stateMachine.Verify(\r\n                    x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>()),\r\n                    Times.Never)", span="133-135", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", color=green, community=0, file="FetchedJobsWatcherFacts.cs"];
m16_91 [label="watcher.Execute(_token)", span="130-130", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_90 [label="var watcher = CreateWatcher()", span="127-127", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_84 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="115-115", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_89 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="124-125", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_85 [label="var redis = RedisUtils.CreateClient()", span="117-117", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_86 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="120-120", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_87 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="121-121", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_93 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="115-115", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m16_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="FetchedJobsWatcherFacts.cs"];
m16_19 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="FetchedJobsWatcherFacts.cs"];
m16_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="FetchedJobsWatcherFacts.cs"];
m16_20 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_21 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null, _stateMachineFactory.Object))", span="32-33", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_22 [label="Assert.Equal(''storage'', exception.ParamName)", span="35-35", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_23 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m16_55 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FetchedJobsWatcherFacts.cs"];
m16_99 [label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span="", file="FetchedJobsWatcherFacts.cs"];
m17_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs"];
m17_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs"];
m18_2 [label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStateMachine.cs"];
m18_3 [label="Exit HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStateMachine.cs"];
m18_0 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStateMachine.cs"];
m18_1 [label="Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStateMachine.cs"];
m19_0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_1 [label="storage == null", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_3 [label="_storage = storage", span="38-38", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_4 [label="_interval = interval", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_19 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m19_24 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="IWriteOnlyTransaction.cs"];
m19_31 [label="return string.Format(@''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [{0}].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{0}].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'', storage.GetSchema());", span="74-100", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="IWriteOnlyTransaction.cs"];
m19_32 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="IWriteOnlyTransaction.cs"];
m19_25 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="IWriteOnlyTransaction.cs"];
m19_30 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="IWriteOnlyTransaction.cs"];
m19_7 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_8 [label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_12 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_15 [label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_9 [label="int removedCount = 0", span="46-46", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_10 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_11 [label="removedCount >= NumberOfRecordsInSinglePass", span="57-57", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_14 [label="removedCount >= NumberOfRecordsInSinglePass", span="62-62", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_13 [label="cancellationToken.ThrowIfCancellationRequested()", span="60-60", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_16 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="IWriteOnlyTransaction.cs"];
m19_34 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="IWriteOnlyTransaction.cs"];
m19_17 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="IWriteOnlyTransaction.cs"];
m19_26 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="IWriteOnlyTransaction.cs"];
m19_27 [label="return GetType().ToString();", span="69-69", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="IWriteOnlyTransaction.cs"];
m19_28 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="IWriteOnlyTransaction.cs"];
m19_33 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchema()", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.GetSchema()", file="IWriteOnlyTransaction.cs"];
m19_18 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="IWriteOnlyTransaction.cs"];
m19_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="IWriteOnlyTransaction.cs"];
m19_21 [label="Entry lambda expression", span="50-55", cluster="lambda expression", file="IWriteOnlyTransaction.cs"];
m19_22 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54", cluster="lambda expression", file="IWriteOnlyTransaction.cs"];
m19_23 [label="Exit lambda expression", span="50-55", cluster="lambda expression", file="IWriteOnlyTransaction.cs"];
m19_20 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="IWriteOnlyTransaction.cs"];
m19_35 [label="Hangfire.SqlServer.CountersAggregator", span="", file="IWriteOnlyTransaction.cs"];
m20_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="JobCreationProcessFacts.cs"];
m20_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobCreationProcessFacts.cs"];
m20_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="JobCreationProcessFacts.cs"];
m20_10 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="JobCreationProcessFacts.cs"];
m20_0 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_1 [label="var connection = new Mock<IStorageConnection>()", span="19-19", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_2 [label="var job = Job.FromExpression(() => TestMethod())", span="20-20", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_3 [label="var state = new Mock<IState>()", span="21-21", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="JobCreationProcessFacts.cs"];
m20_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_5 [label="_filters = new List<object>()", span="24-24", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_7 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m20_25 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobCreationProcessFacts.cs"];
m20_13 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="JobCreationProcessFacts.cs"];
m20_97 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_102 [label="var process = CreateProcess()", span="111-111", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_104 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m20_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobCreationProcessFacts.cs"];
m20_41 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m20_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m20_43 [label="var process = CreateProcess()", span="54-54", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m20_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m20_45 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m20_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="JobCreationProcessFacts.cs"];
m20_251 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_258 [label="var process = CreateProcess()", span="256-256", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_261 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m20_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobCreationProcessFacts.cs"];
m20_53 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_57 [label="var process = CreateProcess()", span="67-67", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_60 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m20_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobCreationProcessFacts.cs"];
m20_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="JobCreationProcessFacts.cs"];
m20_29 [label="Entry HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", span="45-45", cluster="HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", file="JobCreationProcessFacts.cs"];
m20_23 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m20_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m20_329 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m20_18 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m20_19 [label="var process = CreateProcess()", span="32-32", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m20_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m20_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m20_22 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m20_119 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_125 [label="var process = CreateProcess()", span="128-128", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_126 [label="process.Run(_context.Object)", span="131-131", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_127 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_164 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_168 [label="var process = CreateProcess()", span="169-169", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_169 [label="process.Run(_context.Object)", span="172-172", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_172 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m20_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="JobCreationProcessFacts.cs"];
m20_228 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_233 [label="var process = CreateProcess()", span="232-232", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_236 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m20_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobCreationProcessFacts.cs"];
m20_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobCreationProcessFacts.cs"];
m20_330 [label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcessFacts.cs"];
m20_185 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_191 [label="var process = CreateProcess()", span="192-192", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_192 [label="process.Run(_context.Object)", span="195-195", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_194 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m20_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobCreationProcessFacts.cs"];
m20_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobCreationProcessFacts.cs"];
m20_73 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_81 [label="var process = CreateProcess()", span="91-91", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_83 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m20_30 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m20_31 [label="var process = CreateProcess()", span="43-43", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m20_32 [label="process.Run(_context.Object)", span="45-45", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m20_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m20_34 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m20_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m20_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobCreationProcessFacts.cs"];
m20_207 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_211 [label="var process = CreateProcess()", span="211-211", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_215 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m20_298 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_305 [label="var process = CreateProcess()", span="299-299", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_308 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m20_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobCreationProcessFacts.cs"];
m20_274 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_280 [label="var process = CreateProcess()", span="278-278", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_282 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m20_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobCreationProcessFacts.cs"];
m20_9 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobCreationProcessFacts.cs"];
m20_17 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m20_327 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m20_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobCreationProcessFacts.cs"];
m20_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobCreationProcessFacts.cs"];
m20_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobCreationProcessFacts.cs"];
m20_140 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_149 [label="var process = CreateProcess()", span="151-151", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_150 [label="process.Run(_context.Object)", span="154-154", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_151 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m20_331 [label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobCreationProcessFacts.cs"];
m20_332 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_333 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_334 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_335 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_336 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_337 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_338 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_339 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m20_340 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_341 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m20_342 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m20_343 [label=process, span="", file="JobCreationProcessFacts.cs"];
m20_344 [label=process, span="", file="JobCreationProcessFacts.cs"];
m22_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PerformContextFacts.cs"];
m22_7 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="PerformContextFacts.cs"];
m22_33 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", span="44-44", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="PerformContextFacts.cs"];
m22_34 [label="var server = CreateHeartbeat()", span="46-46", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="PerformContextFacts.cs"];
m22_35 [label="server.Execute(_token)", span="48-48", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="PerformContextFacts.cs"];
m22_36 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="50-50", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="PerformContextFacts.cs"];
m22_37 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="51-51", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="PerformContextFacts.cs"];
m22_38 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", span="44-44", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="PerformContextFacts.cs"];
m22_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="PerformContextFacts.cs"];
m22_14 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="PerformContextFacts.cs"];
m22_39 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="64-64", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="PerformContextFacts.cs"];
m22_58 [label="return new ServerHeartbeat(_storage.Object, ServerId);", span="66-66", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="PerformContextFacts.cs"];
m22_59 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="64-64", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="PerformContextFacts.cs"];
m22_25 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="35-35", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="PerformContextFacts.cs"];
m22_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", span="37-38", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="PerformContextFacts.cs"];
m22_27 [label="Assert.Equal(''serverId'', exception.ParamName)", span="40-40", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="PerformContextFacts.cs"];
m22_28 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="35-35", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="PerformContextFacts.cs"];
m22_24 [label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="PerformContextFacts.cs"];
m22_15 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="26-26", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="PerformContextFacts.cs"];
m22_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="28-29", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="PerformContextFacts.cs"];
m22_17 [label="Assert.Equal(''storage'', exception.ParamName)", span="31-31", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="PerformContextFacts.cs"];
m22_18 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="26-26", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="PerformContextFacts.cs"];
m22_40 [label="Entry HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37", cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="PerformContextFacts.cs"];
m22_57 [label="Entry Unk.Heartbeat", span="", cluster="Unk.Heartbeat", file="PerformContextFacts.cs"];
m22_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PerformContextFacts.cs"];
m22_48 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="PerformContextFacts.cs"];
m22_54 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_11 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_12 [label="x.GetConnection()", span="22-22", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_13 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_21 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_22 [label="new ServerHeartbeat(null, ServerId)", span="29-29", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_23 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_29 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_30 [label="new ServerHeartbeat(_storage.Object, null)", span="38-38", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_31 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_42 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_45 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_43 [label="x.GetConnection()", span="50-50", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_44 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_46 [label="x.Dispose()", span="51-51", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_47 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_55 [label="x.Heartbeat(ServerId)", span="61-61", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_56 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="PerformContextFacts.cs"];
m22_8 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="PerformContextFacts.cs"];
m22_41 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PerformContextFacts.cs"];
m22_0 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="PerformContextFacts.cs"];
m22_1 [label="_storage = new Mock<JobStorage>()", span="18-18", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="PerformContextFacts.cs"];
m22_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", color=green, community=0, file="PerformContextFacts.cs"];
m22_3 [label="_token = new CancellationToken(true)", span="20-20", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="PerformContextFacts.cs"];
m22_4 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="22-22", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="PerformContextFacts.cs"];
m22_5 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="PerformContextFacts.cs"];
m22_10 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="PerformContextFacts.cs"];
m22_32 [label="Entry ServerHeartbeat.cstr", span="", cluster="ServerHeartbeat.cstr", file="PerformContextFacts.cs"];
m22_49 [label="Entry HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="PerformContextFacts.cs"];
m22_50 [label="var server = CreateHeartbeat()", span="57-57", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="PerformContextFacts.cs"];
m22_51 [label="server.Execute(_token)", span="59-59", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="PerformContextFacts.cs"];
m22_52 [label="_connection.Verify(x => x.Heartbeat(ServerId))", span="61-61", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="PerformContextFacts.cs"];
m22_53 [label="Exit HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="PerformContextFacts.cs"];
m22_6 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="PerformContextFacts.cs"];
m22_60 [label="HangFire.Core.Tests.Server.ServerHeartbeatFacts", span="", file="PerformContextFacts.cs"];
m24_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs"];
m24_8 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="39-39", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m24_9 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="41-45", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m24_10 [label="Exit HangFire.States.ProcessingState.SerializeData()", span="39-39", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m24_6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs"];
m24_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m24_1 [label="String.IsNullOrWhiteSpace(serverName)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m24_3 [label="ServerName = serverName", span="30-30", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m24_2 [label="throw new ArgumentNullException(''serverName'');", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m24_4 [label="StartedAt = DateTime.UtcNow", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m24_5 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m24_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs"];
m24_13 [label="HangFire.States.ProcessingState", span="", file="ProcessingState.cs"];
m25_8 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ProcessingStateFacts.cs"];
m25_9 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(String.Empty))", span="19-20", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ProcessingStateFacts.cs"];
m25_10 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", span="17-17", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsEmpty()", file="ProcessingStateFacts.cs"];
m25_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="ProcessingStateFacts.cs"];
m25_31 [label="Entry Unk.False", span="", cluster="Unk.False", file="ProcessingStateFacts.cs"];
m25_14 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m25_15 [label="var state = new ProcessingState(''Server1'')", span="26-26", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m25_16 [label="Assert.Equal(ProcessingState.StateName, state.Name)", span="27-27", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m25_17 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs"];
m25_27 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs"];
m25_28 [label="var state = new ProcessingState(''server'')", span="44-44", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ProcessingStateFacts.cs"];
m25_29 [label="Assert.False(state.IsFinal)", span="46-46", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ProcessingStateFacts.cs"];
m25_30 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs"];
m25_25 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="39-39", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingStateFacts.cs"];
m25_18 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ProcessingStateFacts.cs"];
m25_19 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m25_20 [label="var state = new ProcessingState(''Server1'')", span="33-33", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m25_21 [label="var data = state.SerializeData()", span="35-35", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m25_22 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.StartedAt), data[''StartedAt''])", span="37-37", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m25_23 [label="Assert.Equal(''Server1'', state.ServerName)", span="38-38", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m25_24 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs"];
m25_7 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingStateFacts.cs"];
m25_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m25_4 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m25_5 [label="new ProcessingState(null)", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m25_6 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m25_12 [label="new ProcessingState(String.Empty)", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m25_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m25_26 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingStateFacts.cs"];
m25_0 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m25_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", span="12-13", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m25_2 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs"];
m26_19 [label="Entry HangFire.QueueAttribute.QueueAttribute(string)", span="55-55", cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="QueueAttributeFacts.cs"];
m26_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="QueueAttributeFacts.cs"];
m26_12 [label="Sample()", span="16-16", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m26_9 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="QueueAttributeFacts.cs"];
m26_33 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="QueueAttributeFacts.cs"];
m26_27 [label="Entry HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", span="40-40", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="QueueAttributeFacts.cs"];
m26_28 [label="var filter = new QueueAttribute(''override'')", span="42-42", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="QueueAttributeFacts.cs"];
m26_29 [label="var context = new ElectStateContext(_context, new Mock<State>().Object, null, _connection.Object)", span="43-43", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", color=red, community=0, file="QueueAttributeFacts.cs"];
m26_30 [label="Assert.DoesNotThrow(() => filter.OnStateElection(context))", span="45-45", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="QueueAttributeFacts.cs"];
m26_31 [label="Exit HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", span="40-40", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_DoesNotDoAnything_IfStateIsNotEnqueuedState()", file="QueueAttributeFacts.cs"];
m26_0 [label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs"];
m26_1 [label="Servers.Add(server)", span="43-43", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs", color=green, community=0];
m26_2 [label="server.Start()", span="45-45", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs"];
m26_3 [label="var context = new OwinContext(app.Properties)", span="47-47", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs"];
m26_4 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="48-48", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs"];
m26_5 [label="token != CancellationToken.None", span="50-50", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs"];
m26_11 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m26_6 [label="token.Register(server.Dispose)", span="52-52", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="QueueAttributeFacts.cs"];
m26_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="QueueAttributeFacts.cs"];
m26_21 [label="Entry HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", span="31-31", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="QueueAttributeFacts.cs"];
m26_22 [label="var filter = new QueueAttribute(''override'')", span="33-33", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="QueueAttributeFacts.cs"];
m26_23 [label="filter.OnStateElection(_context)", span="34-34", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="QueueAttributeFacts.cs"];
m26_24 [label="Assert.Equal(''override'', ((EnqueuedState)_context.CandidateState).Queue)", span="36-36", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="QueueAttributeFacts.cs"];
m26_25 [label="Exit HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", span="31-31", cluster="HangFire.Core.Tests.QueueAttributeFacts.OnStateElection_OverridesTheQueue_OfTheCandidateState()", file="QueueAttributeFacts.cs"];
m26_26 [label="Entry HangFire.QueueAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="65-65", cluster="HangFire.QueueAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="QueueAttributeFacts.cs"];
m26_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="QueueAttributeFacts.cs"];
m26_14 [label="Entry HangFire.Core.Tests.QueueAttributeFacts.Sample()", span="48-48", cluster="HangFire.Core.Tests.QueueAttributeFacts.Sample()", file="QueueAttributeFacts.cs"];
m26_37 [label="Exit HangFire.Core.Tests.QueueAttributeFacts.Sample()", span="48-48", cluster="HangFire.Core.Tests.QueueAttributeFacts.Sample()", file="QueueAttributeFacts.cs"];
m26_32 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="QueueAttributeFacts.cs"];
m26_34 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m26_13 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m26_35 [label="filter.OnStateElection(context)", span="45-45", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m26_36 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="QueueAttributeFacts.cs"];
m26_15 [label="Entry HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", span="24-24", cluster="HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", file="QueueAttributeFacts.cs"];
m26_16 [label="var filter = new QueueAttribute(''hello'')", span="26-26", cluster="HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", file="QueueAttributeFacts.cs"];
m26_17 [label="Assert.Equal(''hello'', filter.Queue)", span="27-27", cluster="HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", file="QueueAttributeFacts.cs"];
m26_18 [label="Exit HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", span="24-24", cluster="HangFire.Core.Tests.QueueAttributeFacts.Ctor_CorrectlySets_AllPropertyValues()", file="QueueAttributeFacts.cs"];
m26_10 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="QueueAttributeFacts.cs"];
m26_38 [label="HangFire.Core.Tests.QueueAttributeFacts", span="", file="QueueAttributeFacts.cs"];
m26_39 [label=filter, span="", file="QueueAttributeFacts.cs"];
m26_40 [label=context, span="", file="QueueAttributeFacts.cs"];
m27_6 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m27_7 [label="_transaction.Dispose()", span="38-38", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m27_8 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m27_128 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="152-152", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_126 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_127 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="151-151", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_129 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_90 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyTransaction.cs"];
m27_65 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs"];
m27_156 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_157 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="175-176", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_158 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_78 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisWriteOnlyTransaction.cs"];
m27_111 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="141-141", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_109 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_110 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="140-140", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_112 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_169 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m27_170 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="188-189", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m27_171 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m27_55 [label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_53 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_54 [label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_56 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="97-97", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_57 [label="storedData.Add(''State'', state.Name)", span="98-98", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_58 [label="state.Reason != null", span="100-100", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_59 [label="storedData.Add(''Reason'', state.Reason)", span="102-102", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_60 [label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="105-107", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_61 [label="AddJobState(jobId, state)", span="109-109", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_62 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_70 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransaction.cs"];
m27_98 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisWriteOnlyTransaction.cs"];
m27_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs"];
m27_74 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="RedisWriteOnlyTransaction.cs"];
m27_108 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="RedisWriteOnlyTransaction.cs"];
m27_38 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m27_39 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m27_40 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m27_41 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m27_42 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m27_31 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyTransaction.cs"];
m27_142 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransaction.cs"];
m27_119 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m27_120 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="146-146", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m27_121 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m27_136 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_137 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="157-158", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_138 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_149 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_150 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="169-170", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_151 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_63 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyTransaction.cs"];
m27_9 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs"];
m27_10 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_11 [label="!_transaction.Commit()", span="43-43", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_12 [label="int replayCount = 1", span="49-49", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_13 [label="int maxReplayCount = 3", span="50-50", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_15 [label="replayCount++ >= maxReplayCount", span="54-54", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_14 [label="!_transaction.Replay()", span="52-52", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_16 [label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_17 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m27_64 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="RedisWriteOnlyTransaction.cs"];
m27_172 [label="Entry lambda expression", span="188-189", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_28 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_33 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_36 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_27 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_32 [label="Entry lambda expression", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_35 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_29 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_34 [label="Exit lambda expression", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_37 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_44 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_48 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_51 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_43 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_47 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_50 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_45 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_49 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_52 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_68 [label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_72 [label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_76 [label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="105-107", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_67 [label="Entry lambda expression", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_71 [label="Entry lambda expression", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_75 [label="Entry lambda expression", span="105-107", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_69 [label="Exit lambda expression", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_73 [label="Exit lambda expression", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_77 [label="Exit lambda expression", span="105-107", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_87 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="119-121", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_86 [label="Entry lambda expression", span="119-121", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_88 [label="Exit lambda expression", span="119-121", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_96 [label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="126-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_100 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="129-130", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_95 [label="Entry lambda expression", span="126-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_99 [label="Entry lambda expression", span="129-130", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_97 [label="Exit lambda expression", span="126-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_101 [label="Exit lambda expression", span="129-130", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_106 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="135-135", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_105 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_107 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_114 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="140-140", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_117 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_113 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_116 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_115 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_118 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_123 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_122 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_124 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_131 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="151-151", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_134 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_130 [label="Entry lambda expression", span="151-151", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_133 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_132 [label="Exit lambda expression", span="151-151", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_135 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_140 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="157-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_139 [label="Entry lambda expression", span="157-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_141 [label="Exit lambda expression", span="157-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_147 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_146 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_148 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_153 [label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_152 [label="Entry lambda expression", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_154 [label="Exit lambda expression", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_160 [label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_159 [label="Entry lambda expression", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_161 [label="Exit lambda expression", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_166 [label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_165 [label="Entry lambda expression", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_167 [label="Exit lambda expression", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_173 [label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="188-189", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_174 [label="Exit lambda expression", span="188-189", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m27_85 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs"];
m27_143 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m27_144 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="163-164", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m27_145 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m27_102 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m27_103 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="135-135", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m27_104 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m27_168 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyTransaction.cs"];
m27_24 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_21 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_22 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_23 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_25 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m27_91 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_92 [label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="126-127", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_93 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="129-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_94 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_89 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs"];
m27_46 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="RedisWriteOnlyTransaction.cs"];
m27_18 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs"];
m27_66 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_79 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="114-114", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_80 [label="storedData.Add(''State'', state.Name)", span="115-115", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_81 [label="storedData.Add(''Reason'', state.Reason)", span="116-116", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_83 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="119-121", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_82 [label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="117-117", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_84 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m27_19 [label="Entry Unk.Replay", span="", cluster="Unk.Replay", file="RedisWriteOnlyTransaction.cs"];
m27_20 [label="Entry RedisException.cstr", span="", cluster="RedisException.cstr", file="RedisWriteOnlyTransaction.cs"];
m27_26 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisWriteOnlyTransaction.cs"];
m27_125 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="RedisWriteOnlyTransaction.cs"];
m27_175 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="RedisWriteOnlyTransaction.cs"];
m27_162 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_163 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="181-182", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_164 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m27_155 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlyTransaction.cs"];
m27_0 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_1 [label="transaction == null", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_3 [label="_transaction = transaction", span="33-33", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_2 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_4 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m27_176 [label="HangFire.Redis.RedisWriteOnlyTransaction", span="", file="RedisWriteOnlyTransaction.cs"];
m27_177 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_178 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m27_179 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_180 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_181 [label="HangFire.States.State", span="", file="RedisWriteOnlyTransaction.cs"];
m27_182 [label=storedData, span="", file="RedisWriteOnlyTransaction.cs"];
m27_183 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_184 [label=storedData, span="", file="RedisWriteOnlyTransaction.cs"];
m27_185 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_186 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_187 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_188 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_189 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m27_190 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_191 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_192 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m27_193 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_194 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_195 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_196 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_197 [label=double, span="", file="RedisWriteOnlyTransaction.cs"];
m27_198 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_199 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_200 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_201 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_202 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_203 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_204 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m27_205 [label=int, span="", file="RedisWriteOnlyTransaction.cs"];
m27_206 [label=int, span="", file="RedisWriteOnlyTransaction.cs"];
m28_72 [label="var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'')", span="83-83", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_177 [label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="189-190", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_196 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_195 [label="x.GetInstant(It.IsAny<CrontabSchedule>(), timeZone)", span="213-213", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_197 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_18 [label="var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="34-34", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_318 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_64 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="65-65", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_62 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_63 [label="Entry Unk.Create", span="", cluster="Unk.Create", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_105 [label="x.SerializeData()", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_110 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_108 [label="x.SetJobState(''my-job'', state.Object)", span="102-102", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_109 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_111 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1));\r\n\r\n                // Act\r\n                Commit(redis, x => x.PersistJob(''my-job''));\r\n\r\n                // Assert\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero);\r\n            })", span="112-126", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_106 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_107 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_112 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_80 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="85-85", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_0 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="28-28", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_1 [label="_storage = new Mock<JobStorage>()", span="30-30", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_2 [label="_client = new Mock<IBackgroundJobClient>()", span="31-31", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_247 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_143 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_155 [label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="167-167", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_236 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_237 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value''));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="242-247", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_238 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_160 [label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="161-161", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_45 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_207 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_208 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_209 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_210 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry''));\r\n\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero);\r\n            })", span="213-221", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_211 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_212 [label="Entry lambda expression", span="213-221", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_94 [label="var state = new Mock<State>()", span="97-97", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=red, community=0];
m28_95 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="98-98", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_96 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_97 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="102-102", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_98 [label="Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''))", span="105-105", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_35 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'');\r\n                Assert.Equal(''my-state'', hash[''State'']);\r\n            })", span="46-59", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="RedisWriteOnlyTransactionFacts.cs", color=red, community=0];
m28_100 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="RedisWriteOnlyTransactionFacts.cs"];
m28_248 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_249 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n                Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3);\r\n            })", span="253-259", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_250 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_181 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_17 [label="var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'')", span="33-33", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_120 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero)", span="125-125", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_79 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_235 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_20 [label="Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25))", span="37-37", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_153 [label="x.AddJobState(''my-job'', state.Object)", span="142-142", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_156 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_157 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''));\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="159-165", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_158 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_154 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_159 [label="Entry lambda expression", span="159-165", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_164 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="RedisWriteOnlyTransactionFacts.cs"];
m28_165 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_166 [label="x.AddToQueue(''critical'', ''my-job'')", span="161-161", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_167 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_168 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_261 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_262 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'');\r\n\r\n                Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''));\r\n\r\n                Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="265-272", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_263 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_145 [label="x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>())", span="153-153", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_193 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_125 [label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="134-135", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m28_269 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransactionFacts.cs"];
m28_10 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_9 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'');\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'');\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)));\r\n\r\n                // Assert\r\n                var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'');\r\n                var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n                var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n\r\n                Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25));\r\n            })", span="22-40", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_11 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="RedisWriteOnlyTransactionFacts.cs"];
m28_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisWriteOnlyTransactionFacts.cs"];
m28_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_5 [label="new RedisWriteOnlyTransaction(null)", span="16-16", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_7 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_8 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_12 [label="Entry lambda expression", span="22-40", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_13 [label="redis.SetEntry(''hangfire:job:my-job'', ''job'')", span="25-25", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_14 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'')", span="26-26", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_15 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'')", span="27-27", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_16 [label="Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)))", span="30-30", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_27 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_22 [label="Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25))", span="39-39", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_273 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_323 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m28_127 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n                state.Object.Reason = ''my-reason'';\r\n\r\n                // Act\r\n                Commit(redis, x => x.AddJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0);\r\n                Assert.NotNull(serializedEntry);\r\n\r\n                var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry);\r\n                Assert.Equal(''my-state'', entry[''State'']);\r\n                Assert.Equal(''my-reason'', entry[''Reason'']);\r\n                Assert.Equal(''Value'', entry[''Name'']);\r\n                Assert.True(entry.ContainsKey(''CreatedAt''));\r\n            })", span="132-153", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="RedisWriteOnlyTransactionFacts.cs", color=red, community=0];
m28_185 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="186-186", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_187 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="190-190", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_188 [label="Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero)", span="191-191", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_189 [label="Exit lambda expression", span="184-192", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_190 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="RedisWriteOnlyTransactionFacts.cs"];
m28_186 [label="Commit(redis, x => x.IncrementCounter(''entry''))", span="188-188", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_191 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_326 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_117 [label="Commit(redis, x => x.PersistJob(''my-job''))", span="120-120", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_19 [label="Entry Mock<IScheduleInstantFactory>.cstr", span="", cluster="Mock<IScheduleInstantFactory>.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m28_29 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="RedisWriteOnlyTransactionFacts.cs"];
m28_21 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_23 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RedisWriteOnlyTransactionFacts.cs"];
m28_30 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_31 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_37 [label="x.GetInstant(It.IsNotNull<CrontabSchedule>(), It.IsNotNull<TimeZoneInfo>())", span="42-42", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_38 [label="Exit lambda expression", span="42-42", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_41 [label="_instant.Object", span="43-43", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_42 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_39 [label="Entry Unk.GetInstant", span="", cluster="Unk.GetInstant", file="RedisWriteOnlyTransactionFacts.cs"];
m28_40 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_59 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisWriteOnlyTransactionFacts.cs"];
m28_51 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_55 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_58 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_43 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_44 [label="Console.WriteLine()", span="48-48", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_52 [label="x.GetAllItemsFromSet(''recurring-jobs'')", span="55-55", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_53 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_56 [label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="58-58", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_57 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_60 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_65 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object))", span="67-69", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_66 [label="Assert.Equal(''storage'', exception.ParamName)", span="71-71", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_71 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_67 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="65-65", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_68 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisWriteOnlyTransactionFacts.cs"];
m28_69 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_70 [label="new RecurringJobScheduler(null, _client.Object, _instantFactory.Object, _throttler.Object)", span="69-69", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_81 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object))", span="87-89", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_84 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_88 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, _client.Object, _instantFactory.Object, null))", span="97-99", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m28_87 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_73 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_74 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_storage.Object, null, _instantFactory.Object, _throttler.Object))", span="77-79", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m28_75 [label="Assert.Equal(''client'', exception.ParamName)", span="81-81", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_76 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_77 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_82 [label="Assert.Equal(''instantFactory'', exception.ParamName)", span="91-91", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_83 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="85-85", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_85 [label="new RecurringJobScheduler(_storage.Object, _client.Object, null, _throttler.Object)", span="89-89", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_86 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_89 [label="Assert.Equal(''throttler'', exception.ParamName)", span="101-101", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_93 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_101 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RedisWriteOnlyTransactionFacts.cs"];
m28_104 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_99 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_102 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_103 [label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="111-111", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_113 [label="Entry lambda expression", span="126-129", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_114 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="126-129", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_115 [label="Exit lambda expression", span="126-129", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_116 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisWriteOnlyTransactionFacts.cs"];
m28_118 [label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="129-129", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_119 [label="Exit lambda expression", span="128-129", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_122 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="131-135", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m28_121 [label="Entry lambda expression", span="131-135", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_123 [label="x.PersistJob(''my-job'')", span="120-120", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_124 [label="Entry lambda expression", span="133-135", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_129 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="137-141", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs", color=green, community=0];
m28_130 [label="Exit lambda expression", span="137-141", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_134 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_135 [label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="147-147", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_131 [label="Entry lambda expression", span="139-141", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_132 [label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="140-141", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_133 [label="Exit lambda expression", span="139-141", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m28_146 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_149 [label="Exit lambda expression", span="156-160", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_152 [label="Exit lambda expression", span="158-160", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_136 [label="var scheduler = CreateScheduler()", span="148-148", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_137 [label="scheduler.Execute(_token)", span="150-150", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_138 [label="_client.Verify(\r\n                x => x.Create(It.IsAny<Job>(), It.IsAny<EnqueuedState>()),\r\n                Times.Never)", span="152-154", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_139 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="156-160", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_140 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_141 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_142 [label="x.GetNextInstants(It.IsAny<DateTime?>())", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_147 [label="Entry lambda expression", span="156-160", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_148 [label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)))", span="156-160", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_150 [label="x.SerializeData()", span="137-137", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_151 [label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)", span="159-160", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_161 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_162 [label="x.GetNextInstants(time)", span="172-172", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_163 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_172 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_173 [label="Entry lambda expression", span="182-182", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_174 [label="scheduler.Execute(_token)", span="182-182", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_175 [label="Exit lambda expression", span="182-182", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_178 [label="var scheduler = CreateScheduler()", span="192-192", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_176 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_179 [label="Assert.DoesNotThrow(() => scheduler.Execute(_token))", span="195-195", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_180 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_184 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_192 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_198 [label="_recurringJob.Remove(''TimeZoneId'')", span="219-219", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_199 [label="var scheduler = CreateScheduler()", span="220-220", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_200 [label="scheduler.Execute(_token)", span="222-222", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_201 [label="_instantFactory.Verify(x => x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc))", span="224-224", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_202 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_205 [label="x.GetInstant(It.IsAny<CrontabSchedule>(), TimeZoneInfo.Utc)", span="224-224", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_203 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_204 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_206 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_213 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_214 [label="x.Create(It.IsAny<Job>(), It.IsAny<IState>())", span="235-235", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_215 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_216 [label="return new RecurringJobScheduler(\r\n                _storage.Object, \r\n                _client.Object, \r\n                _instantFactory.Object,\r\n                _throttler.Object);", span="240-244", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_218 [label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span="", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_217 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_219 [label=jobKey, span="", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_220 [label=time, span="", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_225 [label="Entry lambda expression", span="227-236", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_226 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="229-229", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_227 [label="Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_228 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="233-233", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_229 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="234-234", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_232 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_230 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="235-235", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_231 [label="Exit lambda expression", span="227-236", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_233 [label="x.DecrementCounter(''entry'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_234 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_239 [label="Entry lambda expression", span="242-247", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_240 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value''))", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_241 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="246-246", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_244 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_242 [label="Exit lambda expression", span="242-247", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_245 [label="x.AddToSet(''my-set'', ''my-value'')", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_246 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_251 [label="Entry lambda expression", span="253-259", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_252 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2))", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_253 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="257-257", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_254 [label="Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3)", span="258-258", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_257 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_255 [label="Exit lambda expression", span="253-259", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_258 [label="x.AddToSet(''my-set'', ''my-value'', 3.2)", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_259 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_264 [label="Entry lambda expression", span="265-272", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_265 [label="redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'')", span="267-267", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_266 [label="Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''))", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_267 [label="Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="271-271", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_270 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_268 [label="Exit lambda expression", span="265-272", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_271 [label="x.RemoveFromSet(''my-set'', ''my-value'')", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_272 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_277 [label="Entry lambda expression", span="278-285", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_278 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="280-280", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_279 [label="Commit(redis, x => x.InsertToList(''list'', ''new-value''))", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_280 [label="Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="284-284", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_283 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_281 [label="Exit lambda expression", span="278-285", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_284 [label="x.InsertToList(''list'', ''new-value'')", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_285 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_290 [label="Entry lambda expression", span="291-301", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_291 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="293-293", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_292 [label="redis.AddItemToList(''hangfire:list'', ''another-value'')", span="294-294", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_293 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="295-295", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_294 [label="Commit(redis, x => x.RemoveFromList(''list'', ''value''))", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_295 [label="Assert.Equal(1, redis.GetListCount(''hangfire:list''))", span="299-299", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_296 [label="Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="300-300", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_298 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_297 [label="Exit lambda expression", span="291-301", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_299 [label="x.RemoveFromList(''list'', ''value'')", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_300 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_305 [label="Entry lambda expression", span="307-319", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_306 [label="redis.AddItemToList(''hangfire:list'', ''1'')", span="309-309", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_307 [label="redis.AddItemToList(''hangfire:list'', ''2'')", span="310-310", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_308 [label="redis.AddItemToList(''hangfire:list'', ''3'')", span="311-311", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_309 [label="redis.AddItemToList(''hangfire:list'', ''4'')", span="312-312", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_310 [label="Commit(redis, x => x.TrimList(''list'', 1, 2))", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_311 [label="Assert.Equal(2, redis.GetListCount(''hangfire:list''))", span="316-316", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_312 [label="Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0))", span="317-317", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_313 [label="Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1))", span="318-318", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_315 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_314 [label="Exit lambda expression", span="307-319", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_316 [label="x.TrimList(''list'', 1, 2)", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_317 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_91 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''));\r\n            })", span="94-106", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="RedisWriteOnlyTransactionFacts.cs", color=red, community=0];
m28_128 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_78 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransactionFacts.cs"];
m28_92 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_183 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_36 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_32 [label="x.GetNextInstants(It.IsAny<DateTime?>())", span="38-38", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m28_61 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="RedisWriteOnlyTransactionFacts.cs"];
m28_171 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_144 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RedisWriteOnlyTransactionFacts.cs"];
m28_170 [label="UseConnection(redis =>\r\n            {\r\n                redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'');\r\n\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="171-178", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_182 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry''));\r\n\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero);\r\n            })", span="184-192", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_194 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_33 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_49 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisWriteOnlyTransactionFacts.cs"];
m28_48 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RedisWriteOnlyTransactionFacts.cs"];
m28_260 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_331 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_24 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", file="RedisWriteOnlyTransactionFacts.cs"];
m28_90 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_324 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="RedisWriteOnlyTransactionFacts.cs"];
m28_26 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="RedisWriteOnlyTransactionFacts.cs"];
m28_286 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisWriteOnlyTransactionFacts.cs"];
m28_50 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="RedisWriteOnlyTransactionFacts.cs"];
m28_169 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="RedisWriteOnlyTransactionFacts.cs"];
m28_221 [label=scheduler, span="", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_325 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_274 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_275 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.InsertToList(''list'', ''new-value''));\r\n\r\n                Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="278-285", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_276 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_46 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_282 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RedisWriteOnlyTransactionFacts.cs"];
m28_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="RedisWriteOnlyTransactionFacts.cs"];
m28_301 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_302 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_303 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''1'');\r\n                redis.AddItemToList(''hangfire:list'', ''2'');\r\n                redis.AddItemToList(''hangfire:list'', ''3'');\r\n                redis.AddItemToList(''hangfire:list'', ''4'');\r\n\r\n                Commit(redis, x => x.TrimList(''list'', 1, 2));\r\n\r\n                Assert.Equal(2, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0));\r\n                Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1));\r\n            })", span="307-319", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_304 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_243 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="RedisWriteOnlyTransactionFacts.cs"];
m28_25 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_319 [label="var transaction = new RedisWriteOnlyTransaction(redis.CreateTransaction())", span="324-324", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_320 [label="action(transaction)", span="326-326", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_321 [label="transaction.Commit()", span="327-327", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_322 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_327 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_328 [label="var redis = RedisUtils.CreateClient()", span="333-333", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_329 [label="action(redis)", span="335-335", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_330 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="RedisWriteOnlyTransactionFacts.cs"];
m28_256 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="RedisWriteOnlyTransactionFacts.cs"];
m28_287 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_288 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n                redis.AddItemToList(''hangfire:list'', ''another-value'');\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.RemoveFromList(''list'', ''value''));\r\n\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="291-301", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_289 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_223 [label=timeZone, span="", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_222 [label=scheduler, span="", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_224 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_126 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="RedisWriteOnlyTransactionFacts.cs"];
m28_54 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="RedisWriteOnlyTransactionFacts.cs"];
m28_332 [label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", span="", file="RedisWriteOnlyTransactionFacts.cs"];
m28_333 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m28_334 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m28_335 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m28_336 [label=state, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m29_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="RetryAttributeFacts.cs"];
m29_5 [label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="RetryAttributeFacts.cs"];
m29_6 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="23-23", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="RetryAttributeFacts.cs"];
m29_7 [label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="RetryAttributeFacts.cs"];
m29_0 [label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="15-15", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="RetryAttributeFacts.cs"];
m29_1 [label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="17-17", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="RetryAttributeFacts.cs"];
m29_2 [label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="15-15", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="RetryAttributeFacts.cs"];
m29_19 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RetryAttributeFacts.cs"];
m29_29 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RetryAttributeFacts.cs"];
m29_21 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RetryAttributeFacts.cs"];
m29_17 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RetryAttributeFacts.cs"];
m29_8 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RetryAttributeFacts.cs"];
m29_14 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="39-42", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="RetryAttributeFacts.cs"];
m29_12 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="RetryAttributeFacts.cs"];
m29_13 [label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="35-37", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="RetryAttributeFacts.cs"];
m29_15 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="44-51", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="RetryAttributeFacts.cs"];
m29_16 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="RetryAttributeFacts.cs"];
m29_30 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="RetryAttributeFacts.cs"];
m29_20 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="RetryAttributeFacts.cs"];
m29_23 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="57-60", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="RetryAttributeFacts.cs"];
m29_22 [label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="55-55", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="RetryAttributeFacts.cs"];
m29_24 [label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="55-55", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="RetryAttributeFacts.cs"];
m29_18 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RetryAttributeFacts.cs"];
m29_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RetryAttributeFacts.cs"];
m29_9 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="RetryAttributeFacts.cs"];
m29_10 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="29-29", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="RetryAttributeFacts.cs"];
m29_11 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="RetryAttributeFacts.cs"];
m29_25 [label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="RetryAttributeFacts.cs"];
m29_26 [label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="68-70", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="RetryAttributeFacts.cs"];
m29_27 [label="Assert.AreEqual(state, jobState)", span="72-72", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="RetryAttributeFacts.cs"];
m29_28 [label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="RetryAttributeFacts.cs"];
m30_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs"];
m30_2 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m30_3 [label="EnqueueAt = enqueueAt", span="34-34", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m30_4 [label="ScheduledAt = DateTime.UtcNow", span="35-35", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m30_5 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m30_25 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs"];
m30_11 [label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_12 [label="var scheduledState = context.NewState as ScheduledState", span="56-56", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_16 [label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="65-65", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_13 [label="scheduledState == null", span="57-57", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_15 [label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="64-64", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_14 [label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="59-61", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_17 [label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_20 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledState.cs"];
m30_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs"];
m30_1 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs"];
m30_6 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="43-43", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m30_7 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.ToStringTimestamp(ScheduledAt) }\r\n            };", span="45-49", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs", color=green, community=0];
m30_8 [label="Exit HangFire.States.ScheduledState.SerializeData()", span="43-43", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m30_22 [label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="68-68", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_23 [label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="70-70", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_24 [label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="68-68", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m30_21 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs"];
m30_19 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ScheduledState.cs"];
m30_10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledState.cs"];
m30_18 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ScheduledState.cs"];
m30_26 [label="HangFire.States.ScheduledState", span="", file="ScheduledState.cs"];
m31_92 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="ScheduledStateFacts.cs"];
m31_9 [label="Entry WorkerContext.cstr", span="", cluster="WorkerContext.cstr", file="ScheduledStateFacts.cs"];
m31_0 [label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="ScheduledStateFacts.cs"];
m31_1 [label="_state = new SucceededState(''Some reason'')", span="23-23", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="ScheduledStateFacts.cs"];
m31_2 [label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="21-21", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="ScheduledStateFacts.cs"];
m31_3 [label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string)", file="ScheduledStateFacts.cs"];
m31_105 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="144-144", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ScheduledStateFacts.cs"];
m31_106 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="146-151", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ScheduledStateFacts.cs"];
m31_107 [label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="153-159", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ScheduledStateFacts.cs"];
m31_108 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="144-144", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ScheduledStateFacts.cs"];
m31_144 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="ScheduledStateFacts.cs"];
m31_126 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="ScheduledStateFacts.cs"];
m31_62 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="ScheduledStateFacts.cs"];
m31_97 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ScheduledStateFacts.cs"];
m31_145 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="ScheduledStateFacts.cs"];
m31_40 [label="Hangfire.Core.Tests.Server.WorkerContextFacts", span="", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ScheduledStateFacts.cs"];
m31_42 [label="_stateMock.Setup(x => x.GetProperties()).Returns(\r\n                table.Rows.ToDictionary(x => x[''Name''], x => x[''Value'']))", span="65-66", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ScheduledStateFacts.cs"];
m31_41 [label="Given(String.Format(''a '{0}' state'', state))", span="64-64", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ScheduledStateFacts.cs"];
m31_43 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="62-62", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ScheduledStateFacts.cs"];
m31_5 [label="_failedException = new InvalidOperationException(''Hello'')", span="29-29", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="ScheduledStateFacts.cs"];
m31_46 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ScheduledStateFacts.cs"];
m31_78 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="ScheduledStateFacts.cs"];
m31_160 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="233-233", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ScheduledStateFacts.cs"];
m31_162 [label="Assert.AreEqual(state, job[''State''])", span="236-236", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ScheduledStateFacts.cs"];
m31_161 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="235-235", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ScheduledStateFacts.cs"];
m31_163 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="233-233", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ScheduledStateFacts.cs"];
m31_180 [label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="261-261", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="ScheduledStateFacts.cs"];
m31_181 [label="_stateMock.Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)), \r\n                Times.Once)", span="263-265", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="ScheduledStateFacts.cs"];
m31_182 [label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", span="261-261", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled()", file="ScheduledStateFacts.cs"];
m31_93 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ScheduledStateFacts.cs"];
m31_83 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="109-109", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ScheduledStateFacts.cs"];
m31_84 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="111-116", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ScheduledStateFacts.cs"];
m31_85 [label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="118-124", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ScheduledStateFacts.cs"];
m31_86 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="109-109", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ScheduledStateFacts.cs"];
m31_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledStateFacts.cs"];
m31_6 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_7 [label="new WorkerContext(null, Queues, WorkerNumber)", span="17-17", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_176 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="248-248", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_175 [label="DictionaryAssert.ContainsFollowingItems(table, history)", span="257-257", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_171 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="250-251", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_170 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="248-248", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_173 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="254-254", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_174 [label="Assert.IsNotNull(history, entry)", span="255-255", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_172 [label="Assert.IsNotNull(entry)", span="252-252", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_44 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ScheduledStateFacts.cs"];
m31_29 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_104 [label="Entry Unk.PopItemFromList", span="", cluster="Unk.PopItemFromList", file="ScheduledStateFacts.cs"];
m31_137 [label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="200-200", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ScheduledStateFacts.cs"];
m31_140 [label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="205-205", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ScheduledStateFacts.cs"];
m31_141 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="206-206", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ScheduledStateFacts.cs"];
m31_139 [label="var timestamp = JobHelper.FromTimestamp((long)score)", span="203-203", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ScheduledStateFacts.cs"];
m31_138 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="202-202", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ScheduledStateFacts.cs"];
m31_142 [label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="200-200", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ScheduledStateFacts.cs"];
m31_77 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="ScheduledStateFacts.cs"];
m31_121 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="175-175", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_122 [label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="177-177", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_123 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="178-178", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_124 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="175-175", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_17 [label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="ScheduledStateFacts.cs"];
m31_94 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="128-128", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="ScheduledStateFacts.cs"];
m31_95 [label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="130-132", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="ScheduledStateFacts.cs"];
m31_96 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="128-128", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="ScheduledStateFacts.cs"];
m31_179 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledStateFacts.cs"];
m31_143 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="ScheduledStateFacts.cs"];
m31_79 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="103-103", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="ScheduledStateFacts.cs"];
m31_80 [label="Assert.AreEqual(name, _state.StateName)", span="105-105", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="ScheduledStateFacts.cs"];
m31_81 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="103-103", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="ScheduledStateFacts.cs"];
m31_146 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="210-210", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_150 [label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="216-216", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_151 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="217-217", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_149 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="214-214", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_148 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="213-213", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_147 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="212-212", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_152 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="210-210", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ScheduledStateFacts.cs"];
m31_82 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ScheduledStateFacts.cs"];
m31_136 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="ScheduledStateFacts.cs"];
m31_10 [label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="ScheduledStateFacts.cs"];
m31_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerContext(ServerId, null, WorkerNumber))", span="25-26", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="ScheduledStateFacts.cs"];
m31_12 [label="Assert.Equal(''queues'', exception.ParamName)", span="28-28", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="ScheduledStateFacts.cs"];
m31_103 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="ScheduledStateFacts.cs"];
m31_22 [label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="ScheduledStateFacts.cs"];
m31_24 [label="_stateMock = new Mock<JobState>(''SomeReason'')", span="54-54", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ScheduledStateFacts.cs"];
m31_25 [label="_stateMock.Setup(x => x.StateName).Returns(state)", span="55-55", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ScheduledStateFacts.cs"];
m31_26 [label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="56-56", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ScheduledStateFacts.cs"];
m31_120 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m31_23 [label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="52-52", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ScheduledStateFacts.cs"];
m31_38 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_39 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="ScheduledStateFacts.cs"];
m31_30 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ScheduledStateFacts.cs"];
m31_19 [label="Assert.Equal(ServerId, context.ServerId)", span="36-36", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="ScheduledStateFacts.cs"];
m31_20 [label="Assert.Equal(Queues, context.Queues)", span="37-37", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", color=green, community=0, file="ScheduledStateFacts.cs"];
m31_21 [label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="38-38", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="ScheduledStateFacts.cs"];
m31_8 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_18 [label="var context = CreateContext()", span="34-34", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="ScheduledStateFacts.cs"];
m31_168 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="240-240", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_166 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="242-243", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_165 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="240-240", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_167 [label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="244-244", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_27 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_28 [label="new WorkerContext(null)", span="45-45", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_32 [label="var context = CreateContext()", span="51-51", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_177 [label="Entry Unk.RemoveStartFromList", span="", cluster="Unk.RemoveStartFromList", file="ScheduledStateFacts.cs"];
m31_13 [label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="ScheduledStateFacts.cs"];
m31_14 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_15 [label="new WorkerContext(ServerId, null, WorkerNumber)", span="26-26", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_16 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_113 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="163-163", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_114 [label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="165-165", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_115 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="163-163", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_72 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="ScheduledStateFacts.cs"];
m31_56 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ScheduledStateFacts.cs"];
m31_58 [label="_state.Apply(transaction, JobSteps.DefaultJobId)", span="74-74", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ScheduledStateFacts.cs"];
m31_57 [label="var transaction = Redis.Client.CreateTransaction()", span="72-72", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ScheduledStateFacts.cs"];
m31_59 [label="transaction.Commit()", span="75-75", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ScheduledStateFacts.cs"];
m31_60 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="70-70", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ScheduledStateFacts.cs"];
m31_87 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="ScheduledStateFacts.cs"];
m31_116 [label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="169-169", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_117 [label="DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="171-171", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_118 [label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="169-169", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="ScheduledStateFacts.cs"];
m31_164 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ScheduledStateFacts.cs"];
m31_109 [label="Entry lambda expression", span="153-159", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_33 [label="var contextCopy = new WorkerContext(context)", span="52-52", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_36 [label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="56-56", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_47 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_50 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_53 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_184 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_35 [label="Assert.Equal(Queues, context.Queues)", span="55-55", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_34 [label="Assert.Equal(ServerId, context.ServerId)", span="54-54", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_37 [label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_49 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_48 [label="x.GetProperties()", span="65-65", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_52 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_51 [label="x[''Name'']", span="66-66", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_55 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_54 [label="x[''Value'']", span="66-66", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_185 [label="x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_186 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_187 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_190 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_90 [label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="121-123", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_111 [label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="156-158", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_189 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_188 [label="y != null", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_192 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_191 [label="y == JobSteps.DefaultJobId", span="264-264", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_88 [label="Entry lambda expression", span="118-124", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_89 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="120-120", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_91 [label="Exit lambda expression", span="118-124", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_110 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="155-155", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_112 [label="Exit lambda expression", span="153-159", cluster="lambda expression", file="ScheduledStateFacts.cs"];
m31_178 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ScheduledStateFacts.cs"];
m31_159 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="ScheduledStateFacts.cs"];
m31_73 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ScheduledStateFacts.cs"];
m31_75 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="99-99", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ScheduledStateFacts.cs"];
m31_74 [label="var stateMachine = new StateMachine(Redis.Client)", span="98-98", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ScheduledStateFacts.cs"];
m31_76 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="96-96", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ScheduledStateFacts.cs"];
m31_45 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="ScheduledStateFacts.cs"];
m31_71 [label="Entry HangFire.States.StateMachine.GetStateDescriptor(string)", span="26-26", cluster="HangFire.States.StateMachine.GetStateDescriptor(string)", file="ScheduledStateFacts.cs"];
m31_63 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="ScheduledStateFacts.cs"];
m31_125 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="ScheduledStateFacts.cs"];
m31_130 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="188-188", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="ScheduledStateFacts.cs"];
m31_131 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="190-190", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="ScheduledStateFacts.cs"];
m31_132 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="188-188", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="ScheduledStateFacts.cs"];
m31_98 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="ScheduledStateFacts.cs"];
m31_156 [label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="227-227", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="ScheduledStateFacts.cs"];
m31_157 [label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="229-229", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="ScheduledStateFacts.cs"];
m31_158 [label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="227-227", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="ScheduledStateFacts.cs"];
m31_153 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="221-221", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="ScheduledStateFacts.cs"];
m31_154 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="223-223", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="ScheduledStateFacts.cs"];
m31_155 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="221-221", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="ScheduledStateFacts.cs"];
m31_64 [label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_66 [label="var descriptor = StateMachine.GetStateDescriptor(_state.StateName)", span="84-84", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_65 [label="var transaction = Redis.Client.CreateTransaction()", span="82-82", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_67 [label="descriptor != null", span="86-86", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_68 [label="descriptor.Unapply(transaction, JobSteps.DefaultJobId)", span="88-88", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_69 [label="transaction.Commit()", span="91-91", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_70 [label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="80-80", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ScheduledStateFacts.cs"];
m31_169 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="ScheduledStateFacts.cs"];
m31_31 [label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49", cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="ScheduledStateFacts.cs"];
m31_133 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="194-194", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="ScheduledStateFacts.cs"];
m31_134 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="196-196", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="ScheduledStateFacts.cs"];
m31_135 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="194-194", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="ScheduledStateFacts.cs"];
m31_183 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ScheduledStateFacts.cs"];
m31_99 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="136-136", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_100 [label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="138-138", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_101 [label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="139-140", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_102 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="136-136", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ScheduledStateFacts.cs"];
m31_127 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="182-182", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_128 [label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="184-184", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_129 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="182-182", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="ScheduledStateFacts.cs"];
m31_61 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="ScheduledStateFacts.cs"];
m31_119 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="ScheduledStateFacts.cs"];
m31_193 [label="HangFire.Tests.States.StateSteps", span="", file="ScheduledStateFacts.cs"];
m32_0 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_4 [label="_stateContext = new StateContext(JobId, job)", span="25-25", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_5 [label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new ScheduledState(EnqueueAt), \r\n                null)", span="26-30", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_6 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs"];
m32_8 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="ScheduledStateHandlerFacts.cs"];
m32_28 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="ScheduledStateHandlerFacts.cs"];
m32_23 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m32_24 [label="var handler = new ScheduledState.Handler()", span="43-43", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m32_25 [label="handler.Apply(_context, _transaction.Object)", span="44-44", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m32_26 [label="_transaction.Verify(x => x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(EnqueueAt)))", span="46-47", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m32_27 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs"];
m32_35 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="51-51", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m32_36 [label="var handler = new ScheduledState.Handler()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m32_37 [label="handler.Unapply(_context, _transaction.Object)", span="54-54", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m32_38 [label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="56-56", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m32_39 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="51-51", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs"];
m32_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduledStateHandlerFacts.cs"];
m32_21 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="52-52", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="ScheduledStateHandlerFacts.cs"];
m32_51 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledStateHandlerFacts.cs"];
m32_10 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="ScheduledStateHandlerFacts.cs"];
m32_34 [label="Entry Unk.AddToSet", span="", cluster="Unk.AddToSet", file="ScheduledStateHandlerFacts.cs"];
m32_33 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledStateHandlerFacts.cs"];
m32_11 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="ScheduledStateHandlerFacts.cs"];
m32_50 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="ScheduledStateHandlerFacts.cs"];
m32_40 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="ScheduledStateHandlerFacts.cs"];
m32_45 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", span="60-60", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_46 [label="var handler = new ScheduledState.Handler()", span="62-62", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_47 [label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<State>().Object, null)", span="63-64", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", color=red, community=0, file="ScheduledStateHandlerFacts.cs"];
m32_48 [label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="66-67", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_49 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", span="60-60", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ThrowsAnException_WhenGivenStateIsNotScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_52 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_13 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_14 [label="Console.WriteLine()", span="21-21", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_15 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_30 [label="Entry lambda expression", span="46-47", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_31 [label="x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(EnqueueAt))", span="46-47", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_32 [label="Exit lambda expression", span="46-47", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_41 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_42 [label="x.RemoveFromSet(''schedule'', JobId)", span="56-56", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_43 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_53 [label="handler.Apply(context, _transaction.Object)", span="67-67", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_54 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ScheduledStateHandlerFacts.cs"];
m32_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ScheduledStateHandlerFacts.cs"];
m32_17 [label="Entry HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_18 [label="var handler = new ScheduledState.Handler()", span="36-36", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_19 [label="Assert.Equal(ScheduledState.StateName, handler.StateName)", span="37-37", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_20 [label="Exit HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs"];
m32_12 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateHandlerFacts.cs"];
m32_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ScheduledStateHandlerFacts.cs"];
m32_44 [label="Entry Unk.RemoveFromSet", span="", cluster="Unk.RemoveFromSet", file="ScheduledStateHandlerFacts.cs"];
m32_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ScheduledStateHandlerFacts.cs"];
m32_16 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="ScheduledStateHandlerFacts.cs"];
m32_55 [label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts", span="", file="ScheduledStateHandlerFacts.cs"];
m32_56 [label=handler, span="", file="ScheduledStateHandlerFacts.cs"];
m32_57 [label=context, span="", file="ScheduledStateHandlerFacts.cs"];
m33_0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_1 [label="storage == null", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_3 [label="_storage = storage", span="38-38", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_4 [label="_interval = interval", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_19 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePollerFacts.cs"];
m33_24 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="SchedulePollerFacts.cs"];
m33_31 [label="return string.Format(@''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [{0}].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{0}].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'', storage.GetSchemaName());", span="74-100", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="SchedulePollerFacts.cs"];
m33_32 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="SchedulePollerFacts.cs"];
m33_25 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SchedulePollerFacts.cs"];
m33_30 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="SchedulePollerFacts.cs"];
m33_7 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_8 [label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_12 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_15 [label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_9 [label="int removedCount = 0", span="46-46", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_10 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_11 [label="removedCount >= NumberOfRecordsInSinglePass", span="57-57", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_14 [label="removedCount >= NumberOfRecordsInSinglePass", span="62-62", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_13 [label="cancellationToken.ThrowIfCancellationRequested()", span="60-60", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_16 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs"];
m33_34 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SchedulePollerFacts.cs"];
m33_17 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="SchedulePollerFacts.cs"];
m33_26 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="SchedulePollerFacts.cs"];
m33_27 [label="return GetType().ToString();", span="69-69", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="SchedulePollerFacts.cs"];
m33_28 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="SchedulePollerFacts.cs"];
m33_18 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SchedulePollerFacts.cs"];
m33_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SchedulePollerFacts.cs"];
m33_21 [label="Entry lambda expression", span="50-55", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m33_22 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m33_23 [label="Exit lambda expression", span="50-55", cluster="lambda expression", file="SchedulePollerFacts.cs"];
m33_33 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", file="SchedulePollerFacts.cs"];
m33_20 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SchedulePollerFacts.cs"];
m33_35 [label="Hangfire.SqlServer.CountersAggregator", span="", file="SchedulePollerFacts.cs"];
m34_0 [label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="SharedWorkerContext.cs"];
m34_1 [label="serverId == null", span="31-31", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_2 [label="throw new ArgumentNullException(''serverId'');", span="31-31", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_3 [label="queues == null", span="32-32", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_4 [label="throw new ArgumentNullException(''queues'');", span="32-32", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_5 [label="storage == null", span="33-33", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_6 [label="throw new ArgumentNullException(''storage'');", span="33-33", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_7 [label="performanceProcess == null", span="34-34", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_8 [label="throw new ArgumentNullException(''performanceProcess'');", span="34-34", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_9 [label="activator == null", span="35-35", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_10 [label="throw new ArgumentNullException(''activator'');", span="35-35", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_11 [label="stateMachineFactory == null", span="36-36", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_12 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="36-36", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_13 [label="ServerId = serverId", span="38-38", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_14 [label="Queues = queues", span="39-39", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_15 [label="Storage = storage", span="40-40", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_16 [label="PerformanceProcess = performanceProcess", span="41-41", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_17 [label="Activator = activator", span="42-42", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_18 [label="StateMachineFactory = stateMachineFactory", span="43-43", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=green, community=0, file="SharedWorkerContext.cs"];
m34_19 [label="Exit HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="SharedWorkerContext.cs"];
m34_23 [label="HangFire.Server.SharedWorkerContext", span="", file="SharedWorkerContext.cs"];
m35_10 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="27-27", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SharedWorkerContextFacts.cs"];
m35_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SharedWorkerContext(\r\n                    null, Queues, _storage.Object, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object))", span="29-31", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_12 [label="Assert.Equal(''serverId'', exception.ParamName)", span="33-33", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_13 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="27-27", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SharedWorkerContextFacts.cs"];
m35_14 [label="Entry Unk.>", span="", cluster="Unk.>", file="SharedWorkerContextFacts.cs"];
m35_8 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SharedWorkerContextFacts.cs"];
m35_64 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.CreateContext()", span="113-113", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CreateContext()", file="SharedWorkerContextFacts.cs"];
m35_77 [label="return new SharedWorkerContext(\r\n                ServerId, Queues, _storage.Object, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object);", span="115-116", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CreateContext()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_78 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.CreateContext()", span="113-113", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CreateContext()", file="SharedWorkerContextFacts.cs"];
m35_65 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="SharedWorkerContextFacts.cs"];
m35_76 [label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(HangFire.Server.SharedWorkerContext)", span="46-46", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(HangFire.Server.SharedWorkerContext)", file="SharedWorkerContextFacts.cs"];
m35_0 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", span="18-18", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", file="SharedWorkerContextFacts.cs"];
m35_1 [label="_performanceProcess = new Mock<IJobPerformanceProcess>()", span="20-20", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_2 [label="_activator = new Mock<JobActivator>()", span="21-21", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_3 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_4 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_5 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", span="18-18", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.SharedWorkerContextFacts()", file="SharedWorkerContextFacts.cs"];
m35_19 [label="Entry SharedWorkerContext.cstr", span="", cluster="SharedWorkerContext.cstr", file="SharedWorkerContextFacts.cs"];
m35_55 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="87-87", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="SharedWorkerContextFacts.cs"];
m35_56 [label="var context = CreateContext()", span="89-89", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_57 [label="Assert.Equal(ServerId, context.ServerId)", span="91-91", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_58 [label="Assert.Same(Queues, context.Queues)", span="92-92", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_59 [label="Assert.Same(_storage.Object, context.Storage)", span="93-93", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_60 [label="Assert.Same(_performanceProcess.Object, context.PerformanceProcess)", span="94-94", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_61 [label="Assert.Same(_activator.Object, context.Activator)", span="95-95", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_62 [label="Assert.Same(_stateMachineFactory.Object, context.StateMachineFactory)", span="96-96", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_63 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="87-87", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="SharedWorkerContextFacts.cs"];
m35_66 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", span="100-100", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", file="SharedWorkerContextFacts.cs"];
m35_67 [label="var context = CreateContext()", span="102-102", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_68 [label="var contextCopy = new SharedWorkerContext(context)", span="103-103", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_69 [label="Assert.Equal(context.ServerId, contextCopy.ServerId)", span="105-105", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_70 [label="Assert.Same(context.Queues, contextCopy.Queues)", span="106-106", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_71 [label="Assert.Same(context.Storage, contextCopy.Storage)", span="107-107", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_72 [label="Assert.Same(context.PerformanceProcess, contextCopy.PerformanceProcess)", span="108-108", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_73 [label="Assert.Same(context.Activator, contextCopy.Activator)", span="109-109", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_74 [label="Assert.Same(context.StateMachineFactory, contextCopy.StateMachineFactory)", span="110-110", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_75 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", span="100-100", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.CopyCtor_CorrectlyInitializes_AllProperties()", file="SharedWorkerContextFacts.cs"];
m35_15 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SharedWorkerContextFacts.cs"];
m35_41 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="67-67", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="SharedWorkerContextFacts.cs"];
m35_42 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId, Queues, _storage.Object, _performanceProcess.Object, null, _stateMachineFactory.Object))", span="69-71", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_43 [label="Assert.Equal(''activator'', exception.ParamName)", span="73-73", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_44 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="67-67", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="SharedWorkerContextFacts.cs"];
m35_48 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="77-77", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SharedWorkerContextFacts.cs"];
m35_49 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId, Queues, _storage.Object, _performanceProcess.Object, _activator.Object, null))", span="79-81", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_50 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="83-83", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_51 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="77-77", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SharedWorkerContextFacts.cs"];
m35_9 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SharedWorkerContextFacts.cs"];
m35_52 [label="Entry lambda expression", span="80-81", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_16 [label="Entry lambda expression", span="30-31", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_17 [label="new SharedWorkerContext(\r\n                    null, Queues, _storage.Object, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object)", span="30-31", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_18 [label="Exit lambda expression", span="30-31", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_24 [label="Entry lambda expression", span="40-41", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_25 [label="new SharedWorkerContext(\r\n                    ServerId, null, _storage.Object, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object)", span="40-41", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_26 [label="Exit lambda expression", span="40-41", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_31 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_32 [label="new SharedWorkerContext(\r\n                    ServerId, Queues, null, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object)", span="50-51", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_33 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_38 [label="Entry lambda expression", span="60-61", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_39 [label="new SharedWorkerContext(\r\n                    ServerId, Queues, _storage.Object, null, _activator.Object, _stateMachineFactory.Object)", span="60-61", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_40 [label="Exit lambda expression", span="60-61", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_45 [label="Entry lambda expression", span="70-71", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_46 [label="new SharedWorkerContext(\r\n                    ServerId, Queues, _storage.Object, _performanceProcess.Object, null, _stateMachineFactory.Object)", span="70-71", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_47 [label="Exit lambda expression", span="70-71", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_53 [label="new SharedWorkerContext(\r\n                    ServerId, Queues, _storage.Object, _performanceProcess.Object, _activator.Object, null)", span="80-81", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_54 [label="Exit lambda expression", span="80-81", cluster="lambda expression", file="SharedWorkerContextFacts.cs"];
m35_27 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="47-47", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SharedWorkerContextFacts.cs"];
m35_28 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId, Queues, null, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object))", span="49-51", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_29 [label="Assert.Equal(''storage'', exception.ParamName)", span="53-53", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_30 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="47-47", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SharedWorkerContextFacts.cs"];
m35_20 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="37-37", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="SharedWorkerContextFacts.cs"];
m35_21 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId, null, _storage.Object, _performanceProcess.Object, _activator.Object, _stateMachineFactory.Object))", span="39-41", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_22 [label="Assert.Equal(''queues'', exception.ParamName)", span="43-43", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_23 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="37-37", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="SharedWorkerContextFacts.cs"];
m35_34 [label="Entry HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", span="57-57", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", file="SharedWorkerContextFacts.cs"];
m35_35 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId, Queues, _storage.Object, null, _activator.Object, _stateMachineFactory.Object))", span="59-61", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", color=green, community=1, file="SharedWorkerContextFacts.cs"];
m35_36 [label="Assert.Equal(''performanceProcess'', exception.ParamName)", span="63-63", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", color=green, community=0, file="SharedWorkerContextFacts.cs"];
m35_37 [label="Exit HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", span="57-57", cluster="HangFire.Core.Tests.Server.SharedWorkerContextFacts.Ctor_ThrowsAnException_WhenPerformanceProcessIsNull()", file="SharedWorkerContextFacts.cs"];
m35_6 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="SharedWorkerContextFacts.cs"];
m35_7 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="SharedWorkerContextFacts.cs"];
m35_79 [label="HangFire.Core.Tests.Server.SharedWorkerContextFacts", span="", file="SharedWorkerContextFacts.cs"];
m36_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SharedWorkerContextMock.cs"];
m36_0 [label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="SharedWorkerContextMock.cs"];
m36_1 [label="ServerId = ''server''", span="13-13", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m36_2 [label="Queues = new[] { ''default'' }", span="14-14", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m36_3 [label="Storage = new Mock<JobStorage>()", span="15-15", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m36_4 [label="PerformanceProcess = new Mock<IJobPerformanceProcess>()", span="16-16", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m36_5 [label="Activator = new Mock<JobActivator>()", span="17-17", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m36_6 [label="StateMachineFactory = new Mock<IStateMachineFactory>()", span="18-18", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=0, file="SharedWorkerContextMock.cs"];
m36_7 [label="_context = new Lazy<SharedWorkerContext>(\r\n                () => new SharedWorkerContext(\r\n                    ServerId,\r\n                    Queues,\r\n                    Storage.Object,\r\n                    PerformanceProcess.Object,\r\n                    Activator.Object,\r\n                    StateMachineFactory.Object))", span="20-27", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", color=green, community=1, file="SharedWorkerContextMock.cs"];
m36_8 [label="Exit HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="SharedWorkerContextMock.cs"];
m36_13 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SharedWorkerContextMock.cs"];
m36_17 [label="Entry SharedWorkerContext.cstr", span="", cluster="SharedWorkerContext.cstr", file="SharedWorkerContextMock.cs"];
m36_9 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SharedWorkerContextMock.cs"];
m36_14 [label="Entry lambda expression", span="21-27", cluster="lambda expression", file="SharedWorkerContextMock.cs"];
m36_15 [label="new SharedWorkerContext(\r\n                    ServerId,\r\n                    Queues,\r\n                    Storage.Object,\r\n                    PerformanceProcess.Object,\r\n                    Activator.Object,\r\n                    StateMachineFactory.Object)", span="21-27", cluster="lambda expression", color=green, community=1, file="SharedWorkerContextMock.cs"];
m36_16 [label="Exit lambda expression", span="21-27", cluster="lambda expression", file="SharedWorkerContextMock.cs"];
m36_10 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="SharedWorkerContextMock.cs"];
m36_11 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="SharedWorkerContextMock.cs"];
m36_18 [label="HangFire.Core.Tests.SharedWorkerContextMock", span="", file="SharedWorkerContextMock.cs"];
m37_82 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_83 [label="AddToSet(key, value, 0.0)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_84 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_98 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_99 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="181-183", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_100 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_85 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m37_86 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m37_87 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="167-169", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m37_88 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m37_64 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_65 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_66 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_44 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_45 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="98-100", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_46 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="102-111", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_47 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_119 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs"];
m37_35 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_36 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="78-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_37 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="83-93", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_38 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m37_110 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m37_111 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="195-198", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m37_112 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="200-202", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m37_113 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m37_23 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m37_117 [label="_commandQueue.Enqueue(action)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m37_118 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="205-205", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m37_17 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m37_18 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs"];
m37_15 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m37_76 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_77 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_78 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_70 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_71 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_72 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_19 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs"];
m37_27 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_92 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_93 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="174-176", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_94 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_20 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_21 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="64-66", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_22 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m37_104 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_105 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="188-190", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_106 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_8 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_9 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="47-49", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_10 [label="_connection.EnlistTransaction(Transaction.Current)", span="51-51", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_13 [label="transaction.Complete()", span="58-58", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_11 [label=_commandQueue, span="53-53", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_12 [label="command(_connection)", span="55-55", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_14 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m37_16 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m37_42 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="SqlServerWriteOnlyTransaction.cs"];
m37_114 [label="Entry lambda expression", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_25 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_24 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_26 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_32 [label="Entry lambda expression", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_34 [label="Exit lambda expression", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_40 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_39 [label="Entry lambda expression", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_41 [label="Exit lambda expression", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_49 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_48 [label="Entry lambda expression", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_50 [label="Exit lambda expression", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_56 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_55 [label="Entry lambda expression", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_57 [label="Exit lambda expression", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_62 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_61 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_63 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_68 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_67 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_69 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_74 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_73 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_75 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_80 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_79 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_81 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_90 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_89 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_91 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_96 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_95 [label="Entry lambda expression", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_97 [label="Exit lambda expression", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_102 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_101 [label="Entry lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_103 [label="Exit lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_108 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_107 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_109 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_115 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_116 [label="Exit lambda expression", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m37_0 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m37_1 [label="connection == null", span="36-36", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m37_3 [label="_connection = connection", span="38-38", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m37_2 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m37_4 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m37_43 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs"];
m37_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs"];
m37_51 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_52 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="116-118", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_53 [label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="120-122", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_54 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_58 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_59 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_60 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_29 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_30 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="71-73", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_31 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m37_6 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m37_7 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m37_120 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_121 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_122 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_123 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_124 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_125 [label="HangFire.States.State", span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_126 [label=addAndSetStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_127 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_128 [label="HangFire.States.State", span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_129 [label=addStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_130 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_131 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_132 [label=enqueueJobSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_133 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_134 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_135 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_136 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_137 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_138 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_139 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_140 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_141 [label=double, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_142 [label=addSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_143 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_144 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_145 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_146 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_147 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_148 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_149 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_150 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_151 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m37_152 [label=trimSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m38_0 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="State.cs"];
m38_1 [label="return new Dictionary<string, string>();", span="29-29", cluster="HangFire.States.State.SerializeData()", color=red, community=0, file="State.cs"];
m38_2 [label="Exit HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="State.cs"];
m38_3 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="State.cs"];
m39_14 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="StateFacts.cs"];
m39_15 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="26-28", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", color=red, community=0, file="StateFacts.cs"];
m39_16 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="StateFacts.cs"];
m39_13 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="StateFacts.cs"];
m39_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="StateFacts.cs"];
m39_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="StateFacts.cs"];
m39_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="StateFacts.cs"];
m39_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="StateFacts.cs"];
m39_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="StateFacts.cs"];
m39_20 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="StateFacts.cs"];
m39_21 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="33-36", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="StateFacts.cs"];
m39_22 [label="_transaction.QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="38-40", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="StateFacts.cs"];
m39_23 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="StateFacts.cs"];
m39_9 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="StateFacts.cs"];
m39_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="StateFacts.cs"];
m39_7 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="19-21", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", color=red, community=0, file="StateFacts.cs"];
m39_8 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="StateFacts.cs"];
m39_24 [label="Entry lambda expression", span="38-40", cluster="lambda expression", file="StateFacts.cs"];
m39_11 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="19-21", cluster="lambda expression", color=red, community=0, file="StateFacts.cs"];
m39_10 [label="Entry lambda expression", span="19-21", cluster="lambda expression", file="StateFacts.cs"];
m39_12 [label="Exit lambda expression", span="19-21", cluster="lambda expression", file="StateFacts.cs"];
m39_18 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="26-28", cluster="lambda expression", color=red, community=0, file="StateFacts.cs"];
m39_17 [label="Entry lambda expression", span="26-28", cluster="lambda expression", file="StateFacts.cs"];
m39_19 [label="Exit lambda expression", span="26-28", cluster="lambda expression", file="StateFacts.cs"];
m39_25 [label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="38-40", cluster="lambda expression", file="StateFacts.cs"];
m39_26 [label="Exit lambda expression", span="38-40", cluster="lambda expression", file="StateFacts.cs"];
m39_27 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", span="", file="StateFacts.cs"];
m39_28 [label=string, span="", file="StateFacts.cs"];
m39_29 [label=string, span="", file="StateFacts.cs"];
m39_30 [label=string, span="", file="StateFacts.cs"];
m39_31 [label=string, span="", file="StateFacts.cs"];
m39_32 [label=int, span="", file="StateFacts.cs"];
m39_33 [label=int, span="", file="StateFacts.cs"];
m39_34 [label=trimSql, span="", file="StateFacts.cs"];
m42_9 [label="transaction.IncrementCounter(''stats:succeeded'')", span="56-56", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m42_6 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="SucceededState.cs"];
m42_2 [label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m42_3 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", color=green, community=0, file="SucceededState.cs"];
m42_4 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49", cluster="HangFire.States.SucceededState.SerializeData()", color=green, community=0, file="SucceededState.cs"];
m42_5 [label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m42_8 [label="Exit HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="SucceededState.cs"];
m42_10 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SucceededState.cs"];
m42_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs"];
m42_11 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs"];
m42_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs"];
m42_0 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m42_1 [label="SucceededAt = DateTime.UtcNow", span="29-29", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m42_12 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m42_13 [label="transaction.DecrementCounter(''stats:succeeded'')", span="61-61", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m42_14 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m42_16 [label="HangFire.States.SucceededState", span="", file="SucceededState.cs"];
m42_26 [label="HangFire.States.ScheduledState", span="", file="SucceededState.cs"];
m43_6 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m43_7 [label="var state = new SucceededState()", span="19-19", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m43_8 [label="var data = state.SerializeData()", span="21-21", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m43_9 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="23-23", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m43_10 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m43_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededStateFacts.cs"];
m43_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SucceededStateFacts.cs"];
m43_0 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m43_1 [label="var state = new SucceededState()", span="12-12", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m43_2 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="13-13", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m43_3 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m43_11 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs"];
m43_13 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m43_14 [label="var state = new SucceededState()", span="29-29", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m43_15 [label="Assert.True(state.ExpireJobOnApply)", span="30-30", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=red, community=0, file="SucceededStateFacts.cs"];
m43_16 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m43_4 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs"];
m43_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededStateFacts.cs"];
m44_50 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m44_15 [label="WaitHandle.WaitAny(waitHandles.ToArray())", span="37-37", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="Worker.cs"];
m44_16 [label="cancellationToken.ThrowIfCancellationRequested()", span="39-39", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m44_17 [label=_fetchers, span="41-41", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m44_18 [label="fetcher.PrefetchedCount > 0", span="43-43", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m44_19 [label="return fetcher.DequeueJob(cancellationToken);", span="45-45", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="Worker.cs"];
m44_48 [label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20", cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs"];
m44_43 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs"];
m44_26 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="82-82", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", color=red, community=0];
m44_11 [label="_process = process", span="43-43", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", color=red, community=0];
m44_45 [label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m44_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="Worker.cs"];
m44_24 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="Worker.cs"];
m44_25 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="Worker.cs"];
m44_44 [label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24", cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="Worker.cs"];
m44_29 [label="return;", span="90-90", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_4 [label="throw new ArgumentNullException(''context'');", span="37-37", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m44_47 [label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35", cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs"];
m44_46 [label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27", cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m44_12 [label="_stateMachineFactory = stateMachineFactory", span="44-44", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", color=red, community=0];
m44_13 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs"];
m44_14 [label="waitHandles.Add(cancellationToken.WaitHandle)", span="35-35", cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="Worker.cs"];
m44_20 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs"];
m44_21 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs"];
m44_28 [label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="85-88", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_49 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs"];
m44_27 [label="var processingState = new ProcessingState(_context.ServerName)", span="83-83", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", color=red, community=0];
m44_0 [label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="Worker.cs"];
m44_1 [label=queues, span="17-17", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", color=red, community=0, file="Worker.cs"];
m44_3 [label="Exit HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="Worker.cs"];
m44_5 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", color=red, community=0, file="Worker.cs"];
m44_7 [label="Entry HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", color=red, community=0, file="Worker.cs"];
m44_9 [label="fetcher.Dispose()", span="28-28", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", color=red, community=0, file="Worker.cs"];
m44_10 [label="Exit HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="Worker.cs"];
m44_2 [label="_fetchers.Add(new PrefetchJobFetcher(\r\n                    new JobFetcher(redisManager, queue), prefetchCount))", span="19-20", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", color=red, community=0, file="Worker.cs"];
m44_6 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", color=red, community=0, file="Worker.cs"];
m44_8 [label=_fetchers, span="26-26", cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", color=green, community=0, file="Worker.cs"];
m44_42 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs"];
m44_30 [label="State state", span="98-98", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", color=red, community=0];
m44_31 [label="var jobData = connection.GetJobData(jobId)", span="102-102", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_32 [label="jobData.EnsureLoaded()", span="103-103", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_22 [label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_33 [label="HangFire.Server.PrioritizedJobFetcher", span="", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_34 [label="process.Run(performContext, jobData.Job)", span="107-107", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_40 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="128-128", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_35 [label="state = new SucceededState()", span="109-109", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_36 [label=JobPerformanceException, span="111-111", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_38 [label=Exception, span="118-118", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_37 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="113-116", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_39 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="120-123", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_41 [label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs"];
m44_51 [label="HangFire.Server.Worker", span="", file="Worker.cs"];
m45_14 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="WorkerContext.cs"];
m45_15 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="26-28", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", color=red, community=0, file="WorkerContext.cs"];
m45_16 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="WorkerContext.cs"];
m45_13 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="WorkerContext.cs"];
m45_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="WorkerContext.cs"];
m45_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="WorkerContext.cs"];
m45_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="WorkerContext.cs"];
m45_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="WorkerContext.cs"];
m45_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="WorkerContext.cs"];
m45_20 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="WorkerContext.cs"];
m45_21 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="33-36", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=0, file="WorkerContext.cs"];
m45_22 [label="_transaction.QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="38-40", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=0, file="WorkerContext.cs"];
m45_23 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="WorkerContext.cs"];
m45_9 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="WorkerContext.cs"];
m45_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="WorkerContext.cs"];
m45_7 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="19-21", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", color=red, community=0, file="WorkerContext.cs"];
m45_8 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="WorkerContext.cs"];
m45_24 [label="Entry lambda expression", span="38-40", cluster="lambda expression", file="WorkerContext.cs"];
m45_11 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="19-21", cluster="lambda expression", color=red, community=0, file="WorkerContext.cs"];
m45_10 [label="Entry lambda expression", span="19-21", cluster="lambda expression", file="WorkerContext.cs"];
m45_12 [label="Exit lambda expression", span="19-21", cluster="lambda expression", file="WorkerContext.cs"];
m45_18 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="26-28", cluster="lambda expression", color=red, community=0, file="WorkerContext.cs"];
m45_17 [label="Entry lambda expression", span="26-28", cluster="lambda expression", file="WorkerContext.cs"];
m45_19 [label="Exit lambda expression", span="26-28", cluster="lambda expression", file="WorkerContext.cs"];
m45_25 [label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="38-40", cluster="lambda expression", color=red, community=0, file="WorkerContext.cs"];
m45_26 [label="Exit lambda expression", span="38-40", cluster="lambda expression", file="WorkerContext.cs"];
m45_27 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", span="", file="WorkerContext.cs"];
m45_28 [label=string, span="", file="WorkerContext.cs"];
m45_29 [label=string, span="", file="WorkerContext.cs"];
m45_30 [label=string, span="", file="WorkerContext.cs"];
m45_31 [label=string, span="", file="WorkerContext.cs"];
m45_32 [label=int, span="", file="WorkerContext.cs"];
m45_33 [label=int, span="", file="WorkerContext.cs"];
m45_34 [label=trimSql, span="", file="WorkerContext.cs"];
m46_86 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="WorkerContextFacts.cs"];
m46_87 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<OperationCanceledException>()", span="92-92", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="WorkerContextFacts.cs"];
m46_88 [label="var wrapper = CreateWrapper()", span="93-93", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="WorkerContextFacts.cs"];
m46_89 [label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="95-95", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="WorkerContextFacts.cs"];
m46_90 [label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="97-97", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="WorkerContextFacts.cs"];
m46_91 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="WorkerContextFacts.cs"];
m46_22 [label="new WorkerContext(null)", span="35-35", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_7 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerContextFacts.cs"];
m46_8 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new AutomaticRetryProcess(null))", span="25-27", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", color=red, community=1, file="WorkerContextFacts.cs"];
m46_9 [label="new WorkerContext(null, WorkerNumber)", span="20-20", cluster="lambda expression", file="WorkerContextFacts.cs", color=green, community=0];
m46_10 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="23-23", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="WorkerContextFacts.cs"];
m46_4 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="WorkerContextFacts.cs"];
m46_5 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", color=green, community=1, file="WorkerContextFacts.cs"];
m46_6 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="WorkerContextFacts.cs"];
m46_17 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="WorkerContextFacts.cs"];
m46_12 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs"];
m46_18 [label="var wrapper = CreateWrapper()", span="35-35", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="WorkerContextFacts.cs", color=red, community=0];
m46_19 [label="Assert.Same(_component.Object, wrapper.InnerProcess)", span="37-37", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="WorkerContextFacts.cs"];
m46_20 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="WorkerContextFacts.cs"];
m46_76 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="WorkerContextFacts.cs"];
m46_11 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerContextFacts.cs"];
m46_25 [label="wrapper.Execute(_cts.Token)", span="45-45", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="WorkerContextFacts.cs"];
m46_26 [label="_component.Verify(x => x.Execute(It.Is<CancellationToken>(y => y == _cts.Token)))", span="47-47", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="WorkerContextFacts.cs"];
m46_27 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="WorkerContextFacts.cs"];
m46_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="WorkerContextFacts.cs"];
m46_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="WorkerContextFacts.cs"];
m46_0 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="WorkerContextFacts.cs"];
m46_1 [label="_sharedContext = new SharedWorkerContextMock()", span="13-13", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", color=green, community=0, file="WorkerContextFacts.cs"];
m46_2 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", color=red, community=0, file="WorkerContextFacts.cs"];
m46_3 [label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11", cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="WorkerContextFacts.cs"];
m46_112 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="WorkerContextFacts.cs"];
m46_23 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="WorkerContextFacts.cs"];
m46_24 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContextFacts.cs"];
m46_103 [label="Entry AutomaticRetryProcess.cstr", span="", cluster="AutomaticRetryProcess.cstr", file="WorkerContextFacts.cs"];
m46_53 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_54 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="66-66", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_55 [label="_maxRetryAttempts = 0", span="67-67", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_56 [label="var wrapper = CreateWrapper()", span="68-68", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_57 [label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="70-70", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_58 [label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="72-74", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_59 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="WorkerContextFacts.cs"];
m46_42 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerContextFacts.cs"];
m46_13 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_14 [label="new AutomaticRetryProcess(null)", span="27-27", cluster="lambda expression", file="WorkerContextFacts.cs", color=red, community=0];
m46_15 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_43 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="WorkerContextFacts.cs"];
m46_104 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_30 [label="return new WorkerContext(_sharedContext.Object, WorkerNumber);", span="49-49", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs", color=green, community=0];
m46_31 [label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs"];
m46_32 [label="HangFire.Core.Tests.Server.WorkerContextFacts", span="", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_33 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_34 [label="y == _cts.Token", span="47-47", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_35 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_44 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_48 [label="wrapper.Execute(_cts.Token)", span="56-56", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_47 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_50 [label="Entry lambda expression", span="58-59", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_45 [label="x.Execute(It.IsAny<CancellationToken>())", span="53-53", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m46_46 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_49 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_51 [label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="58-59", cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs"];
m46_52 [label="Exit lambda expression", span="58-59", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_60 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_64 [label="wrapper.Execute(_cts.Token)", span="70-70", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_63 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_66 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_61 [label="x.Execute(It.IsAny<CancellationToken>())", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_62 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_65 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_67 [label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="72-73", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_68 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_81 [label="wrapper.Execute(_cts.Token)", span="84-84", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_77 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_80 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_83 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_78 [label="x.Execute(It.IsAny<CancellationToken>())", span="81-81", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_79 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_82 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_84 [label="x.Execute(It.IsAny<CancellationToken>())", span="86-86", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_85 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_92 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_96 [label="wrapper.Execute(_cts.Token)", span="95-95", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_95 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_98 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_93 [label="x.Execute(It.IsAny<CancellationToken>())", span="92-92", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_94 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_97 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_99 [label="x.Execute(It.IsAny<CancellationToken>())", span="97-97", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_100 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_105 [label="TimeSpan.Zero", span="105-105", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_106 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="WorkerContextFacts.cs"];
m46_36 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="WorkerContextFacts.cs"];
m46_37 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="53-53", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=red, community=0, file="WorkerContextFacts.cs"];
m46_38 [label="var wrapper = CreateWrapper()", span="54-54", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=red, community=0, file="WorkerContextFacts.cs"];
m46_39 [label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="56-56", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="WorkerContextFacts.cs"];
m46_40 [label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="58-60", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=red, community=0, file="WorkerContextFacts.cs"];
m46_41 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="WorkerContextFacts.cs"];
m46_69 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_70 [label="var wrapper = CreateWrapper()", span="80-80", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_71 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="81-81", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_73 [label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="84-84", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_72 [label="_cts.Cancel()", span="82-82", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_74 [label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="86-86", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_75 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="WorkerContextFacts.cs"];
m46_111 [label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(int)", file="WorkerContextFacts.cs"];
m46_16 [label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47", cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs"];
m46_21 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="WorkerContextFacts.cs"];
m46_101 [label="return new AutomaticRetryProcess(_component.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="102-106", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="WorkerContextFacts.cs"];
m46_102 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="WorkerContextFacts.cs"];
m46_107 [label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="WorkerContextFacts.cs"];
m46_108 [label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="114-114", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="WorkerContextFacts.cs"];
m46_109 [label="token.ThrowIfCancellationRequested()", span="115-115", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="WorkerContextFacts.cs"];
m46_110 [label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112", cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="WorkerContextFacts.cs"];
m46_113 [label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", span="", file="WorkerContextFacts.cs"];
m46_114 [label=wrapper, span="", file="WorkerContextFacts.cs"];
m46_115 [label=wrapper, span="", file="WorkerContextFacts.cs"];
m46_116 [label=wrapper, span="", file="WorkerContextFacts.cs"];
m46_117 [label=wrapper, span="", file="WorkerContextFacts.cs"];
m47_28 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerContextMock.cs"];
m47_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerContextMock.cs"];
m47_20 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="WorkerContextMock.cs"];
m47_7 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="27-27", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="WorkerContextMock.cs"];
m47_29 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="WorkerContextMock.cs"];
m47_15 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="WorkerContextMock.cs"];
m47_8 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", span="18-18", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="WorkerContextMock.cs"];
m47_9 [label="var exception = new Exception()", span="20-20", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", color=green, community=0, file="WorkerContextMock.cs"];
m47_10 [label="var state = new FailedState(exception)", span="21-21", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", color=green, community=0, file="WorkerContextMock.cs"];
m47_11 [label="state.Exception.Should().BeSameAs(exception)", span="23-23", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", color=green, community=0, file="WorkerContextMock.cs"];
m47_12 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", span="18-18", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="WorkerContextMock.cs"];
m47_13 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="WorkerContextMock.cs"];
m47_16 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="27-27", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="WorkerContextMock.cs"];
m47_17 [label="var state = new FailedState(new Exception())", span="29-29", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="WorkerContextMock.cs"];
m47_18 [label="state.StateName.Should().Be(FailedState.Name)", span="31-31", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="WorkerContextMock.cs"];
m47_19 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="27-27", cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="WorkerContextMock.cs"];
m47_27 [label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37", cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="WorkerContextMock.cs"];
m47_0 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="WorkerContextMock.cs"];
m47_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", color=green, community=0, file="WorkerContextMock.cs"];
m47_2 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11", cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="WorkerContextMock.cs"];
m47_4 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="WorkerContextMock.cs"];
m47_5 [label="new FailedState(null)", span="14-14", cluster="lambda expression", color=green, community=0, file="WorkerContextMock.cs"];
m47_6 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="WorkerContextMock.cs"];
m47_26 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="WorkerContextMock.cs"];
m47_14 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="WorkerContextMock.cs"];
m47_21 [label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", span="35-35", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="WorkerContextMock.cs"];
m47_22 [label="var state = new FailedState(new Exception(''Message''))", span="37-37", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="WorkerContextMock.cs"];
m47_23 [label="var properties = state.GetProperties(null)", span="38-38", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="WorkerContextMock.cs"];
m47_24 [label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ExceptionType'', ''System.Exception'' },\r\n                    { ''ExceptionMessage'', ''Message'' },\r\n                    { ''ExceptionDetails'', ''<Non-empty>'' }\r\n                }, \r\n                properties)", span="40-48", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="WorkerContextMock.cs"];
m47_25 [label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", span="35-35", cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="WorkerContextMock.cs"];
m50_62 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="WorkerManagerFacts.cs"];
m50_0 [label="Entry HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_1 [label="WriteLiteral(''\n'')", span="57-57", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="WorkerManagerFacts.cs"];
m50_2 [label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs", color=red, community=0];
m50_59 [label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45", cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="WorkerManagerFacts.cs"];
m50_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_5 [label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_7 [label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_6 [label="context.Transaction.RemoveFromSet(''failed'', context.JobId)", span="20-20", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="WorkerManagerFacts.cs"];
m50_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_10 [label="pager.TotalPageCount == 0", span="93-93", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_15 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="130-130", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_52 [label="Write(RenderPartial(new Paginator(pager)))", span="376-376", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_9 [label="WriteLiteral(''\n'')", span="88-88", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=red, community=0, file="WorkerManagerFacts.cs"];
m50_17 [label=jobs, span="154-154", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        No deleted jobs found.\n    </div>\n'')", span="99-99", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="111-113", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_13 [label="Write(Request.LinkTo(''/deleted/requeue''))", span="118-118", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_14 [label="WriteLiteral(''\''\n                    data-loading-text=\''Enqueueing...\''>\n                <span cl'' +\r\n''ass=\''glyphicon glyphicon-repeat\''></span>\n                Requeue jobs\n          '' +\r\n''  </button>\n            '')", span="123-125", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_16 [label="WriteLiteral(@''\n        </div>\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Deleted</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="135-149", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_18 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="160-160", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_51 [label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="365-365", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_19 [label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="165-165", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_20 [label="WriteLiteral('' '')", span="170-170", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_21 [label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="175-175", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_22 [label="WriteLiteral(''\''>\n                        <td>\n'')", span="180-180", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_23 [label="job.Value != null && job.Value.InDeletedState", span="185-185", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_24 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="191-192", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_27 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="212-213", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_25 [label="Write(job.Key)", span="197-197", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_28 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="218-218", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_26 [label="WriteLiteral(''\'' />\n'')", span="202-202", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_29 [label="WriteLiteral(''\''>\n                                '')", span="223-223", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_30 [label="Write(HtmlHelper.JobId(job.Key))", span="228-228", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_31 [label="WriteLiteral(''\n                            </a>\n'')", span="233-233", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_32 [label="job.Value != null && !job.Value.InDeletedState", span="238-238", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_33 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="244-245", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_34 [label="WriteLiteral(''                        </td>\n\n'')", span="255-255", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_35 [label="job.Value == null", span="260-260", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_36 [label="WriteLiteral(''                            <td colspan=\''2\''>\n                                <em>'' +\r\n''Job was expired.</em>\n                            </td>\n'')", span="266-267", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_37 [label="WriteLiteral(''                            <td>\n                                <a class=\''job-me'' +\r\n''thod\'' href=\'''')", span="279-280", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_38 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="285-285", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_39 [label="WriteLiteral(''\''>\n                                    '')", span="290-290", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_40 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="295-295", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_41 [label="WriteLiteral(''\n                                </a>\n                            </td>\n'')", span="300-300", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_43 [label="job.Value.DeletedAt.HasValue", span="309-309", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_42 [label="WriteLiteral(''                            <td class=\''align-right\''>\n'')", span="304-304", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_44 [label="WriteLiteral(''                                    <span data-moment=\'''')", span="315-315", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_49 [label="WriteLiteral(''                            </td>\n'')", span="345-345", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_45 [label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", span="320-320", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_46 [label="WriteLiteral(''\''>\n                                        '')", span="325-325", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_47 [label="Write(job.Value.DeletedAt)", span="330-330", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_48 [label="WriteLiteral(''\n                                    </span>\n'')", span="335-335", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_50 [label="WriteLiteral(''                    </tr>\n'')", span="355-355", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_53 [label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="WorkerManagerFacts.cs"];
m50_58 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="WorkerManagerFacts.cs"];
m50_56 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="WorkerManagerFacts.cs"];
m50_54 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="WorkerManagerFacts.cs"];
m50_64 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="WorkerManagerFacts.cs"];
m50_61 [label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="WorkerManagerFacts.cs"];
m50_63 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="WorkerManagerFacts.cs"];
m50_68 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="WorkerManagerFacts.cs"];
m50_65 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="WorkerManagerFacts.cs"];
m50_66 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="WorkerManagerFacts.cs"];
m50_57 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="WorkerManagerFacts.cs"];
m50_55 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="WorkerManagerFacts.cs"];
m50_60 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="WorkerManagerFacts.cs"];
m50_67 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="WorkerManagerFacts.cs"];
m50_69 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="WorkerManagerFacts.cs"];
m50_70 [label="HangFire.Web.Pages.DeletedJobsPage", span="", file="WorkerManagerFacts.cs"];
m51_375 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="WriteTransactionFacts.cs"];
m51_376 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="447-458", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="WriteTransactionFacts.cs"];
m51_377 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="WriteTransactionFacts.cs"];
m51_26 [label="Entry Unk.GetTestJob", span="", cluster="Unk.GetTestJob", file="WriteTransactionFacts.cs"];
m51_78 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="WriteTransactionFacts.cs"];
m51_432 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="WriteTransactionFacts.cs"];
m51_433 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="522-533", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="WriteTransactionFacts.cs"];
m51_434 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="WriteTransactionFacts.cs"];
m51_248 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="WriteTransactionFacts.cs"];
m51_348 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="WriteTransactionFacts.cs"];
m51_12 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="WriteTransactionFacts.cs"];
m51_299 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_300 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="347-358", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_301 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_82 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="WriteTransactionFacts.cs"];
m51_286 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="WriteTransactionFacts.cs"];
m51_179 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="WriteTransactionFacts.cs"];
m51_96 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="WriteTransactionFacts.cs"];
m51_235 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_236 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="266-275", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_237 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_34 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="WriteTransactionFacts.cs"];
m51_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="WriteTransactionFacts.cs"];
m51_131 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="WriteTransactionFacts.cs"];
m51_132 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="WriteTransactionFacts.cs"];
m51_133 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="WriteTransactionFacts.cs"];
m51_444 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="WriteTransactionFacts.cs"];
m51_445 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="539-550", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="WriteTransactionFacts.cs"];
m51_446 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="WriteTransactionFacts.cs"];
m51_145 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="WriteTransactionFacts.cs"];
m51_146 [label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="WriteTransactionFacts.cs"];
m51_147 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="WriteTransactionFacts.cs"];
m51_399 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="WriteTransactionFacts.cs"];
m51_400 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="481-497", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="WriteTransactionFacts.cs"];
m51_401 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="WriteTransactionFacts.cs"];
m51_417 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="WriteTransactionFacts.cs"];
m51_22 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="WriteTransactionFacts.cs"];
m51_148 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="WriteTransactionFacts.cs"];
m51_149 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="162-171", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="WriteTransactionFacts.cs"];
m51_150 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="WriteTransactionFacts.cs"];
m51_97 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs"];
m51_99 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_98 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs"];
m51_100 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="WriteTransactionFacts.cs"];
m51_206 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="WriteTransactionFacts.cs"];
m51_207 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="229-243", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="WriteTransactionFacts.cs"];
m51_208 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="WriteTransactionFacts.cs"];
m51_473 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="WriteTransactionFacts.cs"];
m51_409 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="WriteTransactionFacts.cs"];
m51_24 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="WriteTransactionFacts.cs"];
m51_387 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="WriteTransactionFacts.cs"];
m51_388 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="464-475", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="WriteTransactionFacts.cs"];
m51_389 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="WriteTransactionFacts.cs"];
m51_223 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs"];
m51_224 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="249-260", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs"];
m51_225 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs"];
m51_130 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="WriteTransactionFacts.cs"];
m51_27 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="WriteTransactionFacts.cs"];
m51_48 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="WriteTransactionFacts.cs"];
m51_0 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="WriteTransactionFacts.cs"];
m51_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="WriteTransactionFacts.cs"];
m51_2 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="WriteTransactionFacts.cs"];
m51_81 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WriteTransactionFacts.cs"];
m51_162 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="WriteTransactionFacts.cs"];
m51_163 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="177-191", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="WriteTransactionFacts.cs"];
m51_164 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="WriteTransactionFacts.cs"];
m51_311 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="WriteTransactionFacts.cs"];
m51_79 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WriteTransactionFacts.cs"];
m51_25 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs"];
m51_474 [label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="582-582", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs"];
m51_475 [label="action(transaction)", span="584-584", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs"];
m51_476 [label="transaction.Commit()", span="585-585", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs"];
m51_477 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="WriteTransactionFacts.cs"];
m51_324 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="WriteTransactionFacts.cs"];
m51_325 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="381-392", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="WriteTransactionFacts.cs"];
m51_326 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="WriteTransactionFacts.cs"];
m51_29 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="WriteTransactionFacts.cs"];
m51_374 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="WriteTransactionFacts.cs"];
m51_180 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs"];
m51_181 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="197-208", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs"];
m51_182 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="WriteTransactionFacts.cs"];
m51_92 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="WriteTransactionFacts.cs"];
m51_478 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="WriteTransactionFacts.cs"];
m51_361 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_362 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="429-441", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_363 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="WriteTransactionFacts.cs"];
m51_35 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_37 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_36 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_38 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_273 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="WriteTransactionFacts.cs"];
m51_274 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="315-324", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="WriteTransactionFacts.cs"];
m51_275 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="WriteTransactionFacts.cs"];
m51_4 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_57 [label="Entry lambda expression", span="75-102", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_60 [label="var state = new Mock<IState>()", span="80-80", cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_59 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_61 [label="state.Setup(x => x.Name).Returns(''State'')", span="81-81", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_62 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82", cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_63 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_64 [label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_94 [label="x.SetJobState(jobId, state.Object)", span="86-86", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_86 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_87 [label="x.Reason", span="82-82", cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_88 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_101 [label="Entry lambda expression", span="113-135", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_103 [label="var state = new Mock<IState>()", span="117-117", cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_102 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_104 [label="state.Setup(x => x.Name).Returns(''State'')", span="118-118", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_105 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="119-119", cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_106 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="120-121", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_107 [label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_128 [label="x.AddJobState(jobId, state.Object)", span="123-123", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_121 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_122 [label="x.Reason", span="119-119", cluster="lambda expression", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_123 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_16 [label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_17 [label="var job = GetTestJob(sql, jobId)", span="36-36", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_19 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_42 [label="Commit(sql, x => x.PersistJob(jobId))", span="57-57", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_43 [label="var job = GetTestJob(sql, jobId)", span="59-59", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_45 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_65 [label="var job = GetTestJob(sql, jobId)", span="88-88", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_68 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_108 [label="var job = GetTestJob(sql, jobId)", span="125-125", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_135 [label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_152 [label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_166 [label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="179-179", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_184 [label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="199-203", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_196 [label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="216-216", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_210 [label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_227 [label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="251-255", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_239 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="268-268", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_253 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="283-287", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_265 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="300-304", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_277 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="317-317", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_291 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="332-336", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_303 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="349-353", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_316 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="366-370", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_328 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="383-387", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_340 [label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="400-400", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_353 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="414-418", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_365 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="431-436", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_379 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="449-453", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_391 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="466-470", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_403 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="483-490", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_422 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="505-511", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_436 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="524-528", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_448 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="541-545", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_460 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="558-562", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_58 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_77 [label="Exit lambda expression", span="75-102", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_71 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_83 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_89 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_93 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_95 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_117 [label="Exit lambda expression", span="113-135", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_111 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_112 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_118 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_124 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_127 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_129 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_13 [label="Entry lambda expression", span="29-41", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_14 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_15 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_30 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_18 [label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_20 [label="Assert.Null(anotherJob.ExpireAt)", span="40-40", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_39 [label="Entry lambda expression", span="52-64", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_40 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_41 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_49 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_44 [label="Assert.Null(job.ExpireAt)", span="60-60", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_46 [label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_66 [label="Assert.Equal(''State'', job.StateName)", span="89-89", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_67 [label="Assert.NotNull(job.StateId)", span="90-90", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_69 [label="Assert.Null(anotherJob.StateName)", span="93-93", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_70 [label="Assert.Null(anotherJob.StateId)", span="94-94", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_109 [label="Assert.Null(job.StateName)", span="126-126", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_110 [label="Assert.Null(job.StateId)", span="127-127", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_134 [label="Entry lambda expression", span="141-149", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_136 [label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_141 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_151 [label="Entry lambda expression", span="162-171", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_153 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_158 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_165 [label="Entry lambda expression", span="177-191", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_167 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="181-181", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_176 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_183 [label="Entry lambda expression", span="197-208", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_185 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="205-205", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_188 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_195 [label="Entry lambda expression", span="214-223", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_197 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="218-218", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_202 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_209 [label="Entry lambda expression", span="229-243", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_211 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="233-233", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_219 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_226 [label="Entry lambda expression", span="249-260", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_228 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="257-257", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_231 [label="Entry lambda expression", span="251-255", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_238 [label="Entry lambda expression", span="266-275", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_240 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="270-270", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_245 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_252 [label="Entry lambda expression", span="281-292", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_254 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="289-289", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_257 [label="Entry lambda expression", span="283-287", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_264 [label="Entry lambda expression", span="298-309", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_266 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="306-306", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_269 [label="Entry lambda expression", span="300-304", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_276 [label="Entry lambda expression", span="315-324", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_278 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="319-319", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_283 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_290 [label="Entry lambda expression", span="330-341", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_292 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="338-338", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_295 [label="Entry lambda expression", span="332-336", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_302 [label="Entry lambda expression", span="347-358", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_304 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="355-355", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_307 [label="Entry lambda expression", span="349-353", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_315 [label="Entry lambda expression", span="364-375", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_317 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="372-372", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_320 [label="Entry lambda expression", span="366-370", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_327 [label="Entry lambda expression", span="381-392", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_329 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="389-389", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_332 [label="Entry lambda expression", span="383-387", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_339 [label="Entry lambda expression", span="398-406", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_341 [label="var record = sql.Query(''select * from HangFire.List'').Single()", span="402-402", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_345 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_352 [label="Entry lambda expression", span="412-423", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_354 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="420-420", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_357 [label="Entry lambda expression", span="414-418", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_364 [label="Entry lambda expression", span="429-441", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_366 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="438-438", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_369 [label="Entry lambda expression", span="431-436", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_378 [label="Entry lambda expression", span="447-458", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_380 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="455-455", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_383 [label="Entry lambda expression", span="449-453", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_390 [label="Entry lambda expression", span="464-475", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_392 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="472-472", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_395 [label="Entry lambda expression", span="466-470", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_402 [label="Entry lambda expression", span="481-497", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_404 [label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="492-492", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_410 [label="Entry lambda expression", span="483-490", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_421 [label="Entry lambda expression", span="503-516", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_423 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="513-513", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_426 [label="Entry lambda expression", span="505-511", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_435 [label="Entry lambda expression", span="522-533", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_437 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="530-530", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_440 [label="Entry lambda expression", span="524-528", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_447 [label="Entry lambda expression", span="539-550", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_449 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_452 [label="Entry lambda expression", span="541-545", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_459 [label="Entry lambda expression", span="556-567", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_461 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="564-564", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_464 [label="Entry lambda expression", span="558-562", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_72 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_76 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_73 [label="Assert.Equal(''State'', jobState.Name)", span="98-98", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_74 [label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_75 [label="Assert.NotNull(jobState.CreatedAt)", span="100-100", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_137 [label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_85 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_84 [label="x.Name", span="81-81", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_91 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_90 [label="x.SerializeData()", span="83-83", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_116 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_113 [label="Assert.Equal(''State'', jobState.Name)", span="131-131", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_114 [label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_115 [label="Assert.NotNull(jobState.CreatedAt)", span="133-133", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_120 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_119 [label="x.Name", span="118-118", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_126 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_125 [label="x.SerializeData()", span="120-120", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_21 [label="Exit lambda expression", span="29-41", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_31 [label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_32 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_47 [label="Exit lambda expression", span="52-64", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_50 [label="x.PersistJob(jobId)", span="57-57", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_51 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_140 [label="Exit lambda expression", span="141-149", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_138 [label="Assert.Equal(''default'', record.Queue)", span="147-147", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_139 [label="Assert.Null(record.FetchedAt)", span="148-148", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_143 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_142 [label="x.AddToQueue(''default'', ''1'')", span="143-143", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_157 [label="Exit lambda expression", span="162-171", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_154 [label="Assert.Equal(''my-key'', record.Key)", span="168-168", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_155 [label="Assert.Equal(1, record.Value)", span="169-169", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_156 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="170-170", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_160 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_159 [label="x.IncrementCounter(''my-key'')", span="164-164", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_174 [label="Exit lambda expression", span="177-191", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_168 [label="Assert.Equal(''my-key'', record.Key)", span="183-183", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_169 [label="Assert.Equal(1, record.Value)", span="184-184", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_170 [label="Assert.NotNull(record.ExpireAt)", span="185-185", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_171 [label="var expireAt = (DateTime) record.ExpireAt", span="187-187", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_178 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_177 [label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="179-179", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_187 [label="Exit lambda expression", span="197-208", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_186 [label="Assert.Equal(2, recordCount)", span="207-207", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_191 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_189 [label="x.IncrementCounter(''my-key'')", span="201-201", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_190 [label="x.IncrementCounter(''my-key'')", span="202-202", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_201 [label="Exit lambda expression", span="214-223", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_198 [label="Assert.Equal(''my-key'', record.Key)", span="220-220", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_199 [label="Assert.Equal(-1, record.Value)", span="221-221", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_200 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="222-222", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_204 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_203 [label="x.DecrementCounter(''my-key'')", span="216-216", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_218 [label="Exit lambda expression", span="229-243", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_212 [label="Assert.Equal(''my-key'', record.Key)", span="235-235", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_213 [label="Assert.Equal(-1, record.Value)", span="236-236", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_214 [label="Assert.NotNull(record.ExpireAt)", span="237-237", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_215 [label="var expireAt = (DateTime)record.ExpireAt", span="239-239", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_221 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_220 [label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_230 [label="Exit lambda expression", span="249-260", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_229 [label="Assert.Equal(2, recordCount)", span="259-259", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_234 [label="Exit lambda expression", span="251-255", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_232 [label="x.DecrementCounter(''my-key'')", span="253-253", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_233 [label="x.DecrementCounter(''my-key'')", span="254-254", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_244 [label="Exit lambda expression", span="266-275", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_241 [label="Assert.Equal(''my-key'', record.Key)", span="272-272", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_242 [label="Assert.Equal(''my-value'', record.Value)", span="273-273", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_243 [label="Assert.Equal(0.0, record.Score, 2)", span="274-274", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_247 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_246 [label="x.AddToSet(''my-key'', ''my-value'')", span="268-268", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_256 [label="Exit lambda expression", span="281-292", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_255 [label="Assert.Equal(2, recordCount)", span="291-291", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_260 [label="Exit lambda expression", span="283-287", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_258 [label="x.AddToSet(''my-key'', ''my-value'')", span="285-285", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_259 [label="x.AddToSet(''my-key'', ''another-value'')", span="286-286", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_268 [label="Exit lambda expression", span="298-309", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_267 [label="Assert.Equal(1, recordCount)", span="308-308", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_272 [label="Exit lambda expression", span="300-304", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_270 [label="x.AddToSet(''my-key'', ''my-value'')", span="302-302", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_271 [label="x.AddToSet(''my-key'', ''my-value'')", span="303-303", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_282 [label="Exit lambda expression", span="315-324", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_279 [label="Assert.Equal(''my-key'', record.Key)", span="321-321", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_280 [label="Assert.Equal(''my-value'', record.Value)", span="322-322", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_281 [label="Assert.Equal(3.2, record.Score, 3)", span="323-323", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_285 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_284 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="317-317", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_294 [label="Exit lambda expression", span="330-341", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_293 [label="Assert.Equal(3.2, record.Score, 3)", span="340-340", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_298 [label="Exit lambda expression", span="332-336", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_296 [label="x.AddToSet(''my-key'', ''my-value'')", span="334-334", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_297 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="335-335", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_306 [label="Exit lambda expression", span="347-358", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_305 [label="Assert.Equal(0, recordCount)", span="357-357", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_310 [label="Exit lambda expression", span="349-353", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_308 [label="x.AddToSet(''my-key'', ''my-value'')", span="351-351", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_309 [label="x.RemoveFromSet(''my-key'', ''my-value'')", span="352-352", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_319 [label="Exit lambda expression", span="364-375", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_318 [label="Assert.Equal(1, recordCount)", span="374-374", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_323 [label="Exit lambda expression", span="366-370", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_321 [label="x.AddToSet(''my-key'', ''my-value'')", span="368-368", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_322 [label="x.RemoveFromSet(''my-key'', ''different-value'')", span="369-369", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_331 [label="Exit lambda expression", span="381-392", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_330 [label="Assert.Equal(1, recordCount)", span="391-391", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_335 [label="Exit lambda expression", span="383-387", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_333 [label="x.AddToSet(''my-key'', ''my-value'')", span="385-385", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_334 [label="x.RemoveFromSet(''different-key'', ''my-value'')", span="386-386", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_344 [label="Exit lambda expression", span="398-406", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_342 [label="Assert.Equal(''my-key'', record.Key)", span="404-404", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_343 [label="Assert.Equal(''my-value'', record.Value)", span="405-405", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_347 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_346 [label="x.InsertToList(''my-key'', ''my-value'')", span="400-400", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_356 [label="Exit lambda expression", span="412-423", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_355 [label="Assert.Equal(2, recordCount)", span="422-422", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_360 [label="Exit lambda expression", span="414-418", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_358 [label="x.InsertToList(''my-key'', ''my-value'')", span="416-416", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_359 [label="x.InsertToList(''my-key'', ''my-value'')", span="417-417", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_368 [label="Exit lambda expression", span="429-441", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_367 [label="Assert.Equal(0, recordCount)", span="440-440", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_373 [label="Exit lambda expression", span="431-436", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_370 [label="x.InsertToList(''my-key'', ''my-value'')", span="433-433", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_371 [label="x.InsertToList(''my-key'', ''my-value'')", span="434-434", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_372 [label="x.RemoveFromList(''my-key'', ''my-value'')", span="435-435", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_382 [label="Exit lambda expression", span="447-458", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_381 [label="Assert.Equal(1, recordCount)", span="457-457", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_386 [label="Exit lambda expression", span="449-453", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_384 [label="x.InsertToList(''my-key'', ''my-value'')", span="451-451", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_385 [label="x.RemoveFromList(''my-key'', ''different-value'')", span="452-452", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_394 [label="Exit lambda expression", span="464-475", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_393 [label="Assert.Equal(1, recordCount)", span="474-474", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_398 [label="Exit lambda expression", span="466-470", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_396 [label="x.InsertToList(''my-key'', ''my-value'')", span="468-468", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_397 [label="x.RemoveFromList(''different-key'', ''my-value'')", span="469-469", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_408 [label="Exit lambda expression", span="481-497", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_405 [label="Assert.Equal(2, records.Length)", span="494-494", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_406 [label="Assert.Equal(''1'', records[0].Value)", span="495-495", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_407 [label="Assert.Equal(''2'', records[1].Value)", span="496-496", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_416 [label="Exit lambda expression", span="483-490", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_411 [label="x.InsertToList(''my-key'', ''0'')", span="485-485", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_412 [label="x.InsertToList(''my-key'', ''1'')", span="486-486", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_413 [label="x.InsertToList(''my-key'', ''2'')", span="487-487", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_414 [label="x.InsertToList(''my-key'', ''3'')", span="488-488", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_415 [label="x.TrimList(''my-key'', 1, 2)", span="489-489", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_425 [label="Exit lambda expression", span="503-516", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_424 [label="Assert.Equal(2, recordCount)", span="515-515", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_431 [label="Exit lambda expression", span="505-511", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_427 [label="x.InsertToList(''my-key'', ''0'')", span="507-507", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_428 [label="x.InsertToList(''my-key'', ''1'')", span="508-508", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_429 [label="x.InsertToList(''my-key'', ''2'')", span="509-509", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_430 [label="x.TrimList(''my-key'', 1, 100)", span="510-510", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_439 [label="Exit lambda expression", span="522-533", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_438 [label="Assert.Equal(0, recordCount)", span="532-532", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_443 [label="Exit lambda expression", span="524-528", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_441 [label="x.InsertToList(''my-key'', ''0'')", span="526-526", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_442 [label="x.TrimList(''my-key'', 1, 100)", span="527-527", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_451 [label="Exit lambda expression", span="539-550", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_450 [label="Assert.Equal(0, recordCount)", span="549-549", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_455 [label="Exit lambda expression", span="541-545", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_453 [label="x.InsertToList(''my-key'', ''0'')", span="543-543", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_454 [label="x.TrimList(''my-key'', 1, 0)", span="544-544", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_463 [label="Exit lambda expression", span="556-567", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_462 [label="Assert.Equal(1, recordCount)", span="566-566", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_467 [label="Exit lambda expression", span="558-562", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_465 [label="x.InsertToList(''my-key'', ''0'')", span="560-560", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_466 [label="x.TrimList(''another-key'', 1, 0)", span="561-561", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_172 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="189-189", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_173 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="190-190", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_216 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="241-241", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_217 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="242-242", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_5 [label="new SqlServerWriteOnlyTransaction(null)", span="18-18", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_6 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="WriteTransactionFacts.cs"];
m51_312 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="WriteTransactionFacts.cs"];
m51_313 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="364-375", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="WriteTransactionFacts.cs"];
m51_314 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="WriteTransactionFacts.cs"];
m51_261 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_262 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="298-309", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_263 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_468 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs"];
m51_470 [label="action(connection)", span="574-574", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs"];
m51_469 [label="var connection = ConnectionUtils.CreateConnection()", span="572-572", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs"];
m51_471 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="WriteTransactionFacts.cs"];
m51_175 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="WriteTransactionFacts.cs"];
m51_7 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="WriteTransactionFacts.cs"];
m51_456 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="WriteTransactionFacts.cs"];
m51_457 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="556-567", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="WriteTransactionFacts.cs"];
m51_458 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="WriteTransactionFacts.cs"];
m51_53 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs"];
m51_55 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="WriteTransactionFacts.cs"];
m51_54 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs"];
m51_56 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="WriteTransactionFacts.cs"];
m51_8 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_10 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_9 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_11 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="WriteTransactionFacts.cs"];
m51_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="WriteTransactionFacts.cs"];
m51_349 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_350 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="412-423", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_351 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="WriteTransactionFacts.cs"];
m51_144 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="WriteTransactionFacts.cs"];
m51_472 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="WriteTransactionFacts.cs"];
m51_161 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="WriteTransactionFacts.cs"];
m51_205 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="WriteTransactionFacts.cs"];
m51_418 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="WriteTransactionFacts.cs"];
m51_419 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="503-516", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="WriteTransactionFacts.cs"];
m51_420 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="WriteTransactionFacts.cs"];
m51_80 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WriteTransactionFacts.cs"];
m51_249 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="WriteTransactionFacts.cs"];
m51_250 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="281-292", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="WriteTransactionFacts.cs"];
m51_251 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="WriteTransactionFacts.cs"];
m51_287 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_288 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="330-341", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_289 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="WriteTransactionFacts.cs"];
m51_336 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="WriteTransactionFacts.cs"];
m51_337 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="398-406", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="WriteTransactionFacts.cs"];
m51_338 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="WriteTransactionFacts.cs"];
m51_52 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="WriteTransactionFacts.cs"];
m51_222 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="WriteTransactionFacts.cs"];
m51_192 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="WriteTransactionFacts.cs"];
m51_193 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="214-223", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="WriteTransactionFacts.cs"];
m51_194 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="WriteTransactionFacts.cs"];
m51_479 [label="HangFire.SqlServer.Tests.WriteTransactionFacts", span="", file="WriteTransactionFacts.cs"];
m51_484 [label=arrangeSql, span="", file="WriteTransactionFacts.cs"];
m51_485 [label=jobId, span="", file="WriteTransactionFacts.cs"];
m51_486 [label=state, span="", file="WriteTransactionFacts.cs"];
m51_487 [label=arrangeSql, span="", file="WriteTransactionFacts.cs"];
m51_488 [label=jobId, span="", file="WriteTransactionFacts.cs"];
m51_489 [label=state, span="", file="WriteTransactionFacts.cs"];
m51_480 [label=arrangeSql, span="", file="WriteTransactionFacts.cs"];
m51_482 [label=arrangeSql, span="", file="WriteTransactionFacts.cs"];
m51_481 [label=jobId, span="", file="WriteTransactionFacts.cs"];
m51_483 [label=jobId, span="", file="WriteTransactionFacts.cs"];
n42 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n27  [key=1, style=dashed, color=red, label="HangFire.States.ApplyStateContext"];
n42 -> n28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> n29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
n42 -> d27  [key=1, style=dashed, color=green, label="HangFire.States.ApplyStateContext"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=green, label="HangFire.States.IState"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n7  [key=1, style=dashed, color=green, label="HangFire.States.IState"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n2 -> n9  [key=0, style=solid];
n2 -> n10  [key=2, style=dotted];
n4 -> n9  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n9 -> n0  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
n12 -> n18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
n12 -> n20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
n12 -> n23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateHandlerCollection"];
n12 -> n25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>"];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n18 -> n33  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n23 -> n33  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid, color=red];
n25 -> d27  [key=0, style=solid, color=green];
n14 -> n31  [key=0, style=solid];
n14 -> n10  [key=2, style=dotted];
n16 -> n31  [key=0, style=solid];
n16 -> n10  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n32  [key=2, style=dotted];
n17 -> n19  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n21  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n22  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n24  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n26  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n28  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n29  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n17 -> n30  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n19 -> n18  [key=0, style=solid];
n19 -> n34  [key=2, style=dotted];
n21 -> n20  [key=0, style=solid];
n21 -> n35  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n36  [key=2, style=dotted];
n24 -> n23  [key=0, style=solid];
n24 -> n37  [key=2, style=dotted];
n26 -> n25  [key=0, style=solid];
n26 -> n38  [key=2, style=dotted];
n28 -> n30  [key=0, style=solid];
n28 -> n39  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n40  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n41  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid, color=red];
n27 -> n29  [key=0, style=solid, color=red];
n31 -> n12  [key=0, style=bold, color=blue];
d27 -> n28  [key=0, style=solid, color=green];
d27 -> n29  [key=0, style=solid, color=green];
m0_0 -> m0_1  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_30  [key=2, style=dotted, color=green];
m0_6 -> m0_8  [key=0, style=solid, color=green];
m0_6 -> m0_7  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_28  [key=0, style=solid];
m0_9 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_9 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_1 -> m0_30  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_31  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_30  [key=2, style=dotted];
m0_7 -> m0_30  [key=2, style=dotted];
m0_7 -> m0_29  [key=0, style=solid];
m0_10 -> m0_30  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_34  [key=2, style=dotted];
m0_11 -> m0_35  [key=2, style=dotted];
m0_12 -> m0_30  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_35  [key=2, style=dotted];
m0_14 -> m0_30  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_36  [key=2, style=dotted];
m0_15 -> m0_37  [key=2, style=dotted];
m0_15 -> m0_38  [key=2, style=dotted];
m0_15 -> m0_39  [key=2, style=dotted];
m0_16 -> m0_30  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_40  [key=2, style=dotted];
m0_17 -> m0_35  [key=2, style=dotted];
m0_18 -> m0_30  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_35  [key=2, style=dotted];
m0_20 -> m0_30  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_40  [key=2, style=dotted];
m0_23 -> m0_35  [key=2, style=dotted];
m0_24 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_35  [key=2, style=dotted];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_9  [key=0, style=solid];
m0_27 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=servers];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=servers];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_33  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_27  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_32  [key=2, style=dotted];
m0_29 -> m0_0  [key=0, style=bold, color=blue];
m0_41 -> m0_8  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m0_41 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_10  [key=2, style=dotted];
m3_23 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=state];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_27  [key=2, style=dotted];
m3_24 -> m3_16  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_25 -> m3_16  [key=2, style=dotted];
m3_26 -> m3_22  [key=0, style=bold, color=blue];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_10  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_16  [key=2, style=dotted];
m3_21 -> m3_17  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_10  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_34  [key=2, style=dotted];
m3_30 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_4  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_35  [key=2, style=dotted];
m3_32 -> m3_16  [key=2, style=dotted];
m3_33 -> m3_28  [key=0, style=bold, color=blue];
m3_10 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_37 -> m3_10  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_10  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=2, style=dotted];
m3_15 -> m3_11  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=2, style=dotted];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_4  [key=2, style=dotted];
m3_9 -> m3_5  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_0  [key=3, color=darkorchid, style=bold, label="Field variable int WorkerCount"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_52 -> m4_69  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_72  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_73  [key=2, style=dotted];
m4_70 -> m4_74  [key=2, style=dotted];
m4_70 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_71 -> m4_52  [key=0, style=bold, color=blue];
m4_50 -> m4_54  [key=0, style=solid, color=green];
m4_50 -> m4_56  [key=0, style=bold, color=green];
m4_50 -> m4_57  [key=0, style=bold, color=green];
m4_50 -> m4_58  [key=0, style=bold, color=green];
m4_50 -> m4_59  [key=0, style=bold, color=green];
m4_54 -> m4_55  [key=0, style=solid, color=green];
m4_54 -> m4_61  [key=2, style=dotted, color=green];
m4_54 -> m4_59  [key=1, style=dashed, color=green, label=stateMachineFactory];
m4_55 -> m4_56  [key=0, style=solid, color=green];
m4_55 -> m4_62  [key=2, style=dotted, color=green];
m4_55 -> m4_63  [key=2, style=dotted, color=green];
m4_59 -> m4_60  [key=0, style=solid, color=green];
m4_59 -> m4_65  [key=2, style=dotted, color=green];
m4_59 -> m4_68  [key=2, style=dotted, color=green];
m4_56 -> m4_57  [key=0, style=solid, color=green];
m4_56 -> m4_64  [key=2, style=dotted, color=green];
m4_57 -> m4_58  [key=0, style=solid, color=green];
m4_57 -> m4_65  [key=2, style=dotted, color=green];
m4_57 -> m4_66  [key=2, style=dotted, color=green];
m4_58 -> m4_59  [key=0, style=solid, color=green];
m4_58 -> m4_65  [key=2, style=dotted, color=green];
m4_58 -> m4_67  [key=2, style=dotted, color=green];
m4_60 -> m4_50  [key=0, style=bold, color=blue];
m4_4 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m4_4 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_16  [key=2, style=dotted];
m4_11 -> m4_17  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_18  [key=2, style=dotted];
m4_7 -> m4_9  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_5  [key=0, style=bold, color=blue];
m4_5 -> m4_7  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_8 -> m4_13  [key=0, style=solid];
m4_8 -> n10  [key=2, style=dotted];
m4_6 -> m4_13  [key=0, style=solid];
m4_6 -> n10  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=2, style=dotted];
m4_13 -> m4_4  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=2, style=dotted];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_43 -> m4_44  [key=0, style=solid];
m4_45 -> m4_50  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_51  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_52  [key=2, style=dotted];
m4_46 -> m4_51  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=componentRunners];
m4_44 -> m4_49  [key=2, style=dotted];
m4_44 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=componentRunners];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_53  [key=2, style=dotted];
m4_48 -> m4_43  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_65  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_75  [key=0, style=bold, color=blue];
m4_68 -> m4_18  [key=3, color=darkorchid, style=bold, label="Field variable HangFire.Server.IServerComponentRunner _serverRunner"];
m4_19 -> m4_20  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_24  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_23  [key=2, style=dotted];
m4_22 -> m4_19  [key=0, style=bold, color=blue];
m4_18 -> m4_34  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_38  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_39  [key=2, style=dotted];
m4_35 -> m4_40  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_41  [key=2, style=dotted];
m4_36 -> m4_42  [key=2, style=dotted];
m4_37 -> m4_18  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_23  [key=2, style=dotted];
m4_32 -> m4_29  [key=0, style=bold, color=blue];
m4_39 -> m4_4  [key=3, color=darkorchid, style=bold, label="Field variable HangFire.BackgroundJobServerOptions _options"];
m4_78 -> m4_54  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_56  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_57  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_58  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_59  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_55  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m4_78 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_19  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_18 -> m5_16  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_23  [key=2, style=dotted];
m5_35 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_24  [key=2, style=dotted];
m5_34 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label=exception];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_39  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_40  [key=2, style=dotted];
m5_38 -> m5_33  [key=0, style=bold, color=blue];
m5_15 -> m5_41  [key=0, style=solid];
m5_41 -> m5_15  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_9  [key=2, style=dotted, color=green];
m5_3 -> m5_5  [key=1, style=dashed, color=green, label=state];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_10  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_11  [key=2, style=dotted];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_1 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_14 -> m5_12  [key=0, style=bold, color=blue];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_23  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_21 -> m5_23  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_24  [key=2, style=dotted];
m5_22 -> m5_20  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_19  [key=2, style=dotted];
m5_26 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=2, style=dotted];
m5_28 -> m5_25  [key=0, style=bold, color=blue];
m5_42 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m5_42 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m5_42 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m5_42 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.ClientExceptionContextFacts"];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=2, style=dotted];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_14  [key=2, style=dotted];
m7_29 -> m7_27  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_6 -> m7_0  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_15  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_24  [key=0, style=bold, color=blue];
m7_30 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m7_30 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BootstrapperConfiguration"];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_17  [key=2, style=dotted];
m9_9 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=connection];
m9_10 -> m9_11  [key=0, style=solid, color=red];
m9_10 -> m9_18  [key=2, style=dotted];
m9_10 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_10 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_21  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid, color=red];
m9_11 -> m9_19  [key=2, style=dotted, color=red];
m9_11 -> m9_13  [key=1, style=dashed, color=red, label=state];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_20  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_7  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_22  [key=2, style=dotted];
m9_16 -> m9_8  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_26  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=2, style=dotted];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=2, style=dotted];
m9_25 -> m9_23  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_0 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_0 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m10_0 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_2 -> m10_11  [key=0, style=solid];
m10_2 -> n10  [key=2, style=dotted];
m10_4 -> m10_11  [key=0, style=solid];
m10_4 -> n10  [key=2, style=dotted];
m10_6 -> m10_11  [key=0, style=solid];
m10_6 -> n10  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_13  [key=2, style=dotted];
m10_11 -> m10_0  [key=0, style=bold, color=blue];
m10_26 -> m10_89  [key=0, style=solid];
m10_26 -> m10_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IJobCancellationToken"];
m10_26 -> m10_14  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.IJobCancellationToken cancellationToken"];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_77  [key=2, style=dotted];
m10_89 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m10_89 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m10_99 -> m10_102  [key=0, style=solid];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_108  [key=2, style=dotted];
m10_90 -> m10_102  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_90 -> m10_104  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_104  [key=0, style=solid];
m10_92 -> m10_92  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m10_93 -> m10_98  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m10_93 -> m10_100  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_91 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_91 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_111  [key=2, style=dotted];
m10_104 -> m10_107  [key=0, style=solid];
m10_104 -> m10_112  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_94 -> m10_101  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_103 -> m10_92  [key=0, style=solid];
m10_103 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_98  [key=0, style=solid];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_100  [key=0, style=solid];
m10_98 -> m10_74  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_109  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_94  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_95 -> m10_26  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_97 -> m10_102  [key=0, style=solid];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_110  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_88  [key=2, style=dotted];
m10_107 -> m10_26  [key=0, style=bold, color=blue];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_151  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m10_149 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_141  [key=2, style=dotted];
m10_151 -> m10_152  [key=0, style=solid];
m10_151 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label=constantExpression];
m10_154 -> m10_155  [key=0, style=solid];
m10_154 -> m10_156  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_154  [key=0, style=solid];
m10_153 -> m10_155  [key=0, style=solid];
m10_155 -> m10_149  [key=0, style=bold, color=blue];
m10_25 -> m10_78  [key=0, style=solid];
m10_25 -> m10_14  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.JobActivator activator"];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_85  [key=2, style=dotted];
m10_78 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label=instance];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_81  [key=0, style=solid];
m10_81 -> m10_84  [key=0, style=solid];
m10_80 -> m10_84  [key=0, style=solid];
m10_80 -> m10_86  [key=2, style=dotted];
m10_80 -> m10_87  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_88  [key=2, style=dotted];
m10_84 -> m10_25  [key=0, style=bold, color=blue];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_19  [key=3, color=darkorchid, style=bold, label="Parameter variable object instance"];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_123  [key=1, style=dashed, color=darkseagreen4, label=disposable];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_124  [key=0, style=solid];
m10_122 -> m10_126  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_126  [key=0, style=solid];
m10_123 -> m10_127  [key=2, style=dotted];
m10_124 -> m10_125  [key=0, style=solid];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_88  [key=2, style=dotted];
m10_126 -> m10_120  [key=0, style=bold, color=blue];
m10_27 -> m10_113  [key=0, style=solid];
m10_27 -> m10_19  [key=3, color=darkorchid, style=bold, label="Parameter variable object instance"];
m10_27 -> m10_22  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] deserializedArguments"];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_118  [key=0, style=solid];
m10_113 -> m10_119  [key=2, style=dotted];
m10_114 -> m10_115  [key=0, style=solid];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_117  [key=0, style=solid];
m10_116 -> m10_118  [key=0, style=solid];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_88  [key=2, style=dotted];
m10_118 -> m10_27  [key=0, style=bold, color=blue];
m10_32 -> m10_37  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_39  [key=2, style=dotted];
m10_37 -> m10_40  [key=2, style=dotted];
m10_38 -> m10_32  [key=0, style=bold, color=blue];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_36  [key=2, style=dotted];
m10_34 -> m10_32  [key=2, style=dotted];
m10_35 -> m10_33  [key=0, style=bold, color=blue];
m10_50 -> m10_128  [key=0, style=solid];
m10_50 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.MethodCallExpression"];
m10_50 -> m10_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression"];
m10_50 -> m10_54  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression"];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_141  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_142  [key=2, style=dotted];
m10_129 -> m10_143  [key=2, style=dotted];
m10_129 -> m10_131  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_144  [key=2, style=dotted];
m10_130 -> m10_138  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m10_130 -> m10_139  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m10_131 -> m10_132  [key=0, style=solid];
m10_131 -> m10_139  [key=0, style=solid];
m10_131 -> m10_133  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_131 -> m10_134  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_131 -> m10_135  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_131 -> m10_136  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_131 -> m10_137  [key=1, style=dashed, color=darkseagreen4, label=argument];
m10_138 -> m10_131  [key=0, style=solid];
m10_138 -> m10_111  [key=2, style=dotted];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_112  [key=2, style=dotted];
m10_132 -> m10_133  [key=0, style=solid];
m10_132 -> m10_138  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_132 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_138  [key=0, style=solid];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_136  [key=0, style=solid];
m10_135 -> m10_138  [key=0, style=solid];
m10_135 -> m10_145  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_146  [key=2, style=dotted];
m10_136 -> m10_147  [key=2, style=dotted];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_148  [key=2, style=dotted];
m10_140 -> m10_50  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_44  [key=0, style=solid];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m10_43 -> m10_48  [key=0, style=solid];
m10_43 -> n10  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_47  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_0  [key=2, style=dotted];
m10_47 -> m10_50  [key=2, style=dotted];
m10_46 -> m10_48  [key=0, style=solid];
m10_46 -> m10_49  [key=2, style=dotted];
m10_48 -> m10_41  [key=0, style=bold, color=blue];
m10_13 -> m10_59  [key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_61  [key=0, style=solid];
m10_60 -> m10_73  [key=0, style=solid];
m10_60 -> m10_49  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_63  [key=0, style=solid];
m10_61 -> m10_74  [key=2, style=dotted];
m10_62 -> m10_73  [key=0, style=solid];
m10_62 -> m10_75  [key=2, style=dotted];
m10_62 -> m10_76  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_65  [key=0, style=solid];
m10_64 -> m10_73  [key=0, style=solid];
m10_64 -> m10_49  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_77  [key=2, style=dotted];
m10_65 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_68  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_73  [key=0, style=solid];
m10_68 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m10_67 -> m10_73  [key=0, style=solid];
m10_67 -> m10_75  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_71  [key=0, style=solid];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_68  [key=0, style=solid];
m10_70 -> m10_73  [key=0, style=solid];
m10_70 -> m10_49  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_49  [key=2, style=dotted];
m10_73 -> m10_13  [key=0, style=bold, color=blue];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_17  [key=1, style=dashed, color=red, label="HangFire.IJobCancellationToken"];
m10_14 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m10_14 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IJobCancellationToken"];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=0, style=solid, color=red];
m10_17 -> m10_18  [key=0, style=solid, color=red];
m10_17 -> m10_19  [key=0, style=solid, color=red];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_25  [key=2, style=dotted];
m10_21 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label=instance];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_26  [key=2, style=dotted];
m10_16 -> m10_24  [key=0, style=solid];
m10_16 -> n10  [key=2, style=dotted];
m10_18 -> m10_24  [key=0, style=solid, color=red];
m10_18 -> n10  [key=2, style=dotted, color=red];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label=instance];
m10_19 -> m10_19  [key=3, color=darkorchid, style=bold, label="Local variable object instance"];
m10_19 -> m10_25  [key=3, color=darkorchid, style=bold, label="Local variable object instance"];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_22  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_27  [key=2, style=dotted];
m10_24 -> m10_14  [key=0, style=bold, color=blue];
m10_28 -> m10_29  [key=0, style=solid];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_31  [key=2, style=dotted];
m10_29 -> m10_32  [key=2, style=dotted];
m10_30 -> m10_28  [key=0, style=bold, color=blue];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m10_53 -> m10_58  [key=0, style=solid];
m10_53 -> n10  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_57  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_0  [key=2, style=dotted];
m10_57 -> m10_50  [key=2, style=dotted];
m10_56 -> m10_58  [key=0, style=solid];
m10_56 -> m10_49  [key=2, style=dotted];
m10_58 -> m10_51  [key=0, style=bold, color=blue];
m10_157 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m10_157 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m12_0 -> m12_1  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid, color=green];
m12_5 -> m12_99  [key=2, style=dotted, color=green];
m12_5 -> m12_100  [key=2, style=dotted, color=green];
m12_5 -> m12_7  [key=1, style=dashed, color=green, label=perPage];
m12_4 -> m12_5  [key=0, style=solid, color=green];
m12_4 -> m12_99  [key=2, style=dotted];
m12_4 -> m12_100  [key=2, style=dotted];
m12_4 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=from];
m12_6 -> m12_7  [key=0, style=solid, color=green];
m12_6 -> m12_101  [key=2, style=dotted, color=green];
m12_6 -> m12_8  [key=1, style=dashed, color=green, label=monitor];
m12_7 -> m12_8  [key=0, style=solid, color=green];
m12_7 -> m12_102  [key=2, style=dotted];
m12_7 -> m12_103  [key=2, style=dotted];
m12_7 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=pager];
m12_7 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label=pager];
m12_7 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=pager];
m12_8 -> m12_9  [key=0, style=solid, color=green];
m12_8 -> m12_104  [key=2, style=dotted, color=green];
m12_8 -> m12_45  [key=1, style=dashed, color=green, label=failedJobs];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_97  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_92  [key=0, style=solid];
m12_45 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_97  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_98  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_105  [key=2, style=dotted];
m12_10 -> m12_106  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_97  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_106  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_97  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_97  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_106  [key=2, style=dotted];
m12_17 -> m12_95  [key=0, style=solid];
m12_17 -> m12_97  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_97  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_107  [key=2, style=dotted];
m12_19 -> m12_106  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_97  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_97  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_108  [key=2, style=dotted];
m12_22 -> m12_106  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_97  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_106  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_97  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_106  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_97  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_108  [key=2, style=dotted];
m12_28 -> m12_106  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_97  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_106  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_97  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_106  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_97  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_106  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_97  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_109  [key=2, style=dotted];
m12_36 -> m12_106  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_97  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_106  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_97  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_106  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_97  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_106  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_97  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_97  [key=2, style=dotted];
m12_47 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_106  [key=2, style=dotted];
m12_47 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_97  [key=2, style=dotted];
m12_49 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_106  [key=2, style=dotted];
m12_49 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_97  [key=2, style=dotted];
m12_51 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_106  [key=2, style=dotted];
m12_51 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_97  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_97  [key=2, style=dotted];
m12_55 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_106  [key=2, style=dotted];
m12_55 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_97  [key=2, style=dotted];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_97  [key=2, style=dotted];
m12_58 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_106  [key=2, style=dotted];
m12_58 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_97  [key=2, style=dotted];
m12_60 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_110  [key=2, style=dotted];
m12_60 -> m12_106  [key=2, style=dotted];
m12_60 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_97  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_97  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_106  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_97  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_97  [key=2, style=dotted];
m12_68 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_111  [key=2, style=dotted];
m12_68 -> m12_106  [key=2, style=dotted];
m12_68 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_97  [key=2, style=dotted];
m12_70 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_112  [key=2, style=dotted];
m12_70 -> m12_106  [key=2, style=dotted];
m12_70 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_97  [key=2, style=dotted];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_97  [key=2, style=dotted];
m12_74 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_106  [key=2, style=dotted];
m12_74 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_97  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_106  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_97  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_97  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_97  [key=2, style=dotted];
m12_81 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_106  [key=2, style=dotted];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_97  [key=2, style=dotted];
m12_83 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_106  [key=2, style=dotted];
m12_83 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_97  [key=2, style=dotted];
m12_85 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_106  [key=2, style=dotted];
m12_85 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_97  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_97  [key=2, style=dotted];
m12_89 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_114  [key=2, style=dotted];
m12_89 -> m12_106  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_97  [key=2, style=dotted];
m12_91 -> m12_45  [key=0, style=solid];
m12_91 -> m12_97  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_97  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_115  [key=2, style=dotted];
m12_93 -> m12_106  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_97  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_97  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_18  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_44 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_79 -> m12_45  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_79 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_53 -> m12_57  [key=0, style=solid];
m12_53 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_53 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_66  [key=0, style=solid];
m12_62 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_62 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_69  [key=0, style=solid];
m12_67 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_67 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_72 -> m12_78  [key=0, style=solid];
m12_72 -> m12_79  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_72 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_72 -> m12_113  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_87 -> m12_91  [key=0, style=solid];
m12_87 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_87 -> m12_113  [key=2, style=dotted];
m12_96 -> m12_0  [key=0, style=bold, color=blue];
m12_116 -> m12_5  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_6  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m12_116 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.FailedJobsPage"];
m13_30 -> m13_31  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_39  [key=2, style=dotted];
m13_31 -> m13_33  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_22  [key=2, style=dotted];
m13_32 -> m13_30  [key=0, style=bold, color=blue];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_40  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_41  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid, color=green];
m13_35 -> m13_42  [key=2, style=dotted];
m13_35 -> m13_21  [key=2, style=dotted];
m13_35 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label=handler];
m13_36 -> m13_37  [key=0, style=solid, color=green];
m13_36 -> m13_43  [key=2, style=dotted];
m13_36 -> m13_11  [key=2, style=dotted, color=green];
m13_36 -> m13_39  [key=2, style=dotted, color=green];
m13_36 -> m13_42  [key=1, style=dashed, color=green, label=context];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_26  [key=2, style=dotted];
m13_37 -> m13_40  [key=2, style=dotted];
m13_37 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_38 -> m13_30  [key=0, style=bold, color=blue];
m13_38 -> m13_34  [key=0, style=bold, color=blue];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_28  [key=2, style=dotted];
m13_28 -> m13_26  [key=0, style=bold, color=blue];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_9  [key=0, style=bold, color=blue];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_25  [key=2, style=dotted];
m13_24 -> m13_22  [key=0, style=bold, color=blue];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_21  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_42  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_5 -> m13_11  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_12  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_39  [key=2, style=dotted];
m13_45 -> m13_21  [key=2, style=dotted];
m13_45 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label=handler];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_22  [key=2, style=dotted];
m13_46 -> m13_48  [key=2, style=dotted];
m13_46 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_40  [key=2, style=dotted];
m13_47 -> m13_44  [key=0, style=bold, color=blue];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_43  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_26  [key=2, style=dotted];
m13_50 -> m13_52  [key=2, style=dotted];
m13_51 -> m13_44  [key=0, style=bold, color=blue];
m13_51 -> m13_49  [key=0, style=bold, color=blue];
m13_67 -> m13_52  [key=0, style=bold, color=blue];
m13_52 -> m13_53  [key=0, style=solid];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_39  [key=2, style=dotted];
m13_53 -> m13_36  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_53 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_22  [key=2, style=dotted];
m13_54 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=handler];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_40  [key=2, style=dotted];
m13_55 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_68  [key=2, style=dotted];
m13_56 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label=table1];
m13_56 -> m13_59  [key=1, style=dashed, color=darkseagreen4, label=table1];
m13_56 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label=handler];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_69  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_69  [key=2, style=dotted];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_41  [key=2, style=dotted];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_42  [key=2, style=dotted];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_68  [key=2, style=dotted];
m13_61 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label=table2];
m13_61 -> m13_64  [key=1, style=dashed, color=darkseagreen4, label=table2];
m13_61 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label=table2];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_69  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_69  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_69  [key=2, style=dotted];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_43  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_26  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_0  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_29  [key=2, style=dotted];
m13_26 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=2, style=dotted];
m13_27 -> m13_23  [key=0, style=bold, color=blue];
m13_13 -> m13_14  [key=0, style=solid];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_28  [key=2, style=dotted];
m13_43 -> m13_41  [key=0, style=bold, color=blue];
m13_15 -> m13_13  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_16  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_14  [key=0, style=bold, color=blue];
m13_18 -> m13_21  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_22  [key=2, style=dotted];
m13_19 -> m13_21  [key=2, style=dotted];
m13_20 -> m13_17  [key=0, style=bold, color=blue];
m13_20 -> m13_18  [key=0, style=bold, color=blue];
m13_6 -> m13_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_5  [key=2, style=dotted];
m13_1 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_1 -> m13_7  [key=2, style=dotted];
m13_1 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_7  [key=2, style=dotted];
m13_2 -> m13_8  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_8  [key=2, style=dotted];
m13_3 -> m13_9  [key=2, style=dotted];
m13_4 -> m13_0  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_10  [key=2, style=dotted];
m13_85 -> m13_70  [key=0, style=bold, color=blue];
m13_70 -> m13_71  [key=0, style=solid];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_39  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_22  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_40  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_68  [key=2, style=dotted];
m13_74 -> m13_76  [key=1, style=dashed, color=darkseagreen4, label=table3];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_69  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_41  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_42  [key=2, style=dotted];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_68  [key=2, style=dotted];
m13_78 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label=table4];
m13_78 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label=table4];
m13_78 -> m13_82  [key=1, style=dashed, color=darkseagreen4, label=table4];
m13_78 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label=table4];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_69  [key=2, style=dotted];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_69  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_69  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_69  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_43  [key=2, style=dotted];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_26  [key=2, style=dotted];
m13_86 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m13_86 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StatesFeature"];
m14_10 -> m14_3  [key=0, style=solid];
m14_10 -> m14_15  [key=2, style=dotted];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_3  [key=0, style=solid];
m14_1 -> m14_15  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_15  [key=2, style=dotted];
m14_2 -> m14_5  [key=0, style=solid];
m14_2 -> n10  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid, color=green];
m14_2 -> m14_15  [key=2, style=dotted, color=green];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_11  [key=0, style=solid];
m14_3 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label=count];
m14_3 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label=count];
m14_3 -> m14_9  [key=1, style=dashed, color=darkseagreen4, label=count];
m14_5 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_16  [key=2, style=dotted];
m14_13 -> m14_15  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_6 -> m14_15  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_17  [key=2, style=dotted];
m14_7 -> m14_16  [key=2, style=dotted];
m14_8 -> m14_15  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_10  [key=2, style=dotted];
m14_8 -> m14_11  [key=2, style=dotted];
m14_8 -> m14_12  [key=2, style=dotted];
m14_8 -> m14_13  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_16  [key=2, style=dotted];
m14_9 -> m14_7  [key=0, style=bold, color=blue];
m14_11 -> m14_15  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_16  [key=2, style=dotted];
m14_14 -> m14_0  [key=0, style=bold, color=blue];
m14_14 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m14_14 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m14_14 -> m14_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m14_18 -> m14_2  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m14_18 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.PerPageSelector"];
m15_8 -> m15_9  [key=0, style=solid];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_7  [key=2, style=dotted];
m15_9 -> m15_12  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_13  [key=2, style=dotted];
m15_11 -> m15_8  [key=0, style=bold, color=blue];
m15_14 -> m15_15  [key=0, style=solid];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_7  [key=2, style=dotted];
m15_15 -> m15_22  [key=2, style=dotted];
m15_15 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label=state];
m15_15 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label=state];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_23  [key=2, style=dotted];
m15_16 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m15_16 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m15_16 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_24  [key=2, style=dotted];
m15_17 -> m15_13  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_25  [key=2, style=dotted];
m15_20 -> m15_13  [key=2, style=dotted];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_13  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_13  [key=2, style=dotted];
m15_21 -> m15_14  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [key=2, style=dotted];
m15_6 -> m15_4  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_7  [key=2, style=dotted];
m16_1 -> m16_8  [key=2, style=dotted];
m16_1 -> m16_9  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_10  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_11  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_12  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_13  [key=2, style=dotted];
m16_5 -> m16_14  [key=2, style=dotted];
m16_5 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_6 -> m16_0  [key=0, style=bold, color=blue];
m16_61 -> m16_62  [key=0, style=solid];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_53  [key=2, style=dotted];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_54  [key=2, style=dotted];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_49  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_69  [key=2, style=dotted];
m16_67 -> m16_70  [key=2, style=dotted];
m16_67 -> m16_71  [key=2, style=dotted];
m16_62 -> m16_64  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_62 -> m16_67  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_47  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_48  [key=2, style=dotted];
m16_68 -> m16_61  [key=0, style=bold, color=blue];
m16_29 -> m16_30  [key=0, style=solid];
m16_30 -> m16_18  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_24  [key=2, style=dotted];
m16_32 -> m16_29  [key=0, style=bold, color=blue];
m16_37 -> m16_38  [key=0, style=solid];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_53  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_54  [key=2, style=dotted];
m16_44 -> m16_55  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_50  [key=2, style=dotted];
m16_41 -> m16_51  [key=2, style=dotted];
m16_41 -> m16_52  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_56  [key=2, style=dotted];
m16_45 -> m16_24  [key=2, style=dotted];
m16_38 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_38 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_47  [key=2, style=dotted];
m16_38 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_49  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_48  [key=2, style=dotted];
m16_46 -> m16_37  [key=0, style=bold, color=blue];
m16_72 -> m16_73  [key=0, style=solid];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_53  [key=2, style=dotted];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_54  [key=2, style=dotted];
m16_79 -> m16_55  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_50  [key=2, style=dotted];
m16_76 -> m16_51  [key=2, style=dotted];
m16_76 -> m16_52  [key=2, style=dotted];
m16_73 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_47  [key=2, style=dotted];
m16_73 -> m16_75  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_49  [key=2, style=dotted];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_48  [key=2, style=dotted];
m16_80 -> m16_72  [key=0, style=bold, color=blue];
m16_53 -> m16_97  [key=0, style=solid];
m16_97 -> m16_98  [key=0, style=solid];
m16_97 -> m16_28  [key=2, style=dotted];
m16_98 -> m16_53  [key=0, style=bold, color=blue];
m16_81 -> m16_82  [key=0, style=solid];
m16_94 -> m16_95  [key=0, style=solid, color=green];
m16_95 -> m16_96  [key=0, style=solid, color=green];
m16_95 -> m16_18  [key=2, style=dotted, color=green];
m16_95 -> m16_60  [key=2, style=dotted, color=green];
m16_96 -> m16_94  [key=0, style=bold, color=blue];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_36  [key=2, style=dotted];
m16_16 -> m16_18  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_19  [key=2, style=dotted];
m16_58 -> m16_18  [key=2, style=dotted];
m16_58 -> m16_60  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_82 -> m16_18  [key=2, style=dotted];
m16_82 -> m16_60  [key=2, style=dotted];
m16_82 -> m16_83  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_27 -> m16_25  [key=0, style=bold, color=blue];
m16_33 -> m16_34  [key=0, style=solid];
m16_35 -> m16_33  [key=0, style=bold, color=blue];
m16_57 -> m16_58  [key=0, style=solid];
m16_17 -> m16_15  [key=0, style=bold, color=blue];
m16_59 -> m16_57  [key=0, style=bold, color=blue];
m16_83 -> m16_81  [key=0, style=bold, color=blue];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_50  [key=2, style=dotted];
m16_88 -> m16_51  [key=2, style=dotted];
m16_88 -> m16_52  [key=2, style=dotted];
m16_92 -> m16_93  [key=0, style=solid, color=green];
m16_92 -> m16_55  [key=2, style=dotted, color=green];
m16_92 -> m16_94  [key=1, style=dashed, color=green, label="lambda expression"];
m16_91 -> m16_92  [key=0, style=solid, color=green];
m16_91 -> m16_54  [key=2, style=dotted];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_53  [key=2, style=dotted];
m16_84 -> m16_85  [key=0, style=solid];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_51  [key=2, style=dotted];
m16_89 -> m16_52  [key=2, style=dotted];
m16_85 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_47  [key=2, style=dotted];
m16_85 -> m16_87  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_85 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label=redis];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_48  [key=2, style=dotted];
m16_87 -> m16_49  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_93 -> m16_84  [key=0, style=bold, color=blue];
m16_20 -> m16_21  [key=0, style=solid];
m16_21 -> m16_18  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_24  [key=2, style=dotted];
m16_23 -> m16_20  [key=0, style=bold, color=blue];
m16_99 -> m16_92  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m16_99 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_2 -> m19_5  [key=0, style=solid];
m19_2 -> n10  [key=2, style=dotted];
m19_5 -> m19_0  [key=0, style=bold, color=blue];
m19_24 -> m19_31  [key=0, style=solid];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_33  [key=2, style=dotted];
m19_31 -> m19_34  [key=2, style=dotted];
m19_32 -> m19_24  [key=0, style=bold, color=blue];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_7 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_17  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_19  [key=2, style=dotted];
m19_12 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_19  [key=2, style=dotted];
m19_15 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_18  [key=2, style=dotted];
m19_10 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_10 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=removedCount];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_14  [key=0, style=solid];
m19_14 -> m19_9  [key=0, style=solid];
m19_14 -> m19_15  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_20  [key=2, style=dotted];
m19_13 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_13 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m19_16 -> m19_7  [key=0, style=bold, color=blue];
m19_26 -> m19_27  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_29  [key=2, style=dotted];
m19_27 -> m19_30  [key=2, style=dotted];
m19_28 -> m19_26  [key=0, style=bold, color=blue];
m19_21 -> m19_22  [key=0, style=solid];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_24  [key=2, style=dotted];
m19_22 -> m19_25  [key=2, style=dotted];
m19_23 -> m19_21  [key=0, style=bold, color=blue];
m19_35 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m19_35 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m19_35 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m19_35 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m19_35 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m19_35 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_8  [key=2, style=dotted];
m20_1 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m20_2 -> m20_3  [key=0, style=solid, color=green];
m20_2 -> m20_9  [key=2, style=dotted];
m20_2 -> m20_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_2 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_13  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid, color=green];
m20_3 -> m20_10  [key=2, style=dotted, color=green];
m20_3 -> m20_6  [key=1, style=dashed, color=green, label=state];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_11  [key=2, style=dotted];
m20_4 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_12  [key=2, style=dotted];
m20_7 -> m20_0  [key=0, style=bold, color=blue];
m20_97 -> m20_98  [key=0, style=solid];
m20_98 -> m20_99  [key=0, style=solid];
m20_98 -> m20_46  [key=2, style=dotted];
m20_98 -> m20_24  [key=2, style=dotted];
m20_98 -> m20_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_99 -> m20_100  [key=0, style=solid];
m20_99 -> m20_61  [key=2, style=dotted];
m20_99 -> m20_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_100 -> m20_101  [key=0, style=solid];
m20_100 -> m20_46  [key=2, style=dotted];
m20_100 -> m20_105  [key=2, style=dotted];
m20_100 -> m20_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_100 -> m20_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_101 -> m20_102  [key=0, style=solid];
m20_101 -> m20_62  [key=2, style=dotted];
m20_102 -> m20_103  [key=0, style=solid];
m20_102 -> m20_23  [key=2, style=dotted];
m20_102 -> m20_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_103 -> m20_104  [key=0, style=solid];
m20_103 -> m20_106  [key=2, style=dotted];
m20_103 -> m20_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_104 -> m20_97  [key=0, style=bold, color=blue];
m20_41 -> m20_42  [key=0, style=solid];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_46  [key=2, style=dotted];
m20_42 -> m20_24  [key=2, style=dotted];
m20_42 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_23  [key=2, style=dotted];
m20_43 -> m20_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_24  [key=2, style=dotted];
m20_44 -> m20_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_45 -> m20_41  [key=0, style=bold, color=blue];
m20_251 -> m20_252  [key=0, style=solid];
m20_252 -> m20_253  [key=0, style=solid];
m20_252 -> m20_128  [key=2, style=dotted];
m20_252 -> m20_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_252 -> m20_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_253 -> m20_254  [key=0, style=solid];
m20_253 -> m20_128  [key=2, style=dotted];
m20_253 -> m20_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_254 -> m20_255  [key=0, style=solid];
m20_254 -> m20_62  [key=2, style=dotted];
m20_260 -> m20_261  [key=0, style=solid];
m20_260 -> m20_36  [key=2, style=dotted];
m20_260 -> m20_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_255 -> m20_256  [key=0, style=solid];
m20_255 -> m20_62  [key=2, style=dotted];
m20_256 -> m20_257  [key=0, style=solid];
m20_256 -> m20_237  [key=2, style=dotted];
m20_256 -> m20_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_256 -> m20_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_256 -> m20_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_257 -> m20_258  [key=0, style=solid];
m20_257 -> m20_46  [key=2, style=dotted];
m20_257 -> m20_238  [key=2, style=dotted];
m20_257 -> m20_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_258 -> m20_259  [key=0, style=solid];
m20_258 -> m20_23  [key=2, style=dotted];
m20_258 -> m20_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_259 -> m20_260  [key=0, style=solid];
m20_259 -> m20_24  [key=2, style=dotted];
m20_259 -> m20_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_261 -> m20_251  [key=0, style=bold, color=blue];
m20_53 -> m20_54  [key=0, style=solid];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_61  [key=2, style=dotted];
m20_54 -> m20_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_55 -> m20_56  [key=0, style=solid];
m20_55 -> m20_62  [key=2, style=dotted];
m20_59 -> m20_60  [key=0, style=solid];
m20_59 -> m20_36  [key=2, style=dotted];
m20_59 -> m20_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_56 -> m20_57  [key=0, style=solid];
m20_56 -> m20_46  [key=2, style=dotted];
m20_56 -> m20_24  [key=2, style=dotted];
m20_56 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_57 -> m20_58  [key=0, style=solid];
m20_57 -> m20_23  [key=2, style=dotted];
m20_57 -> m20_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_58 -> m20_59  [key=0, style=solid];
m20_58 -> m20_24  [key=2, style=dotted];
m20_58 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_60 -> m20_53  [key=0, style=bold, color=blue];
m20_23 -> m20_328  [key=0, style=solid];
m20_328 -> m20_329  [key=0, style=solid];
m20_328 -> m20_330  [key=2, style=dotted];
m20_329 -> m20_23  [key=0, style=bold, color=blue];
m20_18 -> m20_19  [key=0, style=solid];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_23  [key=2, style=dotted];
m20_19 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_24  [key=2, style=dotted];
m20_20 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_25  [key=2, style=dotted];
m20_22 -> m20_18  [key=0, style=bold, color=blue];
m20_119 -> m20_120  [key=0, style=solid];
m20_120 -> m20_121  [key=0, style=solid];
m20_120 -> m20_128  [key=2, style=dotted];
m20_120 -> m20_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_120 -> m20_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_121 -> m20_122  [key=0, style=solid];
m20_121 -> m20_62  [key=2, style=dotted];
m20_122 -> m20_123  [key=0, style=solid];
m20_122 -> m20_46  [key=2, style=dotted];
m20_122 -> m20_84  [key=2, style=dotted];
m20_122 -> m20_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_124 -> m20_125  [key=0, style=solid];
m20_124 -> m20_46  [key=2, style=dotted];
m20_124 -> m20_84  [key=2, style=dotted];
m20_124 -> m20_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_123 -> m20_124  [key=0, style=solid];
m20_123 -> m20_46  [key=2, style=dotted];
m20_123 -> m20_84  [key=2, style=dotted];
m20_123 -> m20_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_125 -> m20_126  [key=0, style=solid];
m20_125 -> m20_23  [key=2, style=dotted];
m20_126 -> m20_127  [key=0, style=solid];
m20_126 -> m20_35  [key=2, style=dotted];
m20_127 -> m20_119  [key=0, style=bold, color=blue];
m20_164 -> m20_165  [key=0, style=solid];
m20_165 -> m20_166  [key=0, style=solid];
m20_165 -> m20_128  [key=2, style=dotted];
m20_165 -> m20_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_165 -> m20_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_166 -> m20_167  [key=0, style=solid];
m20_166 -> m20_62  [key=2, style=dotted];
m20_167 -> m20_168  [key=0, style=solid];
m20_167 -> m20_46  [key=2, style=dotted];
m20_167 -> m20_105  [key=2, style=dotted];
m20_167 -> m20_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_167 -> m20_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_171 -> m20_172  [key=0, style=solid];
m20_171 -> m20_36  [key=2, style=dotted];
m20_171 -> m20_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_168 -> m20_169  [key=0, style=solid];
m20_168 -> m20_23  [key=2, style=dotted];
m20_169 -> m20_170  [key=0, style=solid];
m20_169 -> m20_35  [key=2, style=dotted];
m20_170 -> m20_171  [key=0, style=solid];
m20_170 -> m20_36  [key=2, style=dotted];
m20_170 -> m20_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_172 -> m20_164  [key=0, style=bold, color=blue];
m20_228 -> m20_229  [key=0, style=solid];
m20_229 -> m20_230  [key=0, style=solid];
m20_229 -> m20_128  [key=2, style=dotted];
m20_229 -> m20_235  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_230 -> m20_231  [key=0, style=solid];
m20_230 -> m20_62  [key=2, style=dotted];
m20_235 -> m20_236  [key=0, style=solid];
m20_235 -> m20_36  [key=2, style=dotted];
m20_235 -> m20_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_231 -> m20_232  [key=0, style=solid];
m20_231 -> m20_237  [key=2, style=dotted];
m20_231 -> m20_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_231 -> m20_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_231 -> m20_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_232 -> m20_233  [key=0, style=solid];
m20_232 -> m20_46  [key=2, style=dotted];
m20_232 -> m20_238  [key=2, style=dotted];
m20_232 -> m20_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_233 -> m20_234  [key=0, style=solid];
m20_233 -> m20_23  [key=2, style=dotted];
m20_233 -> m20_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_234 -> m20_235  [key=0, style=solid];
m20_234 -> m20_24  [key=2, style=dotted];
m20_234 -> m20_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_236 -> m20_228  [key=0, style=bold, color=blue];
m20_185 -> m20_186  [key=0, style=solid];
m20_186 -> m20_187  [key=0, style=solid];
m20_186 -> m20_128  [key=2, style=dotted];
m20_186 -> m20_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_186 -> m20_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_187 -> m20_188  [key=0, style=solid];
m20_187 -> m20_128  [key=2, style=dotted];
m20_187 -> m20_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_187 -> m20_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_188 -> m20_189  [key=0, style=solid];
m20_188 -> m20_62  [key=2, style=dotted];
m20_193 -> m20_194  [key=0, style=solid];
m20_193 -> m20_36  [key=2, style=dotted];
m20_193 -> m20_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_189 -> m20_190  [key=0, style=solid];
m20_189 -> m20_62  [key=2, style=dotted];
m20_190 -> m20_191  [key=0, style=solid];
m20_190 -> m20_46  [key=2, style=dotted];
m20_190 -> m20_105  [key=2, style=dotted];
m20_190 -> m20_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_190 -> m20_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_191 -> m20_192  [key=0, style=solid];
m20_191 -> m20_23  [key=2, style=dotted];
m20_192 -> m20_193  [key=0, style=solid];
m20_192 -> m20_35  [key=2, style=dotted];
m20_194 -> m20_185  [key=0, style=bold, color=blue];
m20_73 -> m20_74  [key=0, style=solid];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_61  [key=2, style=dotted];
m20_74 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m20_74 -> m20_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_61  [key=2, style=dotted];
m20_75 -> m20_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_46  [key=2, style=dotted];
m20_77 -> m20_84  [key=2, style=dotted];
m20_77 -> m20_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_78 -> m20_79  [key=0, style=solid];
m20_78 -> m20_62  [key=2, style=dotted];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_46  [key=2, style=dotted];
m20_76 -> m20_84  [key=2, style=dotted];
m20_76 -> m20_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_79 -> m20_80  [key=0, style=solid];
m20_79 -> m20_62  [key=2, style=dotted];
m20_80 -> m20_81  [key=0, style=solid];
m20_80 -> m20_46  [key=2, style=dotted];
m20_80 -> m20_24  [key=2, style=dotted];
m20_80 -> m20_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_81 -> m20_82  [key=0, style=solid];
m20_81 -> m20_23  [key=2, style=dotted];
m20_81 -> m20_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_82 -> m20_83  [key=0, style=solid];
m20_82 -> m20_24  [key=2, style=dotted];
m20_82 -> m20_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_83 -> m20_73  [key=0, style=bold, color=blue];
m20_30 -> m20_31  [key=0, style=solid];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_23  [key=2, style=dotted];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_35  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_36  [key=2, style=dotted];
m20_33 -> m20_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_34 -> m20_30  [key=0, style=bold, color=blue];
m20_324 -> m20_325  [key=0, style=solid];
m20_14 -> m20_15  [key=0, style=solid];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_17  [key=2, style=dotted];
m20_16 -> m20_14  [key=0, style=bold, color=blue];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_29  [key=2, style=dotted];
m20_26 -> m20_27  [key=0, style=solid];
m20_28 -> m20_26  [key=0, style=bold, color=blue];
m20_37 -> m20_38  [key=0, style=solid];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_40  [key=2, style=dotted];
m20_39 -> m20_37  [key=0, style=bold, color=blue];
m20_47 -> m20_48  [key=0, style=solid];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_35  [key=2, style=dotted];
m20_50 -> m20_51  [key=0, style=solid];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_40  [key=2, style=dotted];
m20_49 -> m20_47  [key=0, style=bold, color=blue];
m20_52 -> m20_50  [key=0, style=bold, color=blue];
m20_63 -> m20_64  [key=0, style=solid];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_35  [key=2, style=dotted];
m20_66 -> m20_67  [key=0, style=solid];
m20_69 -> m20_70  [key=0, style=solid];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_40  [key=2, style=dotted];
m20_65 -> m20_63  [key=0, style=bold, color=blue];
m20_68 -> m20_66  [key=0, style=bold, color=blue];
m20_70 -> m20_71  [key=0, style=solid];
m20_70 -> m20_24  [key=2, style=dotted];
m20_70 -> m20_72  [key=2, style=dotted];
m20_71 -> m20_69  [key=0, style=bold, color=blue];
m20_85 -> m20_86  [key=0, style=solid];
m20_88 -> m20_89  [key=0, style=solid];
m20_91 -> m20_92  [key=0, style=solid];
m20_95 -> m20_96  [key=0, style=solid];
m20_95 -> m20_35  [key=2, style=dotted];
m20_94 -> m20_95  [key=0, style=solid];
m20_86 -> m20_87  [key=0, style=solid];
m20_86 -> m20_24  [key=2, style=dotted];
m20_86 -> m20_72  [key=2, style=dotted];
m20_87 -> m20_85  [key=0, style=bold, color=blue];
m20_89 -> m20_90  [key=0, style=solid];
m20_89 -> m20_24  [key=2, style=dotted];
m20_89 -> m20_72  [key=2, style=dotted];
m20_90 -> m20_88  [key=0, style=bold, color=blue];
m20_92 -> m20_93  [key=0, style=solid];
m20_92 -> m20_40  [key=2, style=dotted];
m20_93 -> m20_91  [key=0, style=bold, color=blue];
m20_96 -> m20_94  [key=0, style=bold, color=blue];
m20_107 -> m20_108  [key=0, style=solid];
m20_110 -> m20_111  [key=0, style=solid];
m20_113 -> m20_114  [key=0, style=solid];
m20_117 -> m20_118  [key=0, style=solid];
m20_117 -> m20_35  [key=2, style=dotted];
m20_116 -> m20_117  [key=0, style=solid];
m20_108 -> m20_109  [key=0, style=solid];
m20_108 -> m20_40  [key=2, style=dotted];
m20_109 -> m20_107  [key=0, style=bold, color=blue];
m20_111 -> m20_112  [key=0, style=solid];
m20_111 -> m20_24  [key=2, style=dotted];
m20_111 -> m20_72  [key=2, style=dotted];
m20_112 -> m20_110  [key=0, style=bold, color=blue];
m20_114 -> m20_115  [key=0, style=solid];
m20_115 -> m20_113  [key=0, style=bold, color=blue];
m20_118 -> m20_116  [key=0, style=bold, color=blue];
m20_129 -> m20_130  [key=0, style=solid];
m20_133 -> m20_134  [key=0, style=solid];
m20_136 -> m20_137  [key=0, style=solid];
m20_130 -> m20_131  [key=0, style=solid];
m20_130 -> m20_24  [key=2, style=dotted];
m20_130 -> m20_132  [key=2, style=dotted];
m20_131 -> m20_129  [key=0, style=bold, color=blue];
m20_134 -> m20_135  [key=0, style=solid];
m20_134 -> m20_40  [key=2, style=dotted];
m20_135 -> m20_133  [key=0, style=bold, color=blue];
m20_137 -> m20_138  [key=0, style=solid];
m20_137 -> m20_24  [key=2, style=dotted];
m20_137 -> m20_139  [key=2, style=dotted];
m20_138 -> m20_136  [key=0, style=bold, color=blue];
m20_152 -> m20_153  [key=0, style=solid];
m20_155 -> m20_156  [key=0, style=solid];
m20_158 -> m20_159  [key=0, style=solid];
m20_161 -> m20_162  [key=0, style=solid];
m20_153 -> m20_154  [key=0, style=solid];
m20_153 -> m20_24  [key=2, style=dotted];
m20_153 -> m20_132  [key=2, style=dotted];
m20_154 -> m20_152  [key=0, style=bold, color=blue];
m20_156 -> m20_157  [key=0, style=solid];
m20_156 -> m20_24  [key=2, style=dotted];
m20_156 -> m20_132  [key=2, style=dotted];
m20_157 -> m20_155  [key=0, style=bold, color=blue];
m20_159 -> m20_160  [key=0, style=solid];
m20_159 -> m20_24  [key=2, style=dotted];
m20_159 -> m20_139  [key=2, style=dotted];
m20_160 -> m20_158  [key=0, style=bold, color=blue];
m20_162 -> m20_163  [key=0, style=solid];
m20_162 -> m20_24  [key=2, style=dotted];
m20_162 -> m20_139  [key=2, style=dotted];
m20_163 -> m20_161  [key=0, style=bold, color=blue];
m20_173 -> m20_174  [key=0, style=solid];
m20_176 -> m20_177  [key=0, style=solid];
m20_179 -> m20_180  [key=0, style=solid];
m20_182 -> m20_183  [key=0, style=solid];
m20_174 -> m20_175  [key=0, style=solid];
m20_174 -> m20_24  [key=2, style=dotted];
m20_174 -> m20_132  [key=2, style=dotted];
m20_175 -> m20_173  [key=0, style=bold, color=blue];
m20_177 -> m20_178  [key=0, style=solid];
m20_178 -> m20_176  [key=0, style=bold, color=blue];
m20_180 -> m20_181  [key=0, style=solid];
m20_180 -> m20_40  [key=2, style=dotted];
m20_181 -> m20_179  [key=0, style=bold, color=blue];
m20_183 -> m20_184  [key=0, style=solid];
m20_183 -> m20_24  [key=2, style=dotted];
m20_183 -> m20_139  [key=2, style=dotted];
m20_184 -> m20_182  [key=0, style=bold, color=blue];
m20_195 -> m20_196  [key=0, style=solid];
m20_198 -> m20_199  [key=0, style=solid];
m20_201 -> m20_202  [key=0, style=solid];
m20_196 -> m20_197  [key=0, style=solid];
m20_196 -> m20_24  [key=2, style=dotted];
m20_196 -> m20_132  [key=2, style=dotted];
m20_197 -> m20_195  [key=0, style=bold, color=blue];
m20_199 -> m20_200  [key=0, style=solid];
m20_200 -> m20_198  [key=0, style=bold, color=blue];
m20_202 -> m20_203  [key=0, style=solid];
m20_202 -> m20_24  [key=2, style=dotted];
m20_202 -> m20_139  [key=2, style=dotted];
m20_202 -> m20_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_203 -> m20_201  [key=0, style=bold, color=blue];
m20_204 -> m20_205  [key=0, style=solid];
m20_205 -> m20_206  [key=0, style=solid];
m20_206 -> m20_204  [key=0, style=bold, color=blue];
m20_216 -> m20_217  [key=0, style=solid];
m20_220 -> m20_221  [key=0, style=solid];
m20_220 -> m20_35  [key=2, style=dotted];
m20_219 -> m20_220  [key=0, style=solid];
m20_222 -> m20_223  [key=0, style=solid];
m20_225 -> m20_226  [key=0, style=solid];
m20_217 -> m20_218  [key=0, style=solid];
m20_217 -> m20_24  [key=2, style=dotted];
m20_217 -> m20_132  [key=2, style=dotted];
m20_218 -> m20_216  [key=0, style=bold, color=blue];
m20_221 -> m20_219  [key=0, style=bold, color=blue];
m20_223 -> m20_224  [key=0, style=solid];
m20_223 -> m20_40  [key=2, style=dotted];
m20_224 -> m20_222  [key=0, style=bold, color=blue];
m20_226 -> m20_227  [key=0, style=solid];
m20_226 -> m20_24  [key=2, style=dotted];
m20_226 -> m20_139  [key=2, style=dotted];
m20_227 -> m20_225  [key=0, style=bold, color=blue];
m20_246 -> m20_247  [key=0, style=solid];
m20_246 -> m20_24  [key=2, style=dotted];
m20_246 -> m20_139  [key=2, style=dotted];
m20_246 -> m20_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_249 -> m20_250  [key=0, style=solid];
m20_239 -> m20_240  [key=0, style=solid];
m20_243 -> m20_244  [key=0, style=solid];
m20_243 -> m20_35  [key=2, style=dotted];
m20_242 -> m20_243  [key=0, style=solid];
m20_245 -> m20_246  [key=0, style=solid];
m20_240 -> m20_241  [key=0, style=solid];
m20_240 -> m20_40  [key=2, style=dotted];
m20_241 -> m20_239  [key=0, style=bold, color=blue];
m20_244 -> m20_242  [key=0, style=bold, color=blue];
m20_247 -> m20_245  [key=0, style=bold, color=blue];
m20_248 -> m20_249  [key=0, style=solid];
m20_250 -> m20_248  [key=0, style=bold, color=blue];
m20_269 -> m20_270  [key=0, style=solid];
m20_269 -> m20_24  [key=2, style=dotted];
m20_269 -> m20_139  [key=2, style=dotted];
m20_269 -> m20_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_272 -> m20_273  [key=0, style=solid];
m20_262 -> m20_263  [key=0, style=solid];
m20_266 -> m20_267  [key=0, style=solid];
m20_266 -> m20_35  [key=2, style=dotted];
m20_265 -> m20_266  [key=0, style=solid];
m20_268 -> m20_269  [key=0, style=solid];
m20_263 -> m20_264  [key=0, style=solid];
m20_263 -> m20_40  [key=2, style=dotted];
m20_264 -> m20_262  [key=0, style=bold, color=blue];
m20_267 -> m20_265  [key=0, style=bold, color=blue];
m20_270 -> m20_268  [key=0, style=bold, color=blue];
m20_271 -> m20_272  [key=0, style=solid];
m20_273 -> m20_271  [key=0, style=bold, color=blue];
m20_287 -> m20_288  [key=0, style=solid];
m20_287 -> m20_24  [key=2, style=dotted];
m20_287 -> m20_139  [key=2, style=dotted];
m20_287 -> m20_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_290 -> m20_291  [key=0, style=solid];
m20_283 -> m20_284  [key=0, style=solid];
m20_286 -> m20_287  [key=0, style=solid];
m20_292 -> m20_293  [key=0, style=solid];
m20_296 -> m20_297  [key=0, style=solid];
m20_296 -> m20_35  [key=2, style=dotted];
m20_295 -> m20_296  [key=0, style=solid];
m20_284 -> m20_285  [key=0, style=solid];
m20_284 -> m20_40  [key=2, style=dotted];
m20_285 -> m20_283  [key=0, style=bold, color=blue];
m20_288 -> m20_286  [key=0, style=bold, color=blue];
m20_289 -> m20_290  [key=0, style=solid];
m20_291 -> m20_289  [key=0, style=bold, color=blue];
m20_293 -> m20_294  [key=0, style=solid];
m20_294 -> m20_292  [key=0, style=bold, color=blue];
m20_297 -> m20_295  [key=0, style=bold, color=blue];
m20_309 -> m20_310  [key=0, style=solid];
m20_312 -> m20_313  [key=0, style=solid];
m20_315 -> m20_316  [key=0, style=solid];
m20_319 -> m20_320  [key=0, style=solid];
m20_319 -> m20_35  [key=2, style=dotted];
m20_318 -> m20_319  [key=0, style=solid];
m20_321 -> m20_322  [key=0, style=solid];
m20_310 -> m20_311  [key=0, style=solid];
m20_310 -> m20_40  [key=2, style=dotted];
m20_311 -> m20_309  [key=0, style=bold, color=blue];
m20_313 -> m20_314  [key=0, style=solid];
m20_313 -> m20_24  [key=2, style=dotted];
m20_313 -> m20_139  [key=2, style=dotted];
m20_314 -> m20_312  [key=0, style=bold, color=blue];
m20_316 -> m20_317  [key=0, style=solid];
m20_317 -> m20_315  [key=0, style=bold, color=blue];
m20_320 -> m20_318  [key=0, style=bold, color=blue];
m20_322 -> m20_323  [key=0, style=solid];
m20_322 -> m20_24  [key=2, style=dotted];
m20_322 -> m20_139  [key=2, style=dotted];
m20_322 -> m20_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_323 -> m20_321  [key=0, style=bold, color=blue];
m20_325 -> m20_326  [key=0, style=solid];
m20_326 -> m20_324  [key=0, style=bold, color=blue];
m20_207 -> m20_208  [key=0, style=solid];
m20_208 -> m20_209  [key=0, style=solid];
m20_208 -> m20_128  [key=2, style=dotted];
m20_208 -> m20_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_208 -> m20_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_209 -> m20_210  [key=0, style=solid];
m20_209 -> m20_62  [key=2, style=dotted];
m20_210 -> m20_211  [key=0, style=solid];
m20_210 -> m20_46  [key=2, style=dotted];
m20_210 -> m20_24  [key=2, style=dotted];
m20_210 -> m20_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_214 -> m20_215  [key=0, style=solid];
m20_214 -> m20_36  [key=2, style=dotted];
m20_214 -> m20_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_211 -> m20_212  [key=0, style=solid];
m20_211 -> m20_23  [key=2, style=dotted];
m20_211 -> m20_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_212 -> m20_213  [key=0, style=solid];
m20_212 -> m20_24  [key=2, style=dotted];
m20_212 -> m20_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_213 -> m20_214  [key=0, style=solid];
m20_213 -> m20_36  [key=2, style=dotted];
m20_213 -> m20_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_215 -> m20_207  [key=0, style=bold, color=blue];
m20_298 -> m20_299  [key=0, style=solid];
m20_299 -> m20_300  [key=0, style=solid];
m20_299 -> m20_128  [key=2, style=dotted];
m20_299 -> m20_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_299 -> m20_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_300 -> m20_301  [key=0, style=solid];
m20_300 -> m20_128  [key=2, style=dotted];
m20_300 -> m20_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_300 -> m20_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_301 -> m20_302  [key=0, style=solid];
m20_301 -> m20_62  [key=2, style=dotted];
m20_307 -> m20_308  [key=0, style=solid];
m20_307 -> m20_36  [key=2, style=dotted];
m20_307 -> m20_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_302 -> m20_303  [key=0, style=solid];
m20_302 -> m20_62  [key=2, style=dotted];
m20_304 -> m20_305  [key=0, style=solid];
m20_304 -> m20_46  [key=2, style=dotted];
m20_304 -> m20_105  [key=2, style=dotted];
m20_304 -> m20_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_304 -> m20_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_303 -> m20_304  [key=0, style=solid];
m20_303 -> m20_46  [key=2, style=dotted];
m20_303 -> m20_24  [key=2, style=dotted];
m20_303 -> m20_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_305 -> m20_306  [key=0, style=solid];
m20_305 -> m20_23  [key=2, style=dotted];
m20_305 -> m20_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_306 -> m20_307  [key=0, style=solid];
m20_306 -> m20_106  [key=2, style=dotted];
m20_306 -> m20_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_308 -> m20_298  [key=0, style=bold, color=blue];
m20_274 -> m20_275  [key=0, style=solid];
m20_275 -> m20_276  [key=0, style=solid];
m20_275 -> m20_128  [key=2, style=dotted];
m20_275 -> m20_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m20_276 -> m20_277  [key=0, style=solid];
m20_276 -> m20_62  [key=2, style=dotted];
m20_279 -> m20_280  [key=0, style=solid];
m20_279 -> m20_46  [key=2, style=dotted];
m20_279 -> m20_105  [key=2, style=dotted];
m20_279 -> m20_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_279 -> m20_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_277 -> m20_278  [key=0, style=solid];
m20_277 -> m20_237  [key=2, style=dotted];
m20_277 -> m20_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_277 -> m20_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_277 -> m20_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_278 -> m20_279  [key=0, style=solid];
m20_278 -> m20_46  [key=2, style=dotted];
m20_278 -> m20_238  [key=2, style=dotted];
m20_278 -> m20_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_280 -> m20_281  [key=0, style=solid];
m20_280 -> m20_23  [key=2, style=dotted];
m20_280 -> m20_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_281 -> m20_282  [key=0, style=solid];
m20_281 -> m20_106  [key=2, style=dotted];
m20_281 -> m20_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_282 -> m20_274  [key=0, style=bold, color=blue];
m20_17 -> m20_327  [key=0, style=solid];
m20_327 -> m20_17  [key=0, style=bold, color=blue];
m20_140 -> m20_141  [key=0, style=solid];
m20_141 -> m20_142  [key=0, style=solid];
m20_141 -> m20_128  [key=2, style=dotted];
m20_141 -> m20_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_141 -> m20_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_141 -> m20_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m20_142 -> m20_143  [key=0, style=solid];
m20_142 -> m20_128  [key=2, style=dotted];
m20_142 -> m20_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_142 -> m20_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_142 -> m20_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m20_143 -> m20_144  [key=0, style=solid];
m20_143 -> m20_62  [key=2, style=dotted];
m20_145 -> m20_146  [key=0, style=solid];
m20_145 -> m20_46  [key=2, style=dotted];
m20_145 -> m20_84  [key=2, style=dotted];
m20_145 -> m20_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_148 -> m20_149  [key=0, style=solid];
m20_148 -> m20_46  [key=2, style=dotted];
m20_148 -> m20_84  [key=2, style=dotted];
m20_148 -> m20_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_144 -> m20_145  [key=0, style=solid];
m20_144 -> m20_62  [key=2, style=dotted];
m20_146 -> m20_147  [key=0, style=solid];
m20_146 -> m20_46  [key=2, style=dotted];
m20_146 -> m20_84  [key=2, style=dotted];
m20_146 -> m20_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_147 -> m20_148  [key=0, style=solid];
m20_147 -> m20_46  [key=2, style=dotted];
m20_147 -> m20_84  [key=2, style=dotted];
m20_147 -> m20_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_149 -> m20_150  [key=0, style=solid];
m20_149 -> m20_23  [key=2, style=dotted];
m20_150 -> m20_151  [key=0, style=solid];
m20_150 -> m20_35  [key=2, style=dotted];
m20_151 -> m20_140  [key=0, style=bold, color=blue];
m20_331 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_234  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_254  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_257  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_278  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_296  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_302  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_306  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_319  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_331 -> m20_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m20_332 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_333 -> m20_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_334 -> m20_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_335 -> m20_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_336 -> m20_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_337 -> m20_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_338 -> m20_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_339 -> m20_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_339 -> m20_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_340 -> m20_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_341 -> m20_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_341 -> m20_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_342 -> m20_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_342 -> m20_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m20_343 -> m20_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m20_344 -> m20_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m22_33 -> m22_34  [key=0, style=solid];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_39  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_40  [key=2, style=dotted];
m22_36 -> m22_37  [key=0, style=solid];
m22_36 -> m22_41  [key=2, style=dotted];
m22_36 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_41  [key=2, style=dotted];
m22_37 -> m22_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_38 -> m22_33  [key=0, style=bold, color=blue];
m22_39 -> m22_58  [key=0, style=solid];
m22_58 -> m22_59  [key=0, style=solid];
m22_58 -> m22_32  [key=2, style=dotted];
m22_59 -> m22_39  [key=0, style=bold, color=blue];
m22_25 -> m22_26  [key=0, style=solid];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_19  [key=2, style=dotted];
m22_26 -> m22_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_20  [key=2, style=dotted];
m22_28 -> m22_25  [key=0, style=bold, color=blue];
m22_15 -> m22_16  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_19  [key=2, style=dotted];
m22_16 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_20  [key=2, style=dotted];
m22_18 -> m22_15  [key=0, style=bold, color=blue];
m22_54 -> m22_55  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=2, style=dotted];
m22_13 -> m22_11  [key=0, style=bold, color=blue];
m22_21 -> m22_22  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_24  [key=2, style=dotted];
m22_23 -> m22_21  [key=0, style=bold, color=blue];
m22_29 -> m22_30  [key=0, style=solid];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_32  [key=2, style=dotted];
m22_31 -> m22_29  [key=0, style=bold, color=blue];
m22_42 -> m22_43  [key=0, style=solid];
m22_45 -> m22_46  [key=0, style=solid];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_14  [key=2, style=dotted];
m22_44 -> m22_42  [key=0, style=bold, color=blue];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_48  [key=2, style=dotted];
m22_47 -> m22_45  [key=0, style=bold, color=blue];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_57  [key=2, style=dotted];
m22_56 -> m22_54  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_1 -> m22_6  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid, color=green];
m22_2 -> m22_7  [key=2, style=dotted, color=green];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_9  [key=2, style=dotted];
m22_4 -> m22_10  [key=2, style=dotted];
m22_4 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m22_49 -> m22_50  [key=0, style=solid];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_39  [key=2, style=dotted];
m22_51 -> m22_52  [key=0, style=solid];
m22_51 -> m22_40  [key=2, style=dotted];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_41  [key=2, style=dotted];
m22_52 -> m22_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_53 -> m22_49  [key=0, style=bold, color=blue];
m22_60 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m22_60 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerHeartbeatFacts"];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_11  [key=2, style=dotted];
m24_9 -> m24_12  [key=2, style=dotted];
m24_10 -> m24_8  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=0, style=solid];
m24_1 -> m24_6  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_2 -> m24_5  [key=0, style=solid];
m24_2 -> n10  [key=2, style=dotted];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_0  [key=0, style=bold, color=blue];
m24_13 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m24_13 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m24_13 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m25_8 -> m25_9  [key=0, style=solid];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_3  [key=2, style=dotted];
m25_9 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_10 -> m25_8  [key=0, style=bold, color=blue];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_7  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_18  [key=2, style=dotted];
m25_17 -> m25_14  [key=0, style=bold, color=blue];
m25_27 -> m25_28  [key=0, style=solid, color=green];
m25_28 -> m25_29  [key=0, style=solid, color=green];
m25_28 -> m25_7  [key=2, style=dotted, color=green];
m25_29 -> m25_30  [key=0, style=solid, color=green];
m25_29 -> m25_31  [key=2, style=dotted, color=green];
m25_30 -> m25_27  [key=0, style=bold, color=blue];
m25_19 -> m25_20  [key=0, style=solid];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_7  [key=2, style=dotted];
m25_20 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=state];
m25_20 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label=state];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_25  [key=2, style=dotted];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_26  [key=2, style=dotted];
m25_22 -> m25_18  [key=2, style=dotted];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_18  [key=2, style=dotted];
m25_24 -> m25_19  [key=0, style=bold, color=blue];
m25_11 -> m25_12  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=2, style=dotted];
m25_6 -> m25_4  [key=0, style=bold, color=blue];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_7  [key=2, style=dotted];
m25_13 -> m25_11  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=2, style=dotted];
m25_1 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_14  [key=2, style=dotted];
m26_27 -> m26_28  [key=0, style=solid];
m26_28 -> m26_29  [key=0, style=solid, color=red];
m26_28 -> m26_19  [key=2, style=dotted];
m26_28 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=filter];
m26_28 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m26_29 -> m26_30  [key=0, style=solid, color=red];
m26_29 -> m26_10  [key=2, style=dotted, color=red];
m26_29 -> m26_32  [key=2, style=dotted, color=red];
m26_29 -> m26_35  [key=1, style=dashed, color=red, label=context];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_33  [key=2, style=dotted];
m26_30 -> m26_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_31 -> m26_27  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid, color=green];
m26_0 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m26_0 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m26_0 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m26_1 -> m26_2  [key=0, style=solid, color=green];
m26_1 -> m26_6  [key=2, style=dotted];
m26_1 -> m26_7  [key=2, style=dotted];
m26_1 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_1 -> m26_8  [key=2, style=dotted, color=green];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_8  [key=2, style=dotted];
m26_2 -> m26_9  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_9  [key=2, style=dotted];
m26_3 -> m26_10  [key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_10  [key=2, style=dotted];
m26_4 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label=token];
m26_4 -> m26_11  [key=2, style=dotted];
m26_5 -> m26_0  [key=0, style=bold, color=blue];
m26_5 -> m26_7  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_11 -> m26_12  [key=0, style=solid];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_12  [key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_19  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_26  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_20  [key=2, style=dotted];
m26_25 -> m26_21  [key=0, style=bold, color=blue];
m26_7 -> m26_0  [key=0, style=bold, color=blue];
m26_14 -> m26_37  [key=0, style=solid];
m26_37 -> m26_14  [key=0, style=bold, color=blue];
m26_34 -> m26_35  [key=0, style=solid];
m26_13 -> m26_11  [key=0, style=bold, color=blue];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_26  [key=2, style=dotted];
m26_36 -> m26_34  [key=0, style=bold, color=blue];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_19  [key=2, style=dotted];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_20  [key=2, style=dotted];
m26_18 -> m26_15  [key=0, style=bold, color=blue];
m26_38 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.QueueAttributeFacts"];
m26_38 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.QueueAttributeFacts"];
m26_38 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.QueueAttributeFacts"];
m26_38 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.QueueAttributeFacts"];
m26_38 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.QueueAttributeFacts"];
m26_38 -> m26_29  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.QueueAttributeFacts"];
m26_39 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m26_40 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label=context];
m27_6 -> m27_7  [key=0, style=solid];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_9  [key=2, style=dotted];
m27_8 -> m27_6  [key=0, style=bold, color=blue];
m27_128 -> m27_129  [key=0, style=solid];
m27_128 -> m27_26  [key=2, style=dotted];
m27_128 -> m27_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_126 -> m27_127  [key=0, style=solid];
m27_126 -> m27_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_126 -> m27_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_126 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_127 -> m27_128  [key=0, style=solid];
m27_127 -> m27_26  [key=2, style=dotted];
m27_127 -> m27_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_129 -> m27_126  [key=0, style=bold, color=blue];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_157 -> m27_158  [key=0, style=solid];
m27_157 -> m27_26  [key=2, style=dotted];
m27_157 -> m27_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_158 -> m27_156  [key=0, style=bold, color=blue];
m27_111 -> m27_112  [key=0, style=solid];
m27_111 -> m27_26  [key=2, style=dotted];
m27_111 -> m27_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_109 -> m27_110  [key=0, style=solid];
m27_109 -> m27_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_109 -> m27_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_109 -> m27_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_110 -> m27_111  [key=0, style=solid];
m27_110 -> m27_26  [key=2, style=dotted];
m27_110 -> m27_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_112 -> m27_109  [key=0, style=bold, color=blue];
m27_169 -> m27_170  [key=0, style=solid];
m27_169 -> m27_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_170 -> m27_171  [key=0, style=solid];
m27_170 -> m27_26  [key=2, style=dotted];
m27_170 -> m27_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_171 -> m27_169  [key=0, style=bold, color=blue];
m27_55 -> m27_56  [key=0, style=solid];
m27_55 -> m27_26  [key=2, style=dotted];
m27_55 -> m27_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_53 -> m27_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_53 -> m27_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_53 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_53 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_53 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_53 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_53 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_53 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_53 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_26  [key=2, style=dotted];
m27_54 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_63  [key=2, style=dotted];
m27_56 -> m27_64  [key=2, style=dotted];
m27_56 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_56 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_56 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_65  [key=2, style=dotted];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_60  [key=0, style=solid];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_65  [key=2, style=dotted];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_26  [key=2, style=dotted];
m27_60 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_66  [key=2, style=dotted];
m27_62 -> m27_53  [key=0, style=bold, color=blue];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_38 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_38 -> m27_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_38 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_38 -> m27_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_26  [key=2, style=dotted];
m27_39 -> m27_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_26  [key=2, style=dotted];
m27_40 -> m27_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_26  [key=2, style=dotted];
m27_41 -> m27_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_42 -> m27_38  [key=0, style=bold, color=blue];
m27_119 -> m27_120  [key=0, style=solid];
m27_119 -> m27_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_120 -> m27_121  [key=0, style=solid];
m27_120 -> m27_26  [key=2, style=dotted];
m27_120 -> m27_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_121 -> m27_119  [key=0, style=bold, color=blue];
m27_136 -> m27_137  [key=0, style=solid];
m27_136 -> m27_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_137 -> m27_138  [key=0, style=solid];
m27_137 -> m27_26  [key=2, style=dotted];
m27_137 -> m27_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_138 -> m27_136  [key=0, style=bold, color=blue];
m27_149 -> m27_150  [key=0, style=solid];
m27_149 -> m27_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_150 -> m27_151  [key=0, style=solid];
m27_150 -> m27_26  [key=2, style=dotted];
m27_150 -> m27_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_151 -> m27_149  [key=0, style=bold, color=blue];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_17  [key=0, style=solid];
m27_11 -> m27_18  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m27_12 -> m27_12  [key=3, color=darkorchid, style=bold, label="Local variable int replayCount"];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label=maxReplayCount];
m27_13 -> m27_13  [key=3, color=darkorchid, style=bold, label="Local variable int maxReplayCount"];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_14  [key=0, style=solid];
m27_15 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_17  [key=0, style=solid];
m27_14 -> m27_19  [key=2, style=dotted];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_20  [key=2, style=dotted];
m27_17 -> m27_10  [key=0, style=bold, color=blue];
m27_64 -> m27_0  [key=3, color=darkorchid, style=bold, label="Field variable IRedisTransaction _transaction"];
m27_172 -> m27_173  [key=0, style=solid];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_30  [key=2, style=dotted];
m27_28 -> m27_31  [key=2, style=dotted];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_30  [key=2, style=dotted];
m27_33 -> m27_31  [key=2, style=dotted];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_30  [key=2, style=dotted];
m27_36 -> m27_31  [key=2, style=dotted];
m27_27 -> m27_28  [key=0, style=solid];
m27_32 -> m27_33  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid];
m27_29 -> m27_27  [key=0, style=bold, color=blue];
m27_34 -> m27_32  [key=0, style=bold, color=blue];
m27_37 -> m27_35  [key=0, style=bold, color=blue];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_30  [key=2, style=dotted];
m27_44 -> m27_46  [key=2, style=dotted];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_30  [key=2, style=dotted];
m27_48 -> m27_46  [key=2, style=dotted];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_30  [key=2, style=dotted];
m27_51 -> m27_46  [key=2, style=dotted];
m27_43 -> m27_44  [key=0, style=solid];
m27_47 -> m27_48  [key=0, style=solid];
m27_50 -> m27_51  [key=0, style=solid];
m27_45 -> m27_43  [key=0, style=bold, color=blue];
m27_49 -> m27_47  [key=0, style=bold, color=blue];
m27_52 -> m27_50  [key=0, style=bold, color=blue];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_30  [key=2, style=dotted];
m27_68 -> m27_70  [key=2, style=dotted];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_30  [key=2, style=dotted];
m27_72 -> m27_74  [key=2, style=dotted];
m27_76 -> m27_77  [key=0, style=solid];
m27_76 -> m27_30  [key=2, style=dotted];
m27_76 -> m27_78  [key=2, style=dotted];
m27_67 -> m27_68  [key=0, style=solid];
m27_71 -> m27_72  [key=0, style=solid];
m27_75 -> m27_76  [key=0, style=solid];
m27_69 -> m27_67  [key=0, style=bold, color=blue];
m27_73 -> m27_71  [key=0, style=bold, color=blue];
m27_77 -> m27_75  [key=0, style=bold, color=blue];
m27_87 -> m27_88  [key=0, style=solid];
m27_87 -> m27_30  [key=2, style=dotted];
m27_87 -> m27_89  [key=2, style=dotted];
m27_87 -> m27_90  [key=2, style=dotted];
m27_86 -> m27_87  [key=0, style=solid];
m27_88 -> m27_86  [key=0, style=bold, color=blue];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_98  [key=2, style=dotted];
m27_100 -> m27_101  [key=0, style=solid];
m27_100 -> m27_30  [key=2, style=dotted];
m27_100 -> m27_90  [key=2, style=dotted];
m27_95 -> m27_96  [key=0, style=solid];
m27_99 -> m27_100  [key=0, style=solid];
m27_97 -> m27_95  [key=0, style=bold, color=blue];
m27_101 -> m27_99  [key=0, style=bold, color=blue];
m27_106 -> m27_107  [key=0, style=solid];
m27_106 -> m27_108  [key=2, style=dotted];
m27_105 -> m27_106  [key=0, style=solid];
m27_107 -> m27_105  [key=0, style=bold, color=blue];
m27_114 -> m27_115  [key=0, style=solid];
m27_114 -> m27_108  [key=2, style=dotted];
m27_117 -> m27_118  [key=0, style=solid];
m27_117 -> m27_31  [key=2, style=dotted];
m27_113 -> m27_114  [key=0, style=solid];
m27_116 -> m27_117  [key=0, style=solid];
m27_115 -> m27_113  [key=0, style=bold, color=blue];
m27_118 -> m27_116  [key=0, style=bold, color=blue];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_125  [key=2, style=dotted];
m27_122 -> m27_123  [key=0, style=solid];
m27_124 -> m27_122  [key=0, style=bold, color=blue];
m27_131 -> m27_132  [key=0, style=solid];
m27_131 -> m27_125  [key=2, style=dotted];
m27_134 -> m27_135  [key=0, style=solid];
m27_134 -> m27_31  [key=2, style=dotted];
m27_130 -> m27_131  [key=0, style=solid];
m27_133 -> m27_134  [key=0, style=solid];
m27_132 -> m27_130  [key=0, style=bold, color=blue];
m27_135 -> m27_133  [key=0, style=bold, color=blue];
m27_140 -> m27_141  [key=0, style=solid];
m27_140 -> m27_142  [key=2, style=dotted];
m27_139 -> m27_140  [key=0, style=solid];
m27_141 -> m27_139  [key=0, style=bold, color=blue];
m27_147 -> m27_148  [key=0, style=solid];
m27_147 -> m27_142  [key=2, style=dotted];
m27_146 -> m27_147  [key=0, style=solid];
m27_148 -> m27_146  [key=0, style=bold, color=blue];
m27_153 -> m27_154  [key=0, style=solid];
m27_153 -> m27_155  [key=2, style=dotted];
m27_152 -> m27_153  [key=0, style=solid];
m27_154 -> m27_152  [key=0, style=bold, color=blue];
m27_160 -> m27_161  [key=0, style=solid];
m27_160 -> m27_90  [key=2, style=dotted];
m27_159 -> m27_160  [key=0, style=solid];
m27_161 -> m27_159  [key=0, style=bold, color=blue];
m27_166 -> m27_167  [key=0, style=solid];
m27_166 -> m27_168  [key=2, style=dotted];
m27_165 -> m27_166  [key=0, style=solid];
m27_167 -> m27_165  [key=0, style=bold, color=blue];
m27_173 -> m27_174  [key=0, style=solid];
m27_173 -> m27_175  [key=2, style=dotted];
m27_174 -> m27_172  [key=0, style=bold, color=blue];
m27_143 -> m27_144  [key=0, style=solid];
m27_143 -> m27_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_144 -> m27_145  [key=0, style=solid];
m27_144 -> m27_26  [key=2, style=dotted];
m27_144 -> m27_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_145 -> m27_143  [key=0, style=bold, color=blue];
m27_102 -> m27_103  [key=0, style=solid];
m27_102 -> m27_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_103 -> m27_104  [key=0, style=solid];
m27_103 -> m27_26  [key=2, style=dotted];
m27_103 -> m27_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_104 -> m27_102  [key=0, style=bold, color=blue];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_26  [key=2, style=dotted];
m27_24 -> m27_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_21 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_21 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_21 -> m27_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_21 -> m27_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_26  [key=2, style=dotted];
m27_22 -> m27_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_26  [key=2, style=dotted];
m27_23 -> m27_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_25 -> m27_21  [key=0, style=bold, color=blue];
m27_91 -> m27_92  [key=0, style=solid];
m27_91 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_91 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_91 -> m27_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_26  [key=2, style=dotted];
m27_92 -> m27_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_26  [key=2, style=dotted];
m27_93 -> m27_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_94 -> m27_91  [key=0, style=bold, color=blue];
m27_66 -> m27_79  [key=0, style=solid];
m27_66 -> m27_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_66 -> m27_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_66 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_66 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_66 -> m27_53  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.States.State state"];
m27_79 -> m27_80  [key=0, style=solid];
m27_79 -> m27_63  [key=2, style=dotted];
m27_79 -> m27_64  [key=2, style=dotted];
m27_79 -> m27_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_79 -> m27_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_79 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_79 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_65  [key=2, style=dotted];
m27_81 -> m27_82  [key=0, style=solid];
m27_81 -> m27_65  [key=2, style=dotted];
m27_83 -> m27_84  [key=0, style=solid];
m27_83 -> m27_26  [key=2, style=dotted];
m27_83 -> m27_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_82 -> m27_83  [key=0, style=solid];
m27_82 -> m27_85  [key=2, style=dotted];
m27_82 -> m27_65  [key=2, style=dotted];
m27_84 -> m27_66  [key=0, style=bold, color=blue];
m27_162 -> m27_163  [key=0, style=solid];
m27_162 -> m27_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_163 -> m27_164  [key=0, style=solid];
m27_163 -> m27_26  [key=2, style=dotted];
m27_163 -> m27_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_164 -> m27_162  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_2 -> m27_4  [key=0, style=solid];
m27_2 -> n10  [key=2, style=dotted];
m27_4 -> m27_0  [key=0, style=bold, color=blue];
m27_176 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_176 -> m27_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m27_177 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_177 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_177 -> m27_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_178 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m27_178 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m27_178 -> m27_36  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m27_179 -> m27_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_179 -> m27_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_179 -> m27_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_180 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_180 -> m27_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_180 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_181 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m27_182 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_183 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_184 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m27_185 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_185 -> m27_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_186 -> m27_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_187 -> m27_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_188 -> m27_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_188 -> m27_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_189 -> m27_117  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m27_190 -> m27_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_191 -> m27_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_191 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_192 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m27_193 -> m27_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_194 -> m27_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_195 -> m27_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_196 -> m27_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_197 -> m27_147  [key=1, style=dashed, color=darkseagreen4, label=double];
m27_198 -> m27_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_199 -> m27_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_200 -> m27_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_201 -> m27_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_202 -> m27_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_203 -> m27_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_204 -> m27_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_205 -> m27_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_206 -> m27_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m28_72 -> m28_73  [key=0, style=solid];
m28_72 -> m28_49  [key=2, style=dotted];
m28_72 -> m28_74  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m28_72 -> m28_75  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m28_72 -> m28_76  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m28_177 -> m28_28  [key=2, style=dotted];
m28_177 -> m28_178  [key=0, style=solid];
m28_177 -> m28_181  [key=2, style=dotted];
m28_196 -> m28_197  [key=0, style=solid];
m28_196 -> m28_11  [key=2, style=dotted];
m28_196 -> m28_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_196 -> m28_194  [key=0, style=bold, color=blue];
m28_195 -> m28_196  [key=0, style=solid];
m28_195 -> m28_34  [key=2, style=dotted];
m28_195 -> m28_39  [key=2, style=dotted];
m28_197 -> m28_195  [key=0, style=bold, color=blue];
m28_197 -> m28_198  [key=0, style=solid];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_26  [key=2, style=dotted];
m28_18 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label=stateEntryTtl];
m28_64 -> m28_62  [key=0, style=bold, color=blue];
m28_64 -> m28_65  [key=0, style=solid];
m28_62 -> m28_63  [key=0, style=solid, color=red];
m28_62 -> m28_60  [key=0, style=bold, color=blue];
m28_63 -> m28_64  [key=0, style=solid, color=red];
m28_63 -> m28_11  [key=2, style=dotted, color=red];
m28_63 -> m28_65  [key=1, style=dashed, color=red, label="lambda expression"];
m28_105 -> m28_106  [key=0, style=solid];
m28_105 -> m28_54  [key=2, style=dotted];
m28_110 -> m28_111  [key=0, style=solid, color=green];
m28_110 -> m28_101  [key=2, style=dotted, color=green];
m28_110 -> m28_121  [key=1, style=dashed, color=green, label="lambda expression"];
m28_108 -> m28_110  [key=1, style=dashed, color=green, label=jobKey];
m28_108 -> m28_122  [key=1, style=dashed, color=green, label=jobKey];
m28_108 -> m28_111  [key=1, style=dashed, color=green, label=jobKey];
m28_108 -> m28_129  [key=1, style=dashed, color=green, label=jobKey];
m28_108 -> m28_109  [key=0, style=solid];
m28_108 -> m28_58  [key=2, style=dotted];
m28_108 -> m28_114  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m28_108 -> m28_61  [key=2, style=dotted];
m28_109 -> m28_110  [key=0, style=solid, color=green];
m28_109 -> m28_101  [key=2, style=dotted];
m28_109 -> m28_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_109 -> m28_107  [key=0, style=bold, color=blue];
m28_111 -> m28_112  [key=0, style=solid, color=green];
m28_111 -> m28_101  [key=2, style=dotted, color=green];
m28_111 -> m28_128  [key=1, style=dashed, color=green, label="lambda expression"];
m28_111 -> m28_11  [key=2, style=dotted];
m28_111 -> m28_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_106 -> m28_107  [key=0, style=solid];
m28_106 -> m28_99  [key=2, style=dotted];
m28_106 -> m28_104  [key=0, style=bold, color=blue];
m28_106 -> m28_124  [key=0, style=bold, color=blue];
m28_107 -> m28_108  [key=0, style=solid];
m28_107 -> m28_100  [key=2, style=dotted];
m28_112 -> m28_105  [key=0, style=bold, color=blue];
m28_112 -> m28_110  [key=0, style=bold, color=blue];
m28_80 -> m28_81  [key=0, style=solid];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=2, style=dotted];
m28_1 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_1 -> m28_17  [key=2, style=dotted];
m28_2 -> m28_0  [key=0, style=bold, color=blue];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_18  [key=2, style=dotted];
m28_143 -> m28_141  [key=0, style=bold, color=blue];
m28_155 -> m28_156  [key=0, style=solid];
m28_155 -> m28_160  [key=2, style=dotted];
m28_236 -> m28_237  [key=0, style=solid];
m28_237 -> m28_238  [key=0, style=solid];
m28_237 -> m28_11  [key=2, style=dotted];
m28_237 -> m28_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_238 -> m28_236  [key=0, style=bold, color=blue];
m28_160 -> m28_161  [key=0, style=solid];
m28_160 -> m28_25  [key=2, style=dotted];
m28_160 -> m28_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_45 -> m28_43  [key=0, style=bold, color=blue];
m28_207 -> m28_208  [key=0, style=solid];
m28_207 -> m28_205  [key=0, style=bold, color=blue];
m28_208 -> m28_209  [key=0, style=solid];
m28_209 -> m28_210  [key=0, style=solid];
m28_209 -> m28_99  [key=2, style=dotted];
m28_210 -> m28_211  [key=0, style=solid];
m28_210 -> m28_100  [key=2, style=dotted];
m28_210 -> m28_11  [key=2, style=dotted];
m28_210 -> m28_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_211 -> m28_101  [key=2, style=dotted];
m28_211 -> m28_212  [key=0, style=solid];
m28_211 -> m28_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_211 -> m28_209  [key=0, style=bold, color=blue];
m28_212 -> m28_207  [key=0, style=bold, color=blue];
m28_212 -> m28_213  [key=0, style=solid];
m28_212 -> m28_214  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_212 -> m28_215  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_212 -> m28_216  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_94 -> m28_95  [key=0, style=solid, color=red];
m28_94 -> m28_45  [key=2, style=dotted, color=red];
m28_94 -> m28_96  [key=1, style=dashed, color=red, label=state];
m28_94 -> m28_97  [key=1, style=dashed, color=red, label=state];
m28_94 -> m28_108  [key=1, style=dashed, color=red, label=state];
m28_95 -> m28_96  [key=0, style=solid];
m28_95 -> m28_99  [key=2, style=dotted];
m28_95 -> m28_46  [key=2, style=dotted];
m28_95 -> m28_48  [key=2, style=dotted];
m28_95 -> m28_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_96 -> m28_97  [key=0, style=solid];
m28_96 -> m28_100  [key=2, style=dotted];
m28_96 -> m28_46  [key=2, style=dotted];
m28_96 -> m28_47  [key=2, style=dotted];
m28_96 -> m28_48  [key=2, style=dotted];
m28_96 -> m28_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_97 -> m28_101  [key=2, style=dotted];
m28_97 -> m28_98  [key=0, style=solid];
m28_97 -> m28_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_97 -> m28_25  [key=2, style=dotted];
m28_97 -> m28_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_98 -> m28_94  [key=0, style=bold, color=blue];
m28_98 -> m28_99  [key=0, style=solid];
m28_98 -> m28_100  [key=2, style=dotted];
m28_98 -> m28_50  [key=2, style=dotted];
m28_35 -> m28_36  [key=0, style=solid, color=red];
m28_35 -> m28_11  [key=2, style=dotted, color=red];
m28_35 -> m28_37  [key=1, style=dashed, color=red, label="lambda expression"];
m28_248 -> m28_249  [key=0, style=solid];
m28_249 -> m28_250  [key=0, style=solid];
m28_249 -> m28_11  [key=2, style=dotted];
m28_249 -> m28_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_250 -> m28_248  [key=0, style=bold, color=blue];
m28_181 -> m28_182  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_26  [key=2, style=dotted];
m28_17 -> m28_20  [key=1, style=dashed, color=darkseagreen4, label=jobEntryTtl];
m28_120 -> m28_121  [key=0, style=solid];
m28_120 -> m28_26  [key=2, style=dotted];
m28_120 -> m28_28  [key=2, style=dotted];
m28_79 -> m28_77  [key=0, style=bold, color=blue];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_27  [key=2, style=dotted];
m28_20 -> m28_28  [key=2, style=dotted];
m28_153 -> m28_154  [key=0, style=solid];
m28_153 -> m28_155  [key=2, style=dotted];
m28_156 -> m28_157  [key=0, style=solid];
m28_156 -> m28_99  [key=2, style=dotted];
m28_157 -> m28_158  [key=0, style=solid];
m28_157 -> m28_100  [key=2, style=dotted];
m28_157 -> m28_11  [key=2, style=dotted];
m28_157 -> m28_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_158 -> m28_101  [key=2, style=dotted];
m28_158 -> m28_159  [key=0, style=solid];
m28_158 -> m28_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_158 -> m28_156  [key=0, style=bold, color=blue];
m28_154 -> m28_155  [key=0, style=solid];
m28_154 -> m28_158  [key=1, style=dashed, color=darkseagreen4, label=time];
m28_154 -> m28_162  [key=1, style=dashed, color=darkseagreen4, label=time];
m28_154 -> m28_152  [key=0, style=bold, color=blue];
m28_159 -> m28_153  [key=0, style=bold, color=blue];
m28_159 -> m28_160  [key=0, style=solid];
m28_159 -> m28_161  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_159 -> m28_162  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_164 -> m28_165  [key=0, style=solid];
m28_165 -> m28_166  [key=0, style=solid];
m28_165 -> m28_23  [key=2, style=dotted];
m28_165 -> m28_30  [key=2, style=dotted];
m28_165 -> m28_24  [key=2, style=dotted];
m28_165 -> m28_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_166 -> m28_167  [key=0, style=solid];
m28_166 -> m28_99  [key=2, style=dotted];
m28_166 -> m28_174  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m28_166 -> m28_168  [key=2, style=dotted];
m28_167 -> m28_168  [key=0, style=solid];
m28_167 -> m28_169  [key=2, style=dotted];
m28_167 -> m28_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_167 -> m28_165  [key=0, style=bold, color=blue];
m28_168 -> m28_164  [key=0, style=bold, color=blue];
m28_261 -> m28_262  [key=0, style=solid];
m28_262 -> m28_263  [key=0, style=solid];
m28_262 -> m28_11  [key=2, style=dotted];
m28_262 -> m28_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_263 -> m28_261  [key=0, style=bold, color=blue];
m28_145 -> m28_34  [key=2, style=dotted];
m28_145 -> m28_146  [key=0, style=solid];
m28_145 -> m28_63  [key=2, style=dotted];
m28_193 -> m28_191  [key=0, style=bold, color=blue];
m28_125 -> m28_106  [key=0, style=solid, color=green];
m28_125 -> m28_120  [key=2, style=dotted, color=green];
m28_125 -> m28_127  [key=2, style=dotted, color=green];
m28_10 -> m28_11  [key=0, style=solid, color=green];
m28_10 -> m28_47  [key=2, style=dotted, color=green];
m28_10 -> m28_26  [key=2, style=dotted, color=green];
m28_10 -> m28_27  [key=2, style=dotted, color=green];
m28_10 -> m28_28  [key=2, style=dotted, color=green];
m28_10 -> m28_43  [key=1, style=dashed, color=green, label="lambda expression"];
m28_10 -> m28_8  [key=0, style=bold, color=blue];
m28_9 -> m28_10  [key=0, style=solid, color=green];
m28_9 -> m28_23  [key=2, style=dotted];
m28_9 -> m28_24  [key=2, style=dotted];
m28_9 -> m28_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_9 -> m28_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_9 -> m28_11  [key=2, style=dotted];
m28_9 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_11 -> m28_12  [key=0, style=solid];
m28_11 -> m28_29  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_19  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_20  [key=2, style=dotted];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_21  [key=2, style=dotted];
m28_5 -> m28_7  [key=2, style=dotted];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_22  [key=2, style=dotted];
m28_6 -> m28_4  [key=0, style=bold, color=blue];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_23  [key=2, style=dotted];
m28_7 -> m28_24  [key=2, style=dotted];
m28_7 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_8 -> m28_9  [key=0, style=solid];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_23  [key=2, style=dotted];
m28_12 -> m28_24  [key=2, style=dotted];
m28_12 -> m28_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_12 -> m28_14  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_12 -> m28_15  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_12 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_12 -> m28_17  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_12 -> m28_18  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_12 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_23  [key=2, style=dotted];
m28_13 -> m28_30  [key=2, style=dotted];
m28_13 -> m28_24  [key=2, style=dotted];
m28_13 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_14 -> m28_15  [key=0, style=solid];
m28_14 -> m28_23  [key=2, style=dotted];
m28_14 -> m28_24  [key=2, style=dotted];
m28_14 -> m28_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_23  [key=2, style=dotted];
m28_15 -> m28_24  [key=2, style=dotted];
m28_15 -> m28_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_16 -> m28_0  [key=0, style=bold, color=blue];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_25  [key=2, style=dotted];
m28_16 -> m28_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_27  [key=2, style=dotted];
m28_22 -> m28_28  [key=2, style=dotted];
m28_127 -> m28_128  [key=0, style=solid, color=red];
m28_127 -> m28_11  [key=2, style=dotted, color=red];
m28_127 -> m28_129  [key=1, style=dashed, color=red, label="lambda expression"];
m28_185 -> m28_186  [key=0, style=solid];
m28_185 -> m28_24  [key=2, style=dotted];
m28_187 -> m28_188  [key=0, style=solid];
m28_187 -> m28_190  [key=2, style=dotted];
m28_187 -> m28_50  [key=2, style=dotted];
m28_188 -> m28_189  [key=0, style=solid];
m28_188 -> m28_99  [key=2, style=dotted];
m28_188 -> m28_26  [key=2, style=dotted];
m28_188 -> m28_28  [key=2, style=dotted];
m28_189 -> m28_190  [key=0, style=solid];
m28_189 -> m28_100  [key=2, style=dotted];
m28_189 -> m28_184  [key=0, style=bold, color=blue];
m28_190 -> m28_101  [key=2, style=dotted];
m28_190 -> m28_191  [key=0, style=solid];
m28_190 -> m28_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_186 -> m28_187  [key=0, style=solid];
m28_186 -> m28_190  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
m28_186 -> m28_195  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
m28_186 -> m28_192  [key=2, style=dotted];
m28_186 -> m28_193  [key=2, style=dotted];
m28_186 -> m28_25  [key=2, style=dotted];
m28_186 -> m28_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_191 -> m28_185  [key=0, style=bold, color=blue];
m28_191 -> m28_192  [key=0, style=solid];
m28_117 -> m28_118  [key=0, style=solid];
m28_117 -> m28_25  [key=2, style=dotted];
m28_117 -> m28_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_26  [key=2, style=dotted];
m28_19 -> m28_22  [key=1, style=dashed, color=darkseagreen4, label=historyEntryTtl];
m28_29 -> m28_30  [key=0, style=solid];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_27  [key=2, style=dotted];
m28_21 -> m28_28  [key=2, style=dotted];
m28_23 -> m28_12  [key=0, style=bold, color=blue];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> n11  [key=2, style=dotted];
m28_30 -> m28_33  [key=2, style=dotted];
m28_31 -> m28_29  [key=0, style=bold, color=blue];
m28_31 -> m28_32  [key=0, style=solid];
m28_37 -> m28_38  [key=0, style=solid, color=red];
m28_37 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_37 -> m28_42  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_37 -> m28_34  [key=2, style=dotted];
m28_37 -> m28_39  [key=2, style=dotted];
m28_38 -> m28_39  [key=0, style=solid, color=red];
m28_38 -> m28_45  [key=2, style=dotted, color=red];
m28_38 -> m28_40  [key=1, style=dashed, color=red, label=state];
m28_38 -> m28_41  [key=1, style=dashed, color=red, label=state];
m28_38 -> m28_59  [key=1, style=dashed, color=red, label=state];
m28_38 -> m28_36  [key=0, style=bold, color=blue];
m28_41 -> m28_42  [key=0, style=solid];
m28_41 -> m28_25  [key=2, style=dotted];
m28_41 -> m28_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_49  [key=2, style=dotted];
m28_42 -> m28_40  [key=0, style=bold, color=blue];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_46  [key=2, style=dotted];
m28_39 -> m28_47  [key=2, style=dotted];
m28_39 -> m28_48  [key=2, style=dotted];
m28_39 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_46  [key=2, style=dotted];
m28_40 -> m28_48  [key=2, style=dotted];
m28_40 -> m28_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_59 -> m28_60  [key=0, style=solid];
m28_59 -> m28_61  [key=2, style=dotted];
m28_51 -> m28_52  [key=0, style=solid];
m28_55 -> m28_56  [key=0, style=solid];
m28_58 -> m28_59  [key=0, style=solid];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_50  [key=2, style=dotted];
m28_44 -> m28_37  [key=0, style=bold, color=blue];
m28_44 -> m28_45  [key=0, style=solid];
m28_44 -> m28_46  [key=2, style=dotted];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_54  [key=2, style=dotted];
m28_53 -> m28_51  [key=0, style=bold, color=blue];
m28_56 -> m28_57  [key=0, style=solid];
m28_56 -> m28_58  [key=2, style=dotted];
m28_56 -> m28_59  [key=2, style=dotted];
m28_57 -> m28_55  [key=0, style=bold, color=blue];
m28_60 -> m28_58  [key=0, style=bold, color=blue];
m28_60 -> m28_61  [key=0, style=solid];
m28_65 -> m28_66  [key=0, style=solid];
m28_65 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_65 -> m28_72  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_65 -> m28_151  [key=0, style=solid];
m28_65 -> m28_34  [key=2, style=dotted];
m28_65 -> m28_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_66 -> m28_67  [key=0, style=solid, color=red];
m28_66 -> m28_78  [key=2, style=dotted];
m28_66 -> m28_68  [key=2, style=dotted];
m28_71 -> m28_72  [key=0, style=solid];
m28_71 -> m28_25  [key=2, style=dotted];
m28_71 -> m28_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_71 -> m28_69  [key=0, style=bold, color=blue];
m28_67 -> m28_68  [key=0, style=solid, color=red];
m28_67 -> m28_45  [key=2, style=dotted, color=red];
m28_67 -> m28_69  [key=1, style=dashed, color=red, label=state];
m28_67 -> m28_70  [key=1, style=dashed, color=red, label=state];
m28_67 -> m28_64  [key=0, style=bold, color=blue];
m28_68 -> m28_69  [key=0, style=solid];
m28_68 -> m28_46  [key=2, style=dotted];
m28_68 -> m28_47  [key=2, style=dotted];
m28_68 -> m28_48  [key=2, style=dotted];
m28_68 -> m28_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_69 -> m28_70  [key=0, style=solid, color=red];
m28_69 -> m28_46  [key=2, style=dotted];
m28_69 -> m28_48  [key=2, style=dotted];
m28_69 -> m28_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_70 -> m28_71  [key=0, style=solid, color=red];
m28_70 -> m28_70  [key=1, style=dashed, color=red, label=state];
m28_70 -> m28_88  [key=1, style=dashed, color=red, label=state];
m28_70 -> m28_72  [key=2, style=dotted];
m28_81 -> m28_82  [key=0, style=solid];
m28_81 -> m28_34  [key=2, style=dotted];
m28_81 -> m28_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_84 -> m28_85  [key=0, style=solid];
m28_88 -> m28_89  [key=0, style=solid, color=green];
m28_88 -> m28_61  [key=2, style=dotted];
m28_88 -> m28_34  [key=2, style=dotted, color=green];
m28_88 -> m28_91  [key=1, style=dashed, color=green, label="lambda expression"];
m28_87 -> m28_88  [key=0, style=solid, color=green];
m28_73 -> m28_74  [key=0, style=solid, color=green];
m28_73 -> m28_79  [key=2, style=dotted];
m28_73 -> m28_80  [key=2, style=dotted];
m28_74 -> m28_75  [key=0, style=solid, color=green];
m28_74 -> m28_50  [key=2, style=dotted];
m28_74 -> m28_34  [key=2, style=dotted, color=green];
m28_74 -> m28_77  [key=1, style=dashed, color=green, label="lambda expression"];
m28_75 -> m28_76  [key=0, style=solid];
m28_75 -> m28_50  [key=2, style=dotted];
m28_75 -> m28_68  [key=2, style=dotted];
m28_76 -> m28_77  [key=0, style=solid];
m28_76 -> m28_50  [key=2, style=dotted];
m28_76 -> m28_73  [key=0, style=bold, color=blue];
m28_77 -> m28_65  [key=0, style=bold, color=blue];
m28_77 -> m28_78  [key=0, style=solid];
m28_82 -> m28_83  [key=0, style=solid];
m28_82 -> m28_54  [key=2, style=dotted];
m28_82 -> m28_68  [key=2, style=dotted];
m28_83 -> m28_81  [key=0, style=bold, color=blue];
m28_83 -> m28_80  [key=0, style=bold, color=blue];
m28_85 -> m28_86  [key=0, style=solid];
m28_85 -> m28_72  [key=2, style=dotted];
m28_86 -> m28_84  [key=0, style=bold, color=blue];
m28_89 -> m28_87  [key=0, style=bold, color=blue];
m28_89 -> m28_90  [key=0, style=solid];
m28_89 -> m28_68  [key=2, style=dotted];
m28_93 -> m28_94  [key=0, style=solid, color=red];
m28_93 -> m28_97  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_93 -> m28_98  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_93 -> m28_91  [key=0, style=bold, color=blue];
m28_101 -> m28_102  [key=0, style=solid];
m28_104 -> m28_105  [key=0, style=solid];
m28_104 -> m28_102  [key=0, style=bold, color=blue];
m28_99 -> m28_93  [key=0, style=bold, color=blue];
m28_99 -> m28_121  [key=0, style=bold, color=blue];
m28_99 -> m28_216  [key=0, style=solid];
m28_102 -> m28_103  [key=0, style=solid];
m28_103 -> m28_101  [key=0, style=bold, color=blue];
m28_103 -> m28_34  [key=2, style=dotted];
m28_103 -> m28_104  [key=0, style=solid];
m28_103 -> m28_63  [key=2, style=dotted];
m28_113 -> m28_114  [key=0, style=solid];
m28_113 -> m28_115  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_113 -> m28_116  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_113 -> m28_117  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_113 -> m28_118  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_113 -> m28_119  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_113 -> m28_120  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_114 -> m28_115  [key=0, style=solid];
m28_114 -> n11  [key=2, style=dotted];
m28_114 -> m28_24  [key=2, style=dotted];
m28_114 -> m28_34  [key=2, style=dotted];
m28_114 -> m28_116  [key=2, style=dotted];
m28_114 -> m28_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_115 -> m28_116  [key=0, style=solid];
m28_115 -> n11  [key=2, style=dotted];
m28_115 -> m28_24  [key=2, style=dotted];
m28_115 -> m28_113  [key=0, style=bold, color=blue];
m28_116 -> m28_117  [key=0, style=solid];
m28_116 -> n11  [key=2, style=dotted];
m28_116 -> m28_24  [key=2, style=dotted];
m28_118 -> m28_119  [key=0, style=solid];
m28_118 -> m28_26  [key=2, style=dotted];
m28_118 -> m28_28  [key=2, style=dotted];
m28_118 -> m28_120  [key=2, style=dotted];
m28_119 -> m28_120  [key=0, style=solid];
m28_119 -> m28_26  [key=2, style=dotted];
m28_119 -> m28_28  [key=2, style=dotted];
m28_119 -> m28_117  [key=0, style=bold, color=blue];
m28_122 -> m28_123  [key=0, style=solid];
m28_122 -> m28_99  [key=0, style=solid, color=green];
m28_122 -> m28_34  [key=2, style=dotted, color=green];
m28_122 -> m28_116  [key=2, style=dotted, color=green];
m28_122 -> m28_124  [key=1, style=dashed, color=green, label="lambda expression"];
m28_121 -> m28_113  [key=0, style=bold, color=blue];
m28_121 -> m28_122  [key=0, style=solid, color=green];
m28_123 -> m28_124  [key=0, style=solid];
m28_123 -> m28_125  [key=2, style=dotted];
m28_124 -> m28_122  [key=0, style=bold, color=blue];
m28_124 -> m28_125  [key=0, style=solid, color=green];
m28_129 -> m28_130  [key=0, style=solid, color=green];
m28_129 -> m28_134  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_129 -> m28_135  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_129 -> m28_34  [key=2, style=dotted, color=green];
m28_129 -> m28_116  [key=2, style=dotted, color=green];
m28_129 -> m28_131  [key=1, style=dashed, color=green, label="lambda expression"];
m28_130 -> m28_131  [key=0, style=solid, color=red];
m28_130 -> m28_45  [key=2, style=dotted, color=red];
m28_130 -> m28_132  [key=1, style=dashed, color=red, label=state];
m28_130 -> m28_133  [key=1, style=dashed, color=red, label=state];
m28_130 -> m28_128  [key=0, style=bold, color=blue];
m28_134 -> m28_135  [key=0, style=solid];
m28_134 -> m28_25  [key=2, style=dotted];
m28_134 -> m28_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_135 -> m28_136  [key=0, style=solid];
m28_135 -> m28_143  [key=2, style=dotted];
m28_135 -> m28_137  [key=1, style=dashed, color=darkseagreen4, label=serializedEntry];
m28_135 -> m28_23  [key=2, style=dotted];
m28_135 -> m28_24  [key=2, style=dotted];
m28_135 -> m28_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_131 -> m28_132  [key=0, style=solid];
m28_131 -> m28_46  [key=2, style=dotted];
m28_131 -> m28_48  [key=2, style=dotted];
m28_131 -> m28_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_132 -> m28_133  [key=0, style=solid, color=red];
m28_132 -> m28_46  [key=2, style=dotted];
m28_132 -> m28_47  [key=2, style=dotted];
m28_132 -> m28_48  [key=2, style=dotted];
m28_132 -> m28_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_132 -> m28_120  [key=2, style=dotted];
m28_132 -> m28_127  [key=2, style=dotted];
m28_133 -> m28_134  [key=0, style=solid, color=red];
m28_133 -> m28_133  [key=1, style=dashed, color=red, label=state];
m28_133 -> m28_153  [key=1, style=dashed, color=red, label=state];
m28_133 -> m28_131  [key=0, style=bold, color=blue];
m28_146 -> m28_147  [key=0, style=solid];
m28_146 -> m28_144  [key=0, style=bold, color=blue];
m28_149 -> m28_150  [key=0, style=solid];
m28_149 -> m28_147  [key=0, style=bold, color=blue];
m28_152 -> m28_153  [key=0, style=solid];
m28_152 -> m28_65  [key=0, style=bold, color=blue];
m28_136 -> m28_137  [key=0, style=solid];
m28_136 -> m28_144  [key=2, style=dotted];
m28_136 -> m28_99  [key=2, style=dotted];
m28_137 -> m28_138  [key=0, style=solid];
m28_137 -> m28_3  [key=2, style=dotted];
m28_137 -> m28_139  [key=1, style=dashed, color=darkseagreen4, label=entry];
m28_137 -> m28_140  [key=1, style=dashed, color=darkseagreen4, label=entry];
m28_137 -> m28_141  [key=1, style=dashed, color=darkseagreen4, label=entry];
m28_137 -> m28_100  [key=2, style=dotted];
m28_138 -> m28_139  [key=0, style=solid];
m28_138 -> m28_50  [key=2, style=dotted];
m28_138 -> m28_101  [key=2, style=dotted];
m28_138 -> m28_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_139 -> m28_140  [key=0, style=solid];
m28_139 -> m28_50  [key=2, style=dotted];
m28_139 -> m28_101  [key=2, style=dotted];
m28_139 -> m28_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_140 -> m28_141  [key=0, style=solid];
m28_140 -> m28_50  [key=2, style=dotted];
m28_140 -> m28_134  [key=0, style=bold, color=blue];
m28_141 -> m28_142  [key=0, style=solid];
m28_141 -> m28_145  [key=2, style=dotted];
m28_141 -> m28_28  [key=2, style=dotted];
m28_142 -> m28_129  [key=0, style=bold, color=blue];
m28_142 -> m28_34  [key=2, style=dotted];
m28_142 -> m28_143  [key=0, style=solid];
m28_142 -> m28_35  [key=2, style=dotted];
m28_147 -> m28_148  [key=0, style=solid];
m28_148 -> m28_146  [key=0, style=bold, color=blue];
m28_148 -> m28_34  [key=2, style=dotted];
m28_148 -> m28_116  [key=2, style=dotted];
m28_148 -> m28_149  [key=0, style=solid];
m28_148 -> m28_58  [key=2, style=dotted];
m28_148 -> m28_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_150 -> m28_151  [key=0, style=solid];
m28_150 -> m28_54  [key=2, style=dotted];
m28_151 -> m28_149  [key=0, style=bold, color=blue];
m28_151 -> m28_120  [key=2, style=dotted];
m28_151 -> m28_127  [key=2, style=dotted];
m28_151 -> m28_152  [key=0, style=solid];
m28_161 -> m28_162  [key=0, style=solid];
m28_161 -> m28_164  [key=2, style=dotted];
m28_161 -> m28_28  [key=2, style=dotted];
m28_162 -> m28_163  [key=0, style=solid];
m28_162 -> m28_143  [key=2, style=dotted];
m28_162 -> m28_50  [key=2, style=dotted];
m28_162 -> m28_35  [key=2, style=dotted];
m28_163 -> m28_159  [key=0, style=bold, color=blue];
m28_163 -> m28_161  [key=0, style=bold, color=blue];
m28_172 -> m28_173  [key=0, style=solid];
m28_172 -> m28_174  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_172 -> m28_175  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_172 -> m28_170  [key=0, style=bold, color=blue];
m28_173 -> m28_174  [key=0, style=solid];
m28_173 -> m28_177  [key=2, style=dotted];
m28_174 -> m28_175  [key=0, style=solid];
m28_174 -> m28_25  [key=2, style=dotted];
m28_174 -> m28_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_174 -> m28_100  [key=2, style=dotted];
m28_175 -> m28_176  [key=0, style=solid];
m28_175 -> m28_143  [key=2, style=dotted];
m28_175 -> m28_50  [key=2, style=dotted];
m28_175 -> m28_173  [key=0, style=bold, color=blue];
m28_178 -> m28_179  [key=0, style=solid];
m28_178 -> m28_99  [key=2, style=dotted];
m28_178 -> m28_183  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m28_176 -> m28_172  [key=0, style=bold, color=blue];
m28_176 -> m28_177  [key=0, style=solid];
m28_179 -> m28_180  [key=0, style=solid];
m28_179 -> m28_168  [key=2, style=dotted];
m28_179 -> m28_169  [key=2, style=dotted];
m28_179 -> m28_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_180 -> m28_178  [key=0, style=bold, color=blue];
m28_180 -> m28_176  [key=0, style=bold, color=blue];
m28_184 -> m28_185  [key=0, style=solid];
m28_184 -> m28_186  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_184 -> m28_187  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_184 -> m28_188  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_184 -> m28_182  [key=0, style=bold, color=blue];
m28_192 -> m28_193  [key=0, style=solid];
m28_192 -> m28_194  [key=2, style=dotted];
m28_198 -> m28_199  [key=0, style=solid];
m28_198 -> m28_200  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_198 -> m28_201  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_198 -> m28_202  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_198 -> m28_203  [key=2, style=dotted];
m28_199 -> m28_200  [key=0, style=solid];
m28_199 -> m28_24  [key=2, style=dotted];
m28_199 -> m28_99  [key=2, style=dotted];
m28_200 -> m28_201  [key=0, style=solid];
m28_200 -> m28_25  [key=2, style=dotted];
m28_200 -> m28_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_200 -> m28_100  [key=2, style=dotted];
m28_201 -> m28_202  [key=0, style=solid];
m28_201 -> m28_26  [key=2, style=dotted];
m28_201 -> m28_203  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m28_201 -> m28_101  [key=2, style=dotted];
m28_201 -> m28_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_202 -> m28_203  [key=0, style=solid];
m28_202 -> m28_190  [key=2, style=dotted];
m28_202 -> m28_50  [key=2, style=dotted];
m28_202 -> m28_197  [key=0, style=bold, color=blue];
m28_205 -> m28_206  [key=0, style=solid];
m28_205 -> m28_34  [key=2, style=dotted];
m28_205 -> m28_39  [key=2, style=dotted];
m28_203 -> m28_204  [key=0, style=solid];
m28_203 -> m28_27  [key=2, style=dotted];
m28_203 -> m28_28  [key=2, style=dotted];
m28_204 -> m28_198  [key=0, style=bold, color=blue];
m28_204 -> m28_205  [key=0, style=solid];
m28_206 -> m28_207  [key=0, style=solid];
m28_206 -> n11  [key=2, style=dotted];
m28_206 -> m28_208  [key=2, style=dotted];
m28_206 -> m28_204  [key=0, style=bold, color=blue];
m28_213 -> m28_214  [key=0, style=solid];
m28_213 -> m28_24  [key=2, style=dotted];
m28_214 -> m28_215  [key=0, style=solid];
m28_214 -> m28_25  [key=2, style=dotted];
m28_214 -> m28_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_214 -> m28_34  [key=2, style=dotted];
m28_214 -> m28_63  [key=2, style=dotted];
m28_215 -> m28_216  [key=0, style=solid];
m28_215 -> m28_190  [key=2, style=dotted];
m28_215 -> m28_50  [key=2, style=dotted];
m28_215 -> m28_213  [key=0, style=bold, color=blue];
m28_216 -> m28_217  [key=0, style=solid];
m28_216 -> m28_26  [key=2, style=dotted];
m28_216 -> m28_28  [key=2, style=dotted];
m28_216 -> m28_72  [key=2, style=dotted];
m28_218 -> m28_219  [key=0, style=solid];
m28_218 -> m28_10  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_74  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_88  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_110  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_122  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_111  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_129  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_125  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_109  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_132  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_151  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_167  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_218 -> m28_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m28_217 -> m28_212  [key=0, style=bold, color=blue];
m28_217 -> m28_99  [key=0, style=bold, color=blue];
m28_219 -> m28_220  [key=0, style=solid];
m28_219 -> m28_221  [key=2, style=dotted];
m28_219 -> m28_122  [key=1, style=dashed, color=green, label=jobKey];
m28_219 -> m28_129  [key=1, style=dashed, color=green, label=jobKey];
m28_219 -> m28_114  [key=1, style=dashed, color=darkseagreen4, label=jobKey];
m28_220 -> m28_218  [key=0, style=bold, color=blue];
m28_220 -> m28_162  [key=1, style=dashed, color=darkseagreen4, label=time];
m28_225 -> m28_226  [key=0, style=solid];
m28_225 -> m28_227  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_225 -> m28_228  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_225 -> m28_229  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_226 -> m28_227  [key=0, style=solid];
m28_226 -> m28_24  [key=2, style=dotted];
m28_227 -> m28_228  [key=0, style=solid];
m28_227 -> m28_25  [key=2, style=dotted];
m28_227 -> m28_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_228 -> m28_229  [key=0, style=solid];
m28_228 -> m28_26  [key=2, style=dotted];
m28_228 -> m28_230  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m28_229 -> m28_230  [key=0, style=solid];
m28_229 -> m28_190  [key=2, style=dotted];
m28_229 -> m28_50  [key=2, style=dotted];
m28_232 -> m28_233  [key=0, style=solid];
m28_230 -> m28_231  [key=0, style=solid];
m28_230 -> m28_27  [key=2, style=dotted];
m28_230 -> m28_28  [key=2, style=dotted];
m28_231 -> m28_225  [key=0, style=bold, color=blue];
m28_233 -> m28_234  [key=0, style=solid];
m28_233 -> n11  [key=2, style=dotted];
m28_233 -> m28_235  [key=2, style=dotted];
m28_234 -> m28_232  [key=0, style=bold, color=blue];
m28_239 -> m28_240  [key=0, style=solid];
m28_239 -> m28_241  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_240 -> m28_241  [key=0, style=solid];
m28_240 -> m28_25  [key=2, style=dotted];
m28_240 -> m28_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_241 -> m28_242  [key=0, style=solid];
m28_241 -> m28_243  [key=2, style=dotted];
m28_241 -> m28_28  [key=2, style=dotted];
m28_244 -> m28_245  [key=0, style=solid];
m28_242 -> m28_239  [key=0, style=bold, color=blue];
m28_245 -> m28_246  [key=0, style=solid];
m28_245 -> m28_247  [key=2, style=dotted];
m28_246 -> m28_244  [key=0, style=bold, color=blue];
m28_251 -> m28_252  [key=0, style=solid];
m28_251 -> m28_253  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_251 -> m28_254  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_252 -> m28_253  [key=0, style=solid];
m28_252 -> m28_25  [key=2, style=dotted];
m28_252 -> m28_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_253 -> m28_254  [key=0, style=solid];
m28_253 -> m28_243  [key=2, style=dotted];
m28_253 -> m28_28  [key=2, style=dotted];
m28_254 -> m28_255  [key=0, style=solid];
m28_254 -> m28_256  [key=2, style=dotted];
m28_254 -> m28_50  [key=2, style=dotted];
m28_257 -> m28_258  [key=0, style=solid];
m28_255 -> m28_251  [key=0, style=bold, color=blue];
m28_258 -> m28_259  [key=0, style=solid];
m28_258 -> m28_260  [key=2, style=dotted];
m28_259 -> m28_257  [key=0, style=bold, color=blue];
m28_264 -> m28_265  [key=0, style=solid];
m28_264 -> m28_266  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_264 -> m28_267  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_265 -> m28_266  [key=0, style=solid];
m28_265 -> m28_269  [key=2, style=dotted];
m28_266 -> m28_267  [key=0, style=solid];
m28_266 -> m28_25  [key=2, style=dotted];
m28_266 -> m28_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_267 -> m28_268  [key=0, style=solid];
m28_267 -> m28_243  [key=2, style=dotted];
m28_267 -> m28_80  [key=2, style=dotted];
m28_270 -> m28_271  [key=0, style=solid];
m28_268 -> m28_264  [key=0, style=bold, color=blue];
m28_271 -> m28_272  [key=0, style=solid];
m28_271 -> m28_273  [key=2, style=dotted];
m28_272 -> m28_270  [key=0, style=bold, color=blue];
m28_277 -> m28_278  [key=0, style=solid];
m28_277 -> m28_279  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_277 -> m28_280  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_278 -> m28_279  [key=0, style=solid];
m28_278 -> m28_282  [key=2, style=dotted];
m28_279 -> m28_280  [key=0, style=solid];
m28_279 -> m28_25  [key=2, style=dotted];
m28_279 -> m28_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_280 -> m28_281  [key=0, style=solid];
m28_280 -> m28_143  [key=2, style=dotted];
m28_280 -> m28_50  [key=2, style=dotted];
m28_283 -> m28_284  [key=0, style=solid];
m28_281 -> m28_277  [key=0, style=bold, color=blue];
m28_284 -> m28_285  [key=0, style=solid];
m28_284 -> m28_286  [key=2, style=dotted];
m28_285 -> m28_283  [key=0, style=bold, color=blue];
m28_290 -> m28_291  [key=0, style=solid];
m28_290 -> m28_292  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_290 -> m28_293  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_290 -> m28_294  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_290 -> m28_295  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_290 -> m28_296  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_291 -> m28_292  [key=0, style=solid];
m28_291 -> m28_282  [key=2, style=dotted];
m28_292 -> m28_293  [key=0, style=solid];
m28_292 -> m28_282  [key=2, style=dotted];
m28_293 -> m28_294  [key=0, style=solid];
m28_293 -> m28_282  [key=2, style=dotted];
m28_294 -> m28_295  [key=0, style=solid];
m28_294 -> m28_25  [key=2, style=dotted];
m28_294 -> m28_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_295 -> m28_296  [key=0, style=solid];
m28_295 -> m28_100  [key=2, style=dotted];
m28_295 -> m28_50  [key=2, style=dotted];
m28_296 -> m28_297  [key=0, style=solid];
m28_296 -> m28_143  [key=2, style=dotted];
m28_296 -> m28_50  [key=2, style=dotted];
m28_298 -> m28_299  [key=0, style=solid];
m28_297 -> m28_290  [key=0, style=bold, color=blue];
m28_299 -> m28_300  [key=0, style=solid];
m28_299 -> m28_301  [key=2, style=dotted];
m28_300 -> m28_298  [key=0, style=bold, color=blue];
m28_305 -> m28_306  [key=0, style=solid];
m28_305 -> m28_307  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_305 -> m28_308  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_305 -> m28_309  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_305 -> m28_310  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_305 -> m28_311  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_305 -> m28_312  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_305 -> m28_313  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m28_306 -> m28_307  [key=0, style=solid];
m28_306 -> m28_282  [key=2, style=dotted];
m28_307 -> m28_308  [key=0, style=solid];
m28_307 -> m28_282  [key=2, style=dotted];
m28_308 -> m28_309  [key=0, style=solid];
m28_308 -> m28_282  [key=2, style=dotted];
m28_309 -> m28_310  [key=0, style=solid];
m28_309 -> m28_282  [key=2, style=dotted];
m28_310 -> m28_311  [key=0, style=solid];
m28_310 -> m28_25  [key=2, style=dotted];
m28_310 -> m28_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_311 -> m28_312  [key=0, style=solid];
m28_311 -> m28_100  [key=2, style=dotted];
m28_311 -> m28_50  [key=2, style=dotted];
m28_312 -> m28_313  [key=0, style=solid];
m28_312 -> m28_143  [key=2, style=dotted];
m28_312 -> m28_50  [key=2, style=dotted];
m28_313 -> m28_314  [key=0, style=solid];
m28_313 -> m28_143  [key=2, style=dotted];
m28_313 -> m28_50  [key=2, style=dotted];
m28_315 -> m28_316  [key=0, style=solid];
m28_314 -> m28_305  [key=0, style=bold, color=blue];
m28_316 -> m28_317  [key=0, style=solid];
m28_316 -> m28_318  [key=2, style=dotted];
m28_317 -> m28_315  [key=0, style=bold, color=blue];
m28_91 -> m28_92  [key=0, style=solid, color=red];
m28_91 -> m28_11  [key=2, style=dotted, color=red];
m28_91 -> m28_93  [key=1, style=dashed, color=red, label="lambda expression"];
m28_128 -> m28_129  [key=0, style=solid, color=green];
m28_128 -> m28_126  [key=0, style=bold, color=blue];
m28_78 -> m28_79  [key=0, style=solid];
m28_78 -> m28_72  [key=2, style=dotted];
m28_92 -> m28_93  [key=0, style=solid];
m28_92 -> m28_72  [key=2, style=dotted];
m28_92 -> m28_90  [key=0, style=bold, color=blue];
m28_183 -> m28_184  [key=0, style=solid];
m28_183 -> m28_100  [key=2, style=dotted];
m28_183 -> m28_181  [key=0, style=bold, color=blue];
m28_36 -> m28_37  [key=0, style=solid];
m28_36 -> m28_34  [key=0, style=bold, color=blue];
m28_32 -> m28_34  [key=2, style=dotted];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_35  [key=2, style=dotted];
m28_61 -> m28_34  [key=2, style=dotted];
m28_61 -> m28_62  [key=0, style=solid];
m28_61 -> m28_63  [key=2, style=dotted];
m28_171 -> m28_34  [key=2, style=dotted];
m28_171 -> m28_172  [key=0, style=solid];
m28_171 -> m28_54  [key=2, style=dotted];
m28_171 -> m28_169  [key=0, style=bold, color=blue];
m28_47 -> m28_48  [key=0, style=solid];
m28_144 -> m28_145  [key=0, style=solid];
m28_170 -> m28_171  [key=0, style=solid];
m28_170 -> m28_11  [key=2, style=dotted];
m28_170 -> m28_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_182 -> m28_183  [key=0, style=solid];
m28_182 -> m28_11  [key=2, style=dotted];
m28_182 -> m28_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_194 -> m28_195  [key=0, style=solid];
m28_33 -> m28_31  [key=0, style=bold, color=blue];
m28_49 -> m28_47  [key=0, style=bold, color=blue];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_50  [key=2, style=dotted];
m28_90 -> m28_87  [key=0, style=bold, color=blue];
m28_90 -> m28_91  [key=0, style=solid, color=red];
m28_34 -> m28_35  [key=0, style=solid, color=red];
m28_169 -> m28_170  [key=0, style=solid];
m28_221 -> m28_174  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m28_274 -> m28_275  [key=0, style=solid];
m28_275 -> m28_276  [key=0, style=solid];
m28_275 -> m28_11  [key=2, style=dotted];
m28_275 -> m28_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_276 -> m28_274  [key=0, style=bold, color=blue];
m28_302 -> m28_303  [key=0, style=solid];
m28_303 -> m28_304  [key=0, style=solid];
m28_303 -> m28_11  [key=2, style=dotted];
m28_303 -> m28_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_304 -> m28_302  [key=0, style=bold, color=blue];
m28_25 -> m28_319  [key=0, style=solid];
m28_25 -> m28_320  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.Redis.RedisWriteOnlyTransaction>"];
m28_25 -> m28_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_35  [key=3, color=red, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_63  [key=3, color=red, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_91  [key=3, color=red, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_111  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_127  [key=3, color=red, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_157  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_170  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_182  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_196  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_210  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_223  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_237  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_249  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_262  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_275  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_288  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_25 -> m28_303  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m28_319 -> m28_320  [key=0, style=solid];
m28_319 -> m28_323  [key=2, style=dotted];
m28_319 -> m28_324  [key=2, style=dotted];
m28_319 -> m28_321  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m28_320 -> m28_321  [key=0, style=solid];
m28_320 -> m28_325  [key=2, style=dotted];
m28_321 -> m28_322  [key=0, style=solid];
m28_321 -> m28_326  [key=2, style=dotted];
m28_322 -> m28_25  [key=0, style=bold, color=blue];
m28_327 -> m28_328  [key=0, style=solid];
m28_327 -> m28_329  [key=1, style=dashed, color=darkseagreen4, label="System.Action<IRedisClient>"];
m28_328 -> m28_329  [key=0, style=solid];
m28_328 -> m28_331  [key=2, style=dotted];
m28_329 -> m28_330  [key=0, style=solid];
m28_329 -> m28_325  [key=2, style=dotted];
m28_330 -> m28_327  [key=0, style=bold, color=blue];
m28_287 -> m28_288  [key=0, style=solid];
m28_288 -> m28_289  [key=0, style=solid];
m28_288 -> m28_11  [key=2, style=dotted];
m28_288 -> m28_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_289 -> m28_287  [key=0, style=bold, color=blue];
m28_223 -> m28_224  [key=0, style=solid];
m28_223 -> m28_11  [key=2, style=dotted];
m28_223 -> m28_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_223 -> m28_195  [key=1, style=dashed, color=darkseagreen4, label=timeZone];
m28_222 -> m28_223  [key=0, style=solid];
m28_222 -> m28_183  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m28_224 -> m28_222  [key=0, style=bold, color=blue];
m28_126 -> m28_127  [key=0, style=solid, color=red];
m28_332 -> m28_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_35  [key=1, style=dashed, color=red, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_63  [key=1, style=dashed, color=red, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_91  [key=1, style=dashed, color=red, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_127  [key=1, style=dashed, color=red, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_223  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_237  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_249  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_275  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_288  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_332 -> m28_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m28_333 -> m28_59  [key=1, style=dashed, color=darkseagreen4, label=state];
m28_334 -> m28_88  [key=1, style=dashed, color=darkseagreen4, label=state];
m28_335 -> m28_108  [key=1, style=dashed, color=darkseagreen4, label=state];
m28_336 -> m28_153  [key=1, style=dashed, color=darkseagreen4, label=state];
m29_5 -> m29_6  [key=0, style=solid];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> m29_8  [key=2, style=dotted];
m29_6 -> m29_4  [key=2, style=dotted];
m29_7 -> m29_5  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_1 -> m29_4  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_14 -> m29_15  [key=0, style=solid];
m29_14 -> m29_3  [key=2, style=dotted];
m29_14 -> m29_18  [key=2, style=dotted];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_12 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_3  [key=2, style=dotted];
m29_13 -> m29_17  [key=2, style=dotted];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_3  [key=2, style=dotted];
m29_15 -> m29_19  [key=2, style=dotted];
m29_15 -> m29_20  [key=2, style=dotted];
m29_15 -> m29_21  [key=2, style=dotted];
m29_16 -> m29_12  [key=0, style=bold, color=blue];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_3  [key=2, style=dotted];
m29_23 -> m29_18  [key=2, style=dotted];
m29_22 -> m29_23  [key=0, style=solid];
m29_24 -> m29_22  [key=0, style=bold, color=blue];
m29_9 -> m29_10  [key=0, style=solid];
m29_10 -> m29_11  [key=0, style=solid];
m29_10 -> m29_8  [key=2, style=dotted];
m29_10 -> m29_4  [key=2, style=dotted];
m29_11 -> m29_9  [key=0, style=bold, color=blue];
m29_25 -> m29_26  [key=0, style=solid];
m29_25 -> m29_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_26 -> m29_27  [key=0, style=solid];
m29_26 -> m29_3  [key=2, style=dotted];
m29_26 -> m29_29  [key=2, style=dotted];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_30  [key=2, style=dotted];
m29_28 -> m29_25  [key=0, style=bold, color=blue];
m30_2 -> m30_3  [key=0, style=solid];
m30_3 -> m30_4  [key=0, style=solid];
m30_4 -> m30_5  [key=0, style=solid];
m30_5 -> m30_2  [key=0, style=bold, color=blue];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_15  [key=1, style=dashed, color=darkseagreen4, label=scheduledState];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_21  [key=2, style=dotted];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_15  [key=0, style=solid];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_20  [key=2, style=dotted];
m30_14 -> m30_17  [key=0, style=solid];
m30_14 -> m30_18  [key=2, style=dotted];
m30_14 -> m30_19  [key=2, style=dotted];
m30_17 -> m30_11  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [key=0, style=bold, color=blue];
m30_6 -> m30_7  [key=0, style=solid, color=green];
m30_7 -> m30_8  [key=0, style=solid, color=green];
m30_7 -> m30_9  [key=2, style=dotted, color=green];
m30_7 -> m30_10  [key=2, style=dotted, color=green];
m30_8 -> m30_6  [key=0, style=bold, color=blue];
m30_22 -> m30_23  [key=0, style=solid];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_25  [key=2, style=dotted];
m30_24 -> m30_22  [key=0, style=bold, color=blue];
m30_26 -> m30_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m30_26 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m30_26 -> m30_7  [key=1, style=dashed, color=green, label="HangFire.States.ScheduledState"];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_4  [key=2, style=dotted];
m31_1 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_1 -> m31_3  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_5  [key=2, style=dotted];
m31_2 -> m31_0  [key=0, style=bold, color=blue];
m31_3 -> m31_0  [key=0, style=bold, color=blue];
m31_105 -> m31_106  [key=0, style=solid];
m31_106 -> m31_44  [key=2, style=dotted];
m31_106 -> m31_107  [key=0, style=solid];
m31_107 -> m31_108  [key=0, style=solid];
m31_107 -> m31_87  [key=2, style=dotted];
m31_107 -> m31_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_108 -> m31_105  [key=0, style=bold, color=blue];
m31_40 -> m31_42  [key=1, style=dashed, color=darkseagreen4, label=Table];
m31_40 -> m31_41  [key=0, style=solid];
m31_40 -> m31_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerContextFacts"];
m31_40 -> m31_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.WorkerContextFacts"];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_30  [key=2, style=dotted];
m31_42 -> m31_46  [key=2, style=dotted];
m31_42 -> m31_31  [key=2, style=dotted];
m31_42 -> m31_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_42 -> m31_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_42 -> m31_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_44  [key=2, style=dotted];
m31_41 -> m31_45  [key=2, style=dotted];
m31_43 -> m31_40  [key=0, style=bold, color=blue];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_8  [key=2, style=dotted];
m31_160 -> m31_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_160 -> m31_161  [key=0, style=solid];
m31_162 -> m31_82  [key=2, style=dotted];
m31_162 -> m31_163  [key=0, style=solid];
m31_161 -> m31_44  [key=2, style=dotted];
m31_161 -> m31_162  [key=0, style=solid];
m31_161 -> m31_164  [key=2, style=dotted];
m31_163 -> m31_160  [key=0, style=bold, color=blue];
m31_180 -> m31_181  [key=0, style=solid];
m31_181 -> m31_182  [key=0, style=solid];
m31_181 -> m31_183  [key=2, style=dotted];
m31_181 -> m31_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_182 -> m31_180  [key=0, style=bold, color=blue];
m31_83 -> m31_84  [key=0, style=solid];
m31_84 -> m31_44  [key=2, style=dotted];
m31_84 -> m31_85  [key=0, style=solid];
m31_85 -> m31_86  [key=0, style=solid];
m31_85 -> m31_87  [key=2, style=dotted];
m31_85 -> m31_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_86 -> m31_83  [key=0, style=bold, color=blue];
m31_4 -> m31_5  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_9  [key=2, style=dotted];
m31_7 -> m31_4  [key=0, style=bold, color=blue];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_9  [key=2, style=dotted];
m31_176 -> m31_170  [key=0, style=bold, color=blue];
m31_175 -> m31_120  [key=2, style=dotted];
m31_175 -> m31_176  [key=0, style=solid];
m31_171 -> m31_44  [key=2, style=dotted];
m31_171 -> m31_172  [key=0, style=solid];
m31_171 -> m31_177  [key=2, style=dotted];
m31_171 -> m31_173  [key=1, style=dashed, color=darkseagreen4, label=entry];
m31_171 -> m31_174  [key=1, style=dashed, color=darkseagreen4, label=entry];
m31_170 -> m31_175  [key=1, style=dashed, color=darkseagreen4, label=Table];
m31_170 -> m31_171  [key=0, style=solid];
m31_173 -> m31_175  [key=1, style=dashed, color=darkseagreen4, label=history];
m31_173 -> m31_179  [key=2, style=dotted];
m31_173 -> m31_174  [key=0, style=solid];
m31_174 -> m31_175  [key=0, style=solid];
m31_174 -> m31_178  [key=2, style=dotted];
m31_172 -> m31_173  [key=0, style=solid];
m31_172 -> m31_178  [key=2, style=dotted];
m31_29 -> m31_27  [key=0, style=bold, color=blue];
m31_137 -> m31_138  [key=0, style=solid];
m31_140 -> m31_93  [key=2, style=dotted];
m31_140 -> m31_141  [key=0, style=solid];
m31_140 -> m31_145  [key=2, style=dotted];
m31_141 -> m31_93  [key=2, style=dotted];
m31_141 -> m31_142  [key=0, style=solid];
m31_141 -> m31_145  [key=2, style=dotted];
m31_139 -> m31_144  [key=2, style=dotted];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_141  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m31_138 -> m31_143  [key=2, style=dotted];
m31_138 -> m31_139  [key=0, style=solid];
m31_142 -> m31_137  [key=0, style=bold, color=blue];
m31_121 -> m31_122  [key=0, style=solid];
m31_122 -> m31_82  [key=2, style=dotted];
m31_122 -> m31_123  [key=0, style=solid];
m31_122 -> m31_125  [key=2, style=dotted];
m31_123 -> m31_93  [key=2, style=dotted];
m31_123 -> m31_124  [key=0, style=solid];
m31_123 -> m31_126  [key=2, style=dotted];
m31_124 -> m31_121  [key=0, style=bold, color=blue];
m31_17 -> m31_18  [key=0, style=solid];
m31_94 -> m31_95  [key=0, style=solid];
m31_95 -> m31_82  [key=2, style=dotted];
m31_95 -> m31_96  [key=0, style=solid];
m31_95 -> m31_97  [key=2, style=dotted];
m31_95 -> m31_98  [key=2, style=dotted];
m31_96 -> m31_94  [key=0, style=bold, color=blue];
m31_79 -> m31_80  [key=0, style=solid];
m31_80 -> m31_81  [key=0, style=solid];
m31_80 -> m31_82  [key=2, style=dotted];
m31_81 -> m31_79  [key=0, style=bold, color=blue];
m31_146 -> m31_147  [key=0, style=solid];
m31_150 -> m31_18  [key=2, style=dotted];
m31_150 -> m31_151  [key=0, style=solid];
m31_150 -> m31_93  [key=2, style=dotted];
m31_151 -> m31_18  [key=2, style=dotted];
m31_151 -> m31_152  [key=0, style=solid];
m31_151 -> m31_93  [key=2, style=dotted];
m31_149 -> m31_150  [key=0, style=solid];
m31_149 -> m31_151  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m31_149 -> m31_144  [key=2, style=dotted];
m31_148 -> m31_149  [key=0, style=solid];
m31_148 -> m31_143  [key=2, style=dotted];
m31_147 -> m31_93  [key=2, style=dotted];
m31_147 -> m31_148  [key=0, style=solid];
m31_147 -> m31_126  [key=2, style=dotted];
m31_152 -> m31_146  [key=0, style=bold, color=blue];
m31_10 -> m31_11  [key=0, style=solid];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_13  [key=2, style=dotted];
m31_11 -> m31_4  [key=2, style=dotted];
m31_11 -> m31_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_12 -> m31_10  [key=0, style=bold, color=blue];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_5  [key=2, style=dotted];
m31_22 -> m31_17  [key=0, style=bold, color=blue];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_29  [key=2, style=dotted];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_4  [key=2, style=dotted];
m31_25 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_25 -> m31_30  [key=2, style=dotted];
m31_25 -> m31_31  [key=2, style=dotted];
m31_25 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_26 -> m31_24  [key=0, style=bold, color=blue];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_30  [key=2, style=dotted];
m31_26 -> m31_32  [key=2, style=dotted];
m31_26 -> m31_31  [key=2, style=dotted];
m31_26 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_23 -> m31_38  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_38 -> m31_39  [key=0, style=solid];
m31_38 -> m31_9  [key=2, style=dotted];
m31_38 -> m31_36  [key=0, style=bold, color=blue];
m31_39 -> m31_23  [key=0, style=bold, color=blue];
m31_19 -> m31_20  [key=0, style=solid, color=green];
m31_19 -> m31_5  [key=2, style=dotted];
m31_20 -> m31_21  [key=0, style=solid, color=green];
m31_20 -> m31_22  [key=2, style=dotted, color=green];
m31_20 -> m31_5  [key=2, style=dotted];
m31_21 -> m31_19  [key=0, style=bold, color=blue];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_5  [key=2, style=dotted];
m31_8 -> m31_6  [key=0, style=bold, color=blue];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_23  [key=2, style=dotted];
m31_18 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_18 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_168 -> m31_165  [key=0, style=bold, color=blue];
m31_166 -> m31_44  [key=2, style=dotted];
m31_166 -> m31_167  [key=0, style=solid];
m31_166 -> m31_164  [key=2, style=dotted];
m31_165 -> m31_166  [key=0, style=solid];
m31_165 -> m31_167  [key=1, style=dashed, color=darkseagreen4, label=Table];
m31_167 -> m31_168  [key=0, style=solid];
m31_167 -> m31_169  [key=2, style=dotted];
m31_27 -> m31_28  [key=0, style=solid];
m31_28 -> m31_23  [key=0, style=bold, color=blue];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_30  [key=2, style=dotted];
m31_32 -> m31_33  [key=0, style=solid];
m31_32 -> m31_23  [key=2, style=dotted];
m31_32 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_32 -> m31_35  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_32 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_13 -> m31_10  [key=0, style=bold, color=blue];
m31_14 -> m31_15  [key=0, style=solid];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_17  [key=2, style=dotted];
m31_15 -> m31_18  [key=2, style=dotted];
m31_15 -> m31_9  [key=2, style=dotted];
m31_16 -> m31_14  [key=0, style=bold, color=blue];
m31_113 -> m31_114  [key=0, style=solid];
m31_114 -> m31_82  [key=2, style=dotted];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_103  [key=2, style=dotted];
m31_115 -> m31_113  [key=0, style=bold, color=blue];
m31_56 -> m31_57  [key=0, style=solid];
m31_58 -> m31_59  [key=0, style=solid];
m31_58 -> m31_62  [key=2, style=dotted];
m31_57 -> m31_58  [key=0, style=solid];
m31_57 -> m31_61  [key=2, style=dotted];
m31_57 -> m31_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m31_59 -> m31_60  [key=0, style=solid];
m31_59 -> m31_63  [key=2, style=dotted];
m31_60 -> m31_56  [key=0, style=bold, color=blue];
m31_116 -> m31_117  [key=0, style=solid];
m31_117 -> m31_118  [key=0, style=solid];
m31_117 -> m31_119  [key=2, style=dotted];
m31_117 -> m31_120  [key=2, style=dotted];
m31_118 -> m31_116  [key=0, style=bold, color=blue];
m31_109 -> m31_111  [key=1, style=dashed, color=darkseagreen4, label="?"];
m31_109 -> m31_110  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_30  [key=2, style=dotted];
m31_33 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m31_36 -> m31_37  [key=0, style=solid];
m31_36 -> m31_5  [key=2, style=dotted];
m31_47 -> m31_48  [key=0, style=solid];
m31_50 -> m31_51  [key=0, style=solid];
m31_53 -> m31_54  [key=0, style=solid];
m31_184 -> m31_185  [key=0, style=solid];
m31_35 -> m31_33  [key=0, style=bold, color=blue];
m31_35 -> m31_36  [key=0, style=solid];
m31_35 -> m31_5  [key=2, style=dotted];
m31_34 -> m31_35  [key=0, style=solid];
m31_34 -> m31_5  [key=2, style=dotted];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_39  [key=2, style=dotted];
m31_37 -> m31_31  [key=0, style=bold, color=blue];
m31_49 -> m31_47  [key=0, style=bold, color=blue];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_39  [key=2, style=dotted];
m31_52 -> m31_50  [key=0, style=bold, color=blue];
m31_51 -> m31_52  [key=0, style=solid];
m31_55 -> m31_53  [key=0, style=bold, color=blue];
m31_54 -> m31_55  [key=0, style=solid];
m31_185 -> m31_62  [key=2, style=dotted];
m31_185 -> m31_186  [key=0, style=solid];
m31_185 -> m31_179  [key=2, style=dotted];
m31_185 -> m31_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_185 -> m31_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_186 -> m31_184  [key=0, style=bold, color=blue];
m31_187 -> m31_188  [key=0, style=solid];
m31_190 -> m31_191  [key=0, style=solid];
m31_90 -> m31_93  [key=2, style=dotted];
m31_90 -> m31_91  [key=0, style=solid];
m31_111 -> m31_93  [key=2, style=dotted];
m31_111 -> m31_112  [key=0, style=solid];
m31_189 -> m31_187  [key=0, style=bold, color=blue];
m31_188 -> m31_189  [key=0, style=solid];
m31_192 -> m31_190  [key=0, style=bold, color=blue];
m31_191 -> m31_192  [key=0, style=solid];
m31_88 -> m31_90  [key=1, style=dashed, color=darkseagreen4, label="?"];
m31_88 -> m31_89  [key=0, style=solid];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_92  [key=2, style=dotted];
m31_91 -> m31_88  [key=0, style=bold, color=blue];
m31_110 -> m31_111  [key=0, style=solid];
m31_110 -> m31_92  [key=2, style=dotted];
m31_112 -> m31_109  [key=0, style=bold, color=blue];
m31_73 -> m31_74  [key=0, style=solid];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_78  [key=2, style=dotted];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_77  [key=2, style=dotted];
m31_76 -> m31_73  [key=0, style=bold, color=blue];
m31_130 -> m31_131  [key=0, style=solid];
m31_131 -> m31_93  [key=2, style=dotted];
m31_131 -> m31_132  [key=0, style=solid];
m31_131 -> m31_126  [key=2, style=dotted];
m31_132 -> m31_130  [key=0, style=bold, color=blue];
m31_156 -> m31_157  [key=0, style=solid];
m31_157 -> m31_93  [key=2, style=dotted];
m31_157 -> m31_158  [key=0, style=solid];
m31_157 -> m31_159  [key=2, style=dotted];
m31_158 -> m31_156  [key=0, style=bold, color=blue];
m31_153 -> m31_154  [key=0, style=solid];
m31_154 -> m31_126  [key=2, style=dotted];
m31_154 -> m31_155  [key=0, style=solid];
m31_154 -> m31_136  [key=2, style=dotted];
m31_155 -> m31_153  [key=0, style=bold, color=blue];
m31_64 -> m31_65  [key=0, style=solid];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_71  [key=2, style=dotted];
m31_66 -> m31_68  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_61  [key=2, style=dotted];
m31_65 -> m31_68  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m31_65 -> m31_69  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m31_67 -> m31_68  [key=0, style=solid];
m31_67 -> m31_69  [key=0, style=solid];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_72  [key=2, style=dotted];
m31_69 -> m31_63  [key=2, style=dotted];
m31_69 -> m31_70  [key=0, style=solid];
m31_70 -> m31_64  [key=0, style=bold, color=blue];
m31_31 -> m31_32  [key=0, style=solid];
m31_133 -> m31_134  [key=0, style=solid];
m31_134 -> m31_126  [key=2, style=dotted];
m31_134 -> m31_135  [key=0, style=solid];
m31_134 -> m31_136  [key=2, style=dotted];
m31_135 -> m31_133  [key=0, style=bold, color=blue];
m31_99 -> m31_100  [key=0, style=solid];
m31_100 -> m31_82  [key=2, style=dotted];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_103  [key=2, style=dotted];
m31_101 -> m31_82  [key=2, style=dotted];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_104  [key=2, style=dotted];
m31_102 -> m31_99  [key=0, style=bold, color=blue];
m31_127 -> m31_128  [key=0, style=solid];
m31_128 -> m31_82  [key=2, style=dotted];
m31_128 -> m31_129  [key=0, style=solid];
m31_128 -> m31_125  [key=2, style=dotted];
m31_129 -> m31_127  [key=0, style=bold, color=blue];
m31_193 -> m31_20  [key=1, style=dashed, color=green, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m31_193 -> m31_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_7  [key=2, style=dotted];
m32_1 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_1 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label=job];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_8  [key=2, style=dotted];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_10  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_9  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_11  [key=2, style=dotted];
m32_5 -> m32_12  [key=2, style=dotted];
m32_6 -> m32_0  [key=0, style=bold, color=blue];
m32_23 -> m32_24  [key=0, style=solid];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_21  [key=2, style=dotted];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_28  [key=2, style=dotted];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_29  [key=2, style=dotted];
m32_26 -> m32_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_27 -> m32_23  [key=0, style=bold, color=blue];
m32_35 -> m32_36  [key=0, style=solid];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_21  [key=2, style=dotted];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_40  [key=2, style=dotted];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_29  [key=2, style=dotted];
m32_38 -> m32_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_39 -> m32_35  [key=0, style=bold, color=blue];
m32_45 -> m32_46  [key=0, style=solid];
m32_46 -> m32_47  [key=0, style=solid, color=red];
m32_46 -> m32_21  [key=2, style=dotted];
m32_46 -> m32_48  [key=1, style=dashed, color=darkseagreen4, label=handler];
m32_46 -> m32_53  [key=1, style=dashed, color=darkseagreen4, label=handler];
m32_47 -> m32_48  [key=0, style=solid, color=red];
m32_47 -> m32_11  [key=2, style=dotted, color=red];
m32_47 -> m32_50  [key=2, style=dotted, color=red];
m32_47 -> m32_53  [key=1, style=dashed, color=red, label=context];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_51  [key=2, style=dotted];
m32_48 -> m32_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_49 -> m32_45  [key=0, style=bold, color=blue];
m32_52 -> m32_53  [key=0, style=solid];
m32_13 -> m32_14  [key=0, style=solid];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_16  [key=2, style=dotted];
m32_15 -> m32_13  [key=0, style=bold, color=blue];
m32_30 -> m32_31  [key=0, style=solid];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_33  [key=2, style=dotted];
m32_31 -> m32_34  [key=2, style=dotted];
m32_32 -> m32_30  [key=0, style=bold, color=blue];
m32_41 -> m32_42  [key=0, style=solid];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_44  [key=2, style=dotted];
m32_43 -> m32_41  [key=0, style=bold, color=blue];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_28  [key=2, style=dotted];
m32_54 -> m32_52  [key=0, style=bold, color=blue];
m32_17 -> m32_18  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_21  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_22  [key=2, style=dotted];
m32_20 -> m32_17  [key=0, style=bold, color=blue];
m32_55 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_47  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_55 -> m32_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ScheduledStateHandlerFacts"];
m32_56 -> m32_53  [key=1, style=dashed, color=darkseagreen4, label=handler];
m32_57 -> m32_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m33_0 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_2 -> m33_5  [key=0, style=solid];
m33_2 -> n10  [key=2, style=dotted];
m33_5 -> m33_0  [key=0, style=bold, color=blue];
m33_24 -> m33_31  [key=0, style=solid, color=red];
m33_31 -> m33_32  [key=0, style=solid, color=red];
m33_31 -> m33_33  [key=2, style=dotted, color=red];
m33_31 -> m33_34  [key=2, style=dotted, color=red];
m33_31 -> m33_31  [key=3, color=red, style=bold, label="Local variable HangFire.Server.SchedulePoller scheduler"];
m33_32 -> m33_24  [key=0, style=bold, color=blue];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m33_7 -> m33_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_17  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_19  [key=2, style=dotted];
m33_12 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m33_15 -> m33_16  [key=0, style=solid];
m33_15 -> m33_19  [key=2, style=dotted];
m33_15 -> m33_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_9  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_18  [key=2, style=dotted];
m33_10 -> m33_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_10 -> m33_14  [key=1, style=dashed, color=darkseagreen4, label=removedCount];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_14  [key=0, style=solid];
m33_14 -> m33_9  [key=0, style=solid];
m33_14 -> m33_15  [key=0, style=solid];
m33_13 -> m33_14  [key=0, style=solid];
m33_13 -> m33_20  [key=2, style=dotted];
m33_13 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m33_13 -> m33_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m33_16 -> m33_7  [key=0, style=bold, color=blue];
m33_26 -> m33_27  [key=0, style=solid];
m33_27 -> m33_28  [key=0, style=solid];
m33_27 -> m33_29  [key=2, style=dotted];
m33_27 -> m33_30  [key=2, style=dotted];
m33_27 -> m33_31  [key=3, color=red, style=bold, label="Local variable HangFire.Server.SchedulePoller scheduler"];
m33_28 -> m33_26  [key=0, style=bold, color=blue];
m33_21 -> m33_22  [key=0, style=solid];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_24  [key=2, style=dotted];
m33_22 -> m33_25  [key=2, style=dotted];
m33_23 -> m33_21  [key=0, style=bold, color=blue];
m33_35 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m33_35 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m33_35 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m33_35 -> m33_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m33_35 -> m33_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m33_35 -> m33_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m34_0 -> m34_1  [key=0, style=solid, color=green];
m34_0 -> m34_3  [key=1, style=dashed, color=green, label="string[]"];
m34_0 -> m34_5  [key=1, style=dashed, color=green, label="HangFire.JobStorage"];
m34_0 -> m34_7  [key=1, style=dashed, color=green, label="HangFire.Server.IJobPerformanceProcess"];
m34_0 -> m34_9  [key=1, style=dashed, color=green, label="HangFire.JobActivator"];
m34_0 -> m34_11  [key=1, style=dashed, color=green, label="HangFire.States.IStateMachineFactory"];
m34_0 -> m34_13  [key=1, style=dashed, color=green, label=string];
m34_0 -> m34_14  [key=1, style=dashed, color=green, label="string[]"];
m34_0 -> m34_15  [key=1, style=dashed, color=green, label="HangFire.JobStorage"];
m34_0 -> m34_16  [key=1, style=dashed, color=green, label="HangFire.Server.IJobPerformanceProcess"];
m34_0 -> m34_17  [key=1, style=dashed, color=green, label="HangFire.JobActivator"];
m34_0 -> m34_18  [key=1, style=dashed, color=green, label="HangFire.States.IStateMachineFactory"];
m34_1 -> m34_2  [key=0, style=solid, color=green];
m34_1 -> m34_3  [key=0, style=solid, color=green];
m34_2 -> m34_19  [key=0, style=solid, color=green];
m34_2 -> n10  [key=2, style=dotted, color=green];
m34_3 -> m34_4  [key=0, style=solid, color=green];
m34_3 -> m34_5  [key=0, style=solid, color=green];
m34_4 -> m34_19  [key=0, style=solid, color=green];
m34_4 -> n10  [key=2, style=dotted, color=green];
m34_5 -> m34_6  [key=0, style=solid, color=green];
m34_5 -> m34_7  [key=0, style=solid, color=green];
m34_6 -> m34_19  [key=0, style=solid, color=green];
m34_6 -> n10  [key=2, style=dotted, color=green];
m34_7 -> m34_8  [key=0, style=solid, color=green];
m34_7 -> m34_9  [key=0, style=solid, color=green];
m34_8 -> m34_19  [key=0, style=solid, color=green];
m34_8 -> n10  [key=2, style=dotted, color=green];
m34_9 -> m34_10  [key=0, style=solid, color=green];
m34_9 -> m34_11  [key=0, style=solid, color=green];
m34_10 -> m34_19  [key=0, style=solid, color=green];
m34_10 -> n10  [key=2, style=dotted, color=green];
m34_11 -> m34_12  [key=0, style=solid, color=green];
m34_11 -> m34_13  [key=0, style=solid, color=green];
m34_12 -> m34_19  [key=0, style=solid, color=green];
m34_12 -> n10  [key=2, style=dotted, color=green];
m34_13 -> m34_14  [key=0, style=solid, color=green];
m34_14 -> m34_15  [key=0, style=solid, color=green];
m34_15 -> m34_16  [key=0, style=solid, color=green];
m34_16 -> m34_17  [key=0, style=solid, color=green];
m34_17 -> m34_18  [key=0, style=solid, color=green];
m34_18 -> m34_19  [key=0, style=solid, color=green];
m34_19 -> m34_0  [key=0, style=bold, color=blue];
m34_23 -> m34_13  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m34_23 -> m34_14  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m34_23 -> m34_15  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m34_23 -> m34_16  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m34_23 -> m34_17  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m34_23 -> m34_18  [key=1, style=dashed, color=green, label="HangFire.Server.SharedWorkerContext"];
m35_10 -> m35_11  [key=0, style=solid, color=green];
m35_11 -> m35_12  [key=0, style=solid, color=green];
m35_11 -> m35_14  [key=2, style=dotted, color=green];
m35_11 -> m35_16  [key=1, style=dashed, color=green, label="lambda expression"];
m35_12 -> m35_13  [key=0, style=solid, color=green];
m35_12 -> m35_15  [key=2, style=dotted, color=green];
m35_13 -> m35_10  [key=0, style=bold, color=blue];
m35_64 -> m35_77  [key=0, style=solid, color=green];
m35_77 -> m35_78  [key=0, style=solid, color=green];
m35_77 -> m35_19  [key=2, style=dotted, color=green];
m35_78 -> m35_64  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid, color=green];
m35_1 -> m35_2  [key=0, style=solid, color=green];
m35_1 -> m35_6  [key=2, style=dotted, color=green];
m35_2 -> m35_3  [key=0, style=solid, color=green];
m35_2 -> m35_7  [key=2, style=dotted, color=green];
m35_3 -> m35_4  [key=0, style=solid, color=green];
m35_3 -> m35_8  [key=2, style=dotted, color=green];
m35_4 -> m35_5  [key=0, style=solid, color=green];
m35_4 -> m35_9  [key=2, style=dotted, color=green];
m35_5 -> m35_0  [key=0, style=bold, color=blue];
m35_55 -> m35_56  [key=0, style=solid, color=green];
m35_56 -> m35_57  [key=0, style=solid, color=green];
m35_56 -> m35_64  [key=2, style=dotted, color=green];
m35_56 -> m35_58  [key=1, style=dashed, color=green, label=context];
m35_56 -> m35_59  [key=1, style=dashed, color=green, label=context];
m35_56 -> m35_60  [key=1, style=dashed, color=green, label=context];
m35_56 -> m35_61  [key=1, style=dashed, color=green, label=context];
m35_56 -> m35_62  [key=1, style=dashed, color=green, label=context];
m35_57 -> m35_58  [key=0, style=solid, color=green];
m35_57 -> m35_15  [key=2, style=dotted, color=green];
m35_58 -> m35_59  [key=0, style=solid, color=green];
m35_58 -> m35_65  [key=2, style=dotted, color=green];
m35_59 -> m35_60  [key=0, style=solid, color=green];
m35_59 -> m35_65  [key=2, style=dotted, color=green];
m35_60 -> m35_61  [key=0, style=solid, color=green];
m35_60 -> m35_65  [key=2, style=dotted, color=green];
m35_61 -> m35_62  [key=0, style=solid, color=green];
m35_61 -> m35_65  [key=2, style=dotted, color=green];
m35_62 -> m35_63  [key=0, style=solid, color=green];
m35_62 -> m35_65  [key=2, style=dotted, color=green];
m35_63 -> m35_55  [key=0, style=bold, color=blue];
m35_66 -> m35_67  [key=0, style=solid, color=green];
m35_67 -> m35_68  [key=0, style=solid, color=green];
m35_67 -> m35_64  [key=2, style=dotted, color=green];
m35_67 -> m35_69  [key=1, style=dashed, color=green, label=context];
m35_67 -> m35_70  [key=1, style=dashed, color=green, label=context];
m35_67 -> m35_71  [key=1, style=dashed, color=green, label=context];
m35_67 -> m35_72  [key=1, style=dashed, color=green, label=context];
m35_67 -> m35_73  [key=1, style=dashed, color=green, label=context];
m35_67 -> m35_74  [key=1, style=dashed, color=green, label=context];
m35_68 -> m35_69  [key=0, style=solid, color=green];
m35_68 -> m35_76  [key=2, style=dotted, color=green];
m35_68 -> m35_70  [key=1, style=dashed, color=green, label=contextCopy];
m35_68 -> m35_71  [key=1, style=dashed, color=green, label=contextCopy];
m35_68 -> m35_72  [key=1, style=dashed, color=green, label=contextCopy];
m35_68 -> m35_73  [key=1, style=dashed, color=green, label=contextCopy];
m35_68 -> m35_74  [key=1, style=dashed, color=green, label=contextCopy];
m35_69 -> m35_70  [key=0, style=solid, color=green];
m35_69 -> m35_15  [key=2, style=dotted, color=green];
m35_70 -> m35_71  [key=0, style=solid, color=green];
m35_70 -> m35_65  [key=2, style=dotted, color=green];
m35_71 -> m35_72  [key=0, style=solid, color=green];
m35_71 -> m35_65  [key=2, style=dotted, color=green];
m35_72 -> m35_73  [key=0, style=solid, color=green];
m35_72 -> m35_65  [key=2, style=dotted, color=green];
m35_73 -> m35_74  [key=0, style=solid, color=green];
m35_73 -> m35_65  [key=2, style=dotted, color=green];
m35_74 -> m35_75  [key=0, style=solid, color=green];
m35_74 -> m35_65  [key=2, style=dotted, color=green];
m35_75 -> m35_66  [key=0, style=bold, color=blue];
m35_41 -> m35_42  [key=0, style=solid, color=green];
m35_42 -> m35_43  [key=0, style=solid, color=green];
m35_42 -> m35_14  [key=2, style=dotted, color=green];
m35_42 -> m35_45  [key=1, style=dashed, color=green, label="lambda expression"];
m35_43 -> m35_44  [key=0, style=solid, color=green];
m35_43 -> m35_15  [key=2, style=dotted, color=green];
m35_44 -> m35_41  [key=0, style=bold, color=blue];
m35_48 -> m35_49  [key=0, style=solid, color=green];
m35_49 -> m35_50  [key=0, style=solid, color=green];
m35_49 -> m35_14  [key=2, style=dotted, color=green];
m35_49 -> m35_52  [key=1, style=dashed, color=green, label="lambda expression"];
m35_50 -> m35_51  [key=0, style=solid, color=green];
m35_50 -> m35_15  [key=2, style=dotted, color=green];
m35_51 -> m35_48  [key=0, style=bold, color=blue];
m35_52 -> m35_53  [key=0, style=solid, color=green];
m35_16 -> m35_17  [key=0, style=solid, color=green];
m35_17 -> m35_18  [key=0, style=solid, color=green];
m35_17 -> m35_19  [key=2, style=dotted, color=green];
m35_18 -> m35_16  [key=0, style=bold, color=blue];
m35_24 -> m35_25  [key=0, style=solid, color=green];
m35_25 -> m35_26  [key=0, style=solid, color=green];
m35_25 -> m35_19  [key=2, style=dotted, color=green];
m35_26 -> m35_24  [key=0, style=bold, color=blue];
m35_31 -> m35_32  [key=0, style=solid, color=green];
m35_32 -> m35_33  [key=0, style=solid, color=green];
m35_32 -> m35_19  [key=2, style=dotted, color=green];
m35_33 -> m35_31  [key=0, style=bold, color=blue];
m35_38 -> m35_39  [key=0, style=solid, color=green];
m35_39 -> m35_40  [key=0, style=solid, color=green];
m35_39 -> m35_19  [key=2, style=dotted, color=green];
m35_40 -> m35_38  [key=0, style=bold, color=blue];
m35_45 -> m35_46  [key=0, style=solid, color=green];
m35_46 -> m35_47  [key=0, style=solid, color=green];
m35_46 -> m35_19  [key=2, style=dotted, color=green];
m35_47 -> m35_45  [key=0, style=bold, color=blue];
m35_53 -> m35_54  [key=0, style=solid, color=green];
m35_53 -> m35_19  [key=2, style=dotted, color=green];
m35_54 -> m35_52  [key=0, style=bold, color=blue];
m35_27 -> m35_28  [key=0, style=solid, color=green];
m35_28 -> m35_29  [key=0, style=solid, color=green];
m35_28 -> m35_14  [key=2, style=dotted, color=green];
m35_28 -> m35_31  [key=1, style=dashed, color=green, label="lambda expression"];
m35_29 -> m35_30  [key=0, style=solid, color=green];
m35_29 -> m35_15  [key=2, style=dotted, color=green];
m35_30 -> m35_27  [key=0, style=bold, color=blue];
m35_20 -> m35_21  [key=0, style=solid, color=green];
m35_21 -> m35_22  [key=0, style=solid, color=green];
m35_21 -> m35_14  [key=2, style=dotted, color=green];
m35_21 -> m35_24  [key=1, style=dashed, color=green, label="lambda expression"];
m35_22 -> m35_23  [key=0, style=solid, color=green];
m35_22 -> m35_15  [key=2, style=dotted, color=green];
m35_23 -> m35_20  [key=0, style=bold, color=blue];
m35_34 -> m35_35  [key=0, style=solid, color=green];
m35_35 -> m35_36  [key=0, style=solid, color=green];
m35_35 -> m35_14  [key=2, style=dotted, color=green];
m35_35 -> m35_38  [key=1, style=dashed, color=green, label="lambda expression"];
m35_36 -> m35_37  [key=0, style=solid, color=green];
m35_36 -> m35_15  [key=2, style=dotted, color=green];
m35_37 -> m35_34  [key=0, style=bold, color=blue];
m35_79 -> m35_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_4  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_11  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_17  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_21  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_25  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_28  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_32  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_35  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_39  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_42  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_46  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_49  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_53  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_56  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_59  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_60  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_61  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_62  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_67  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m35_79 -> m35_77  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.SharedWorkerContextFacts"];
m36_0 -> m36_1  [key=0, style=solid, color=green];
m36_1 -> m36_2  [key=0, style=solid, color=green];
m36_2 -> m36_3  [key=0, style=solid, color=green];
m36_3 -> m36_4  [key=0, style=solid, color=green];
m36_3 -> m36_9  [key=2, style=dotted, color=green];
m36_4 -> m36_5  [key=0, style=solid, color=green];
m36_4 -> m36_10  [key=2, style=dotted, color=green];
m36_5 -> m36_6  [key=0, style=solid, color=green];
m36_5 -> m36_11  [key=2, style=dotted, color=green];
m36_6 -> m36_7  [key=0, style=solid, color=green];
m36_6 -> m36_12  [key=2, style=dotted, color=green];
m36_7 -> m36_8  [key=0, style=solid, color=green];
m36_7 -> m36_13  [key=2, style=dotted, color=green];
m36_8 -> m36_0  [key=0, style=bold, color=blue];
m36_14 -> m36_15  [key=0, style=solid, color=green];
m36_15 -> m36_16  [key=0, style=solid, color=green];
m36_15 -> m36_17  [key=2, style=dotted, color=green];
m36_16 -> m36_14  [key=0, style=bold, color=blue];
m36_18 -> m36_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_4  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_5  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_6  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_7  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m36_18 -> m36_15  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.SharedWorkerContextMock"];
m37_82 -> m37_83  [key=0, style=solid];
m37_83 -> m37_84  [key=0, style=solid];
m37_83 -> m37_85  [key=2, style=dotted];
m37_84 -> m37_82  [key=0, style=bold, color=blue];
m37_98 -> m37_99  [key=0, style=solid];
m37_98 -> m37_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_99 -> m37_100  [key=0, style=solid];
m37_99 -> m37_23  [key=2, style=dotted];
m37_99 -> m37_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_100 -> m37_98  [key=0, style=bold, color=blue];
m37_85 -> m37_86  [key=0, style=solid];
m37_85 -> m37_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_85 -> m37_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_85 -> m37_82  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m37_85 -> m37_83  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m37_86 -> m37_87  [key=0, style=solid];
m37_86 -> m37_90  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m37_86 -> m37_86  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m37_87 -> m37_88  [key=0, style=solid];
m37_87 -> m37_23  [key=2, style=dotted];
m37_87 -> m37_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_88 -> m37_85  [key=0, style=bold, color=blue];
m37_64 -> m37_65  [key=0, style=solid];
m37_64 -> m37_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_65 -> m37_66  [key=0, style=solid];
m37_65 -> m37_23  [key=2, style=dotted];
m37_65 -> m37_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_66 -> m37_64  [key=0, style=bold, color=blue];
m37_44 -> m37_45  [key=0, style=solid];
m37_44 -> m37_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_44 -> m37_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_45 -> m37_46  [key=0, style=solid];
m37_45 -> m37_49  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m37_45 -> m37_45  [key=3, color=darkorchid, style=bold, label="Local variable string addStateSql"];
m37_46 -> m37_47  [key=0, style=solid];
m37_46 -> m37_23  [key=2, style=dotted];
m37_46 -> m37_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_47 -> m37_44  [key=0, style=bold, color=blue];
m37_35 -> m37_36  [key=0, style=solid];
m37_35 -> m37_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_35 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_36 -> m37_37  [key=0, style=solid];
m37_36 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m37_36 -> m37_36  [key=3, color=darkorchid, style=bold, label="Local variable string addAndSetStateSql"];
m37_37 -> m37_38  [key=0, style=solid];
m37_37 -> m37_23  [key=2, style=dotted];
m37_37 -> m37_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_38 -> m37_35  [key=0, style=bold, color=blue];
m37_110 -> m37_111  [key=0, style=solid];
m37_110 -> m37_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_110 -> m37_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_111 -> m37_112  [key=0, style=solid];
m37_111 -> m37_115  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m37_111 -> m37_111  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m37_112 -> m37_113  [key=0, style=solid];
m37_112 -> m37_23  [key=2, style=dotted];
m37_112 -> m37_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_113 -> m37_110  [key=0, style=bold, color=blue];
m37_23 -> m37_117  [key=0, style=solid];
m37_23 -> m37_21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_46  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_59  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_65  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_71  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_87  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_93  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_23 -> m37_112  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m37_117 -> m37_118  [key=0, style=solid];
m37_117 -> m37_119  [key=2, style=dotted];
m37_118 -> m37_23  [key=0, style=bold, color=blue];
m37_76 -> m37_77  [key=0, style=solid];
m37_76 -> m37_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_77 -> m37_78  [key=0, style=solid];
m37_77 -> m37_23  [key=2, style=dotted];
m37_77 -> m37_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_78 -> m37_76  [key=0, style=bold, color=blue];
m37_70 -> m37_71  [key=0, style=solid];
m37_70 -> m37_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_71 -> m37_72  [key=0, style=solid];
m37_71 -> m37_23  [key=2, style=dotted];
m37_71 -> m37_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_72 -> m37_70  [key=0, style=bold, color=blue];
m37_92 -> m37_93  [key=0, style=solid];
m37_92 -> m37_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_93 -> m37_94  [key=0, style=solid];
m37_93 -> m37_23  [key=2, style=dotted];
m37_93 -> m37_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_94 -> m37_92  [key=0, style=bold, color=blue];
m37_20 -> m37_21  [key=0, style=solid];
m37_20 -> m37_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_21 -> m37_22  [key=0, style=solid];
m37_21 -> m37_23  [key=2, style=dotted];
m37_21 -> m37_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_22 -> m37_20  [key=0, style=bold, color=blue];
m37_104 -> m37_105  [key=0, style=solid];
m37_104 -> m37_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_105 -> m37_106  [key=0, style=solid];
m37_105 -> m37_23  [key=2, style=dotted];
m37_105 -> m37_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_106 -> m37_104  [key=0, style=bold, color=blue];
m37_8 -> m37_9  [key=0, style=solid];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_15  [key=2, style=dotted];
m37_9 -> m37_16  [key=2, style=dotted];
m37_9 -> m37_13  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m37_10 -> m37_11  [key=0, style=solid];
m37_10 -> m37_17  [key=2, style=dotted];
m37_13 -> m37_14  [key=0, style=solid];
m37_13 -> m37_19  [key=2, style=dotted];
m37_11 -> m37_12  [key=0, style=solid];
m37_11 -> m37_13  [key=0, style=solid];
m37_12 -> m37_11  [key=0, style=solid];
m37_12 -> m37_18  [key=2, style=dotted];
m37_14 -> m37_8  [key=0, style=bold, color=blue];
m37_114 -> m37_115  [key=0, style=solid];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_27  [key=2, style=dotted];
m37_25 -> m37_28  [key=2, style=dotted];
m37_24 -> m37_25  [key=0, style=solid];
m37_26 -> m37_24  [key=0, style=bold, color=blue];
m37_33 -> m37_34  [key=0, style=solid];
m37_33 -> m37_28  [key=2, style=dotted];
m37_32 -> m37_33  [key=0, style=solid];
m37_34 -> m37_32  [key=0, style=bold, color=blue];
m37_40 -> m37_41  [key=0, style=solid];
m37_40 -> m37_42  [key=2, style=dotted];
m37_40 -> m37_43  [key=2, style=dotted];
m37_40 -> m37_28  [key=2, style=dotted];
m37_39 -> m37_40  [key=0, style=solid];
m37_41 -> m37_39  [key=0, style=bold, color=blue];
m37_49 -> m37_50  [key=0, style=solid];
m37_49 -> m37_42  [key=2, style=dotted];
m37_49 -> m37_43  [key=2, style=dotted];
m37_49 -> m37_28  [key=2, style=dotted];
m37_48 -> m37_49  [key=0, style=solid];
m37_50 -> m37_48  [key=0, style=bold, color=blue];
m37_56 -> m37_57  [key=0, style=solid];
m37_56 -> m37_28  [key=2, style=dotted];
m37_55 -> m37_56  [key=0, style=solid];
m37_57 -> m37_55  [key=0, style=bold, color=blue];
m37_62 -> m37_63  [key=0, style=solid];
m37_62 -> m37_28  [key=2, style=dotted];
m37_61 -> m37_62  [key=0, style=solid];
m37_63 -> m37_61  [key=0, style=bold, color=blue];
m37_68 -> m37_69  [key=0, style=solid];
m37_68 -> m37_27  [key=2, style=dotted];
m37_68 -> m37_28  [key=2, style=dotted];
m37_67 -> m37_68  [key=0, style=solid];
m37_69 -> m37_67  [key=0, style=bold, color=blue];
m37_74 -> m37_75  [key=0, style=solid];
m37_74 -> m37_28  [key=2, style=dotted];
m37_73 -> m37_74  [key=0, style=solid];
m37_75 -> m37_73  [key=0, style=bold, color=blue];
m37_80 -> m37_81  [key=0, style=solid];
m37_80 -> m37_27  [key=2, style=dotted];
m37_80 -> m37_28  [key=2, style=dotted];
m37_79 -> m37_80  [key=0, style=solid];
m37_81 -> m37_79  [key=0, style=bold, color=blue];
m37_90 -> m37_91  [key=0, style=solid];
m37_90 -> m37_28  [key=2, style=dotted];
m37_89 -> m37_90  [key=0, style=solid];
m37_91 -> m37_89  [key=0, style=bold, color=blue];
m37_96 -> m37_97  [key=0, style=solid];
m37_96 -> m37_28  [key=2, style=dotted];
m37_95 -> m37_96  [key=0, style=solid];
m37_97 -> m37_95  [key=0, style=bold, color=blue];
m37_102 -> m37_103  [key=0, style=solid];
m37_102 -> m37_28  [key=2, style=dotted];
m37_101 -> m37_102  [key=0, style=solid];
m37_103 -> m37_101  [key=0, style=bold, color=blue];
m37_108 -> m37_109  [key=0, style=solid];
m37_108 -> m37_28  [key=2, style=dotted];
m37_107 -> m37_108  [key=0, style=solid];
m37_109 -> m37_107  [key=0, style=bold, color=blue];
m37_115 -> m37_116  [key=0, style=solid];
m37_115 -> m37_28  [key=2, style=dotted];
m37_116 -> m37_114  [key=0, style=bold, color=blue];
m37_0 -> m37_1  [key=0, style=solid];
m37_0 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m37_1 -> m37_2  [key=0, style=solid];
m37_1 -> m37_3  [key=0, style=solid];
m37_3 -> m37_4  [key=0, style=solid];
m37_2 -> m37_4  [key=0, style=solid];
m37_2 -> n10  [key=2, style=dotted];
m37_4 -> m37_0  [key=0, style=bold, color=blue];
m37_51 -> m37_52  [key=0, style=solid];
m37_51 -> m37_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_51 -> m37_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_52 -> m37_53  [key=0, style=solid];
m37_52 -> m37_56  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m37_52 -> m37_52  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m37_53 -> m37_54  [key=0, style=solid];
m37_53 -> m37_23  [key=2, style=dotted];
m37_53 -> m37_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_54 -> m37_51  [key=0, style=bold, color=blue];
m37_58 -> m37_59  [key=0, style=solid];
m37_58 -> m37_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_59 -> m37_60  [key=0, style=solid];
m37_59 -> m37_23  [key=2, style=dotted];
m37_59 -> m37_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_60 -> m37_58  [key=0, style=bold, color=blue];
m37_29 -> m37_30  [key=0, style=solid];
m37_29 -> m37_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_30 -> m37_31  [key=0, style=solid];
m37_30 -> m37_23  [key=2, style=dotted];
m37_30 -> m37_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_31 -> m37_29  [key=0, style=bold, color=blue];
m37_6 -> m37_7  [key=0, style=solid];
m37_7 -> m37_6  [key=0, style=bold, color=blue];
m37_120 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_120 -> m37_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m37_121 -> m37_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_122 -> m37_25  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_123 -> m37_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_124 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_125 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m37_126 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m37_127 -> m37_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_128 -> m37_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m37_129 -> m37_49  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m37_130 -> m37_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_131 -> m37_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_132 -> m37_56  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m37_133 -> m37_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_134 -> m37_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_135 -> m37_68  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_136 -> m37_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_137 -> m37_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_138 -> m37_80  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_139 -> m37_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_140 -> m37_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_141 -> m37_90  [key=1, style=dashed, color=darkseagreen4, label=double];
m37_142 -> m37_90  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m37_143 -> m37_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_144 -> m37_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_145 -> m37_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_146 -> m37_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_147 -> m37_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_148 -> m37_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_149 -> m37_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_150 -> m37_115  [key=1, style=dashed, color=darkseagreen4, label=int];
m37_151 -> m37_115  [key=1, style=dashed, color=darkseagreen4, label=int];
m37_152 -> m37_115  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m38_0 -> m38_1  [key=0, style=solid, color=red];
m38_1 -> m38_2  [key=0, style=solid, color=red];
m38_1 -> m38_3  [key=2, style=dotted, color=red];
m38_2 -> m38_0  [key=0, style=bold, color=blue];
m39_14 -> m39_15  [key=0, style=solid, color=red];
m39_14 -> m39_18  [key=1, style=dashed, color=red, label=string];
m39_15 -> m39_16  [key=0, style=solid, color=red];
m39_15 -> m39_9  [key=2, style=dotted, color=red];
m39_15 -> m39_17  [key=1, style=dashed, color=red, label="lambda expression"];
m39_16 -> m39_14  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid, color=red];
m39_0 -> m39_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m39_1 -> m39_2  [key=0, style=solid, color=red];
m39_1 -> m39_3  [key=0, style=solid, color=red];
m39_3 -> m39_4  [key=0, style=solid, color=red];
m39_2 -> m39_4  [key=0, style=solid, color=red];
m39_2 -> n10  [key=2, style=dotted, color=red];
m39_4 -> m39_0  [key=0, style=bold, color=blue];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m39_20 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_9  [key=2, style=dotted];
m39_22 -> m39_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_23 -> m39_20  [key=0, style=bold, color=blue];
m39_6 -> m39_7  [key=0, style=solid, color=red];
m39_6 -> m39_11  [key=1, style=dashed, color=red, label=string];
m39_7 -> m39_8  [key=0, style=solid, color=red];
m39_7 -> m39_9  [key=2, style=dotted, color=red];
m39_7 -> m39_10  [key=1, style=dashed, color=red, label="lambda expression"];
m39_8 -> m39_6  [key=0, style=bold, color=blue];
m39_24 -> m39_25  [key=0, style=solid];
m39_11 -> m39_12  [key=0, style=solid, color=red];
m39_11 -> m39_13  [key=2, style=dotted, color=red];
m39_10 -> m39_11  [key=0, style=solid, color=red];
m39_12 -> m39_10  [key=0, style=bold, color=blue];
m39_18 -> m39_19  [key=0, style=solid, color=red];
m39_18 -> m39_13  [key=2, style=dotted, color=red];
m39_17 -> m39_18  [key=0, style=solid, color=red];
m39_19 -> m39_17  [key=0, style=bold, color=blue];
m39_25 -> m39_26  [key=0, style=solid];
m39_25 -> m39_13  [key=2, style=dotted];
m39_26 -> m39_24  [key=0, style=bold, color=blue];
m39_27 -> m39_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m39_27 -> m39_7  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m39_27 -> m39_15  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m39_27 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m39_28 -> m39_11  [key=1, style=dashed, color=red, label=string];
m39_29 -> m39_11  [key=1, style=dashed, color=red, label=string];
m39_30 -> m39_18  [key=1, style=dashed, color=red, label=string];
m39_31 -> m39_18  [key=1, style=dashed, color=red, label=string];
m39_32 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m39_33 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m39_34 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m42_9 -> m42_10  [key=0, style=solid];
m42_9 -> m42_11  [key=2, style=dotted];
m42_6 -> m42_7  [key=0, style=solid];
m42_2 -> m42_3  [key=0, style=solid, color=green];
m42_2 -> m42_0  [key=0, style=bold, color=blue];
m42_3 -> m42_4  [key=0, style=solid, color=green];
m42_4 -> m42_5  [key=0, style=solid, color=green];
m42_4 -> m42_6  [key=2, style=dotted];
m42_4 -> m42_7  [key=2, style=dotted];
m42_5 -> m42_2  [key=0, style=bold, color=blue];
m42_5 -> m42_3  [key=0, style=bold, color=blue];
m42_8 -> m42_9  [key=0, style=solid];
m42_8 -> m42_6  [key=0, style=bold, color=blue];
m42_10 -> m42_8  [key=0, style=bold, color=blue];
m42_7 -> m42_8  [key=0, style=solid];
m42_7 -> m42_9  [key=2, style=dotted];
m42_7 -> m42_10  [key=2, style=dotted];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_12 -> m42_13  [key=0, style=solid];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_15  [key=2, style=dotted];
m42_14 -> m42_12  [key=0, style=bold, color=blue];
m42_16 -> m42_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m42_16 -> m42_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m42_26 -> m42_3  [key=1, style=dashed, color=green, label="HangFire.States.ScheduledState"];
m42_26 -> m42_4  [key=1, style=dashed, color=green, label="HangFire.States.ScheduledState"];
m42_26 -> m42_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m43_6 -> m43_7  [key=0, style=solid];
m43_7 -> m43_8  [key=0, style=solid];
m43_7 -> m43_4  [key=2, style=dotted];
m43_7 -> m43_9  [key=1, style=dashed, color=darkseagreen4, label=state];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_11  [key=2, style=dotted];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_12  [key=2, style=dotted];
m43_9 -> m43_5  [key=2, style=dotted];
m43_10 -> m43_6  [key=0, style=bold, color=blue];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_4  [key=2, style=dotted];
m43_2 -> m43_3  [key=0, style=solid];
m43_2 -> m43_5  [key=2, style=dotted];
m43_3 -> m43_0  [key=0, style=bold, color=blue];
m43_13 -> m43_14  [key=0, style=solid];
m43_14 -> m43_15  [key=0, style=solid, color=red];
m43_14 -> m43_4  [key=2, style=dotted];
m43_15 -> m43_16  [key=0, style=solid, color=red];
m43_15 -> m43_17  [key=2, style=dotted, color=red];
m43_16 -> m43_13  [key=0, style=bold, color=blue];
m44_15 -> m44_16  [key=0, style=solid, color=red];
m44_15 -> m44_17  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m44_15 -> m44_25  [key=2, style=dotted];
m44_15 -> m44_26  [key=2, style=dotted];
m44_16 -> m44_17  [key=0, style=solid, color=red];
m44_16 -> m44_20  [key=2, style=dotted, color=red];
m44_16 -> m44_18  [key=1, style=dashed, color=red, label=connection];
m44_16 -> m44_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m44_16 -> m44_27  [key=2, style=dotted];
m44_16 -> m44_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m44_17 -> m44_18  [key=0, style=solid, color=red];
m44_17 -> m44_21  [key=2, style=dotted, color=red];
m44_17 -> m44_20  [key=0, style=solid];
m44_17 -> m44_19  [key=1, style=dashed, color=darkseagreen4, label=fetcher];
m44_18 -> m44_19  [key=0, style=solid, color=red];
m44_18 -> m44_22  [key=2, style=dotted, color=red];
m44_18 -> m44_17  [key=0, style=solid];
m44_19 -> m44_15  [key=0, style=bold, color=blue];
m44_19 -> m44_21  [key=0, style=solid];
m44_19 -> m44_28  [key=2, style=dotted];
m44_26 -> m44_27  [key=0, style=solid, color=red];
m44_26 -> m44_42  [key=2, style=dotted, color=red];
m44_26 -> m44_28  [key=1, style=dashed, color=red, label=stateMachine];
m44_26 -> m44_40  [key=1, style=dashed, color=red, label=stateMachine];
m44_11 -> m44_12  [key=0, style=solid, color=red];
m44_23 -> m44_24  [key=0, style=solid];
m44_24 -> m44_25  [key=0, style=solid];
m44_25 -> m44_23  [key=0, style=bold, color=blue];
m44_29 -> m44_41  [key=0, style=solid];
m44_4 -> m44_13  [key=0, style=solid];
m44_4 -> n10  [key=2, style=dotted];
m44_12 -> m44_13  [key=0, style=solid, color=red];
m44_12 -> m44_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m44_13 -> m44_14  [key=0, style=solid];
m44_13 -> m44_22  [key=2, style=dotted];
m44_13 -> m44_23  [key=2, style=dotted];
m44_13 -> m44_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_13 -> m44_15  [key=1, style=dashed, color=darkseagreen4, label=waitHandles];
m44_13 -> m44_0  [key=0, style=bold, color=blue];
m44_14 -> m44_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m44_14 -> m44_15  [key=0, style=solid];
m44_14 -> m44_24  [key=2, style=dotted];
m44_14 -> m44_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m44_20 -> m44_21  [key=0, style=solid];
m44_20 -> m44_29  [key=2, style=dotted];
m44_21 -> m44_12  [key=0, style=bold, color=blue];
m44_28 -> m44_29  [key=0, style=solid];
m44_28 -> m44_30  [key=0, style=solid, color=red];
m44_28 -> m44_44  [key=2, style=dotted];
m44_27 -> m44_28  [key=0, style=solid, color=red];
m44_27 -> m44_43  [key=2, style=dotted, color=red];
m44_0 -> m44_1  [key=0, style=solid, color=red];
m44_0 -> m44_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m44_0 -> m44_5  [key=1, style=dashed, color=red, label="HangFire.Server.IJobPerformanceProcess"];
m44_0 -> m44_7  [key=1, style=dashed, color=red, label="HangFire.States.IStateMachineFactory"];
m44_0 -> m44_9  [key=1, style=dashed, color=red, label="HangFire.JobStorage"];
m44_0 -> m44_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m44_0 -> m44_11  [key=1, style=dashed, color=red, label="HangFire.Server.IJobPerformanceProcess"];
m44_0 -> m44_12  [key=1, style=dashed, color=red, label="HangFire.States.IStateMachineFactory"];
m44_0 -> m44_2  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m44_1 -> m44_2  [key=0, style=solid, color=red];
m44_1 -> m44_3  [key=0, style=solid, color=red];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_5  [key=0, style=solid, color=red];
m44_3 -> m44_0  [key=0, style=bold, color=blue];
m44_5 -> m44_6  [key=0, style=solid, color=red];
m44_5 -> m44_7  [key=0, style=solid, color=red];
m44_7 -> m44_8  [key=0, style=solid, color=green];
m44_7 -> m44_9  [key=0, style=solid, color=red];
m44_9 -> m44_10  [key=0, style=solid, color=red];
m44_9 -> m44_8  [key=0, style=solid, color=green];
m44_9 -> m44_11  [key=2, style=dotted];
m44_10 -> m44_11  [key=0, style=solid, color=red];
m44_10 -> m44_7  [key=0, style=bold, color=blue];
m44_2 -> m44_13  [key=0, style=solid, color=red];
m44_2 -> n10  [key=2, style=dotted, color=red];
m44_2 -> m44_1  [key=0, style=solid];
m44_2 -> m44_4  [key=2, style=dotted];
m44_2 -> m44_5  [key=2, style=dotted];
m44_2 -> m44_6  [key=2, style=dotted];
m44_6 -> m44_13  [key=0, style=solid, color=red];
m44_6 -> n10  [key=2, style=dotted, color=red];
m44_8 -> m44_13  [key=0, style=solid, color=red];
m44_8 -> n10  [key=2, style=dotted, color=red];
m44_8 -> m44_9  [key=0, style=solid, color=green];
m44_8 -> m44_10  [key=0, style=solid, color=green];
m44_30 -> m44_31  [key=0, style=solid, color=red];
m44_31 -> m44_32  [key=0, style=solid];
m44_31 -> m44_45  [key=2, style=dotted];
m44_31 -> m44_33  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m44_31 -> m44_34  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m44_32 -> m44_30  [key=0, style=bold, color=blue];
m44_32 -> m44_33  [key=0, style=solid];
m44_32 -> m44_46  [key=2, style=dotted];
m44_22 -> m44_26  [key=0, style=solid, color=red];
m44_22 -> m44_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_22 -> m44_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_22 -> m44_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_22 -> m44_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m44_22 -> m44_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_33 -> m44_34  [key=0, style=solid];
m44_33 -> m44_47  [key=2, style=dotted];
m44_33 -> m44_8  [key=1, style=dashed, color=green, label="HangFire.Server.PrioritizedJobFetcher"];
m44_33 -> m44_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrioritizedJobFetcher"];
m44_33 -> m44_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrioritizedJobFetcher"];
m44_33 -> m44_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrioritizedJobFetcher"];
m44_34 -> m44_35  [key=0, style=solid];
m44_34 -> m44_48  [key=2, style=dotted];
m44_40 -> m44_41  [key=0, style=solid];
m44_40 -> m44_44  [key=2, style=dotted];
m44_35 -> m44_36  [key=0, style=solid];
m44_35 -> m44_38  [key=0, style=solid];
m44_35 -> m44_40  [key=0, style=solid];
m44_35 -> m44_49  [key=2, style=dotted];
m44_36 -> m44_37  [key=0, style=solid];
m44_38 -> m44_39  [key=0, style=solid];
m44_37 -> m44_40  [key=0, style=solid];
m44_37 -> m44_50  [key=2, style=dotted];
m44_39 -> m44_40  [key=0, style=solid];
m44_39 -> m44_50  [key=2, style=dotted];
m44_41 -> m44_22  [key=0, style=bold, color=blue];
m44_51 -> m44_9  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m44_51 -> m44_11  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_12  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_16  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_17  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_18  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m44_51 -> m44_26  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_27  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m44_51 -> m44_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m45_14 -> m45_15  [key=0, style=solid, color=red];
m45_14 -> m45_18  [key=1, style=dashed, color=red, label=string];
m45_15 -> m45_16  [key=0, style=solid, color=red];
m45_15 -> m45_9  [key=2, style=dotted, color=red];
m45_15 -> m45_17  [key=1, style=dashed, color=red, label="lambda expression"];
m45_16 -> m45_14  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_3  [key=0, style=solid];
m45_3 -> m45_4  [key=0, style=solid];
m45_2 -> m45_4  [key=0, style=solid];
m45_2 -> n10  [key=2, style=dotted];
m45_4 -> m45_0  [key=0, style=bold, color=blue];
m45_20 -> m45_21  [key=0, style=solid, color=red];
m45_20 -> m45_22  [key=1, style=dashed, color=red, label=int];
m45_20 -> m45_25  [key=1, style=dashed, color=red, label=int];
m45_21 -> m45_22  [key=0, style=solid, color=red];
m45_21 -> m45_25  [key=1, style=dashed, color=red, label=trimSql];
m45_22 -> m45_23  [key=0, style=solid, color=red];
m45_22 -> m45_9  [key=2, style=dotted, color=red];
m45_22 -> m45_24  [key=1, style=dashed, color=red, label="lambda expression"];
m45_22 -> m45_15  [key=3, color=red, style=bold, label="Property variable string ServerName"];
m45_23 -> m45_20  [key=0, style=bold, color=blue];
m45_6 -> m45_7  [key=0, style=solid, color=red];
m45_6 -> m45_11  [key=1, style=dashed, color=red, label=string];
m45_7 -> m45_8  [key=0, style=solid, color=red];
m45_7 -> m45_9  [key=2, style=dotted, color=red];
m45_7 -> m45_10  [key=1, style=dashed, color=red, label="lambda expression"];
m45_8 -> m45_6  [key=0, style=bold, color=blue];
m45_24 -> m45_25  [key=0, style=solid, color=red];
m45_11 -> m45_12  [key=0, style=solid, color=red];
m45_11 -> m45_13  [key=2, style=dotted, color=red];
m45_10 -> m45_11  [key=0, style=solid, color=red];
m45_12 -> m45_10  [key=0, style=bold, color=blue];
m45_18 -> m45_19  [key=0, style=solid, color=red];
m45_18 -> m45_13  [key=2, style=dotted, color=red];
m45_17 -> m45_18  [key=0, style=solid, color=red];
m45_19 -> m45_17  [key=0, style=bold, color=blue];
m45_25 -> m45_26  [key=0, style=solid, color=red];
m45_25 -> m45_13  [key=2, style=dotted, color=red];
m45_26 -> m45_24  [key=0, style=bold, color=blue];
m45_27 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m45_27 -> m45_7  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m45_27 -> m45_15  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m45_27 -> m45_22  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m45_28 -> m45_11  [key=1, style=dashed, color=red, label=string];
m45_29 -> m45_11  [key=1, style=dashed, color=red, label=string];
m45_30 -> m45_18  [key=1, style=dashed, color=red, label=string];
m45_31 -> m45_18  [key=1, style=dashed, color=red, label=string];
m45_32 -> m45_25  [key=1, style=dashed, color=red, label=int];
m45_33 -> m45_25  [key=1, style=dashed, color=red, label=int];
m45_34 -> m45_25  [key=1, style=dashed, color=red, label=trimSql];
m46_86 -> m46_87  [key=0, style=solid];
m46_87 -> m46_88  [key=0, style=solid];
m46_87 -> m46_42  [key=2, style=dotted];
m46_87 -> m46_11  [key=2, style=dotted];
m46_87 -> m46_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_21  [key=2, style=dotted];
m46_88 -> m46_96  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_89 -> m46_90  [key=0, style=solid];
m46_89 -> m46_11  [key=2, style=dotted];
m46_89 -> m46_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_90 -> m46_91  [key=0, style=solid];
m46_90 -> m46_29  [key=2, style=dotted];
m46_90 -> m46_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_91 -> m46_86  [key=0, style=bold, color=blue];
m46_22 -> m46_24  [key=2, style=dotted];
m46_22 -> m46_46  [key=0, style=solid];
m46_7 -> m46_8  [key=0, style=solid, color=red];
m46_8 -> m46_9  [key=0, style=solid, color=red];
m46_8 -> m46_11  [key=2, style=dotted, color=red];
m46_8 -> m46_13  [key=1, style=dashed, color=red, label="lambda expression"];
m46_8 -> m46_8  [key=3, color=red, style=bold, label="Field variable string StateName"];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_12  [key=2, style=dotted];
m46_9 -> m46_15  [key=0, style=solid, color=green];
m46_9 -> m46_11  [key=2, style=dotted, color=green];
m46_10 -> m46_7  [key=0, style=bold, color=blue];
m46_4 -> m46_5  [key=0, style=solid, color=green];
m46_4 -> m46_0  [key=0, style=bold, color=blue];
m46_5 -> m46_6  [key=0, style=solid, color=green];
m46_5 -> m46_7  [key=2, style=dotted, color=green];
m46_5 -> m46_13  [key=1, style=dashed, color=green, label="lambda expression"];
m46_6 -> m46_4  [key=0, style=bold, color=blue];
m46_17 -> m46_18  [key=0, style=solid, color=red];
m46_12 -> m46_13  [key=0, style=solid];
m46_18 -> m46_19  [key=0, style=solid, color=red];
m46_18 -> m46_21  [key=2, style=dotted, color=red];
m46_19 -> m46_7  [key=2, style=dotted];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_19 -> m46_22  [key=2, style=dotted];
m46_20 -> m46_18  [key=0, style=bold, color=blue];
m46_20 -> m46_17  [key=0, style=bold, color=blue];
m46_25 -> m46_26  [key=0, style=solid];
m46_25 -> m46_28  [key=2, style=dotted];
m46_26 -> m46_16  [key=2, style=dotted];
m46_26 -> m46_27  [key=0, style=solid];
m46_26 -> m46_28  [key=1, style=dashed, color=darkseagreen4, label=context];
m46_26 -> m46_29  [key=2, style=dotted];
m46_26 -> m46_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_27 -> m46_28  [key=0, style=solid];
m46_27 -> m46_24  [key=2, style=dotted];
m46_27 -> m46_23  [key=0, style=bold, color=blue];
m46_28 -> m46_29  [key=0, style=solid];
m46_28 -> m46_17  [key=2, style=dotted];
m46_29 -> m46_25  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid, color=green];
m46_1 -> m46_2  [key=0, style=solid, color=green];
m46_1 -> m46_5  [key=2, style=dotted, color=red];
m46_1 -> m46_3  [key=2, style=dotted, color=green];
m46_2 -> m46_3  [key=0, style=solid, color=red];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_6  [key=2, style=dotted];
m46_23 -> m46_24  [key=0, style=solid];
m46_24 -> m46_25  [key=0, style=solid];
m46_24 -> m46_21  [key=2, style=dotted];
m46_24 -> m46_24  [key=3, color=darkorchid, style=bold, label="Property variable bool IgnoreJobLoadException"];
m46_53 -> m46_54  [key=0, style=solid];
m46_54 -> m46_55  [key=0, style=solid];
m46_54 -> m46_42  [key=2, style=dotted];
m46_54 -> m46_11  [key=2, style=dotted];
m46_54 -> m46_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_55 -> m46_56  [key=0, style=solid];
m46_55 -> m46_8  [key=3, color=red, style=bold, label="Property variable string StateName"];
m46_56 -> m46_57  [key=0, style=solid];
m46_56 -> m46_21  [key=2, style=dotted];
m46_56 -> m46_64  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_57 -> m46_58  [key=0, style=solid];
m46_57 -> m46_11  [key=2, style=dotted];
m46_57 -> m46_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_58 -> m46_59  [key=0, style=solid];
m46_58 -> m46_29  [key=2, style=dotted];
m46_58 -> m46_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_59 -> m46_53  [key=0, style=bold, color=blue];
m46_13 -> m46_16  [key=2, style=dotted];
m46_13 -> m46_14  [key=0, style=solid, color=red];
m46_13 -> m46_9  [key=0, style=solid, color=green];
m46_14 -> m46_15  [key=0, style=solid, color=red];
m46_14 -> m46_17  [key=2, style=dotted];
m46_14 -> m46_16  [key=2, style=dotted, color=red];
m46_15 -> m46_12  [key=0, style=bold, color=blue];
m46_15 -> m46_13  [key=0, style=bold, color=blue];
m46_104 -> m46_105  [key=0, style=solid];
m46_30 -> m46_31  [key=0, style=solid, color=green];
m46_30 -> m46_11  [key=2, style=dotted, color=green];
m46_31 -> m46_32  [key=0, style=solid];
m46_31 -> m46_11  [key=2, style=dotted];
m46_31 -> m46_28  [key=2, style=dotted];
m46_31 -> m46_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_31 -> m46_16  [key=0, style=bold, color=blue];
m46_32 -> m46_30  [key=0, style=bold, color=blue];
m46_32 -> m46_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerContextFacts"];
m46_32 -> m46_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerContextFacts"];
m46_32 -> m46_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerContextFacts"];
m46_33 -> m46_34  [key=0, style=solid];
m46_34 -> m46_35  [key=0, style=solid];
m46_35 -> m46_33  [key=0, style=bold, color=blue];
m46_44 -> m46_45  [key=0, style=solid, color=red];
m46_44 -> m46_22  [key=0, style=solid];
m46_48 -> m46_49  [key=0, style=solid];
m46_48 -> m46_28  [key=2, style=dotted];
m46_47 -> m46_48  [key=0, style=solid];
m46_50 -> m46_51  [key=0, style=solid, color=red];
m46_45 -> m46_46  [key=0, style=solid, color=red];
m46_45 -> m46_11  [key=2, style=dotted, color=red];
m46_45 -> m46_28  [key=2, style=dotted, color=red];
m46_46 -> m46_44  [key=0, style=bold, color=blue];
m46_49 -> m46_47  [key=0, style=bold, color=blue];
m46_51 -> m46_52  [key=0, style=solid, color=red];
m46_51 -> m46_11  [key=2, style=dotted, color=red];
m46_51 -> m46_28  [key=2, style=dotted, color=red];
m46_52 -> m46_50  [key=0, style=bold, color=blue];
m46_60 -> m46_61  [key=0, style=solid];
m46_64 -> m46_65  [key=0, style=solid];
m46_64 -> m46_28  [key=2, style=dotted];
m46_63 -> m46_64  [key=0, style=solid];
m46_66 -> m46_67  [key=0, style=solid];
m46_61 -> m46_62  [key=0, style=solid];
m46_61 -> m46_11  [key=2, style=dotted];
m46_61 -> m46_28  [key=2, style=dotted];
m46_62 -> m46_60  [key=0, style=bold, color=blue];
m46_65 -> m46_63  [key=0, style=bold, color=blue];
m46_67 -> m46_68  [key=0, style=solid];
m46_67 -> m46_11  [key=2, style=dotted];
m46_67 -> m46_28  [key=2, style=dotted];
m46_68 -> m46_66  [key=0, style=bold, color=blue];
m46_81 -> m46_82  [key=0, style=solid];
m46_81 -> m46_28  [key=2, style=dotted];
m46_77 -> m46_78  [key=0, style=solid];
m46_80 -> m46_81  [key=0, style=solid];
m46_83 -> m46_84  [key=0, style=solid];
m46_78 -> m46_79  [key=0, style=solid];
m46_78 -> m46_11  [key=2, style=dotted];
m46_78 -> m46_28  [key=2, style=dotted];
m46_79 -> m46_77  [key=0, style=bold, color=blue];
m46_82 -> m46_80  [key=0, style=bold, color=blue];
m46_84 -> m46_85  [key=0, style=solid];
m46_84 -> m46_11  [key=2, style=dotted];
m46_84 -> m46_28  [key=2, style=dotted];
m46_85 -> m46_83  [key=0, style=bold, color=blue];
m46_92 -> m46_93  [key=0, style=solid];
m46_96 -> m46_97  [key=0, style=solid];
m46_96 -> m46_28  [key=2, style=dotted];
m46_95 -> m46_96  [key=0, style=solid];
m46_98 -> m46_99  [key=0, style=solid];
m46_93 -> m46_94  [key=0, style=solid];
m46_93 -> m46_11  [key=2, style=dotted];
m46_93 -> m46_28  [key=2, style=dotted];
m46_94 -> m46_92  [key=0, style=bold, color=blue];
m46_97 -> m46_95  [key=0, style=bold, color=blue];
m46_99 -> m46_100  [key=0, style=solid];
m46_99 -> m46_11  [key=2, style=dotted];
m46_99 -> m46_28  [key=2, style=dotted];
m46_100 -> m46_98  [key=0, style=bold, color=blue];
m46_105 -> m46_106  [key=0, style=solid];
m46_106 -> m46_104  [key=0, style=bold, color=blue];
m46_36 -> m46_37  [key=0, style=solid, color=red];
m46_37 -> m46_38  [key=0, style=solid, color=red];
m46_37 -> m46_42  [key=2, style=dotted, color=red];
m46_37 -> m46_11  [key=2, style=dotted, color=red];
m46_37 -> m46_44  [key=1, style=dashed, color=red, label="lambda expression"];
m46_38 -> m46_39  [key=0, style=solid, color=red];
m46_38 -> m46_21  [key=2, style=dotted, color=red];
m46_38 -> m46_48  [key=1, style=dashed, color=red, label=wrapper];
m46_39 -> m46_40  [key=0, style=solid, color=red];
m46_39 -> m46_11  [key=2, style=dotted];
m46_39 -> m46_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_40 -> m46_41  [key=0, style=solid, color=red];
m46_40 -> m46_43  [key=2, style=dotted, color=red];
m46_40 -> m46_29  [key=2, style=dotted, color=red];
m46_40 -> m46_50  [key=1, style=dashed, color=red, label="lambda expression"];
m46_41 -> m46_36  [key=0, style=bold, color=blue];
m46_69 -> m46_70  [key=0, style=solid];
m46_70 -> m46_71  [key=0, style=solid];
m46_70 -> m46_21  [key=2, style=dotted];
m46_70 -> m46_73  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_70 -> m46_81  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_71 -> m46_72  [key=0, style=solid];
m46_71 -> m46_42  [key=2, style=dotted];
m46_71 -> m46_11  [key=2, style=dotted];
m46_71 -> m46_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_73 -> m46_74  [key=0, style=solid];
m46_73 -> m46_11  [key=2, style=dotted];
m46_73 -> m46_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_72 -> m46_73  [key=0, style=solid];
m46_72 -> m46_76  [key=2, style=dotted];
m46_74 -> m46_75  [key=0, style=solid];
m46_74 -> m46_29  [key=2, style=dotted];
m46_74 -> m46_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m46_75 -> m46_69  [key=0, style=bold, color=blue];
m46_16 -> m46_30  [key=0, style=solid, color=green];
m46_21 -> m46_101  [key=0, style=solid];
m46_101 -> m46_102  [key=0, style=solid];
m46_101 -> m46_103  [key=2, style=dotted];
m46_102 -> m46_21  [key=0, style=bold, color=blue];
m46_107 -> m46_108  [key=0, style=solid];
m46_108 -> m46_109  [key=0, style=solid];
m46_108 -> m46_111  [key=2, style=dotted];
m46_108 -> m46_108  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m46_109 -> m46_110  [key=0, style=solid];
m46_109 -> m46_112  [key=2, style=dotted];
m46_109 -> m46_109  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m46_110 -> m46_107  [key=0, style=bold, color=blue];
m46_113 -> m46_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_18  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_37  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_38  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_40  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_113 -> m46_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts"];
m46_114 -> m46_48  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_115 -> m46_64  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_116 -> m46_81  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m46_117 -> m46_96  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m47_8 -> m47_9  [key=0, style=solid, color=green];
m47_9 -> m47_10  [key=0, style=solid, color=green];
m47_9 -> m47_13  [key=2, style=dotted, color=green];
m47_9 -> m47_11  [key=1, style=dashed, color=green, label=exception];
m47_10 -> m47_11  [key=0, style=solid, color=green];
m47_10 -> m47_7  [key=2, style=dotted, color=green];
m47_11 -> m47_12  [key=0, style=solid, color=green];
m47_11 -> m47_14  [key=2, style=dotted, color=green];
m47_11 -> m47_15  [key=2, style=dotted, color=green];
m47_12 -> m47_8  [key=0, style=bold, color=blue];
m47_16 -> m47_17  [key=0, style=solid];
m47_17 -> m47_7  [key=2, style=dotted];
m47_17 -> m47_13  [key=2, style=dotted];
m47_17 -> m47_18  [key=0, style=solid];
m47_18 -> m47_14  [key=2, style=dotted];
m47_18 -> m47_19  [key=0, style=solid];
m47_18 -> m47_20  [key=2, style=dotted];
m47_19 -> m47_16  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid, color=green];
m47_1 -> m47_2  [key=0, style=solid, color=green];
m47_1 -> m47_3  [key=2, style=dotted, color=green];
m47_1 -> m47_4  [key=1, style=dashed, color=green, label="lambda expression"];
m47_2 -> m47_0  [key=0, style=bold, color=blue];
m47_4 -> m47_5  [key=0, style=solid, color=green];
m47_5 -> m47_6  [key=0, style=solid, color=green];
m47_5 -> m47_7  [key=2, style=dotted, color=green];
m47_6 -> m47_4  [key=0, style=bold, color=blue];
m47_21 -> m47_22  [key=0, style=solid];
m47_22 -> m47_7  [key=2, style=dotted];
m47_22 -> m47_23  [key=0, style=solid];
m47_22 -> m47_26  [key=2, style=dotted];
m47_23 -> m47_24  [key=0, style=solid];
m47_23 -> m47_27  [key=2, style=dotted];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_28  [key=2, style=dotted];
m47_24 -> m47_29  [key=2, style=dotted];
m47_25 -> m47_21  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid, color=green];
m50_0 -> m50_0  [key=3, color=darkorchid, style=bold, label="Field variable int WorkerCount"];
m50_1 -> m50_2  [key=0, style=solid, color=red];
m50_1 -> m50_3  [key=2, style=dotted, color=green];
m50_1 -> m50_4  [key=2, style=dotted, color=green];
m50_1 -> m50_54  [key=2, style=dotted];
m50_2 -> m50_0  [key=0, style=bold, color=blue];
m50_2 -> m50_3  [key=0, style=solid, color=red];
m50_2 -> m50_55  [key=2, style=dotted, color=red];
m50_3 -> m50_4  [key=0, style=solid, color=red];
m50_4 -> m50_5  [key=0, style=solid, color=red];
m50_4 -> m50_56  [key=2, style=dotted, color=red];
m50_4 -> m50_7  [key=1, style=dashed, color=red, label=from];
m50_5 -> m50_6  [key=0, style=solid, color=green];
m50_5 -> m50_56  [key=2, style=dotted, color=red];
m50_5 -> m50_7  [key=1, style=dashed, color=red, label=perPage];
m50_7 -> m50_8  [key=0, style=solid, color=red];
m50_7 -> m50_58  [key=2, style=dotted, color=red];
m50_7 -> m50_59  [key=2, style=dotted, color=red];
m50_7 -> m50_60  [key=2, style=dotted, color=red];
m50_7 -> m50_10  [key=1, style=dashed, color=red, label=pager];
m50_7 -> m50_15  [key=1, style=dashed, color=red, label=pager];
m50_7 -> m50_52  [key=1, style=dashed, color=red, label=pager];
m50_7 -> m50_5  [key=0, style=bold, color=blue];
m50_6 -> m50_7  [key=0, style=solid, color=green];
m50_6 -> m50_57  [key=2, style=dotted, color=red];
m50_6 -> m50_8  [key=1, style=dashed, color=red, label=monitor];
m50_8 -> m50_9  [key=0, style=solid, color=red];
m50_8 -> m50_61  [key=2, style=dotted, color=red];
m50_8 -> m50_17  [key=1, style=dashed, color=red, label=jobs];
m50_10 -> m50_11  [key=0, style=solid, color=red];
m50_10 -> m50_12  [key=0, style=solid, color=red];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_63  [key=2, style=dotted];
m50_15 -> m50_64  [key=2, style=dotted];
m50_15 -> m50_65  [key=2, style=dotted];
m50_52 -> m50_53  [key=0, style=solid];
m50_52 -> m50_69  [key=2, style=dotted];
m50_52 -> m50_64  [key=2, style=dotted];
m50_52 -> m50_65  [key=2, style=dotted];
m50_9 -> m50_10  [key=0, style=solid, color=red];
m50_9 -> m50_54  [key=2, style=dotted, color=red];
m50_17 -> m50_18  [key=0, style=solid];
m50_17 -> m50_51  [key=0, style=solid];
m50_17 -> m50_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_11 -> m50_53  [key=0, style=solid];
m50_11 -> m50_54  [key=2, style=dotted];
m50_12 -> m50_13  [key=0, style=solid];
m50_12 -> m50_54  [key=2, style=dotted];
m50_13 -> m50_14  [key=0, style=solid];
m50_13 -> m50_60  [key=2, style=dotted];
m50_13 -> m50_62  [key=2, style=dotted];
m50_14 -> m50_15  [key=0, style=solid];
m50_14 -> m50_54  [key=2, style=dotted];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_54  [key=2, style=dotted];
m50_18 -> m50_19  [key=0, style=solid];
m50_18 -> m50_54  [key=2, style=dotted];
m50_51 -> m50_52  [key=0, style=solid];
m50_51 -> m50_54  [key=2, style=dotted];
m50_19 -> m50_20  [key=0, style=solid];
m50_19 -> m50_62  [key=2, style=dotted];
m50_19 -> m50_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_19 -> m50_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_20 -> m50_21  [key=0, style=solid];
m50_20 -> m50_54  [key=2, style=dotted];
m50_21 -> m50_22  [key=0, style=solid];
m50_21 -> m50_62  [key=2, style=dotted];
m50_21 -> m50_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_21 -> m50_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_22 -> m50_23  [key=0, style=solid];
m50_22 -> m50_54  [key=2, style=dotted];
m50_23 -> m50_24  [key=0, style=solid];
m50_23 -> m50_27  [key=0, style=solid];
m50_23 -> m50_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_23 -> m50_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_23 -> m50_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_24 -> m50_25  [key=0, style=solid];
m50_24 -> m50_54  [key=2, style=dotted];
m50_27 -> m50_28  [key=0, style=solid];
m50_27 -> m50_54  [key=2, style=dotted];
m50_25 -> m50_26  [key=0, style=solid];
m50_25 -> m50_62  [key=2, style=dotted];
m50_25 -> m50_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_25 -> m50_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_28 -> m50_29  [key=0, style=solid];
m50_28 -> m50_60  [key=2, style=dotted];
m50_28 -> m50_62  [key=2, style=dotted];
m50_28 -> m50_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_28 -> m50_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_26 -> m50_27  [key=0, style=solid];
m50_26 -> m50_54  [key=2, style=dotted];
m50_29 -> m50_30  [key=0, style=solid];
m50_29 -> m50_54  [key=2, style=dotted];
m50_30 -> m50_31  [key=0, style=solid];
m50_30 -> m50_66  [key=2, style=dotted];
m50_30 -> m50_65  [key=2, style=dotted];
m50_30 -> m50_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_30 -> m50_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_31 -> m50_32  [key=0, style=solid];
m50_31 -> m50_54  [key=2, style=dotted];
m50_32 -> m50_33  [key=0, style=solid];
m50_32 -> m50_34  [key=0, style=solid];
m50_32 -> m50_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_32 -> m50_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_33 -> m50_34  [key=0, style=solid];
m50_33 -> m50_54  [key=2, style=dotted];
m50_34 -> m50_35  [key=0, style=solid];
m50_34 -> m50_54  [key=2, style=dotted];
m50_35 -> m50_36  [key=0, style=solid];
m50_35 -> m50_37  [key=0, style=solid];
m50_35 -> m50_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_35 -> m50_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_36 -> m50_50  [key=0, style=solid];
m50_36 -> m50_54  [key=2, style=dotted];
m50_37 -> m50_38  [key=0, style=solid];
m50_37 -> m50_54  [key=2, style=dotted];
m50_38 -> m50_39  [key=0, style=solid];
m50_38 -> m50_60  [key=2, style=dotted];
m50_38 -> m50_62  [key=2, style=dotted];
m50_38 -> m50_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_38 -> m50_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_39 -> m50_40  [key=0, style=solid];
m50_39 -> m50_54  [key=2, style=dotted];
m50_40 -> m50_41  [key=0, style=solid];
m50_40 -> m50_67  [key=2, style=dotted];
m50_40 -> m50_65  [key=2, style=dotted];
m50_40 -> m50_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_40 -> m50_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_41 -> m50_42  [key=0, style=solid];
m50_41 -> m50_54  [key=2, style=dotted];
m50_43 -> m50_44  [key=0, style=solid];
m50_43 -> m50_49  [key=0, style=solid];
m50_43 -> m50_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_43 -> m50_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_42 -> m50_43  [key=0, style=solid];
m50_42 -> m50_54  [key=2, style=dotted];
m50_44 -> m50_45  [key=0, style=solid];
m50_44 -> m50_54  [key=2, style=dotted];
m50_49 -> m50_50  [key=0, style=solid];
m50_49 -> m50_54  [key=2, style=dotted];
m50_45 -> m50_46  [key=0, style=solid];
m50_45 -> m50_68  [key=2, style=dotted];
m50_45 -> m50_62  [key=2, style=dotted];
m50_45 -> m50_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_45 -> m50_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_46 -> m50_47  [key=0, style=solid];
m50_46 -> m50_54  [key=2, style=dotted];
m50_47 -> m50_48  [key=0, style=solid];
m50_47 -> m50_62  [key=2, style=dotted];
m50_47 -> m50_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m50_48 -> m50_49  [key=0, style=solid];
m50_48 -> m50_54  [key=2, style=dotted];
m50_50 -> m50_17  [key=0, style=solid];
m50_50 -> m50_54  [key=2, style=dotted];
m50_53 -> m50_0  [key=0, style=bold, color=blue];
m50_70 -> m50_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_2  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_4  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_5  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_7  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_9  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m50_70 -> m50_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m51_375 -> m51_376  [key=0, style=solid];
m51_376 -> m51_12  [key=2, style=dotted];
m51_376 -> m51_377  [key=0, style=solid];
m51_376 -> m51_378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_377 -> m51_375  [key=0, style=bold, color=blue];
m51_432 -> m51_433  [key=0, style=solid];
m51_433 -> m51_12  [key=2, style=dotted];
m51_433 -> m51_434  [key=0, style=solid];
m51_433 -> m51_435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_434 -> m51_432  [key=0, style=bold, color=blue];
m51_299 -> m51_300  [key=0, style=solid];
m51_300 -> m51_12  [key=2, style=dotted];
m51_300 -> m51_301  [key=0, style=solid];
m51_300 -> m51_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_301 -> m51_299  [key=0, style=bold, color=blue];
m51_235 -> m51_236  [key=0, style=solid];
m51_236 -> m51_12  [key=2, style=dotted];
m51_236 -> m51_237  [key=0, style=solid];
m51_236 -> m51_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_237 -> m51_235  [key=0, style=bold, color=blue];
m51_131 -> m51_132  [key=0, style=solid];
m51_132 -> m51_12  [key=2, style=dotted];
m51_132 -> m51_133  [key=0, style=solid];
m51_132 -> m51_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_133 -> m51_131  [key=0, style=bold, color=blue];
m51_444 -> m51_445  [key=0, style=solid];
m51_445 -> m51_12  [key=2, style=dotted];
m51_445 -> m51_446  [key=0, style=solid];
m51_445 -> m51_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_446 -> m51_444  [key=0, style=bold, color=blue];
m51_145 -> m51_146  [key=0, style=solid];
m51_146 -> m51_22  [key=2, style=dotted];
m51_146 -> m51_23  [key=2, style=dotted];
m51_146 -> m51_147  [key=0, style=solid];
m51_147 -> m51_145  [key=0, style=bold, color=blue];
m51_399 -> m51_400  [key=0, style=solid];
m51_400 -> m51_12  [key=2, style=dotted];
m51_400 -> m51_401  [key=0, style=solid];
m51_400 -> m51_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_401 -> m51_399  [key=0, style=bold, color=blue];
m51_148 -> m51_149  [key=0, style=solid];
m51_149 -> m51_12  [key=2, style=dotted];
m51_149 -> m51_150  [key=0, style=solid];
m51_149 -> m51_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_150 -> m51_148  [key=0, style=bold, color=blue];
m51_97 -> m51_98  [key=0, style=solid];
m51_99 -> m51_100  [key=0, style=solid, color=green];
m51_99 -> m51_12  [key=2, style=dotted, color=green];
m51_99 -> m51_101  [key=1, style=dashed, color=green, label="lambda expression"];
m51_98 -> m51_99  [key=0, style=solid, color=green];
m51_98 -> m51_102  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_98 -> m51_9  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m51_100 -> m51_97  [key=0, style=bold, color=blue];
m51_206 -> m51_207  [key=0, style=solid];
m51_207 -> m51_12  [key=2, style=dotted];
m51_207 -> m51_208  [key=0, style=solid];
m51_207 -> m51_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_208 -> m51_206  [key=0, style=bold, color=blue];
m51_387 -> m51_388  [key=0, style=solid];
m51_388 -> m51_12  [key=2, style=dotted];
m51_388 -> m51_389  [key=0, style=solid];
m51_388 -> m51_390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_389 -> m51_387  [key=0, style=bold, color=blue];
m51_223 -> m51_224  [key=0, style=solid];
m51_224 -> m51_12  [key=2, style=dotted];
m51_224 -> m51_225  [key=0, style=solid];
m51_224 -> m51_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_225 -> m51_223  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_1 -> m51_3  [key=2, style=dotted];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_2 -> m51_0  [key=0, style=bold, color=blue];
m51_162 -> m51_163  [key=0, style=solid];
m51_163 -> m51_12  [key=2, style=dotted];
m51_163 -> m51_164  [key=0, style=solid];
m51_163 -> m51_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_164 -> m51_162  [key=0, style=bold, color=blue];
m51_25 -> m51_474  [key=0, style=solid];
m51_25 -> m51_475  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>"];
m51_474 -> m51_475  [key=0, style=solid];
m51_474 -> m51_7  [key=2, style=dotted];
m51_474 -> m51_476  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m51_475 -> m51_476  [key=0, style=solid];
m51_475 -> m51_473  [key=2, style=dotted];
m51_476 -> m51_477  [key=0, style=solid];
m51_476 -> m51_478  [key=2, style=dotted];
m51_477 -> m51_25  [key=0, style=bold, color=blue];
m51_324 -> m51_325  [key=0, style=solid];
m51_325 -> m51_12  [key=2, style=dotted];
m51_325 -> m51_326  [key=0, style=solid];
m51_325 -> m51_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_326 -> m51_324  [key=0, style=bold, color=blue];
m51_180 -> m51_181  [key=0, style=solid];
m51_181 -> m51_12  [key=2, style=dotted];
m51_181 -> m51_182  [key=0, style=solid];
m51_181 -> m51_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_182 -> m51_180  [key=0, style=bold, color=blue];
m51_361 -> m51_362  [key=0, style=solid];
m51_362 -> m51_12  [key=2, style=dotted];
m51_362 -> m51_363  [key=0, style=solid];
m51_362 -> m51_364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_363 -> m51_361  [key=0, style=bold, color=blue];
m51_35 -> m51_36  [key=0, style=solid];
m51_37 -> m51_12  [key=2, style=dotted];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_36  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m51_36 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_36 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_38 -> m51_35  [key=0, style=bold, color=blue];
m51_273 -> m51_274  [key=0, style=solid];
m51_274 -> m51_12  [key=2, style=dotted];
m51_274 -> m51_275  [key=0, style=solid];
m51_274 -> m51_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_275 -> m51_273  [key=0, style=bold, color=blue];
m51_4 -> m51_5  [key=0, style=solid];
m51_57 -> m51_58  [key=0, style=solid];
m51_57 -> m51_59  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_57 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_57 -> m51_65  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_57 -> m51_68  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_57 -> m51_71  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_60 -> m51_61  [key=0, style=solid, color=green];
m51_60 -> m51_78  [key=2, style=dotted, color=green];
m51_60 -> m51_62  [key=1, style=dashed, color=green, label=state];
m51_60 -> m51_63  [key=1, style=dashed, color=green, label=state];
m51_60 -> m51_64  [key=1, style=dashed, color=green, label=state];
m51_60 -> m51_94  [key=1, style=dashed, color=green, label=state];
m51_59 -> m51_60  [key=0, style=solid, color=green];
m51_59 -> m51_22  [key=2, style=dotted];
m51_59 -> m51_23  [key=2, style=dotted];
m51_59 -> m51_24  [key=2, style=dotted];
m51_59 -> m51_68  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m51_61 -> m51_62  [key=0, style=solid, color=green];
m51_61 -> m51_79  [key=2, style=dotted];
m51_61 -> m51_80  [key=2, style=dotted];
m51_61 -> m51_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_62 -> m51_63  [key=0, style=solid, color=green];
m51_62 -> m51_79  [key=2, style=dotted, color=green];
m51_62 -> m51_80  [key=2, style=dotted, color=green];
m51_62 -> m51_86  [key=1, style=dashed, color=green, label="lambda expression"];
m51_63 -> m51_64  [key=0, style=solid];
m51_63 -> m51_79  [key=2, style=dotted];
m51_63 -> m51_81  [key=2, style=dotted];
m51_63 -> m51_80  [key=2, style=dotted];
m51_63 -> m51_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_64 -> m51_65  [key=0, style=solid];
m51_64 -> m51_25  [key=2, style=dotted];
m51_64 -> m51_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_94 -> m51_95  [key=0, style=solid];
m51_94 -> m51_96  [key=2, style=dotted];
m51_86 -> m51_87  [key=0, style=solid, color=green];
m51_87 -> m51_88  [key=0, style=solid, color=green];
m51_88 -> m51_86  [key=0, style=bold, color=blue];
m51_101 -> m51_102  [key=0, style=solid];
m51_101 -> m51_107  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_101 -> m51_108  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_101 -> m51_111  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_103 -> m51_104  [key=0, style=solid, color=green];
m51_103 -> m51_78  [key=2, style=dotted, color=green];
m51_103 -> m51_105  [key=1, style=dashed, color=green, label=state];
m51_103 -> m51_106  [key=1, style=dashed, color=green, label=state];
m51_103 -> m51_107  [key=1, style=dashed, color=green, label=state];
m51_103 -> m51_128  [key=1, style=dashed, color=green, label=state];
m51_102 -> m51_103  [key=0, style=solid, color=green];
m51_102 -> m51_22  [key=2, style=dotted];
m51_102 -> m51_23  [key=2, style=dotted];
m51_102 -> m51_24  [key=2, style=dotted];
m51_102 -> m51_107  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_102 -> m51_128  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_102 -> m51_108  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_102 -> m51_112  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_104 -> m51_105  [key=0, style=solid, color=green];
m51_104 -> m51_79  [key=2, style=dotted];
m51_104 -> m51_80  [key=2, style=dotted];
m51_104 -> m51_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_105 -> m51_106  [key=0, style=solid, color=green];
m51_105 -> m51_79  [key=2, style=dotted, color=green];
m51_105 -> m51_80  [key=2, style=dotted, color=green];
m51_105 -> m51_121  [key=1, style=dashed, color=green, label="lambda expression"];
m51_106 -> m51_79  [key=2, style=dotted];
m51_106 -> m51_80  [key=2, style=dotted];
m51_106 -> m51_107  [key=0, style=solid];
m51_106 -> m51_81  [key=2, style=dotted];
m51_106 -> m51_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_107 -> m51_108  [key=0, style=solid];
m51_107 -> m51_25  [key=2, style=dotted];
m51_107 -> m51_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_128 -> m51_129  [key=0, style=solid];
m51_128 -> m51_130  [key=2, style=dotted];
m51_121 -> m51_122  [key=0, style=solid, color=green];
m51_122 -> m51_123  [key=0, style=solid, color=green];
m51_123 -> m51_121  [key=0, style=bold, color=blue];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_25  [key=2, style=dotted];
m51_16 -> m51_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_26  [key=2, style=dotted];
m51_19 -> m51_20  [key=0, style=solid];
m51_19 -> m51_26  [key=2, style=dotted];
m51_42 -> m51_43  [key=0, style=solid];
m51_42 -> m51_25  [key=2, style=dotted];
m51_42 -> m51_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_43 -> m51_44  [key=0, style=solid];
m51_43 -> m51_26  [key=2, style=dotted];
m51_45 -> m51_46  [key=0, style=solid];
m51_45 -> m51_26  [key=2, style=dotted];
m51_65 -> m51_66  [key=0, style=solid];
m51_65 -> m51_26  [key=2, style=dotted];
m51_65 -> m51_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m51_68 -> m51_69  [key=0, style=solid];
m51_68 -> m51_26  [key=2, style=dotted];
m51_68 -> m51_70  [key=1, style=dashed, color=darkseagreen4, label=anotherJob];
m51_108 -> m51_109  [key=0, style=solid];
m51_108 -> m51_26  [key=2, style=dotted];
m51_108 -> m51_110  [key=1, style=dashed, color=darkseagreen4, label=job];
m51_135 -> m51_136  [key=0, style=solid];
m51_135 -> m51_25  [key=2, style=dotted];
m51_135 -> m51_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_152 -> m51_153  [key=0, style=solid];
m51_152 -> m51_25  [key=2, style=dotted];
m51_152 -> m51_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_166 -> m51_167  [key=0, style=solid];
m51_166 -> m51_25  [key=2, style=dotted];
m51_166 -> m51_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_184 -> m51_185  [key=0, style=solid];
m51_184 -> m51_25  [key=2, style=dotted];
m51_184 -> m51_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_196 -> m51_197  [key=0, style=solid];
m51_196 -> m51_25  [key=2, style=dotted];
m51_196 -> m51_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_210 -> m51_211  [key=0, style=solid];
m51_210 -> m51_25  [key=2, style=dotted];
m51_210 -> m51_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_227 -> m51_228  [key=0, style=solid];
m51_227 -> m51_25  [key=2, style=dotted];
m51_227 -> m51_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_239 -> m51_240  [key=0, style=solid];
m51_239 -> m51_25  [key=2, style=dotted];
m51_239 -> m51_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_253 -> m51_254  [key=0, style=solid];
m51_253 -> m51_25  [key=2, style=dotted];
m51_253 -> m51_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_265 -> m51_266  [key=0, style=solid];
m51_265 -> m51_25  [key=2, style=dotted];
m51_265 -> m51_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_277 -> m51_278  [key=0, style=solid];
m51_277 -> m51_25  [key=2, style=dotted];
m51_277 -> m51_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_291 -> m51_292  [key=0, style=solid];
m51_291 -> m51_25  [key=2, style=dotted];
m51_291 -> m51_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_303 -> m51_304  [key=0, style=solid];
m51_303 -> m51_25  [key=2, style=dotted];
m51_303 -> m51_307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_316 -> m51_317  [key=0, style=solid];
m51_316 -> m51_25  [key=2, style=dotted];
m51_316 -> m51_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_328 -> m51_329  [key=0, style=solid];
m51_328 -> m51_25  [key=2, style=dotted];
m51_328 -> m51_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_340 -> m51_341  [key=0, style=solid];
m51_340 -> m51_25  [key=2, style=dotted];
m51_340 -> m51_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_353 -> m51_354  [key=0, style=solid];
m51_353 -> m51_25  [key=2, style=dotted];
m51_353 -> m51_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_365 -> m51_366  [key=0, style=solid];
m51_365 -> m51_25  [key=2, style=dotted];
m51_365 -> m51_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_379 -> m51_380  [key=0, style=solid];
m51_379 -> m51_25  [key=2, style=dotted];
m51_379 -> m51_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_391 -> m51_392  [key=0, style=solid];
m51_391 -> m51_25  [key=2, style=dotted];
m51_391 -> m51_395  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_403 -> m51_404  [key=0, style=solid];
m51_403 -> m51_25  [key=2, style=dotted];
m51_403 -> m51_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_422 -> m51_423  [key=0, style=solid];
m51_422 -> m51_25  [key=2, style=dotted];
m51_422 -> m51_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_436 -> m51_437  [key=0, style=solid];
m51_436 -> m51_25  [key=2, style=dotted];
m51_436 -> m51_440  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_448 -> m51_449  [key=0, style=solid];
m51_448 -> m51_25  [key=2, style=dotted];
m51_448 -> m51_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_460 -> m51_461  [key=0, style=solid];
m51_460 -> m51_25  [key=2, style=dotted];
m51_460 -> m51_464  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_58 -> m51_59  [key=0, style=solid];
m51_58 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_58 -> m51_94  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_58 -> m51_65  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_58 -> m51_22  [key=2, style=dotted];
m51_58 -> m51_23  [key=2, style=dotted];
m51_58 -> m51_24  [key=2, style=dotted];
m51_58 -> m51_72  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_77 -> m51_57  [key=0, style=bold, color=blue];
m51_71 -> m51_72  [key=0, style=solid];
m51_71 -> m51_22  [key=2, style=dotted];
m51_71 -> m51_23  [key=2, style=dotted];
m51_71 -> m51_73  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_71 -> m51_74  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_71 -> m51_75  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_71 -> m51_76  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_83 -> m51_84  [key=0, style=solid];
m51_89 -> m51_90  [key=0, style=solid];
m51_93 -> m51_94  [key=0, style=solid];
m51_95 -> m51_93  [key=0, style=bold, color=blue];
m51_117 -> m51_101  [key=0, style=bold, color=blue];
m51_111 -> m51_22  [key=2, style=dotted];
m51_111 -> m51_23  [key=2, style=dotted];
m51_111 -> m51_112  [key=0, style=solid];
m51_111 -> m51_113  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_111 -> m51_114  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_111 -> m51_115  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_111 -> m51_116  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m51_112 -> m51_24  [key=2, style=dotted];
m51_112 -> m51_113  [key=0, style=solid];
m51_112 -> m51_82  [key=2, style=dotted];
m51_118 -> m51_119  [key=0, style=solid];
m51_124 -> m51_125  [key=0, style=solid];
m51_127 -> m51_128  [key=0, style=solid];
m51_129 -> m51_127  [key=0, style=bold, color=blue];
m51_13 -> m51_16  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_13 -> m51_17  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_13 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_13 -> m51_14  [key=0, style=solid];
m51_13 -> m51_15  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_14 -> m51_16  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_14 -> m51_17  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_14 -> m51_22  [key=2, style=dotted];
m51_14 -> m51_23  [key=2, style=dotted];
m51_14 -> m51_24  [key=2, style=dotted];
m51_14 -> m51_15  [key=0, style=solid];
m51_14 -> m51_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m51_15 -> m51_22  [key=2, style=dotted];
m51_15 -> m51_23  [key=2, style=dotted];
m51_15 -> m51_24  [key=2, style=dotted];
m51_30 -> m51_31  [key=0, style=solid];
m51_18 -> m51_19  [key=0, style=solid];
m51_18 -> m51_27  [key=2, style=dotted];
m51_18 -> m51_28  [key=2, style=dotted];
m51_20 -> m51_21  [key=0, style=solid];
m51_20 -> m51_29  [key=2, style=dotted];
m51_39 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_39 -> m51_43  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_39 -> m51_45  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_39 -> m51_40  [key=0, style=solid];
m51_39 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_40 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_40 -> m51_43  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_40 -> m51_22  [key=2, style=dotted];
m51_40 -> m51_23  [key=2, style=dotted];
m51_40 -> m51_24  [key=2, style=dotted];
m51_40 -> m51_41  [key=0, style=solid];
m51_40 -> m51_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_41 -> m51_42  [key=0, style=solid];
m51_41 -> m51_45  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m51_41 -> m51_22  [key=2, style=dotted];
m51_41 -> m51_23  [key=2, style=dotted];
m51_41 -> m51_24  [key=2, style=dotted];
m51_49 -> m51_50  [key=0, style=solid];
m51_44 -> m51_45  [key=0, style=solid];
m51_44 -> m51_29  [key=2, style=dotted];
m51_46 -> m51_47  [key=0, style=solid];
m51_46 -> m51_48  [key=2, style=dotted];
m51_66 -> m51_67  [key=0, style=solid];
m51_66 -> m51_82  [key=2, style=dotted];
m51_67 -> m51_68  [key=0, style=solid];
m51_67 -> m51_48  [key=2, style=dotted];
m51_69 -> m51_70  [key=0, style=solid];
m51_69 -> m51_29  [key=2, style=dotted];
m51_70 -> m51_71  [key=0, style=solid];
m51_70 -> m51_29  [key=2, style=dotted];
m51_109 -> m51_110  [key=0, style=solid];
m51_109 -> m51_29  [key=2, style=dotted];
m51_110 -> m51_111  [key=0, style=solid];
m51_110 -> m51_29  [key=2, style=dotted];
m51_134 -> m51_135  [key=0, style=solid];
m51_134 -> m51_136  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_136 -> m51_22  [key=2, style=dotted];
m51_136 -> m51_23  [key=2, style=dotted];
m51_136 -> m51_137  [key=0, style=solid];
m51_136 -> m51_138  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_136 -> m51_139  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_141 -> m51_142  [key=0, style=solid];
m51_151 -> m51_152  [key=0, style=solid];
m51_151 -> m51_153  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_153 -> m51_22  [key=2, style=dotted];
m51_153 -> m51_23  [key=2, style=dotted];
m51_153 -> m51_154  [key=0, style=solid];
m51_153 -> m51_155  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_153 -> m51_156  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_158 -> m51_159  [key=0, style=solid];
m51_165 -> m51_166  [key=0, style=solid];
m51_165 -> m51_167  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_167 -> m51_22  [key=2, style=dotted];
m51_167 -> m51_23  [key=2, style=dotted];
m51_167 -> m51_168  [key=0, style=solid];
m51_167 -> m51_169  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_167 -> m51_170  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_167 -> m51_171  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_176 -> m51_177  [key=0, style=solid];
m51_183 -> m51_184  [key=0, style=solid];
m51_183 -> m51_185  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_185 -> m51_23  [key=2, style=dotted];
m51_185 -> m51_186  [key=0, style=solid];
m51_185 -> m51_3  [key=2, style=dotted];
m51_188 -> m51_189  [key=0, style=solid];
m51_188 -> m51_190  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_195 -> m51_196  [key=0, style=solid];
m51_195 -> m51_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_197 -> m51_22  [key=2, style=dotted];
m51_197 -> m51_23  [key=2, style=dotted];
m51_197 -> m51_198  [key=0, style=solid];
m51_197 -> m51_199  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_197 -> m51_200  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_202 -> m51_203  [key=0, style=solid];
m51_209 -> m51_210  [key=0, style=solid];
m51_209 -> m51_211  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_211 -> m51_22  [key=2, style=dotted];
m51_211 -> m51_23  [key=2, style=dotted];
m51_211 -> m51_212  [key=0, style=solid];
m51_211 -> m51_213  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_211 -> m51_214  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_211 -> m51_215  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_219 -> m51_220  [key=0, style=solid];
m51_226 -> m51_227  [key=0, style=solid];
m51_226 -> m51_228  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_228 -> m51_23  [key=2, style=dotted];
m51_228 -> m51_229  [key=0, style=solid];
m51_228 -> m51_3  [key=2, style=dotted];
m51_231 -> m51_232  [key=0, style=solid];
m51_231 -> m51_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_238 -> m51_239  [key=0, style=solid];
m51_238 -> m51_240  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_240 -> m51_22  [key=2, style=dotted];
m51_240 -> m51_23  [key=2, style=dotted];
m51_240 -> m51_241  [key=0, style=solid];
m51_240 -> m51_242  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_240 -> m51_243  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_245 -> m51_246  [key=0, style=solid];
m51_252 -> m51_253  [key=0, style=solid];
m51_252 -> m51_254  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_254 -> m51_23  [key=2, style=dotted];
m51_254 -> m51_255  [key=0, style=solid];
m51_254 -> m51_3  [key=2, style=dotted];
m51_257 -> m51_258  [key=0, style=solid];
m51_257 -> m51_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_264 -> m51_265  [key=0, style=solid];
m51_264 -> m51_266  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_266 -> m51_23  [key=2, style=dotted];
m51_266 -> m51_267  [key=0, style=solid];
m51_266 -> m51_3  [key=2, style=dotted];
m51_269 -> m51_270  [key=0, style=solid];
m51_269 -> m51_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_276 -> m51_277  [key=0, style=solid];
m51_276 -> m51_278  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_278 -> m51_22  [key=2, style=dotted];
m51_278 -> m51_23  [key=2, style=dotted];
m51_278 -> m51_279  [key=0, style=solid];
m51_278 -> m51_280  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_278 -> m51_281  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_283 -> m51_284  [key=0, style=solid];
m51_290 -> m51_291  [key=0, style=solid];
m51_290 -> m51_292  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_292 -> m51_22  [key=2, style=dotted];
m51_292 -> m51_23  [key=2, style=dotted];
m51_292 -> m51_293  [key=0, style=solid];
m51_295 -> m51_296  [key=0, style=solid];
m51_295 -> m51_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_302 -> m51_303  [key=0, style=solid];
m51_302 -> m51_304  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_304 -> m51_23  [key=2, style=dotted];
m51_304 -> m51_305  [key=0, style=solid];
m51_304 -> m51_3  [key=2, style=dotted];
m51_307 -> m51_308  [key=0, style=solid];
m51_307 -> m51_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_315 -> m51_316  [key=0, style=solid];
m51_315 -> m51_317  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_317 -> m51_23  [key=2, style=dotted];
m51_317 -> m51_318  [key=0, style=solid];
m51_317 -> m51_3  [key=2, style=dotted];
m51_320 -> m51_321  [key=0, style=solid];
m51_320 -> m51_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_327 -> m51_328  [key=0, style=solid];
m51_327 -> m51_329  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_329 -> m51_23  [key=2, style=dotted];
m51_329 -> m51_330  [key=0, style=solid];
m51_329 -> m51_3  [key=2, style=dotted];
m51_332 -> m51_333  [key=0, style=solid];
m51_332 -> m51_334  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_339 -> m51_340  [key=0, style=solid];
m51_339 -> m51_341  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_341 -> m51_22  [key=2, style=dotted];
m51_341 -> m51_23  [key=2, style=dotted];
m51_341 -> m51_342  [key=0, style=solid];
m51_341 -> m51_343  [key=1, style=dashed, color=darkseagreen4, label=record];
m51_345 -> m51_346  [key=0, style=solid];
m51_352 -> m51_353  [key=0, style=solid];
m51_352 -> m51_354  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_354 -> m51_23  [key=2, style=dotted];
m51_354 -> m51_355  [key=0, style=solid];
m51_354 -> m51_3  [key=2, style=dotted];
m51_357 -> m51_358  [key=0, style=solid];
m51_357 -> m51_359  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_364 -> m51_365  [key=0, style=solid];
m51_364 -> m51_366  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_366 -> m51_23  [key=2, style=dotted];
m51_366 -> m51_367  [key=0, style=solid];
m51_366 -> m51_3  [key=2, style=dotted];
m51_369 -> m51_370  [key=0, style=solid];
m51_369 -> m51_371  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_369 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_378 -> m51_379  [key=0, style=solid];
m51_378 -> m51_380  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_380 -> m51_23  [key=2, style=dotted];
m51_380 -> m51_381  [key=0, style=solid];
m51_380 -> m51_3  [key=2, style=dotted];
m51_383 -> m51_384  [key=0, style=solid];
m51_383 -> m51_385  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_390 -> m51_391  [key=0, style=solid];
m51_390 -> m51_392  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_392 -> m51_23  [key=2, style=dotted];
m51_392 -> m51_393  [key=0, style=solid];
m51_392 -> m51_3  [key=2, style=dotted];
m51_395 -> m51_396  [key=0, style=solid];
m51_395 -> m51_397  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_402 -> m51_403  [key=0, style=solid];
m51_402 -> m51_404  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_404 -> m51_22  [key=2, style=dotted];
m51_404 -> m51_405  [key=0, style=solid];
m51_404 -> m51_409  [key=2, style=dotted];
m51_404 -> m51_406  [key=1, style=dashed, color=darkseagreen4, label=records];
m51_404 -> m51_407  [key=1, style=dashed, color=darkseagreen4, label=records];
m51_410 -> m51_411  [key=0, style=solid];
m51_410 -> m51_412  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_410 -> m51_413  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_410 -> m51_414  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_410 -> m51_415  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_421 -> m51_422  [key=0, style=solid];
m51_421 -> m51_423  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_423 -> m51_23  [key=2, style=dotted];
m51_423 -> m51_424  [key=0, style=solid];
m51_423 -> m51_3  [key=2, style=dotted];
m51_426 -> m51_427  [key=0, style=solid];
m51_426 -> m51_428  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_426 -> m51_429  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_426 -> m51_430  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_435 -> m51_436  [key=0, style=solid];
m51_435 -> m51_437  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_437 -> m51_23  [key=2, style=dotted];
m51_437 -> m51_438  [key=0, style=solid];
m51_437 -> m51_3  [key=2, style=dotted];
m51_440 -> m51_441  [key=0, style=solid];
m51_440 -> m51_442  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_447 -> m51_448  [key=0, style=solid];
m51_447 -> m51_449  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_449 -> m51_23  [key=2, style=dotted];
m51_449 -> m51_450  [key=0, style=solid];
m51_449 -> m51_3  [key=2, style=dotted];
m51_452 -> m51_453  [key=0, style=solid];
m51_452 -> m51_454  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_459 -> m51_460  [key=0, style=solid];
m51_459 -> m51_461  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m51_461 -> m51_23  [key=2, style=dotted];
m51_461 -> m51_462  [key=0, style=solid];
m51_461 -> m51_3  [key=2, style=dotted];
m51_464 -> m51_465  [key=0, style=solid];
m51_464 -> m51_466  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m51_72 -> m51_24  [key=2, style=dotted];
m51_72 -> m51_73  [key=0, style=solid];
m51_72 -> m51_82  [key=2, style=dotted];
m51_76 -> m51_77  [key=0, style=solid];
m51_76 -> m51_82  [key=2, style=dotted];
m51_73 -> m51_74  [key=0, style=solid];
m51_73 -> m51_82  [key=2, style=dotted];
m51_74 -> m51_75  [key=0, style=solid];
m51_74 -> m51_82  [key=2, style=dotted];
m51_75 -> m51_76  [key=0, style=solid];
m51_75 -> m51_48  [key=2, style=dotted];
m51_137 -> m51_24  [key=2, style=dotted];
m51_137 -> m51_138  [key=0, style=solid];
m51_137 -> m51_82  [key=2, style=dotted];
m51_85 -> m51_83  [key=0, style=bold, color=blue];
m51_84 -> m51_85  [key=0, style=solid];
m51_91 -> m51_89  [key=0, style=bold, color=blue];
m51_90 -> m51_91  [key=0, style=solid];
m51_90 -> m51_92  [key=2, style=dotted];
m51_116 -> m51_117  [key=0, style=solid];
m51_116 -> m51_82  [key=2, style=dotted];
m51_113 -> m51_114  [key=0, style=solid];
m51_113 -> m51_82  [key=2, style=dotted];
m51_114 -> m51_115  [key=0, style=solid];
m51_114 -> m51_82  [key=2, style=dotted];
m51_115 -> m51_116  [key=0, style=solid];
m51_115 -> m51_48  [key=2, style=dotted];
m51_120 -> m51_118  [key=0, style=bold, color=blue];
m51_119 -> m51_120  [key=0, style=solid];
m51_126 -> m51_124  [key=0, style=bold, color=blue];
m51_125 -> m51_126  [key=0, style=solid];
m51_125 -> m51_92  [key=2, style=dotted];
m51_21 -> m51_13  [key=0, style=bold, color=blue];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> n11  [key=2, style=dotted];
m51_31 -> m51_34  [key=2, style=dotted];
m51_32 -> m51_30  [key=0, style=bold, color=blue];
m51_47 -> m51_39  [key=0, style=bold, color=blue];
m51_50 -> m51_51  [key=0, style=solid];
m51_50 -> m51_52  [key=2, style=dotted];
m51_51 -> m51_49  [key=0, style=bold, color=blue];
m51_140 -> m51_134  [key=0, style=bold, color=blue];
m51_138 -> m51_82  [key=2, style=dotted];
m51_138 -> m51_139  [key=0, style=solid];
m51_139 -> m51_29  [key=2, style=dotted];
m51_139 -> m51_140  [key=0, style=solid];
m51_143 -> m51_141  [key=0, style=bold, color=blue];
m51_142 -> m51_143  [key=0, style=solid];
m51_142 -> m51_144  [key=2, style=dotted];
m51_157 -> m51_151  [key=0, style=bold, color=blue];
m51_154 -> m51_82  [key=2, style=dotted];
m51_154 -> m51_155  [key=0, style=solid];
m51_155 -> m51_82  [key=2, style=dotted];
m51_155 -> m51_156  [key=0, style=solid];
m51_156 -> m51_82  [key=2, style=dotted];
m51_156 -> m51_157  [key=0, style=solid];
m51_160 -> m51_158  [key=0, style=bold, color=blue];
m51_159 -> m51_160  [key=0, style=solid];
m51_159 -> m51_161  [key=2, style=dotted];
m51_174 -> m51_165  [key=0, style=bold, color=blue];
m51_168 -> m51_82  [key=2, style=dotted];
m51_168 -> m51_169  [key=0, style=solid];
m51_169 -> m51_82  [key=2, style=dotted];
m51_169 -> m51_170  [key=0, style=solid];
m51_170 -> m51_48  [key=2, style=dotted];
m51_170 -> m51_171  [key=0, style=solid];
m51_171 -> m51_172  [key=0, style=solid];
m51_171 -> m51_173  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m51_178 -> m51_176  [key=0, style=bold, color=blue];
m51_177 -> m51_178  [key=0, style=solid];
m51_177 -> n11  [key=2, style=dotted];
m51_177 -> m51_179  [key=2, style=dotted];
m51_187 -> m51_183  [key=0, style=bold, color=blue];
m51_186 -> m51_82  [key=2, style=dotted];
m51_186 -> m51_187  [key=0, style=solid];
m51_191 -> m51_188  [key=0, style=bold, color=blue];
m51_189 -> m51_190  [key=0, style=solid];
m51_189 -> m51_161  [key=2, style=dotted];
m51_190 -> m51_191  [key=0, style=solid];
m51_190 -> m51_161  [key=2, style=dotted];
m51_201 -> m51_195  [key=0, style=bold, color=blue];
m51_198 -> m51_82  [key=2, style=dotted];
m51_198 -> m51_199  [key=0, style=solid];
m51_199 -> m51_82  [key=2, style=dotted];
m51_199 -> m51_200  [key=0, style=solid];
m51_200 -> m51_82  [key=2, style=dotted];
m51_200 -> m51_201  [key=0, style=solid];
m51_204 -> m51_202  [key=0, style=bold, color=blue];
m51_203 -> m51_204  [key=0, style=solid];
m51_203 -> m51_205  [key=2, style=dotted];
m51_218 -> m51_209  [key=0, style=bold, color=blue];
m51_212 -> m51_82  [key=2, style=dotted];
m51_212 -> m51_213  [key=0, style=solid];
m51_213 -> m51_82  [key=2, style=dotted];
m51_213 -> m51_214  [key=0, style=solid];
m51_214 -> m51_48  [key=2, style=dotted];
m51_214 -> m51_215  [key=0, style=solid];
m51_215 -> m51_216  [key=0, style=solid];
m51_215 -> m51_217  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m51_221 -> m51_219  [key=0, style=bold, color=blue];
m51_220 -> m51_221  [key=0, style=solid];
m51_220 -> n11  [key=2, style=dotted];
m51_220 -> m51_222  [key=2, style=dotted];
m51_230 -> m51_226  [key=0, style=bold, color=blue];
m51_229 -> m51_82  [key=2, style=dotted];
m51_229 -> m51_230  [key=0, style=solid];
m51_234 -> m51_231  [key=0, style=bold, color=blue];
m51_232 -> m51_233  [key=0, style=solid];
m51_232 -> m51_205  [key=2, style=dotted];
m51_233 -> m51_234  [key=0, style=solid];
m51_233 -> m51_205  [key=2, style=dotted];
m51_244 -> m51_238  [key=0, style=bold, color=blue];
m51_241 -> m51_82  [key=2, style=dotted];
m51_241 -> m51_242  [key=0, style=solid];
m51_242 -> m51_82  [key=2, style=dotted];
m51_242 -> m51_243  [key=0, style=solid];
m51_243 -> m51_82  [key=2, style=dotted];
m51_243 -> m51_244  [key=0, style=solid];
m51_247 -> m51_245  [key=0, style=bold, color=blue];
m51_246 -> m51_247  [key=0, style=solid];
m51_246 -> m51_248  [key=2, style=dotted];
m51_256 -> m51_252  [key=0, style=bold, color=blue];
m51_255 -> m51_82  [key=2, style=dotted];
m51_255 -> m51_256  [key=0, style=solid];
m51_260 -> m51_257  [key=0, style=bold, color=blue];
m51_258 -> m51_259  [key=0, style=solid];
m51_258 -> m51_248  [key=2, style=dotted];
m51_259 -> m51_260  [key=0, style=solid];
m51_259 -> m51_248  [key=2, style=dotted];
m51_268 -> m51_264  [key=0, style=bold, color=blue];
m51_267 -> m51_82  [key=2, style=dotted];
m51_267 -> m51_268  [key=0, style=solid];
m51_272 -> m51_269  [key=0, style=bold, color=blue];
m51_270 -> m51_271  [key=0, style=solid];
m51_270 -> m51_248  [key=2, style=dotted];
m51_271 -> m51_272  [key=0, style=solid];
m51_271 -> m51_248  [key=2, style=dotted];
m51_282 -> m51_276  [key=0, style=bold, color=blue];
m51_279 -> m51_82  [key=2, style=dotted];
m51_279 -> m51_280  [key=0, style=solid];
m51_280 -> m51_82  [key=2, style=dotted];
m51_280 -> m51_281  [key=0, style=solid];
m51_281 -> m51_82  [key=2, style=dotted];
m51_281 -> m51_282  [key=0, style=solid];
m51_285 -> m51_283  [key=0, style=bold, color=blue];
m51_284 -> m51_285  [key=0, style=solid];
m51_284 -> m51_286  [key=2, style=dotted];
m51_294 -> m51_290  [key=0, style=bold, color=blue];
m51_293 -> m51_82  [key=2, style=dotted];
m51_293 -> m51_294  [key=0, style=solid];
m51_298 -> m51_295  [key=0, style=bold, color=blue];
m51_296 -> m51_297  [key=0, style=solid];
m51_296 -> m51_248  [key=2, style=dotted];
m51_297 -> m51_298  [key=0, style=solid];
m51_297 -> m51_286  [key=2, style=dotted];
m51_306 -> m51_302  [key=0, style=bold, color=blue];
m51_305 -> m51_82  [key=2, style=dotted];
m51_305 -> m51_306  [key=0, style=solid];
m51_310 -> m51_307  [key=0, style=bold, color=blue];
m51_308 -> m51_309  [key=0, style=solid];
m51_308 -> m51_248  [key=2, style=dotted];
m51_309 -> m51_310  [key=0, style=solid];
m51_309 -> m51_311  [key=2, style=dotted];
m51_319 -> m51_315  [key=0, style=bold, color=blue];
m51_318 -> m51_82  [key=2, style=dotted];
m51_318 -> m51_319  [key=0, style=solid];
m51_323 -> m51_320  [key=0, style=bold, color=blue];
m51_321 -> m51_322  [key=0, style=solid];
m51_321 -> m51_248  [key=2, style=dotted];
m51_322 -> m51_323  [key=0, style=solid];
m51_322 -> m51_311  [key=2, style=dotted];
m51_331 -> m51_327  [key=0, style=bold, color=blue];
m51_330 -> m51_82  [key=2, style=dotted];
m51_330 -> m51_331  [key=0, style=solid];
m51_335 -> m51_332  [key=0, style=bold, color=blue];
m51_333 -> m51_334  [key=0, style=solid];
m51_333 -> m51_248  [key=2, style=dotted];
m51_334 -> m51_335  [key=0, style=solid];
m51_334 -> m51_311  [key=2, style=dotted];
m51_344 -> m51_339  [key=0, style=bold, color=blue];
m51_342 -> m51_82  [key=2, style=dotted];
m51_342 -> m51_343  [key=0, style=solid];
m51_343 -> m51_82  [key=2, style=dotted];
m51_343 -> m51_344  [key=0, style=solid];
m51_347 -> m51_345  [key=0, style=bold, color=blue];
m51_346 -> m51_347  [key=0, style=solid];
m51_346 -> m51_348  [key=2, style=dotted];
m51_356 -> m51_352  [key=0, style=bold, color=blue];
m51_355 -> m51_82  [key=2, style=dotted];
m51_355 -> m51_356  [key=0, style=solid];
m51_360 -> m51_357  [key=0, style=bold, color=blue];
m51_358 -> m51_359  [key=0, style=solid];
m51_358 -> m51_348  [key=2, style=dotted];
m51_359 -> m51_360  [key=0, style=solid];
m51_359 -> m51_348  [key=2, style=dotted];
m51_368 -> m51_364  [key=0, style=bold, color=blue];
m51_367 -> m51_82  [key=2, style=dotted];
m51_367 -> m51_368  [key=0, style=solid];
m51_373 -> m51_369  [key=0, style=bold, color=blue];
m51_370 -> m51_371  [key=0, style=solid];
m51_370 -> m51_348  [key=2, style=dotted];
m51_371 -> m51_372  [key=0, style=solid];
m51_371 -> m51_348  [key=2, style=dotted];
m51_372 -> m51_373  [key=0, style=solid];
m51_372 -> m51_374  [key=2, style=dotted];
m51_382 -> m51_378  [key=0, style=bold, color=blue];
m51_381 -> m51_82  [key=2, style=dotted];
m51_381 -> m51_382  [key=0, style=solid];
m51_386 -> m51_383  [key=0, style=bold, color=blue];
m51_384 -> m51_385  [key=0, style=solid];
m51_384 -> m51_348  [key=2, style=dotted];
m51_385 -> m51_386  [key=0, style=solid];
m51_385 -> m51_374  [key=2, style=dotted];
m51_394 -> m51_390  [key=0, style=bold, color=blue];
m51_393 -> m51_82  [key=2, style=dotted];
m51_393 -> m51_394  [key=0, style=solid];
m51_398 -> m51_395  [key=0, style=bold, color=blue];
m51_396 -> m51_397  [key=0, style=solid];
m51_396 -> m51_348  [key=2, style=dotted];
m51_397 -> m51_398  [key=0, style=solid];
m51_397 -> m51_374  [key=2, style=dotted];
m51_408 -> m51_402  [key=0, style=bold, color=blue];
m51_405 -> m51_82  [key=2, style=dotted];
m51_405 -> m51_406  [key=0, style=solid];
m51_406 -> m51_82  [key=2, style=dotted];
m51_406 -> m51_407  [key=0, style=solid];
m51_407 -> m51_82  [key=2, style=dotted];
m51_407 -> m51_408  [key=0, style=solid];
m51_416 -> m51_410  [key=0, style=bold, color=blue];
m51_411 -> m51_412  [key=0, style=solid];
m51_411 -> m51_348  [key=2, style=dotted];
m51_412 -> m51_413  [key=0, style=solid];
m51_412 -> m51_348  [key=2, style=dotted];
m51_413 -> m51_414  [key=0, style=solid];
m51_413 -> m51_348  [key=2, style=dotted];
m51_414 -> m51_415  [key=0, style=solid];
m51_414 -> m51_348  [key=2, style=dotted];
m51_415 -> m51_416  [key=0, style=solid];
m51_415 -> m51_417  [key=2, style=dotted];
m51_425 -> m51_421  [key=0, style=bold, color=blue];
m51_424 -> m51_82  [key=2, style=dotted];
m51_424 -> m51_425  [key=0, style=solid];
m51_431 -> m51_426  [key=0, style=bold, color=blue];
m51_427 -> m51_428  [key=0, style=solid];
m51_427 -> m51_348  [key=2, style=dotted];
m51_428 -> m51_429  [key=0, style=solid];
m51_428 -> m51_348  [key=2, style=dotted];
m51_429 -> m51_430  [key=0, style=solid];
m51_429 -> m51_348  [key=2, style=dotted];
m51_430 -> m51_431  [key=0, style=solid];
m51_430 -> m51_417  [key=2, style=dotted];
m51_439 -> m51_435  [key=0, style=bold, color=blue];
m51_438 -> m51_82  [key=2, style=dotted];
m51_438 -> m51_439  [key=0, style=solid];
m51_443 -> m51_440  [key=0, style=bold, color=blue];
m51_441 -> m51_442  [key=0, style=solid];
m51_441 -> m51_348  [key=2, style=dotted];
m51_442 -> m51_443  [key=0, style=solid];
m51_442 -> m51_417  [key=2, style=dotted];
m51_451 -> m51_447  [key=0, style=bold, color=blue];
m51_450 -> m51_82  [key=2, style=dotted];
m51_450 -> m51_451  [key=0, style=solid];
m51_455 -> m51_452  [key=0, style=bold, color=blue];
m51_453 -> m51_454  [key=0, style=solid];
m51_453 -> m51_348  [key=2, style=dotted];
m51_454 -> m51_455  [key=0, style=solid];
m51_454 -> m51_417  [key=2, style=dotted];
m51_463 -> m51_459  [key=0, style=bold, color=blue];
m51_462 -> m51_82  [key=2, style=dotted];
m51_462 -> m51_463  [key=0, style=solid];
m51_467 -> m51_464  [key=0, style=bold, color=blue];
m51_465 -> m51_466  [key=0, style=solid];
m51_465 -> m51_348  [key=2, style=dotted];
m51_466 -> m51_467  [key=0, style=solid];
m51_466 -> m51_417  [key=2, style=dotted];
m51_172 -> m51_28  [key=2, style=dotted];
m51_172 -> m51_173  [key=0, style=solid];
m51_172 -> m51_175  [key=2, style=dotted];
m51_173 -> m51_28  [key=2, style=dotted];
m51_173 -> m51_174  [key=0, style=solid];
m51_173 -> m51_175  [key=2, style=dotted];
m51_216 -> m51_28  [key=2, style=dotted];
m51_216 -> m51_217  [key=0, style=solid];
m51_216 -> m51_175  [key=2, style=dotted];
m51_217 -> m51_28  [key=2, style=dotted];
m51_217 -> m51_218  [key=0, style=solid];
m51_217 -> m51_175  [key=2, style=dotted];
m51_5 -> m51_7  [key=2, style=dotted];
m51_5 -> m51_6  [key=0, style=solid];
m51_6 -> m51_4  [key=0, style=bold, color=blue];
m51_312 -> m51_313  [key=0, style=solid];
m51_313 -> m51_12  [key=2, style=dotted];
m51_313 -> m51_314  [key=0, style=solid];
m51_313 -> m51_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_314 -> m51_312  [key=0, style=bold, color=blue];
m51_261 -> m51_262  [key=0, style=solid];
m51_262 -> m51_12  [key=2, style=dotted];
m51_262 -> m51_263  [key=0, style=solid];
m51_262 -> m51_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_263 -> m51_261  [key=0, style=bold, color=blue];
m51_468 -> m51_470  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m51_468 -> m51_469  [key=0, style=solid];
m51_470 -> m51_473  [key=2, style=dotted];
m51_470 -> m51_471  [key=0, style=solid];
m51_469 -> m51_470  [key=0, style=solid];
m51_469 -> m51_472  [key=2, style=dotted];
m51_471 -> m51_468  [key=0, style=bold, color=blue];
m51_456 -> m51_457  [key=0, style=solid];
m51_457 -> m51_12  [key=2, style=dotted];
m51_457 -> m51_458  [key=0, style=solid];
m51_457 -> m51_459  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_458 -> m51_456  [key=0, style=bold, color=blue];
m51_53 -> m51_54  [key=0, style=solid];
m51_55 -> m51_56  [key=0, style=solid, color=green];
m51_55 -> m51_12  [key=2, style=dotted, color=green];
m51_55 -> m51_57  [key=1, style=dashed, color=green, label="lambda expression"];
m51_54 -> m51_55  [key=0, style=solid, color=green];
m51_54 -> m51_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_54 -> m51_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_54 -> m51_9  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m51_56 -> m51_53  [key=0, style=bold, color=blue];
m51_8 -> m51_9  [key=0, style=solid];
m51_10 -> m51_12  [key=2, style=dotted];
m51_10 -> m51_11  [key=0, style=solid];
m51_10 -> m51_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_9 -> m51_10  [key=0, style=solid];
m51_9 -> m51_9  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m51_9 -> m51_14  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_9 -> m51_15  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_11 -> m51_8  [key=0, style=bold, color=blue];
m51_349 -> m51_350  [key=0, style=solid];
m51_350 -> m51_12  [key=2, style=dotted];
m51_350 -> m51_351  [key=0, style=solid];
m51_350 -> m51_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_351 -> m51_349  [key=0, style=bold, color=blue];
m51_418 -> m51_419  [key=0, style=solid];
m51_419 -> m51_12  [key=2, style=dotted];
m51_419 -> m51_420  [key=0, style=solid];
m51_419 -> m51_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_420 -> m51_418  [key=0, style=bold, color=blue];
m51_249 -> m51_250  [key=0, style=solid];
m51_250 -> m51_12  [key=2, style=dotted];
m51_250 -> m51_251  [key=0, style=solid];
m51_250 -> m51_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_251 -> m51_249  [key=0, style=bold, color=blue];
m51_287 -> m51_288  [key=0, style=solid];
m51_288 -> m51_12  [key=2, style=dotted];
m51_288 -> m51_289  [key=0, style=solid];
m51_288 -> m51_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_289 -> m51_287  [key=0, style=bold, color=blue];
m51_336 -> m51_337  [key=0, style=solid];
m51_337 -> m51_12  [key=2, style=dotted];
m51_337 -> m51_338  [key=0, style=solid];
m51_337 -> m51_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_338 -> m51_336  [key=0, style=bold, color=blue];
m51_192 -> m51_193  [key=0, style=solid];
m51_193 -> m51_12  [key=2, style=dotted];
m51_193 -> m51_194  [key=0, style=solid];
m51_193 -> m51_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_194 -> m51_192  [key=0, style=bold, color=blue];
m51_479 -> m51_55  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_99  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_184  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_193  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_224  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_236  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_250  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_253  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_265  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_277  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_288  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_291  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_300  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_313  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_316  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_337  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_350  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_353  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_362  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_365  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_376  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_379  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_388  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_391  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_400  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_403  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_419  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_422  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_433  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_436  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_445  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_448  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_457  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_479 -> m51_460  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m51_484 -> m51_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_484 -> m51_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_485 -> m51_94  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_486 -> m51_94  [key=1, style=dashed, color=darkseagreen4, label=state];
m51_487 -> m51_102  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_488 -> m51_128  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_489 -> m51_128  [key=1, style=dashed, color=darkseagreen4, label=state];
m51_480 -> m51_14  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_480 -> m51_15  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_482 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_482 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m51_481 -> m51_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m51_483 -> m51_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
}
