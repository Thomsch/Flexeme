digraph  {
n0 [cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", label="Entry HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", span="32-32"];
n1 [cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", label="var queue = GetQueue(data)", span="34-34"];
n2 [cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', queue }\r\n                };", span="36-40"];
n4 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
n3 [cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", label="Exit HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", span="32-32"];
n5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n6 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
n7 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="method == null", span="45-45"];
n10 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="!method.OldFormat", span="49-49"];
n11 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="attribute = method.Method\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="51-54"];
n13 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="attribute = method.Type\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="59-62"];
n8 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="throw new ArgumentNullException(''method'');", span="45-45"];
n9 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="QueueAttribute attribute = null", span="47-47"];
n12 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="attribute == null", span="57-57"];
n14 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="var queueName = attribute != null\r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="65-67"];
n19 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
n20 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n21 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
n15 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="ValidateQueueName(queueName)", span="68-68"];
n22 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n16 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="return queueName;", span="70-70"];
n23 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="Entry HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73"];
n17 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
n18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n24 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="String.IsNullOrWhiteSpace(queue)", span="75-75"];
n26 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="80-80"];
n27 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="82-83"];
n25 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="throw new ArgumentNullException(''queue'');", span="77-77"];
n29 [cluster="string.IsNullOrWhiteSpace(string)", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
n28 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="Exit HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73"];
n30 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
n31 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n32 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n33 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="89-89"];
n34 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", label="var queue = GetQueue(context.JobMethod)", span="91-91"];
n35 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, label="1: context.Transaction.AddToQueue(queue, context.JobId)", span="93-93"];
n36 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="89-89"];
n37 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="16-16"];
n38 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="Entry HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="105-105"];
n39 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="method == null", span="107-107"];
n41 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="return EnqueuedState.GetQueue(method);", span="108-108"];
n40 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="return null;", span="107-107"];
n42 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="Exit HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="105-105"];
d34 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, label="0: var queue = GetQueue(context.JobMethod)", span="91-91"];
d33 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="89-89"];
d35 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", label="context.Transaction.AddToQueue(queue, context.JobId)", span="93-93"];
m0_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedStateHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_13 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m0_9 [cluster="Hangfire.States.ProcessingState.SerializeData()", file="FailedStateHandler.cs", label="Entry Hangfire.States.ProcessingState.SerializeData()", span="127-127"];
m0_10 [cluster="Hangfire.States.ProcessingState.SerializeData()", file="FailedStateHandler.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.SerializeDateTime(StartedAt) },\r\n                { ''ServerId'', ServerId },\r\n                { ''WorkerId'', WorkerId }\r\n            };", span="129-134"];
m0_11 [cluster="Hangfire.States.ProcessingState.SerializeData()", file="FailedStateHandler.cs", label="Exit Hangfire.States.ProcessingState.SerializeData()", span="127-127"];
m0_7 [cluster="string.IsNullOrWhiteSpace(string)", file="FailedStateHandler.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m0_0 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m0_1 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="String.IsNullOrWhiteSpace(serverId)", span="41-41"];
m0_3 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="ServerId = serverId", span="43-43"];
m0_5 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="WorkerId = workerId", span="45-45"];
m0_2 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''serverId'');", span="41-41"];
m0_4 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="StartedAt = DateTime.UtcNow", span="44-44"];
m0_6 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="FailedStateHandler.cs", label="Exit Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m0_14 [file="FailedStateHandler.cs", label="Hangfire.States.ProcessingState", span=""];
m1_2 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m1_3 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Exit HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m1_0 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m1_1 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="IStateChangedFilter.cs", label="Exit HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m2_11 [cluster="string.IsNullOrEmpty(string)", file="IWriteOnlyTransaction.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_0 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", span="24-24"];
m2_1 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="connection == null", span="26-26"];
m2_3 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="String.IsNullOrEmpty(jobId)", span="27-27"];
m2_5 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="JobId = jobId", span="29-29"];
m2_6 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="Job = job", span="30-30"];
m2_7 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="CreatedAt = createdAt", span="31-31"];
m2_8 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="Connection = connection", span="33-33"];
m2_2 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m2_4 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''jobId'');", span="27-27"];
m2_9 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="IWriteOnlyTransaction.cs", label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", span="24-24"];
m2_12 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="IWriteOnlyTransaction.cs", label="Entry Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="36-36"];
m2_13 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="IWriteOnlyTransaction.cs", label="Exit Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="36-36"];
m2_14 [file="IWriteOnlyTransaction.cs", label="Hangfire.States.StateContext", span=""];
m9_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobPerformer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m9_29 [cluster="HangFire.Server.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Server.Performing.PerformContext, System.Exception)", file="JobPerformer.cs", label="Entry HangFire.Server.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Server.Performing.PerformContext, System.Exception)", span="27-27"];
m9_45 [cluster="HangFire.Server.Filters.PerformedContext.PerformedContext(HangFire.Server.Performing.PerformContext, bool, System.Exception)", file="JobPerformer.cs", label="Entry HangFire.Server.Filters.PerformedContext.PerformedContext(HangFire.Server.Performing.PerformContext, bool, System.Exception)", span="27-27"];
m9_51 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", span="86-86"];
m9_52 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="0: filter.OnPerforming(preContext)", span="91-91"];
m9_53 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="0: preContext.Canceled", span="92-92"];
m9_54 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="0: return new PerformedContext(\r\n                    preContext, true, null);", span="94-95"];
m9_57 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="postContext = continuation()", span="102-102"];
m9_60 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="postContext = new PerformedContext(\r\n                    preContext, false, ex)", span="107-108"];
m9_61 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=red, community=0, file="JobPerformer.cs", label="2: filter.OnPerformed(postContext)", span="109-109"];
m9_65 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="0: filter.OnPerformed(postContext)", span="119-119"];
m9_55 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="2: var wasError = false", span="98-98"];
m9_56 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="2: PerformedContext postContext", span="99-99"];
m9_58 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label=Exception, span="104-104"];
m9_64 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="!wasError", span="117-117"];
m9_59 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="wasError = true", span="106-106"];
m9_62 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="!postContext.ExceptionHandled", span="111-111"];
m9_66 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs", label="0: return postContext;", span="122-122"];
m9_63 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="throw;", span="113-113"];
m9_67 [cluster="HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.InvokePerformFilter(HangFire.Server.Filters.IServerFilter, HangFire.Server.Filters.PerformingContext, System.Func<HangFire.Server.Filters.PerformedContext>)", span="86-86"];
m9_18 [cluster="System.Func<T, TResult>.Invoke(T)", file="JobPerformer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_39 [cluster="Unk.thunk", file="JobPerformer.cs", label="Entry Unk.thunk", span=""];
m9_19 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", span="48-48"];
m9_20 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="var filterInfo = GetFilters(context.JobMethod)", span="50-50"];
m9_21 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="PerformJobWithFilters(context, strategy, filterInfo.ServerFilters)", span="54-54"];
m9_23 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="var exceptionContext = new ServerExceptionContext(context, ex)", span="58-58"];
m9_24 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="59-59"];
m9_22 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label=Exception, span="56-56"];
m9_25 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="!exceptionContext.ExceptionHandled", span="61-61"];
m9_26 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="throw;", span="63-63"];
m9_27 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", span="48-48"];
m9_13 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="JobPerformer.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m9_68 [cluster="HangFire.Server.Filters.IServerFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="JobPerformer.cs", label="Entry HangFire.Server.Filters.IServerFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="27-27"];
m9_70 [cluster="HangFire.Server.Filters.IServerFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="JobPerformer.cs", label="Entry HangFire.Server.Filters.IServerFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="33-33"];
m9_36 [cluster="HangFire.Server.Filters.PerformingContext.PerformingContext(HangFire.Server.Performing.PerformContext)", file="JobPerformer.cs", label="Entry HangFire.Server.Filters.PerformingContext.PerformingContext(HangFire.Server.Performing.PerformContext)", span="26-26"];
m9_38 [cluster="Unk.Aggregate", file="JobPerformer.cs", label="Entry Unk.Aggregate", span=""];
m9_44 [cluster="HangFire.Server.Performing.IJobPerformStrategy.Perform()", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.IJobPerformStrategy.Perform()", span="20-20"];
m9_17 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobPerformer.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m9_28 [cluster="HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", span="68-68"];
m9_31 [cluster="HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", file="JobPerformer.cs", label="var preContext = new PerformingContext(context)", span="73-73"];
m9_32 [cluster="HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", file="JobPerformer.cs", label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                strategy.Perform();\r\n                return new PerformedContext(context, false, null);\r\n            }", span="74-78"];
m9_33 [cluster="HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", file="JobPerformer.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="80-81"];
m9_34 [cluster="HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", file="JobPerformer.cs", label="thunk()", span="83-83"];
m9_35 [cluster="HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.PerformJobWithFilters(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>)", span="68-68"];
m9_0 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer()", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.JobPerformer()", span="30-30"];
m9_1 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer()", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.JobPerformer()", span="30-30"];
m9_2 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", span="34-34"];
m9_3 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", file="JobPerformer.cs", label="filters != null", span="37-37"];
m9_4 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", file="JobPerformer.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="39-39"];
m9_5 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", span="34-34"];
m9_74 [cluster="HangFire.Server.Filters.IServerExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="JobPerformer.cs", label="Entry HangFire.Server.Filters.IServerExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", span="27-27"];
m9_48 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="81-81"];
m9_7 [cluster="lambda expression", file="JobPerformer.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="39-39"];
m9_6 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="39-39"];
m9_8 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="39-39"];
m9_10 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="39-39"];
m9_11 [cluster="lambda expression", file="JobPerformer.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="39-39"];
m9_12 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="39-39"];
m9_41 [cluster="lambda expression", file="JobPerformer.cs", label="strategy.Perform()", span="76-76"];
m9_42 [cluster="lambda expression", file="JobPerformer.cs", label="return new PerformedContext(context, false, null);", span="77-77"];
m9_49 [cluster="lambda expression", file="JobPerformer.cs", label="InvokePerformFilter(filter, preContext, next)", span="81-81"];
m9_46 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="81-81"];
m9_40 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="74-78"];
m9_43 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="74-78"];
m9_47 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="81-81"];
m9_50 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="81-81"];
m9_9 [cluster="Unk.Select", file="JobPerformer.cs", label="Entry Unk.Select", span=""];
m9_14 [cluster="HangFire.Server.Performing.JobPerformer.GetFilters(HangFire.Common.JobMethod)", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.GetFilters(HangFire.Common.JobMethod)", span="43-43"];
m9_15 [cluster="HangFire.Server.Performing.JobPerformer.GetFilters(HangFire.Common.JobMethod)", file="JobPerformer.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="45-45"];
m9_16 [cluster="HangFire.Server.Performing.JobPerformer.GetFilters(HangFire.Common.JobMethod)", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.GetFilters(HangFire.Common.JobMethod)", span="43-43"];
m9_30 [cluster="HangFire.Server.Performing.JobPerformer.InvokeServerExceptionFilters(HangFire.Server.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="Entry HangFire.Server.Performing.JobPerformer.InvokeServerExceptionFilters(HangFire.Server.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerExceptionFilter>)", span="125-125"];
m9_71 [cluster="HangFire.Server.Performing.JobPerformer.InvokeServerExceptionFilters(HangFire.Server.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs", label="1: filters.Reverse()", span="129-129"];
m9_72 [cluster="HangFire.Server.Performing.JobPerformer.InvokeServerExceptionFilters(HangFire.Server.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="filter.OnServerException(context)", span="131-131"];
m9_73 [cluster="HangFire.Server.Performing.JobPerformer.InvokeServerExceptionFilters(HangFire.Server.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="Exit HangFire.Server.Performing.JobPerformer.InvokeServerExceptionFilters(HangFire.Server.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerExceptionFilter>)", span="125-125"];
m9_69 [cluster="System.Func<TResult>.Invoke()", file="JobPerformer.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m9_75 [file="JobPerformer.cs", label="HangFire.Server.Performing.JobPerformer", span=""];
m9_76 [file="JobPerformer.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m9_77 [file="JobPerformer.cs", label="HangFire.Server.Performing.IJobPerformStrategy", span=""];
m9_78 [file="JobPerformer.cs", label="HangFire.Server.Performing.PerformContext", span=""];
m9_79 [file="JobPerformer.cs", label=preContext, span=""];
m9_80 [file="JobPerformer.cs", label="System.Func<HangFire.Server.Filters.PerformedContext>", span=""];
m9_81 [file="JobPerformer.cs", label="HangFire.Server.Filters.IServerFilter", span=""];
m10_0 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="JobState.cs", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="26-26"];
m10_1 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="JobState.cs", label="return new Dictionary<string, string>();", span="28-28"];
m10_2 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="JobState.cs", label="Exit HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="26-26"];
m11_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m11_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m11_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m11_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m12_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m12_6 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ProcessingStateHandler.cs", label="0: context.Transaction.RemoveFromSet(''processing'', context.JobId)", span="19-19"];
m12_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="17-17"];
m12_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m12_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m12_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m12_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m12_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="ProcessingStateHandler.cs", label="2: context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="11-14"];
m12_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="9-9"];
m13_13 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="Program.cs", label="JobId = jobId", span="31-31"];
m13_0 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", span="25-25"];
m13_2 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="throw new ArgumentNullException(''connection'');", span="28-28"];
m13_4 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="throw new ArgumentNullException(''stateMachine'');", span="29-29"];
m13_6 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="throw new ArgumentNullException(''jobId'');", span="30-30"];
m13_8 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="Job = job", span="33-33"];
m13_9 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="CreatedAt = createdAt", span="34-34"];
m13_10 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="Connection = connection", span="36-36"];
m13_11 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="StateMachine = stateMachine", span="37-37"];
m13_12 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", span="25-25"];
m13_1 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="connection == null", span="28-28"];
m13_3 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="stateMachine == null", span="29-29"];
m13_5 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="String.IsNullOrEmpty(jobId)", span="30-30"];
m13_7 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine)", file="Program.cs", label="JobId = jobId", span="32-32"];
m13_14 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_31 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="Program.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44"];
m13_25 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="Program.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="46-46"];
m13_26 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="Program.cs", label="String.IsNullOrEmpty(name)", span="48-48"];
m13_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="Program.cs", label="throw new ArgumentNullException(''name'');", span="48-48"];
m13_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="Program.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="50-52"];
m13_29 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="Program.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="46-46"];
m13_37 [cluster="Unk.SetRangeInHash", file="Program.cs", label="Entry Unk.SetRangeInHash", span=""];
m13_36 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_22 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_15 [cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="Program.cs", label="Entry Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="40-40"];
m13_16 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="Program.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31"];
m13_32 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="Program.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="55-55"];
m13_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="Program.cs", label="_redis.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobParameters)", span="57-59"];
m13_34 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="Program.cs", label="_stateMachine.ChangeState(JobId, _state)", span="64-64"];
m13_35 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="Program.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="55-55"];
m13_23 [cluster="HangFire.JobHelper.ToJson(object)", file="Program.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m13_38 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="Program.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m13_30 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="Program.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m13_24 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="Program.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m13_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="Program.cs", label="Hangfire.States.StateContext", span=""];
m13_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="Program.cs", label="0: String.IsNullOrEmpty(name)", span="38-38"];
m13_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", color=green, community=0, file="Program.cs", label="2: throw new ArgumentNullException(''name'');", span="38-38"];
m13_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="Program.cs", label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="43-43"];
m13_21 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="Program.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="36-36"];
m13_39 [file="Program.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m14_5 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m14_6 [cluster="System.TimeSpan.FromMinutes(double)", file="RedisWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m14_0 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m14_1 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisWriteOnlyTransaction.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26"];
m14_2 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisWriteOnlyTransaction.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", span="27-27"];
m14_3 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisWriteOnlyTransaction.cs", label="PrepareSchemaIfNecessary = true", span="29-29"];
m14_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m14_7 [file="RedisWriteOnlyTransaction.cs", label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
m15_14 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="22-22"];
m15_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="59-59"];
m15_5 [cluster="HangFire.States.ScheduledState.GetData(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.GetData(HangFire.Common.JobMethod)", span="35-35"];
m15_13 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19"];
m15_32 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48"];
m15_33 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", color=green, community=0, file="ScheduledState.cs", label="0: var storage = CreateStorage()", span="50-50"];
m15_34 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ScheduledState.cs", label="var components = storage.GetComponents()", span="52-52"];
m15_35 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ScheduledState.cs", label="var componentTypes = components.Select(x => x.GetType()).ToArray()", span="54-54"];
m15_36 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ScheduledState.cs", label="Assert.Contains(typeof(ExpirationManager), componentTypes)", span="55-55"];
m15_37 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48"];
m15_45 [cluster="object.GetType()", file="ScheduledState.cs", label="Entry object.GetType()", span="0-0"];
m15_8 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="13-13"];
m15_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", color=red, community=0, file="ScheduledState.cs", label="1: Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
m15_11 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=red, community=0, file="ScheduledState.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerStorage(''hello'', null))", span="21-22"];
m15_10 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19"];
m15_12 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ScheduledState.cs", label="Assert.Equal(''options'', exception.ParamName)", span="24-24"];
m15_4 [cluster="HangFire.States.ScheduledState.GetData(HangFire.Common.JobMethod)", file="ScheduledState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="37-41"];
m15_23 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="58-58"];
m15_46 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="ScheduledState.cs", label="return new SqlServerStorage(\r\n                ConnectionUtils.GetConnectionString(),\r\n                new SqlServerStorageOptions { PrepareSchemaIfNecessary = false });", span="60-62"];
m15_47 [cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="58-58"];
m15_40 [cluster="Unk.ToArray", file="ScheduledState.cs", label="Entry Unk.ToArray", span=""];
m15_25 [cluster="Unk.NotNull", file="ScheduledState.cs", label="Entry Unk.NotNull", span=""];
m15_24 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="54-54"];
m15_17 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="ScheduledState.cs", label="1: context.Transaction.RemoveFromSet(''schedule'', context.JobId)", span="56-56"];
m15_15 [cluster="lambda expression", file="ScheduledState.cs", label="new SqlServerStorage(''hello'', null)", span="22-22"];
m15_6 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="13-13"];
m15_42 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="54-54"];
m15_44 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="54-54"];
m15_43 [cluster="lambda expression", file="ScheduledState.cs", label="x.GetType()", span="54-54"];
m15_16 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="54-54"];
m15_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m15_26 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38"];
m15_27 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ScheduledState.cs", label="var storage = CreateStorage()", span="40-40"];
m15_28 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ScheduledState.cs", label="var connection = storage.GetConnection()", span="41-41"];
m15_29 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ScheduledState.cs", label="Assert.NotNull(connection)", span="43-43"];
m15_30 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38"];
m15_41 [cluster="Unk.Contains", file="ScheduledState.cs", label="Entry Unk.Contains", span=""];
m15_39 [cluster="Unk.Select", file="ScheduledState.cs", label="Entry Unk.Select", span=""];
m15_18 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28"];
m15_3 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", span="10-10"];
m15_38 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="64-64"];
m15_0 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", span="10-10"];
m15_1 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="ScheduledState.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerStorage(null))", span="12-13"];
m15_2 [cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="ScheduledState.cs", label="Assert.Equal(''connectionString'', exception.ParamName)", span="15-15"];
m15_19 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ScheduledState.cs", label="var storage = CreateStorage()", span="30-30"];
m15_48 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m15_49 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m15_20 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ScheduledState.cs", label="HangFire.States.ScheduledState", span=""];
m15_21 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ScheduledState.cs", label="Assert.NotNull(api)", span="33-33"];
m15_22 [cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28"];
m16_4 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="24-24"];
m16_5 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_connection.Dispose()", span="26-26"];
m16_6 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="24-24"];
m16_52 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="123-123"];
m16_53 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="125-128"];
m16_54 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="123-123"];
m16_58 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="137-137"];
m16_59 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="139-142"];
m16_60 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="137-137"];
m16_66 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m16_15 [cluster="Unk.UnregisterObject", file="SqlServerConnection.cs", label="Entry Unk.UnregisterObject", span=""];
m16_65 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4"];
m16_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16"];
m16_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="_connection = connection", span="18-18"];
m16_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="Storage = storage", span="19-19"];
m16_76 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m16_35 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m16_16 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="39-39"];
m16_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="41-43"];
m16_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="39-39"];
m16_10 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="29-29"];
m16_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="18-18"];
m16_12 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m16_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="return new SqlServerFetcher(_connection, queueNames);", span="36-36"];
m16_8 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="SqlServerConnection.cs", label="HostingEnvironment.RegisterObject(this)", span="56-56"];
m16_9 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="SqlServerConnection.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="53-53"];
m16_61 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="145-145"];
m16_63 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="154-160"];
m16_62 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="147-152"];
m16_64 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="145-145"];
m16_39 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", span="91-91"];
m16_40 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=2, file="SqlServerConnection.cs", label="0: string sql = @''\r\nselect InvocationData, StateName \r\nfrom HangFire.Job\r\nwhere id = @id''", span="93-96"];
m16_41 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=2, file="SqlServerConnection.cs", label="2: var job = _connection.Query<Job>(sql, new { id = id })\r\n                .SingleOrDefault()", span="98-99"];
m16_42 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="job == null", span="101-101"];
m16_44 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="103-103"];
m16_45 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="SqlServerConnection.cs", label="0: return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.StateName,\r\n            };", span="105-109"];
m16_43 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="return null;", span="101-101"];
m16_46 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", span="91-91"];
m16_14 [cluster="HangFire.BackgroundJobServer.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76"];
m16_37 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m16_34 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m16_73 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="177-177"];
m16_74 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="179-181"];
m16_75 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="177-177"];
m16_7 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="SqlServerConnection.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="53-53"];
m16_19 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="SqlServerConnection.cs", label="HangFire.Web.AspNetBackgroundJobServer", span=""];
m16_49 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="112-112"];
m16_50 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="114-120"];
m16_51 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="112-112"];
m16_33 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m16_36 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m16_3 [cluster="Unk.RegisterObject", file="SqlServerConnection.cs", label="Entry Unk.RegisterObject", span=""];
m16_67 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="163-163"];
m16_68 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="165-167"];
m16_69 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="163-163"];
m16_38 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m16_21 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="46-46"];
m16_22 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="SqlServerConnection.cs", label="1: string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="52-55"];
m16_23 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="57-65"];
m16_24 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="67-67"];
m16_25 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="69-69"];
m16_27 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="71-71"];
m16_28 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="73-78"];
m16_31 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="return jobId;", span="88-88"];
m16_30 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="85-85"];
m16_26 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="int parameterIndex = 0", span="70-70"];
m16_29 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="81-83"];
m16_32 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="46-46"];
m16_70 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="170-170"];
m16_71 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="172-174"];
m16_72 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="170-170"];
m16_55 [cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", span="131-131"];
m16_56 [cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="133-134"];
m16_57 [cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", span="131-131"];
m16_47 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m16_48 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m16_77 [file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m17_111 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m17_112 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SqlServerMonitoringApi.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="177-177"];
m17_113 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SqlServerMonitoringApi.cs", label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="178-178"];
m17_114 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m17_42 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="125-125"];
m17_78 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57"];
m17_103 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m17_104 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SqlServerMonitoringApi.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="163-163"];
m17_105 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SqlServerMonitoringApi.cs", label="ThenItShouldBeScheduledForTomorrow()", span="164-164"];
m17_106 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m17_76 [cluster="Unk.SortedSetContainsItem", file="SqlServerMonitoringApi.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m17_39 [cluster="HangFire.Perform.Async(System.Type, object)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="79-79"];
m17_54 [cluster="Unk.GetAllEntriesFromHash", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m17_57 [cluster="Unk.IsTrue", file="SqlServerMonitoringApi.cs", label="Entry Unk.IsTrue", span=""];
m17_36 [cluster="HangFire.Perform.Async<TJob>()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.Async<TJob>()", span="26-26"];
m17_35 [cluster="string.Equals(string)", file="SqlServerMonitoringApi.cs", label="Entry string.Equals(string)", span="0-0"];
m17_80 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m17_81 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SqlServerMonitoringApi.cs", label="Assert.IsNotNull(_exception)", span="131-131"];
m17_82 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SqlServerMonitoringApi.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="132-132"];
m17_83 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m17_58 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m17_77 [cluster="Unk.GetItemScoreInSortedSet", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m17_37 [cluster="HangFire.Perform.Async<TJob>(object)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="44-44"];
m17_55 [cluster="Unk.AreNotEqual", file="SqlServerMonitoringApi.cs", label="Entry Unk.AreNotEqual", span=""];
m17_43 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142"];
m17_59 [cluster="Unk.AreEqual", file="SqlServerMonitoringApi.cs", label="Entry Unk.AreEqual", span=""];
m17_45 [cluster="Unk.Pending", file="SqlServerMonitoringApi.cs", label="Entry Unk.Pending", span=""];
m17_87 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m17_88 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="138-138"];
m17_89 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Assert.AreNotEqual(0, job.Count)", span="139-139"];
m17_90 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="140-140"];
m17_91 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="142-142"];
m17_92 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="DictionaryAssert.ContainsFollowingItems(table, args)", span="143-143"];
m17_93 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m17_44 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160"];
m17_40 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m17_95 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m17_96 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SqlServerMonitoringApi.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="149-149"];
m17_97 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SqlServerMonitoringApi.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="150-150"];
m17_98 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m17_94 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m17_79 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m17_41 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106"];
m17_46 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m17_47 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="93-93"];
m17_48 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="Assert.AreNotEqual(0, job.Count)", span="94-94"];
m17_49 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="95-95"];
m17_50 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="97-97"];
m17_51 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="Assert.AreEqual(0, args.Count)", span="98-98"];
m17_52 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m17_60 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m17_61 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="1: ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="104-104"];
m17_62 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m17_2 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19"];
m17_25 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: code.Equals(''Perform.Async<InvalidQueueJob>()'')", span="67-67"];
m17_23 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async<CriticalQueueJob>()'')", span="63-63"];
m17_26 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async<InvalidQueueJob>()", span="69-69"];
m17_27 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="71-71"];
m17_3 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async<TestJob>()'')", span="23-23"];
m17_5 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", span="27-27"];
m17_7 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async(typeof(TestJob))'')", span="31-31"];
m17_9 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async(null)'')", span="35-35"];
m17_11 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async(typeof(TestJob), new { ArticleId = 3 })'')", span="39-39"];
m17_13 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.Async(null, new { ArticleId = 3 })'')", span="43-43"];
m17_15 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1))'')", span="47-47"];
m17_17 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })'')", span="51-51"];
m17_19 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob))'')", span="55-55"];
m17_21 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3 })'')", span="59-59"];
m17_24 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async<CriticalQueueJob>()", span="65-65"];
m17_30 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label=PendingStepException, span="80-80"];
m17_32 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label=Exception, span="84-84"];
m17_28 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async<EmptyQueueJob>()", span="73-73"];
m17_29 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="ScenarioContext.Current.Pending()", span="77-77"];
m17_4 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async<TestJob>()", span="25-25"];
m17_6 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async<TestJob>(new { ArticleId = 3, Author = ''odinserj'' })", span="29-29"];
m17_8 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async(typeof (TestJob))", span="33-33"];
m17_10 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async(null)", span="37-37"];
m17_12 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async(typeof (TestJob), new { ArticleId = 3 })", span="41-41"];
m17_14 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.Async(null, new { ArticleId = 3 })", span="45-45"];
m17_16 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1))", span="49-49"];
m17_18 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })", span="53-53"];
m17_20 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="57-57"];
m17_22 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", span="61-61"];
m17_33 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="_exception = ex", span="86-86"];
m17_31 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="throw;", span="82-82"];
m17_34 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19"];
m17_86 [cluster="Unk.IsInstanceOfType", file="SqlServerMonitoringApi.cs", label="Entry Unk.IsInstanceOfType", span=""];
m17_38 [cluster="HangFire.Perform.Async(System.Type)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Perform.Async(System.Type)", span="61-61"];
m17_68 [cluster="Unk.GetAllItemsFromList", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m17_84 [cluster="Unk.IsNotNull", file="SqlServerMonitoringApi.cs", label="Entry Unk.IsNotNull", span=""];
m17_56 [cluster="Unk.Contains", file="SqlServerMonitoringApi.cs", label="Entry Unk.Contains", span=""];
m17_69 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m17_70 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="120-120"];
m17_71 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="121-121"];
m17_72 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="122-122"];
m17_73 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="124-124"];
m17_74 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="125-125"];
m17_75 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m17_99 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m17_100 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="156-156"];
m17_101 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="157-157"];
m17_102 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m17_107 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m17_108 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="170-170"];
m17_109 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="ThenItShouldBeScheduledForTomorrow()", span="171-171"];
m17_110 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m17_63 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m17_66 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SqlServerMonitoringApi.cs", label="Assert.AreEqual(_jobId, jobIds[0])", span="114-114"];
m17_64 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SqlServerMonitoringApi.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="110-111"];
m17_65 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SqlServerMonitoringApi.cs", label="Assert.AreEqual(1, jobIds.Count)", span="113-113"];
m17_67 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m17_85 [cluster="System.Type.GetType(string, bool)", file="SqlServerMonitoringApi.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m17_115 [file="SqlServerMonitoringApi.cs", label="HangFire.Tests.ClientSteps", span=""];
m18_15 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerStorage.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m18_30 [cluster="HangFire.Server.WorkerManager.ToString()", file="SqlServerStorage.cs", label="Entry HangFire.Server.WorkerManager.ToString()", span="66-66"];
m18_31 [cluster="HangFire.Server.WorkerManager.ToString()", file="SqlServerStorage.cs", label="return ''Worker Manager'';", span="68-68"];
m18_32 [cluster="HangFire.Server.WorkerManager.ToString()", file="SqlServerStorage.cs", label="Exit HangFire.Server.WorkerManager.ToString()", span="66-66"];
m18_16 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m18_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerStorage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_14 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="SqlServerStorage.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m18_24 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="SqlServerStorage.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m18_26 [cluster="HangFire.Server.WorkerManager.Dispose()", file="SqlServerStorage.cs", label="Entry HangFire.Server.WorkerManager.Dispose()", span="61-61"];
m18_27 [cluster="HangFire.Server.WorkerManager.Dispose()", file="SqlServerStorage.cs", label="_workerRunners.Dispose()", span="63-63"];
m18_28 [cluster="HangFire.Server.WorkerManager.Dispose()", file="SqlServerStorage.cs", label="Exit HangFire.Server.WorkerManager.Dispose()", span="61-61"];
m18_17 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="SqlServerStorage.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="71-71"];
m18_33 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="SqlServerStorage.cs", label="return new ServerComponentRunner(\r\n                new Worker(context),\r\n                new ServerComponentRunnerOptions { LowerLogVerbosity = true });", span="73-75"];
m18_34 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="SqlServerStorage.cs", label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="71-71"];
m18_29 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="SqlServerStorage.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m18_37 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="SqlServerStorage.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m18_0 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29"];
m18_1 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="sharedContext == null", span="31-31"];
m18_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="workerCount <= 0", span="33-33"];
m18_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="35-35"];
m18_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="i <= workerCount", span="36-36"];
m18_8 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="var workerContext = new WorkerContext(sharedContext, i)", span="38-38"];
m18_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''sharedContext'');", span="31-31"];
m18_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="33-33"];
m18_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="var i = 1", span="36-36"];
m18_9 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="41-41"];
m18_11 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="44-44"];
m18_10 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="i++", span="36-36"];
m18_12 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="SqlServerStorage.cs", label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29"];
m18_25 [cluster="System.Threading.WaitHandle.WaitOne()", file="SqlServerStorage.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m18_35 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="SqlServerStorage.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m18_36 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m18_19 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="SqlServerStorage.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m18_20 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="SqlServerStorage.cs", label="Entry HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="47-47"];
m18_21 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="SqlServerStorage.cs", label="_workerRunners.Start()", span="51-51"];
m18_22 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="SqlServerStorage.cs", label="cancellationToken.WaitHandle.WaitOne()", span="53-53"];
m18_23 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="SqlServerStorage.cs", label="Exit HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="47-47"];
m18_38 [file="SqlServerStorage.cs", label="HangFire.Server.WorkerManager", span=""];
m19_30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55"];
m19_113 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="183-183"];
m19_99 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="164-166"];
m19_85 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="129-129"];
m19_86 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="139-139"];
m19_87 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label="var properties = new Dictionary<string, string>(state.GetProperties())", span="142-142"];
m19_52 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(stateData)\r\n                })", span="92-101"];
m19_108 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="178-180"];
m19_53 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="92-101"];
m19_82 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="138-140"];
m19_83 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="138-140"];
m19_84 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="138-140"];
m19_48 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=green, community=2, file="SqlServerWriteOnlyTransaction.cs", label="1: string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="88-90"];
m19_75 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="129-129"];
m19_101 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="149-152"];
m19_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="149-152"];
m19_103 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="149-152"];
m19_7 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="20-20"];
m19_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label=_commandQueue, span="37-37"];
m19_12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="command(_connection)", span="39-39"];
m19_41 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="SqlServerWriteOnlyTransaction.cs", label="var oldState = state", span="80-80"];
m19_31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="57-59"];
m19_32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="55-55"];
m19_34 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="57-59"];
m19_35 [cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Exit lambda expression", span="57-59"];
m19_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=green, community=2, file="SqlServerWriteOnlyTransaction.cs", label="1: string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="66-69"];
m19_42 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="71-81"];
m19_44 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="71-81"];
m19_45 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m19_33 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="57-59"];
m19_36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="62-62"];
m19_37 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs", label="var stateData = state.GetData(method)", span="64-64"];
m19_39 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=green, community=2, file="SqlServerWriteOnlyTransaction.cs", label="1: QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(stateData),\r\n                    id = jobId\r\n                }))", span="71-81"];
m19_40 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="62-62"];
m19_43 [cluster="lambda expression", color=green, community=2, file="SqlServerWriteOnlyTransaction.cs", label="1: x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.StateName,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(stateData),\r\n                    id = jobId\r\n                })", span="71-81"];
m19_46 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="84-84"];
m19_88 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label="var now = DateTime.UtcNow", span="143-143"];
m19_90 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label=appendToJob, span="147-147"];
m19_89 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label="properties.Add(''State'', state.StateName)", span="145-145"];
m19_91 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="SqlServerWriteOnlyTransaction.cs", label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="149-152"];
m19_104 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="171-173"];
m19_67 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerWriteOnlyTransaction.cs", label="return transaction.Commit();", span="125-125"];
m19_68 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="93-93"];
m19_69 [cluster="Unk.CreateTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.CreateTransaction", span=""];
m19_47 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs", label="var stateData = state.GetData(method)", span="86-86"];
m19_112 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="178-180"];
m19_148 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m19_100 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="164-166"];
m19_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="return true;", span="45-45"];
m19_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="29-29"];
m19_81 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="136-136"];
m19_73 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="129-129"];
m19_60 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="110-112"];
m19_55 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="106-108"];
m19_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="110-112"];
m19_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="104-104"];
m19_58 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="110-112"];
m19_59 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="110-112"];
m19_62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="117-119"];
m19_63 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="115-115"];
m19_64 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="117-119"];
m19_66 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="117-119"];
m19_61 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="115-115"];
m19_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="117-119"];
m19_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="29-29"];
m19_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="31-33"];
m19_115 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_114 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.StateMachine", span=""];
m19_116 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_24 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''stateAppliedFilters'');", span="49-49"];
m19_146 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="_commandQueue.Enqueue(action)", span="248-248"];
m19_147 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="246-246"];
m19_16 [cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m19_17 [cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m19_19 [cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m19_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48"];
m19_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="48-48"];
m19_25 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="50-52"];
m19_26 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="50-52"];
m19_27 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="50-52"];
m19_28 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m19_18 [cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m19_20 [cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Complete", span=""];
m19_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="50-52"];
m19_29 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m19_76 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="131-133"];
m19_92 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="157-159"];
m19_93 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="157-159"];
m19_95 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="162-162"];
m19_94 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="157-159"];
m19_96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="164-166"];
m19_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId))", span="107-108"];
m19_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="107-108"];
m19_74 [cluster="Unk.AppendHistory", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.AppendHistory", span=""];
m19_6 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41"];
m19_97 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m19_107 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="154-156"];
m19_109 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="162-164"];
m19_71 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="124-126"];
m19_10 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49"];
m19_13 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m19_70 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="124-126"];
m19_140 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="239-239"];
m19_141 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="241-243"];
m19_142 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="239-239"];
m19_143 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="241-243"];
m19_78 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="131-133"];
m19_106 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="171-173"];
m19_110 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="178-180"];
m19_105 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="171-173"];
m19_111 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="178-180"];
m19_51 [cluster="Unk.Contains", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Contains", span=""];
m19_77 [cluster="Unk.Commit", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m19_118 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label=properties, span=""];
m19_126 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="208-208"];
m19_128 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="212-212"];
m19_136 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var affectedRows = x.Execute(updateSql, new { key })", span="230-230"];
m19_138 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="234-234"];
m19_144 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="241-243"];
m19_98 [cluster="HangFire.States.JobState.GetProperties()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m19_117 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.JobState", span=""];
m19_125 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="206-214"];
m19_135 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="228-236"];
m19_72 [cluster="Unk.QueueCommand", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.QueueCommand", span=""];
m19_119 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="190-192"];
m19_127 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="affectedRows == 0", span="210-210"];
m19_129 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="206-214"];
m19_137 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="affectedRows == 0", span="232-232"];
m19_139 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="228-236"];
m19_145 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="241-243"];
m19_130 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="217-217"];
m19_133 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="228-236"];
m19_131 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="219-224"];
m19_132 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="225-226"];
m19_134 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="217-217"];
m19_0 [cluster="HangFire.States.StateMachine.StateMachine()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.StateMachine.StateMachine()", span="12-12"];
m19_3 [cluster="HangFire.States.StateMachine.StateMachine()", file="SqlServerWriteOnlyTransaction.cs", label="RegisterStateDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="16-16"];
m19_1 [cluster="HangFire.States.StateMachine.StateMachine()", file="SqlServerWriteOnlyTransaction.cs", label="RegisterStateDescriptor(FailedState.Name, new FailedState.Descriptor())", span="14-14"];
m19_2 [cluster="HangFire.States.StateMachine.StateMachine()", file="SqlServerWriteOnlyTransaction.cs", label="RegisterStateDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="15-15"];
m19_4 [cluster="HangFire.States.StateMachine.StateMachine()", file="SqlServerWriteOnlyTransaction.cs", label="RegisterStateDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="17-17"];
m19_120 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="195-195"];
m19_123 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="206-214"];
m19_121 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="197-202"];
m19_122 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="203-204"];
m19_124 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="195-195"];
m19_5 [cluster="HangFire.States.StateMachine.StateMachine()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.States.StateMachine.StateMachine()", span="12-12"];
m19_50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="84-84"];
m19_54 [cluster="Unk.ApplyState", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.ApplyState", span=""];
m19_49 [cluster="Unk.AcquireLock", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Entry Unk.AcquireLock", span=""];
m19_149 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m19_154 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.Common.States.JobState", span=""];
m19_155 [file="SqlServerWriteOnlyTransaction.cs", label=stateData, span=""];
m19_156 [file="SqlServerWriteOnlyTransaction.cs", label=addAndSetStateSql, span=""];
m19_158 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.Common.States.JobState", span=""];
m19_159 [file="SqlServerWriteOnlyTransaction.cs", label=stateData, span=""];
m19_160 [file="SqlServerWriteOnlyTransaction.cs", label=addStateSql, span=""];
m19_150 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_151 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m19_152 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_161 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_162 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_163 [file="SqlServerWriteOnlyTransaction.cs", label=enqueueJobSql, span=""];
m19_164 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_165 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_166 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m19_167 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_168 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_169 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m19_170 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_171 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_172 [file="SqlServerWriteOnlyTransaction.cs", label=double, span=""];
m19_173 [file="SqlServerWriteOnlyTransaction.cs", label=addSql, span=""];
m19_174 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_175 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_176 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_177 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_178 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_179 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_180 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m19_181 [file="SqlServerWriteOnlyTransaction.cs", label=int, span=""];
m19_182 [file="SqlServerWriteOnlyTransaction.cs", label=trimSql, span=""];
m19_183 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_184 [file="SqlServerWriteOnlyTransaction.cs", label=updateSql, span=""];
m19_185 [file="SqlServerWriteOnlyTransaction.cs", label=insertSql, span=""];
m19_186 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_187 [file="SqlServerWriteOnlyTransaction.cs", label=updateSql, span=""];
m19_188 [file="SqlServerWriteOnlyTransaction.cs", label=insertSql, span=""];
m19_189 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m19_190 [file="SqlServerWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m20_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", file="StateApplyingContext.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", span="23-23"];
m20_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", color=red, community=0, file="StateApplyingContext.cs", label="1: transaction == null", span="29-29"];
m20_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", color=red, community=0, file="StateApplyingContext.cs", label="1: state == null", span="30-30"];
m20_5 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", color=red, community=0, file="StateApplyingContext.cs", label="1: Transaction = transaction", span="32-32"];
m20_6 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", color=red, community=0, file="StateApplyingContext.cs", label="1: ApplyingState = state", span="33-33"];
m20_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", color=red, community=0, file="StateApplyingContext.cs", label="1: throw new ArgumentNullException(''transaction'');", span="29-29"];
m20_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", color=red, community=0, file="StateApplyingContext.cs", label="1: throw new ArgumentNullException(''state'');", span="30-30"];
m20_7 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", file="StateApplyingContext.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", span="23-23"];
m20_9 [file="StateApplyingContext.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m21_92 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="198-198"];
m21_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="0: var transaction = _connection.CreateWriteTransaction()", span="202-202"];
m21_107 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=1, file="StateMachine.cs", label="0: var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction,\r\n                    context.CandidateState)", span="204-207"];
m21_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="2: ApplyState(changedContext, context.CurrentState, stateChangedFilters)", span="209-209"];
m21_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="2: return transaction.Commit();", span="211-211"];
m21_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="198-198"];
m21_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m21_146 [cluster="System.Collections.Generic.List<T>.List()", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_93 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m21_50 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="13-13"];
m21_94 [cluster="string.Format(string, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m21_87 [cluster="string.IsNullOrWhiteSpace(string)", file="StateMachine.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m21_59 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39"];
m21_49 [cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m21_56 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, HangFire.Common.States.JobState)", span="23-23"];
m21_91 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="StateMachine.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91"];
m21_17 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="261-261"];
m21_138 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="handler == null", span="263-263"];
m21_140 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="String.IsNullOrEmpty(handler.StateName)", span="264-264"];
m21_142 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="!_handlers.ContainsKey(handler.StateName)", span="266-266"];
m21_143 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="268-268"];
m21_144 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="_handlers[handler.StateName].Add(handler)", span="271-271"];
m21_139 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="throw new ArgumentNullException(''handler'');", span="263-263"];
m21_141 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateName'');", span="264-264"];
m21_145 [cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="261-261"];
m21_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m21_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m21_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m21_132 [cluster="System.Func<T, TResult>.Invoke(T)", file="StateMachine.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m21_124 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="26-26"];
m21_55 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10"];
m21_25 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="StateMachine.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m21_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m21_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="method == null", span="69-69"];
m21_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="parameters == null", span="70-70"];
m21_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="state == null", span="71-71"];
m21_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78"];
m21_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84"];
m21_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m21_36 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="var context = new StateContext(jobId, method)", span="87-87"];
m21_37 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs", label="2: var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88"];
m21_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''method'');", span="69-69"];
m21_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''parameters'');", span="70-70"];
m21_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="71-71"];
m21_42 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs", label="2: transaction.PersistJob(jobId)", span="104-104"];
m21_44 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="return jobId;", span="110-110"];
m21_38 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90"];
m21_41 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs", label="2: ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    filterInfo.StateChangedFilters)", span="99-102"];
m21_40 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=1, file="StateMachine.cs", label="2: var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction,\r\n                    changingContext.CandidateState)", span="94-97"];
m21_39 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs", label="1: var transaction = _connection.CreateWriteTransaction()", span="92-92"];
m21_43 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=red, community=0, file="StateMachine.cs", label="0: transaction.Commit()", span="107-107"];
m21_45 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63"];
m21_15 [cluster="HangFire.JobStorage.GetStateHandlers()", file="StateMachine.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m21_131 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="StateMachine.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m21_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="215-215"];
m21_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: !String.IsNullOrEmpty(oldState)", span="220-220"];
m21_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: GetHandlers(oldState)", span="222-222"];
m21_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: handler.Unapply(context)", span="224-224"];
m21_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: stateChangedFilters", span="227-227"];
m21_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: filter.OnStateUnapplied(context)", span="229-229"];
m21_116 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: context.Transaction.SetJobState(context.JobId, context.ApplyingState, context.JobMethod)", span="233-233"];
m21_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: GetHandlers(context.ApplyingState.StateName)", span="235-235"];
m21_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: handler.Apply(context)", span="237-237"];
m21_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: stateChangedFilters", span="240-240"];
m21_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=red, community=0, file="StateMachine.cs", label="1: filter.OnStateApplied(context)", span="242-242"];
m21_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="215-215"];
m21_126 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="12-12"];
m21_122 [cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m21_127 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="22-22"];
m21_88 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="22-22"];
m21_105 [cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13"];
m21_137 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m21_48 [cluster="Unk.ToJson", file="StateMachine.cs", label="Entry Unk.ToJson", span=""];
m21_60 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="77-77"];
m21_19 [cluster="lambda expression", file="StateMachine.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m21_18 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="59-59"];
m21_20 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="59-59"];
m21_22 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="59-59"];
m21_23 [cluster="lambda expression", file="StateMachine.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59"];
m21_24 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="59-59"];
m21_61 [cluster="lambda expression", file="StateMachine.cs", label="x.ParameterType", span="77-77"];
m21_62 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="77-77"];
m21_21 [cluster="Unk.Select", file="StateMachine.cs", label="Entry Unk.Select", span=""];
m21_54 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m21_96 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label=filters, span="182-182"];
m21_97 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="var oldState = context.CandidateState", span="184-184"];
m21_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="filter.OnStateChanging(context)", span="185-185"];
m21_99 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="oldState != context.CandidateState", span="187-187"];
m21_101 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", color=red, community=0, file="StateMachine.cs", label="2: transaction.AppendJobHistory(context.JobId, oldState, context.JobMethod)", span="191-191"];
m21_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="var transaction = _connection.CreateWriteTransaction()", span="189-189"];
m21_102 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="transaction.Commit()", span="192-192"];
m21_103 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="179-179"];
m21_63 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m21_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m21_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="state == null", span="117-117"];
m21_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m21_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: var jobData = _connection.GetJobStateAndInvocationData(jobId)", span="123-123"];
m21_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132"];
m21_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: var context = new StateContext(jobId, jobMethod)", span="142-142"];
m21_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="2: var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143"];
m21_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=1, file="StateMachine.cs", label="0: var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", span="156-165"];
m21_65 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''jobId'');", span="116-116"];
m21_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="117-117"];
m21_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: jobData == null", span="125-125"];
m21_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: var currentState = jobData.State", span="131-131"];
m21_75 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139"];
m21_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: return false;", span="128-128"];
m21_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: return false;", span="134-134"];
m21_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: var filterInfo = GetFilters(jobMethod)", span="140-140"];
m21_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m21_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m21_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: JobLoadException", span="149-149"];
m21_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=1, file="StateMachine.cs", label="0: return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169"];
m21_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: Exception", span="172-172"];
m21_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: throw;", span="174-174"];
m21_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m21_104 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m21_89 [cluster="HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", span="23-23"];
m21_128 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m21_58 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11"];
m21_148 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="246-246"];
m21_129 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="248-248"];
m21_130 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="246-246"];
m21_125 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StateMachine.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m21_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m21_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="StateMachine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m21_123 [cluster="HangFire.States.StateMachine.GetHandlers(string)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetHandlers(string)", span="251-251"];
m21_133 [cluster="HangFire.States.StateMachine.GetHandlers(string)", color=red, community=0, file="StateMachine.cs", label="1: _handlers.ContainsKey(stateName)", span="253-253"];
m21_134 [cluster="HangFire.States.StateMachine.GetHandlers(string)", color=red, community=0, file="StateMachine.cs", label="1: return _handlers[stateName];", span="255-255"];
m21_135 [cluster="HangFire.States.StateMachine.GetHandlers(string)", color=red, community=0, file="StateMachine.cs", label="1: return Enumerable.Empty<JobStateHandler>();", span="258-258"];
m21_136 [cluster="HangFire.States.StateMachine.GetHandlers(string)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetHandlers(string)", span="251-251"];
m21_147 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m21_52 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateMachine.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m21_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="StateMachine.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m21_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachine.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m21_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m21_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="connection == null", span="46-46"];
m21_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="stateHandlers == null", span="47-47"];
m21_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_connection = connection", span="49-49"];
m21_8 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51"];
m21_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="filters != null", span="57-57"];
m21_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59"];
m21_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''connection'');", span="46-46"];
m21_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m21_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label=handlers, span="52-52"];
m21_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="RegisterHandler(handler)", span="54-54"];
m21_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m21_149 [file="StateMachine.cs", label="HangFire.States.StateMachine", span=""];
m21_150 [file="StateMachine.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m22_0 [cluster="HangFire.Perform.Async<TWorker>()", file="StateSteps.cs", label="Entry HangFire.Perform.Async<TWorker>()", span="4-4"];
m22_1 [cluster="HangFire.Perform.Async<TWorker>()", file="StateSteps.cs", label="Async<TWorker>(null)", span="7-7"];
m22_2 [cluster="HangFire.Perform.Async<TWorker>()", file="StateSteps.cs", label="Exit HangFire.Perform.Async<TWorker>()", span="4-4"];
m22_3 [cluster="HangFire.Perform.Async<TWorker>(object)", file="StateSteps.cs", label="Entry HangFire.Perform.Async<TWorker>(object)", span="10-10"];
m22_4 [cluster="HangFire.Perform.Async<TWorker>(object)", file="StateSteps.cs", label="Client.Enqueue(typeof (TWorker), arg)", span="13-13"];
m22_5 [cluster="HangFire.Perform.Async<TWorker>(object)", file="StateSteps.cs", label="Exit HangFire.Perform.Async<TWorker>(object)", span="10-10"];
m22_6 [cluster="HangFire.Client.Enqueue(System.Type, object)", file="StateSteps.cs", label="Entry HangFire.Client.Enqueue(System.Type, object)", span="10-10"];
m23_24 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="Entry HangFire.Common.Job.DeserializeArguments()", span="228-228"];
m23_88 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="var parameters = Method.GetParameters()", span="232-232"];
m23_89 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="var result = new List<object>(Arguments.Length)", span="233-233"];
m23_91 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="i < parameters.Length", span="235-235"];
m23_92 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="var parameter = parameters[i]", span="237-237"];
m23_90 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="var i = 0", span="235-235"];
m23_99 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="result.Add(value)", span="254-254"];
m23_101 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="return result.ToArray();", span="257-257"];
m23_93 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="var argument = Arguments[i]", span="238-238"];
m23_100 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="i++", span="235-235"];
m23_95 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="parameter.ParameterType == typeof(object)", span="242-242"];
m23_97 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="250-250"];
m23_94 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="object value", span="240-240"];
m23_96 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="value = argument", span="246-246"];
m23_98 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="value = converter.ConvertFromInvariantString(argument)", span="251-251"];
m23_102 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label=Exception, span="259-259"];
m23_103 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occured during arguments deserialization.'',\r\n                    ex);", span="261-263"];
m23_104 [cluster="HangFire.Common.Job.DeserializeArguments()", file="SucceededState.cs", label="Exit HangFire.Common.Job.DeserializeArguments()", span="228-228"];
m23_84 [cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="SucceededState.cs", label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m23_74 [cluster="string.Format(string, object, object)", file="SucceededState.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m23_0 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="SucceededState.cs", label="Entry HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="45-45"];
m23_1 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="SucceededState.cs", label="type == null", span="47-47"];
m23_3 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="SucceededState.cs", label="2: method == null", span="48-48"];
m23_5 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededState.cs", label="0: Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="40-40"];
m23_7 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededState.cs", label="0: context.Transaction.IncrementCounter(''stats:succeeded'')", span="43-43"];
m23_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="40-40"];
m23_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="10-10"];
m23_2 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="SucceededState.cs", label="throw new ArgumentNullException(''type'');", span="47-47"];
m23_4 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="SucceededState.cs", label="2: throw new ArgumentNullException(''method'');", span="48-48"];
m23_6 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededState.cs", label="2: context.Transaction.ExpireJob(context.JobId, JobExpirationTimeout)", span="42-42"];
m23_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19"];
m23_11 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="46-46"];
m23_38 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="SucceededState.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m23_72 [cluster="System.Type.IsAssignableFrom(System.Type)", file="SucceededState.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m23_140 [cluster="Unk.ConvertToInvariantString", file="SucceededState.cs", label="Entry Unk.ConvertToInvariantString", span=""];
m23_15 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="activator == null", span="68-68"];
m23_86 [cluster="string.Format(string, object)", file="SucceededState.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_37 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="SucceededState.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m23_34 [cluster="HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="SucceededState.cs", label="Entry HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m23_87 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="SucceededState.cs", label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m23_29 [cluster="HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="SucceededState.cs", label="Entry HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m23_73 [cluster="System.ArgumentException.ArgumentException(string)", file="SucceededState.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m23_141 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="Entry HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="326-326"];
m23_142 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="Debug.Assert(expression != null)", span="328-328"];
m23_143 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="var constantExpression = expression as ConstantExpression", span="330-330"];
m23_146 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="337-337"];
m23_144 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="constantExpression != null", span="332-332"];
m23_145 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="return constantExpression.Value;", span="334-334"];
m23_147 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="Exit HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="326-326"];
m23_23 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="Entry HangFire.Common.Job.Activate(HangFire.JobActivator)", span="206-206"];
m23_77 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="var instance = activator.ActivateJob(Type)", span="210-210"];
m23_78 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="instance == null", span="212-212"];
m23_80 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="return instance;", span="218-218"];
m23_79 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="214-215"];
m23_81 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label=Exception, span="220-220"];
m23_82 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occured during job activation.'',\r\n                    ex);", span="222-224"];
m23_83 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="SucceededState.cs", label="Exit HangFire.Common.Job.Activate(HangFire.JobActivator)", span="206-206"];
m23_134 [cluster="System.Diagnostics.Debug.Assert(bool)", file="SucceededState.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m23_136 [cluster="Unk.ToArray", file="SucceededState.cs", label="Entry Unk.ToArray", span=""];
m23_13 [cluster="HangFire.Common.Job.Validate()", color=green, community=0, file="SucceededState.cs", label="0: Entry HangFire.Common.Job.Validate()", span="159-159"];
m23_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="context.Transaction.DecrementCounter(''stats:succeeded'')", span="48-48"];
m23_14 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="Entry HangFire.Common.Job.Perform(HangFire.JobActivator)", span="66-66"];
m23_85 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SucceededState.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m23_106 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="SucceededState.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m23_114 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="SucceededState.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m23_115 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label="Entry HangFire.Common.Job.Dispose(object)", span="281-281"];
m23_116 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label="var disposable = instance as IDisposable", span="285-285"];
m23_117 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label="disposable != null", span="286-286"];
m23_118 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label="disposable.Dispose()", span="288-288"];
m23_119 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label=Exception, span="291-291"];
m23_120 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occured during disposal.'',\r\n                    ex);", span="293-295"];
m23_121 [cluster="HangFire.Common.Job.Dispose(object)", file="SucceededState.cs", label="Exit HangFire.Common.Job.Dispose(object)", span="281-281"];
m23_109 [cluster="System.Collections.Generic.List<T>.ToArray()", file="SucceededState.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m23_19 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="instance = Activate(activator)", span="76-76"];
m23_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11"];
m23_17 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="object instance = null", span="70-70"];
m23_18 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="!Method.IsStatic", span="74-74"];
m23_21 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="InvokeMethod(instance, deserializedArguments)", span="80-80"];
m23_20 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="var deserializedArguments = DeserializeArguments()", span="79-79"];
m23_22 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="SucceededState.cs", label="Exit HangFire.Common.Job.Perform(HangFire.JobActivator)", span="66-66"];
m23_47 [cluster="System.NotSupportedException.NotSupportedException(string)", file="SucceededState.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m23_25 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="SucceededState.cs", label="Entry HangFire.Common.Job.InvokeMethod(object, object[])", span="267-267"];
m23_110 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="SucceededState.cs", label="Method.Invoke(instance, deserializedArguments)", span="271-271"];
m23_111 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="SucceededState.cs", label=TargetInvocationException, span="273-273"];
m23_112 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="SucceededState.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="275-277"];
m23_113 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="SucceededState.cs", label="Exit HangFire.Common.Job.InvokeMethod(object, object[])", span="267-267"];
m23_30 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="SucceededState.cs", label="Entry HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="102-102"];
m23_35 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="SucceededState.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="104-106"];
m23_36 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="SucceededState.cs", label="Exit HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="102-102"];
m23_31 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="SucceededState.cs", label="Entry HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="95-95"];
m23_32 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="SucceededState.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="97-99"];
m23_33 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="SucceededState.cs", label="Exit HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="95-95"];
m23_135 [cluster="Unk.Select", file="SucceededState.cs", label="Entry Unk.Select", span=""];
m23_139 [cluster="Unk.GetConverter", file="SucceededState.cs", label="Entry Unk.GetConverter", span=""];
m23_48 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="Entry HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="299-299"];
m23_123 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="Debug.Assert(callExpression != null)", span="301-301"];
m23_124 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="303-303"];
m23_125 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="305-305"];
m23_126 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label=arguments, span="306-306"];
m23_131 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="serializedArguments.Add(value)", span="320-320"];
m23_132 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="return serializedArguments.ToArray();", span="323-323"];
m23_127 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="string value = null", span="308-308"];
m23_128 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="argument != null", span="310-310"];
m23_129 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="312-312"];
m23_130 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="value = converter.ConvertToInvariantString(argument)", span="313-313"];
m23_133 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="SucceededState.cs", label="Exit HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="299-299"];
m23_138 [cluster="Unk.GetType", file="SucceededState.cs", label="Entry Unk.GetType", span=""];
m23_105 [cluster="System.Collections.Generic.List<T>.List(int)", file="SucceededState.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m23_76 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SucceededState.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m23_137 [cluster="List<string>.cstr", file="SucceededState.cs", label="Entry List<string>.cstr", span=""];
m23_108 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SucceededState.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m23_39 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116"];
m23_40 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="methodCall == null", span="118-118"];
m23_42 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="120-120"];
m23_41 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="throw new ArgumentNullException(''methodCall'');", span="118-118"];
m23_43 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="callExpression == null", span="121-121"];
m23_45 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="return new Job(\r\n                callExpression.Method.DeclaringType, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="130-133"];
m23_44 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="123-123"];
m23_46 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.cs", label="Exit HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116"];
m23_57 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="Method.DeclaringType == null", span="161-161"];
m23_58 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="163-163"];
m23_59 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="166-166"];
m23_60 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="168-171"];
m23_61 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="!Method.IsPublic", span="174-174"];
m23_62 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="176-176"];
m23_63 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="var parameters = Method.GetParameters()", span="179-179"];
m23_64 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="parameters.Length != Arguments.Length", span="181-181"];
m23_66 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label=parameters, span="186-186"];
m23_65 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'', ''arguments'');", span="183-183"];
m23_67 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="parameter.IsOut", span="192-192"];
m23_69 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="parameter.ParameterType.IsByRef", span="198-198"];
m23_68 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="194-195"];
m23_70 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="200-201"];
m23_71 [cluster="HangFire.Common.Job.Validate()", file="SucceededState.cs", label="Exit HangFire.Common.Job.Validate()", span="159-159"];
m23_107 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="SucceededState.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m23_75 [cluster="System.Reflection.MethodBase.GetParameters()", file="SucceededState.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m23_122 [cluster="System.IDisposable.Dispose()", file="SucceededState.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m23_148 [cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="SucceededState.cs", label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m23_26 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="SucceededState.cs", label="Entry HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="88-88"];
m23_27 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="SucceededState.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="90-92"];
m23_28 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="SucceededState.cs", label="Exit HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="88-88"];
m23_49 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="143-143"];
m23_50 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="methodCall == null", span="145-145"];
m23_52 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="147-147"];
m23_51 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="throw new ArgumentNullException(''methodCall'');", span="145-145"];
m23_53 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="callExpression == null", span="148-148"];
m23_55 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="153-156"];
m23_54 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="150-150"];
m23_56 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededState.cs", label="Exit HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="143-143"];
m23_149 [file="SucceededState.cs", label="HangFire.Common.Job", span=""];
m24_9 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SucceededStateHandler.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m24_5 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="SucceededStateHandler.cs", label="_context = new Lazy<StateContext>(\r\n                () => new StateContext(JobIdValue, JobValue, CreatedAtValue, ConnectionValue.Object, StateMachineValue.Object))", span="19-20"];
m24_0 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="7-7"];
m24_1 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededStateHandler.cs", label="0: context.Transaction.InsertToList(''succeeded'', context.JobId)", span="9-9"];
m24_2 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededStateHandler.cs", label="0: context.Transaction.TrimList(''succeeded'', 0, 99)", span="10-10"];
m24_3 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext)", span="7-7"];
m24_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="30-30"];
m24_6 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="13-13"];
m24_7 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="SucceededStateHandler.cs", label="0: Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m24_8 [cluster="Mock<IStorageConnection>.cstr", file="SucceededStateHandler.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m24_17 [cluster="StateContext.cstr", file="SucceededStateHandler.cs", label="Entry StateContext.cstr", span=""];
m24_13 [cluster="System.Console.WriteLine()", file="SucceededStateHandler.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m24_14 [cluster="lambda expression", file="SucceededStateHandler.cs", label="Entry lambda expression", span="20-20"];
m24_10 [cluster="lambda expression", file="SucceededStateHandler.cs", label="Entry lambda expression", span="15-15"];
m24_11 [cluster="lambda expression", color=red, community=0, file="SucceededStateHandler.cs", label="0: Console.WriteLine()", span="15-15"];
m24_12 [cluster="lambda expression", file="SucceededStateHandler.cs", label="Exit lambda expression", span="15-15"];
m24_15 [cluster="lambda expression", file="SucceededStateHandler.cs", label="new StateContext(JobIdValue, JobValue, CreatedAtValue, ConnectionValue.Object, StateMachineValue.Object)", span="20-20"];
m24_16 [cluster="lambda expression", file="SucceededStateHandler.cs", label="Exit lambda expression", span="20-20"];
m24_18 [file="SucceededStateHandler.cs", label="Hangfire.Core.Tests.StateContextMock", span=""];
m25_28 [cluster="Unk.IncrementCounter", file="SucceededStateHandlerFacts.cs", label="Entry Unk.IncrementCounter", span=""];
m25_29 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", span="46-46"];
m25_30 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="SucceededStateHandlerFacts.cs", label="var handler = new SucceededState.Handler()", span="48-48"];
m25_6 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m25_10 [cluster="Mock<JobState>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<JobState>.cstr", span=""];
m25_13 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="SucceededStateHandlerFacts.cs", label="var handler = new SucceededState.Handler()", span="32-32"];
m25_16 [cluster="HangFire.States.SucceededState.Handler.Handler()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.States.SucceededState.Handler.Handler()", span="38-38"];
m25_11 [cluster="StateApplyingContext.cstr", file="SucceededStateHandlerFacts.cs", label="Entry StateApplyingContext.cstr", span=""];
m25_12 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="30-30"];
m25_14 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(SucceededState.Name, handler.StateName)", span="33-33"];
m25_15 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="30-30"];
m25_17 [cluster="Unk.Equal", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Equal", span=""];
m25_18 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", span="37-37"];
m25_0 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m25_1 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="SucceededStateHandlerFacts.cs", label="var methodInfo = typeof(SucceededStateHandlerFacts)\r\n                .GetMethod(''TestMethod'')", span="20-21"];
m25_2 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="SucceededStateHandlerFacts.cs", label="var jobMethod = new JobMethod(typeof(SucceededStateHandlerFacts), methodInfo)", span="22-22"];
m25_20 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="22-22"];
m25_21 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22"];
m25_19 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="SucceededStateHandlerFacts.cs", label="var handler = new SucceededState.Handler()", span="39-39"];
m25_22 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m25_7 [cluster="HangFire.Perform.Async(System.Type)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Perform.Async(System.Type)", span="63-63"];
m25_41 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="SucceededStateHandlerFacts.cs", label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", span=""];
m25_3 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: var stateContext = new StateContext(JobId, jobMethod)", span="23-23"];
m25_4 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", color=red, community=0, file="SucceededStateHandlerFacts.cs", label="1: var stateMock = new Mock<JobState>()", span="24-24"];
m25_5 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="1: _context = new StateApplyingContext(stateContext, _transactionMock.Object, stateMock.Object)", span="26-26"];
m25_23 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext)", span="40-40"];
m25_43 [cluster="HangFire.Perform.GenerateId()", file="SucceededStateHandlerFacts.cs", label="return Guid.NewGuid().ToString();", span="185-185"];
m25_44 [cluster="HangFire.Perform.GenerateId()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Perform.GenerateId()", span="183-183"];
m25_8 [cluster="HangFire.Perform.Async(System.Type)", file="SucceededStateHandlerFacts.cs", label="return Async(type, null);", span="65-65"];
m25_31 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="167-167"];
m25_32 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="148-148"];
m25_33 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="SucceededStateHandlerFacts.cs", label="return In(delay, type, null);", span="150-150"];
m25_34 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="46-46"];
m25_35 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="51-51"];
m25_36 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.DecrementCounter(''stats:succeeded'')", span="51-51"];
m25_38 [cluster="Unk.DecrementCounter", file="SucceededStateHandlerFacts.cs", label="Entry Unk.DecrementCounter", span=""];
m25_37 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="51-51"];
m25_39 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="SucceededStateHandlerFacts.cs", label="return uniqueId;", span="175-175"];
m25_40 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="167-167"];
m25_46 [cluster="System.Guid.ToString()", file="SucceededStateHandlerFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m25_25 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="42-42"];
m25_26 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.IncrementCounter(''stats:succeeded'')", span="42-42"];
m25_27 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="42-42"];
m25_42 [cluster="System.DateTime.Add(System.TimeSpan)", file="SucceededStateHandlerFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m25_9 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m25_45 [cluster="System.Guid.NewGuid()", file="SucceededStateHandlerFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m25_24 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="65-65"];
m26_8 [cluster="Unk.NotNull", file="TestStateChangedFilter.cs", label="Entry Unk.NotNull", span=""];
m26_10 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TestStateChangedFilter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m26_11 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m26_12 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Assert.NotNull(context)", span="29-29"];
m26_13 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="TestStateChangedFilter.cs", label="2: _results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="31-31"];
m26_14 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m26_0 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateChangedFilter.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m26_1 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateChangedFilter.cs", label="_name = name", span="16-16"];
m26_2 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateChangedFilter.cs", label="_results = results", span="17-17"];
m26_3 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateChangedFilter.cs", label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m26_9 [cluster="string.Format(string, object, object)", file="TestStateChangedFilter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m26_4 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m26_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="TestStateChangedFilter.cs", label="0: Assert.NotNull(context)", span="22-22"];
m26_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24"];
m26_7 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m26_15 [file="TestStateChangedFilter.cs", label="HangFire.Tests.TestStateChangedFilter", span=""];
m27_40 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="95-96"];
m27_54 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters are executed depending on their order'', ((string[])(null)))", span="115-115"];
m27_26 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="66-66"];
m27_25 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Exit HangFire.Server.Worker.Dispose()", span="67-67"];
m27_29 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_logger.DebugFormat(''Worker #{0} has been started.'', _context.WorkerNumber)", span="88-88"];
m27_89 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m27_27 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m27_28 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Entry HangFire.Server.Worker.DoWork()", span="84-84"];
m27_83 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", span="147-147"];
m27_41 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="97-98"];
m27_12 [cluster="System.Threading.Thread.Start()", file="Worker.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m27_82 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="this.ScenarioCleanup()", span="176-176"];
m27_0 [cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", span="43-43"];
m27_1 [cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs", label="_storage = storage", span="45-45"];
m27_2 [cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs", label="_context = context", span="46-46"];
m27_3 [cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs", label="_logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', context.WorkerNumber))", span="48-48"];
m27_4 [cluster="HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.JobStorage, HangFire.Server.WorkerContext)", span="43-43"];
m27_80 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="171-172"];
m27_79 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="table3.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="169-170"];
m27_84 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="183-183"];
m27_17 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m27_13 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Entry HangFire.Server.Worker.Stop()", span="61-61"];
m27_14 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="_stopSent = true", span="63-63"];
m27_15 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="_cts.Cancel()", span="64-64"];
m27_16 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Exit HangFire.Server.Worker.Stop()", span="61-61"];
m27_52 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="95-120"];
m27_98 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", span="215-215"];
m27_99 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter can handle the exception'', ((string[])(null)))", span="217-217"];
m27_100 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="219-219"];
m27_101 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="this.FeatureBackground()", span="221-221"];
m27_114 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="this.ScenarioCleanup()", span="248-248"];
m27_102 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="223-223"];
m27_113 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''no exception were thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="246-246"];
m27_103 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="225-225"];
m27_104 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="227-227"];
m27_112 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="testRunner.Then(''the client filter methods were executed in the following order:'', ((string)(null)), table5, ''Then '')", span="244-244"];
m27_105 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="229-229"];
m27_106 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="231-232"];
m27_111 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="241-242"];
m27_107 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="233-234"];
m27_108 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="235-236"];
m27_109 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="table5.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="237-238"];
m27_110 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="239-240"];
m27_115 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", span="215-215"];
m27_57 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="121-121"];
m27_6 [cluster="Unk.GetLogger", file="Worker.cs", label="Entry Unk.GetLogger", span=""];
m27_86 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, file="Worker.cs", label="2: this.ScenarioSetup(scenarioInfo)", span="187-187"];
m27_30 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="71-71"];
m27_31 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="Worker.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m27_33 [cluster="Unk.Given", file="Worker.cs", label="Entry Unk.Given", span=""];
m27_35 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters are executed when I create a job'', ((string[])(null)))", span="85-85"];
m27_32 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="71-71"];
m27_34 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", span="83-83"];
m27_36 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="87-87"];
m27_37 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="this.FeatureBackground()", span="89-89"];
m27_87 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", color=green, community=0, file="Worker.cs", label="2: this.FeatureBackground()", span="189-189"];
m27_53 [cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m27_55 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="22-22"];
m27_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", span="135-135"];
m27_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="var jobMethod = JobMethod.Deserialize(payload.InvocationData)", span="161-161"];
m27_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="IJobPerformStrategy performStrategy", span="159-159"];
m27_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="payload == null", span="137-137"];
m27_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="var stateMachine = new StateMachine(connection)", span="142-142"];
m27_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="JobState state", span="155-155"];
m27_59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="return;", span="139-139"];
m27_61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="var processingState = new ProcessingState(_context.ServerName)", span="144-144"];
m27_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="!stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name, ProcessingState.Name)", span="145-145"];
m27_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="return;", span="147-147"];
m27_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="Worker.cs", label="jobMethod.OldFormat", span="162-162"];
m27_85 [cluster="HangFire.Server.Performing.JobAsMethodPerformStrategy.JobAsMethodPerformStrategy(HangFire.Common.JobMethod, string[])", color=green, community=0, file="Worker.cs", label="2: Entry HangFire.Server.Performing.JobAsMethodPerformStrategy.JobAsMethodPerformStrategy(HangFire.Common.JobMethod, string[])", span="30-30"];
m27_88 [cluster="HangFire.States.SucceededState.SucceededState()", color=green, community=0, file="Worker.cs", label="2: Entry HangFire.States.SucceededState.SucceededState()", span="23-23"];
m27_96 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="this.ScenarioCleanup()", span="208-208"];
m27_90 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="HangFire.Server.Worker", span=""];
m27_95 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="testRunner.Then(''only the following client filter methods were executed:'', ((string)(null)), table4, ''Then '')", span="206-206"];
m27_91 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="197-198"];
m27_94 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="203-204"];
m27_92 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="199-200"];
m27_93 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="table4.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="201-202"];
m27_97 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="183-183"];
m27_22 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_thread.Join()", span="76-76"];
m27_23 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_thread = null", span="77-77"];
m27_24 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_cts.Dispose()", span="80-80"];
m27_39 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="Worker.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="93-93"];
m27_7 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Entry HangFire.Server.Worker.Start()", span="51-51"];
m27_8 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_thread = new Thread(DoWork)\r\n            {\r\n                Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                IsBackground = true\r\n            }", span="53-57"];
m27_9 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_thread.Start()", span="58-58"];
m27_10 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Exit HangFire.Server.Worker.Start()", span="51-51"];
m27_142 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", span="316-316"];
m27_143 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Exception filter can handle the exception'', ((string[])(null)))", span="318-318"];
m27_144 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="320-320"];
m27_145 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="this.FeatureBackground()", span="322-322"];
m27_157 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="this.ScenarioCleanup()", span="347-347"];
m27_146 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="324-324"];
m27_156 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''no exception were thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="345-345"];
m27_147 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="326-326"];
m27_148 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="328-328"];
m27_150 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="332-332"];
m27_155 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.Then(''the following exceptions filter were executed:'', ((string)(null)), table7, ''Then '')", span="343-343"];
m27_149 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="330-330"];
m27_151 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="334-335"];
m27_154 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''third''})", span="340-341"];
m27_152 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''first''})", span="336-337"];
m27_153 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="table7.AddRow(new string[] {\r\n                        ''second''})", span="338-339"];
m27_158 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", span="316-316"];
m27_48 [cluster="lambda expression", file="Worker.cs", label="_cts.Cancel()", span="104-104"];
m27_45 [cluster="lambda expression", file="Worker.cs", label="var fetcher = connection.CreateFetcher(_context.QueueNames)", span="99-99"];
m27_38 [cluster="Unk.DebugFormat", file="Worker.cs", label="Entry Unk.DebugFormat", span=""];
m27_44 [cluster="lambda expression", file="Worker.cs", label="var connection = _storage.GetConnection()", span="97-97"];
m27_43 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="95-120"];
m27_42 [cluster="Unk.Fatal", file="Worker.cs", label="Entry Unk.Fatal", span=""];
m27_46 [cluster="lambda expression", file="Worker.cs", label="var payload = fetcher.DequeueJob(_cts.Token)", span="100-100"];
m27_50 [cluster="lambda expression", file="Worker.cs", label="PerformJob(connection, payload)", span="108-108"];
m27_51 [cluster="Unk.Then", file="Worker.cs", label="Entry Unk.Then", span=""];
m27_47 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m27_49 [cluster="TechTalk.SpecFlow.Table.cstr", file="Worker.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m27_81 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="testRunner.And(''only the following client filter methods were executed:'', ((string)(null)), table3, ''And '')", span="174-174"];
m27_127 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", span="282-282"];
m27_128 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters are executed depending on their order'', ((string[])(null)))", span="284-284"];
m27_129 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="286-286"];
m27_130 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="this.FeatureBackground()", span="288-288"];
m27_140 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="this.ScenarioCleanup()", span="309-309"];
m27_131 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="290-290"];
m27_139 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.And(''the CreateJobFailedException was thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="307-307"];
m27_132 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="292-292"];
m27_134 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="296-296"];
m27_138 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.Then(''the client exception filters were executed in the following order:'', ((string)(null)), table6, ''Then '')", span="305-305"];
m27_133 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="294-294"];
m27_135 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="298-299"];
m27_137 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="table6.AddRow(new string[] {\r\n                        ''second''})", span="302-303"];
m27_136 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="table6.AddRow(new string[] {\r\n                        ''first''})", span="300-301"];
m27_141 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", span="282-282"];
m27_68 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", span="147-147"];
m27_70 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="151-151"];
m27_72 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="155-155"];
m27_77 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="165-166"];
m27_69 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter can cancel the creation of the job'', ((string[])(null)))", span="149-149"];
m27_71 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="this.FeatureBackground()", span="153-153"];
m27_73 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="157-157"];
m27_74 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="159-159"];
m27_75 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="161-161"];
m27_76 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", color=red, community=0, file="Worker.cs", label="2: testRunner.Then(''the storage does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="163-163"];
m27_78 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="Worker.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="167-168"];
m27_18 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Entry HangFire.Server.Worker.Dispose()", span="67-67"];
m27_19 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="!_stopSent", span="69-69"];
m27_20 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Stop()", span="71-71"];
m27_21 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_thread != null", span="74-74"];
m27_11 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Worker.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m27_116 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="256-256"];
m27_117 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters are executed when there was an exception while creating '' +\r\n                    ''a job'', ((string[])(null)))", span="258-259"];
m27_118 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="this.ScenarioSetup(scenarioInfo)", span="261-261"];
m27_119 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="this.FeatureBackground()", span="263-263"];
m27_125 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="this.ScenarioCleanup()", span="275-275"];
m27_120 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="265-265"];
m27_124 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="testRunner.And(''the CreateJobFailedException was thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="273-273"];
m27_122 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="269-269"];
m27_121 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="267-267"];
m27_123 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="testRunner.Then(''the client exception filter was executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="271-271"];
m27_126 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="Worker.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="256-256"];
m27_159 [file="Worker.cs", label="HangFire.Tests.ClientFiltersFeature", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n2 -> n6  [key=2, style=dotted];
n4 -> n7  [key=0, style=solid];
n4 -> n10  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
n4 -> n11  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
n4 -> n13  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
n4 -> n0  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
n4 -> n38  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
n4 -> n14  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
n3 -> n0  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n19  [key=2, style=dotted];
n11 -> n20  [key=2, style=dotted];
n11 -> n21  [key=2, style=dotted];
n11 -> n14  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n13 -> n20  [key=2, style=dotted];
n13 -> n21  [key=2, style=dotted];
n8 -> n17  [key=0, style=solid];
n8 -> n18  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n9 -> n14  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n9 -> n9  [color=darkorchid, key=3, label="Local variable HangFire.QueueAttribute attribute", style=bold];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n14 -> n16  [color=darkseagreen4, key=1, label=queueName, style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n23  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n23 -> n27  [color=darkseagreen4, key=1, label=string, style=dashed];
n23 -> n14  [color=darkorchid, key=3, label="Parameter variable string queue", style=bold];
n17 -> n4  [color=blue, key=0, style=bold];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n29  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=0, style=solid];
n26 -> n30  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n31  [key=2, style=dotted];
n27 -> n32  [key=2, style=dotted];
n25 -> n28  [key=0, style=solid];
n25 -> n18  [key=2, style=dotted];
n28 -> n23  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
n34 -> n35  [color=red, key=0, style=solid];
n34 -> n4  [key=2, style=dotted];
n35 -> n36  [color=red, key=0, style=solid];
n35 -> n37  [color=red, key=2, style=dotted];
n36 -> n33  [color=blue, key=0, style=bold];
n36 -> d33  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
n38 -> n9  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
n38 -> n4  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n4  [key=2, style=dotted];
n40 -> n42  [key=0, style=solid];
n42 -> n38  [color=blue, key=0, style=bold];
d34 -> d35  [color=green, key=0, style=solid];
d34 -> n4  [color=green, key=2, style=dotted];
d33 -> d34  [color=green, key=0, style=solid];
d33 -> d35  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
d35 -> n36  [key=0, style=solid];
d35 -> n37  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_9  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_2 -> m0_6  [key=0, style=solid];
m0_2 -> n18  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_6 -> m0_0  [color=blue, key=0, style=bold];
m0_14 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.States.ProcessingState", style=dashed];
m0_14 -> m0_4  [color=darkseagreen4, key=1, label="Hangfire.States.ProcessingState", style=dashed];
m0_14 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.States.ProcessingState", style=dashed];
m0_14 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.States.ProcessingState", style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_3 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_2 -> m2_9  [key=0, style=solid];
m2_2 -> n18  [key=2, style=dotted];
m2_4 -> m2_9  [key=0, style=solid];
m2_4 -> n18  [key=2, style=dotted];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_12  [color=blue, key=0, style=bold];
m2_14 -> m2_5  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m2_14 -> m2_6  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m2_14 -> m2_7  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m2_14 -> m2_8  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m9_29 -> m9_4  [color=darkorchid, key=3, label="Field variable System.Func<HangFire.Common.JobMethod, System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>> _getFiltersThunk", style=bold];
m9_51 -> m9_52  [color=green, key=0, style=solid];
m9_51 -> m9_53  [color=green, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m9_51 -> m9_54  [color=green, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m9_51 -> m9_57  [color=darkseagreen4, key=1, label="System.Func<HangFire.Server.Filters.PerformedContext>", style=dashed];
m9_51 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.PerformingContext", style=dashed];
m9_51 -> m9_61  [color=red, key=1, label="HangFire.Server.Filters.IServerFilter", style=dashed];
m9_51 -> m9_65  [color=green, key=1, label="HangFire.Server.Filters.IServerFilter", style=dashed];
m9_51 -> m9_56  [color=green, key=3, label="method methodReturn HangFire.Server.Filters.PerformedContext InvokePerformFilter", style=bold];
m9_52 -> m9_53  [color=green, key=0, style=solid];
m9_52 -> m9_68  [color=green, key=2, style=dotted];
m9_53 -> m9_54  [color=green, key=0, style=solid];
m9_53 -> m9_55  [color=green, key=0, style=solid];
m9_54 -> m9_67  [color=green, key=0, style=solid];
m9_54 -> m9_45  [color=green, key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_64  [key=0, style=solid];
m9_57 -> m9_69  [key=2, style=dotted];
m9_60 -> m9_61  [color=red, key=0, style=solid];
m9_60 -> m9_45  [key=2, style=dotted];
m9_60 -> m9_62  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m9_60 -> m9_65  [color=green, key=1, label=postContext, style=dashed];
m9_60 -> m9_66  [color=green, key=1, label=postContext, style=dashed];
m9_61 -> m9_62  [color=red, key=0, style=solid];
m9_61 -> m9_70  [color=red, key=2, style=dotted];
m9_65 -> m9_66  [color=green, key=0, style=solid];
m9_65 -> m9_70  [color=green, key=2, style=dotted];
m9_55 -> m9_56  [color=green, key=0, style=solid];
m9_55 -> m9_55  [color=green, key=3, label="Local variable bool wasError", style=bold];
m9_56 -> m9_57  [color=green, key=0, style=solid];
m9_58 -> m9_59  [key=0, style=solid];
m9_64 -> m9_65  [color=green, key=0, style=solid];
m9_64 -> m9_66  [color=green, key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_64  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [key=0, style=solid];
m9_66 -> m9_67  [color=green, key=0, style=solid];
m9_63 -> m9_67  [key=0, style=solid];
m9_67 -> m9_51  [color=blue, key=0, style=bold];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m9_19 -> m9_23  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_14  [key=2, style=dotted];
m9_20 -> m9_24  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_27  [key=0, style=solid];
m9_21 -> m9_28  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_29  [key=2, style=dotted];
m9_23 -> m9_25  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_30  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_19  [color=blue, key=0, style=bold];
m9_28 -> m9_31  [key=0, style=solid];
m9_28 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m9_28 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.IJobPerformStrategy", style=dashed];
m9_28 -> m9_42  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m9_28 -> m9_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Server.Filters.IServerFilter>", style=dashed];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_36  [key=2, style=dotted];
m9_31 -> m9_33  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m9_31 -> m9_49  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_32  [color=darkorchid, key=3, label="Local variable System.Func<HangFire.Server.Filters.PerformedContext> continuation", style=bold];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_37  [key=2, style=dotted];
m9_33 -> m9_38  [key=2, style=dotted];
m9_33 -> m9_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_39  [key=2, style=dotted];
m9_35 -> m9_28  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m9_2 -> m9_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_2  [color=blue, key=0, style=bold];
m9_48 -> m9_49  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_9  [key=2, style=dotted];
m9_7 -> m9_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_6 -> m9_7  [key=0, style=solid];
m9_8 -> m9_6  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=2, style=dotted];
m9_12 -> m9_10  [color=blue, key=0, style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_44  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_45  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_51  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_33  [color=darkseagreen4, key=1, label="System.Func<HangFire.Server.Filters.PerformedContext>", style=dashed];
m9_46 -> m9_49  [color=darkseagreen4, key=1, label="System.Func<HangFire.Server.Filters.PerformedContext>", style=dashed];
m9_40 -> m9_41  [key=0, style=solid];
m9_43 -> m9_40  [color=blue, key=0, style=bold];
m9_47 -> m9_46  [color=blue, key=0, style=bold];
m9_50 -> m9_48  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=2, style=dotted];
m9_15 -> m9_18  [key=2, style=dotted];
m9_16 -> m9_14  [color=blue, key=0, style=bold];
m9_30 -> m9_71  [color=green, key=0, style=solid];
m9_30 -> m9_72  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.ServerExceptionContext", style=dashed];
m9_71 -> m9_72  [color=green, key=0, style=solid];
m9_71 -> m9_73  [color=green, key=0, style=solid];
m9_71 -> m9_37  [color=green, key=2, style=dotted];
m9_72 -> m9_71  [color=green, key=0, style=solid];
m9_72 -> m9_74  [key=2, style=dotted];
m9_73 -> m9_30  [color=blue, key=0, style=bold];
m9_75 -> m9_4  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.JobPerformer", style=dashed];
m9_75 -> m9_15  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.JobPerformer", style=dashed];
m9_75 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.JobPerformer", style=dashed];
m9_76 -> m9_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m9_77 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.IJobPerformStrategy", style=dashed];
m9_78 -> m9_42  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m9_79 -> m9_49  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m9_80 -> m9_49  [color=darkseagreen4, key=1, label="System.Func<HangFire.Server.Filters.PerformedContext>", style=dashed];
m9_81 -> m9_49  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.IServerFilter", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> n5  [key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m12_5 -> m12_6  [color=green, key=0, style=solid];
m12_6 -> m12_7  [color=green, key=0, style=solid];
m12_6 -> m12_8  [color=green, key=2, style=dotted];
m12_7 -> m12_5  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [color=green, key=0, style=solid];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_3  [color=green, key=2, style=dotted];
m12_1 -> m12_4  [color=green, key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m13_13 -> m13_14  [key=0, style=solid];
m13_0 -> m13_9  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_0 -> m13_10  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m13_0 -> m13_11  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachine", style=dashed];
m13_0 -> m13_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m13_0 -> m13_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachine", style=dashed];
m13_0 -> m13_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_8  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m13_2 -> n18  [key=2, style=dotted];
m13_2 -> m13_14  [key=0, style=solid];
m13_2 -> m13_12  [key=0, style=solid];
m13_2 -> m13_13  [key=2, style=dotted];
m13_4 -> n18  [key=2, style=dotted];
m13_4 -> m13_14  [key=0, style=solid];
m13_4 -> m13_12  [key=0, style=solid];
m13_4 -> m13_13  [key=2, style=dotted];
m13_6 -> n18  [key=2, style=dotted];
m13_6 -> m13_14  [key=0, style=solid];
m13_6 -> m13_12  [key=0, style=solid];
m13_6 -> m13_13  [key=2, style=dotted];
m13_8 -> n18  [key=2, style=dotted];
m13_8 -> m13_14  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_16  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_0  [color=blue, key=0, style=bold];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=0, style=solid];
m13_5 -> m13_14  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_9  [key=0, style=solid];
m13_14 -> m13_0  [color=blue, key=0, style=bold];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_26 -> m13_22  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_28  [key=0, style=solid];
m13_27 -> n18  [key=2, style=dotted];
m13_27 -> m13_29  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_30  [key=2, style=dotted];
m13_28 -> m13_31  [key=2, style=dotted];
m13_29 -> m13_25  [color=blue, key=0, style=bold];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_15  [color=blue, key=0, style=bold];
m13_32 -> m13_33  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_36  [key=2, style=dotted];
m13_33 -> m13_37  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_38  [key=2, style=dotted];
m13_35 -> m13_32  [color=blue, key=0, style=bold];
m13_17 -> m13_18  [color=green, key=0, style=solid];
m13_17 -> m13_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_17 -> m13_7  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m13_17 -> m13_8  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m13_17 -> m13_9  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m13_17 -> m13_10  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m13_17 -> m13_11  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m13_18 -> m13_19  [color=green, key=0, style=solid];
m13_18 -> m13_20  [color=green, key=0, style=solid];
m13_18 -> m13_22  [color=green, key=2, style=dotted];
m13_19 -> m13_21  [color=green, key=0, style=solid];
m13_19 -> n18  [color=green, key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_23  [key=2, style=dotted];
m13_20 -> m13_24  [key=2, style=dotted];
m13_21 -> m13_17  [color=blue, key=0, style=bold];
m13_39 -> m13_20  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_9  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_10  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_11  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_12  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_28  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_33  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m13_39 -> m13_34  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_6  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_7 -> m14_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m14_7 -> m14_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m14_7 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m15_14 -> m15_15  [key=0, style=solid];
m15_5 -> m15_3  [color=blue, key=0, style=bold];
m15_13 -> m15_10  [color=blue, key=0, style=bold];
m15_32 -> m15_33  [color=green, key=0, style=solid];
m15_33 -> m15_34  [color=green, key=0, style=solid];
m15_33 -> m15_23  [color=green, key=2, style=dotted];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_38  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_39  [key=2, style=dotted];
m15_35 -> m15_40  [key=2, style=dotted];
m15_35 -> m15_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_41  [key=2, style=dotted];
m15_37 -> m15_32  [color=blue, key=0, style=bold];
m15_8 -> m15_9  [color=red, key=0, style=solid];
m15_8 -> m15_11  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m15_8 -> m15_6  [color=blue, key=0, style=bold];
m15_9 -> m15_10  [color=red, key=0, style=solid];
m15_9 -> m15_13  [color=red, key=2, style=dotted];
m15_11 -> m15_12  [color=red, key=0, style=solid];
m15_11 -> m15_15  [color=red, key=2, style=dotted];
m15_11 -> m15_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_11 -> m15_4  [key=2, style=dotted];
m15_10 -> m15_11  [color=red, key=0, style=solid];
m15_10 -> m15_14  [key=2, style=dotted];
m15_12 -> m15_8  [color=blue, key=0, style=bold];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_5  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> n5  [key=2, style=dotted];
m15_4 -> m15_7  [key=2, style=dotted];
m15_23 -> m15_46  [key=0, style=solid];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_17  [key=2, style=dotted];
m15_46 -> m15_48  [key=2, style=dotted];
m15_46 -> m15_49  [key=2, style=dotted];
m15_47 -> m15_23  [color=blue, key=0, style=bold];
m15_17 -> m15_18  [color=red, key=0, style=solid];
m15_17 -> m15_19  [color=red, key=2, style=dotted];
m15_15 -> m15_17  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_42 -> m15_43  [key=0, style=solid];
m15_44 -> m15_42  [color=blue, key=0, style=bold];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_45  [key=2, style=dotted];
m15_16 -> m15_14  [color=blue, key=0, style=bold];
m15_16 -> m15_17  [color=red, key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_9  [key=2, style=dotted];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_23  [key=2, style=dotted];
m15_27 -> m15_28  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_31  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_25  [key=2, style=dotted];
m15_30 -> m15_26  [color=blue, key=0, style=bold];
m15_18 -> m15_16  [color=blue, key=0, style=bold];
m15_18 -> m15_19  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_0  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_4  [key=2, style=dotted];
m15_1 -> m15_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_2 -> m15_5  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_19 -> m15_23  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_24  [key=2, style=dotted];
m15_20 -> m15_1  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m15_20 -> m15_4  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [key=2, style=dotted];
m15_22 -> m15_18  [color=blue, key=0, style=bold];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_3  [key=2, style=dotted];
m16_5 -> m16_7  [key=2, style=dotted];
m16_6 -> m16_4  [color=blue, key=0, style=bold];
m16_52 -> m16_53  [key=0, style=solid];
m16_53 -> m16_35  [key=2, style=dotted];
m16_53 -> m16_47  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_54 -> m16_52  [color=blue, key=0, style=bold];
m16_58 -> m16_59  [key=0, style=solid];
m16_59 -> m16_35  [key=2, style=dotted];
m16_59 -> m16_47  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_60 -> m16_58  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_10  [key=2, style=dotted];
m16_17 -> m16_17  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m16_17 -> m16_19  [key=2, style=dotted];
m16_17 -> n32  [key=2, style=dotted];
m16_18 -> m16_16  [color=blue, key=0, style=bold];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_8  [color=blue, key=0, style=bold];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_14  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_15  [key=2, style=dotted];
m16_13 -> m16_10  [color=blue, key=0, style=bold];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_3  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=2, style=dotted];
m16_9 -> m16_7  [color=blue, key=0, style=bold];
m16_61 -> m16_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_61 -> m16_62  [key=0, style=solid];
m16_63 -> m16_33  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_38  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_65  [key=2, style=dotted];
m16_62 -> m16_66  [key=2, style=dotted];
m16_64 -> m16_61  [color=blue, key=0, style=bold];
m16_39 -> m16_40  [color=green, key=0, style=solid];
m16_39 -> m16_41  [color=green, key=1, label=string, style=dashed];
m16_39 -> m16_42  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.StateAndInvocationData GetJobStateAndInvocationData", style=bold];
m16_40 -> m16_40  [color=green, key=3, label="Local variable string sql", style=bold];
m16_40 -> m16_41  [color=green, key=0, style=solid];
m16_41 -> m16_42  [color=green, key=0, style=solid];
m16_41 -> m16_35  [color=green, key=2, style=dotted];
m16_41 -> m16_47  [color=green, key=2, style=dotted];
m16_41 -> m16_44  [color=green, key=1, label=job, style=dashed];
m16_41 -> m16_45  [color=green, key=1, label=job, style=dashed];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_44  [key=0, style=solid];
m16_44 -> m16_45  [color=green, key=0, style=solid];
m16_44 -> m16_35  [key=2, style=dotted];
m16_45 -> m16_46  [color=green, key=0, style=solid];
m16_45 -> m16_48  [color=green, key=2, style=dotted];
m16_43 -> m16_46  [key=0, style=solid];
m16_46 -> m16_39  [color=blue, key=0, style=bold];
m16_14 -> m16_12  [color=blue, key=0, style=bold];
m16_73 -> m16_74  [key=0, style=solid];
m16_74 -> m16_34  [key=2, style=dotted];
m16_74 -> m16_74  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_76  [key=2, style=dotted];
m16_74 -> m16_38  [key=2, style=dotted];
m16_75 -> m16_73  [color=blue, key=0, style=bold];
m16_7 -> m16_8  [key=0, style=solid];
m16_19 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m16_19 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m16_19 -> m16_8  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m16_19 -> m16_11  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m16_19 -> m16_12  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m16_19 -> m16_17  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m16_49 -> m16_50  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_38  [key=2, style=dotted];
m16_51 -> m16_49  [color=blue, key=0, style=bold];
m16_3 -> m16_0  [color=blue, key=0, style=bold];
m16_67 -> m16_68  [key=0, style=solid];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_38  [key=2, style=dotted];
m16_69 -> m16_67  [color=blue, key=0, style=bold];
m16_21 -> m16_22  [color=green, key=0, style=solid];
m16_21 -> m16_23  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m16_21 -> m16_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m16_21 -> m16_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m16_21 -> m16_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m16_22 -> m16_22  [color=green, key=3, label="Local variable string createJobSql", style=bold];
m16_22 -> m16_23  [color=green, key=0, style=solid];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_33  [key=2, style=dotted];
m16_23 -> m16_34  [key=2, style=dotted];
m16_23 -> m16_35  [key=2, style=dotted];
m16_23 -> m16_36  [key=2, style=dotted];
m16_23 -> m16_37  [key=2, style=dotted];
m16_23 -> m16_28  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_23 -> m16_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_31  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_28  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m16_25 -> m16_30  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_29  [key=0, style=solid];
m16_28 -> m16_27  [key=0, style=solid];
m16_28 -> m16_28  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_38  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m16_26 -> m16_26  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_29  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m16_32 -> m16_21  [color=blue, key=0, style=bold];
m16_70 -> m16_71  [key=0, style=solid];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_38  [key=2, style=dotted];
m16_72 -> m16_70  [color=blue, key=0, style=bold];
m16_55 -> m16_56  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_38  [key=2, style=dotted];
m16_57 -> m16_55  [color=blue, key=0, style=bold];
m16_77 -> m16_41  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_50  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_59  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_71  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m16_77 -> m16_74  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_112 -> m17_113  [key=0, style=solid];
m17_112 -> m17_46  [key=2, style=dotted];
m17_113 -> m17_63  [key=2, style=dotted];
m17_113 -> m17_114  [key=0, style=solid];
m17_114 -> m17_111  [color=blue, key=0, style=bold];
m17_103 -> m17_104  [key=0, style=solid];
m17_104 -> m17_105  [key=0, style=solid];
m17_104 -> m17_46  [key=2, style=dotted];
m17_105 -> m17_106  [key=0, style=solid];
m17_105 -> m17_69  [key=2, style=dotted];
m17_106 -> m17_103  [color=blue, key=0, style=bold];
m17_80 -> m17_81  [key=0, style=solid];
m17_80 -> m17_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_81 -> m17_82  [key=0, style=solid];
m17_81 -> m17_84  [key=2, style=dotted];
m17_82 -> m17_83  [key=0, style=solid];
m17_82 -> m17_85  [key=2, style=dotted];
m17_82 -> m17_86  [key=2, style=dotted];
m17_83 -> m17_80  [color=blue, key=0, style=bold];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_87 -> m17_92  [color=darkseagreen4, key=1, label=Table, style=dashed];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> n32  [key=2, style=dotted];
m17_88 -> m17_54  [key=2, style=dotted];
m17_88 -> m17_90  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_88 -> m17_91  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_89 -> m17_90  [key=0, style=solid];
m17_89 -> m17_55  [key=2, style=dotted];
m17_90 -> m17_57  [key=2, style=dotted];
m17_90 -> m17_91  [key=0, style=solid];
m17_90 -> m17_56  [key=2, style=dotted];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_58  [key=2, style=dotted];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_94  [key=2, style=dotted];
m17_93 -> m17_87  [color=blue, key=0, style=bold];
m17_95 -> m17_96  [key=0, style=solid];
m17_96 -> m17_97  [key=0, style=solid];
m17_96 -> m17_46  [key=2, style=dotted];
m17_97 -> m17_60  [key=2, style=dotted];
m17_97 -> m17_98  [key=0, style=solid];
m17_98 -> m17_95  [color=blue, key=0, style=bold];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> n32  [key=2, style=dotted];
m17_47 -> m17_54  [key=2, style=dotted];
m17_47 -> m17_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_47 -> m17_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_55  [key=2, style=dotted];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_56  [key=2, style=dotted];
m17_49 -> m17_57  [key=2, style=dotted];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_58  [key=2, style=dotted];
m17_51 -> m17_59  [key=2, style=dotted];
m17_51 -> m17_52  [key=0, style=solid];
m17_52 -> m17_46  [color=blue, key=0, style=bold];
m17_60 -> m17_61  [color=green, key=0, style=solid];
m17_61 -> m17_62  [color=green, key=0, style=solid];
m17_61 -> m17_63  [color=green, key=2, style=dotted];
m17_62 -> m17_60  [color=blue, key=0, style=bold];
m17_2 -> m17_25  [color=green, key=1, label=string, style=dashed];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_2 -> m17_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_25 -> m17_26  [color=green, key=0, style=solid];
m17_25 -> m17_27  [color=green, key=0, style=solid];
m17_25 -> m17_35  [color=green, key=2, style=dotted];
m17_23 -> m17_25  [color=green, key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_35  [key=2, style=dotted];
m17_26 -> m17_30  [key=0, style=solid];
m17_26 -> m17_32  [key=0, style=solid];
m17_26 -> m17_34  [key=0, style=solid];
m17_26 -> m17_36  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_29  [key=0, style=solid];
m17_27 -> m17_35  [key=2, style=dotted];
m17_3 -> m17_35  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_5  [key=0, style=solid];
m17_5 -> m17_35  [key=2, style=dotted];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=0, style=solid];
m17_7 -> m17_35  [key=2, style=dotted];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_9  [key=0, style=solid];
m17_9 -> m17_35  [key=2, style=dotted];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=0, style=solid];
m17_11 -> m17_35  [key=2, style=dotted];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_13  [key=0, style=solid];
m17_13 -> m17_35  [key=2, style=dotted];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [key=0, style=solid];
m17_15 -> m17_35  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_17  [key=0, style=solid];
m17_17 -> m17_35  [key=2, style=dotted];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_19  [key=0, style=solid];
m17_19 -> m17_35  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=0, style=solid];
m17_21 -> m17_23  [key=0, style=solid];
m17_21 -> m17_35  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_24 -> m17_34  [key=0, style=solid];
m17_24 -> m17_30  [key=0, style=solid];
m17_24 -> m17_32  [key=0, style=solid];
m17_24 -> m17_36  [key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_28 -> m17_34  [key=0, style=solid];
m17_28 -> m17_30  [key=0, style=solid];
m17_28 -> m17_32  [key=0, style=solid];
m17_28 -> m17_36  [key=2, style=dotted];
m17_29 -> m17_34  [key=0, style=solid];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_32  [key=0, style=solid];
m17_29 -> m17_45  [key=2, style=dotted];
m17_4 -> m17_34  [key=0, style=solid];
m17_4 -> m17_30  [key=0, style=solid];
m17_4 -> m17_32  [key=0, style=solid];
m17_4 -> m17_36  [key=2, style=dotted];
m17_6 -> m17_34  [key=0, style=solid];
m17_6 -> m17_30  [key=0, style=solid];
m17_6 -> m17_32  [key=0, style=solid];
m17_6 -> m17_37  [key=2, style=dotted];
m17_8 -> m17_34  [key=0, style=solid];
m17_8 -> m17_30  [key=0, style=solid];
m17_8 -> m17_32  [key=0, style=solid];
m17_8 -> m17_38  [key=2, style=dotted];
m17_10 -> m17_34  [key=0, style=solid];
m17_10 -> m17_30  [key=0, style=solid];
m17_10 -> m17_32  [key=0, style=solid];
m17_10 -> m17_38  [key=2, style=dotted];
m17_12 -> m17_34  [key=0, style=solid];
m17_12 -> m17_30  [key=0, style=solid];
m17_12 -> m17_32  [key=0, style=solid];
m17_12 -> m17_39  [key=2, style=dotted];
m17_14 -> m17_34  [key=0, style=solid];
m17_14 -> m17_30  [key=0, style=solid];
m17_14 -> m17_32  [key=0, style=solid];
m17_14 -> m17_39  [key=2, style=dotted];
m17_16 -> m17_34  [key=0, style=solid];
m17_16 -> m17_30  [key=0, style=solid];
m17_16 -> m17_32  [key=0, style=solid];
m17_16 -> m17_40  [key=2, style=dotted];
m17_16 -> m17_41  [key=2, style=dotted];
m17_18 -> m17_34  [key=0, style=solid];
m17_18 -> m17_30  [key=0, style=solid];
m17_18 -> m17_32  [key=0, style=solid];
m17_18 -> m17_40  [key=2, style=dotted];
m17_18 -> m17_42  [key=2, style=dotted];
m17_20 -> m17_34  [key=0, style=solid];
m17_20 -> m17_30  [key=0, style=solid];
m17_20 -> m17_32  [key=0, style=solid];
m17_20 -> m17_40  [key=2, style=dotted];
m17_20 -> m17_43  [key=2, style=dotted];
m17_22 -> m17_34  [key=0, style=solid];
m17_22 -> m17_30  [key=0, style=solid];
m17_22 -> m17_32  [key=0, style=solid];
m17_22 -> m17_40  [key=2, style=dotted];
m17_22 -> m17_44  [key=2, style=dotted];
m17_33 -> m17_34  [key=0, style=solid];
m17_31 -> m17_34  [key=0, style=solid];
m17_34 -> m17_2  [color=blue, key=0, style=bold];
m17_69 -> m17_70  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_76  [key=2, style=dotted];
m17_70 -> m17_57  [key=2, style=dotted];
m17_71 -> m17_72  [key=0, style=solid];
m17_71 -> m17_77  [key=2, style=dotted];
m17_72 -> m17_73  [key=0, style=solid];
m17_72 -> m17_78  [key=2, style=dotted];
m17_72 -> m17_74  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m17_73 -> m17_57  [key=2, style=dotted];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_79  [key=2, style=dotted];
m17_74 -> m17_57  [key=2, style=dotted];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_79  [key=2, style=dotted];
m17_75 -> m17_69  [color=blue, key=0, style=bold];
m17_99 -> m17_100  [key=0, style=solid];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_87  [key=2, style=dotted];
m17_101 -> m17_60  [key=2, style=dotted];
m17_101 -> m17_102  [key=0, style=solid];
m17_102 -> m17_99  [color=blue, key=0, style=bold];
m17_107 -> m17_108  [key=0, style=solid];
m17_108 -> m17_109  [key=0, style=solid];
m17_108 -> m17_87  [key=2, style=dotted];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_69  [key=2, style=dotted];
m17_110 -> m17_107  [color=blue, key=0, style=bold];
m17_63 -> m17_64  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_59  [key=2, style=dotted];
m17_64 -> m17_66  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> n32  [key=2, style=dotted];
m17_64 -> m17_68  [key=2, style=dotted];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_59  [key=2, style=dotted];
m17_67 -> m17_63  [color=blue, key=0, style=bold];
m17_115 -> m17_61  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_26  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_4  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_6  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_8  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_10  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_12  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_14  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_16  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_18  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_20  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_22  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_24  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_28  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_33  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_88  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_97  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_104  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_108  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_109  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m17_115 -> m17_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m18_30 -> m18_31  [key=0, style=solid];
m18_31 -> m18_32  [key=0, style=solid];
m18_32 -> m18_30  [color=blue, key=0, style=bold];
m18_26 -> m18_27  [key=0, style=solid];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_29  [key=2, style=dotted];
m18_28 -> m18_26  [color=blue, key=0, style=bold];
m18_17 -> m18_33  [key=0, style=solid];
m18_17 -> m18_8  [color=darkorchid, key=3, label="Parameter variable HangFire.Server.WorkerContext context", style=bold];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_35  [key=2, style=dotted];
m18_33 -> m18_36  [key=2, style=dotted];
m18_33 -> m18_37  [key=2, style=dotted];
m18_34 -> m18_17  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_0 -> m18_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_0 -> m18_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_0 -> m18_8  [color=darkseagreen4, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_15  [key=2, style=dotted];
m18_5 -> m18_9  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m18_5 -> m18_11  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_11  [key=0, style=solid];
m18_7 -> m18_7  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_16  [key=2, style=dotted];
m18_2 -> m18_12  [key=0, style=solid];
m18_2 -> n18  [key=2, style=dotted];
m18_4 -> m18_12  [key=0, style=solid];
m18_4 -> m18_14  [key=2, style=dotted];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_8  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_6 -> m18_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_17  [key=2, style=dotted];
m18_9 -> m18_18  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_19  [key=2, style=dotted];
m18_10 -> m18_7  [key=0, style=solid];
m18_10 -> m18_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_12 -> m18_0  [color=blue, key=0, style=bold];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_24  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_25  [key=2, style=dotted];
m18_22 -> m18_22  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_23 -> m18_20  [color=blue, key=0, style=bold];
m18_38 -> m18_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m18_38 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m18_38 -> m18_21  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m18_38 -> m18_27  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_113 -> m19_115  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_113 -> m19_118  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_113 -> m19_114  [key=0, style=solid];
m19_99 -> m19_29  [key=2, style=dotted];
m19_99 -> m19_100  [key=0, style=solid];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_53  [color=blue, key=0, style=bold];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_88  [key=2, style=dotted];
m19_86 -> m19_89  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_86 -> m19_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m19_86 -> m19_91  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_86 -> m19_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_86 -> m19_92  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_86 -> m19_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_86 -> m19_93  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_86 -> m19_95  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m19_86 -> m19_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_87 -> m19_85  [color=blue, key=0, style=bold];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_97  [key=2, style=dotted];
m19_87 -> m19_98  [key=2, style=dotted];
m19_87 -> m19_89  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_87 -> m19_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_87 -> m19_106  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_87 -> m19_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_87 -> m19_94  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_87 -> m19_95  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_87 -> m19_110  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_52 -> m19_53  [color=green, key=0, style=solid];
m19_52 -> m19_45  [color=green, key=2, style=dotted];
m19_52 -> m19_29  [color=green, key=2, style=dotted];
m19_108 -> m19_24  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_53 -> m19_82  [key=0, style=solid];
m19_53 -> m19_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_53 -> m19_51  [color=blue, key=0, style=bold];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_69  [key=2, style=dotted];
m19_82 -> m19_84  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_74  [key=2, style=dotted];
m19_83 -> m19_29  [key=2, style=dotted];
m19_83 -> m19_28  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_77  [key=2, style=dotted];
m19_84 -> m19_84  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m19_84 -> m19_82  [color=blue, key=0, style=bold];
m19_48 -> m19_49  [color=green, key=0, style=solid];
m19_48 -> m19_52  [color=green, key=1, label=addStateSql, style=dashed];
m19_48 -> m19_48  [color=green, key=3, label="Local variable string addStateSql", style=bold];
m19_75 -> m19_73  [color=blue, key=0, style=bold];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_102 -> m19_24  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_102 -> m19_47  [key=2, style=dotted];
m19_103 -> m19_101  [color=blue, key=0, style=bold];
m19_7 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_13  [key=2, style=dotted];
m19_12 -> m19_7  [color=blue, key=0, style=bold];
m19_12 -> m19_11  [key=0, style=solid];
m19_12 -> m19_19  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_43  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m19_41 -> m19_44  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_31 -> m19_35  [color=red, key=1, label=string, style=dashed];
m19_31 -> m19_38  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m19_31 -> m19_41  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_31 -> m19_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_31 -> m19_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_31 -> m19_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_31 -> m19_37  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m19_31 -> m19_24  [key=2, style=dotted];
m19_31 -> m19_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_34  [key=0, style=solid];
m19_32 -> m19_30  [color=blue, key=0, style=bold];
m19_34 -> m19_35  [color=red, key=0, style=solid];
m19_34 -> m19_47  [key=2, style=dotted];
m19_34 -> m19_48  [key=2, style=dotted];
m19_34 -> m19_49  [key=2, style=dotted];
m19_34 -> m19_29  [key=2, style=dotted];
m19_35 -> m19_36  [color=red, key=0, style=solid];
m19_35 -> m19_47  [color=red, key=2, style=dotted];
m19_35 -> m19_50  [color=red, key=2, style=dotted];
m19_35 -> m19_38  [color=red, key=1, label=currentState, style=dashed];
m19_35 -> m19_45  [color=red, key=1, label=currentState, style=dashed];
m19_35 -> m19_33  [color=blue, key=0, style=bold];
m19_38 -> m19_39  [color=green, key=0, style=solid];
m19_38 -> m19_40  [color=red, key=0, style=solid];
m19_38 -> m19_51  [key=2, style=dotted];
m19_38 -> m19_43  [color=green, key=1, label=addAndSetStateSql, style=dashed];
m19_38 -> m19_38  [color=green, key=3, label="Local variable string addAndSetStateSql", style=bold];
m19_42 -> m19_43  [color=green, key=0, style=solid];
m19_42 -> m19_52  [key=2, style=dotted];
m19_42 -> m19_45  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_44 -> m19_40  [color=red, key=0, style=solid];
m19_44 -> m19_53  [key=2, style=dotted];
m19_44 -> m19_42  [color=blue, key=0, style=bold];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_54  [key=2, style=dotted];
m19_33 -> m19_46  [key=0, style=solid];
m19_33 -> m19_30  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_38  [key=0, style=solid];
m19_36 -> m19_39  [color=green, key=1, label=string, style=dashed];
m19_36 -> m19_43  [color=green, key=1, label=string, style=dashed];
m19_37 -> m19_46  [key=0, style=solid];
m19_37 -> m19_39  [color=green, key=1, label=stateData, style=dashed];
m19_37 -> m19_43  [color=green, key=1, label=stateData, style=dashed];
m19_37 -> m19_38  [color=green, key=0, style=solid];
m19_37 -> m19_41  [key=2, style=dotted];
m19_39 -> m19_46  [key=0, style=solid];
m19_39 -> m19_40  [color=green, key=0, style=solid];
m19_39 -> m19_24  [color=green, key=2, style=dotted];
m19_39 -> m19_42  [color=green, key=1, label="lambda expression", style=dashed];
m19_40 -> m19_41  [color=red, key=0, style=solid];
m19_40 -> m19_45  [color=red, key=0, style=solid];
m19_40 -> m19_42  [color=red, key=1, label=filter, style=dashed];
m19_40 -> m19_36  [color=blue, key=0, style=bold];
m19_43 -> m19_44  [color=green, key=0, style=solid];
m19_43 -> m19_40  [color=red, key=0, style=solid];
m19_43 -> m19_45  [color=green, key=2, style=dotted];
m19_43 -> m19_29  [color=green, key=2, style=dotted];
m19_46 -> m19_31  [color=blue, key=0, style=bold];
m19_46 -> m19_49  [color=green, key=1, label=string, style=dashed];
m19_46 -> m19_52  [color=green, key=1, label=string, style=dashed];
m19_46 -> m19_47  [key=0, style=solid];
m19_88 -> m19_86  [color=darkorchid, key=3, label="Parameter variable double score", style=bold];
m19_88 -> m19_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_88 -> m19_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_88 -> m19_85  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m19_88 -> m19_89  [key=0, style=solid];
m19_88 -> m19_94  [color=darkseagreen4, key=1, label=now, style=dashed];
m19_90 -> m19_24  [key=2, style=dotted];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_90 -> m19_93  [key=0, style=solid];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_93  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m19_89 -> m19_89  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
m19_89 -> m19_99  [key=2, style=dotted];
m19_91 -> m19_88  [color=blue, key=0, style=bold];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_72  [key=2, style=dotted];
m19_91 -> m19_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_104 -> m19_105  [key=0, style=solid];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_67 -> m19_77  [key=2, style=dotted];
m19_68 -> m19_24  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_68 -> m19_55  [color=blue, key=0, style=bold];
m19_69 -> m19_67  [color=blue, key=0, style=bold];
m19_47 -> m19_49  [color=green, key=1, label=stateData, style=dashed];
m19_47 -> m19_52  [color=green, key=1, label=stateData, style=dashed];
m19_47 -> m19_48  [color=green, key=0, style=solid];
m19_47 -> m19_41  [key=2, style=dotted];
m19_112 -> m19_110  [color=blue, key=0, style=bold];
m19_100 -> m19_98  [color=blue, key=0, style=bold];
m19_14 -> m19_15  [key=0, style=solid];
m19_15 -> m19_14  [color=blue, key=0, style=bold];
m19_15 -> m19_8  [color=blue, key=0, style=bold];
m19_81 -> m19_79  [color=blue, key=0, style=bold];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_72  [key=2, style=dotted];
m19_60 -> m19_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_60 -> m19_58  [color=blue, key=0, style=bold];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_59  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m19_55 -> m19_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_55 -> m19_55  [color=darkorchid, key=3, label="Local variable string enqueueJobSql", style=bold];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_69  [key=2, style=dotted];
m19_56 -> m19_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_60  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_64  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_66  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_67  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_56 -> m19_24  [key=2, style=dotted];
m19_56 -> m19_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_63  [key=0, style=solid];
m19_57 -> m19_54  [color=blue, key=0, style=bold];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_60  [key=0, style=solid];
m19_58 -> m19_70  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_71  [key=2, style=dotted];
m19_59 -> m19_29  [key=2, style=dotted];
m19_62 -> m19_61  [key=0, style=solid];
m19_62 -> m19_73  [key=2, style=dotted];
m19_62 -> m19_24  [key=2, style=dotted];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_74  [key=2, style=dotted];
m19_63 -> m19_61  [color=blue, key=0, style=bold];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_75  [key=2, style=dotted];
m19_66 -> m19_65  [key=0, style=solid];
m19_66 -> m19_76  [key=2, style=dotted];
m19_66 -> m19_64  [color=blue, key=0, style=bold];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_63  [key=0, style=solid];
m19_61 -> m19_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_67  [key=0, style=solid];
m19_65 -> m19_29  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_14  [color=darkorchid, key=3, label="method methodReturn bool Commit", style=bold];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_16  [key=2, style=dotted];
m19_9 -> m19_17  [key=2, style=dotted];
m19_9 -> m19_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_115 -> m19_24  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_115 -> m19_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_115 -> m19_43  [color=green, key=1, label=string, style=dashed];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_118  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m19_114 -> m19_114  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
m19_114 -> m19_25  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_26  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_27  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_28  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_35  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_40  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_42  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_44  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_45  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_56  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_58  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_59  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_61  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_63  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_65  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_114 -> m19_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m19_116 -> m19_113  [color=blue, key=0, style=bold];
m19_116 -> m19_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_116 -> m19_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_116 -> m19_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_116 -> m19_52  [color=green, key=1, label=string, style=dashed];
m19_24 -> m19_39  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_49  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_146  [key=0, style=solid];
m19_24 -> m19_22  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_31  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_56  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_62  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_68  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_74  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_80  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_90  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_96  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_102  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_108  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_115  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_123  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_133  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_141  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m19_24 -> m19_29  [key=0, style=solid];
m19_24 -> m19_30  [key=2, style=dotted];
m19_146 -> m19_147  [key=0, style=solid];
m19_146 -> m19_148  [key=2, style=dotted];
m19_147 -> m19_24  [color=blue, key=0, style=bold];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m19_16 -> m19_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m19_16 -> m19_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m19_16 -> m19_25  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m19_16 -> m19_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m19_16 -> m19_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m19_16 -> m19_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_19  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_21  [key=0, style=solid];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=0, style=solid];
m19_21 -> m19_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_25  [key=0, style=solid];
m19_23 -> m19_21  [color=blue, key=0, style=bold];
m19_25 -> m19_26  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_29  [key=2, style=dotted];
m19_26 -> m19_28  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_25  [color=blue, key=0, style=bold];
m19_28 -> m19_29  [key=0, style=solid];
m19_18 -> m19_29  [key=0, style=solid];
m19_18 -> m19_30  [key=2, style=dotted];
m19_20 -> m19_29  [key=0, style=solid];
m19_20 -> m19_30  [key=2, style=dotted];
m19_22 -> m19_29  [key=0, style=solid];
m19_22 -> m19_30  [key=2, style=dotted];
m19_22 -> m19_24  [key=2, style=dotted];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_29 -> m19_16  [color=blue, key=0, style=bold];
m19_76 -> m19_77  [key=0, style=solid];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_72  [key=2, style=dotted];
m19_92 -> m19_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_93 -> m19_94  [key=0, style=solid];
m19_93 -> m19_99  [key=2, style=dotted];
m19_93 -> m19_29  [key=2, style=dotted];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_72  [key=2, style=dotted];
m19_95 -> m19_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_95 -> m19_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_100  [key=2, style=dotted];
m19_94 -> m19_99  [key=2, style=dotted];
m19_94 -> m19_92  [color=blue, key=0, style=bold];
m19_96 -> m19_86  [color=blue, key=0, style=bold];
m19_96 -> m19_24  [key=2, style=dotted];
m19_96 -> m19_97  [key=0, style=solid];
m19_96 -> m19_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_79 -> m19_47  [key=2, style=dotted];
m19_79 -> m19_81  [key=2, style=dotted];
m19_80 -> m19_24  [key=2, style=dotted];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_80 -> m19_78  [color=blue, key=0, style=bold];
m19_74 -> m19_24  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_97 -> m19_95  [color=blue, key=0, style=bold];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_107 -> m19_105  [color=blue, key=0, style=bold];
m19_109 -> m19_107  [color=blue, key=0, style=bold];
m19_109 -> m19_110  [key=0, style=solid];
m19_71 -> m19_29  [key=2, style=dotted];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_28  [key=2, style=dotted];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_18  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_20  [key=2, style=dotted];
m19_70 -> m19_71  [key=0, style=solid];
m19_140 -> m19_141  [key=0, style=solid];
m19_140 -> m19_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_141 -> m19_24  [key=2, style=dotted];
m19_141 -> m19_142  [key=0, style=solid];
m19_141 -> m19_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_142 -> m19_140  [color=blue, key=0, style=bold];
m19_143 -> m19_144  [key=0, style=solid];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_76  [color=blue, key=0, style=bold];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_47  [key=2, style=dotted];
m19_106 -> m19_108  [key=2, style=dotted];
m19_106 -> m19_104  [color=blue, key=0, style=bold];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_47  [key=2, style=dotted];
m19_110 -> m19_112  [key=2, style=dotted];
m19_110 -> m19_113  [key=2, style=dotted];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_29  [key=2, style=dotted];
m19_111 -> m19_109  [color=blue, key=0, style=bold];
m19_111 -> m19_29  [key=2, style=dotted];
m19_111 -> m19_112  [key=0, style=solid];
m19_51 -> m19_52  [color=green, key=0, style=solid];
m19_77 -> m19_29  [key=2, style=dotted];
m19_77 -> m19_78  [key=0, style=solid];
m19_118 -> m19_29  [key=2, style=dotted];
m19_118 -> m19_119  [key=0, style=solid];
m19_118 -> m19_106  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_118 -> m19_110  [color=darkseagreen4, key=1, label=properties, style=dashed];
m19_126 -> m19_29  [key=2, style=dotted];
m19_126 -> m19_127  [key=0, style=solid];
m19_128 -> m19_29  [key=2, style=dotted];
m19_128 -> m19_129  [key=0, style=solid];
m19_136 -> m19_29  [key=2, style=dotted];
m19_136 -> m19_137  [key=0, style=solid];
m19_138 -> m19_29  [key=2, style=dotted];
m19_138 -> m19_139  [key=0, style=solid];
m19_144 -> m19_29  [key=2, style=dotted];
m19_144 -> m19_145  [key=0, style=solid];
m19_144 -> m19_28  [key=2, style=dotted];
m19_98 -> m19_99  [key=0, style=solid];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_102  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_128  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_138  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_72 -> m19_70  [color=blue, key=0, style=bold];
m19_119 -> m19_117  [color=blue, key=0, style=bold];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_129  [key=0, style=solid];
m19_129 -> m19_125  [color=blue, key=0, style=bold];
m19_137 -> m19_138  [key=0, style=solid];
m19_137 -> m19_139  [key=0, style=solid];
m19_139 -> m19_135  [color=blue, key=0, style=bold];
m19_145 -> m19_143  [color=blue, key=0, style=bold];
m19_130 -> m19_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_130 -> m19_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_130 -> m19_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_130 -> m19_131  [key=0, style=solid];
m19_133 -> m19_24  [key=2, style=dotted];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_131 -> m19_133  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m19_131 -> m19_138  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m19_131 -> m19_121  [color=darkorchid, key=3, label="Local variable string insertSql", style=bold];
m19_131 -> m19_132  [key=0, style=solid];
m19_132 -> m19_133  [key=0, style=solid];
m19_132 -> m19_136  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_132 -> m19_138  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_132 -> m19_132  [color=darkorchid, key=3, label="Local variable string updateSql", style=bold];
m19_134 -> m19_130  [color=blue, key=0, style=bold];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_0 -> m19_1  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_9  [key=2, style=dotted];
m19_3 -> m19_7  [key=2, style=dotted];
m19_3 -> m19_98  [color=darkorchid, key=3, label="Field variable SqlConnection _connection", style=bold];
m19_1 -> m19_3  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_6  [key=2, style=dotted];
m19_1 -> m19_7  [key=2, style=dotted];
m19_2 -> m19_4  [key=0, style=solid];
m19_2 -> n18  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_8  [key=2, style=dotted];
m19_2 -> m19_7  [key=2, style=dotted];
m19_4 -> m19_0  [color=blue, key=0, style=bold];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_10  [key=2, style=dotted];
m19_4 -> m19_7  [key=2, style=dotted];
m19_120 -> m19_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_120 -> m19_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_120 -> m19_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_120 -> m19_121  [key=0, style=solid];
m19_123 -> m19_24  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_121 -> m19_123  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m19_121 -> m19_128  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m19_121 -> m19_121  [color=darkorchid, key=3, label="Local variable string insertSql", style=bold];
m19_121 -> m19_122  [key=0, style=solid];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_126  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_122 -> m19_128  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_122 -> m19_122  [color=darkorchid, key=3, label="Local variable string updateSql", style=bold];
m19_124 -> m19_120  [color=blue, key=0, style=bold];
m19_5 -> m19_0  [color=blue, key=0, style=bold];
m19_50 -> m19_46  [color=blue, key=0, style=bold];
m19_54 -> m19_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_54 -> m19_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_54 -> m19_55  [key=0, style=solid];
m19_49 -> m19_50  [color=green, key=0, style=solid];
m19_49 -> m19_24  [color=green, key=2, style=dotted];
m19_49 -> m19_51  [color=green, key=1, label="lambda expression", style=dashed];
m19_149 -> m19_39  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_49  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_22  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_62  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_74  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_86  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_96  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_102  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_108  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_115  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_123  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_133  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_141  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_149 -> m19_146  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m19_154 -> m19_43  [color=green, key=1, label="HangFire.Common.States.JobState", style=dashed];
m19_155 -> m19_43  [color=green, key=1, label=stateData, style=dashed];
m19_156 -> m19_43  [color=green, key=1, label=addAndSetStateSql, style=dashed];
m19_158 -> m19_52  [color=green, key=1, label="HangFire.Common.States.JobState", style=dashed];
m19_159 -> m19_52  [color=green, key=1, label=stateData, style=dashed];
m19_160 -> m19_52  [color=green, key=1, label=addStateSql, style=dashed];
m19_150 -> m19_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_151 -> m19_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_152 -> m19_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_161 -> m19_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_162 -> m19_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_163 -> m19_59  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
m19_164 -> m19_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_165 -> m19_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_166 -> m19_71  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_167 -> m19_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_168 -> m19_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_169 -> m19_83  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_170 -> m19_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_171 -> m19_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_172 -> m19_93  [color=darkseagreen4, key=1, label=double, style=dashed];
m19_173 -> m19_93  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m19_174 -> m19_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_175 -> m19_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_176 -> m19_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_177 -> m19_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_178 -> m19_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_179 -> m19_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_180 -> m19_118  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_181 -> m19_118  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_182 -> m19_118  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m19_183 -> m19_126  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_183 -> m19_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_184 -> m19_126  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_184 -> m19_128  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_185 -> m19_128  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m19_186 -> m19_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_186 -> m19_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_187 -> m19_136  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_187 -> m19_138  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
m19_188 -> m19_138  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
m19_189 -> m19_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_190 -> m19_144  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m20_0 -> m20_1  [color=red, key=0, style=solid];
m20_0 -> m20_3  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m20_0 -> m20_5  [color=red, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m20_0 -> m20_6  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_1 -> m20_3  [color=red, key=0, style=solid];
m20_3 -> m20_4  [color=red, key=0, style=solid];
m20_3 -> m20_5  [color=red, key=0, style=solid];
m20_5 -> m20_6  [color=red, key=0, style=solid];
m20_6 -> m20_7  [color=red, key=0, style=solid];
m20_2 -> m20_7  [color=red, key=0, style=solid];
m20_2 -> n18  [color=red, key=2, style=dotted];
m20_4 -> m20_7  [color=red, key=0, style=solid];
m20_4 -> n18  [color=red, key=2, style=dotted];
m20_7 -> m20_0  [color=blue, key=0, style=bold];
m20_9 -> m20_5  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m20_9 -> m20_6  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_92 -> m21_106  [color=red, key=0, style=solid];
m21_92 -> m21_107  [color=red, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_92 -> m21_108  [color=red, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_106 -> m21_107  [color=red, key=0, style=solid];
m21_106 -> m21_55  [color=red, key=2, style=dotted];
m21_106 -> m21_109  [color=red, key=1, label=transaction, style=dashed];
m21_107 -> m21_108  [color=red, key=0, style=solid];
m21_107 -> m21_56  [color=red, key=2, style=dotted];
m21_108 -> m21_109  [color=red, key=0, style=solid];
m21_108 -> m21_57  [color=red, key=2, style=dotted];
m21_109 -> m21_110  [color=red, key=0, style=solid];
m21_109 -> m21_59  [color=red, key=2, style=dotted];
m21_110 -> m21_92  [color=blue, key=0, style=bold];
m21_17 -> m21_138  [key=0, style=solid];
m21_17 -> m21_140  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m21_17 -> m21_142  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m21_17 -> m21_143  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m21_17 -> m21_144  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m21_17 -> m21_9  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobStateHandler handler", style=bold];
m21_138 -> m21_139  [key=0, style=solid];
m21_138 -> m21_140  [key=0, style=solid];
m21_140 -> m21_141  [key=0, style=solid];
m21_140 -> m21_142  [key=0, style=solid];
m21_140 -> m21_122  [key=2, style=dotted];
m21_142 -> m21_143  [key=0, style=solid];
m21_142 -> m21_144  [key=0, style=solid];
m21_142 -> m21_137  [key=2, style=dotted];
m21_143 -> m21_144  [key=0, style=solid];
m21_143 -> m21_146  [key=2, style=dotted];
m21_143 -> m21_147  [key=2, style=dotted];
m21_144 -> m21_145  [key=0, style=solid];
m21_144 -> m21_148  [key=2, style=dotted];
m21_139 -> m21_145  [key=0, style=solid];
m21_139 -> n18  [key=2, style=dotted];
m21_141 -> m21_145  [key=0, style=solid];
m21_141 -> n18  [key=2, style=dotted];
m21_145 -> m21_17  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m21_26 -> m21_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m21_26 -> m21_33  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m21_26 -> m21_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m21_26 -> m21_35  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m21_26 -> m21_36  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m21_26 -> m21_37  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_29  [key=0, style=solid];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_31  [key=0, style=solid];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_33  [key=0, style=solid];
m21_33 -> m21_34  [key=0, style=solid];
m21_33 -> m21_46  [key=2, style=dotted];
m21_33 -> m21_47  [key=2, style=dotted];
m21_33 -> m21_21  [key=2, style=dotted];
m21_33 -> m21_48  [key=2, style=dotted];
m21_33 -> m21_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_49  [key=2, style=dotted];
m21_34 -> m21_50  [key=2, style=dotted];
m21_34 -> m21_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m21_34 -> m21_42  [color=red, key=1, label=jobId, style=dashed];
m21_34 -> m21_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_51  [key=2, style=dotted];
m21_35 -> m21_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m21_35 -> m21_41  [color=red, key=1, label=filterInfo, style=dashed];
m21_36 -> m21_37  [color=red, key=0, style=solid];
m21_36 -> m21_52  [key=2, style=dotted];
m21_36 -> m21_40  [color=red, key=1, label=context, style=dashed];
m21_37 -> m21_38  [color=red, key=0, style=solid];
m21_37 -> m21_53  [color=red, key=2, style=dotted];
m21_37 -> m21_40  [color=red, key=1, label=changingContext, style=dashed];
m21_28 -> m21_45  [key=0, style=solid];
m21_28 -> n18  [key=2, style=dotted];
m21_30 -> m21_45  [key=0, style=solid];
m21_30 -> n18  [key=2, style=dotted];
m21_32 -> m21_45  [key=0, style=solid];
m21_32 -> n18  [key=2, style=dotted];
m21_42 -> m21_43  [color=red, key=0, style=solid];
m21_42 -> m21_58  [color=red, key=2, style=dotted];
m21_44 -> m21_45  [key=0, style=solid];
m21_38 -> m21_39  [color=red, key=0, style=solid];
m21_38 -> m21_54  [key=2, style=dotted];
m21_41 -> m21_42  [color=red, key=0, style=solid];
m21_41 -> m21_57  [color=red, key=2, style=dotted];
m21_40 -> m21_41  [color=red, key=0, style=solid];
m21_40 -> m21_56  [color=red, key=2, style=dotted];
m21_39 -> m21_40  [color=red, key=0, style=solid];
m21_39 -> m21_55  [color=red, key=2, style=dotted];
m21_39 -> m21_42  [color=red, key=1, label=transaction, style=dashed];
m21_39 -> m21_43  [color=red, key=1, label=transaction, style=dashed];
m21_43 -> m21_44  [color=red, key=0, style=solid];
m21_43 -> m21_59  [color=red, key=2, style=dotted];
m21_45 -> m21_26  [color=blue, key=0, style=bold];
m21_57 -> m21_111  [color=red, key=0, style=solid];
m21_57 -> m21_112  [color=red, key=1, label=string, style=dashed];
m21_57 -> m21_113  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_57 -> m21_114  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m21_57 -> m21_115  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_57 -> m21_116  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_57 -> m21_117  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_57 -> m21_118  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_57 -> m21_119  [color=red, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m21_57 -> m21_120  [color=red, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m21_111 -> m21_112  [color=red, key=0, style=solid];
m21_111 -> m21_116  [color=red, key=0, style=solid];
m21_111 -> m21_122  [color=red, key=2, style=dotted];
m21_112 -> m21_113  [color=red, key=0, style=solid];
m21_112 -> m21_114  [color=red, key=0, style=solid];
m21_112 -> m21_123  [color=red, key=2, style=dotted];
m21_113 -> m21_112  [color=red, key=0, style=solid];
m21_113 -> m21_124  [color=red, key=2, style=dotted];
m21_114 -> m21_115  [color=red, key=0, style=solid];
m21_114 -> m21_116  [color=red, key=0, style=solid];
m21_115 -> m21_114  [color=red, key=0, style=solid];
m21_115 -> m21_125  [color=red, key=2, style=dotted];
m21_116 -> m21_117  [color=red, key=0, style=solid];
m21_116 -> m21_126  [color=red, key=2, style=dotted];
m21_117 -> m21_118  [color=red, key=0, style=solid];
m21_117 -> m21_119  [color=red, key=0, style=solid];
m21_117 -> m21_123  [color=red, key=2, style=dotted];
m21_118 -> m21_117  [color=red, key=0, style=solid];
m21_118 -> m21_127  [color=red, key=2, style=dotted];
m21_119 -> m21_120  [color=red, key=0, style=solid];
m21_119 -> m21_121  [color=red, key=0, style=solid];
m21_120 -> m21_119  [color=red, key=0, style=solid];
m21_120 -> m21_128  [color=red, key=2, style=dotted];
m21_121 -> m21_57  [color=blue, key=0, style=bold];
m21_60 -> m21_61  [key=0, style=solid];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_21  [key=2, style=dotted];
m21_19 -> m21_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_18 -> m21_19  [key=0, style=solid];
m21_20 -> m21_18  [color=blue, key=0, style=bold];
m21_22 -> m21_23  [key=0, style=solid];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_25  [key=2, style=dotted];
m21_24 -> m21_22  [color=blue, key=0, style=bold];
m21_61 -> m21_62  [key=0, style=solid];
m21_62 -> m21_60  [color=blue, key=0, style=bold];
m21_54 -> m21_96  [key=0, style=solid];
m21_54 -> m21_97  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_54 -> m21_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_54 -> m21_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_54 -> m21_101  [color=red, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_96 -> m21_97  [key=0, style=solid];
m21_96 -> m21_103  [key=0, style=solid];
m21_96 -> m21_98  [color=darkseagreen4, key=1, label=filter, style=dashed];
m21_97 -> m21_98  [key=0, style=solid];
m21_97 -> m21_99  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m21_97 -> m21_101  [color=red, key=1, label=oldState, style=dashed];
m21_98 -> m21_99  [key=0, style=solid];
m21_98 -> m21_104  [key=2, style=dotted];
m21_99 -> m21_100  [key=0, style=solid];
m21_99 -> m21_96  [key=0, style=solid];
m21_101 -> m21_102  [color=red, key=0, style=solid];
m21_101 -> m21_105  [color=red, key=2, style=dotted];
m21_100 -> m21_101  [color=red, key=0, style=solid];
m21_100 -> m21_55  [key=2, style=dotted];
m21_100 -> m21_102  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m21_102 -> m21_96  [key=0, style=solid];
m21_102 -> m21_59  [key=2, style=dotted];
m21_103 -> m21_54  [color=blue, key=0, style=bold];
m21_63 -> m21_64  [key=0, style=solid];
m21_63 -> m21_66  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m21_63 -> m21_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_63 -> m21_69  [color=red, key=1, label=string, style=dashed];
m21_63 -> m21_73  [color=red, key=1, label="params string[]", style=dashed];
m21_63 -> m21_77  [color=red, key=1, label=string, style=dashed];
m21_63 -> m21_78  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m21_63 -> m21_82  [color=red, key=1, label=string, style=dashed];
m21_63 -> m21_71  [color=red, key=3, label="method methodReturn bool ChangeState", style=bold];
m21_63 -> m21_92  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m21_64 -> m21_65  [key=0, style=solid];
m21_64 -> m21_66  [key=0, style=solid];
m21_64 -> m21_87  [key=2, style=dotted];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_68  [key=0, style=solid];
m21_68 -> m21_69  [color=red, key=0, style=solid];
m21_68 -> m21_88  [key=2, style=dotted];
m21_69 -> m21_70  [color=red, key=0, style=solid];
m21_69 -> m21_89  [color=red, key=2, style=dotted];
m21_69 -> m21_72  [color=red, key=1, label=jobData, style=dashed];
m21_69 -> m21_75  [color=red, key=1, label=jobData, style=dashed];
m21_73 -> m21_74  [color=red, key=0, style=solid];
m21_73 -> m21_75  [color=red, key=0, style=solid];
m21_73 -> m21_90  [color=red, key=2, style=dotted];
m21_77 -> m21_78  [color=red, key=0, style=solid];
m21_77 -> m21_52  [color=red, key=2, style=dotted];
m21_78 -> m21_79  [color=red, key=0, style=solid];
m21_78 -> m21_53  [color=red, key=2, style=dotted];
m21_78 -> m21_80  [color=red, key=1, label=changingContext, style=dashed];
m21_82 -> m21_83  [color=red, key=0, style=solid];
m21_82 -> m21_53  [color=red, key=2, style=dotted];
m21_82 -> m21_52  [color=red, key=2, style=dotted];
m21_82 -> m21_93  [color=red, key=2, style=dotted];
m21_82 -> m21_94  [color=red, key=2, style=dotted];
m21_65 -> m21_86  [key=0, style=solid];
m21_65 -> n18  [key=2, style=dotted];
m21_67 -> m21_86  [key=0, style=solid];
m21_67 -> n18  [key=2, style=dotted];
m21_70 -> m21_71  [color=red, key=0, style=solid];
m21_70 -> m21_72  [color=red, key=0, style=solid];
m21_72 -> m21_73  [color=red, key=0, style=solid];
m21_72 -> m21_78  [color=red, key=1, label=currentState, style=dashed];
m21_72 -> m21_82  [color=red, key=1, label=currentState, style=dashed];
m21_75 -> m21_76  [color=red, key=0, style=solid];
m21_75 -> m21_91  [color=red, key=2, style=dotted];
m21_75 -> m21_77  [color=red, key=1, label=jobMethod, style=dashed];
m21_71 -> m21_86  [color=red, key=0, style=solid];
m21_74 -> m21_86  [color=red, key=0, style=solid];
m21_76 -> m21_77  [color=red, key=0, style=solid];
m21_76 -> m21_51  [color=red, key=2, style=dotted];
m21_76 -> m21_79  [color=red, key=1, label=filterInfo, style=dashed];
m21_76 -> m21_80  [color=red, key=1, label=filterInfo, style=dashed];
m21_79 -> m21_80  [color=red, key=0, style=solid];
m21_79 -> m21_54  [color=red, key=2, style=dotted];
m21_80 -> m21_86  [color=red, key=0, style=solid];
m21_80 -> m21_92  [color=red, key=2, style=dotted];
m21_81 -> m21_82  [color=red, key=0, style=solid];
m21_83 -> m21_86  [color=red, key=0, style=solid];
m21_83 -> m21_95  [color=red, key=2, style=dotted];
m21_83 -> m21_92  [color=red, key=2, style=dotted];
m21_84 -> m21_85  [color=red, key=0, style=solid];
m21_85 -> m21_86  [color=red, key=0, style=solid];
m21_86 -> m21_63  [color=blue, key=0, style=bold];
m21_51 -> m21_129  [key=0, style=solid];
m21_51 -> m21_75  [color=red, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_131  [key=2, style=dotted];
m21_129 -> m21_132  [key=2, style=dotted];
m21_130 -> m21_51  [color=blue, key=0, style=bold];
m21_125 -> m21_12  [color=darkorchid, key=3, label="Field variable System.Func<HangFire.Common.JobMethod, System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>> _getFiltersThunk", style=bold];
m21_123 -> m21_133  [color=red, key=0, style=solid];
m21_123 -> m21_134  [color=red, key=1, label=string, style=dashed];
m21_133 -> m21_134  [color=red, key=0, style=solid];
m21_133 -> m21_135  [color=red, key=0, style=solid];
m21_133 -> m21_137  [color=red, key=2, style=dotted];
m21_134 -> m21_136  [color=red, key=0, style=solid];
m21_135 -> m21_136  [color=red, key=0, style=solid];
m21_135 -> m21_95  [color=red, key=2, style=dotted];
m21_136 -> m21_123  [color=blue, key=0, style=bold];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>", style=dashed];
m21_2 -> m21_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m21_2 -> m21_8  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m21_2 -> m21_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m21_2 -> m21_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m21_2 -> m21_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_15  [key=2, style=dotted];
m21_8 -> m21_16  [key=2, style=dotted];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_13  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_4 -> m21_13  [key=0, style=solid];
m21_4 -> n18  [key=2, style=dotted];
m21_6 -> m21_13  [key=0, style=solid];
m21_6 -> n18  [key=2, style=dotted];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=0, style=solid];
m21_10 -> m21_9  [key=0, style=solid];
m21_10 -> m21_17  [key=2, style=dotted];
m21_13 -> m21_2  [color=blue, key=0, style=bold];
m21_149 -> m21_7  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_10  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_12  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_34  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_37  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_39  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_41  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_69  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_76  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_78  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_79  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_80  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_82  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_83  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_100  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_106  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_108  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_112  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_117  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_129  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_133  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_134  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_142  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_143  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_149 -> m21_144  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m21_150 -> m21_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=2, style=dotted];
m22_2 -> m22_0  [color=blue, key=0, style=bold];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_1  [color=darkorchid, key=3, label="Parameter variable object arg", style=bold];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_6  [key=2, style=dotted];
m22_5 -> m22_3  [color=blue, key=0, style=bold];
m23_24 -> m23_88  [key=0, style=solid];
m23_88 -> m23_89  [key=0, style=solid];
m23_88 -> m23_75  [key=2, style=dotted];
m23_88 -> m23_91  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m23_88 -> m23_92  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m23_89 -> m23_90  [key=0, style=solid];
m23_89 -> m23_105  [key=2, style=dotted];
m23_89 -> m23_99  [color=darkseagreen4, key=1, label=result, style=dashed];
m23_89 -> m23_101  [color=darkseagreen4, key=1, label=result, style=dashed];
m23_91 -> m23_92  [key=0, style=solid];
m23_91 -> m23_101  [key=0, style=solid];
m23_92 -> m23_93  [key=0, style=solid];
m23_92 -> m23_95  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m23_92 -> m23_97  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m23_90 -> m23_91  [key=0, style=solid];
m23_90 -> m23_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_90 -> m23_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_90 -> m23_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_99 -> m23_100  [key=0, style=solid];
m23_99 -> m23_108  [key=2, style=dotted];
m23_101 -> m23_104  [key=0, style=solid];
m23_101 -> m23_109  [key=2, style=dotted];
m23_93 -> m23_94  [key=0, style=solid];
m23_93 -> m23_96  [color=darkseagreen4, key=1, label=argument, style=dashed];
m23_93 -> m23_98  [color=darkseagreen4, key=1, label=argument, style=dashed];
m23_100 -> m23_91  [key=0, style=solid];
m23_100 -> m23_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_95 -> m23_96  [key=0, style=solid];
m23_95 -> m23_97  [key=0, style=solid];
m23_97 -> m23_98  [key=0, style=solid];
m23_97 -> m23_106  [key=2, style=dotted];
m23_94 -> m23_95  [key=0, style=solid];
m23_96 -> m23_99  [key=0, style=solid];
m23_98 -> m23_99  [key=0, style=solid];
m23_98 -> m23_107  [key=2, style=dotted];
m23_102 -> m23_103  [key=0, style=solid];
m23_103 -> m23_104  [key=0, style=solid];
m23_103 -> m23_87  [key=2, style=dotted];
m23_104 -> m23_24  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_3  [color=red, key=1, label="System.Reflection.MethodInfo", style=dashed];
m23_0 -> m23_5  [color=red, key=1, label="string[]", style=dashed];
m23_0 -> m23_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m23_0 -> m23_8  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m23_0 -> m23_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_3  [color=red, key=0, style=solid];
m23_3 -> m23_4  [color=red, key=0, style=solid];
m23_3 -> m23_5  [color=red, key=0, style=solid];
m23_5 -> m23_6  [color=red, key=0, style=solid];
m23_5 -> m23_7  [color=red, key=0, style=solid];
m23_7 -> m23_8  [color=green, key=0, style=solid];
m23_7 -> m23_10  [color=green, key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_5  [color=blue, key=0, style=bold];
m23_9 -> m23_10  [key=0, style=solid];
m23_2 -> m23_11  [key=0, style=solid];
m23_2 -> n18  [key=2, style=dotted];
m23_4 -> m23_11  [color=red, key=0, style=solid];
m23_4 -> n18  [color=red, key=2, style=dotted];
m23_6 -> m23_11  [color=red, key=0, style=solid];
m23_6 -> n18  [color=red, key=2, style=dotted];
m23_6 -> m23_7  [color=green, key=0, style=solid];
m23_6 -> m23_9  [key=2, style=dotted];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_13  [key=2, style=dotted];
m23_11 -> m23_0  [color=blue, key=0, style=bold];
m23_11 -> m23_13  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m23_11 -> m23_12  [key=0, style=solid];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_17  [key=0, style=solid];
m23_141 -> m23_142  [key=0, style=solid];
m23_141 -> m23_143  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m23_141 -> m23_146  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m23_142 -> m23_143  [key=0, style=solid];
m23_142 -> m23_134  [key=2, style=dotted];
m23_143 -> m23_144  [key=0, style=solid];
m23_143 -> m23_145  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m23_146 -> m23_147  [key=0, style=solid];
m23_146 -> m23_148  [key=2, style=dotted];
m23_144 -> m23_145  [key=0, style=solid];
m23_144 -> m23_146  [key=0, style=solid];
m23_145 -> m23_147  [key=0, style=solid];
m23_147 -> m23_141  [color=blue, key=0, style=bold];
m23_23 -> m23_77  [key=0, style=solid];
m23_77 -> m23_78  [key=0, style=solid];
m23_77 -> m23_84  [key=2, style=dotted];
m23_77 -> m23_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_80  [key=0, style=solid];
m23_80 -> m23_83  [key=0, style=solid];
m23_79 -> m23_83  [key=0, style=solid];
m23_79 -> m23_85  [key=2, style=dotted];
m23_79 -> m23_86  [key=2, style=dotted];
m23_81 -> m23_82  [key=0, style=solid];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_87  [key=2, style=dotted];
m23_83 -> m23_23  [color=blue, key=0, style=bold];
m23_13 -> m23_14  [color=green, key=0, style=solid];
m23_13 -> m23_16  [color=green, key=2, style=dotted];
m23_13 -> m23_57  [key=0, style=solid];
m23_12 -> m23_13  [color=green, key=0, style=solid];
m23_12 -> m23_15  [key=2, style=dotted];
m23_14 -> m23_11  [color=blue, key=0, style=bold];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_19  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m23_115 -> m23_116  [key=0, style=solid];
m23_116 -> m23_117  [key=0, style=solid];
m23_116 -> m23_118  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_119  [key=0, style=solid];
m23_117 -> m23_121  [key=0, style=solid];
m23_118 -> m23_119  [key=0, style=solid];
m23_118 -> m23_121  [key=0, style=solid];
m23_118 -> m23_122  [key=2, style=dotted];
m23_119 -> m23_120  [key=0, style=solid];
m23_120 -> m23_121  [key=0, style=solid];
m23_120 -> m23_87  [key=2, style=dotted];
m23_121 -> m23_115  [color=blue, key=0, style=bold];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_23  [key=2, style=dotted];
m23_19 -> m23_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m23_16 -> m23_22  [key=0, style=solid];
m23_16 -> n18  [key=2, style=dotted];
m23_17 -> m23_18  [key=0, style=solid];
m23_17 -> m23_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_20  [key=0, style=solid];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_25  [key=2, style=dotted];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_24  [key=2, style=dotted];
m23_22 -> m23_14  [color=blue, key=0, style=bold];
m23_25 -> m23_110  [key=0, style=solid];
m23_110 -> m23_111  [key=0, style=solid];
m23_110 -> m23_113  [key=0, style=solid];
m23_110 -> m23_114  [key=2, style=dotted];
m23_111 -> m23_112  [key=0, style=solid];
m23_112 -> m23_113  [key=0, style=solid];
m23_112 -> m23_87  [key=2, style=dotted];
m23_113 -> m23_25  [color=blue, key=0, style=bold];
m23_30 -> m23_35  [key=0, style=solid];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_37  [key=2, style=dotted];
m23_35 -> m23_38  [key=2, style=dotted];
m23_36 -> m23_30  [color=blue, key=0, style=bold];
m23_31 -> m23_32  [key=0, style=solid];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_34  [key=2, style=dotted];
m23_32 -> m23_30  [key=2, style=dotted];
m23_33 -> m23_31  [color=blue, key=0, style=bold];
m23_48 -> m23_123  [key=0, style=solid];
m23_48 -> m23_124  [color=darkseagreen4, key=1, label="System.Linq.Expressions.MethodCallExpression", style=dashed];
m23_123 -> m23_124  [key=0, style=solid];
m23_123 -> m23_134  [key=2, style=dotted];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_135  [key=2, style=dotted];
m23_124 -> m23_136  [key=2, style=dotted];
m23_124 -> m23_126  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_137  [key=2, style=dotted];
m23_125 -> m23_131  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m23_125 -> m23_132  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m23_126 -> m23_127  [key=0, style=solid];
m23_126 -> m23_132  [key=0, style=solid];
m23_126 -> m23_128  [color=darkseagreen4, key=1, label=argument, style=dashed];
m23_126 -> m23_129  [color=darkseagreen4, key=1, label=argument, style=dashed];
m23_126 -> m23_130  [color=darkseagreen4, key=1, label=argument, style=dashed];
m23_131 -> m23_126  [key=0, style=solid];
m23_131 -> m23_108  [key=2, style=dotted];
m23_132 -> m23_133  [key=0, style=solid];
m23_132 -> m23_109  [key=2, style=dotted];
m23_127 -> m23_128  [key=0, style=solid];
m23_127 -> m23_131  [color=darkseagreen4, key=1, label=value, style=dashed];
m23_128 -> m23_129  [key=0, style=solid];
m23_128 -> m23_131  [key=0, style=solid];
m23_129 -> m23_130  [key=0, style=solid];
m23_129 -> m23_138  [key=2, style=dotted];
m23_129 -> m23_139  [key=2, style=dotted];
m23_130 -> m23_131  [key=0, style=solid];
m23_130 -> m23_140  [key=2, style=dotted];
m23_133 -> m23_48  [color=blue, key=0, style=bold];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_42  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_42  [key=0, style=solid];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_45  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m23_41 -> m23_46  [key=0, style=solid];
m23_41 -> n18  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_45  [key=0, style=solid];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_0  [key=2, style=dotted];
m23_45 -> m23_48  [key=2, style=dotted];
m23_44 -> m23_46  [key=0, style=solid];
m23_44 -> m23_47  [key=2, style=dotted];
m23_46 -> m23_39  [color=blue, key=0, style=bold];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_59  [key=0, style=solid];
m23_58 -> m23_71  [key=0, style=solid];
m23_58 -> m23_47  [key=2, style=dotted];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> m23_61  [key=0, style=solid];
m23_59 -> m23_72  [key=2, style=dotted];
m23_60 -> m23_71  [key=0, style=solid];
m23_60 -> m23_73  [key=2, style=dotted];
m23_60 -> m23_74  [key=2, style=dotted];
m23_61 -> m23_62  [key=0, style=solid];
m23_61 -> m23_63  [key=0, style=solid];
m23_62 -> m23_71  [key=0, style=solid];
m23_62 -> m23_47  [key=2, style=dotted];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_75  [key=2, style=dotted];
m23_63 -> m23_66  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_66  [key=0, style=solid];
m23_66 -> m23_67  [key=0, style=solid];
m23_66 -> m23_71  [key=0, style=solid];
m23_66 -> m23_69  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m23_65 -> m23_71  [key=0, style=solid];
m23_65 -> m23_76  [key=2, style=dotted];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_69  [key=0, style=solid];
m23_69 -> m23_70  [key=0, style=solid];
m23_69 -> m23_66  [key=0, style=solid];
m23_68 -> m23_71  [key=0, style=solid];
m23_68 -> m23_47  [key=2, style=dotted];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_47  [key=2, style=dotted];
m23_71 -> m23_13  [color=blue, key=0, style=bold];
m23_26 -> m23_27  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_29  [key=2, style=dotted];
m23_27 -> m23_30  [key=2, style=dotted];
m23_28 -> m23_26  [color=blue, key=0, style=bold];
m23_49 -> m23_50  [key=0, style=solid];
m23_49 -> m23_52  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m23_50 -> m23_51  [key=0, style=solid];
m23_50 -> m23_52  [key=0, style=solid];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_55  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m23_51 -> m23_56  [key=0, style=solid];
m23_51 -> n18  [key=2, style=dotted];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_55  [key=0, style=solid];
m23_55 -> m23_56  [key=0, style=solid];
m23_55 -> m23_0  [key=2, style=dotted];
m23_55 -> m23_48  [key=2, style=dotted];
m23_54 -> m23_56  [key=0, style=solid];
m23_54 -> m23_47  [key=2, style=dotted];
m23_56 -> m23_49  [color=blue, key=0, style=bold];
m23_149 -> m23_7  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_8  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_9  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_10  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_18  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_19  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_20  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_21  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_27  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_32  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_57  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_59  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_60  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_61  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_63  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_64  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_77  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_79  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_88  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_89  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_93  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m23_149 -> m23_110  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_9  [key=2, style=dotted];
m24_0 -> m24_1  [color=green, key=0, style=solid];
m24_0 -> m24_2  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m24_1 -> m24_2  [color=green, key=0, style=solid];
m24_1 -> m24_4  [color=green, key=2, style=dotted];
m24_2 -> m24_3  [color=red, key=0, style=solid];
m24_2 -> m24_7  [color=red, key=2, style=dotted];
m24_2 -> m24_10  [color=red, key=1, label="lambda expression", style=dashed];
m24_2 -> m24_5  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_0  [color=blue, key=0, style=bold];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_8  [key=2, style=dotted];
m24_6 -> m24_0  [color=blue, key=0, style=bold];
m24_6 -> m24_7  [color=green, key=0, style=solid];
m24_7 -> m24_8  [color=green, key=0, style=solid];
m24_7 -> m24_9  [color=green, key=2, style=dotted];
m24_8 -> m24_6  [color=blue, key=0, style=bold];
m24_14 -> m24_15  [key=0, style=solid];
m24_10 -> m24_11  [color=red, key=0, style=solid];
m24_11 -> m24_12  [color=red, key=0, style=solid];
m24_11 -> m24_13  [color=red, key=2, style=dotted];
m24_12 -> m24_10  [color=blue, key=0, style=bold];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_17  [key=2, style=dotted];
m24_16 -> m24_14  [color=blue, key=0, style=bold];
m24_18 -> m24_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_18 -> m24_2  [color=red, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_18 -> m24_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_18 -> m24_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_18 -> m24_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m24_18 -> m24_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.StateContextMock", style=dashed];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_25  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan delay", style=bold];
m25_28 -> m25_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m25_28 -> m25_31  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_31  [key=2, style=dotted];
m25_30 -> m25_28  [color=blue, key=0, style=bold];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_16  [key=2, style=dotted];
m25_6 -> m25_10  [key=0, style=solid];
m25_6 -> m25_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_6 -> m25_16  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_6 -> m25_3  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m25_6 -> m25_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m25_6 -> m25_7  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m25_6 -> m25_15  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m25_6 -> m25_0  [color=blue, key=0, style=bold];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_12  [key=0, style=solid];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_21  [key=2, style=dotted];
m25_13 -> m25_16  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_24  [key=2, style=dotted];
m25_11 -> m25_18  [key=0, style=solid];
m25_11 -> n18  [key=2, style=dotted];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_20  [key=2, style=dotted];
m25_12 -> m25_16  [color=darkseagreen4, key=1, label=client, style=dashed];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_22  [key=2, style=dotted];
m25_14 -> m25_16  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m25_14 -> m25_17  [key=2, style=dotted];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_23  [key=2, style=dotted];
m25_15 -> m25_17  [color=darkseagreen4, key=1, label=uniqueId, style=dashed];
m25_15 -> m25_12  [color=blue, key=0, style=bold];
m25_17 -> m25_18  [key=0, style=solid];
m25_18 -> m25_6  [color=blue, key=0, style=bold];
m25_18 -> m25_19  [key=0, style=solid];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=2, style=dotted];
m25_1 -> m25_7  [key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [color=green, key=0, style=solid];
m25_2 -> m25_8  [key=2, style=dotted];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_23  [key=2, style=dotted];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_24  [key=2, style=dotted];
m25_21 -> m25_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_19 -> m25_20  [key=0, style=solid];
m25_19 -> m25_16  [key=2, style=dotted];
m25_22 -> m25_18  [color=blue, key=0, style=bold];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m25_41 -> m25_5  [color=green, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m25_41 -> m25_20  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m25_41 -> m25_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m25_41 -> m25_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m25_41 -> m25_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m25_3 -> m25_4  [color=green, key=0, style=solid];
m25_3 -> m25_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m25_3 -> m25_6  [color=darkorchid, key=3, label="method methodReturn string Async", style=bold];
m25_3 -> m25_9  [color=green, key=2, style=dotted];
m25_3 -> m25_5  [color=green, key=1, label=stateContext, style=dashed];
m25_4 -> m25_5  [color=green, key=0, style=solid];
m25_4 -> m25_6  [color=red, key=2, style=dotted];
m25_4 -> m25_10  [key=2, style=dotted];
m25_5 -> m25_3  [color=blue, key=0, style=bold];
m25_5 -> m25_6  [color=green, key=0, style=solid];
m25_5 -> m25_11  [color=green, key=2, style=dotted];
m25_23 -> m25_43  [key=0, style=solid];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_45  [key=2, style=dotted];
m25_43 -> m25_46  [key=2, style=dotted];
m25_44 -> m25_23  [color=blue, key=0, style=bold];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_6  [key=2, style=dotted];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_34  [key=2, style=dotted];
m25_31 -> m25_35  [key=0, style=solid];
m25_31 -> m25_36  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_31 -> m25_38  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m25_31 -> m25_28  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m25_31 -> m25_1  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m25_31 -> m25_37  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_24  [key=2, style=dotted];
m25_32 -> m25_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_32 -> m25_31  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m25_33 -> m25_29  [color=blue, key=0, style=bold];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_31  [key=2, style=dotted];
m25_34 -> m25_32  [color=blue, key=0, style=bold];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_20  [key=2, style=dotted];
m25_35 -> m25_38  [color=darkseagreen4, key=1, label=client, style=dashed];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_41  [key=2, style=dotted];
m25_36 -> m25_42  [key=2, style=dotted];
m25_36 -> m25_38  [color=darkseagreen4, key=1, label=scheduledState, style=dashed];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_24  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_23  [key=2, style=dotted];
m25_37 -> m25_39  [color=darkseagreen4, key=1, label=uniqueId, style=dashed];
m25_37 -> m25_35  [color=blue, key=0, style=bold];
m25_39 -> m25_40  [key=0, style=solid];
m25_40 -> m25_31  [color=blue, key=0, style=bold];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_28  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_28  [key=2, style=dotted];
m25_27 -> m25_25  [color=blue, key=0, style=bold];
m25_9 -> m25_7  [color=blue, key=0, style=bold];
m26_11 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [color=green, key=0, style=solid];
m26_12 -> m26_8  [key=2, style=dotted];
m26_13 -> m26_14  [color=green, key=0, style=solid];
m26_13 -> m26_9  [color=green, key=2, style=dotted];
m26_13 -> m26_10  [color=green, key=2, style=dotted];
m26_14 -> m26_11  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m26_1 -> m26_2  [key=0, style=solid];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_0  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [color=green, key=0, style=solid];
m26_5 -> m26_6  [color=green, key=0, style=solid];
m26_5 -> m26_8  [color=green, key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_9  [key=2, style=dotted];
m26_6 -> m26_10  [key=2, style=dotted];
m26_7 -> m26_4  [color=blue, key=0, style=bold];
m26_15 -> m26_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m26_15 -> m26_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m26_15 -> m26_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m26_15 -> m26_13  [color=green, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m27_40 -> m27_43  [color=darkseagreen4, key=1, label=table1, style=dashed];
m27_40 -> m27_49  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_42  [color=darkseagreen4, key=1, label=table1, style=dashed];
m27_54 -> m27_47  [key=2, style=dotted];
m27_54 -> m27_55  [key=0, style=solid];
m27_26 -> m27_27  [key=0, style=solid];
m27_25 -> m27_18  [color=blue, key=0, style=bold];
m27_29 -> m27_30  [key=0, style=solid];
m27_29 -> m27_38  [key=2, style=dotted];
m27_89 -> m27_90  [key=0, style=solid];
m27_89 -> m27_52  [key=2, style=dotted];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_29  [key=2, style=dotted];
m27_28 -> m27_26  [color=blue, key=0, style=bold];
m27_28 -> m27_29  [key=0, style=solid];
m27_83 -> m27_68  [color=blue, key=0, style=bold];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_50  [key=2, style=dotted];
m27_82 -> m27_83  [key=0, style=solid];
m27_82 -> m27_26  [key=2, style=dotted];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m27_0 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> n32  [key=2, style=dotted];
m27_3 -> m27_6  [key=2, style=dotted];
m27_4 -> m27_0  [color=blue, key=0, style=bold];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_50  [key=2, style=dotted];
m27_79 -> m27_80  [key=0, style=solid];
m27_79 -> m27_50  [key=2, style=dotted];
m27_84 -> m27_85  [color=green, key=0, style=solid];
m27_13 -> m27_14  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_17  [key=2, style=dotted];
m27_16 -> m27_13  [color=blue, key=0, style=bold];
m27_52 -> m27_43  [color=blue, key=0, style=bold];
m27_98 -> m27_99  [key=0, style=solid];
m27_99 -> m27_47  [key=2, style=dotted];
m27_99 -> m27_100  [key=0, style=solid];
m27_100 -> m27_22  [key=2, style=dotted];
m27_100 -> m27_101  [key=0, style=solid];
m27_101 -> m27_30  [key=2, style=dotted];
m27_101 -> m27_102  [key=0, style=solid];
m27_114 -> m27_115  [key=0, style=solid];
m27_114 -> m27_26  [key=2, style=dotted];
m27_102 -> m27_33  [key=2, style=dotted];
m27_102 -> m27_103  [key=0, style=solid];
m27_113 -> m27_114  [key=0, style=solid];
m27_113 -> m27_52  [key=2, style=dotted];
m27_103 -> m27_52  [key=2, style=dotted];
m27_103 -> m27_104  [key=0, style=solid];
m27_104 -> m27_52  [key=2, style=dotted];
m27_104 -> m27_105  [key=0, style=solid];
m27_112 -> m27_113  [key=0, style=solid];
m27_112 -> m27_51  [key=2, style=dotted];
m27_105 -> m27_48  [key=2, style=dotted];
m27_105 -> m27_106  [key=0, style=solid];
m27_106 -> m27_112  [color=darkseagreen4, key=1, label=table5, style=dashed];
m27_106 -> m27_49  [key=2, style=dotted];
m27_106 -> m27_107  [key=0, style=solid];
m27_106 -> m27_108  [color=darkseagreen4, key=1, label=table5, style=dashed];
m27_106 -> m27_109  [color=darkseagreen4, key=1, label=table5, style=dashed];
m27_106 -> m27_110  [color=darkseagreen4, key=1, label=table5, style=dashed];
m27_106 -> m27_111  [color=darkseagreen4, key=1, label=table5, style=dashed];
m27_111 -> m27_112  [key=0, style=solid];
m27_111 -> m27_50  [key=2, style=dotted];
m27_107 -> m27_50  [key=2, style=dotted];
m27_107 -> m27_108  [key=0, style=solid];
m27_108 -> m27_50  [key=2, style=dotted];
m27_108 -> m27_109  [key=0, style=solid];
m27_109 -> m27_50  [key=2, style=dotted];
m27_109 -> m27_110  [key=0, style=solid];
m27_110 -> m27_50  [key=2, style=dotted];
m27_110 -> m27_111  [key=0, style=solid];
m27_115 -> m27_98  [color=blue, key=0, style=bold];
m27_57 -> m27_33  [key=2, style=dotted];
m27_57 -> m27_58  [key=0, style=solid];
m27_86 -> m27_87  [color=green, key=0, style=solid];
m27_86 -> m27_22  [color=green, key=2, style=dotted];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_33  [key=0, style=solid];
m27_30 -> m27_35  [key=0, style=solid];
m27_30 -> m27_37  [key=0, style=solid];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_39  [key=2, style=dotted];
m27_31 -> m27_33  [key=2, style=dotted];
m27_33 -> m27_34  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_47  [key=2, style=dotted];
m27_32 -> m27_30  [color=blue, key=0, style=bold];
m27_32 -> m27_40  [key=2, style=dotted];
m27_32 -> m27_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_34 -> m27_37  [key=0, style=solid];
m27_34 -> m27_38  [key=2, style=dotted];
m27_34 -> m27_35  [key=0, style=solid];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_41  [key=2, style=dotted];
m27_36 -> m27_42  [key=2, style=dotted];
m27_36 -> m27_22  [key=2, style=dotted];
m27_37 -> m27_28  [color=blue, key=0, style=bold];
m27_37 -> m27_30  [key=2, style=dotted];
m27_37 -> m27_38  [key=0, style=solid];
m27_87 -> m27_88  [color=green, key=0, style=solid];
m27_87 -> m27_30  [color=green, key=2, style=dotted];
m27_53 -> m27_54  [key=0, style=solid];
m27_55 -> m27_22  [key=2, style=dotted];
m27_55 -> m27_56  [key=0, style=solid];
m27_56 -> m27_30  [key=2, style=dotted];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_58  [key=0, style=solid];
m27_56 -> m27_60  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m27_56 -> m27_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m27_56 -> m27_66  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m27_56 -> m27_68  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m27_56 -> m27_70  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m27_56 -> m27_72  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m27_56 -> m27_77  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m27_56 -> m27_32  [color=darkorchid, key=3, label="Parameter variable HangFire.Server.JobPayload payload", style=bold];
m27_66 -> m27_67  [key=0, style=solid];
m27_66 -> m27_26  [key=2, style=dotted];
m27_66 -> m27_82  [key=2, style=dotted];
m27_66 -> m27_69  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m27_66 -> m27_71  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m27_66 -> m27_72  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_51  [key=2, style=dotted];
m27_58 -> m27_52  [key=2, style=dotted];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_60  [key=0, style=solid];
m27_60 -> m27_65  [color=darkseagreen4, key=1, label=table2, style=dashed];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_49  [key=2, style=dotted];
m27_60 -> m27_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m27_60 -> m27_63  [color=darkseagreen4, key=1, label=table2, style=dashed];
m27_60 -> m27_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m27_60 -> m27_79  [key=2, style=dotted];
m27_60 -> m27_77  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m27_64 -> m27_65  [key=0, style=solid];
m27_64 -> m27_50  [key=2, style=dotted];
m27_64 -> m27_41  [color=darkorchid, key=3, label="Parameter variable HangFire.Storage.IStorageConnection connection", style=bold];
m27_64 -> m27_42  [color=darkorchid, key=3, label="Parameter variable HangFire.Server.JobPayload payload", style=bold];
m27_59 -> m27_48  [key=2, style=dotted];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_78  [key=0, style=solid];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_50  [key=2, style=dotted];
m27_61 -> m27_80  [key=2, style=dotted];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_50  [key=2, style=dotted];
m27_62 -> m27_64  [key=0, style=solid];
m27_62 -> m27_81  [key=2, style=dotted];
m27_63 -> m27_64  [key=0, style=solid];
m27_63 -> m27_50  [key=2, style=dotted];
m27_63 -> m27_78  [key=0, style=solid];
m27_67 -> m27_53  [color=blue, key=0, style=bold];
m27_67 -> m27_68  [key=0, style=solid];
m27_67 -> m27_70  [key=0, style=solid];
m27_85 -> m27_86  [color=green, key=0, style=solid];
m27_85 -> m27_47  [color=green, key=2, style=dotted];
m27_88 -> m27_89  [color=green, key=0, style=solid];
m27_88 -> m27_33  [color=green, key=2, style=dotted];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_26  [key=2, style=dotted];
m27_90 -> m27_91  [key=0, style=solid];
m27_90 -> m27_48  [key=2, style=dotted];
m27_90 -> m27_1  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_9  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_14  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_15  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_19  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_20  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_22  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_44  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_45  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_46  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_61  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_72  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_90 -> m27_73  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_95 -> m27_96  [key=0, style=solid];
m27_95 -> m27_51  [key=2, style=dotted];
m27_91 -> m27_95  [color=darkseagreen4, key=1, label=table4, style=dashed];
m27_91 -> m27_92  [key=0, style=solid];
m27_91 -> m27_49  [key=2, style=dotted];
m27_91 -> m27_93  [color=darkseagreen4, key=1, label=table4, style=dashed];
m27_91 -> m27_94  [color=darkseagreen4, key=1, label=table4, style=dashed];
m27_94 -> m27_95  [key=0, style=solid];
m27_94 -> m27_50  [key=2, style=dotted];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_50  [key=2, style=dotted];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_50  [key=2, style=dotted];
m27_97 -> m27_84  [color=blue, key=0, style=bold];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_26  [key=2, style=dotted];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_25  [key=2, style=dotted];
m27_24 -> m27_22  [color=blue, key=0, style=bold];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_27  [key=2, style=dotted];
m27_39 -> m27_48  [key=2, style=dotted];
m27_39 -> m27_40  [key=0, style=solid];
m27_7 -> m27_8  [key=0, style=solid];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_11  [key=2, style=dotted];
m27_8 -> n32  [key=2, style=dotted];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_12  [key=2, style=dotted];
m27_10 -> m27_7  [color=blue, key=0, style=bold];
m27_142 -> m27_143  [key=0, style=solid];
m27_143 -> m27_47  [key=2, style=dotted];
m27_143 -> m27_144  [key=0, style=solid];
m27_144 -> m27_22  [key=2, style=dotted];
m27_144 -> m27_145  [key=0, style=solid];
m27_145 -> m27_30  [key=2, style=dotted];
m27_145 -> m27_146  [key=0, style=solid];
m27_157 -> m27_158  [key=0, style=solid];
m27_157 -> m27_26  [key=2, style=dotted];
m27_146 -> m27_33  [key=2, style=dotted];
m27_146 -> m27_147  [key=0, style=solid];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_52  [key=2, style=dotted];
m27_147 -> m27_52  [key=2, style=dotted];
m27_147 -> m27_148  [key=0, style=solid];
m27_148 -> m27_52  [key=2, style=dotted];
m27_148 -> m27_149  [key=0, style=solid];
m27_150 -> m27_52  [key=2, style=dotted];
m27_150 -> m27_151  [key=0, style=solid];
m27_155 -> m27_156  [key=0, style=solid];
m27_155 -> m27_51  [key=2, style=dotted];
m27_149 -> m27_48  [key=2, style=dotted];
m27_149 -> m27_150  [key=0, style=solid];
m27_151 -> m27_155  [color=darkseagreen4, key=1, label=table7, style=dashed];
m27_151 -> m27_49  [key=2, style=dotted];
m27_151 -> m27_152  [key=0, style=solid];
m27_151 -> m27_153  [color=darkseagreen4, key=1, label=table7, style=dashed];
m27_151 -> m27_154  [color=darkseagreen4, key=1, label=table7, style=dashed];
m27_154 -> m27_155  [key=0, style=solid];
m27_154 -> m27_50  [key=2, style=dotted];
m27_152 -> m27_50  [key=2, style=dotted];
m27_152 -> m27_153  [key=0, style=solid];
m27_153 -> m27_50  [key=2, style=dotted];
m27_153 -> m27_154  [key=0, style=solid];
m27_158 -> m27_142  [color=blue, key=0, style=bold];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_17  [key=2, style=dotted];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_26  [key=2, style=dotted];
m27_45 -> m27_54  [key=2, style=dotted];
m27_38 -> m27_33  [key=2, style=dotted];
m27_38 -> m27_39  [key=0, style=solid];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_52  [key=2, style=dotted];
m27_44 -> m27_53  [key=2, style=dotted];
m27_44 -> m27_50  [color=darkseagreen4, key=1, label=connection, style=dashed];
m27_44 -> m27_51  [color=darkseagreen4, key=1, label=connection, style=dashed];
m27_43 -> m27_44  [key=0, style=solid];
m27_43 -> m27_51  [key=2, style=dotted];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_50  [key=2, style=dotted];
m27_46 -> m27_34  [color=blue, key=0, style=bold];
m27_46 -> m27_47  [key=0, style=solid];
m27_46 -> m27_55  [key=2, style=dotted];
m27_46 -> m27_50  [color=darkseagreen4, key=1, label=payload, style=dashed];
m27_46 -> m27_51  [color=darkseagreen4, key=1, label=payload, style=dashed];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_56  [key=2, style=dotted];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_57  [key=2, style=dotted];
m27_47 -> m27_48  [key=0, style=solid];
m27_47 -> m27_50  [key=0, style=solid];
m27_49 -> m27_52  [key=0, style=solid];
m27_81 -> m27_82  [key=0, style=solid];
m27_81 -> m27_52  [key=2, style=dotted];
m27_127 -> m27_128  [key=0, style=solid];
m27_128 -> m27_47  [key=2, style=dotted];
m27_128 -> m27_129  [key=0, style=solid];
m27_129 -> m27_22  [key=2, style=dotted];
m27_129 -> m27_130  [key=0, style=solid];
m27_130 -> m27_30  [key=2, style=dotted];
m27_130 -> m27_131  [key=0, style=solid];
m27_140 -> m27_141  [key=0, style=solid];
m27_140 -> m27_26  [key=2, style=dotted];
m27_131 -> m27_33  [key=2, style=dotted];
m27_131 -> m27_132  [key=0, style=solid];
m27_139 -> m27_140  [key=0, style=solid];
m27_139 -> m27_52  [key=2, style=dotted];
m27_132 -> m27_52  [key=2, style=dotted];
m27_132 -> m27_133  [key=0, style=solid];
m27_134 -> m27_52  [key=2, style=dotted];
m27_134 -> m27_135  [key=0, style=solid];
m27_138 -> m27_139  [key=0, style=solid];
m27_138 -> m27_51  [key=2, style=dotted];
m27_133 -> m27_48  [key=2, style=dotted];
m27_133 -> m27_134  [key=0, style=solid];
m27_135 -> m27_138  [color=darkseagreen4, key=1, label=table6, style=dashed];
m27_135 -> m27_49  [key=2, style=dotted];
m27_135 -> m27_136  [key=0, style=solid];
m27_135 -> m27_137  [color=darkseagreen4, key=1, label=table6, style=dashed];
m27_137 -> m27_138  [key=0, style=solid];
m27_137 -> m27_50  [key=2, style=dotted];
m27_136 -> m27_50  [key=2, style=dotted];
m27_136 -> m27_137  [key=0, style=solid];
m27_141 -> m27_127  [color=blue, key=0, style=bold];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_83  [key=2, style=dotted];
m27_70 -> m27_71  [key=0, style=solid];
m27_70 -> m27_83  [key=2, style=dotted];
m27_70 -> m27_22  [key=2, style=dotted];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_86  [key=2, style=dotted];
m27_72 -> m27_33  [key=2, style=dotted];
m27_77 -> m27_78  [key=0, style=solid];
m27_77 -> m27_81  [key=2, style=dotted];
m27_77 -> m27_49  [key=2, style=dotted];
m27_77 -> m27_79  [color=darkseagreen4, key=1, label=table3, style=dashed];
m27_77 -> m27_80  [color=darkseagreen4, key=1, label=table3, style=dashed];
m27_69 -> m27_72  [key=0, style=solid];
m27_69 -> m27_84  [key=2, style=dotted];
m27_69 -> m27_73  [color=darkseagreen4, key=1, label=performStrategy, style=dashed];
m27_69 -> m27_47  [key=2, style=dotted];
m27_69 -> m27_70  [key=0, style=solid];
m27_71 -> m27_72  [key=0, style=solid];
m27_71 -> m27_85  [key=2, style=dotted];
m27_71 -> m27_73  [color=darkseagreen4, key=1, label=performStrategy, style=dashed];
m27_71 -> m27_30  [key=2, style=dotted];
m27_73 -> m27_74  [key=0, style=solid];
m27_73 -> m27_87  [key=2, style=dotted];
m27_73 -> m27_52  [key=2, style=dotted];
m27_74 -> m27_75  [key=0, style=solid];
m27_74 -> m27_77  [key=0, style=solid];
m27_74 -> m27_88  [key=2, style=dotted];
m27_74 -> m27_52  [key=2, style=dotted];
m27_75 -> m27_76  [color=red, key=0, style=solid];
m27_75 -> m27_48  [key=2, style=dotted];
m27_76 -> m27_77  [color=red, key=0, style=solid];
m27_76 -> m27_89  [color=red, key=2, style=dotted];
m27_76 -> m27_51  [key=2, style=dotted];
m27_78 -> m27_56  [color=blue, key=0, style=bold];
m27_78 -> m27_50  [key=2, style=dotted];
m27_78 -> m27_79  [key=0, style=solid];
m27_18 -> m27_19  [key=0, style=solid];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_21  [key=0, style=solid];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_13  [key=2, style=dotted];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_24  [key=0, style=solid];
m27_116 -> m27_117  [key=0, style=solid];
m27_117 -> m27_47  [key=2, style=dotted];
m27_117 -> m27_118  [key=0, style=solid];
m27_118 -> m27_22  [key=2, style=dotted];
m27_118 -> m27_119  [key=0, style=solid];
m27_119 -> m27_30  [key=2, style=dotted];
m27_119 -> m27_120  [key=0, style=solid];
m27_125 -> m27_126  [key=0, style=solid];
m27_125 -> m27_26  [key=2, style=dotted];
m27_120 -> m27_33  [key=2, style=dotted];
m27_120 -> m27_121  [key=0, style=solid];
m27_124 -> m27_125  [key=0, style=solid];
m27_124 -> m27_52  [key=2, style=dotted];
m27_122 -> m27_52  [key=2, style=dotted];
m27_122 -> m27_123  [key=0, style=solid];
m27_121 -> m27_48  [key=2, style=dotted];
m27_121 -> m27_122  [key=0, style=solid];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_51  [key=2, style=dotted];
m27_126 -> m27_116  [color=blue, key=0, style=bold];
m27_159 -> m27_86  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_87  [color=green, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_55  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_56  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_114  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_118  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_119  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_125  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_129  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_130  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_140  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_145  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m27_159 -> m27_157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
}
